apply plugin: 'com.android.library'
apply plugin: 'kotlin-multiplatform'
apply plugin: 'maven-publish'

group 'com.example'
version '1.0'

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

kotlin.targets.all {
    compilations.all {
        // KT-29964: check that Android compilations can be configured with an `all { ... }` handler:
        kotlinOptions { 
            verbose = true
        }
        compileKotlinTask.doFirst {
            if (!compileKotlinTask.kotlinOptions.verbose) {
                throw new AssertionError("kotlinOptions were not configured properly")
            }
            println "KT-29964 OK"
        }
    }
}

kotlin {
    sourceSets {
        jvmLibMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib'
            }
        }
        jsLibMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'
            }
        }
    }

    targets {
        fromPreset(presets.android, 'androidLib') {
            attributes {
                attribute(Attribute.of("com.example.target", String), "androidLib")
            }
            compilations.all {
                attributes {
                    attribute(Attribute.of("com.example.compilation", String), compilationName)
                }
            }
        }

        fromPreset(presets.jvm, 'jvmLib')
        fromPreset(presets.js, 'jsLib')
    }
}

publishing {
	repositories {
        maven {
            url = uri("$buildDir/repo")
        }
	}
}