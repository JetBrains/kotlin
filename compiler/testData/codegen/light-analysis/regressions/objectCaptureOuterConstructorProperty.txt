public final class EmptyStream {
    public final static field INSTANCE: EmptyStream
    private method <init>(): void
    public @org.jetbrains.annotations.NotNull method iterator(): java.util.Iterator
}


public final class ObjectCaptureOuterConstructorPropertyKt {
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
}


public interface Stream {
    public abstract @org.jetbrains.annotations.NotNull method iterator(): java.util.Iterator
}


public final class ZippingStream {
    private final @org.jetbrains.annotations.NotNull field stream1: Stream
    private final @org.jetbrains.annotations.NotNull field stream2: Stream
    public method <init>(@org.jetbrains.annotations.NotNull p0: Stream, @org.jetbrains.annotations.NotNull p1: Stream): void
    public final @org.jetbrains.annotations.NotNull method getStream1(): Stream
    public final @org.jetbrains.annotations.NotNull method getStream2(): Stream
    public @org.jetbrains.annotations.NotNull method iterator(): java.util.Iterator
}
