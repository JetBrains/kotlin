package

public final class A : MyClass, Base1, Base1 {
    public constructor A()
    public open override /*2*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*2*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*2*/ /*delegation*/ fun test(): kotlin.String
    public open override /*1*/ /*fake_override*/ fun test2(): kotlin.String
    public open override /*2*/ /*fake_override*/ fun toString(): kotlin.String
}

public interface Base1 {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open fun test(): kotlin.String
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public interface Base2 {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open fun test2(): kotlin.String
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class Delegate1 : Base1 {
    public constructor Delegate1()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun test(): kotlin.String
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class Delegate2 : Base2 {
    public constructor Delegate2()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun test2(): kotlin.String
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public abstract class MyClass : Base1, Base2 {
    public constructor MyClass()
    public open override /*2*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*2*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ fun test(): kotlin.String
    public open override /*1*/ fun test2(): kotlin.String
    public open override /*2*/ /*fake_override*/ fun toString(): kotlin.String
}
