RAW_FIR:
FILE: [ResolvedTo(RAW_FIR)] cyclicHierarchyScript.kts
    SCRIPT: [ResolvedTo(RAW_FIR)] <script-cyclicHierarchyScript.kts>
        [ResolvedTo(RAW_FIR)] <script receiver parameter>: R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface B : A, ResolveMe {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface C : B {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface D : B {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface ResolveMe : F {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface F : D, C {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface NonLoopedInterface : C {
        }


IMPORTS:
FILE: [ResolvedTo(IMPORTS)] cyclicHierarchyScript.kts
    SCRIPT: [ResolvedTo(RAW_FIR)] <script-cyclicHierarchyScript.kts>
        [ResolvedTo(RAW_FIR)] <script receiver parameter>: R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface B : A, ResolveMe {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface C : B {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface D : B {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface ResolveMe : F {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface F : D, C {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface NonLoopedInterface : C {
        }


COMPILER_REQUIRED_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] cyclicHierarchyScript.kts
    SCRIPT: [ResolvedTo(RAW_FIR)] <script-cyclicHierarchyScript.kts>
        [ResolvedTo(RAW_FIR)] <script receiver parameter>: R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface B : A, ResolveMe {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface C : B {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface D : B {
        }

        public final? [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface ResolveMe : F {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface F : D, C {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface NonLoopedInterface : C {
        }


COMPANION_GENERATION:
FILE: [ResolvedTo(IMPORTS)] cyclicHierarchyScript.kts
    SCRIPT: [ResolvedTo(RAW_FIR)] <script-cyclicHierarchyScript.kts>
        [ResolvedTo(RAW_FIR)] <script receiver parameter>: R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface B : A, ResolveMe {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface C : B {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface D : B {
        }

        public final? [ResolvedTo(COMPANION_GENERATION)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface ResolveMe : F {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface F : D, C {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface NonLoopedInterface : C {
        }


SUPER_TYPES:
FILE: [ResolvedTo(IMPORTS)] cyclicHierarchyScript.kts
    SCRIPT: [ResolvedTo(RAW_FIR)] <script-cyclicHierarchyScript.kts>
        [ResolvedTo(RAW_FIR)] <script receiver parameter>: R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface B : <ERROR TYPE REF: Symbol not found for A>, <ERROR TYPE REF: Loop in supertypes involving /B> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface C : <ERROR TYPE REF: Loop in supertypes involving /C> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface D : <ERROR TYPE REF: Loop in supertypes involving /D> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface ResolveMe : <ERROR TYPE REF: Loop in supertypes involving /ResolveMe> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface F : <ERROR TYPE REF: Loop in supertypes involving /F>, <ERROR TYPE REF: Loop in supertypes involving /F> {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface NonLoopedInterface : C {
        }


TYPES:
FILE: [ResolvedTo(IMPORTS)] cyclicHierarchyScript.kts
    SCRIPT: [ResolvedTo(RAW_FIR)] <script-cyclicHierarchyScript.kts>
        [ResolvedTo(RAW_FIR)] <script receiver parameter>: R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface B : <ERROR TYPE REF: Symbol not found for A>, <ERROR TYPE REF: Loop in supertypes involving /B> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface C : <ERROR TYPE REF: Loop in supertypes involving /C> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface D : <ERROR TYPE REF: Loop in supertypes involving /D> {
        }

        public final? [ResolvedTo(TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface ResolveMe : <ERROR TYPE REF: Loop in supertypes involving /ResolveMe> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface F : <ERROR TYPE REF: Loop in supertypes involving /F>, <ERROR TYPE REF: Loop in supertypes involving /F> {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface NonLoopedInterface : C {
        }


STATUS:
FILE: [ResolvedTo(IMPORTS)] cyclicHierarchyScript.kts
    SCRIPT: [ResolvedTo(RAW_FIR)] <script-cyclicHierarchyScript.kts>
        [ResolvedTo(RAW_FIR)] <script receiver parameter>: R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface B : <ERROR TYPE REF: Symbol not found for A>, <ERROR TYPE REF: Loop in supertypes involving /B> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface C : <ERROR TYPE REF: Loop in supertypes involving /C> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface D : <ERROR TYPE REF: Loop in supertypes involving /D> {
        }

        public abstract [ResolvedTo(STATUS)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface ResolveMe : <ERROR TYPE REF: Loop in supertypes involving /ResolveMe> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface F : <ERROR TYPE REF: Loop in supertypes involving /F>, <ERROR TYPE REF: Loop in supertypes involving /F> {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface NonLoopedInterface : C {
        }


EXPECT_ACTUAL_MATCHING:
FILE: [ResolvedTo(IMPORTS)] cyclicHierarchyScript.kts
    SCRIPT: [ResolvedTo(RAW_FIR)] <script-cyclicHierarchyScript.kts>
        [ResolvedTo(RAW_FIR)] <script receiver parameter>: R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface B : <ERROR TYPE REF: Symbol not found for A>, <ERROR TYPE REF: Loop in supertypes involving /B> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface C : <ERROR TYPE REF: Loop in supertypes involving /C> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface D : <ERROR TYPE REF: Loop in supertypes involving /D> {
        }

        public abstract [ResolvedTo(EXPECT_ACTUAL_MATCHING)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface ResolveMe : <ERROR TYPE REF: Loop in supertypes involving /ResolveMe> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface F : <ERROR TYPE REF: Loop in supertypes involving /F>, <ERROR TYPE REF: Loop in supertypes involving /F> {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface NonLoopedInterface : C {
        }


CONTRACTS:
FILE: [ResolvedTo(IMPORTS)] cyclicHierarchyScript.kts
    SCRIPT: [ResolvedTo(TYPES)] <script-cyclicHierarchyScript.kts>
        [ResolvedTo(TYPES)] <script receiver parameter>: R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
        [ResolvedTo(TYPES)] lval args: R|kotlin/Array<kotlin/String>|

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface B : <ERROR TYPE REF: Symbol not found for A>, <ERROR TYPE REF: Loop in supertypes involving /B> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface C : <ERROR TYPE REF: Loop in supertypes involving /C> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface D : <ERROR TYPE REF: Loop in supertypes involving /D> {
        }

        public abstract [ResolvedTo(CONTRACTS)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface ResolveMe : <ERROR TYPE REF: Loop in supertypes involving /ResolveMe> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface F : <ERROR TYPE REF: Loop in supertypes involving /F>, <ERROR TYPE REF: Loop in supertypes involving /F> {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface NonLoopedInterface : C {
        }


IMPLICIT_TYPES_BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] cyclicHierarchyScript.kts
    SCRIPT: [ResolvedTo(TYPES)] <script-cyclicHierarchyScript.kts>
        [ResolvedTo(TYPES)] <script receiver parameter>: R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
        [ResolvedTo(TYPES)] lval args: R|kotlin/Array<kotlin/String>|

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface B : <ERROR TYPE REF: Symbol not found for A>, <ERROR TYPE REF: Loop in supertypes involving /B> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface C : <ERROR TYPE REF: Loop in supertypes involving /C> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface D : <ERROR TYPE REF: Loop in supertypes involving /D> {
        }

        public abstract [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface ResolveMe : <ERROR TYPE REF: Loop in supertypes involving /ResolveMe> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface F : <ERROR TYPE REF: Loop in supertypes involving /F>, <ERROR TYPE REF: Loop in supertypes involving /F> {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface NonLoopedInterface : C {
        }


CONSTANT_EVALUATION:
FILE: [ResolvedTo(IMPORTS)] cyclicHierarchyScript.kts
    SCRIPT: [ResolvedTo(TYPES)] <script-cyclicHierarchyScript.kts>
        [ResolvedTo(TYPES)] <script receiver parameter>: R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
        [ResolvedTo(TYPES)] lval args: R|kotlin/Array<kotlin/String>|

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface B : <ERROR TYPE REF: Symbol not found for A>, <ERROR TYPE REF: Loop in supertypes involving /B> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface C : <ERROR TYPE REF: Loop in supertypes involving /C> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface D : <ERROR TYPE REF: Loop in supertypes involving /D> {
        }

        public abstract [ResolvedTo(CONSTANT_EVALUATION)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface ResolveMe : <ERROR TYPE REF: Loop in supertypes involving /ResolveMe> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface F : <ERROR TYPE REF: Loop in supertypes involving /F>, <ERROR TYPE REF: Loop in supertypes involving /F> {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface NonLoopedInterface : C {
        }


ANNOTATION_ARGUMENTS:
FILE: [ResolvedTo(IMPORTS)] cyclicHierarchyScript.kts
    SCRIPT: [ResolvedTo(TYPES)] <script-cyclicHierarchyScript.kts>
        [ResolvedTo(TYPES)] <script receiver parameter>: R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
        [ResolvedTo(TYPES)] lval args: R|kotlin/Array<kotlin/String>|

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface B : <ERROR TYPE REF: Symbol not found for A>, <ERROR TYPE REF: Loop in supertypes involving /B> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface C : <ERROR TYPE REF: Loop in supertypes involving /C> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface D : <ERROR TYPE REF: Loop in supertypes involving /D> {
        }

        public abstract [ResolvedTo(ANNOTATION_ARGUMENTS)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface ResolveMe : <ERROR TYPE REF: Loop in supertypes involving /ResolveMe> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface F : <ERROR TYPE REF: Loop in supertypes involving /F>, <ERROR TYPE REF: Loop in supertypes involving /F> {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface NonLoopedInterface : C {
        }


BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] cyclicHierarchyScript.kts
    SCRIPT: [ResolvedTo(TYPES)] <script-cyclicHierarchyScript.kts>
        [ResolvedTo(TYPES)] <script receiver parameter>: R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
        [ResolvedTo(TYPES)] lval args: R|kotlin/Array<kotlin/String>|

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface B : <ERROR TYPE REF: Symbol not found for A>, <ERROR TYPE REF: Loop in supertypes involving /B> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface C : <ERROR TYPE REF: Loop in supertypes involving /C> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface D : <ERROR TYPE REF: Loop in supertypes involving /D> {
        }

        public abstract [ResolvedTo(BODY_RESOLVE)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface ResolveMe : <ERROR TYPE REF: Loop in supertypes involving /ResolveMe> {
        }

        public final? [ResolvedTo(SUPER_TYPES)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface F : <ERROR TYPE REF: Loop in supertypes involving /F>, <ERROR TYPE REF: Loop in supertypes involving /F> {
        }

        public final? [ResolvedTo(RAW_FIR)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface NonLoopedInterface : C {
        }


FILE RAW TO BODY:
FILE: [ResolvedTo(BODY_RESOLVE)] cyclicHierarchyScript.kts
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] <script-cyclicHierarchyScript.kts>
        [ResolvedTo(BODY_RESOLVE)] <script receiver parameter>: R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
        [ResolvedTo(BODY_RESOLVE)] lval args: R|kotlin/Array<kotlin/String>|

        public abstract [ResolvedTo(BODY_RESOLVE)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface B : <ERROR TYPE REF: Symbol not found for A>, <ERROR TYPE REF: Loop in supertypes involving /B> {
        }

        public abstract [ResolvedTo(BODY_RESOLVE)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface C : <ERROR TYPE REF: Loop in supertypes involving /C> {
        }

        public abstract [ResolvedTo(BODY_RESOLVE)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface D : <ERROR TYPE REF: Loop in supertypes involving /D> {
        }

        public abstract [ResolvedTo(BODY_RESOLVE)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface ResolveMe : <ERROR TYPE REF: Loop in supertypes involving /ResolveMe> {
        }

        public abstract [ResolvedTo(BODY_RESOLVE)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface F : <ERROR TYPE REF: Loop in supertypes involving /F>, <ERROR TYPE REF: Loop in supertypes involving /F> {
        }

        public abstract [ResolvedTo(BODY_RESOLVE)] [ContainingScriptKey=FirScriptSymbol <script-cyclicHierarchyScript.kts>] interface NonLoopedInterface : R|C| {
        }

