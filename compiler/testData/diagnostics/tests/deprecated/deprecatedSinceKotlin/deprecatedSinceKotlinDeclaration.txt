package

package kotlin {

    package kotlin.sub {
        @kotlin.Deprecated(message = "") @kotlin.DeprecatedSinceKotlin(errorSince = "1.1", hiddenSince = "1.1", warningSince = "1.2") public fun fooDefault(): kotlin.Unit
        @kotlin.Deprecated(level = DeprecationLevel.WARNING, message = "", replaceWith = kotlin.ReplaceWith(expression = "", imports = {})) @kotlin.DeprecatedSinceKotlin public fun fooDefaultWarning(): kotlin.Unit
        @kotlin.Deprecated(message = "") @kotlin.DeprecatedSinceKotlin(errorSince = "1.1", hiddenSince = "1.1", warningSince = "1.1") public fun fooEqual(): kotlin.Unit
        @kotlin.Deprecated(level = DeprecationLevel.ERROR, message = "") @kotlin.DeprecatedSinceKotlin public fun fooError(): kotlin.Unit
        @kotlin.Deprecated(message = "") @kotlin.DeprecatedSinceKotlin(errorSince = "1.3", hiddenSince = "1.2", warningSince = "1.1") public fun fooErrorIsGreater(): kotlin.Unit
        @kotlin.Deprecated(level = DeprecationLevel.HIDDEN, message = "") @kotlin.DeprecatedSinceKotlin public fun fooHidden(): kotlin.Unit
        @kotlin.Deprecated(level = DeprecationLevel.WARNING, message = "") @kotlin.DeprecatedSinceKotlin public fun fooWarning(): kotlin.Unit
        @kotlin.Deprecated(message = "") @kotlin.DeprecatedSinceKotlin(errorSince = "1.0", warningSince = "1.1") public fun fooWarningIsGreater1(): kotlin.Unit
        @kotlin.Deprecated(message = "") @kotlin.DeprecatedSinceKotlin(hiddenSince = "1.0", warningSince = "1.1") public fun fooWarningIsGreater2(): kotlin.Unit
        @kotlin.Deprecated(message = "", replaceWith = kotlin.ReplaceWith(expression = "", imports = {})) @kotlin.DeprecatedSinceKotlin(errorSince = "1.1", hiddenSince = "1.2", warningSince = "1.0") public fun good(): kotlin.Unit

        @kotlin.DeprecatedSinceKotlin public final class Clazz {
            public constructor Clazz()
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }
    }
}
