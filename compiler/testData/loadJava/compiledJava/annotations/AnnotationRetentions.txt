package test

public open class AnnotationRetentions {
    public constructor AnnotationRetentions()

    public final annotation class BaseAnnotation : kotlin.Annotation {
        public constructor BaseAnnotation()
    }

    @test.AnnotationRetentions.BaseAnnotation public/*package*/ open inner class BaseClass {
        public/*package*/ constructor BaseClass()
    }

    @kotlin.annotation.Retention(value = AnnotationRetention.BINARY) public final annotation class BinaryAnnotation : kotlin.Annotation {
        public constructor BinaryAnnotation()
    }

    @test.AnnotationRetentions.BinaryAnnotation public/*package*/ open inner class BinaryClass {
        public/*package*/ constructor BinaryClass()
    }

    @kotlin.annotation.Retention(value = AnnotationRetention.RUNTIME) public final annotation class RuntimeAnnotation : kotlin.Annotation {
        public constructor RuntimeAnnotation()
    }

    @test.AnnotationRetentions.RuntimeAnnotation public/*package*/ open inner class RuntimeClass {
        public/*package*/ constructor RuntimeClass()
    }

    @kotlin.annotation.Retention(value = AnnotationRetention.SOURCE) public final annotation class SourceAnnotation : kotlin.Annotation {
        public constructor SourceAnnotation()
    }

    public/*package*/ open inner class SourceClass {
        public/*package*/ constructor SourceClass()
    }
}
