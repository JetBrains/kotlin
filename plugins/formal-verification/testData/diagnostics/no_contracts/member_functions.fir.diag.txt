/member_functions.kt:(32,42): info: Generated Viper text for member_fun:
field class_Foo$member_x: Ref

method class_Foo$fun_member_fun$fun_take$T_class_global$class_Foo$return$T_Int(this: Ref)
  returns (ret$0: Ref)
  requires acc(T_class_global$class_Foo(this), wildcard)
  ensures acc(T_class_global$class_Foo(this), wildcard)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$intType())
{
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(this), dom$RuntimeType$T_class_global$class_Foo())
  unfold acc(T_class_global$class_Foo(this), wildcard)
  ret$0 := this.class_Foo$member_x
  goto label$ret$0
  label label$ret$0
}

/member_functions.kt:(84,99): info: Generated Viper text for call_member_fun:
field class_Foo$member_x: Ref

method class_Foo$fun_call_member_fun$fun_take$T_class_global$class_Foo$return$T_Unit(this: Ref)
  returns (ret$0: Ref)
  requires acc(T_class_global$class_Foo(this), wildcard)
  ensures acc(T_class_global$class_Foo(this), wildcard)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
{
  var anonymous$0: Ref
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(this), dom$RuntimeType$T_class_global$class_Foo())
  ret$0 := dom$RuntimeType$unitValue()
  anonymous$0 := class_Foo$fun_member_fun$fun_take$T_class_global$class_Foo$return$T_Int(this)
  label label$ret$0
}

method class_Foo$fun_member_fun$fun_take$T_class_global$class_Foo$return$T_Int(this: Ref)
  returns (ret: Ref)
  requires acc(T_class_global$class_Foo(this), wildcard)
  ensures acc(T_class_global$class_Foo(this), wildcard)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$intType())


/member_functions.kt:(140,152): info: Generated Viper text for sibling_call:
field class_Foo$member_x: Ref

method class_Foo$fun_member_fun$fun_take$T_class_global$class_Foo$return$T_Int(this: Ref)
  returns (ret: Ref)
  requires acc(T_class_global$class_Foo(this), wildcard)
  ensures acc(T_class_global$class_Foo(this), wildcard)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$intType())


method class_Foo$fun_sibling_call$fun_take$T_class_global$class_Foo$T_class_global$class_Foo$return$T_Unit(this: Ref,
  local$other: Ref)
  returns (ret$0: Ref)
  requires acc(T_class_global$class_Foo(this), wildcard)
  requires acc(T_class_global$class_Foo(local$other), wildcard)
  ensures acc(T_class_global$class_Foo(this), wildcard)
  ensures acc(T_class_global$class_Foo(local$other), wildcard)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
{
  var anonymous$0: Ref
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(this), dom$RuntimeType$T_class_global$class_Foo())
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$other), dom$RuntimeType$T_class_global$class_Foo())
  ret$0 := dom$RuntimeType$unitValue()
  anonymous$0 := class_Foo$fun_member_fun$fun_take$T_class_global$class_Foo$return$T_Int(local$other)
  label label$ret$0
}

/member_functions.kt:(207,228): info: Generated Viper text for outer_member_fun_call:
field class_Foo$member_x: Ref

method class_Foo$constructor$fun_take$T_Int$return$T_class_global$class_Foo(local$x: Ref)
  returns (ret: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$T_class_global$class_Foo())
  ensures acc(T_class_global$class_Foo(ret), wildcard)
  ensures ret.class_Foo$member_x == local$x


method class_Foo$fun_member_fun$fun_take$T_class_global$class_Foo$return$T_Int(this: Ref)
  returns (ret: Ref)
  requires acc(T_class_global$class_Foo(this), wildcard)
  ensures acc(T_class_global$class_Foo(this), wildcard)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$intType())


method global$fun_outer_member_fun_call$fun_take$$return$T_Unit()
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
{
  var local0$f: Ref
  var anonymous$0: Ref
  ret$0 := dom$RuntimeType$unitValue()
  local0$f := class_Foo$constructor$fun_take$T_Int$return$T_class_global$class_Foo(dom$RuntimeType$intToRef(3))
  anonymous$0 := class_Foo$fun_member_fun$fun_take$T_class_global$class_Foo$return$T_Int(local0$f)
  label label$ret$0
}
