@kotlin.Metadata
synthetic final class C$x$2$1 {
    // source: 'delegateMethodIsNonOverridable.kt'
    enclosing method C.<init>()V
    public final static field INSTANCE: C$x$2$1
    inner (anonymous) class C$x$2$1
    static method <clinit>(): void
    method <init>(): void
    public @org.jetbrains.annotations.Nullable method get(): java.lang.Object
}

@kotlin.Metadata
public class C {
    // source: 'delegateMethodIsNonOverridable.kt'
    private final @org.jetbrains.annotations.NotNull field x$delegate: kotlin.reflect.KProperty0
    inner (anonymous) class C$x$2$1
    public method <init>(): void
    public method getX(): int
    private static method getY$delegate(p0: C): java.lang.Object
    public method getY(): int
}

@kotlin.Metadata
synthetic final class D$x$2$1 {
    // source: 'delegateMethodIsNonOverridable.kt'
    enclosing method D.<init>()V
    public final static field INSTANCE: D$x$2$1
    inner (anonymous) class D$x$2$1
    static method <clinit>(): void
    method <init>(): void
    public @org.jetbrains.annotations.Nullable method get(): java.lang.Object
}

@kotlin.Metadata
public final class D {
    // source: 'delegateMethodIsNonOverridable.kt'
    private final @org.jetbrains.annotations.NotNull field x$delegate: kotlin.reflect.KProperty0
    inner (anonymous) class D$x$2$1
    public method <init>(): void
    public method getX(): int
    private static method getY$delegate(p0: D): java.lang.Object
    public method getY(): int
}

@kotlin.Metadata
public final class DelegateMethodIsNonOverridableKt {
    // source: 'delegateMethodIsNonOverridable.kt'
    private final static field a: int
    private final static field b: int
    static method <clinit>(): void
    public final static method getA(): int
    public final static method getB(): int
}
