FILE[kind=Facade[packageFqName=<root>, facadeFqName=EmptyArgumentsInAnnotationsKt]]
  facadeFqName: EmptyArgumentsInAnnotationsKt
  partSimpleName: "EmptyArgumentsInAnnotationsKt"
  PACKAGE_DIRECTIVE
  IMPORT_LIST
  FUN[fqName=simple, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=simple]
    MODIFIER_LIST[]
      ANNOTATION_ENTRY[hasValueArguments=true, shortName=Ann]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Ann]
        VALUE_ARGUMENT_LIST
          VALUE_ARGUMENT[isSpread=false]
            INTEGER_CONSTANT[kind=INTEGER_CONSTANT, value=1]
          VALUE_ARGUMENT[isSpread=false]
      ANNOTATION_ENTRY[hasValueArguments=true, shortName=Ann]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Ann]
        VALUE_ARGUMENT_LIST
          VALUE_ARGUMENT[isSpread=false]
      ANNOTATION_ENTRY[hasValueArguments=true, shortName=Ann]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Ann]
        VALUE_ARGUMENT_LIST
          VALUE_ARGUMENT[isSpread=false]
            STRING_TEMPLATE
          VALUE_ARGUMENT[isSpread=false]
          VALUE_ARGUMENT[isSpread=false]
            STRING_TEMPLATE
      ANNOTATION_ENTRY[hasValueArguments=true, shortName=Ann]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Ann]
        VALUE_ARGUMENT_LIST
          VALUE_ARGUMENT[isSpread=false]
          VALUE_ARGUMENT[isSpread=false]
            COLLECTION_LITERAL_EXPRESSION[innerExpressionCount=0]
      ANNOTATION_ENTRY[hasValueArguments=true, shortName=Ann]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Ann]
        VALUE_ARGUMENT_LIST
          VALUE_ARGUMENT[isSpread=false]
          VALUE_ARGUMENT[isSpread=false]
            INTEGER_CONSTANT[kind=INTEGER_CONSTANT, value=2]
    VALUE_PARAMETER_LIST
  FUN[fqName=named, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=named]
    MODIFIER_LIST[]
      ANNOTATION_ENTRY[hasValueArguments=true, shortName=Ann]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Ann]
        VALUE_ARGUMENT_LIST
          VALUE_ARGUMENT[isSpread=false]
            VALUE_ARGUMENT_NAME
              REFERENCE_EXPRESSION[referencedName=x]
      ANNOTATION_ENTRY[hasValueArguments=true, shortName=Ann]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Ann]
        VALUE_ARGUMENT_LIST
          VALUE_ARGUMENT[isSpread=false]
            VALUE_ARGUMENT_NAME
              REFERENCE_EXPRESSION[referencedName=x]
      ANNOTATION_ENTRY[hasValueArguments=true, shortName=Ann]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Ann]
        VALUE_ARGUMENT_LIST
          VALUE_ARGUMENT[isSpread=false]
            INTEGER_CONSTANT[kind=INTEGER_CONSTANT, value=1]
          VALUE_ARGUMENT[isSpread=false]
            VALUE_ARGUMENT_NAME
              REFERENCE_EXPRESSION[referencedName=x]
      ANNOTATION_ENTRY[hasValueArguments=true, shortName=Ann]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Ann]
        VALUE_ARGUMENT_LIST
          VALUE_ARGUMENT[isSpread=false]
            VALUE_ARGUMENT_NAME
              REFERENCE_EXPRESSION[referencedName=x]
          VALUE_ARGUMENT[isSpread=false]
            COLLECTION_LITERAL_EXPRESSION[innerExpressionCount=0]
      ANNOTATION_ENTRY[hasValueArguments=true, shortName=Ann]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Ann]
        VALUE_ARGUMENT_LIST
          VALUE_ARGUMENT[isSpread=false]
            VALUE_ARGUMENT_NAME
              REFERENCE_EXPRESSION[referencedName=x]
          VALUE_ARGUMENT[isSpread=false]
            VALUE_ARGUMENT_NAME
              REFERENCE_EXPRESSION[referencedName=y]
      ANNOTATION_ENTRY[hasValueArguments=true, shortName=Ann]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Ann]
        VALUE_ARGUMENT_LIST
          VALUE_ARGUMENT[isSpread=false]
            VALUE_ARGUMENT_NAME
              REFERENCE_EXPRESSION[referencedName=x]
          VALUE_ARGUMENT[isSpread=false]
            VALUE_ARGUMENT_NAME
              REFERENCE_EXPRESSION[referencedName=y]
            COLLECTION_LITERAL_EXPRESSION[innerExpressionCount=0]
    VALUE_PARAMETER_LIST
  FUN[fqName=spread, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=spread]
    MODIFIER_LIST[]
      ANNOTATION_ENTRY[hasValueArguments=true, shortName=Ann]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Ann]
        VALUE_ARGUMENT_LIST
          VALUE_ARGUMENT[isSpread=true]
      ANNOTATION_ENTRY[hasValueArguments=true, shortName=Ann]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Ann]
        VALUE_ARGUMENT_LIST
          VALUE_ARGUMENT[isSpread=false]
            INTEGER_CONSTANT[kind=INTEGER_CONSTANT, value=1]
          VALUE_ARGUMENT[isSpread=true]
      ANNOTATION_ENTRY[hasValueArguments=true, shortName=Ann]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Ann]
        VALUE_ARGUMENT_LIST
          VALUE_ARGUMENT[isSpread=true]
          VALUE_ARGUMENT[isSpread=false]
            INTEGER_CONSTANT[kind=INTEGER_CONSTANT, value=2]
    VALUE_PARAMETER_LIST
  FUN[fqName=mixed, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=mixed]
    MODIFIER_LIST[]
      ANNOTATION_ENTRY[hasValueArguments=true, shortName=Ann]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Ann]
        VALUE_ARGUMENT_LIST
          VALUE_ARGUMENT[isSpread=true]
            VALUE_ARGUMENT_NAME
              REFERENCE_EXPRESSION[referencedName=x]
      ANNOTATION_ENTRY[hasValueArguments=true, shortName=Ann]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Ann]
        VALUE_ARGUMENT_LIST
          VALUE_ARGUMENT[isSpread=true]
            VALUE_ARGUMENT_NAME
              REFERENCE_EXPRESSION[referencedName=x]
      ANNOTATION_ENTRY[hasValueArguments=true, shortName=Ann]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Ann]
        VALUE_ARGUMENT_LIST
          VALUE_ARGUMENT[isSpread=false]
          VALUE_ARGUMENT[isSpread=true]
      ANNOTATION_ENTRY[hasValueArguments=true, shortName=Ann]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Ann]
        VALUE_ARGUMENT_LIST
          VALUE_ARGUMENT[isSpread=false]
            VALUE_ARGUMENT_NAME
              REFERENCE_EXPRESSION[referencedName=x]
          VALUE_ARGUMENT[isSpread=true]
      ANNOTATION_ENTRY[hasValueArguments=true, shortName=Ann]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Ann]
        VALUE_ARGUMENT_LIST
          VALUE_ARGUMENT[isSpread=true]
          VALUE_ARGUMENT[isSpread=false]
            VALUE_ARGUMENT_NAME
              REFERENCE_EXPRESSION[referencedName=y]
    VALUE_PARAMETER_LIST
