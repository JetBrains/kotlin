== operationsWithUndefinedArgument ==
fun operationsWithUndefinedArgument() {
    val a: Int = x + 1
    val b: Int = -x
}
---------------------
L0:
  1 <START>                                         in: INTS{}        BOOLS{} ARRS{}    out: INTS{}        BOOLS{} ARRS{}
  2 mark({ val a: Int = x + 1 val b: Int = -x })    in: INTS{}        BOOLS{} ARRS{}    out: INTS{}        BOOLS{} ARRS{}
    v(val a: Int = x + 1)                           in: INTS{}        BOOLS{} ARRS{}    out: INTS{a:-}     BOOLS{} ARRS{}
    magic[UNRESOLVED_CALL](x) -> <v0>               in: INTS{a:-}     BOOLS{} ARRS{}    out: INTS{a:-}     BOOLS{} ARRS{}
    r(1) -> <v1>                                    in: INTS{a:-}     BOOLS{} ARRS{}    out: INTS{a:-}     BOOLS{} ARRS{}
    magic[VALUE_CONSUMER](1|<v1>) -> <v2>           in: INTS{a:-}     BOOLS{} ARRS{}    out: INTS{a:-}     BOOLS{} ARRS{}
    mark(x + 1)                                     in: INTS{a:-}     BOOLS{} ARRS{}    out: INTS{a:-}     BOOLS{} ARRS{}
    call(x + 1, <ERROR FUNCTION>|<v0>) -> <v3>      in: INTS{a:-}     BOOLS{} ARRS{}    out: INTS{a:-}     BOOLS{} ARRS{}
    w(a|<v3>)                                       in: INTS{a:-}     BOOLS{} ARRS{}    out: INTS{a:?}     BOOLS{} ARRS{}
    v(val b: Int = -x)                              in: INTS{a:?}     BOOLS{} ARRS{}    out: INTS{a:?,b:-} BOOLS{} ARRS{}
    magic[UNRESOLVED_CALL](x) -> <v4>               in: INTS{a:?,b:-} BOOLS{} ARRS{}    out: INTS{a:?,b:-} BOOLS{} ARRS{}
    mark(-x)                                        in: INTS{a:?,b:-} BOOLS{} ARRS{}    out: INTS{a:?,b:-} BOOLS{} ARRS{}
    call(-x, <ERROR FUNCTION>|<v4>) -> <v5>         in: INTS{a:?,b:-} BOOLS{} ARRS{}    out: INTS{a:?,b:-} BOOLS{} ARRS{}
    w(b|<v5>)                                       in: INTS{a:?,b:-} BOOLS{} ARRS{}    out: INTS{a:?,b:?} BOOLS{} ARRS{}
L1:
  1 <END>                                           in: INTS{}        BOOLS{} ARRS{}    out: INTS{}        BOOLS{} ARRS{}
error:
    <ERROR>                                         in: INTS{}        BOOLS{} ARRS{}    out: INTS{}        BOOLS{} ARRS{}
sink:
    <SINK>                                          in: INTS{}        BOOLS{} ARRS{}    out: INTS{}        BOOLS{} ARRS{}
=====================
== incompleteFor ==
fun incompleteFor(a : IntArray) : Int {
    for (n
    return "?"
}
---------------------
L0:
  1 <START>                                                   in: INTS{} BOOLS{} ARRS{}    out: INTS{} BOOLS{} ARRS{}
    v(a : IntArray)                                           in: INTS{} BOOLS{} ARRS{}    out: INTS{} BOOLS{} ARRS{}
    magic[FAKE_INITIALIZER](a : IntArray) -> <v0>             in: INTS{} BOOLS{} ARRS{}    out: INTS{} BOOLS{} ARRS{}
    w(a|<v0>)                                                 in: INTS{} BOOLS{} ARRS{}    out: INTS{} BOOLS{} ARRS{}
  2 mark({ for (n return "?" })                               in: INTS{} BOOLS{} ARRS{}    out: INTS{} BOOLS{} ARRS{}
  3 v(n)                                                      in: INTS{} BOOLS{} ARRS{}    out: INTS{} BOOLS{} ARRS{}
L2 [loop entry point]:
L6 [condition entry point]:
    jmp?(L3)                                                  in: INTS{} BOOLS{} ARRS{}    out: INTS{} BOOLS{} ARRS{}
    magic[LOOP_RANGE_ITERATION](for (n return "?") -> <v1>    in: INTS{} BOOLS{} ARRS{}    out: INTS{} BOOLS{} ARRS{}
    w(n|<v1>)                                                 in: INTS{} BOOLS{} ARRS{}    out: INTS{} BOOLS{} ARRS{}
    mark(for (n return "?")                                   in: INTS{} BOOLS{} ARRS{}    out: INTS{} BOOLS{} ARRS{}
L4 [body entry point]:
    mark("?")                                                 in: INTS{} BOOLS{} ARRS{}    out: INTS{} BOOLS{} ARRS{}
    r("?") -> <v2>                                            in: INTS{} BOOLS{} ARRS{}    out: INTS{} BOOLS{} ARRS{}
    jmp(L2)                                                   in: INTS{} BOOLS{} ARRS{}    out: INTS{} BOOLS{} ARRS{}
L3 [loop exit point]:
L5 [body exit point]:
    read (Unit)                                               in: INTS{} BOOLS{} ARRS{}    out: INTS{} BOOLS{} ARRS{}
L1:
  1 <END>                                                     in: INTS{} BOOLS{} ARRS{}    out: INTS{} BOOLS{} ARRS{}
error:
    <ERROR>                                                   in: INTS{} BOOLS{} ARRS{}    out: INTS{} BOOLS{} ARRS{}
sink:
    <SINK>                                                    in: INTS{} BOOLS{} ARRS{}    out: INTS{} BOOLS{} ARRS{}
=====================
