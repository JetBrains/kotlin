KtFile: local.kt
  PACKAGE_DIRECTIVE
    <empty list>
  IMPORT_LIST
    <empty list>
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      CLASS
        PsiElement(class)('class')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('A1')
        PsiWhiteSpace(' ')
        PRIMARY_CONSTRUCTOR
          PsiElement(constructor)('constructor')
          VALUE_PARAMETER_LIST
            PsiElement(LPAR)('(')
            PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CLASS
        PsiElement(class)('class')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('A2')
      PsiWhiteSpace(' ')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(IDENTIFIER)('Ann')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('private')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('constructor')
        PsiElement(LPAR)('(')
        PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n    ')
      CLASS
        PsiElement(class)('class')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('A3')
        PsiWhiteSpace(' ')
        PRIMARY_CONSTRUCTOR
          MODIFIER_LIST
            PsiElement(private)('private')
            PsiWhiteSpace(' ')
            ANNOTATION_ENTRY
              PsiElement(AT)('@')
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('Ann')
              VALUE_ARGUMENT_LIST
                PsiElement(LPAR)('(')
                VALUE_ARGUMENT
                  STRING_TEMPLATE
                    PsiElement(OPEN_QUOTE)('"')
                    PsiElement(CLOSING_QUOTE)('"')
                PsiElement(RPAR)(')')
          PsiWhiteSpace(' ')
          PsiElement(constructor)('constructor')
          VALUE_PARAMETER_LIST
            PsiElement(LPAR)('(')
            PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CLASS
        PsiElement(class)('class')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('A4')
        PsiWhiteSpace(' ')
        PRIMARY_CONSTRUCTOR
          MODIFIER_LIST
            ANNOTATION_ENTRY
              PsiElement(AT)('@')
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('Ann')
              VALUE_ARGUMENT_LIST
                PsiElement(LPAR)('(')
                VALUE_ARGUMENT
                  STRING_TEMPLATE
                    PsiElement(OPEN_QUOTE)('"')
                    PsiElement(CLOSING_QUOTE)('"')
                PsiElement(RPAR)(')')
          PsiWhiteSpace(' ')
          PsiElement(constructor)('constructor')
          VALUE_PARAMETER_LIST
            PsiElement(LPAR)('(')
            PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n    ')
      CLASS
        PsiElement(class)('class')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('A5')
      PsiWhiteSpace('\n    ')
      REFERENCE_EXPRESSION
        PsiElement(IDENTIFIER)('Ann')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('constructor')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n    ')
      CLASS
        PsiElement(class)('class')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('A6')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('Ann')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            STRING_TEMPLATE
              PsiElement(OPEN_QUOTE)('"')
              PsiElement(CLOSING_QUOTE)('"')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('constructor')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
