package

package test {

    public final annotation class Ann1 : kotlin.Annotation {
        public constructor Ann1(/*0*/ p1: kotlin.Int, /*1*/ p2: kotlin.Byte, /*2*/ p3: kotlin.Short, /*3*/ p4: kotlin.Long, /*4*/ p5: kotlin.Double, /*5*/ p6: kotlin.Float, /*6*/ p7: kotlin.Char, /*7*/ p8: kotlin.Boolean)
        public final val p1: kotlin.Int
        public final val p2: kotlin.Byte
        public final val p3: kotlin.Short
        public final val p4: kotlin.Long
        public final val p5: kotlin.Double
        public final val p6: kotlin.Float
        public final val p7: kotlin.Char
        public final val p8: kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final annotation class Ann2 : kotlin.Annotation {
        public constructor Ann2(/*0*/ p1: kotlin.String)
        public final val p1: kotlin.String
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final annotation class Ann3 : kotlin.Annotation {
        public constructor Ann3(/*0*/ p1: test.Ann1)
        public final val p1: test.Ann1
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final annotation class Ann4 : kotlin.Annotation {
        public constructor Ann4(/*0*/ p1: kotlin.IntArray, /*1*/ p2: kotlin.ByteArray, /*2*/ p3: kotlin.ShortArray, /*3*/ p4: kotlin.LongArray, /*4*/ p5: kotlin.DoubleArray, /*5*/ p6: kotlin.FloatArray, /*6*/ p7: kotlin.CharArray, /*7*/ p8: kotlin.BooleanArray)
        public final val p1: kotlin.IntArray
        public final val p2: kotlin.ByteArray
        public final val p3: kotlin.ShortArray
        public final val p4: kotlin.LongArray
        public final val p5: kotlin.DoubleArray
        public final val p6: kotlin.FloatArray
        public final val p7: kotlin.CharArray
        public final val p8: kotlin.BooleanArray
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final annotation class Ann5 : kotlin.Annotation {
        public constructor Ann5(/*0*/ p1: test.MyEnum)
        public final val p1: test.MyEnum
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final annotation class Ann6 : kotlin.Annotation {
        public constructor Ann6(/*0*/ p: java.lang.Class<*>)
        public final val p: java.lang.Class<*>
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final annotation class Ann7 : kotlin.Annotation {
        public constructor Ann7(/*0*/ p: java.lang.annotation.RetentionPolicy)
        public final val p: java.lang.annotation.RetentionPolicy
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final annotation class Ann8 : kotlin.Annotation {
        public constructor Ann8(/*0*/ p1: kotlin.Array<kotlin.String>, /*1*/ p2: kotlin.Array<java.lang.Class<*>>, /*2*/ p3: kotlin.Array<test.MyEnum>, /*3*/ p4: kotlin.Array<test.Ann1>)
        public final val p1: kotlin.Array<kotlin.String>
        public final val p2: kotlin.Array<java.lang.Class<*>>
        public final val p3: kotlin.Array<test.MyEnum>
        public final val p4: kotlin.Array<test.Ann1>
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final annotation class InAnn1 : kotlin.Annotation {
        public constructor InAnn1(/*0*/ p1: kotlin.Int?, /*1*/ p3: kotlin.Short?, /*2*/ p4: kotlin.Long?, /*3*/ p5: kotlin.Double?, /*4*/ p6: kotlin.Float?, /*5*/ p7: kotlin.Char?, /*6*/ p8: kotlin.Boolean?)
        public final val p1: kotlin.Int?
        public final val p3: kotlin.Short?
        public final val p4: kotlin.Long?
        public final val p5: kotlin.Double?
        public final val p6: kotlin.Float?
        public final val p7: kotlin.Char?
        public final val p8: kotlin.Boolean?
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final annotation class InAnn10 : kotlin.Annotation {
        public constructor InAnn10(/*0*/ p1: kotlin.String?)
        public final val p1: kotlin.String?
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final annotation class InAnn11 : kotlin.Annotation {
        public constructor InAnn11(/*0*/ p1: test.Ann1?)
        public final val p1: test.Ann1?
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final annotation class InAnn12 : kotlin.Annotation {
        public constructor InAnn12(/*0*/ p1: test.MyEnum?)
        public final val p1: test.MyEnum?
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final annotation class InAnn13 : kotlin.Annotation {
        public constructor InAnn13(/*0*/ vararg p1: kotlin.String /*kotlin.Array<out kotlin.String>*/, /*1*/ vararg p2: java.lang.Class<*> /*kotlin.Array<out java.lang.Class<*>>*/, /*2*/ vararg p3: test.MyEnum /*kotlin.Array<out test.MyEnum>*/, /*3*/ vararg p4: test.Ann1 /*kotlin.Array<out test.Ann1>*/, /*4*/ vararg p5: kotlin.Int /*kotlin.IntArray*/)
        public final val p1: kotlin.Array<out kotlin.String>
        public final val p2: kotlin.Array<out java.lang.Class<*>>
        public final val p3: kotlin.Array<out test.MyEnum>
        public final val p4: kotlin.Array<out test.Ann1>
        public final val p5: kotlin.IntArray
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final annotation class InAnn4 : kotlin.Annotation {
        public constructor InAnn4(/*0*/ p1: kotlin.Array<kotlin.Int>, /*1*/ p2: kotlin.Array<kotlin.Int>?)
        public final val p1: kotlin.Array<kotlin.Int>
        public final val p2: kotlin.Array<kotlin.Int>?
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final annotation class InAnn6 : kotlin.Annotation {
        public constructor InAnn6(/*0*/ p: java.lang.Class<*>?)
        public final val p: java.lang.Class<*>?
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final annotation class InAnn7 : kotlin.Annotation {
        public constructor InAnn7(/*0*/ p: java.lang.annotation.RetentionPolicy?)
        public final val p: java.lang.annotation.RetentionPolicy?
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final annotation class InAnn8 : kotlin.Annotation {
        public constructor InAnn8(/*0*/ p1: kotlin.Array<kotlin.Int>, /*1*/ p2: kotlin.Array<kotlin.Int?>, /*2*/ p3: kotlin.Array<test.MyClass>, /*3*/ p4: kotlin.Array<kotlin.IntArray>)
        public final val p1: kotlin.Array<kotlin.Int>
        public final val p2: kotlin.Array<kotlin.Int?>
        public final val p3: kotlin.Array<test.MyClass>
        public final val p4: kotlin.Array<kotlin.IntArray>
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final annotation class InAnn9 : kotlin.Annotation {
        public constructor InAnn9(/*0*/ p: test.MyClass)
        public final val p: test.MyClass
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final class MyClass {
        public constructor MyClass()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final enum class MyEnum : kotlin.Enum<test.MyEnum> {
        enum entry A

        private constructor MyEnum()
        public final override /*1*/ /*fake_override*/ val name: kotlin.String
        public final override /*1*/ /*fake_override*/ val ordinal: kotlin.Int
        protected final override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
        public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: test.MyEnum): kotlin.Int
        public final override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        protected/*protected and package*/ final override /*1*/ /*fake_override*/ /*isHiddenForResolutionEverywhereBesideSupercalls*/ fun finalize(): kotlin.Unit
        public final override /*1*/ /*fake_override*/ /*isHiddenForResolutionEverywhereBesideSupercalls*/ fun getDeclaringClass(): java.lang.Class<test.MyEnum!>!
        public final override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

        // Static members
        public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): test.MyEnum
        public final /*synthesized*/ fun values(): kotlin.Array<test.MyEnum>
    }
}
