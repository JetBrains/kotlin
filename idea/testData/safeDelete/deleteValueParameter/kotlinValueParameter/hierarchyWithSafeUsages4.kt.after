interface Z {
    open fun foo(b: Int)
}

open class A {
    open fun foo(b: Int) {

    }
}

open class B: A(), Z {
    override fun foo(b: Int) {

    }
}

class C: A() {
    override fun foo(b: Int) {

    }
}

class D: B(), Z {
    override fun foo(b: Int) {

    }
}

class U {
    fun bar(a: A) {
        a.foo(2)
    }

    fun bar(b: B) {
        b.foo(4)
    }

    fun bar(c: C) {
        c.foo(6)
    }

    fun bar(d: D) {
        d.foo(8)
    }

    fun bar(z: Z) {
        z.foo(10)
    }
}