package

public fun f(/*0*/ x: kotlin.Any?): kotlin.Unit
public fun f(/*0*/ x: kotlin.Byte): kotlin.Unit
public fun f(/*0*/ x: kotlin.Char): kotlin.Unit
public fun g(/*0*/ x: B<kotlin.Int>): kotlin.Unit
public fun g(/*0*/ i: kotlin.Int): kotlin.Unit

public interface A</*0*/ T> {
    public abstract val content: T
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public abstract class B</*0*/ T : kotlin.Any!> : A<T!> {
    public constructor B</*0*/ T : kotlin.Any!>()
    public abstract override /*1*/ /*fake_override*/ val content: T!
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
