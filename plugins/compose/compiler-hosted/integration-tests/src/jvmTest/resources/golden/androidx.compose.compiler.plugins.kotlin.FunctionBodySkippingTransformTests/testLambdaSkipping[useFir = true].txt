//
// Source
// ------------------------------------------

import androidx.compose.runtime.Composable
import androidx.compose.runtime.NonRestartableComposable
import androidx.compose.runtime.ReadOnlyComposable


fun LazyListScope.Example(items: LazyPagingItems<User>) {
    itemsIndexed(items) { index, user ->
        print("Hello World")
    }
}

//
// Transformed IR
// ------------------------------------------

fun LazyListScope.Example(items: LazyPagingItems<User>) {
  itemsIndexed(items, ComposableSingletons%TestKt.lambda%-2123538558)
}
internal object ComposableSingletons%TestKt {
  val lambda%-2123538558: @[ExtensionFunctionType] Function5<LazyItemScope, Int, User?, Composer, Int, Unit> = composableLambdaInstance(<>, false) { index: Int, user: User?, %composer: Composer?, %changed: Int ->
    sourceInformation(%composer, "invalid source info at 1: 'CN(index,user):Test.kt'")
    if (%composer.shouldExecute(%changed and 0b010000000001 != 0b010000000000, %changed and 0b0001)) {
      if (isTraceInProgress()) {
        traceEventStart(<>, %changed, -1, <>)
      }
      print("Hello World")
      if (isTraceInProgress()) {
        traceEventEnd()
      }
    } else {
      %composer.skipToGroupEnd()
    }
  }
}
