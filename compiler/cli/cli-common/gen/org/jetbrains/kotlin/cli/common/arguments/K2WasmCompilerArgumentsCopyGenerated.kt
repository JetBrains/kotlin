@file:Suppress("unused", "DuplicatedCode")

// DO NOT EDIT MANUALLY!
// Generated by generators/tests/org/jetbrains/kotlin/generators/arguments/GenerateCompilerArgumentsCopy.kt
// To regenerate run 'generateCompilerArgumentsCopy' task

package org.jetbrains.kotlin.cli.common.arguments

@OptIn(org.jetbrains.kotlin.utils.IDEAPluginsCompatibilityAPI::class)
fun copyK2WasmCompilerArguments(from: K2WasmCompilerArguments, to: K2WasmCompilerArguments): K2WasmCompilerArguments {
    copyCommonKlibBasedCompilerArguments(from, to)

    to.debuggerCustomFormatters = from.debuggerCustomFormatters
    to.generateDwarf = from.generateDwarf
    to.icCacheReadonly = from.icCacheReadonly
    to.includeUnavailableSourcesIntoSourceMap = from.includeUnavailableSourcesIntoSourceMap
    to.irDceDumpDeclarationIrSizesToFile = from.irDceDumpDeclarationIrSizesToFile
    to.irDceDumpReachabilityInfoToFile = from.irDceDumpReachabilityInfoToFile
    to.preserveIcOrder = from.preserveIcOrder
    to.wasm = from.wasm
    to.wasmDebug = from.wasmDebug
    to.wasmEnableArrayRangeChecks = from.wasmEnableArrayRangeChecks
    to.wasmEnableAsserts = from.wasmEnableAsserts
    to.wasmGenerateWat = from.wasmGenerateWat
    to.wasmKClassFqn = from.wasmKClassFqn
    to.wasmTarget = from.wasmTarget
    to.wasmUseJsTag = from.wasmUseJsTag
    to.wasmUseNewExceptionProposal = from.wasmUseNewExceptionProposal
    to.wasmUseTrapsInsteadOfExceptions = from.wasmUseTrapsInsteadOfExceptions

    return to
}
