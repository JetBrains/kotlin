Anno.class:
  FILE[kind=File[packageFqName=<root>]]
    PACKAGE_DIRECTIVE
    IMPORT_LIST
    CLASS[classId=/Anno, fqName=Anno, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=Anno, superNames=[Annotation]]
      MODIFIER_LIST[public final annotation]
        ANNOTATION_ENTRY[hasValueArguments=false, shortName=Target]
          valueArguments: [ allowedTargets -> [AnnotationTarget.EXPRESSION] ]
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=annotation]
                REFERENCE_EXPRESSION[referencedName=Target]
        ANNOTATION_ENTRY[hasValueArguments=false, shortName=Retention]
          valueArguments: [ value -> AnnotationRetention.SOURCE ]
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=annotation]
                REFERENCE_EXPRESSION[referencedName=Retention]
      PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Anno]
        MODIFIER_LIST[public]
        VALUE_PARAMETER_LIST
      SUPER_TYPE_LIST
        SUPER_TYPE_ENTRY
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=Annotation]
      CLASS_BODY


CheckKt.class:
  FILE[kind=Facade[packageFqName=<root>, facadeFqName=CheckKt]]
    facadeFqName: CheckKt
    partSimpleName: "CheckKt"
    PACKAGE_DIRECTIVE
    IMPORT_LIST
    FUN[fqName=myCheck, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=true, isTopLevel=true, mayHaveContract=true, name=myCheck]
      contract: [ effect:Returns(WILDCARD) -> param(0) ]
      origin: Facade(className=CheckKt, jvmClassName=null)
      MODIFIER_LIST[public]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Boolean]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=x]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=Boolean]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Boolean]
