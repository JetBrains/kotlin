// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: compiler/ir/serialization.common/src/KotlinIr.proto
// Protobuf Java Version: 4.29.3

package org.jetbrains.kotlin.backend.common.serialization.proto;

public interface IdSignatureOrBuilder extends
    // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.backend.common.serialization.proto.IdSignature)
    org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.CommonIdSignature public_sig = 1;</code>
   * @return Whether the publicSig field is set.
   */
  boolean hasPublicSig();
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.CommonIdSignature public_sig = 1;</code>
   * @return The publicSig.
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.CommonIdSignature getPublicSig();

  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FileLocalIdSignature private_sig = 2;</code>
   * @return Whether the privateSig field is set.
   */
  boolean hasPrivateSig();
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FileLocalIdSignature private_sig = 2;</code>
   * @return The privateSig.
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.FileLocalIdSignature getPrivateSig();

  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.AccessorIdSignature accessor_sig = 3;</code>
   * @return Whether the accessorSig field is set.
   */
  boolean hasAccessorSig();
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.AccessorIdSignature accessor_sig = 3;</code>
   * @return The accessorSig.
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.AccessorIdSignature getAccessorSig();

  /**
   * <code>int32 scoped_local_sig = 4;</code>
   * @return Whether the scopedLocalSig field is set.
   */
  boolean hasScopedLocalSig();
  /**
   * <code>int32 scoped_local_sig = 4;</code>
   * @return The scopedLocalSig.
   */
  int getScopedLocalSig();

  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.CompositeSignature composite_sig = 5;</code>
   * @return Whether the compositeSig field is set.
   */
  boolean hasCompositeSig();
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.CompositeSignature composite_sig = 5;</code>
   * @return The compositeSig.
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.CompositeSignature getCompositeSig();

  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature local_sig = 6;</code>
   * @return Whether the localSig field is set.
   */
  boolean hasLocalSig();
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature local_sig = 6;</code>
   * @return The localSig.
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature getLocalSig();

  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FileSignature file_sig = 7;</code>
   * @return Whether the fileSig field is set.
   */
  boolean hasFileSig();
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FileSignature file_sig = 7;</code>
   * @return The fileSig.
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.FileSignature getFileSig();

  public org.jetbrains.kotlin.backend.common.serialization.proto.IdSignature.IdSigCase getIdSigCase();
}