KtFile: AnnotatedIntersections.kt
  PACKAGE_DIRECTIVE
    <empty list>
  IMPORT_LIST
    <empty list>
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      TYPE_PARAMETER
        PsiElement(IDENTIFIER)('T')
      PsiElement(GT)('>')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo1')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('x')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          MODIFIER_LIST
            ANNOTATION_ENTRY
              PsiElement(AT)('@')
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('ann')
          PsiWhiteSpace(' ')
          INTERSECTION_TYPE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('T')
            PsiWhiteSpace(' ')
            PsiElement(AND)('&')
            PsiWhiteSpace(' ')
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('Any')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      TYPE_PARAMETER
        PsiElement(IDENTIFIER)('T')
      PsiElement(GT)('>')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo2')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('x')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('List')
            TYPE_ARGUMENT_LIST
              PsiElement(LT)('<')
              TYPE_PROJECTION
                TYPE_REFERENCE
                  MODIFIER_LIST
                    ANNOTATION_ENTRY
                      PsiElement(AT)('@')
                      CONSTRUCTOR_CALLEE
                        TYPE_REFERENCE
                          USER_TYPE
                            REFERENCE_EXPRESSION
                              PsiElement(IDENTIFIER)('ann')
                  PsiWhiteSpace(' ')
                  INTERSECTION_TYPE
                    TYPE_REFERENCE
                      USER_TYPE
                        REFERENCE_EXPRESSION
                          PsiElement(IDENTIFIER)('T')
                    PsiWhiteSpace(' ')
                    PsiElement(AND)('&')
                    PsiWhiteSpace(' ')
                    TYPE_REFERENCE
                      USER_TYPE
                        REFERENCE_EXPRESSION
                          PsiElement(IDENTIFIER)('Any')
              PsiElement(GT)('>')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      TYPE_PARAMETER
        PsiElement(IDENTIFIER)('T')
      PsiElement(GT)('>')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo3')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('x')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('List')
            TYPE_ARGUMENT_LIST
              PsiElement(LT)('<')
              TYPE_PROJECTION
                MODIFIER_LIST
                  PsiElement(out)('out')
                PsiWhiteSpace(' ')
                TYPE_REFERENCE
                  MODIFIER_LIST
                    ANNOTATION_ENTRY
                      PsiElement(AT)('@')
                      CONSTRUCTOR_CALLEE
                        TYPE_REFERENCE
                          USER_TYPE
                            REFERENCE_EXPRESSION
                              PsiElement(IDENTIFIER)('ann')
                  PsiWhiteSpace(' ')
                  INTERSECTION_TYPE
                    TYPE_REFERENCE
                      USER_TYPE
                        REFERENCE_EXPRESSION
                          PsiElement(IDENTIFIER)('T')
                    PsiWhiteSpace(' ')
                    PsiElement(AND)('&')
                    PsiWhiteSpace(' ')
                    TYPE_REFERENCE
                      USER_TYPE
                        REFERENCE_EXPRESSION
                          PsiElement(IDENTIFIER)('Any')
              PsiElement(GT)('>')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      TYPE_PARAMETER
        PsiElement(IDENTIFIER)('T')
      PsiElement(GT)('>')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo4')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('x')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          MODIFIER_LIST
            ANNOTATION_ENTRY
              PsiElement(AT)('@')
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('ann')
          PsiWhiteSpace(' ')
          PsiElement(LPAR)('(')
          INTERSECTION_TYPE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('T')
            PsiWhiteSpace(' ')
            PsiElement(AND)('&')
            PsiWhiteSpace(' ')
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('Any')
          PsiElement(RPAR)(')')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      TYPE_PARAMETER
        PsiElement(IDENTIFIER)('T')
      PsiElement(GT)('>')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo5')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('x')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          MODIFIER_LIST
            ANNOTATION_ENTRY
              PsiElement(AT)('@')
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('ann')
          PsiWhiteSpace(' ')
          INTERSECTION_TYPE
            TYPE_REFERENCE
              NULLABLE_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('T')
                PsiElement(QUEST)('?')
            PsiWhiteSpace(' ')
            PsiElement(AND)('&')
            PsiWhiteSpace(' ')
            TYPE_REFERENCE
              NULLABLE_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('Any')
                PsiElement(QUEST)('?')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      TYPE_PARAMETER
        PsiElement(IDENTIFIER)('T')
      PsiElement(GT)('>')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo6')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('x')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          MODIFIER_LIST
            ANNOTATION_ENTRY
              PsiElement(AT)('@')
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('ann')
          PsiWhiteSpace(' ')
          INTERSECTION_TYPE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('T')
            PsiWhiteSpace(' ')
            PsiElement(AND)('&')
            PsiWhiteSpace(' ')
            TYPE_REFERENCE
              INTERSECTION_TYPE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('Any')
                PsiWhiteSpace(' ')
                PsiElement(AND)('&')
                PsiWhiteSpace(' ')
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('Any')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      TYPE_PARAMETER
        PsiElement(IDENTIFIER)('T')
      PsiElement(GT)('>')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo7')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('x')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          MODIFIER_LIST
            ANNOTATION_ENTRY
              PsiElement(AT)('@')
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('ann')
          PsiWhiteSpace(' ')
          INTERSECTION_TYPE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('T')
            PsiWhiteSpace(' ')
            PsiElement(AND)('&')
            PsiWhiteSpace(' ')
            TYPE_REFERENCE
              PsiElement(LPAR)('(')
              INTERSECTION_TYPE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('Any')
                PsiWhiteSpace(' ')
                PsiElement(AND)('&')
                PsiWhiteSpace(' ')
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('Any')
              PsiElement(RPAR)(')')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      TYPE_PARAMETER
        PsiElement(IDENTIFIER)('T')
      PsiElement(GT)('>')
    PsiWhiteSpace(' ')
    PsiErrorElement:Annotations are not allowed in this position
      ANNOTATION_ENTRY
        PsiElement(AT)('@')
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('ann')
        PsiWhiteSpace(' ')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('T')
          PsiWhiteSpace(' ')
          PsiErrorElement:Expecting ')'
            PsiElement(AND)('&')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('Any')
    PsiErrorElement:Expecting '('
      <empty list>
  PsiErrorElement:Expecting a top level declaration
    PsiElement(RPAR)(')')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(DOT)('.')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(IDENTIFIER)('foo8')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(LPAR)('(')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(RPAR)(')')
  PsiWhiteSpace(' ')
  FUN
    PsiErrorElement:Expecting a top level declaration
      <empty list>
    BLOCK
      PsiElement(LBRACE)('{')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      TYPE_PARAMETER
        PsiElement(IDENTIFIER)('T')
      PsiElement(GT)('>')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo10')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('x')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          MODIFIER_LIST
            ANNOTATION_ENTRY
              PsiElement(AT)('@')
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('ann')
          PsiWhiteSpace(' ')
          INTERSECTION_TYPE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('T')
            PsiWhiteSpace(' ')
            PsiElement(AND)('&')
            PsiWhiteSpace(' ')
            TYPE_REFERENCE
              FUNCTION_TYPE
                FUNCTION_TYPE_RECEIVER
                  TYPE_REFERENCE
                    USER_TYPE
                      REFERENCE_EXPRESSION
                        PsiElement(IDENTIFIER)('Any')
                PsiElement(DOT)('.')
                VALUE_PARAMETER_LIST
                  PsiElement(LPAR)('(')
                  PsiElement(RPAR)(')')
                PsiWhiteSpace(' ')
                PsiElement(ARROW)('->')
                PsiWhiteSpace(' ')
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('Unit')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      TYPE_PARAMETER
        PsiElement(IDENTIFIER)('T')
      PsiElement(GT)('>')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo11')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('x')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          MODIFIER_LIST
            ANNOTATION_ENTRY
              PsiElement(AT)('@')
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('ann')
          PsiWhiteSpace(' ')
          FUNCTION_TYPE
            FUNCTION_TYPE_RECEIVER
              TYPE_REFERENCE
                PsiElement(LPAR)('(')
                INTERSECTION_TYPE
                  TYPE_REFERENCE
                    USER_TYPE
                      REFERENCE_EXPRESSION
                        PsiElement(IDENTIFIER)('T')
                  PsiWhiteSpace(' ')
                  PsiElement(AND)('&')
                  PsiWhiteSpace(' ')
                  TYPE_REFERENCE
                    USER_TYPE
                      REFERENCE_EXPRESSION
                        PsiElement(IDENTIFIER)('Any')
                PsiElement(RPAR)(')')
            PsiElement(DOT)('.')
            VALUE_PARAMETER_LIST
              PsiElement(LPAR)('(')
              PsiElement(RPAR)(')')
            PsiWhiteSpace(' ')
            PsiElement(ARROW)('->')
            PsiWhiteSpace(' ')
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('Unit')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiElement(RBRACE)('}')