// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: compiler/ir/serialization.common/src/KotlinIr.proto
// Protobuf Java Version: 4.29.3

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * Protobuf enum {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrSyntheticBodyKind}
 */
public enum IrSyntheticBodyKind
    implements org.jetbrains.kotlin.protobuf.ProtocolMessageEnum {
  /**
   * <code>ENUM_VALUES = 1;</code>
   */
  ENUM_VALUES(1),
  /**
   * <code>ENUM_VALUEOF = 2;</code>
   */
  ENUM_VALUEOF(2),
  /**
   * <code>ENUM_ENTRIES = 3;</code>
   */
  ENUM_ENTRIES(3),
  ;

  static {
    org.jetbrains.kotlin.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      org.jetbrains.kotlin.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      IrSyntheticBodyKind.class.getName());
  }
  /**
   * <code>ENUM_VALUES = 1;</code>
   */
  public static final int ENUM_VALUES_VALUE = 1;
  /**
   * <code>ENUM_VALUEOF = 2;</code>
   */
  public static final int ENUM_VALUEOF_VALUE = 2;
  /**
   * <code>ENUM_ENTRIES = 3;</code>
   */
  public static final int ENUM_ENTRIES_VALUE = 3;


  public final int getNumber() {
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static IrSyntheticBodyKind valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static IrSyntheticBodyKind forNumber(int value) {
    switch (value) {
      case 1: return ENUM_VALUES;
      case 2: return ENUM_VALUEOF;
      case 3: return ENUM_ENTRIES;
      default: return null;
    }
  }

  public static org.jetbrains.kotlin.protobuf.Internal.EnumLiteMap<IrSyntheticBodyKind>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final org.jetbrains.kotlin.protobuf.Internal.EnumLiteMap<
      IrSyntheticBodyKind> internalValueMap =
        new org.jetbrains.kotlin.protobuf.Internal.EnumLiteMap<IrSyntheticBodyKind>() {
          public IrSyntheticBodyKind findValueByNumber(int number) {
            return IrSyntheticBodyKind.forNumber(number);
          }
        };

  public final org.jetbrains.kotlin.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final org.jetbrains.kotlin.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final org.jetbrains.kotlin.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return org.jetbrains.kotlin.backend.common.serialization.proto.KotlinIr.getDescriptor().getEnumTypes().get(2);
  }

  private static final IrSyntheticBodyKind[] VALUES = values();

  public static IrSyntheticBodyKind valueOf(
      org.jetbrains.kotlin.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private IrSyntheticBodyKind(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrSyntheticBodyKind)
}
