KtFile: 'scriptLevelDestructuringDeclarations.kts'
  null

KtPackageDirective(0,12): 'package util'
  null

KtNameReferenceExpression(8,12): 'util'
  null

KtImportList(12,12): ''
  null

KtScript(12,565): ''
  null

KtBlockExpression(12,565): ''
  null

KtClass(14,52): 'annotation class Anno(val str: String)'
  null

KtDeclarationModifierList(14,24): 'annotation'
  null

KtPrimaryConstructor(35,52): '(val str: String)'
  null

KtParameterList(35,52): '(val str: String)'
  null

KtParameter(36,51): 'val str: String'
  null

KtTypeReference(45,51): 'String'
  null

KtUserType(45,51): 'String'
  null

KtNameReferenceExpression(45,51): 'String'
  null

KtProperty(53,77): 'const val constant = "s"'
  null

KtDeclarationModifierList(53,58): 'const'
  null

KtStringTemplateExpression(74,77): '"s"'
  null

KtLiteralStringTemplateEntry(75,76): 's'
  null

KtClass(78,351): 'data class Pair(val a: @Anno("a type $constant") List<@Anno("a nested type $constant") Collection<@Anno("a nested nested type $constant") String>>?, val b: @Anno("b type $constant") Array<@Anno("b nested type $constant") List<@Anno("b nested nested type $constant") Int>>?)'
  null

KtDeclarationModifierList(78,82): 'data'
  null

KtPrimaryConstructor(93,351): '(val a: @Anno("a type $constant") List<@Anno("a nested type $constant") Collection<@Anno("a nested nested type $constant") String>>?, val b: @Anno("b type $constant") Array<@Anno("b nested type $constant") List<@Anno("b nested nested type $constant") Int>>?)'
  null

KtParameterList(93,351): '(val a: @Anno("a type $constant") List<@Anno("a nested type $constant") Collection<@Anno("a nested nested type $constant") String>>?, val b: @Anno("b type $constant") Array<@Anno("b nested type $constant") List<@Anno("b nested nested type $constant") Int>>?)'
  null

KtParameter(94,225): 'val a: @Anno("a type $constant") List<@Anno("a nested type $constant") Collection<@Anno("a nested nested type $constant") String>>?'
  null

KtTypeReference(101,225): '@Anno("a type $constant") List<@Anno("a nested type $constant") Collection<@Anno("a nested nested type $constant") String>>?'
  null

KtDeclarationModifierList(101,126): '@Anno("a type $constant")'
  null

KtAnnotationEntry(101,126): '@Anno("a type $constant")'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "a type $constant" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(102,106): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "a type $constant" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(102,106): 'Anno'
  null

KtUserType(102,106): 'Anno'
  null

KtNameReferenceExpression(102,106): 'Anno'
  null

KtValueArgumentList(106,126): '("a type $constant")'
  null

KtValueArgument(107,125): '"a type $constant"'
  null

KtStringTemplateExpression(107,125): '"a type $constant"'
  null

KtLiteralStringTemplateEntry(108,115): 'a type '
  null

KtSimpleNameStringTemplateEntry(115,124): '$constant'
  null

KtNameReferenceExpression(116,124): 'constant'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = constant
          receiverType = null
          returnType = kotlin.String
          symbol = val constant: kotlin.String
          contextParameters = []
          callableId = util/constant
      simpleAccess = Read
      typeArgumentsMapping = {}

KtNullableType(127,225): 'List<@Anno("a nested type $constant") Collection<@Anno("a nested nested type $constant") String>>?'
  null

KtUserType(127,224): 'List<@Anno("a nested type $constant") Collection<@Anno("a nested nested type $constant") String>>'
  null

KtNameReferenceExpression(127,131): 'List'
  null

KtTypeArgumentList(131,224): '<@Anno("a nested type $constant") Collection<@Anno("a nested nested type $constant") String>>'
  null

KtTypeProjection(132,223): '@Anno("a nested type $constant") Collection<@Anno("a nested nested type $constant") String>'
  null

KtTypeReference(132,223): '@Anno("a nested type $constant") Collection<@Anno("a nested nested type $constant") String>'
  null

KtDeclarationModifierList(132,164): '@Anno("a nested type $constant")'
  null

KtAnnotationEntry(132,164): '@Anno("a nested type $constant")'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "a nested type $constant" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(133,137): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "a nested type $constant" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(133,137): 'Anno'
  null

KtUserType(133,137): 'Anno'
  null

KtNameReferenceExpression(133,137): 'Anno'
  null

KtValueArgumentList(137,164): '("a nested type $constant")'
  null

KtValueArgument(138,163): '"a nested type $constant"'
  null

KtStringTemplateExpression(138,163): '"a nested type $constant"'
  null

KtLiteralStringTemplateEntry(139,153): 'a nested type '
  null

KtSimpleNameStringTemplateEntry(153,162): '$constant'
  null

KtNameReferenceExpression(154,162): 'constant'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = constant
          receiverType = null
          returnType = kotlin.String
          symbol = val constant: kotlin.String
          contextParameters = []
          callableId = util/constant
      simpleAccess = Read
      typeArgumentsMapping = {}

KtUserType(165,223): 'Collection<@Anno("a nested nested type $constant") String>'
  null

KtNameReferenceExpression(165,175): 'Collection'
  null

KtTypeArgumentList(175,223): '<@Anno("a nested nested type $constant") String>'
  null

KtTypeProjection(176,222): '@Anno("a nested nested type $constant") String'
  null

KtTypeReference(176,222): '@Anno("a nested nested type $constant") String'
  null

KtDeclarationModifierList(176,215): '@Anno("a nested nested type $constant")'
  null

KtAnnotationEntry(176,215): '@Anno("a nested nested type $constant")'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "a nested nested type $constant" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(177,181): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "a nested nested type $constant" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(177,181): 'Anno'
  null

KtUserType(177,181): 'Anno'
  null

KtNameReferenceExpression(177,181): 'Anno'
  null

KtValueArgumentList(181,215): '("a nested nested type $constant")'
  null

KtValueArgument(182,214): '"a nested nested type $constant"'
  null

KtStringTemplateExpression(182,214): '"a nested nested type $constant"'
  null

KtLiteralStringTemplateEntry(183,204): 'a nested nested type '
  null

KtSimpleNameStringTemplateEntry(204,213): '$constant'
  null

KtNameReferenceExpression(205,213): 'constant'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = constant
          receiverType = null
          returnType = kotlin.String
          symbol = val constant: kotlin.String
          contextParameters = []
          callableId = util/constant
      simpleAccess = Read
      typeArgumentsMapping = {}

KtUserType(216,222): 'String'
  null

KtNameReferenceExpression(216,222): 'String'
  null

KtParameter(227,350): 'val b: @Anno("b type $constant") Array<@Anno("b nested type $constant") List<@Anno("b nested nested type $constant") Int>>?'
  null

KtTypeReference(234,350): '@Anno("b type $constant") Array<@Anno("b nested type $constant") List<@Anno("b nested nested type $constant") Int>>?'
  null

KtDeclarationModifierList(234,259): '@Anno("b type $constant")'
  null

KtAnnotationEntry(234,259): '@Anno("b type $constant")'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "b type $constant" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(235,239): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "b type $constant" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(235,239): 'Anno'
  null

KtUserType(235,239): 'Anno'
  null

KtNameReferenceExpression(235,239): 'Anno'
  null

KtValueArgumentList(239,259): '("b type $constant")'
  null

KtValueArgument(240,258): '"b type $constant"'
  null

KtStringTemplateExpression(240,258): '"b type $constant"'
  null

KtLiteralStringTemplateEntry(241,248): 'b type '
  null

KtSimpleNameStringTemplateEntry(248,257): '$constant'
  null

KtNameReferenceExpression(249,257): 'constant'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = constant
          receiverType = null
          returnType = kotlin.String
          symbol = val constant: kotlin.String
          contextParameters = []
          callableId = util/constant
      simpleAccess = Read
      typeArgumentsMapping = {}

KtNullableType(260,350): 'Array<@Anno("b nested type $constant") List<@Anno("b nested nested type $constant") Int>>?'
  null

KtUserType(260,349): 'Array<@Anno("b nested type $constant") List<@Anno("b nested nested type $constant") Int>>'
  null

KtNameReferenceExpression(260,265): 'Array'
  null

KtTypeArgumentList(265,349): '<@Anno("b nested type $constant") List<@Anno("b nested nested type $constant") Int>>'
  null

KtTypeProjection(266,348): '@Anno("b nested type $constant") List<@Anno("b nested nested type $constant") Int>'
  null

KtTypeReference(266,348): '@Anno("b nested type $constant") List<@Anno("b nested nested type $constant") Int>'
  null

KtDeclarationModifierList(266,298): '@Anno("b nested type $constant")'
  null

KtAnnotationEntry(266,298): '@Anno("b nested type $constant")'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "b nested type $constant" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(267,271): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "b nested type $constant" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(267,271): 'Anno'
  null

KtUserType(267,271): 'Anno'
  null

KtNameReferenceExpression(267,271): 'Anno'
  null

KtValueArgumentList(271,298): '("b nested type $constant")'
  null

KtValueArgument(272,297): '"b nested type $constant"'
  null

KtStringTemplateExpression(272,297): '"b nested type $constant"'
  null

KtLiteralStringTemplateEntry(273,287): 'b nested type '
  null

KtSimpleNameStringTemplateEntry(287,296): '$constant'
  null

KtNameReferenceExpression(288,296): 'constant'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = constant
          receiverType = null
          returnType = kotlin.String
          symbol = val constant: kotlin.String
          contextParameters = []
          callableId = util/constant
      simpleAccess = Read
      typeArgumentsMapping = {}

KtUserType(299,348): 'List<@Anno("b nested nested type $constant") Int>'
  null

KtNameReferenceExpression(299,303): 'List'
  null

KtTypeArgumentList(303,348): '<@Anno("b nested nested type $constant") Int>'
  null

KtTypeProjection(304,347): '@Anno("b nested nested type $constant") Int'
  null

KtTypeReference(304,347): '@Anno("b nested nested type $constant") Int'
  null

KtDeclarationModifierList(304,343): '@Anno("b nested nested type $constant")'
  null

KtAnnotationEntry(304,343): '@Anno("b nested nested type $constant")'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "b nested nested type $constant" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(305,309): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "b nested nested type $constant" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(305,309): 'Anno'
  null

KtUserType(305,309): 'Anno'
  null

KtNameReferenceExpression(305,309): 'Anno'
  null

KtValueArgumentList(309,343): '("b nested nested type $constant")'
  null

KtValueArgument(310,342): '"b nested nested type $constant"'
  null

KtStringTemplateExpression(310,342): '"b nested nested type $constant"'
  null

KtLiteralStringTemplateEntry(311,332): 'b nested nested type '
  null

KtSimpleNameStringTemplateEntry(332,341): '$constant'
  null

KtNameReferenceExpression(333,341): 'constant'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = constant
          receiverType = null
          returnType = kotlin.String
          symbol = val constant: kotlin.String
          contextParameters = []
          callableId = util/constant
      simpleAccess = Read
      typeArgumentsMapping = {}

KtUserType(344,347): 'Int'
  null

KtNameReferenceExpression(344,347): 'Int'
  null

KtProperty(352,374): 'const val prop = "str"'
  null

KtDeclarationModifierList(352,357): 'const'
  null

KtStringTemplateExpression(369,374): '"str"'
  null

KtLiteralStringTemplateEntry(370,373): 'str'
  null

KtDestructuringDeclaration(376,462): '@Anno("destr 1 $prop")'
  null

KtDeclarationModifierList(376,398): '@Anno("destr 1 $prop")'
  null

KtAnnotationEntry(376,398): '@Anno("destr 1 $prop")'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "destr 1 $prop" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(377,381): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "destr 1 $prop" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(377,381): 'Anno'
  null

KtUserType(377,381): 'Anno'
  null

KtNameReferenceExpression(377,381): 'Anno'
  null

KtValueArgumentList(381,398): '("destr 1 $prop")'
  null

KtValueArgument(382,397): '"destr 1 $prop"'
  null

KtStringTemplateExpression(382,397): '"destr 1 $prop"'
  null

KtLiteralStringTemplateEntry(383,391): 'destr 1 '
  null

KtSimpleNameStringTemplateEntry(391,396): '$prop'
  null

KtNameReferenceExpression(392,396): 'prop'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = prop
          receiverType = null
          returnType = kotlin.String
          symbol = val prop: kotlin.String
          contextParameters = []
          callableId = util/prop
      simpleAccess = Read
      typeArgumentsMapping = {}

KtDestructuringDeclarationEntry(404,422): '@Anno("a $prop") a'
  null

KtDeclarationModifierList(404,420): '@Anno("a $prop")'
  null

KtAnnotationEntry(404,420): '@Anno("a $prop")'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "a $prop" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(405,409): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "a $prop" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(405,409): 'Anno'
  null

KtUserType(405,409): 'Anno'
  null

KtNameReferenceExpression(405,409): 'Anno'
  null

KtValueArgumentList(409,420): '("a $prop")'
  null

KtValueArgument(410,419): '"a $prop"'
  null

KtStringTemplateExpression(410,419): '"a $prop"'
  null

KtLiteralStringTemplateEntry(411,413): 'a '
  null

KtSimpleNameStringTemplateEntry(413,418): '$prop'
  null

KtNameReferenceExpression(414,418): 'prop'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = prop
          receiverType = null
          returnType = kotlin.String
          symbol = val prop: kotlin.String
          contextParameters = []
          callableId = util/prop
      simpleAccess = Read
      typeArgumentsMapping = {}

KtDestructuringDeclarationEntry(424,442): '@Anno("b $prop") b'
  null

KtDeclarationModifierList(424,440): '@Anno("b $prop")'
  null

KtAnnotationEntry(424,440): '@Anno("b $prop")'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "b $prop" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(425,429): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "b $prop" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(425,429): 'Anno'
  null

KtUserType(425,429): 'Anno'
  null

KtNameReferenceExpression(425,429): 'Anno'
  null

KtValueArgumentList(429,440): '("b $prop")'
  null

KtValueArgument(430,439): '"b $prop"'
  null

KtStringTemplateExpression(430,439): '"b $prop"'
  null

KtLiteralStringTemplateEntry(431,433): 'b '
  null

KtSimpleNameStringTemplateEntry(433,438): '$prop'
  null

KtNameReferenceExpression(434,438): 'prop'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = prop
          receiverType = null
          returnType = kotlin.String
          symbol = val prop: kotlin.String
          contextParameters = []
          callableId = util/prop
      simpleAccess = Read
      typeArgumentsMapping = {}

KtCallExpression(446,462): 'Pair(null, null)'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        null -> (KaVariableSignature:
          name = a
          receiverType = null
          returnType = @R|util.Anno|(str = <strcat>(String(a type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(a nested type ), R|util.constant|))  kotlin.collections.Collection<@R|util.Anno|(str = <strcat>(String(a nested nested type ), R|util.constant|))  kotlin.String>>?
          symbol = a: @R|util.Anno|(str = <strcat>(String(a type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(a nested type ), R|util.constant|))  kotlin.collections.Collection<@R|util.Anno|(str = <strcat>(String(a nested nested type ), R|util.constant|))  kotlin.String>>?
          contextParameters = []
          callableId = null),
        null -> (KaVariableSignature:
          name = b
          receiverType = null
          returnType = @R|util.Anno|(str = <strcat>(String(b type ), R|util.constant|))  kotlin.Array<@R|util.Anno|(str = <strcat>(String(b nested type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(b nested nested type ), R|util.constant|))  kotlin.Int>>?
          symbol = b: @R|util.Anno|(str = <strcat>(String(b type ), R|util.constant|))  kotlin.Array<@R|util.Anno|(str = <strcat>(String(b nested type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(b nested nested type ), R|util.constant|))  kotlin.Int>>?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Pair
          symbol = <constructor>(a: @R|util.Anno|(str = <strcat>(String(a type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(a nested type ), R|util.constant|))  kotlin.collections.Collection<@R|util.Anno|(str = <strcat>(String(a nested nested type ), R|util.constant|))  kotlin.String>>?, b: @R|util.Anno|(str = <strcat>(String(b type ), R|util.constant|))  kotlin.Array<@R|util.Anno|(str = <strcat>(String(b nested type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(b nested nested type ), R|util.constant|))  kotlin.Int>>?): util.Pair
          valueParameters = [
            KaVariableSignature:
              name = a
              receiverType = null
              returnType = @R|util.Anno|(str = <strcat>(String(a type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(a nested type ), R|util.constant|))  kotlin.collections.Collection<@R|util.Anno|(str = <strcat>(String(a nested nested type ), R|util.constant|))  kotlin.String>>?
              symbol = a: @R|util.Anno|(str = <strcat>(String(a type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(a nested type ), R|util.constant|))  kotlin.collections.Collection<@R|util.Anno|(str = <strcat>(String(a nested nested type ), R|util.constant|))  kotlin.String>>?
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = b
              receiverType = null
              returnType = @R|util.Anno|(str = <strcat>(String(b type ), R|util.constant|))  kotlin.Array<@R|util.Anno|(str = <strcat>(String(b nested type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(b nested nested type ), R|util.constant|))  kotlin.Int>>?
              symbol = b: @R|util.Anno|(str = <strcat>(String(b type ), R|util.constant|))  kotlin.Array<@R|util.Anno|(str = <strcat>(String(b nested type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(b nested nested type ), R|util.constant|))  kotlin.Int>>?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtNameReferenceExpression(446,450): 'Pair'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        null -> (KaVariableSignature:
          name = a
          receiverType = null
          returnType = @R|util.Anno|(str = <strcat>(String(a type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(a nested type ), R|util.constant|))  kotlin.collections.Collection<@R|util.Anno|(str = <strcat>(String(a nested nested type ), R|util.constant|))  kotlin.String>>?
          symbol = a: @R|util.Anno|(str = <strcat>(String(a type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(a nested type ), R|util.constant|))  kotlin.collections.Collection<@R|util.Anno|(str = <strcat>(String(a nested nested type ), R|util.constant|))  kotlin.String>>?
          contextParameters = []
          callableId = null),
        null -> (KaVariableSignature:
          name = b
          receiverType = null
          returnType = @R|util.Anno|(str = <strcat>(String(b type ), R|util.constant|))  kotlin.Array<@R|util.Anno|(str = <strcat>(String(b nested type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(b nested nested type ), R|util.constant|))  kotlin.Int>>?
          symbol = b: @R|util.Anno|(str = <strcat>(String(b type ), R|util.constant|))  kotlin.Array<@R|util.Anno|(str = <strcat>(String(b nested type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(b nested nested type ), R|util.constant|))  kotlin.Int>>?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Pair
          symbol = <constructor>(a: @R|util.Anno|(str = <strcat>(String(a type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(a nested type ), R|util.constant|))  kotlin.collections.Collection<@R|util.Anno|(str = <strcat>(String(a nested nested type ), R|util.constant|))  kotlin.String>>?, b: @R|util.Anno|(str = <strcat>(String(b type ), R|util.constant|))  kotlin.Array<@R|util.Anno|(str = <strcat>(String(b nested type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(b nested nested type ), R|util.constant|))  kotlin.Int>>?): util.Pair
          valueParameters = [
            KaVariableSignature:
              name = a
              receiverType = null
              returnType = @R|util.Anno|(str = <strcat>(String(a type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(a nested type ), R|util.constant|))  kotlin.collections.Collection<@R|util.Anno|(str = <strcat>(String(a nested nested type ), R|util.constant|))  kotlin.String>>?
              symbol = a: @R|util.Anno|(str = <strcat>(String(a type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(a nested type ), R|util.constant|))  kotlin.collections.Collection<@R|util.Anno|(str = <strcat>(String(a nested nested type ), R|util.constant|))  kotlin.String>>?
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = b
              receiverType = null
              returnType = @R|util.Anno|(str = <strcat>(String(b type ), R|util.constant|))  kotlin.Array<@R|util.Anno|(str = <strcat>(String(b nested type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(b nested nested type ), R|util.constant|))  kotlin.Int>>?
              symbol = b: @R|util.Anno|(str = <strcat>(String(b type ), R|util.constant|))  kotlin.Array<@R|util.Anno|(str = <strcat>(String(b nested type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(b nested nested type ), R|util.constant|))  kotlin.Int>>?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtValueArgumentList(450,462): '(null, null)'
  null

KtValueArgument(451,455): 'null'
  null

KtConstantExpression(451,455): 'null'
  null

KtValueArgument(457,461): 'null'
  null

KtConstantExpression(457,461): 'null'
  null

KtDestructuringDeclaration(464,550): '@Anno("destr 1 $prop")'
  null

KtDeclarationModifierList(464,486): '@Anno("destr 1 $prop")'
  null

KtAnnotationEntry(464,486): '@Anno("destr 1 $prop")'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "destr 1 $prop" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(465,469): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "destr 1 $prop" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(465,469): 'Anno'
  null

KtUserType(465,469): 'Anno'
  null

KtNameReferenceExpression(465,469): 'Anno'
  null

KtValueArgumentList(469,486): '("destr 1 $prop")'
  null

KtValueArgument(470,485): '"destr 1 $prop"'
  null

KtStringTemplateExpression(470,485): '"destr 1 $prop"'
  null

KtLiteralStringTemplateEntry(471,479): 'destr 1 '
  null

KtSimpleNameStringTemplateEntry(479,484): '$prop'
  null

KtNameReferenceExpression(480,484): 'prop'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = prop
          receiverType = null
          returnType = kotlin.String
          symbol = val prop: kotlin.String
          contextParameters = []
          callableId = util/prop
      simpleAccess = Read
      typeArgumentsMapping = {}

KtDestructuringDeclarationEntry(492,510): '@Anno("c $prop") c'
  null

KtDeclarationModifierList(492,508): '@Anno("c $prop")'
  null

KtAnnotationEntry(492,508): '@Anno("c $prop")'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "c $prop" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(493,497): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "c $prop" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(493,497): 'Anno'
  null

KtUserType(493,497): 'Anno'
  null

KtNameReferenceExpression(493,497): 'Anno'
  null

KtValueArgumentList(497,508): '("c $prop")'
  null

KtValueArgument(498,507): '"c $prop"'
  null

KtStringTemplateExpression(498,507): '"c $prop"'
  null

KtLiteralStringTemplateEntry(499,501): 'c '
  null

KtSimpleNameStringTemplateEntry(501,506): '$prop'
  null

KtNameReferenceExpression(502,506): 'prop'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = prop
          receiverType = null
          returnType = kotlin.String
          symbol = val prop: kotlin.String
          contextParameters = []
          callableId = util/prop
      simpleAccess = Read
      typeArgumentsMapping = {}

KtDestructuringDeclarationEntry(512,530): '@Anno("d $prop") d'
  null

KtDeclarationModifierList(512,528): '@Anno("d $prop")'
  null

KtAnnotationEntry(512,528): '@Anno("d $prop")'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "d $prop" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(513,517): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        "d $prop" -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Anno
          symbol = <constructor>(str: kotlin.String): util.Anno
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(513,517): 'Anno'
  null

KtUserType(513,517): 'Anno'
  null

KtNameReferenceExpression(513,517): 'Anno'
  null

KtValueArgumentList(517,528): '("d $prop")'
  null

KtValueArgument(518,527): '"d $prop"'
  null

KtStringTemplateExpression(518,527): '"d $prop"'
  null

KtLiteralStringTemplateEntry(519,521): 'd '
  null

KtSimpleNameStringTemplateEntry(521,526): '$prop'
  null

KtNameReferenceExpression(522,526): 'prop'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = prop
          receiverType = null
          returnType = kotlin.String
          symbol = val prop: kotlin.String
          contextParameters = []
          callableId = util/prop
      simpleAccess = Read
      typeArgumentsMapping = {}

KtCallExpression(534,550): 'Pair(null, null)'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        null -> (KaVariableSignature:
          name = a
          receiverType = null
          returnType = @R|util.Anno|(str = <strcat>(String(a type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(a nested type ), R|util.constant|))  kotlin.collections.Collection<@R|util.Anno|(str = <strcat>(String(a nested nested type ), R|util.constant|))  kotlin.String>>?
          symbol = a: @R|util.Anno|(str = <strcat>(String(a type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(a nested type ), R|util.constant|))  kotlin.collections.Collection<@R|util.Anno|(str = <strcat>(String(a nested nested type ), R|util.constant|))  kotlin.String>>?
          contextParameters = []
          callableId = null),
        null -> (KaVariableSignature:
          name = b
          receiverType = null
          returnType = @R|util.Anno|(str = <strcat>(String(b type ), R|util.constant|))  kotlin.Array<@R|util.Anno|(str = <strcat>(String(b nested type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(b nested nested type ), R|util.constant|))  kotlin.Int>>?
          symbol = b: @R|util.Anno|(str = <strcat>(String(b type ), R|util.constant|))  kotlin.Array<@R|util.Anno|(str = <strcat>(String(b nested type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(b nested nested type ), R|util.constant|))  kotlin.Int>>?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Pair
          symbol = <constructor>(a: @R|util.Anno|(str = <strcat>(String(a type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(a nested type ), R|util.constant|))  kotlin.collections.Collection<@R|util.Anno|(str = <strcat>(String(a nested nested type ), R|util.constant|))  kotlin.String>>?, b: @R|util.Anno|(str = <strcat>(String(b type ), R|util.constant|))  kotlin.Array<@R|util.Anno|(str = <strcat>(String(b nested type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(b nested nested type ), R|util.constant|))  kotlin.Int>>?): util.Pair
          valueParameters = [
            KaVariableSignature:
              name = a
              receiverType = null
              returnType = @R|util.Anno|(str = <strcat>(String(a type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(a nested type ), R|util.constant|))  kotlin.collections.Collection<@R|util.Anno|(str = <strcat>(String(a nested nested type ), R|util.constant|))  kotlin.String>>?
              symbol = a: @R|util.Anno|(str = <strcat>(String(a type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(a nested type ), R|util.constant|))  kotlin.collections.Collection<@R|util.Anno|(str = <strcat>(String(a nested nested type ), R|util.constant|))  kotlin.String>>?
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = b
              receiverType = null
              returnType = @R|util.Anno|(str = <strcat>(String(b type ), R|util.constant|))  kotlin.Array<@R|util.Anno|(str = <strcat>(String(b nested type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(b nested nested type ), R|util.constant|))  kotlin.Int>>?
              symbol = b: @R|util.Anno|(str = <strcat>(String(b type ), R|util.constant|))  kotlin.Array<@R|util.Anno|(str = <strcat>(String(b nested type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(b nested nested type ), R|util.constant|))  kotlin.Int>>?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtNameReferenceExpression(534,538): 'Pair'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        null -> (KaVariableSignature:
          name = a
          receiverType = null
          returnType = @R|util.Anno|(str = <strcat>(String(a type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(a nested type ), R|util.constant|))  kotlin.collections.Collection<@R|util.Anno|(str = <strcat>(String(a nested nested type ), R|util.constant|))  kotlin.String>>?
          symbol = a: @R|util.Anno|(str = <strcat>(String(a type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(a nested type ), R|util.constant|))  kotlin.collections.Collection<@R|util.Anno|(str = <strcat>(String(a nested nested type ), R|util.constant|))  kotlin.String>>?
          contextParameters = []
          callableId = null),
        null -> (KaVariableSignature:
          name = b
          receiverType = null
          returnType = @R|util.Anno|(str = <strcat>(String(b type ), R|util.constant|))  kotlin.Array<@R|util.Anno|(str = <strcat>(String(b nested type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(b nested nested type ), R|util.constant|))  kotlin.Int>>?
          symbol = b: @R|util.Anno|(str = <strcat>(String(b type ), R|util.constant|))  kotlin.Array<@R|util.Anno|(str = <strcat>(String(b nested type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(b nested nested type ), R|util.constant|))  kotlin.Int>>?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = util.Pair
          symbol = <constructor>(a: @R|util.Anno|(str = <strcat>(String(a type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(a nested type ), R|util.constant|))  kotlin.collections.Collection<@R|util.Anno|(str = <strcat>(String(a nested nested type ), R|util.constant|))  kotlin.String>>?, b: @R|util.Anno|(str = <strcat>(String(b type ), R|util.constant|))  kotlin.Array<@R|util.Anno|(str = <strcat>(String(b nested type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(b nested nested type ), R|util.constant|))  kotlin.Int>>?): util.Pair
          valueParameters = [
            KaVariableSignature:
              name = a
              receiverType = null
              returnType = @R|util.Anno|(str = <strcat>(String(a type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(a nested type ), R|util.constant|))  kotlin.collections.Collection<@R|util.Anno|(str = <strcat>(String(a nested nested type ), R|util.constant|))  kotlin.String>>?
              symbol = a: @R|util.Anno|(str = <strcat>(String(a type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(a nested type ), R|util.constant|))  kotlin.collections.Collection<@R|util.Anno|(str = <strcat>(String(a nested nested type ), R|util.constant|))  kotlin.String>>?
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = b
              receiverType = null
              returnType = @R|util.Anno|(str = <strcat>(String(b type ), R|util.constant|))  kotlin.Array<@R|util.Anno|(str = <strcat>(String(b nested type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(b nested nested type ), R|util.constant|))  kotlin.Int>>?
              symbol = b: @R|util.Anno|(str = <strcat>(String(b type ), R|util.constant|))  kotlin.Array<@R|util.Anno|(str = <strcat>(String(b nested type ), R|util.constant|))  kotlin.collections.List<@R|util.Anno|(str = <strcat>(String(b nested nested type ), R|util.constant|))  kotlin.Int>>?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtValueArgumentList(538,550): '(null, null)'
  null

KtValueArgument(539,543): 'null'
  null

KtConstantExpression(539,543): 'null'
  null

KtValueArgument(545,549): 'null'
  null

KtConstantExpression(545,549): 'null'
  null

KtNamedFunction(552,564): 'fun foo() {}'
  null

KtParameterList(559,561): '()'
  null

KtBlockExpression(562,564): '{}'
  null
