FILE fqName:<root> fileName:/differentReceivers.kt
  CLASS CLASS name:MyClass modality:FINAL visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.MyClass 
    CONSTRUCTOR visibility:public <> (value:kotlin.String) returnType:<root>.MyClass [primary] 
      VALUE_PARAMETER name:value index:0 type:kotlin.String 
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:MyClass modality:FINAL visibility:public superTypes:[kotlin.Any]'
    PROPERTY name:value visibility:public modality:FINAL [val] 
      FIELD PROPERTY_BACKING_FIELD name:value type:kotlin.String visibility:public [final] 
        EXPRESSION_BODY
          GET_VAR 'value: kotlin.String declared in <root>.MyClass.<init>' type=kotlin.String origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-value> visibility:public modality:FINAL <> ($this:<root>.MyClass) returnType:kotlin.String 
        correspondingProperty: PROPERTY name:value visibility:public modality:FINAL [val] 
        $this: VALUE_PARAMETER name:<this> type:<root>.MyClass 
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-value> (): kotlin.String declared in <root>.MyClass'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:kotlin.String visibility:public [final] ' type=kotlin.String origin=null
              receiver: GET_VAR '<this>: <root>.MyClass declared in <root>.MyClass.<get-value>' type=<root>.MyClass origin=null
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean 
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any 
      VALUE_PARAMETER name:other index:0 type:kotlin.Any? 
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int 
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any 
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String 
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any 
  FUN name:provideDelegate visibility:public modality:FINAL <> (host:kotlin.Any?, p:kotlin.Any) returnType:kotlin.String 
    VALUE_PARAMETER name:host index:0 type:kotlin.Any? 
    VALUE_PARAMETER name:p index:1 type:kotlin.Any 
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun provideDelegate (host: kotlin.Any?, p: kotlin.Any): kotlin.String declared in <root>'
        CALL 'public final fun <get-value> (): kotlin.String declared in <root>.MyClass' type=kotlin.String origin=null
  FUN name:getValue visibility:public modality:FINAL <> (receiver:kotlin.Any?, p:kotlin.Any) returnType:kotlin.String 
    VALUE_PARAMETER name:receiver index:0 type:kotlin.Any? 
    VALUE_PARAMETER name:p index:1 type:kotlin.Any 
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun getValue (receiver: kotlin.Any?, p: kotlin.Any): kotlin.String declared in <root>'
        ERROR_CALL 'Unresolved reference: this#' type=kotlin.String
  PROPERTY name:testO visibility:public modality:FINAL [delegated,val] 
    FIELD PROPERTY_BACKING_FIELD name:testO type:IrErrorType visibility:public [final,static] 
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-testO> visibility:public modality:FINAL <> () returnType:IrErrorType 
      correspondingProperty: PROPERTY name:testO visibility:public modality:FINAL [delegated,val] 
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-testO> (): IrErrorType declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:testO type:IrErrorType visibility:public [final,static] ' type=IrErrorType origin=null
  PROPERTY name:testK visibility:public modality:FINAL [delegated,val] 
    FIELD PROPERTY_BACKING_FIELD name:testK type:IrErrorType visibility:public [final,static] 
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-testK> visibility:public modality:FINAL <> () returnType:IrErrorType 
      correspondingProperty: PROPERTY name:testK visibility:public modality:FINAL [delegated,val] 
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-testK> (): IrErrorType declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:testK type:IrErrorType visibility:public [final,static] ' type=IrErrorType origin=null
  PROPERTY name:testOK visibility:public modality:FINAL [val] 
    FIELD PROPERTY_BACKING_FIELD name:testOK type:IrErrorType visibility:public [final,static] 
      EXPRESSION_BODY
        ERROR_CALL 'Unresolved reference: <Ambiguity: plus, [kotlin/plus, kotlin/plus, kotlin/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/collections/plus, kotlin/sequences/plus, kotlin/sequences/plus, kotlin/sequences/plus, kotlin/text/plus]>#' type=IrErrorType
          CALL 'public final fun <get-testK> (): IrErrorType declared in <root>' type=IrErrorType origin=null
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-testOK> visibility:public modality:FINAL <> () returnType:IrErrorType 
      correspondingProperty: PROPERTY name:testOK visibility:public modality:FINAL [val] 
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-testOK> (): IrErrorType declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:testOK type:IrErrorType visibility:public [final,static] ' type=IrErrorType origin=null

