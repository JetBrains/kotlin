class A {
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

}

operator fun A.get(i: Int, a: Int = 1, b: Int = 2, c: Int = 3, d: Int = 4): Int {
  return 0
}

operator fun A.set(i: Int, j: Int = 42, v: Int) {
}

fun testCompoundAssignment(a: A) {
  { // BLOCK
    val tmp_0: A = a
    val tmp_1: Int = 1
    set(/* <this> = tmp_0, */ i = tmp_1, v = get(/* <this> = tmp_0, */ i = tmp_1).plus(other = 10))
  }
}

fun testPostfixIncrement(a: A): Int {
  return { // BLOCK
    val tmp_2: A = a
    val tmp_3: Int = 1
    val tmp_4: Int = get(/* <this> = tmp_2, */ i = tmp_3)
    set(/* <this> = tmp_2, */ i = tmp_3, v = tmp_4.inc())
    tmp_4
  }
}

fun testSimpleAssignment(a: A) {
  set(/* <this> = a, */ i = 1, v = 0)
}

