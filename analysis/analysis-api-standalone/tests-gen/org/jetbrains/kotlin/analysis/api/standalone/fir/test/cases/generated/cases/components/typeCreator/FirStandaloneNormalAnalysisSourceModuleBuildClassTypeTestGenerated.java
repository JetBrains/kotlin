/*
 * Copyright 2010-2024 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.analysis.api.standalone.fir.test.cases.generated.cases.components.typeCreator;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.kotlin.analysis.api.standalone.fir.test.configurators.AnalysisApiFirStandaloneModeTestConfiguratorFactory;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisApiTestConfiguratorFactoryData;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisApiTestConfigurator;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.TestModuleKind;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.FrontendKind;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisSessionMode;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisApiMode;
import org.jetbrains.kotlin.analysis.api.impl.base.test.cases.components.typeCreator.AbstractBuildClassTypeTest;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.analysis.api.GenerateAnalysisApiTestsKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("analysis/analysis-api/testData/components/typeCreator/classType")
@TestDataPath("$PROJECT_ROOT")
public class FirStandaloneNormalAnalysisSourceModuleBuildClassTypeTestGenerated extends AbstractBuildClassTypeTest {
  @NotNull
  @Override
  public AnalysisApiTestConfigurator getConfigurator() {
    return AnalysisApiFirStandaloneModeTestConfiguratorFactory.INSTANCE.createConfigurator(
      new AnalysisApiTestConfiguratorFactoryData(
        FrontendKind.Fir,
        TestModuleKind.Source,
        AnalysisSessionMode.Normal,
        AnalysisApiMode.Standalone
      )
    );
  }

  @Test
  public void testAllFilesPresentInClassType() {
    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("analysis/analysis-api/testData/components/typeCreator/classType"), Pattern.compile("^(.+)\\.kt$"), null, true);
  }

  @Test
  @TestMetadata("boxedArray.kt")
  public void testBoxedArray() {
    runTest("analysis/analysis-api/testData/components/typeCreator/classType/boxedArray.kt");
  }

  @Test
  @TestMetadata("flexibleTypeAsArrayTypeArgument.kt")
  public void testFlexibleTypeAsArrayTypeArgument() {
    runTest("analysis/analysis-api/testData/components/typeCreator/classType/flexibleTypeAsArrayTypeArgument.kt");
  }

  @Test
  @TestMetadata("genericClassWithBound.kt")
  public void testGenericClassWithBound() {
    runTest("analysis/analysis-api/testData/components/typeCreator/classType/genericClassWithBound.kt");
  }

  @Test
  @TestMetadata("genericInterface.kt")
  public void testGenericInterface() {
    runTest("analysis/analysis-api/testData/components/typeCreator/classType/genericInterface.kt");
  }

  @Test
  @TestMetadata("intType.kt")
  public void testIntType() {
    runTest("analysis/analysis-api/testData/components/typeCreator/classType/intType.kt");
  }

  @Test
  @TestMetadata("lackOfTypeArgumentsBoxedArray.kt")
  public void testLackOfTypeArgumentsBoxedArray() {
    runTest("analysis/analysis-api/testData/components/typeCreator/classType/lackOfTypeArgumentsBoxedArray.kt");
  }

  @Test
  @TestMetadata("localUserType.kt")
  public void testLocalUserType() {
    runTest("analysis/analysis-api/testData/components/typeCreator/classType/localUserType.kt");
  }

  @Test
  @TestMetadata("moreTypeArgumentsThanNeeded.kt")
  public void testMoreTypeArgumentsThanNeeded() {
    runTest("analysis/analysis-api/testData/components/typeCreator/classType/moreTypeArgumentsThanNeeded.kt");
  }

  @Test
  @TestMetadata("stringMakeNullable.kt")
  public void testStringMakeNullable() {
    runTest("analysis/analysis-api/testData/components/typeCreator/classType/stringMakeNullable.kt");
  }

  @Test
  @TestMetadata("userType.kt")
  public void testUserType() {
    runTest("analysis/analysis-api/testData/components/typeCreator/classType/userType.kt");
  }
}
