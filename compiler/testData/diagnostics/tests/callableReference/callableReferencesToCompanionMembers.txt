package

public val x1: kotlin.reflect.KFunction1<Foo, kotlin.Unit>
public val x2: kotlin.reflect.KFunction0<kotlin.Unit>
public val x3: kotlin.reflect.KProperty1<Foo, kotlin.Int>
public val x4: kotlin.reflect.KProperty0<kotlin.Int>

public final class Foo {
    public constructor Foo()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    public companion object Companion {
        private constructor Companion()
        public final val baz: kotlin.Int = 42
        public final fun bar(): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}
