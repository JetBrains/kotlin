<?xml version="1.0" encoding="UTF-8"?>
<root>
    <item name="java.util.AbstractCollection T[] toArray(T[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun &lt;T&gt; toArray(a : Array&lt;out T&gt;) : Array&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractCollection T[] toArray(T[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.AbstractCollection boolean add(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun add(e : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractCollection boolean addAll(java.util.Collection&lt;? extends E&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun addAll(c : Collection&lt;E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractCollection boolean addAll(java.util.Collection&lt;? extends E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.AbstractCollection boolean containsAll(java.util.Collection&lt;?&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun containsAll(c : Collection&lt;Any?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractCollection boolean containsAll(java.util.Collection&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.AbstractCollection boolean removeAll(java.util.Collection&lt;?&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun removeAll(c : Collection&lt;Any?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractCollection boolean removeAll(java.util.Collection&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.AbstractCollection boolean retainAll(java.util.Collection&lt;?&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun retainAll(c : Collection&lt;Any?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractCollection java.lang.Object[] toArray()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun toArray() : Array&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractCollection java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.AbstractCollection java.util.Iterator&lt;E&gt; iterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractList E get(int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun get(index : Int) : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractList E set(int, E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun set(index : Int, element : E) : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractList boolean add(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun add(e : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractList boolean addAll(int, java.util.Collection&lt;? extends E&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun addAll(index : Int, c : Collection&lt;E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractList boolean addAll(int, java.util.Collection&lt;? extends E&gt;) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.AbstractList java.util.Iterator&lt;E&gt; iterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractList java.util.List&lt;E&gt; subList(int, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun subList(fromIndex : Int, toIndex : Int) : MutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractList java.util.ListIterator&lt;E&gt; listIterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun listIterator() : MutableListIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractList java.util.ListIterator&lt;E&gt; listIterator(int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun listIterator(index : Int) : MutableListIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractList void add(int, E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun add(index : Int, element : E)&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractMap V put(K, V)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun put(key : K, value : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractMap V put(K, V) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.AbstractMap V put(K, V) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.AbstractMap java.lang.Object clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.AbstractMap java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.AbstractMap java.util.Collection&lt;V&gt; values()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun values() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractMap java.util.Set&lt;K&gt; keySet()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun keySet() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;MutableMap.MutableEntry&lt;K, V&gt;&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractMap void putAll(java.util.Map&lt;? extends K,? extends V&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun putAll(m : Map&lt;out K, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractMap void putAll(java.util.Map&lt;? extends K,? extends V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.AbstractMap.SimpleEntry SimpleEntry(java.util.Map.Entry&lt;? extends K,? extends V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.AbstractMap.SimpleEntry V setValue(V) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.AbstractMap.SimpleEntry java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.AbstractMap.SimpleImmutableEntry SimpleImmutableEntry(java.util.Map.Entry&lt;? extends K,? extends V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.AbstractMap.SimpleImmutableEntry V setValue(V) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.AbstractMap.SimpleImmutableEntry java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.AbstractQueue E element()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.AbstractQueue E remove()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.AbstractQueue boolean addAll(java.util.Collection&lt;? extends E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.AbstractSequentialList E get(int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun get(index : Int) : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractSequentialList E remove(int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun remove(index : Int) : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractSequentialList E set(int, E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun set(index : Int, element : E) : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractSequentialList boolean addAll(int, java.util.Collection&lt;? extends E&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun addAll(index : Int, c : Collection&lt;E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractSequentialList boolean addAll(int, java.util.Collection&lt;? extends E&gt;) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.AbstractSequentialList java.util.Iterator&lt;E&gt; iterator()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractSequentialList java.util.ListIterator&lt;E&gt; listIterator(int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun listIterator(index : Int) : MutableListIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractSequentialList void add(int, E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun add(index : Int, element : E)&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractSet boolean removeAll(java.util.Collection&lt;?&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun removeAll(c : Collection&lt;Any?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.AbstractSet boolean removeAll(java.util.Collection&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque ArrayDeque(java.util.Collection&lt;? extends E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque E element()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque E getFirst()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque E getLast()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque E pop()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque E remove()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque E removeFirst()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque E removeLast()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque T[] toArray(T[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque T[] toArray(T[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque boolean offer(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque boolean offerFirst(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque boolean offerLast(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque boolean removeFirstOccurrence(java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque boolean removeLastOccurrence(java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque java.lang.Object clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque java.util.ArrayDeque&lt;E&gt; clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque java.util.Iterator&lt;E&gt; descendingIterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque java.util.Iterator&lt;E&gt; iterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque void addFirst(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque void addLast(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayDeque void push(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayList ArrayList(java.util.Collection&lt;? extends E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayList E get(int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun get(index : Int) : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.ArrayList E remove(int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun remove(index : Int) : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.ArrayList E set(int, E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun set(index : Int, element : E) : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.ArrayList T[] toArray(T[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun &lt;T&gt; toArray(a : Array&lt;out T&gt;) : Array&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.ArrayList T[] toArray(T[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayList boolean add(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun add(e : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.ArrayList boolean addAll(int, java.util.Collection&lt;? extends E&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun addAll(index : Int, c : Collection&lt;E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.ArrayList boolean addAll(int, java.util.Collection&lt;? extends E&gt;) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayList boolean addAll(java.util.Collection&lt;? extends E&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun addAll(c : Collection&lt;E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.ArrayList boolean addAll(java.util.Collection&lt;? extends E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayList boolean removeAll(java.util.Collection&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayList java.lang.Object clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name="java.util.ArrayList java.lang.Object[] toArray()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun toArray() : Array&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.ArrayList java.util.Iterator&lt;E&gt; iterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayList java.util.List&lt;E&gt; subList(int, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayList java.util.ListIterator&lt;E&gt; listIterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayList java.util.ListIterator&lt;E&gt; listIterator(int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ArrayList void add(int, E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun add(index : Int, element : E)&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays T[] copyOf(T[], int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; copyOf(original : Array&lt;out T&gt;, newLength : Int) : Array&lt;T?&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays T[] copyOf(T[], int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays T[] copyOf(U[], int, java.lang.Class&lt;? extends T[]&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T, U&gt; copyOf(original : Array&lt;out U&gt;, newLength : Int, newType : Class&lt;out Array&lt;T&gt;&gt;) : Array&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays T[] copyOf(U[], int, java.lang.Class&lt;? extends T[]&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays T[] copyOf(U[], int, java.lang.Class&lt;? extends T[]&gt;) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays T[] copyOfRange(T[], int, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; copyOfRange(original : Array&lt;out T&gt;, from : Int, to : Int) : Array&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays T[] copyOfRange(T[], int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays T[] copyOfRange(U[], int, int, java.lang.Class&lt;? extends T[]&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T, U&gt; copyOfRange(original : Array&lt;out U&gt;, from : Int, to : Int, newType : Class&lt;out Array&lt;T&gt;&gt;) : Array&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays T[] copyOfRange(U[], int, int, java.lang.Class&lt;? extends T[]&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays T[] copyOfRange(U[], int, int, java.lang.Class&lt;? extends T[]&gt;) 3">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays boolean equals(java.lang.Object[], java.lang.Object[])">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun equals(a : Array&lt;out Any?&gt;?, a2 : Array&lt;out Any?&gt;?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays boolean[] copyOf(boolean[], int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun copyOf(original : BooleanArray, newLength : Int) : BooleanArray&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays boolean[] copyOf(boolean[], int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays boolean[] copyOfRange(boolean[], int, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun copyOfRange(original : BooleanArray, from : Int, to : Int) : BooleanArray&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays boolean[] copyOfRange(boolean[], int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays byte[] copyOf(byte[], int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun copyOf(original : ByteArray, newLength : Int) : ByteArray&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays byte[] copyOf(byte[], int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays byte[] copyOfRange(byte[], int, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun copyOfRange(original : ByteArray, from : Int, to : Int) : ByteArray&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays byte[] copyOfRange(byte[], int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays char[] copyOf(char[], int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun copyOf(original : CharArray, newLength : Int) : CharArray&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays char[] copyOf(char[], int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays char[] copyOfRange(char[], int, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun copyOfRange(original : CharArray, from : Int, to : Int) : CharArray&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays char[] copyOfRange(char[], int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays double[] copyOf(double[], int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun copyOf(original : DoubleArray, newLength : Int) : DoubleArray&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays double[] copyOf(double[], int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays double[] copyOfRange(double[], int, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun copyOfRange(original : DoubleArray, from : Int, to : Int) : DoubleArray&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays double[] copyOfRange(double[], int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays float[] copyOf(float[], int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun copyOf(original : FloatArray, newLength : Int) : FloatArray&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays float[] copyOf(float[], int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays float[] copyOfRange(float[], int, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun copyOfRange(original : FloatArray, from : Int, to : Int) : FloatArray&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays float[] copyOfRange(float[], int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays int binarySearch(T[], T, java.util.Comparator&lt;? super T&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; binarySearch(a : Array&lt;out T&gt;, key : T, c : Comparator&lt;in T&gt;?) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays int binarySearch(T[], T, java.util.Comparator&lt;? super T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays int binarySearch(T[], int, int, T, java.util.Comparator&lt;? super T&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; binarySearch(a : Array&lt;out T&gt;, fromIndex : Int, toIndex : Int, key : T, c : Comparator&lt;in T&gt;?) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays int binarySearch(T[], int, int, T, java.util.Comparator&lt;? super T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays int binarySearch(byte[], byte)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun binarySearch(a : ByteArray, key : Byte) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays int binarySearch(byte[], byte) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays int binarySearch(byte[], int, int, byte)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun binarySearch(a : ByteArray, fromIndex : Int, toIndex : Int, key : Byte) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays int binarySearch(byte[], int, int, byte) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays int binarySearch(char[], char)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun binarySearch(a : CharArray, key : Char) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays int binarySearch(char[], char) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays int binarySearch(char[], int, int, char)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun binarySearch(a : CharArray, fromIndex : Int, toIndex : Int, key : Char) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays int binarySearch(char[], int, int, char) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays int binarySearch(double[], double)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun binarySearch(a : DoubleArray, key : Double) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays int binarySearch(double[], double) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays int binarySearch(double[], int, int, double)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun binarySearch(a : DoubleArray, fromIndex : Int, toIndex : Int, key : Double) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays int binarySearch(double[], int, int, double) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays int binarySearch(float[], float)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun binarySearch(a : FloatArray, key : Float) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays int binarySearch(float[], float) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays int binarySearch(float[], int, int, float)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun binarySearch(a : FloatArray, fromIndex : Int, toIndex : Int, key : Float) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays int binarySearch(float[], int, int, float) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays int binarySearch(int[], int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun binarySearch(a : IntArray, key : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays int binarySearch(int[], int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays int binarySearch(int[], int, int, int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun binarySearch(a : IntArray, fromIndex : Int, toIndex : Int, key : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays int binarySearch(int[], int, int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays int binarySearch(java.lang.Object[], int, int, java.lang.Object)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun binarySearch(a : Array&lt;out Any?&gt;, fromIndex : Int, toIndex : Int, key : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays int binarySearch(java.lang.Object[], int, int, java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays int binarySearch(java.lang.Object[], java.lang.Object)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun binarySearch(a : Array&lt;out Any?&gt;, key : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays int binarySearch(java.lang.Object[], java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays int binarySearch(long[], int, int, long)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun binarySearch(a : LongArray, fromIndex : Int, toIndex : Int, key : Long) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays int binarySearch(long[], int, int, long) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays int binarySearch(long[], long)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun binarySearch(a : LongArray, key : Long) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays int binarySearch(long[], long) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays int binarySearch(short[], int, int, short)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun binarySearch(a : ShortArray, fromIndex : Int, toIndex : Int, key : Short) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays int binarySearch(short[], int, int, short) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays int binarySearch(short[], short)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun binarySearch(a : ShortArray, key : Short) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays int binarySearch(short[], short) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays int[] copyOf(int[], int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun copyOf(original : IntArray, newLength : Int) : IntArray&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays int[] copyOf(int[], int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays int[] copyOfRange(int[], int, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun copyOfRange(original : IntArray, from : Int, to : Int) : IntArray&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays int[] copyOfRange(int[], int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays java.lang.String deepToString(java.lang.Object[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays java.lang.String toString(boolean[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun toString(a : BooleanArray?) : String&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays java.lang.String toString(byte[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun toString(a : ByteArray?) : String&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays java.lang.String toString(char[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun toString(a : CharArray?) : String&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays java.lang.String toString(double[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun toString(a : DoubleArray?) : String&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays java.lang.String toString(float[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun toString(a : FloatArray?) : String&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays java.lang.String toString(int[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun toString(a : IntArray?) : String&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays java.lang.String toString(java.lang.Object[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun toString(a : Array&lt;out Any?&gt;?) : String&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays java.lang.String toString(long[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun toString(a : LongArray?) : String&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays java.lang.String toString(short[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun toString(a : ShortArray?) : String&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays java.util.List&lt;T&gt; asList(T...)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun &lt;T&gt; asList(vararg a : T) : List&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays long[] copyOf(long[], int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun copyOf(original : LongArray, newLength : Int) : LongArray&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays long[] copyOf(long[], int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays long[] copyOfRange(long[], int, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun copyOfRange(original : LongArray, from : Int, to : Int) : LongArray&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays long[] copyOfRange(long[], int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays short[] copyOf(short[], int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun copyOf(original : ShortArray, newLength : Int) : ShortArray&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays short[] copyOf(short[], int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays short[] copyOfRange(short[], int, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun copyOfRange(original : ShortArray, from : Int, to : Int) : ShortArray&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays short[] copyOfRange(short[], int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void fill(boolean[], boolean)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun fill(a : BooleanArray, `val` : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void fill(boolean[], boolean) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void fill(boolean[], int, int, boolean)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun fill(a : BooleanArray, fromIndex : Int, toIndex : Int, `val` : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void fill(boolean[], int, int, boolean) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void fill(byte[], byte)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun fill(a : ByteArray, `val` : Byte) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void fill(byte[], byte) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void fill(byte[], int, int, byte)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun fill(a : ByteArray, fromIndex : Int, toIndex : Int, `val` : Byte) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void fill(byte[], int, int, byte) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void fill(char[], char)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun fill(a : CharArray, `val` : Char) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void fill(char[], char) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void fill(char[], int, int, char)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun fill(a : CharArray, fromIndex : Int, toIndex : Int, `val` : Char) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void fill(char[], int, int, char) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void fill(double[], double)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun fill(a : DoubleArray, `val` : Double) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void fill(double[], double) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void fill(double[], int, int, double)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun fill(a : DoubleArray, fromIndex : Int, toIndex : Int, `val` : Double) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void fill(double[], int, int, double) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void fill(float[], float)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun fill(a : FloatArray, `val` : Float) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void fill(float[], float) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void fill(float[], int, int, float)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun fill(a : FloatArray, fromIndex : Int, toIndex : Int, `val` : Float) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void fill(float[], int, int, float) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void fill(int[], int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun fill(a : IntArray, `val` : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void fill(int[], int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void fill(int[], int, int, int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun fill(a : IntArray, fromIndex : Int, toIndex : Int, `val` : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void fill(int[], int, int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void fill(java.lang.Object[], int, int, java.lang.Object)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun fill(a : Array&lt;out Any?&gt;, fromIndex : Int, toIndex : Int, `val` : Any?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void fill(java.lang.Object[], int, int, java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void fill(java.lang.Object[], java.lang.Object)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun fill(a : Array&lt;out Any?&gt;, `val` : Any?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void fill(java.lang.Object[], java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void fill(long[], int, int, long)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun fill(a : LongArray, fromIndex : Int, toIndex : Int, `val` : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void fill(long[], int, int, long) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void fill(long[], long)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun fill(a : LongArray, `val` : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void fill(long[], long) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void fill(short[], int, int, short)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun fill(a : ShortArray, fromIndex : Int, toIndex : Int, `val` : Short) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void fill(short[], int, int, short) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void fill(short[], short)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun fill(a : ShortArray, `val` : Short) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void fill(short[], short) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void sort(T[], int, int, java.util.Comparator&lt;? super T&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; sort(a : Array&lt;out T&gt;, fromIndex : Int, toIndex : Int, c : Comparator&lt;in T&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void sort(T[], int, int, java.util.Comparator&lt;? super T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void sort(T[], java.util.Comparator&lt;? super T&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; sort(a : Array&lt;out T&gt;, c : Comparator&lt;in T&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void sort(byte[])">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun sort(a : ByteArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void sort(byte[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void sort(byte[], int, int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun sort(a : ByteArray, fromIndex : Int, toIndex : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void sort(byte[], int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void sort(char[])">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun sort(a : CharArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void sort(char[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void sort(char[], int, int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun sort(a : CharArray, fromIndex : Int, toIndex : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void sort(char[], int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void sort(double[])">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun sort(a : DoubleArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void sort(double[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void sort(double[], int, int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun sort(a : DoubleArray, fromIndex : Int, toIndex : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void sort(double[], int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void sort(float[])">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun sort(a : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void sort(float[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void sort(float[], int, int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun sort(a : FloatArray, fromIndex : Int, toIndex : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void sort(float[], int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void sort(int[])">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun sort(a : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void sort(int[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void sort(int[], int, int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun sort(a : IntArray, fromIndex : Int, toIndex : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void sort(int[], int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void sort(java.lang.Object[])">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun sort(a : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void sort(java.lang.Object[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void sort(java.lang.Object[], int, int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun sort(a : Array&lt;out Any?&gt;, fromIndex : Int, toIndex : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void sort(java.lang.Object[], int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void sort(long[])">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun sort(a : LongArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void sort(long[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void sort(long[], int, int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun sort(a : LongArray, fromIndex : Int, toIndex : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void sort(long[], int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void sort(short[])">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun sort(a : ShortArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void sort(short[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Arrays void sort(short[], int, int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun sort(a : ShortArray, fromIndex : Int, toIndex : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Arrays void sort(short[], int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.BitSet boolean intersects(java.util.BitSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.BitSet byte[] toByteArray()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.BitSet java.lang.Object clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.BitSet java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.BitSet java.util.BitSet get(int, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.BitSet java.util.BitSet valueOf(byte[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.BitSet java.util.BitSet valueOf(byte[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.BitSet java.util.BitSet valueOf(java.nio.ByteBuffer)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.BitSet java.util.BitSet valueOf(java.nio.ByteBuffer) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.BitSet java.util.BitSet valueOf(java.nio.LongBuffer)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.BitSet java.util.BitSet valueOf(java.nio.LongBuffer) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.BitSet java.util.BitSet valueOf(long[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.BitSet java.util.BitSet valueOf(long[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.BitSet long[] toLongArray()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.BitSet void and(java.util.BitSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.BitSet void andNot(java.util.BitSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.BitSet void or(java.util.BitSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.BitSet void xor(java.util.BitSet) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Calendar Calendar(java.util.TimeZone, java.util.Locale) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Calendar Calendar(java.util.TimeZone, java.util.Locale) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Calendar int compareTo(java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Calendar int compareTo(java.util.Calendar) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Calendar java.lang.Object clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Calendar java.lang.String getDisplayName(int, int, java.util.Locale) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Calendar java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Calendar java.util.Calendar getInstance()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Calendar java.util.Calendar getInstance(java.util.Locale)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Calendar java.util.Calendar getInstance(java.util.Locale) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Calendar java.util.Calendar getInstance(java.util.TimeZone)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Calendar java.util.Calendar getInstance(java.util.TimeZone) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Calendar java.util.Calendar getInstance(java.util.TimeZone, java.util.Locale)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Calendar java.util.Calendar getInstance(java.util.TimeZone, java.util.Locale) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Calendar java.util.Calendar getInstance(java.util.TimeZone, java.util.Locale) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Calendar java.util.Date getTime()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Calendar java.util.Locale[] getAvailableLocales()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun getAvailableLocales() : Array&lt;out Locale&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Calendar java.util.Map&lt;java.lang.String,java.lang.Integer&gt; getDisplayNames(int, int, java.util.Locale)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun getDisplayNames(field : Int, style : Int, locale : Locale) : Map&lt;String, Int&gt;?&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Calendar java.util.Map&lt;java.lang.String,java.lang.Integer&gt; getDisplayNames(int, int, java.util.Locale) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Calendar java.util.TimeZone getTimeZone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Calendar void setTime(java.util.Date) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Calendar void setTimeZone(java.util.TimeZone) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collection T[] toArray(T[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun &lt;T&gt; toArray(a : Array&lt;out T&gt;) : Array&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collection T[] toArray(T[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collection boolean add(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun add(e : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collection boolean addAll(java.util.Collection&lt;? extends E&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun addAll(c : Collection&lt;E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collection boolean addAll(java.util.Collection&lt;? extends E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collection boolean containsAll(java.util.Collection&lt;?&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun containsAll(c : Collection&lt;Any?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collection boolean containsAll(java.util.Collection&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collection boolean removeAll(java.util.Collection&lt;?&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun removeAll(c : Collection&lt;Any?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collection boolean removeAll(java.util.Collection&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collection boolean retainAll(java.util.Collection&lt;?&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun retainAll(c : Collection&lt;Any?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collection java.lang.Object[] toArray()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun toArray() : Array&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collection java.util.Iterator&lt;E&gt; iterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections T max(java.util.Collection&lt;? extends T&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun &lt;T: Comparable&lt;T&gt;&gt; max(coll : Collection&lt;T&gt;) : T&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections T max(java.util.Collection&lt;? extends T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections T max(java.util.Collection&lt;? extends T&gt;, java.util.Comparator&lt;? super T&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; max(coll : Collection&lt;T&gt;, comp : Comparator&lt;in T&gt;) : T&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections T max(java.util.Collection&lt;? extends T&gt;, java.util.Comparator&lt;? super T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections T max(java.util.Collection&lt;? extends T&gt;, java.util.Comparator&lt;? super T&gt;) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections T min(java.util.Collection&lt;? extends T&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun &lt;T: Comparable&lt;T&gt;&gt; min(coll : Collection&lt;T&gt;) : T&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections T min(java.util.Collection&lt;? extends T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections T min(java.util.Collection&lt;? extends T&gt;, java.util.Comparator&lt;? super T&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; min(coll : Collection&lt;T&gt;, comp : Comparator&lt;in T&gt;) : T&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections T min(java.util.Collection&lt;? extends T&gt;, java.util.Comparator&lt;? super T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections T min(java.util.Collection&lt;? extends T&gt;, java.util.Comparator&lt;? super T&gt;) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections boolean addAll(java.util.Collection&lt;? super T&gt;, T...)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; addAll(c : MutableCollection&lt;in T&gt;, vararg elements : T) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections boolean addAll(java.util.Collection&lt;? super T&gt;, T...) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections boolean addAll(java.util.Collection&lt;? super T&gt;, T...) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections boolean disjoint(java.util.Collection&lt;?&gt;, java.util.Collection&lt;?&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun disjoint(c1 : Collection&lt;Any?&gt;, c2 : Collection&lt;Any?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections boolean disjoint(java.util.Collection&lt;?&gt;, java.util.Collection&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections boolean disjoint(java.util.Collection&lt;?&gt;, java.util.Collection&lt;?&gt;) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections boolean replaceAll(java.util.List&lt;T&gt;, T, T)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; replaceAll(list : MutableList&lt;T&gt;, oldVal : T, newVal : T) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections boolean replaceAll(java.util.List&lt;T&gt;, T, T) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections int binarySearch(java.util.List&lt;? extends T&gt;, T, java.util.Comparator&lt;? super T&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; binarySearch(list : List&lt;T&gt;, key : T, c : Comparator&lt;in T&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections int binarySearch(java.util.List&lt;? extends T&gt;, T, java.util.Comparator&lt;? super T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections int binarySearch(java.util.List&lt;? extends T&gt;, T, java.util.Comparator&lt;? super T&gt;) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections int binarySearch(java.util.List&lt;? extends T&gt;, T, java.util.Comparator&lt;? super T&gt;) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections int binarySearch(java.util.List&lt;? extends java.lang.Comparable&lt;? super T&gt;&gt;, T)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; binarySearch(list : List&lt;Comparable&lt;T&gt;&gt;, key : T) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections int binarySearch(java.util.List&lt;? extends java.lang.Comparable&lt;? super T&gt;&gt;, T) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections int frequency(java.util.Collection&lt;?&gt;, java.lang.Object)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun frequency(c : Collection&lt;Any?&gt;, o : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections int frequency(java.util.Collection&lt;?&gt;, java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections int indexOfSubList(java.util.List&lt;?&gt;, java.util.List&lt;?&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun indexOfSubList(source : List&lt;Any?&gt;, target : List&lt;Any?&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections int indexOfSubList(java.util.List&lt;?&gt;, java.util.List&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections int indexOfSubList(java.util.List&lt;?&gt;, java.util.List&lt;?&gt;) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections int lastIndexOfSubList(java.util.List&lt;?&gt;, java.util.List&lt;?&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun lastIndexOfSubList(source : List&lt;Any?&gt;, target : List&lt;Any?&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections int lastIndexOfSubList(java.util.List&lt;?&gt;, java.util.List&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections int lastIndexOfSubList(java.util.List&lt;?&gt;, java.util.List&lt;?&gt;) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.ArrayList&lt;T&gt; list(java.util.Enumeration&lt;T&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun &lt;T&gt; list(e : Enumeration&lt;T&gt;) : ArrayList&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.ArrayList&lt;T&gt; list(java.util.Enumeration&lt;T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.Collection&lt;E&gt; checkedCollection(java.util.Collection&lt;E&gt;, java.lang.Class&lt;E&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;E&gt; checkedCollection(c : Collection&lt;E&gt;, _type : Class&lt;E&gt;) : MutableCollection&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.Collection&lt;E&gt; checkedCollection(java.util.Collection&lt;E&gt;, java.lang.Class&lt;E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.Collection&lt;E&gt; checkedCollection(java.util.Collection&lt;E&gt;, java.lang.Class&lt;E&gt;) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.Collection&lt;T&gt; synchronizedCollection(java.util.Collection&lt;T&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; synchronizedCollection(c : Collection&lt;T&gt;) : MutableCollection&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.Collection&lt;T&gt; synchronizedCollection(java.util.Collection&lt;T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.Collection&lt;T&gt; unmodifiableCollection(java.util.Collection&lt;? extends T&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; unmodifiableCollection(c : Collection&lt;T&gt;) : MutableCollection&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.Collection&lt;T&gt; unmodifiableCollection(java.util.Collection&lt;? extends T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.Comparator&lt;T&gt; reverseOrder()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.Comparator&lt;T&gt; reverseOrder(java.util.Comparator&lt;T&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; reverseOrder(cmp : Comparator&lt;T&gt;) : Comparator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.Enumeration&lt;T&gt; emptyEnumeration()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.Enumeration&lt;T&gt; enumeration(java.util.Collection&lt;T&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; enumeration(c : Collection&lt;T&gt;) : Enumeration&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.Enumeration&lt;T&gt; enumeration(java.util.Collection&lt;T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.Iterator&lt;T&gt; emptyIterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.List&lt;E&gt; checkedList(java.util.List&lt;E&gt;, java.lang.Class&lt;E&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;E&gt; checkedList(list : List&lt;E&gt;, _type : Class&lt;E&gt;) : MutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.List&lt;E&gt; checkedList(java.util.List&lt;E&gt;, java.lang.Class&lt;E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.List&lt;E&gt; checkedList(java.util.List&lt;E&gt;, java.lang.Class&lt;E&gt;) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.List&lt;T&gt; emptyList()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun &lt;T&gt; emptyList() : List&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.List&lt;T&gt; nCopies(int, T)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.List&lt;T&gt; singletonList(T)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun &lt;T&gt; singletonList(o : T?) : List&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.List&lt;T&gt; synchronizedList(java.util.List&lt;T&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; synchronizedList(list : List&lt;T&gt;) : MutableList&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.List&lt;T&gt; synchronizedList(java.util.List&lt;T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.List&lt;T&gt; unmodifiableList(java.util.List&lt;? extends T&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; unmodifiableList(list : List&lt;T&gt;) : MutableList&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.List&lt;T&gt; unmodifiableList(java.util.List&lt;? extends T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.ListIterator&lt;T&gt; emptyListIterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.Map&lt;K,V&gt; checkedMap(java.util.Map&lt;K,V&gt;, java.lang.Class&lt;K&gt;, java.lang.Class&lt;V&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;K, V&gt; checkedMap(m : Map&lt;K, V&gt;, keyType : Class&lt;K&gt;, valueType : Class&lt;V&gt;) : MutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.Map&lt;K,V&gt; emptyMap()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun &lt;K, V&gt; emptyMap() : Map&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.Map&lt;K,V&gt; singletonMap(K, V)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun &lt;K, V&gt; singletonMap(key : K, value : V) : Map&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.Map&lt;K,V&gt; synchronizedMap(java.util.Map&lt;K,V&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;K, V&gt; synchronizedMap(m : Map&lt;K, V&gt;) : MutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.Map&lt;K,V&gt; synchronizedMap(java.util.Map&lt;K,V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.Map&lt;K,V&gt; unmodifiableMap(java.util.Map&lt;? extends K,? extends V&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;K, V&gt; unmodifiableMap(m : Map&lt;out K, V&gt;) : MutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.Map&lt;K,V&gt; unmodifiableMap(java.util.Map&lt;? extends K,? extends V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.Queue&lt;T&gt; asLifoQueue(java.util.Deque&lt;T&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun &lt;T&gt; asLifoQueue(deque : Deque&lt;T&gt;) : Queue&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.Queue&lt;T&gt; asLifoQueue(java.util.Deque&lt;T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.Set&lt;E&gt; checkedSet(java.util.Set&lt;E&gt;, java.lang.Class&lt;E&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;E&gt; checkedSet(s : Set&lt;E&gt;, _type : Class&lt;E&gt;) : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.Set&lt;E&gt; checkedSet(java.util.Set&lt;E&gt;, java.lang.Class&lt;E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.Set&lt;E&gt; checkedSet(java.util.Set&lt;E&gt;, java.lang.Class&lt;E&gt;) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.Set&lt;E&gt; newSetFromMap(java.util.Map&lt;E,java.lang.Boolean&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;E&gt; newSetFromMap(map : Map&lt;E, Boolean&gt;) : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.Set&lt;E&gt; newSetFromMap(java.util.Map&lt;E,java.lang.Boolean&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.Set&lt;T&gt; emptySet()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun &lt;T&gt; emptySet() : Set&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.Set&lt;T&gt; singleton(T)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun &lt;T&gt; singleton(o : T?) : Set&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.Set&lt;T&gt; synchronizedSet(java.util.Set&lt;T&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun &lt;T&gt; synchronizedSet(s : Set&lt;T&gt;) : MutableSet&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.Set&lt;T&gt; synchronizedSet(java.util.Set&lt;T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.Set&lt;T&gt; unmodifiableSet(java.util.Set&lt;? extends T&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun &lt;T&gt; unmodifiableSet(s : Set&lt;T&gt;) : MutableSet&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.Set&lt;T&gt; unmodifiableSet(java.util.Set&lt;? extends T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.SortedMap&lt;K,V&gt; checkedSortedMap(java.util.SortedMap&lt;K,V&gt;, java.lang.Class&lt;K&gt;, java.lang.Class&lt;V&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;K, V&gt; checkedSortedMap(m : SortedMap&lt;K, V&gt;, keyType : Class&lt;K&gt;, valueType : Class&lt;V&gt;) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.SortedMap&lt;K,V&gt; checkedSortedMap(java.util.SortedMap&lt;K,V&gt;, java.lang.Class&lt;K&gt;, java.lang.Class&lt;V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.SortedMap&lt;K,V&gt; checkedSortedMap(java.util.SortedMap&lt;K,V&gt;, java.lang.Class&lt;K&gt;, java.lang.Class&lt;V&gt;) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.SortedMap&lt;K,V&gt; checkedSortedMap(java.util.SortedMap&lt;K,V&gt;, java.lang.Class&lt;K&gt;, java.lang.Class&lt;V&gt;) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.SortedMap&lt;K,V&gt; synchronizedSortedMap(java.util.SortedMap&lt;K,V&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;K, V&gt; synchronizedSortedMap(m : SortedMap&lt;K, V&gt;) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.SortedMap&lt;K,V&gt; synchronizedSortedMap(java.util.SortedMap&lt;K,V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.SortedMap&lt;K,V&gt; unmodifiableSortedMap(java.util.SortedMap&lt;K,? extends V&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;K, V&gt; unmodifiableSortedMap(m : SortedMap&lt;K, out V&gt;) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.SortedMap&lt;K,V&gt; unmodifiableSortedMap(java.util.SortedMap&lt;K,? extends V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.SortedSet&lt;E&gt; checkedSortedSet(java.util.SortedSet&lt;E&gt;, java.lang.Class&lt;E&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;E&gt; checkedSortedSet(s : SortedSet&lt;E&gt;, _type : Class&lt;E&gt;) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.SortedSet&lt;E&gt; checkedSortedSet(java.util.SortedSet&lt;E&gt;, java.lang.Class&lt;E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.SortedSet&lt;E&gt; checkedSortedSet(java.util.SortedSet&lt;E&gt;, java.lang.Class&lt;E&gt;) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.SortedSet&lt;T&gt; synchronizedSortedSet(java.util.SortedSet&lt;T&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; synchronizedSortedSet(s : SortedSet&lt;T&gt;) : SortedSet&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.SortedSet&lt;T&gt; synchronizedSortedSet(java.util.SortedSet&lt;T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections java.util.SortedSet&lt;T&gt; unmodifiableSortedSet(java.util.SortedSet&lt;T&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; unmodifiableSortedSet(s : SortedSet&lt;T&gt;) : SortedSet&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections java.util.SortedSet&lt;T&gt; unmodifiableSortedSet(java.util.SortedSet&lt;T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections void copy(java.util.List&lt;? super T&gt;, java.util.List&lt;? extends T&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; copy(dest : MutableList&lt;in T&gt;, src : List&lt;T&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections void copy(java.util.List&lt;? super T&gt;, java.util.List&lt;? extends T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections void copy(java.util.List&lt;? super T&gt;, java.util.List&lt;? extends T&gt;) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections void fill(java.util.List&lt;? super T&gt;, T)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun &lt;T&gt; fill(list : MutableList&lt;in T&gt;, obj : T) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections void fill(java.util.List&lt;? super T&gt;, T) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections void reverse(java.util.List&lt;?&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun reverse(list : MutableList&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections void reverse(java.util.List&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections void rotate(java.util.List&lt;?&gt;, int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun rotate(list : MutableList&lt;out Any?&gt;, distance : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections void rotate(java.util.List&lt;?&gt;, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections void shuffle(java.util.List&lt;?&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun shuffle(list : MutableList&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections void shuffle(java.util.List&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections void shuffle(java.util.List&lt;?&gt;, java.util.Random)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun shuffle(list : MutableList&lt;out Any?&gt;, rnd : Random) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections void shuffle(java.util.List&lt;?&gt;, java.util.Random) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections void sort(java.util.List&lt;T&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T : Comparable&lt;T&gt;&gt; sort(list : MutableList&lt;T&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections void sort(java.util.List&lt;T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections void sort(java.util.List&lt;T&gt;, java.util.Comparator&lt;? super T&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;T&gt; sort(list : MutableList&lt;T&gt;, c : Comparator&lt;in T&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections void sort(java.util.List&lt;T&gt;, java.util.Comparator&lt;? super T&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Collections void swap(java.util.List&lt;?&gt;, int, int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun swap(list : MutableList&lt;out Any?&gt;, i : Int, j : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Collections void swap(java.util.List&lt;?&gt;, int, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Comparator int compare(T, T) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Comparator int compare(T, T) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Currency java.lang.String getCurrencyCode()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Currency java.lang.String getSymbol()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Currency java.lang.String getSymbol(java.util.Locale)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Currency java.lang.String getSymbol(java.util.Locale) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Currency java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Currency java.util.Currency getInstance(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Currency java.util.Currency getInstance(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Currency java.util.Currency getInstance(java.util.Locale) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Currency java.util.Set&lt;java.util.Currency&gt; getAvailableCurrencies()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Date Date(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Date boolean after(java.util.Date) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Date boolean before(java.util.Date) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Date int compareTo(java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Date int compareTo(java.util.Date) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Date java.lang.String toGMTString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Date java.lang.String toLocaleString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Date java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Date long parse(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Deque E element()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun element() : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque E getFirst()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun getFirst() : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque E getLast()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun getLast() : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque E peek()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun peek() : E?&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque E peekFirst()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun peekFirst() : E?&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque E peekLast()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun peekLast() : E?&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque E poll()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun poll() : E?&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque E pollFirst()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun pollFirst() : E?&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque E pollLast()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun pollLast() : E?&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque E pop()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun pop() : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque E remove()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun remove() : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque E removeFirst()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun removeFirst() : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque E removeLast()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun removeLast() : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque boolean add(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun add(e : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque boolean offer(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun offer(e : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque boolean offer(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Deque boolean offerFirst(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun offerFirst(e : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque boolean offerFirst(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Deque boolean offerLast(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun offerLast(e : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque boolean offerLast(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Deque boolean removeFirstOccurrence(java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Deque boolean removeLastOccurrence(java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Deque java.util.Iterator&lt;E&gt; descendingIterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun descendingIterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque java.util.Iterator&lt;E&gt; iterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque void addFirst(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun addFirst(e : E)&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque void addFirst(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Deque void addLast(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun addLast(e : E)&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque void addLast(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Deque void push(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun push(e : E)&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Deque void push(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Dictionary V put(K, V)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun put(key : K, value : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Dictionary V put(K, V) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Dictionary V put(K, V) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Dictionary java.util.Enumeration&lt;K&gt; keys()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Dictionary java.util.Enumeration&lt;V&gt; elements()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.DuplicateFormatFlagsException DuplicateFormatFlagsException(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.DuplicateFormatFlagsException java.lang.String getMessage()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumMap EnumMap(java.util.EnumMap&lt;K,? extends V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumMap EnumMap(java.util.Map&lt;K,? extends V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumMap V put(K, V) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumMap java.lang.Object clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumMap java.lang.Object put(java.lang.Object, java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumMap java.lang.Object put(java.lang.Object, java.lang.Object) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumMap java.util.Collection&lt;V&gt; values()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumMap java.util.EnumMap&lt;K,V&gt; clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumMap java.util.Set&lt;K&gt; keySet()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumMap void putAll(java.util.Map&lt;? extends K,? extends V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.lang.Object clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; allOf(java.lang.Class&lt;E&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; complementOf(java.util.EnumSet&lt;E&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; complementOf(java.util.EnumSet&lt;E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; copyOf(java.util.Collection&lt;E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; copyOf(java.util.EnumSet&lt;E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; noneOf(java.lang.Class&lt;E&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; of(E)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; of(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; of(E, E)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; of(E, E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; of(E, E, E)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; of(E, E, E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; of(E, E, E, E)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; of(E, E, E, E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; of(E, E, E, E, E)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; of(E, E, E, E, E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; of(E, E...)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; of(E, E...) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; of(E, E...) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; range(E, E)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; range(E, E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EnumSet java.util.EnumSet&lt;E&gt; range(E, E) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Enumeration E nextElement()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun nextElement() : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.EventObject EventObject(java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.EventObject java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.FormatFlagsConversionMismatchException FormatFlagsConversionMismatchException(java.lang.String, char) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.FormatFlagsConversionMismatchException java.lang.String getMessage()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Formatter Formatter(java.io.File, java.lang.String, java.util.Locale) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Formatter Formatter(java.io.PrintStream) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Formatter Formatter(java.lang.String, java.lang.String, java.util.Locale) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Formatter java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Formatter java.util.Formatter format(java.lang.String, java.lang.Object...)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Formatter java.util.Formatter format(java.util.Locale, java.lang.String, java.lang.Object...)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Formatter.BigDecimalLayoutForm java.util.Formatter.BigDecimalLayoutForm valueOf(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.GregorianCalendar GregorianCalendar(java.util.Locale) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.GregorianCalendar GregorianCalendar(java.util.TimeZone) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.GregorianCalendar GregorianCalendar(java.util.TimeZone, java.util.Locale) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.GregorianCalendar GregorianCalendar(java.util.TimeZone, java.util.Locale) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.GregorianCalendar java.lang.Object clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.GregorianCalendar java.util.Date getGregorianChange()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.GregorianCalendar java.util.TimeZone getTimeZone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.GregorianCalendar void setGregorianChange(java.util.Date) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.GregorianCalendar void setTimeZone(java.util.TimeZone) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.HashMap HashMap(java.util.Map&lt;? extends K,? extends V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.HashMap V put(K, V)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun put(key : K, value : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name="java.util.HashMap V put(K, V) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.HashMap V put(K, V) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.HashMap java.lang.Object clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.HashMap java.util.Collection&lt;V&gt; values()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun values() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.HashMap java.util.Set&lt;K&gt; keySet()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun keySet() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.HashMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;MutableMap.MutableEntry&lt;K, V&gt;&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.HashMap void putAll(java.util.Map&lt;? extends K,? extends V&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun putAll(m : Map&lt;out K, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name="java.util.HashMap void putAll(java.util.Map&lt;? extends K,? extends V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.HashSet HashSet(java.util.Collection&lt;? extends E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.HashSet boolean add(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun add(e : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.HashSet java.lang.Object clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.HashSet java.util.Iterator&lt;E&gt; iterator()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Hashtable Hashtable(java.util.Map&lt;? extends K,? extends V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Hashtable V put(K, V) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Hashtable V put(K, V) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Hashtable boolean contains(java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Hashtable java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Hashtable java.util.Collection&lt;V&gt; values()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Hashtable java.util.Enumeration&lt;K&gt; keys()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Hashtable java.util.Enumeration&lt;V&gt; elements()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Hashtable java.util.Set&lt;K&gt; keySet()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Hashtable java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Hashtable void putAll(java.util.Map&lt;? extends K,? extends V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.IdentityHashMap IdentityHashMap(java.util.Map&lt;? extends K,? extends V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.IdentityHashMap V put(K, V) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.IdentityHashMap V put(K, V) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.IdentityHashMap java.lang.Object clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.IdentityHashMap java.util.Collection&lt;V&gt; values()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.IdentityHashMap java.util.Set&lt;K&gt; keySet()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.IdentityHashMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.IdentityHashMap void putAll(java.util.Map&lt;? extends K,? extends V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.IllegalFormatCodePointException java.lang.String getMessage()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.IllegalFormatConversionException IllegalFormatConversionException(char, java.lang.Class&lt;?&gt;) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.IllegalFormatConversionException java.lang.String getMessage()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.IllegalFormatFlagsException IllegalFormatFlagsException(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.IllegalFormatFlagsException java.lang.String getMessage()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.IllegalFormatPrecisionException java.lang.String getMessage()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.IllegalFormatWidthException java.lang.String getMessage()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Iterator E next()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun next() : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedHashMap boolean removeEldestEntry(java.util.Map.Entry&lt;K,V&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun removeEldestEntry(eldest : Map.Entry&lt;K, V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedHashSet LinkedHashSet(java.util.Collection&lt;? extends E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.LinkedList E element()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun element() : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList E get(int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun get(index : Int) : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList E getFirst()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun getFirst() : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList E getLast()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun getLast() : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList E peek()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun peek() : E?&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList E peekFirst()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun peekFirst() : E?&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList E peekLast()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun peekLast() : E?&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList E poll()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun poll() : E?&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList E pollFirst()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun pollFirst() : E?&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList E pollLast()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun pollLast() : E?&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList E pop()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun pop() : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList E remove()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun remove() : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList E remove(int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun remove(index : Int) : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList E removeFirst()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun removeFirst() : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList E removeLast()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun removeLast() : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList E set(int, E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun set(index : Int, element : E) : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList LinkedList(java.util.Collection&lt;? extends E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.LinkedList T[] toArray(T[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun &lt;T&gt; toArray(a : Array&lt;out T&gt;) : Array&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList T[] toArray(T[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.LinkedList boolean add(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun add(e : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList boolean addAll(int, java.util.Collection&lt;? extends E&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun addAll(index : Int, c : Collection&lt;E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList boolean addAll(int, java.util.Collection&lt;? extends E&gt;) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.LinkedList boolean addAll(java.util.Collection&lt;? extends E&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun addAll(c : Collection&lt;E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList boolean addAll(java.util.Collection&lt;? extends E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.LinkedList boolean offer(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun offer(e : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList boolean offer(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.LinkedList boolean offerFirst(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun offerFirst(e : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList boolean offerFirst(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.LinkedList boolean offerLast(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun offerLast(e : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList boolean offerLast(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.LinkedList boolean removeFirstOccurrence(java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.LinkedList boolean removeLastOccurrence(java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.LinkedList java.lang.Object clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.LinkedList java.lang.Object[] toArray()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun toArray() : Array&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList java.util.Iterator&lt;E&gt; descendingIterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun descendingIterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList java.util.ListIterator&lt;E&gt; listIterator(int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun listIterator(index : Int) : MutableListIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList void add(int, E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun add(index : Int, element : E)&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList void addFirst(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun addFirst(e : E)&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList void addFirst(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.LinkedList void addLast(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun addLast(e : E)&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList void addLast(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.LinkedList void push(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun push(e : E)&quot;"/>
        </annotation>
    </item>
    <item name="java.util.LinkedList void push(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.List E get(int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun get(index : Int) : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.List E remove(int)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun remove(index : Int) : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.List E set(int, E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun set(index : Int, element : E) : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.List T[] toArray(T[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun &lt;T&gt; toArray(a : Array&lt;out T&gt;) : Array&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.List T[] toArray(T[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.List boolean add(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun add(e : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.List boolean addAll(int, java.util.Collection&lt;? extends E&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun addAll(index : Int, c : Collection&lt;E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.List boolean addAll(int, java.util.Collection&lt;? extends E&gt;) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.List boolean addAll(java.util.Collection&lt;? extends E&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun addAll(c : Collection&lt;E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.List boolean addAll(java.util.Collection&lt;? extends E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.List boolean containsAll(java.util.Collection&lt;?&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun containsAll(c : Collection&lt;Any?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.List boolean containsAll(java.util.Collection&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.List boolean removeAll(java.util.Collection&lt;?&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun removeAll(c : Collection&lt;Any?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.List boolean removeAll(java.util.Collection&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.List boolean retainAll(java.util.Collection&lt;?&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun retainAll(c : Collection&lt;Any?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.List java.lang.Object[] toArray()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun toArray() : Array&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.List java.util.Iterator&lt;E&gt; iterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.List java.util.List&lt;E&gt; subList(int, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun subList(fromIndex : Int, toIndex : Int) : List&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.List java.util.ListIterator&lt;E&gt; listIterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun listIterator() : MutableListIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.List java.util.ListIterator&lt;E&gt; listIterator(int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun listIterator(index : Int) : MutableListIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.List void add(int, E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun add(index : Int, element : E)&quot;"/>
        </annotation>
    </item>
    <item name="java.util.ListIterator void add(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ListResourceBundle java.lang.Object handleGetObject(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ListResourceBundle java.lang.Object[][] getContents()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ListResourceBundle java.util.Enumeration&lt;java.lang.String&gt; getKeys()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale Locale(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale Locale(java.lang.String, java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale Locale(java.lang.String, java.lang.String) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale Locale(java.lang.String, java.lang.String, java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale Locale(java.lang.String, java.lang.String, java.lang.String) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale Locale(java.lang.String, java.lang.String, java.lang.String) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.Object clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String getCountry()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String getDisplayCountry()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String getDisplayCountry(java.util.Locale)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String getDisplayCountry(java.util.Locale) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String getDisplayLanguage()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String getDisplayLanguage(java.util.Locale)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String getDisplayLanguage(java.util.Locale) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String getDisplayName()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String getDisplayName(java.util.Locale)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String getDisplayName(java.util.Locale) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String getDisplayScript()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String getDisplayScript(java.util.Locale)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String getDisplayVariant()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String getDisplayVariant(java.util.Locale)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String getDisplayVariant(java.util.Locale) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String getISO3Country()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String getISO3Language()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String getLanguage()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String getVariant()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String toLanguageTag()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.lang.String[] getISOCountries()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun getISOCountries() : Array&lt;out String&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Locale java.lang.String[] getISOLanguages()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun getISOLanguages() : Array&lt;out String&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Locale java.util.Locale getDefault()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.util.Locale getDefault(java.util.Locale.Category) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale java.util.Locale[] getAvailableLocales()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun getAvailableLocales() : Array&lt;out Locale&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Locale void setDefault(java.util.Locale) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale void setDefault(java.util.Locale.Category, java.util.Locale) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale void setDefault(java.util.Locale.Category, java.util.Locale) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale.Builder java.util.Locale.Builder addUnicodeLocaleAttribute(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale.Builder java.util.Locale.Builder clear()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale.Builder java.util.Locale.Builder clearExtensions()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale.Builder java.util.Locale.Builder removeUnicodeLocaleAttribute(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale.Builder java.util.Locale.Builder setExtension(char, java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale.Builder java.util.Locale.Builder setLanguage(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale.Builder java.util.Locale.Builder setLanguageTag(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale.Builder java.util.Locale.Builder setLocale(java.util.Locale)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale.Builder java.util.Locale.Builder setLocale(java.util.Locale) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale.Builder java.util.Locale.Builder setRegion(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale.Builder java.util.Locale.Builder setScript(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale.Builder java.util.Locale.Builder setUnicodeLocaleKeyword(java.lang.String, java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale.Builder java.util.Locale.Builder setVariant(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Locale.Category java.util.Locale.Category valueOf(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Map V put(K, V)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun put(key : K, value : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Map V put(K, V) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Map V put(K, V) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Map java.util.Collection&lt;V&gt; values()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun values() : Collection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Map java.util.Set&lt;K&gt; keySet()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun keySet() : Set&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Map java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun entrySet() : Set&lt;Map.Entry&lt;K, V&gt;&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Map void putAll(java.util.Map&lt;? extends K,? extends V&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun putAll(m : Map&lt;out K, out V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Map void putAll(java.util.Map&lt;? extends K,? extends V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Map.Entry K getKey()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun getKey() : K&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Map.Entry V getValue()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun getValue() : V&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Map.Entry V setValue(V)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun setValue(value : V) : V&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Map.Entry V setValue(V) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.MissingFormatArgumentException MissingFormatArgumentException(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.MissingFormatArgumentException java.lang.String getMessage()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.MissingFormatWidthException MissingFormatWidthException(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.NavigableMap java.util.NavigableMap&lt;K,V&gt; headMap(K, boolean)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.NavigableMap java.util.NavigableMap&lt;K,V&gt; headMap(K, boolean) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.NavigableMap java.util.NavigableMap&lt;K,V&gt; subMap(K, boolean, K, boolean)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.NavigableMap java.util.NavigableMap&lt;K,V&gt; subMap(K, boolean, K, boolean) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.NavigableMap java.util.NavigableMap&lt;K,V&gt; subMap(K, boolean, K, boolean) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.NavigableMap java.util.NavigableMap&lt;K,V&gt; tailMap(K, boolean)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.NavigableMap java.util.NavigableMap&lt;K,V&gt; tailMap(K, boolean) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.NavigableMap java.util.SortedMap&lt;K,V&gt; headMap(K)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.NavigableMap java.util.SortedMap&lt;K,V&gt; headMap(K) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.NavigableMap java.util.SortedMap&lt;K,V&gt; subMap(K, K)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.NavigableMap java.util.SortedMap&lt;K,V&gt; subMap(K, K) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.NavigableMap java.util.SortedMap&lt;K,V&gt; subMap(K, K) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.NavigableMap java.util.SortedMap&lt;K,V&gt; tailMap(K)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.NavigableMap java.util.SortedMap&lt;K,V&gt; tailMap(K) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.NavigableSet java.util.Iterator&lt;E&gt; descendingIterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun descendingIterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.NavigableSet java.util.Iterator&lt;E&gt; iterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.NavigableSet java.util.NavigableSet&lt;E&gt; descendingSet()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun descendingSet() : NavigableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.NavigableSet java.util.NavigableSet&lt;E&gt; headSet(E, boolean)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun headSet(toElement : E, inclusive : Boolean) : NavigableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.NavigableSet java.util.NavigableSet&lt;E&gt; subSet(E, boolean, E, boolean)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun subSet(fromElement : E, fromInclusive : Boolean, toElement : E, toInclusive : Boolean) : NavigableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.NavigableSet java.util.NavigableSet&lt;E&gt; tailSet(E, boolean)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun tailSet(fromElement : E, inclusive : Boolean) : NavigableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.NavigableSet java.util.SortedSet&lt;E&gt; headSet(E)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.NavigableSet java.util.SortedSet&lt;E&gt; subSet(E, E)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.NavigableSet java.util.SortedSet&lt;E&gt; tailSet(E)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Objects T requireNonNull(T)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Objects T requireNonNull(T) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Objects T requireNonNull(T, java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Objects T requireNonNull(T, java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Objects int compare(T, T, java.util.Comparator&lt;? super T&gt;) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Objects java.lang.String toString(java.lang.Object)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Observable void addObserver(java.util.Observer) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.PriorityQueue PriorityQueue(java.util.PriorityQueue&lt;? extends E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.PriorityQueue PriorityQueue(java.util.SortedSet&lt;? extends E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.PriorityQueue T[] toArray(T[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.PriorityQueue T[] toArray(T[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.PriorityQueue boolean offer(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.PriorityQueue java.lang.Object[] toArray()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.PriorityQueue java.util.Iterator&lt;E&gt; iterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Properties java.lang.String getProperty(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Properties java.util.Enumeration&lt;?&gt; propertyNames()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Properties void list(java.io.PrintStream) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Properties void list(java.io.PrintWriter) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Properties void loadFromXML(java.io.InputStream) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Properties void storeToXML(java.io.OutputStream, java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Properties void storeToXML(java.io.OutputStream, java.lang.String, java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.PropertyPermission java.security.PermissionCollection newPermissionCollection()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.PropertyResourceBundle java.lang.Object handleGetObject(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.PropertyResourceBundle java.util.Enumeration&lt;java.lang.String&gt; getKeys()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Queue E element()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun element() : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Queue E peek()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun peek() : E?&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Queue E poll()">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun poll() : E?&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Queue E remove()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun remove() : E&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Queue boolean add(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun add(e : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Queue boolean offer(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun offer(e : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Queue boolean offer(E) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Random void nextBytes(byte[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle boolean containsKey(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle java.lang.Object getObject(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle java.lang.Object handleGetObject(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle java.lang.String getString(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle java.lang.String[] getStringArray(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.Locale) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader, java.util.ResourceBundle.Control) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader, java.util.ResourceBundle.Control) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader, java.util.ResourceBundle.Control) 3">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.Locale, java.util.ResourceBundle.Control) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.Locale, java.util.ResourceBundle.Control) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle java.util.ResourceBundle getBundle(java.lang.String, java.util.ResourceBundle.Control) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle java.util.Set&lt;java.lang.String&gt; keySet()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle void clearCache(java.lang.ClassLoader) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle.Control boolean needsReload(java.lang.String, java.util.Locale, java.lang.String, java.lang.ClassLoader, java.util.ResourceBundle, long) 4">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle.Control java.lang.String toBundleName(java.lang.String, java.util.Locale) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle.Control java.lang.String toResourceName(java.lang.String, java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle.Control java.lang.String toResourceName(java.lang.String, java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle.Control java.lang.String toResourceName(java.lang.String, java.lang.String) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle.Control java.util.List&lt;java.lang.String&gt; getFormats(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle.Control java.util.List&lt;java.lang.String&gt; getFormats(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle.Control java.util.List&lt;java.util.Locale&gt; getCandidateLocales(java.lang.String, java.util.Locale)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle.Control java.util.List&lt;java.util.Locale&gt; getCandidateLocales(java.lang.String, java.util.Locale) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle.Control java.util.List&lt;java.util.Locale&gt; getCandidateLocales(java.lang.String, java.util.Locale) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle.Control java.util.Locale getFallbackLocale(java.lang.String, java.util.Locale) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle.Control java.util.Locale getFallbackLocale(java.lang.String, java.util.Locale) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle.Control java.util.ResourceBundle newBundle(java.lang.String, java.util.Locale, java.lang.String, java.lang.ClassLoader, boolean) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle.Control java.util.ResourceBundle newBundle(java.lang.String, java.util.Locale, java.lang.String, java.lang.ClassLoader, boolean) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle.Control java.util.ResourceBundle.Control getControl(java.util.List&lt;java.lang.String&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle.Control java.util.ResourceBundle.Control getControl(java.util.List&lt;java.lang.String&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle.Control java.util.ResourceBundle.Control getNoFallbackControl(java.util.List&lt;java.lang.String&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle.Control java.util.ResourceBundle.Control getNoFallbackControl(java.util.List&lt;java.lang.String&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle.Control long getTimeToLive(java.lang.String, java.util.Locale) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ResourceBundle.Control long getTimeToLive(java.lang.String, java.util.Locale) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner Scanner(java.io.File) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner Scanner(java.io.File, java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner Scanner(java.io.File, java.lang.String) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner Scanner(java.io.InputStream) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner Scanner(java.io.InputStream, java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner Scanner(java.io.InputStream, java.lang.String) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner Scanner(java.lang.Readable) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner Scanner(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner Scanner(java.nio.channels.ReadableByteChannel) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner Scanner(java.nio.channels.ReadableByteChannel, java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner Scanner(java.nio.channels.ReadableByteChannel, java.lang.String) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner Scanner(java.nio.file.Path) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner Scanner(java.nio.file.Path, java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner Scanner(java.nio.file.Path, java.lang.String) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner boolean hasNext(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner boolean hasNext(java.util.regex.Pattern) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.lang.Object next()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.lang.String findInLine(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.lang.String findInLine(java.util.regex.Pattern) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.lang.String findWithinHorizon(java.lang.String, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.lang.String findWithinHorizon(java.util.regex.Pattern, int) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.lang.String next()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.lang.String next(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.lang.String next(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.lang.String next(java.util.regex.Pattern)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.lang.String next(java.util.regex.Pattern) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.lang.String nextLine()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.math.BigDecimal nextBigDecimal()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.math.BigInteger nextBigInteger()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.math.BigInteger nextBigInteger(int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.util.Scanner reset()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.util.Scanner skip(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.util.Scanner skip(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.util.Scanner skip(java.util.regex.Pattern)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.util.Scanner skip(java.util.regex.Pattern) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.util.Scanner useDelimiter(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.util.Scanner useDelimiter(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.util.Scanner useDelimiter(java.util.regex.Pattern)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.util.Scanner useDelimiter(java.util.regex.Pattern) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.util.Scanner useLocale(java.util.Locale)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.util.Scanner useLocale(java.util.Locale) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.util.Scanner useRadix(int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.util.regex.MatchResult match()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Scanner java.util.regex.Pattern delimiter()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ServiceLoader java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ServiceLoader java.util.Iterator&lt;S&gt; iterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ServiceLoader java.util.ServiceLoader&lt;S&gt; load(java.lang.Class&lt;S&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ServiceLoader java.util.ServiceLoader&lt;S&gt; load(java.lang.Class&lt;S&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ServiceLoader java.util.ServiceLoader&lt;S&gt; load(java.lang.Class&lt;S&gt;, java.lang.ClassLoader)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ServiceLoader java.util.ServiceLoader&lt;S&gt; load(java.lang.Class&lt;S&gt;, java.lang.ClassLoader) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ServiceLoader java.util.ServiceLoader&lt;S&gt; loadInstalled(java.lang.Class&lt;S&gt;)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.ServiceLoader java.util.ServiceLoader&lt;S&gt; loadInstalled(java.lang.Class&lt;S&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Set T[] toArray(T[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun &lt;T&gt; toArray(a : Array&lt;out T&gt;) : Array&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Set T[] toArray(T[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Set boolean add(E)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun add(e : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Set boolean addAll(java.util.Collection&lt;? extends E&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun addAll(c : Collection&lt;E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Set boolean addAll(java.util.Collection&lt;? extends E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Set boolean containsAll(java.util.Collection&lt;?&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun containsAll(c : Collection&lt;Any?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Set boolean containsAll(java.util.Collection&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Set boolean removeAll(java.util.Collection&lt;?&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun removeAll(c : Collection&lt;Any?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Set boolean removeAll(java.util.Collection&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Set boolean retainAll(java.util.Collection&lt;?&gt;)">
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun retainAll(c : Collection&lt;Any?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Set java.lang.Object[] toArray()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun toArray() : Array&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.Set java.util.Iterator&lt;E&gt; iterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.SimpleTimeZone boolean inDaylightTime(java.util.Date) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.SimpleTimeZone java.lang.Object clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.SimpleTimeZone java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.SortedMap java.util.Comparator&lt;? super K&gt; comparator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun comparator() : Comparator&lt;in K&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.SortedMap java.util.SortedMap&lt;K,V&gt; headMap(K)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun headMap(toKey : K) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.SortedMap java.util.SortedMap&lt;K,V&gt; headMap(K) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.SortedMap java.util.SortedMap&lt;K,V&gt; subMap(K, K)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun subMap(fromKey : K, toKey : K) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.SortedMap java.util.SortedMap&lt;K,V&gt; subMap(K, K) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.SortedMap java.util.SortedMap&lt;K,V&gt; subMap(K, K) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.SortedMap java.util.SortedMap&lt;K,V&gt; tailMap(K)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun tailMap(fromKey : K) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.SortedMap java.util.SortedMap&lt;K,V&gt; tailMap(K) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.SortedSet java.util.Comparator&lt;? super E&gt; comparator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun comparator() : Comparator&lt;in E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.SortedSet java.util.SortedSet&lt;E&gt; headSet(E)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun headSet(toElement : E) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.SortedSet java.util.SortedSet&lt;E&gt; subSet(E, E)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun subSet(fromElement : E, toElement : E) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.SortedSet java.util.SortedSet&lt;E&gt; tailSet(E)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
        <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value" val="&quot;fun tailSet(fromElement : E) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name="java.util.StringTokenizer StringTokenizer(java.lang.String, java.lang.String, boolean) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.StringTokenizer java.lang.Object nextElement()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.StringTokenizer java.lang.String nextToken()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.StringTokenizer java.lang.String nextToken(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TimeZone boolean inDaylightTime(java.util.Date) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TimeZone java.lang.Object clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TimeZone java.util.TimeZone getDefault()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TimeZone java.util.TimeZone getTimeZone(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TimeZone void setID(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Timer Timer(java.lang.String, boolean) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Timer void schedule(java.util.TimerTask, java.util.Date) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Timer void schedule(java.util.TimerTask, java.util.Date) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Timer void schedule(java.util.TimerTask, java.util.Date, long) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Timer void schedule(java.util.TimerTask, java.util.Date, long) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Timer void schedule(java.util.TimerTask, long) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Timer void schedule(java.util.TimerTask, long, long) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Timer void scheduleAtFixedRate(java.util.TimerTask, java.util.Date, long) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Timer void scheduleAtFixedRate(java.util.TimerTask, java.util.Date, long) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Timer void scheduleAtFixedRate(java.util.TimerTask, long, long) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeMap TreeMap(java.util.Map&lt;? extends K,? extends V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeMap TreeMap(java.util.SortedMap&lt;K,? extends V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeMap V put(K, V) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeMap V put(K, V) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeMap java.lang.Object clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeMap java.util.NavigableMap&lt;K,V&gt; headMap(K, boolean)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeMap java.util.NavigableMap&lt;K,V&gt; headMap(K, boolean) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeMap java.util.NavigableMap&lt;K,V&gt; subMap(K, boolean, K, boolean)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeMap java.util.NavigableMap&lt;K,V&gt; subMap(K, boolean, K, boolean) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeMap java.util.NavigableMap&lt;K,V&gt; subMap(K, boolean, K, boolean) 2">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeMap java.util.NavigableMap&lt;K,V&gt; tailMap(K, boolean)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeMap java.util.NavigableMap&lt;K,V&gt; tailMap(K, boolean) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeMap java.util.SortedMap&lt;K,V&gt; headMap(K)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeMap java.util.SortedMap&lt;K,V&gt; headMap(K) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeMap java.util.SortedMap&lt;K,V&gt; subMap(K, K)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeMap java.util.SortedMap&lt;K,V&gt; subMap(K, K) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeMap java.util.SortedMap&lt;K,V&gt; subMap(K, K) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeMap java.util.SortedMap&lt;K,V&gt; tailMap(K)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeMap java.util.SortedMap&lt;K,V&gt; tailMap(K) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeMap void putAll(java.util.Map&lt;? extends K,? extends V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeSet TreeSet(java.util.SortedSet&lt;E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeSet boolean addAll(java.util.Collection&lt;? extends E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeSet java.lang.Object clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeSet java.util.NavigableSet&lt;E&gt; descendingSet()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeSet java.util.NavigableSet&lt;E&gt; headSet(E, boolean)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeSet java.util.NavigableSet&lt;E&gt; subSet(E, boolean, E, boolean)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeSet java.util.NavigableSet&lt;E&gt; tailSet(E, boolean)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeSet java.util.SortedSet&lt;E&gt; headSet(E)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeSet java.util.SortedSet&lt;E&gt; subSet(E, E)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.TreeSet java.util.SortedSet&lt;E&gt; tailSet(E)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.UUID int compareTo(java.lang.Object) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.UUID int compareTo(java.util.UUID) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.UUID java.lang.String toString()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.UUID java.util.UUID fromString(java.lang.String)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.UUID java.util.UUID fromString(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.UUID java.util.UUID nameUUIDFromBytes(byte[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.UUID java.util.UUID nameUUIDFromBytes(byte[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.UUID java.util.UUID randomUUID()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.UnknownFormatConversionException UnknownFormatConversionException(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.UnknownFormatConversionException java.lang.String getMessage()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.UnknownFormatFlagsException UnknownFormatFlagsException(java.lang.String) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.UnknownFormatFlagsException java.lang.String getMessage()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Vector T[] toArray(T[])">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Vector T[] toArray(T[]) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Vector Vector(java.util.Collection&lt;? extends E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Vector boolean addAll(int, java.util.Collection&lt;? extends E&gt;) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Vector boolean addAll(java.util.Collection&lt;? extends E&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Vector boolean containsAll(java.util.Collection&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Vector boolean removeAll(java.util.Collection&lt;?&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Vector java.lang.Object clone()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Vector java.lang.Object[] toArray()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Vector java.util.Enumeration&lt;E&gt; elements()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Vector java.util.Iterator&lt;E&gt; iterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Vector java.util.List&lt;E&gt; subList(int, int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Vector java.util.ListIterator&lt;E&gt; listIterator()">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.Vector java.util.ListIterator&lt;E&gt; listIterator(int)">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.WeakHashMap V put(K, V) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.WeakHashMap V put(K, V) 1">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.WeakHashMap WeakHashMap(java.util.Map&lt;? extends K,? extends V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
    <item name="java.util.WeakHashMap void putAll(java.util.Map&lt;? extends K,? extends V&gt;) 0">
        <annotation name="org.jetbrains.annotations.NotNull"/>
    </item>
</root>

