KtFile: trickyCases.kt
  PACKAGE_DIRECTIVE
    <empty list>
  IMPORT_LIST
    IMPORT_DIRECTIVE
      PsiElement(import)('import')
      PsiWhiteSpace(' ')
      DOT_QUALIFIED_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('kotlin')
        PsiElement(DOT)('.')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('contracts')
      PsiElement(DOT)('.')
      PsiElement(MUL)('*')
  PsiWhiteSpace('\n\n')
  FUN
    MODIFIER_LIST
      ANNOTATION_ENTRY
        PsiElement(AT)('@')
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('OptIn')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            CLASS_LITERAL_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('ExperimentalContracts')
              PsiElement(COLONCOLON)('::')
              PsiElement(class)('class')
          PsiElement(RPAR)(')')
    PsiWhiteSpace('\n')
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('test1')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('x')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          NULLABLE_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('String')
            PsiElement(QUEST)('?')
      PsiElement(RPAR)(')')
    PsiElement(COLON)(':')
    PsiWhiteSpace(' ')
    TYPE_REFERENCE
      NULLABLE_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('Any')
        PsiElement(QUEST)('?')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('contract')
        PsiWhiteSpace(' ')
        LAMBDA_ARGUMENT
          LAMBDA_EXPRESSION
            FUNCTION_LITERAL
              PsiElement(LBRACE)('{')
              PsiWhiteSpace('\n        ')
              BLOCK
                BINARY_EXPRESSION
                  CALL_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('returnsNotNull')
                    VALUE_ARGUMENT_LIST
                      PsiElement(LPAR)('(')
                      PsiElement(RPAR)(')')
                  PsiWhiteSpace(' ')
                  OPERATION_REFERENCE
                    PsiElement(IDENTIFIER)('implies')
                  PsiWhiteSpace(' ')
                  PARENTHESIZED
                    PsiElement(LPAR)('(')
                    BINARY_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(IDENTIFIER)('x')
                      PsiWhiteSpace(' ')
                      OPERATION_REFERENCE
                        PsiElement(EXCLEQ)('!=')
                      PsiWhiteSpace(' ')
                      NULL
                        PsiElement(null)('null')
                    PsiElement(RPAR)(')')
              PsiWhiteSpace('\n    ')
              PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n    ')
      RETURN
        PsiElement(return)('return')
        PsiWhiteSpace(' ')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('x')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n\n')
  FUN
    MODIFIER_LIST
      ANNOTATION_ENTRY
        PsiElement(AT)('@')
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('OptIn')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            CLASS_LITERAL_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('ExperimentalContracts')
              PsiElement(COLONCOLON)('::')
              PsiElement(class)('class')
          PsiElement(RPAR)(')')
    PsiWhiteSpace('\n')
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('test2')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('x')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          NULLABLE_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('String')
            PsiElement(QUEST)('?')
      PsiElement(RPAR)(')')
    PsiElement(COLON)(':')
    PsiWhiteSpace(' ')
    TYPE_REFERENCE
      NULLABLE_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('Any')
        PsiElement(QUEST)('?')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('contract')
        PsiWhiteSpace(' ')
        LAMBDA_ARGUMENT
          LAMBDA_EXPRESSION
            FUNCTION_LITERAL
              PsiElement(LBRACE)('{')
              PsiWhiteSpace('\n        ')
              BLOCK
                BINARY_EXPRESSION
                  CALL_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('returns')
                    VALUE_ARGUMENT_LIST
                      PsiElement(LPAR)('(')
                      VALUE_ARGUMENT
                        BOOLEAN_CONSTANT
                          PsiElement(true)('true')
                      PsiElement(RPAR)(')')
                  PsiWhiteSpace(' ')
                  OPERATION_REFERENCE
                    PsiElement(IDENTIFIER)('implies')
                  PsiWhiteSpace(' ')
                  PARENTHESIZED
                    PsiElement(LPAR)('(')
                    BINARY_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(IDENTIFIER)('x')
                      PsiWhiteSpace(' ')
                      OPERATION_REFERENCE
                        PsiElement(EXCLEQ)('!=')
                      PsiWhiteSpace(' ')
                      NULL
                        PsiElement(null)('null')
                    PsiElement(RPAR)(')')
              PsiWhiteSpace('\n    ')
              PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n    ')
      RETURN
        PsiElement(return)('return')
        PsiWhiteSpace(' ')
        IF
          PsiElement(if)('if')
          PsiElement(LPAR)('(')
          CONDITION
            BINARY_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('x')
              PsiWhiteSpace(' ')
              OPERATION_REFERENCE
                PsiElement(EXCLEQ)('!=')
              PsiWhiteSpace(' ')
              NULL
                PsiElement(null)('null')
          PsiElement(RPAR)(')')
          PsiWhiteSpace(' ')
          THEN
            BOOLEAN_CONSTANT
              PsiElement(true)('true')
          PsiWhiteSpace(' ')
          PsiElement(else)('else')
          PsiWhiteSpace(' ')
          ELSE
            BOOLEAN_CONSTANT
              PsiElement(false)('false')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n\n')
  FUN
    MODIFIER_LIST
      ANNOTATION_ENTRY
        PsiElement(AT)('@')
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('OptIn')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            CLASS_LITERAL_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('ExperimentalContracts')
              PsiElement(COLONCOLON)('::')
              PsiElement(class)('class')
          PsiElement(RPAR)(')')
    PsiWhiteSpace('\n')
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('test3')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('x')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          NULLABLE_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('Any')
            PsiElement(QUEST)('?')
      PsiElement(RPAR)(')')
    PsiElement(COLON)(':')
    PsiWhiteSpace(' ')
    TYPE_REFERENCE
      NULLABLE_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('Any')
        PsiElement(QUEST)('?')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('contract')
        PsiWhiteSpace(' ')
        LAMBDA_ARGUMENT
          LAMBDA_EXPRESSION
            FUNCTION_LITERAL
              PsiElement(LBRACE)('{')
              PsiWhiteSpace('\n        ')
              BLOCK
                BINARY_EXPRESSION
                  CALL_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('returnsNotNull')
                    VALUE_ARGUMENT_LIST
                      PsiElement(LPAR)('(')
                      PsiElement(RPAR)(')')
                  PsiWhiteSpace(' ')
                  OPERATION_REFERENCE
                    PsiElement(IDENTIFIER)('implies')
                  PsiWhiteSpace(' ')
                  PARENTHESIZED
                    PsiElement(LPAR)('(')
                    BINARY_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(IDENTIFIER)('x')
                      PsiWhiteSpace(' ')
                      OPERATION_REFERENCE
                        PsiElement(EXCLEQ)('!=')
                      PsiWhiteSpace(' ')
                      NULL
                        PsiElement(null)('null')
                    PsiElement(RPAR)(')')
              PsiWhiteSpace('\n    ')
              PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      RETURN
        PsiElement(return)('return')
        PsiWhiteSpace(' ')
        IF
          PsiElement(if)('if')
          PsiElement(LPAR)('(')
          CONDITION
            BOOLEAN_CONSTANT
              PsiElement(true)('true')
          PsiElement(RPAR)(')')
          PsiWhiteSpace(' ')
          THEN
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('x')
          PsiWhiteSpace(' ')
          PsiElement(else)('else')
          PsiWhiteSpace(' ')
          ELSE
            NULL
              PsiElement(null)('null')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n\n')
  FUN
    MODIFIER_LIST
      ANNOTATION_ENTRY
        PsiElement(AT)('@')
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('OptIn')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            CLASS_LITERAL_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('ExperimentalContracts')
              PsiElement(COLONCOLON)('::')
              PsiElement(class)('class')
          PsiElement(RPAR)(')')
    PsiWhiteSpace('\n')
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('test4')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('x')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          NULLABLE_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('Any')
            PsiElement(QUEST)('?')
      PsiElement(RPAR)(')')
    PsiElement(COLON)(':')
    PsiWhiteSpace(' ')
    TYPE_REFERENCE
      NULLABLE_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('Any')
        PsiElement(QUEST)('?')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('contract')
        PsiWhiteSpace(' ')
        LAMBDA_ARGUMENT
          LAMBDA_EXPRESSION
            FUNCTION_LITERAL
              PsiElement(LBRACE)('{')
              PsiWhiteSpace('\n        ')
              BLOCK
                BINARY_EXPRESSION
                  CALL_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('returnsNotNull')
                    VALUE_ARGUMENT_LIST
                      PsiElement(LPAR)('(')
                      PsiElement(RPAR)(')')
                  PsiWhiteSpace(' ')
                  OPERATION_REFERENCE
                    PsiElement(IDENTIFIER)('implies')
                  PsiWhiteSpace(' ')
                  PARENTHESIZED
                    PsiElement(LPAR)('(')
                    BINARY_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(IDENTIFIER)('x')
                      PsiWhiteSpace(' ')
                      OPERATION_REFERENCE
                        PsiElement(EXCLEQ)('!=')
                      PsiWhiteSpace(' ')
                      NULL
                        PsiElement(null)('null')
                    PsiElement(RPAR)(')')
              PsiWhiteSpace('\n    ')
              PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      RETURN
        PsiElement(return)('return')
        PsiWhiteSpace(' ')
        IF
          PsiElement(if)('if')
          PsiElement(LPAR)('(')
          CONDITION
            BINARY_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('x')
              PsiWhiteSpace(' ')
              OPERATION_REFERENCE
                PsiElement(EXCLEQ)('!=')
              PsiWhiteSpace(' ')
              NULL
                PsiElement(null)('null')
          PsiElement(RPAR)(')')
          PsiWhiteSpace(' ')
          THEN
            BLOCK
              PsiElement(LBRACE)('{')
              PsiWhiteSpace('\n        ')
              IF
                PsiElement(if)('if')
                PsiWhiteSpace(' ')
                PsiElement(LPAR)('(')
                CONDITION
                  BOOLEAN_CONSTANT
                    PsiElement(true)('true')
                PsiElement(RPAR)(')')
                PsiWhiteSpace(' ')
                THEN
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('x')
                PsiWhiteSpace(' ')
                PsiElement(else)('else')
                PsiWhiteSpace(' ')
                ELSE
                  BOOLEAN_CONSTANT
                    PsiElement(false)('false')
              PsiWhiteSpace('\n    ')
              PsiElement(RBRACE)('}')
          PsiWhiteSpace(' ')
          PsiElement(else)('else')
          PsiWhiteSpace(' ')
          ELSE
            BLOCK
              PsiElement(LBRACE)('{')
              PsiWhiteSpace('\n        ')
              NULL
                PsiElement(null)('null')
              PsiWhiteSpace('\n    ')
              PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')