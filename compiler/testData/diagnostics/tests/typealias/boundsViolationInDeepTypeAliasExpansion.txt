package

public val test5: TC2<kotlin.Number, kotlin.collections.Collection<kotlin.Number>> /* = TColl<kotlin.Number, kotlin.collections.Collection<kotlin.Number>> */
public val test6: TC2<kotlin.Number, kotlin.collections.Collection<kotlin.Int>> /* = TColl<kotlin.Number, kotlin.collections.Collection<kotlin.Int>> */
public val test7: TC2<kotlin.Number, kotlin.collections.List<kotlin.Int>> /* = TColl<kotlin.Number, kotlin.collections.List<kotlin.Int>> */
public val test8: TC2<kotlin.Number, kotlin.collections.List<kotlin.Any>> /* = TColl<kotlin.Number, kotlin.collections.List<kotlin.Any>> */
public fun test1(/*0*/ x: TC2<kotlin.Number, kotlin.collections.Collection<kotlin.Number>> /* = TColl<kotlin.Number, kotlin.collections.Collection<kotlin.Number>> */): kotlin.Unit
public fun test2(/*0*/ x: TC2<kotlin.Number, kotlin.collections.Collection<kotlin.Int>> /* = TColl<kotlin.Number, kotlin.collections.Collection<kotlin.Int>> */): kotlin.Unit
public fun test3(/*0*/ x: TC2<kotlin.Number, kotlin.collections.List<kotlin.Int>> /* = TColl<kotlin.Number, kotlin.collections.List<kotlin.Int>> */): kotlin.Unit
public fun test4(/*0*/ x: TC2<kotlin.Number, kotlin.collections.List<kotlin.Any>> /* = TColl<kotlin.Number, kotlin.collections.List<kotlin.Any>> */): kotlin.Unit

public final class TColl</*0*/ T, /*1*/ C : kotlin.collections.Collection<T>> {
    public constructor TColl</*0*/ T, /*1*/ C : kotlin.collections.Collection<T>>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
public typealias TC</*0*/ T1, /*1*/ T2>  = TColl<T1, T2>
public typealias TC2</*0*/ T1, /*1*/ T2>  = TC<T1, T2>
