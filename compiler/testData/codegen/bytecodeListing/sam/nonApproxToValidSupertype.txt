@kotlin.Metadata
public interface A {
    // source: 'nonApproxToValidSupertype.kt'
}

@kotlin.Metadata
public interface B {
    // source: 'nonApproxToValidSupertype.kt'
}

@kotlin.Metadata
public final class G {
    // source: 'nonApproxToValidSupertype.kt'
    public method <init>(): void
    public final method check(@org.jetbrains.annotations.NotNull p0: IFoo): void
}

@kotlin.Metadata
public interface IFoo {
    // source: 'nonApproxToValidSupertype.kt'
    public abstract method accept(@org.jetbrains.annotations.NotNull p0: X): void
}

@kotlin.Metadata
final class NonApproxToValidSupertypeKt$test$1 {
    // source: 'nonApproxToValidSupertype.kt'
    enclosing method NonApproxToValidSupertypeKt.test()V
    public final static field INSTANCE: NonApproxToValidSupertypeKt$test$1
    inner (anonymous) class NonApproxToValidSupertypeKt$test$1
    static method <clinit>(): void
    method <init>(): void
    public final method accept(@org.jetbrains.annotations.NotNull p0: java.lang.Object): void
    public synthetic bridge method accept(p0: X): void
}

@kotlin.Metadata
public final class NonApproxToValidSupertypeKt {
    // source: 'nonApproxToValidSupertype.kt'
    inner (anonymous) class NonApproxToValidSupertypeKt$test$1
    public final static method sel(p0: java.lang.Object, p1: java.lang.Object): java.lang.Object
    public final static method test(): void
}

@kotlin.Metadata
public interface X {
    // source: 'nonApproxToValidSupertype.kt'
}

@kotlin.Metadata
public interface Z {
    // source: 'nonApproxToValidSupertype.kt'
}
