FILE fqName:<root> fileName:/1.kt
  CLASS CLASS name:C modality:ABSTRACT visibility:public superTypes:[java.util.SortedMap<T of <root>.C, T of <root>.C>]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.C<T of <root>.C>
    TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
    CONSTRUCTOR visibility:public <> () returnType:<root>.C<T of <root>.C> [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:C modality:ABSTRACT visibility:public superTypes:[java.util.SortedMap<T of <root>.C, T of <root>.C>]'
    FUN FAKE_OVERRIDE name:clear visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>) returnType:kotlin.Unit [fake_override]
      overridden:
        public abstract fun clear (): kotlin.Unit declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>
    FUN FAKE_OVERRIDE name:comparator visibility:public modality:ABSTRACT <> ($this:java.util.SortedMap<T of <root>.C, T of <root>.C>) returnType:@[FlexibleNullability] java.util.Comparator<in @[FlexibleNullability] T of <root>.C?>? [fake_override]
      overridden:
        public abstract fun comparator (): @[FlexibleNullability] java.util.Comparator<in @[FlexibleNullability] K of java.util.SortedMap?>? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SortedMap<T of <root>.C, T of <root>.C>
    FUN FAKE_OVERRIDE name:compute visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?, p1:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.C?, in @[EnhancedNullability] T of <root>.C?, out @[EnhancedNullability] T of <root>.C?>) returnType:@[EnhancedNullability] T of <root>.C? [fake_override]
      overridden:
        public open fun compute (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, in @[EnhancedNullability] V of java.util.SortedMap?, out @[EnhancedNullability] V of java.util.SortedMap?>): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.C?, in @[EnhancedNullability] T of <root>.C?, out @[EnhancedNullability] T of <root>.C?>
    FUN FAKE_OVERRIDE name:computeIfAbsent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?, p1:@[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.C?, out @[EnhancedNullability] @[FlexibleNullability] T of <root>.C?>) returnType:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C? [fake_override]
      overridden:
        public open fun computeIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, out @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?>): @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.C?, out @[EnhancedNullability] @[FlexibleNullability] T of <root>.C?>
    FUN FAKE_OVERRIDE name:computeIfPresent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?, p1:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.C?, in @[EnhancedNullability] {T of <root>.C & Any}, out @[EnhancedNullability] T of <root>.C?>) returnType:@[EnhancedNullability] T of <root>.C? [fake_override]
      overridden:
        public open fun computeIfPresent (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, in @[EnhancedNullability] {V of java.util.SortedMap & Any}, out @[EnhancedNullability] V of java.util.SortedMap?>): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.C?, in @[EnhancedNullability] {T of <root>.C & Any}, out @[EnhancedNullability] T of <root>.C?>
    FUN FAKE_OVERRIDE name:containsKey visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>, key:@[FlexibleNullability] T of <root>.C?) returnType:kotlin.Boolean [fake_override]
      overridden:
        public abstract fun containsKey (key: @[FlexibleNullability] K of java.util.SortedMap?): kotlin.Boolean declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.C?
    FUN FAKE_OVERRIDE name:containsValue visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>, value:@[FlexibleNullability] T of <root>.C?) returnType:kotlin.Boolean [fake_override]
      overridden:
        public abstract fun containsValue (value: @[FlexibleNullability] V of java.util.SortedMap?): kotlin.Boolean declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>
      VALUE_PARAMETER name:value index:0 type:@[FlexibleNullability] T of <root>.C?
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:firstKey visibility:public modality:ABSTRACT <> ($this:java.util.SortedMap<T of <root>.C, T of <root>.C>) returnType:@[FlexibleNullability] T of <root>.C? [fake_override]
      overridden:
        public abstract fun firstKey (): @[FlexibleNullability] K of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SortedMap<T of <root>.C, T of <root>.C>
    FUN FAKE_OVERRIDE name:forEach visibility:public modality:OPEN <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>, p0:@[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.C?, in @[EnhancedNullability] @[FlexibleNullability] T of <root>.C?>) returnType:kotlin.Unit [fake_override]
      overridden:
        public open fun forEach (p0: @[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, in @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?>): kotlin.Unit declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.C?, in @[EnhancedNullability] @[FlexibleNullability] T of <root>.C?>
    FUN FAKE_OVERRIDE name:get visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>, key:@[FlexibleNullability] T of <root>.C?) returnType:T of <root>.C? [fake_override,operator]
      overridden:
        public abstract fun get (key: @[FlexibleNullability] K of java.util.SortedMap?): V of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.C?
    FUN FAKE_OVERRIDE name:getOrDefault visibility:public modality:OPEN <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>, key:@[FlexibleNullability] T of <root>.C?, defaultValue:@[FlexibleNullability] T of <root>.C?) returnType:@[FlexibleNullability] T of <root>.C? [fake_override]
      annotations:
        SinceKotlin(version = "1.1")
        PlatformDependent
      overridden:
        public open fun getOrDefault (key: @[FlexibleNullability] K of java.util.SortedMap?, defaultValue: @[FlexibleNullability] V of java.util.SortedMap?): @[FlexibleNullability] V of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.C?
      VALUE_PARAMETER name:defaultValue index:1 type:@[FlexibleNullability] T of <root>.C?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:headMap visibility:public modality:ABSTRACT <> ($this:java.util.SortedMap<T of <root>.C, T of <root>.C>, p0:@[FlexibleNullability] T of <root>.C?) returnType:@[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>? [fake_override]
      overridden:
        public abstract fun headMap (p0: @[FlexibleNullability] K of java.util.SortedMap?): @[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SortedMap<T of <root>.C, T of <root>.C>
      VALUE_PARAMETER name:p0 index:0 type:@[FlexibleNullability] T of <root>.C?
    FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>) returnType:kotlin.Boolean [fake_override]
      overridden:
        public abstract fun isEmpty (): kotlin.Boolean declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>
    FUN FAKE_OVERRIDE name:lastKey visibility:public modality:ABSTRACT <> ($this:java.util.SortedMap<T of <root>.C, T of <root>.C>) returnType:@[FlexibleNullability] T of <root>.C? [fake_override]
      overridden:
        public abstract fun lastKey (): @[FlexibleNullability] K of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SortedMap<T of <root>.C, T of <root>.C>
    FUN FAKE_OVERRIDE name:merge visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?, p1:@[EnhancedNullability] {T of <root>.C & Any}, p2:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] {T of <root>.C & Any}, in @[EnhancedNullability] {T of <root>.C & Any}, out @[EnhancedNullability] T of <root>.C?>) returnType:@[EnhancedNullability] T of <root>.C? [fake_override]
      overridden:
        public open fun merge (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] {V of java.util.SortedMap & Any}, p2: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] {V of java.util.SortedMap & Any}, in @[EnhancedNullability] {V of java.util.SortedMap & Any}, out @[EnhancedNullability] V of java.util.SortedMap?>): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] {T of <root>.C & Any}
      VALUE_PARAMETER name:p2 index:2 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] {T of <root>.C & Any}, in @[EnhancedNullability] {T of <root>.C & Any}, out @[EnhancedNullability] T of <root>.C?>
    FUN FAKE_OVERRIDE name:put visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>, key:@[FlexibleNullability] T of <root>.C?, value:@[FlexibleNullability] T of <root>.C?) returnType:T of <root>.C? [fake_override]
      overridden:
        public abstract fun put (key: @[FlexibleNullability] K of java.util.SortedMap?, value: @[FlexibleNullability] V of java.util.SortedMap?): V of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.C?
      VALUE_PARAMETER name:value index:1 type:@[FlexibleNullability] T of <root>.C?
    FUN FAKE_OVERRIDE name:putAll visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>, from:kotlin.collections.Map<out @[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>) returnType:kotlin.Unit [fake_override]
      overridden:
        public abstract fun putAll (from: kotlin.collections.Map<out @[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>): kotlin.Unit declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>
      VALUE_PARAMETER name:from index:0 type:kotlin.collections.Map<out @[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>
    FUN FAKE_OVERRIDE name:putIfAbsent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?, p1:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?) returnType:@[EnhancedNullability] T of <root>.C? [fake_override]
      overridden:
        public open fun putIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?
    FUN FAKE_OVERRIDE name:remove visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>, key:@[FlexibleNullability] T of <root>.C?) returnType:T of <root>.C? [fake_override]
      overridden:
        public abstract fun remove (key: @[FlexibleNullability] K of java.util.SortedMap?): V of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.C?
    FUN FAKE_OVERRIDE name:remove visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>, key:@[FlexibleNullability] T of <root>.C?, value:@[FlexibleNullability] T of <root>.C?) returnType:kotlin.Boolean [fake_override]
      annotations:
        SinceKotlin(version = "1.1")
        PlatformDependent
      overridden:
        public open fun remove (key: @[FlexibleNullability] K of java.util.SortedMap?, value: @[FlexibleNullability] V of java.util.SortedMap?): kotlin.Boolean declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.C?
      VALUE_PARAMETER name:value index:1 type:@[FlexibleNullability] T of <root>.C?
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?, p1:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?) returnType:@[EnhancedNullability] T of <root>.C? [fake_override]
      overridden:
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?, p1:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?, p2:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?) returnType:kotlin.Boolean [fake_override]
      overridden:
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?, p2: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?): kotlin.Boolean declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?
      VALUE_PARAMETER name:p2 index:2 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.C?
    FUN FAKE_OVERRIDE name:replaceAll visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>, p0:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.C?, in @[EnhancedNullability] @[FlexibleNullability] T of <root>.C?, out @[EnhancedNullability] @[FlexibleNullability] T of <root>.C?>) returnType:kotlin.Unit [fake_override]
      overridden:
        public open fun replaceAll (p0: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, in @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?, out @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?>): kotlin.Unit declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.C?, in @[EnhancedNullability] @[FlexibleNullability] T of <root>.C?, out @[EnhancedNullability] @[FlexibleNullability] T of <root>.C?>
    FUN FAKE_OVERRIDE name:subMap visibility:public modality:ABSTRACT <> ($this:java.util.SortedMap<T of <root>.C, T of <root>.C>, p0:@[FlexibleNullability] T of <root>.C?, p1:@[FlexibleNullability] T of <root>.C?) returnType:@[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>? [fake_override]
      overridden:
        public abstract fun subMap (p0: @[FlexibleNullability] K of java.util.SortedMap?, p1: @[FlexibleNullability] K of java.util.SortedMap?): @[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SortedMap<T of <root>.C, T of <root>.C>
      VALUE_PARAMETER name:p0 index:0 type:@[FlexibleNullability] T of <root>.C?
      VALUE_PARAMETER name:p1 index:1 type:@[FlexibleNullability] T of <root>.C?
    FUN FAKE_OVERRIDE name:tailMap visibility:public modality:ABSTRACT <> ($this:java.util.SortedMap<T of <root>.C, T of <root>.C>, p0:@[FlexibleNullability] T of <root>.C?) returnType:@[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>? [fake_override]
      overridden:
        public abstract fun tailMap (p0: @[FlexibleNullability] K of java.util.SortedMap?): @[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SortedMap<T of <root>.C, T of <root>.C>
      VALUE_PARAMETER name:p0 index:0 type:@[FlexibleNullability] T of <root>.C?
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    PROPERTY FAKE_OVERRIDE name:entries visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract entries: @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>> declared in java.util.SortedMap
      FUN FAKE_OVERRIDE name:<get-entries> visibility:public modality:ABSTRACT <> ($this:java.util.SortedMap<T of <root>.C, T of <root>.C>) returnType:@[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>> [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:entries visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-entries> (): @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>> declared in java.util.SortedMap
        $this: VALUE_PARAMETER name:<this> type:java.util.SortedMap<T of <root>.C, T of <root>.C>
    PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract keys: @[EnhancedNullability] kotlin.collections.MutableSet<@[FlexibleNullability] K of java.util.SortedMap?> declared in java.util.SortedMap
      FUN FAKE_OVERRIDE name:<get-keys> visibility:public modality:ABSTRACT <> ($this:java.util.SortedMap<T of <root>.C, T of <root>.C>) returnType:@[EnhancedNullability] kotlin.collections.MutableSet<@[FlexibleNullability] T of <root>.C?> [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-keys> (): @[EnhancedNullability] kotlin.collections.MutableSet<@[FlexibleNullability] K of java.util.SortedMap?> declared in java.util.SortedMap
        $this: VALUE_PARAMETER name:<this> type:java.util.SortedMap<T of <root>.C, T of <root>.C>
    PROPERTY FAKE_OVERRIDE name:size visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract size: kotlin.Int declared in java.util.SortedMap
      FUN FAKE_OVERRIDE name:<get-size> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>) returnType:kotlin.Int [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:size visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-size> (): kotlin.Int declared in java.util.SortedMap
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.C?, @[FlexibleNullability] T of <root>.C?>
    PROPERTY FAKE_OVERRIDE name:values visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract values: @[EnhancedNullability] kotlin.collections.MutableCollection<@[FlexibleNullability] V of java.util.SortedMap?> declared in java.util.SortedMap
      FUN FAKE_OVERRIDE name:<get-values> visibility:public modality:ABSTRACT <> ($this:java.util.SortedMap<T of <root>.C, T of <root>.C>) returnType:@[EnhancedNullability] kotlin.collections.MutableCollection<@[FlexibleNullability] T of <root>.C?> [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:values visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-values> (): @[EnhancedNullability] kotlin.collections.MutableCollection<@[FlexibleNullability] V of java.util.SortedMap?> declared in java.util.SortedMap
        $this: VALUE_PARAMETER name:<this> type:java.util.SortedMap<T of <root>.C, T of <root>.C>
  CLASS CLASS name:D modality:ABSTRACT visibility:public superTypes:[java.util.SortedMap<T of <root>.D, T of <root>.D>]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.D<T of <root>.D>
    TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
    PROPERTY name:size visibility:public modality:OPEN [val]
      overridden:
        public abstract size: kotlin.Int declared in java.util.SortedMap
      FIELD PROPERTY_BACKING_FIELD name:size type:kotlin.Int visibility:private [final]
        EXPRESSION_BODY
          GET_VAR 'size: kotlin.Int declared in <root>.D.<init>' type=kotlin.Int origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-size> visibility:public modality:OPEN <> ($this:<root>.D<T of <root>.D>) returnType:kotlin.Int
        correspondingProperty: PROPERTY name:size visibility:public modality:OPEN [val]
        overridden:
          public abstract fun <get-size> (): kotlin.Int declared in java.util.SortedMap
        $this: VALUE_PARAMETER name:<this> type:<root>.D<T of <root>.D>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public open fun <get-size> (): kotlin.Int declared in <root>.D'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:size type:kotlin.Int visibility:private [final]' type=kotlin.Int origin=null
              receiver: GET_VAR '<this>: <root>.D<T of <root>.D> declared in <root>.D.<get-size>' type=<root>.D<T of <root>.D> origin=null
    CONSTRUCTOR visibility:public <> (size:kotlin.Int) returnType:<root>.D<T of <root>.D> [primary]
      VALUE_PARAMETER name:size index:0 type:kotlin.Int
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:D modality:ABSTRACT visibility:public superTypes:[java.util.SortedMap<T of <root>.D, T of <root>.D>]'
    FUN FAKE_OVERRIDE name:clear visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>) returnType:kotlin.Unit [fake_override]
      overridden:
        public abstract fun clear (): kotlin.Unit declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>
    FUN FAKE_OVERRIDE name:comparator visibility:public modality:ABSTRACT <> ($this:java.util.SortedMap<T of <root>.D, T of <root>.D>) returnType:@[FlexibleNullability] java.util.Comparator<in @[FlexibleNullability] T of <root>.D?>? [fake_override]
      overridden:
        public abstract fun comparator (): @[FlexibleNullability] java.util.Comparator<in @[FlexibleNullability] K of java.util.SortedMap?>? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SortedMap<T of <root>.D, T of <root>.D>
    FUN FAKE_OVERRIDE name:compute visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?, p1:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.D?, in @[EnhancedNullability] T of <root>.D?, out @[EnhancedNullability] T of <root>.D?>) returnType:@[EnhancedNullability] T of <root>.D? [fake_override]
      overridden:
        public open fun compute (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, in @[EnhancedNullability] V of java.util.SortedMap?, out @[EnhancedNullability] V of java.util.SortedMap?>): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.D?, in @[EnhancedNullability] T of <root>.D?, out @[EnhancedNullability] T of <root>.D?>
    FUN FAKE_OVERRIDE name:computeIfAbsent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?, p1:@[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.D?, out @[EnhancedNullability] @[FlexibleNullability] T of <root>.D?>) returnType:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D? [fake_override]
      overridden:
        public open fun computeIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, out @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?>): @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.D?, out @[EnhancedNullability] @[FlexibleNullability] T of <root>.D?>
    FUN FAKE_OVERRIDE name:computeIfPresent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?, p1:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.D?, in @[EnhancedNullability] {T of <root>.D & Any}, out @[EnhancedNullability] T of <root>.D?>) returnType:@[EnhancedNullability] T of <root>.D? [fake_override]
      overridden:
        public open fun computeIfPresent (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, in @[EnhancedNullability] {V of java.util.SortedMap & Any}, out @[EnhancedNullability] V of java.util.SortedMap?>): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.D?, in @[EnhancedNullability] {T of <root>.D & Any}, out @[EnhancedNullability] T of <root>.D?>
    FUN FAKE_OVERRIDE name:containsKey visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>, key:@[FlexibleNullability] T of <root>.D?) returnType:kotlin.Boolean [fake_override]
      overridden:
        public abstract fun containsKey (key: @[FlexibleNullability] K of java.util.SortedMap?): kotlin.Boolean declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.D?
    FUN FAKE_OVERRIDE name:containsValue visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>, value:@[FlexibleNullability] T of <root>.D?) returnType:kotlin.Boolean [fake_override]
      overridden:
        public abstract fun containsValue (value: @[FlexibleNullability] V of java.util.SortedMap?): kotlin.Boolean declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>
      VALUE_PARAMETER name:value index:0 type:@[FlexibleNullability] T of <root>.D?
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:firstKey visibility:public modality:ABSTRACT <> ($this:java.util.SortedMap<T of <root>.D, T of <root>.D>) returnType:@[FlexibleNullability] T of <root>.D? [fake_override]
      overridden:
        public abstract fun firstKey (): @[FlexibleNullability] K of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SortedMap<T of <root>.D, T of <root>.D>
    FUN FAKE_OVERRIDE name:forEach visibility:public modality:OPEN <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>, p0:@[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.D?, in @[EnhancedNullability] @[FlexibleNullability] T of <root>.D?>) returnType:kotlin.Unit [fake_override]
      overridden:
        public open fun forEach (p0: @[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, in @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?>): kotlin.Unit declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.D?, in @[EnhancedNullability] @[FlexibleNullability] T of <root>.D?>
    FUN FAKE_OVERRIDE name:get visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>, key:@[FlexibleNullability] T of <root>.D?) returnType:T of <root>.D? [fake_override,operator]
      overridden:
        public abstract fun get (key: @[FlexibleNullability] K of java.util.SortedMap?): V of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.D?
    FUN FAKE_OVERRIDE name:getOrDefault visibility:public modality:OPEN <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>, key:@[FlexibleNullability] T of <root>.D?, defaultValue:@[FlexibleNullability] T of <root>.D?) returnType:@[FlexibleNullability] T of <root>.D? [fake_override]
      annotations:
        SinceKotlin(version = "1.1")
        PlatformDependent
      overridden:
        public open fun getOrDefault (key: @[FlexibleNullability] K of java.util.SortedMap?, defaultValue: @[FlexibleNullability] V of java.util.SortedMap?): @[FlexibleNullability] V of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.D?
      VALUE_PARAMETER name:defaultValue index:1 type:@[FlexibleNullability] T of <root>.D?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:headMap visibility:public modality:ABSTRACT <> ($this:java.util.SortedMap<T of <root>.D, T of <root>.D>, p0:@[FlexibleNullability] T of <root>.D?) returnType:@[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>? [fake_override]
      overridden:
        public abstract fun headMap (p0: @[FlexibleNullability] K of java.util.SortedMap?): @[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SortedMap<T of <root>.D, T of <root>.D>
      VALUE_PARAMETER name:p0 index:0 type:@[FlexibleNullability] T of <root>.D?
    FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>) returnType:kotlin.Boolean [fake_override]
      overridden:
        public abstract fun isEmpty (): kotlin.Boolean declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>
    FUN FAKE_OVERRIDE name:lastKey visibility:public modality:ABSTRACT <> ($this:java.util.SortedMap<T of <root>.D, T of <root>.D>) returnType:@[FlexibleNullability] T of <root>.D? [fake_override]
      overridden:
        public abstract fun lastKey (): @[FlexibleNullability] K of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SortedMap<T of <root>.D, T of <root>.D>
    FUN FAKE_OVERRIDE name:merge visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?, p1:@[EnhancedNullability] {T of <root>.D & Any}, p2:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] {T of <root>.D & Any}, in @[EnhancedNullability] {T of <root>.D & Any}, out @[EnhancedNullability] T of <root>.D?>) returnType:@[EnhancedNullability] T of <root>.D? [fake_override]
      overridden:
        public open fun merge (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] {V of java.util.SortedMap & Any}, p2: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] {V of java.util.SortedMap & Any}, in @[EnhancedNullability] {V of java.util.SortedMap & Any}, out @[EnhancedNullability] V of java.util.SortedMap?>): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] {T of <root>.D & Any}
      VALUE_PARAMETER name:p2 index:2 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] {T of <root>.D & Any}, in @[EnhancedNullability] {T of <root>.D & Any}, out @[EnhancedNullability] T of <root>.D?>
    FUN FAKE_OVERRIDE name:put visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>, key:@[FlexibleNullability] T of <root>.D?, value:@[FlexibleNullability] T of <root>.D?) returnType:T of <root>.D? [fake_override]
      overridden:
        public abstract fun put (key: @[FlexibleNullability] K of java.util.SortedMap?, value: @[FlexibleNullability] V of java.util.SortedMap?): V of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.D?
      VALUE_PARAMETER name:value index:1 type:@[FlexibleNullability] T of <root>.D?
    FUN FAKE_OVERRIDE name:putAll visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>, from:kotlin.collections.Map<out @[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>) returnType:kotlin.Unit [fake_override]
      overridden:
        public abstract fun putAll (from: kotlin.collections.Map<out @[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>): kotlin.Unit declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>
      VALUE_PARAMETER name:from index:0 type:kotlin.collections.Map<out @[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>
    FUN FAKE_OVERRIDE name:putIfAbsent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?, p1:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?) returnType:@[EnhancedNullability] T of <root>.D? [fake_override]
      overridden:
        public open fun putIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?
    FUN FAKE_OVERRIDE name:remove visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>, key:@[FlexibleNullability] T of <root>.D?, value:@[FlexibleNullability] T of <root>.D?) returnType:kotlin.Boolean [fake_override]
      annotations:
        SinceKotlin(version = "1.1")
        PlatformDependent
      overridden:
        public open fun remove (key: @[FlexibleNullability] K of java.util.SortedMap?, value: @[FlexibleNullability] V of java.util.SortedMap?): kotlin.Boolean declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.D?
      VALUE_PARAMETER name:value index:1 type:@[FlexibleNullability] T of <root>.D?
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?, p1:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?) returnType:@[EnhancedNullability] T of <root>.D? [fake_override]
      overridden:
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?, p1:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?, p2:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?) returnType:kotlin.Boolean [fake_override]
      overridden:
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?, p2: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?): kotlin.Boolean declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?
      VALUE_PARAMETER name:p2 index:2 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.D?
    FUN FAKE_OVERRIDE name:replaceAll visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>, p0:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.D?, in @[EnhancedNullability] @[FlexibleNullability] T of <root>.D?, out @[EnhancedNullability] @[FlexibleNullability] T of <root>.D?>) returnType:kotlin.Unit [fake_override]
      overridden:
        public open fun replaceAll (p0: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, in @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?, out @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?>): kotlin.Unit declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.D?, in @[EnhancedNullability] @[FlexibleNullability] T of <root>.D?, out @[EnhancedNullability] @[FlexibleNullability] T of <root>.D?>
    FUN FAKE_OVERRIDE name:subMap visibility:public modality:ABSTRACT <> ($this:java.util.SortedMap<T of <root>.D, T of <root>.D>, p0:@[FlexibleNullability] T of <root>.D?, p1:@[FlexibleNullability] T of <root>.D?) returnType:@[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>? [fake_override]
      overridden:
        public abstract fun subMap (p0: @[FlexibleNullability] K of java.util.SortedMap?, p1: @[FlexibleNullability] K of java.util.SortedMap?): @[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SortedMap<T of <root>.D, T of <root>.D>
      VALUE_PARAMETER name:p0 index:0 type:@[FlexibleNullability] T of <root>.D?
      VALUE_PARAMETER name:p1 index:1 type:@[FlexibleNullability] T of <root>.D?
    FUN FAKE_OVERRIDE name:tailMap visibility:public modality:ABSTRACT <> ($this:java.util.SortedMap<T of <root>.D, T of <root>.D>, p0:@[FlexibleNullability] T of <root>.D?) returnType:@[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>? [fake_override]
      overridden:
        public abstract fun tailMap (p0: @[FlexibleNullability] K of java.util.SortedMap?): @[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SortedMap<T of <root>.D, T of <root>.D>
      VALUE_PARAMETER name:p0 index:0 type:@[FlexibleNullability] T of <root>.D?
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN name:remove visibility:public modality:OPEN <> ($this:<root>.D<T of <root>.D>, key:T of <root>.D) returnType:T of <root>.D?
      overridden:
        public abstract fun remove (key: @[FlexibleNullability] K of java.util.SortedMap?): V of java.util.SortedMap? declared in java.util.SortedMap
      $this: VALUE_PARAMETER name:<this> type:<root>.D<T of <root>.D>
      VALUE_PARAMETER name:key index:0 type:T of <root>.D
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun remove (key: T of <root>.D): T of <root>.D? declared in <root>.D'
          CONST Null type=kotlin.Nothing? value=null
    PROPERTY FAKE_OVERRIDE name:entries visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract entries: @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>> declared in java.util.SortedMap
      FUN FAKE_OVERRIDE name:<get-entries> visibility:public modality:ABSTRACT <> ($this:java.util.SortedMap<T of <root>.D, T of <root>.D>) returnType:@[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] T of <root>.D?, @[FlexibleNullability] T of <root>.D?>> [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:entries visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-entries> (): @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>> declared in java.util.SortedMap
        $this: VALUE_PARAMETER name:<this> type:java.util.SortedMap<T of <root>.D, T of <root>.D>
    PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract keys: @[EnhancedNullability] kotlin.collections.MutableSet<@[FlexibleNullability] K of java.util.SortedMap?> declared in java.util.SortedMap
      FUN FAKE_OVERRIDE name:<get-keys> visibility:public modality:ABSTRACT <> ($this:java.util.SortedMap<T of <root>.D, T of <root>.D>) returnType:@[EnhancedNullability] kotlin.collections.MutableSet<@[FlexibleNullability] T of <root>.D?> [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-keys> (): @[EnhancedNullability] kotlin.collections.MutableSet<@[FlexibleNullability] K of java.util.SortedMap?> declared in java.util.SortedMap
        $this: VALUE_PARAMETER name:<this> type:java.util.SortedMap<T of <root>.D, T of <root>.D>
    PROPERTY FAKE_OVERRIDE name:values visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract values: @[EnhancedNullability] kotlin.collections.MutableCollection<@[FlexibleNullability] V of java.util.SortedMap?> declared in java.util.SortedMap
      FUN FAKE_OVERRIDE name:<get-values> visibility:public modality:ABSTRACT <> ($this:java.util.SortedMap<T of <root>.D, T of <root>.D>) returnType:@[EnhancedNullability] kotlin.collections.MutableCollection<@[FlexibleNullability] T of <root>.D?> [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:values visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-values> (): @[EnhancedNullability] kotlin.collections.MutableCollection<@[FlexibleNullability] V of java.util.SortedMap?> declared in java.util.SortedMap
        $this: VALUE_PARAMETER name:<this> type:java.util.SortedMap<T of <root>.D, T of <root>.D>
  FUN name:test visibility:public modality:FINAL <> (c:<root>.C<kotlin.Boolean>, d:<root>.D<kotlin.Boolean>) returnType:kotlin.Unit
    VALUE_PARAMETER name:c index:0 type:<root>.C<kotlin.Boolean>
    VALUE_PARAMETER name:d index:1 type:<root>.D<kotlin.Boolean>
    BLOCK_BODY
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun <get-size> (): kotlin.Int declared in <root>.C' type=kotlin.Int origin=GET_PROPERTY
          $this: GET_VAR 'c: <root>.C<kotlin.Boolean> declared in <root>.test' type=<root>.C<kotlin.Boolean> origin=null
      CALL 'public final fun set <K, V> (key: K of kotlin.collections.set, value: V of kotlin.collections.set): kotlin.Unit declared in kotlin.collections' type=kotlin.Unit origin=EQ
        <K>: @[FlexibleNullability] kotlin.Boolean?
        <V>: @[FlexibleNullability] kotlin.Boolean?
        $receiver: GET_VAR 'c: <root>.C<kotlin.Boolean> declared in <root>.test' type=<root>.C<kotlin.Boolean> origin=null
        key: CONST Boolean type=kotlin.Boolean value=false
        value: CONST Boolean type=kotlin.Boolean value=false
      CALL 'public final fun set <K, V> (key: K of kotlin.collections.set, value: V of kotlin.collections.set): kotlin.Unit declared in kotlin.collections' type=kotlin.Unit origin=EQ
        <K>: @[FlexibleNullability] kotlin.Boolean?
        <V>: @[FlexibleNullability] kotlin.Boolean?
        $receiver: GET_VAR 'c: <root>.C<kotlin.Boolean> declared in <root>.test' type=<root>.C<kotlin.Boolean> origin=null
        key: CONST Null type=kotlin.Nothing? value=null
        value: CONST Null type=kotlin.Nothing? value=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun remove (key: @[FlexibleNullability] T of <root>.C?): T of <root>.C? declared in <root>.C' type=kotlin.Boolean? origin=null
          $this: GET_VAR 'c: <root>.C<kotlin.Boolean> declared in <root>.test' type=<root>.C<kotlin.Boolean> origin=null
          key: CONST Null type=kotlin.Nothing? value=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun remove (key: @[FlexibleNullability] T of <root>.C?): T of <root>.C? declared in <root>.C' type=kotlin.Boolean? origin=null
          $this: GET_VAR 'c: <root>.C<kotlin.Boolean> declared in <root>.test' type=<root>.C<kotlin.Boolean> origin=null
          key: CONST Boolean type=kotlin.Boolean value=true
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun get (key: @[FlexibleNullability] T of <root>.C?): T of <root>.C? declared in <root>.C' type=kotlin.Boolean? origin=null
          $this: GET_VAR 'c: <root>.C<kotlin.Boolean> declared in <root>.test' type=<root>.C<kotlin.Boolean> origin=null
          key: CONST Null type=kotlin.Nothing? value=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun get (key: @[FlexibleNullability] T of <root>.C?): T of <root>.C? declared in <root>.C' type=kotlin.Boolean? origin=null
          $this: GET_VAR 'c: <root>.C<kotlin.Boolean> declared in <root>.test' type=<root>.C<kotlin.Boolean> origin=null
          key: CONST Boolean type=kotlin.Boolean value=true
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun <get-size> (): kotlin.Int declared in <root>.D' type=kotlin.Int origin=GET_PROPERTY
          $this: GET_VAR 'd: <root>.D<kotlin.Boolean> declared in <root>.test' type=<root>.D<kotlin.Boolean> origin=null
      CALL 'public final fun set <K, V> (key: K of kotlin.collections.set, value: V of kotlin.collections.set): kotlin.Unit declared in kotlin.collections' type=kotlin.Unit origin=EQ
        <K>: @[FlexibleNullability] kotlin.Boolean?
        <V>: @[FlexibleNullability] kotlin.Boolean?
        $receiver: GET_VAR 'd: <root>.D<kotlin.Boolean> declared in <root>.test' type=<root>.D<kotlin.Boolean> origin=null
        key: CONST Boolean type=kotlin.Boolean value=false
        value: CONST Boolean type=kotlin.Boolean value=false
      CALL 'public final fun set <K, V> (key: K of kotlin.collections.set, value: V of kotlin.collections.set): kotlin.Unit declared in kotlin.collections' type=kotlin.Unit origin=EQ
        <K>: @[FlexibleNullability] kotlin.Boolean?
        <V>: @[FlexibleNullability] kotlin.Boolean?
        $receiver: GET_VAR 'd: <root>.D<kotlin.Boolean> declared in <root>.test' type=<root>.D<kotlin.Boolean> origin=null
        key: CONST Null type=kotlin.Nothing? value=null
        value: CONST Null type=kotlin.Nothing? value=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public final fun remove <K, V> (key: K of kotlin.collections.remove): V of kotlin.collections.remove? declared in kotlin.collections' type=kotlin.Boolean? origin=null
          <K>: kotlin.Boolean?
          <V>: @[FlexibleNullability] kotlin.Boolean?
          $receiver: GET_VAR 'd: <root>.D<kotlin.Boolean> declared in <root>.test' type=<root>.D<kotlin.Boolean> origin=null
          key: CONST Null type=kotlin.Nothing? value=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun remove (key: T of <root>.D): T of <root>.D? declared in <root>.D' type=kotlin.Boolean? origin=null
          $this: GET_VAR 'd: <root>.D<kotlin.Boolean> declared in <root>.test' type=<root>.D<kotlin.Boolean> origin=null
          key: CONST Boolean type=kotlin.Boolean value=true
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun get (key: @[FlexibleNullability] T of <root>.D?): T of <root>.D? declared in <root>.D' type=kotlin.Boolean? origin=null
          $this: GET_VAR 'd: <root>.D<kotlin.Boolean> declared in <root>.test' type=<root>.D<kotlin.Boolean> origin=null
          key: CONST Null type=kotlin.Nothing? value=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun get (key: @[FlexibleNullability] T of <root>.D?): T of <root>.D? declared in <root>.D' type=kotlin.Boolean? origin=null
          $this: GET_VAR 'd: <root>.D<kotlin.Boolean> declared in <root>.test' type=<root>.D<kotlin.Boolean> origin=null
          key: CONST Boolean type=kotlin.Boolean value=true
