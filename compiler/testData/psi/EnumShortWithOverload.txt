KtFile: EnumShortWithOverload.kt
  PACKAGE_DIRECTIVE
    <empty list>
  IMPORT_LIST
    <empty list>
  CLASS
    MODIFIER_LIST
      PsiElement(enum)('enum')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('Color')
    PRIMARY_CONSTRUCTOR
      VALUE_PARAMETER_LIST
        PsiElement(LPAR)('(')
        VALUE_PARAMETER
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          PsiElement(IDENTIFIER)('rgb')
          PsiWhiteSpace(' ')
          PsiElement(COLON)(':')
          PsiWhiteSpace(' ')
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('Int')
        PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    CLASS_BODY
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      ENUM_ENTRY
        PsiElement(IDENTIFIER)('RED')
        INITIALIZER_LIST
          SUPER_TYPE_CALL_ENTRY
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  ENUM_ENTRY_SUPERCLASS_REFERENCE_EXPRESSION
                    <empty list>
            VALUE_ARGUMENT_LIST
              PsiElement(LPAR)('(')
              VALUE_ARGUMENT
                INTEGER_CONSTANT
                  PsiElement(INTEGER_LITERAL)('0xFF000')
              PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n        ')
          FUN
            MODIFIER_LIST
              PsiElement(override)('override')
            PsiWhiteSpace(' ')
            PsiElement(fun)('fun')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('foo')
            VALUE_PARAMETER_LIST
              PsiElement(LPAR)('(')
              PsiElement(RPAR)(')')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('Int')
            PsiWhiteSpace(' ')
            BLOCK
              PsiElement(LBRACE)('{')
              PsiWhiteSpace(' ')
              RETURN
                PsiElement(return)('return')
                PsiWhiteSpace(' ')
                INTEGER_CONSTANT
                  PsiElement(INTEGER_LITERAL)('1')
              PsiWhiteSpace(' ')
              PsiElement(RBRACE)('}')
          PsiWhiteSpace('\n    ')
          PsiElement(RBRACE)('}')
        PsiElement(COMMA)(',')
      PsiWhiteSpace('\n    ')
      ENUM_ENTRY
        PsiElement(IDENTIFIER)('GREEN')
        INITIALIZER_LIST
          SUPER_TYPE_CALL_ENTRY
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  ENUM_ENTRY_SUPERCLASS_REFERENCE_EXPRESSION
                    <empty list>
            VALUE_ARGUMENT_LIST
              PsiElement(LPAR)('(')
              VALUE_ARGUMENT
                INTEGER_CONSTANT
                  PsiElement(INTEGER_LITERAL)('0x00FF00')
              PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n        ')
          FUN
            MODIFIER_LIST
              PsiElement(override)('override')
            PsiWhiteSpace(' ')
            PsiElement(fun)('fun')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('foo')
            VALUE_PARAMETER_LIST
              PsiElement(LPAR)('(')
              PsiElement(RPAR)(')')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('Int')
            PsiWhiteSpace(' ')
            BLOCK
              PsiElement(LBRACE)('{')
              PsiWhiteSpace(' ')
              RETURN
                PsiElement(return)('return')
                PsiWhiteSpace(' ')
                INTEGER_CONSTANT
                  PsiElement(INTEGER_LITERAL)('2')
              PsiWhiteSpace(' ')
              PsiElement(RBRACE)('}')
          PsiWhiteSpace('\n    ')
          PsiElement(RBRACE)('}')
        PsiElement(COMMA)(',')
      PsiWhiteSpace('\n    ')
      ENUM_ENTRY
        PsiElement(IDENTIFIER)('BLUE')
        INITIALIZER_LIST
          SUPER_TYPE_CALL_ENTRY
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  ENUM_ENTRY_SUPERCLASS_REFERENCE_EXPRESSION
                    <empty list>
            VALUE_ARGUMENT_LIST
              PsiElement(LPAR)('(')
              VALUE_ARGUMENT
                INTEGER_CONSTANT
                  PsiElement(INTEGER_LITERAL)('0x0000FF')
              PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        CLASS_BODY
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n        ')
          FUN
            MODIFIER_LIST
              PsiElement(override)('override')
            PsiWhiteSpace(' ')
            PsiElement(fun)('fun')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('foo')
            VALUE_PARAMETER_LIST
              PsiElement(LPAR)('(')
              PsiElement(RPAR)(')')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('Int')
            PsiWhiteSpace(' ')
            BLOCK
              PsiElement(LBRACE)('{')
              PsiWhiteSpace(' ')
              RETURN
                PsiElement(return)('return')
                PsiWhiteSpace(' ')
                INTEGER_CONSTANT
                  PsiElement(INTEGER_LITERAL)('3')
              PsiWhiteSpace(' ')
              PsiElement(RBRACE)('}')
          PsiWhiteSpace('\n    ')
          PsiElement(RBRACE)('}')
        PsiElement(SEMICOLON)(';')
      PsiWhiteSpace('\n    \n    ')
      FUN
        MODIFIER_LIST
          PsiElement(abstract)('abstract')
        PsiWhiteSpace(' ')
        PsiElement(fun)('fun')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('foo')
        VALUE_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('Int')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')