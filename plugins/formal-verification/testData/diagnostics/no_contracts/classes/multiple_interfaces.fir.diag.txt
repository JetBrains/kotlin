/multiple_interfaces.kt:(162,173): info: Generated Viper text for testDiamond:
method class_D$constructor$fun_take$$return$T_class_global$class_D()
  returns (ret: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$T_class_global$class_D())
  ensures acc(T_class_global$class_D(ret), wildcard)
  ensures acc(Unique$T_class_global$class_D(ret), write)


method global$fun_testDiamond$fun_take$$return$T_Int() returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$intType())
{
  var anonymous$0: Ref
  var anonymous$1: Ref
  anonymous$1 := class_D$constructor$fun_take$$return$T_class_global$class_D()
  anonymous$0 := public$property_getter_field(anonymous$1)
  ret$0 := anonymous$0
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$intType())
  goto label$ret$0
  label label$ret$0
}

method public$property_getter_field(this: Ref) returns (ret: Ref)


/multiple_interfaces.kt:(405,415): info: Generated Viper text for testVarVal:
method class_G$constructor$fun_take$$return$T_class_global$class_G()
  returns (ret: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$T_class_global$class_G())
  ensures acc(T_class_global$class_G(ret), wildcard)
  ensures acc(Unique$T_class_global$class_G(ret), write)


method class_I$constructor$fun_take$$return$T_class_global$class_I()
  returns (ret: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$T_class_global$class_I())
  ensures acc(T_class_global$class_I(ret), wildcard)
  ensures acc(Unique$T_class_global$class_I(ret), write)


method global$fun_testVarVal$fun_take$$return$T_Unit() returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
{
  var local0$g: Ref
  var anonymous$0: Ref
  var anonymous$1: Ref
  var anonymous$2: Ref
  var local0$i: Ref
  var anonymous$3: Ref
  var anonymous$4: Ref
  var anonymous$5: Ref
  ret$0 := dom$RuntimeType$unitValue()
  local0$g := class_G$constructor$fun_take$$return$T_class_global$class_G()
  anonymous$1 := public$property_getter_field(local0$g)
  anonymous$0 := anonymous$1
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(anonymous$0), dom$RuntimeType$intType())
  anonymous$2 := public$property_setter_field(local0$g, dom$RuntimeType$intToRef(1))
  local0$i := class_I$constructor$fun_take$$return$T_class_global$class_I()
  anonymous$4 := public$property_getter_field(local0$i)
  anonymous$3 := anonymous$4
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(anonymous$3), dom$RuntimeType$intType())
  anonymous$5 := public$property_setter_field(local0$i, dom$RuntimeType$intToRef(1))
  label label$ret$0
}

method public$property_getter_field(this: Ref) returns (ret: Ref)


method public$property_setter_field(this: Ref, value: Ref)
  returns (ret: Ref)
