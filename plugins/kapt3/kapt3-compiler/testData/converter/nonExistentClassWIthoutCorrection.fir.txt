/**
 * package {
 *
 *   public typealias Coocoo = error/NonExistentClass (* = error/NonExistentClass *)
 *
 *   public typealias Coocoo2<T#0 (* T *)> = error/NonExistentClass (* = error/NonExistentClass *)
 *
 *   public typealias Coocoo3<T#0 (* X *)> = error/NonExistentClass (* = error/NonExistentClass *)
 *
 *   public typealias String2 = kotlin/String (* = kotlin/String *)
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
@kotlin.Suppress(names = {"UNRESOLVED_REFERENCE"})
public final class NonExistentClassWIthoutCorrectionKt {
}


////////////////////

/**
 * public final object NonExistentType : kotlin/Any {
 *
 *   // signature: <init>()V
 *   private constructor()
 *
 *   // signature: a(Lerror/NonExistentClass;Ljava/lang/String;)Lerror/NonExistentClass;
 *   public final fun a(a: error/NonExistentClass, s: kotlin/String): error/NonExistentClass
 *
 *   // signature: b(Ljava/lang/String;)Lerror/NonExistentClass;
 *   public final fun b(s: kotlin/String): error/NonExistentClass
 *
 *   // field: a:Lerror/NonExistentClass;
 *   // getter: getA()Lerror/NonExistentClass;
 *   public final val a: error/NonExistentClass
 *     public final get
 *
 *   // field: b:Ljava/util/List;
 *   // getter: getB()Ljava/util/List;
 *   public final val b: kotlin/collections/List<error/NonExistentClass>?
 *     public final get
 *
 *   // field: c:Lkotlin/jvm/functions/Function1;
 *   // getter: getC()Lkotlin/jvm/functions/Function1;
 *   public final val c: kotlin/Function1<error/NonExistentClass, kotlin/Unit>
 *     public final get
 *
 *   // field: coocoo:Lerror/NonExistentClass;
 *   // getter: getCoocoo()Lerror/NonExistentClass;
 *   // setter: setCoocoo(Lerror/NonExistentClass;)V
 *   public final lateinit var coocoo: error/NonExistentClass (* = Coocoo^ *)
 *     public final get
 *     public final set
 *
 *   // field: coocoo2:Lerror/NonExistentClass;
 *   // getter: getCoocoo2()Lerror/NonExistentClass;
 *   // setter: setCoocoo2(Lerror/NonExistentClass;)V
 *   public final lateinit var coocoo2: error/NonExistentClass (* = Coocoo2^<kotlin/String> *)
 *     public final get
 *     public final set
 *
 *   // field: coocoo21:Lerror/NonExistentClass;
 *   // getter: getCoocoo21()Lerror/NonExistentClass;
 *   // setter: setCoocoo21(Lerror/NonExistentClass;)V
 *   public final lateinit var coocoo21: error/NonExistentClass (* = Coocoo2^<error/NonExistentClass (* = Coocoo^ *)> *)
 *     public final get
 *     public final set
 *
 *   // field: coocoo3:Lerror/NonExistentClass;
 *   // getter: getCoocoo3()Lerror/NonExistentClass;
 *   // setter: setCoocoo3(Lerror/NonExistentClass;)V
 *   public final lateinit var coocoo3: error/NonExistentClass (* = Coocoo3^<kotlin/String> *)
 *     public final get
 *     public final set
 *
 *   // field: coocoo31:Lerror/NonExistentClass;
 *   // getter: getCoocoo31()Lerror/NonExistentClass;
 *   // setter: setCoocoo31(Lerror/NonExistentClass;)V
 *   public final lateinit var coocoo31: error/NonExistentClass (* = Coocoo3^<error/NonExistentClass (* = Coocoo2^<error/NonExistentClass (* = Coocoo^ *)> *)> *)
 *     public final get
 *     public final set
 *
 *   // field: d:Lerror/NonExistentClass;
 *   // getter: getD()Lerror/NonExistentClass;
 *   public final val d: error/NonExistentClass
 *     public final get
 *
 *   // field: string2:Ljava/lang/String;
 *   // getter: getString2()Ljava/lang/String;
 *   // setter: setString2(Ljava/lang/String;)V
 *   public final lateinit var string2: kotlin/String (* = String2^ *)
 *     public final get
 *     public final set
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
public final class NonExistentType {
    @org.jetbrains.annotations.NotNull()
    public static final NonExistentType INSTANCE = null;

    @org.jetbrains.annotations.NotNull()
    private static final error.NonExistentClass a = null;

    @org.jetbrains.annotations.Nullable()
    private static final java.util.List b = null;

    @org.jetbrains.annotations.NotNull()
    private static final kotlin.jvm.functions.Function1 c = null;

    @org.jetbrains.annotations.NotNull()
    private static final error.NonExistentClass d = null;

    public static java.lang.String string2;

    public static error.NonExistentClass coocoo;

    public static error.NonExistentClass coocoo2;

    public static error.NonExistentClass coocoo21;

    public static error.NonExistentClass coocoo3;

    public static error.NonExistentClass coocoo31;

    private NonExistentType() {
        super();
    }

    @org.jetbrains.annotations.NotNull()
    public final error.NonExistentClass getA() {
        return null;
    }

    @org.jetbrains.annotations.Nullable()
    public final java.util.List getB() {
        return null;
    }

    @org.jetbrains.annotations.NotNull()
    public final kotlin.jvm.functions.Function1 getC() {
        return null;
    }

    @org.jetbrains.annotations.NotNull()
    public final error.NonExistentClass getD() {
        return null;
    }

    @org.jetbrains.annotations.NotNull()
    public final java.lang.String getString2() {
        return null;
    }

    public final void setString2(@org.jetbrains.annotations.NotNull() java.lang.String p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public final error.NonExistentClass getCoocoo() {
        return null;
    }

    public final void setCoocoo(@org.jetbrains.annotations.NotNull() error.NonExistentClass p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public final error.NonExistentClass getCoocoo2() {
        return null;
    }

    public final void setCoocoo2(@org.jetbrains.annotations.NotNull() error.NonExistentClass p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public final error.NonExistentClass getCoocoo21() {
        return null;
    }

    public final void setCoocoo21(@org.jetbrains.annotations.NotNull() error.NonExistentClass p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public final error.NonExistentClass getCoocoo3() {
        return null;
    }

    public final void setCoocoo3(@org.jetbrains.annotations.NotNull() error.NonExistentClass p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public final error.NonExistentClass getCoocoo31() {
        return null;
    }

    public final void setCoocoo31(@org.jetbrains.annotations.NotNull() error.NonExistentClass p0) {
    }

    @org.jetbrains.annotations.NotNull()
    public final error.NonExistentClass a(@org.jetbrains.annotations.NotNull() error.NonExistentClass a, @org.jetbrains.annotations.NotNull() java.lang.String s) {
        return null;
    }

    @org.jetbrains.annotations.NotNull()
    public final error.NonExistentClass b(@org.jetbrains.annotations.NotNull() java.lang.String s) {
        return null;
    }
}
