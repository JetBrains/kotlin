package

package test {
    public const val four: kotlin.Int = 4
    public fun fifth(/*0*/ arg: kotlin.Any?): kotlin.String?
    public fun first(/*0*/ arg: kotlin.Int): kotlin.Int
    public fun fourth(/*0*/ arg: test.Color): kotlin.String
    public fun second(/*0*/ arg: kotlin.String): kotlin.Int
    public fun third(/*0*/ arg: kotlin.Any?): kotlin.Int

    public final enum class Color : kotlin.Enum<test.Color> {
        enum entry RED

        enum entry GREEN

        enum entry BLUE

        private constructor Color()
        public final override /*1*/ /*fake_override*/ val name: kotlin.String
        public final override /*1*/ /*fake_override*/ val ordinal: kotlin.Int
        protected final override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
        public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: test.Color): kotlin.Int
        public final override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        protected/*protected and package*/ final override /*1*/ /*fake_override*/ /*isHiddenForResolutionEverywhereBesideSupercalls*/ fun finalize(): kotlin.Unit
        public final override /*1*/ /*fake_override*/ /*isHiddenForResolutionEverywhereBesideSupercalls*/ fun getDeclaringClass(): java.lang.Class<test.Color!>!
        public final override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

        // Static members
        public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): test.Color
        public final /*synthesized*/ fun values(): kotlin.Array<test.Color>
    }
}
