/**
 * public final class A$B : kotlin/Any {
 *
 *   // signature: <init>()V
 *   public constructor()
 *
 *   // field: c:LA$B$C;
 *   public final lateinit var c: A$B.C
 *     public final get
 *     public final set
 *
 *   // field: de:LA$B$D$E;
 *   public final lateinit var de: A$B.D$E
 *     public final get
 *     public final set
 *
 *   // field: dee:LA$B$D$$E;
 *   public final lateinit var dee: A$B.D$$E
 *     public final get
 *     public final set
 *
 *   // field: deee:LA$B$D$$$E;
 *   public final lateinit var deee: A$B.D$$$E
 *     public final get
 *     public final set
 *
 *   // field: jc:LJ$B$C;
 *   public final lateinit var jc: J$B.C
 *     public final get
 *     public final set
 *
 *   // field: jde:LJ$B$D$E;
 *   public final lateinit var jde: J$B.D$E
 *     public final get
 *     public final set
 *
 *   // field: jdee:LJ$B$D$$E;
 *   public final lateinit var jdee: J$B.D$$E
 *     public final get
 *     public final set
 *
 *   // field: jdeee:LJ$B$D$$$E;
 *   public final lateinit var jdeee: J$B.D$$$E
 *     public final get
 *     public final set
 *
 *   // nested class: C
 *
 *   // nested class: D$$$E
 *
 *   // nested class: D$$E
 *
 *   // nested class: D$E
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
public final class A$B {
    @kotlin.jvm.JvmField()
    public A$B.C c;
    @kotlin.jvm.JvmField()
    public A$B.D$E de;
    @kotlin.jvm.JvmField()
    public J$B.C jc;
    @kotlin.jvm.JvmField()
    public J$B.D$E jde;
    @kotlin.jvm.JvmField()
    public A$B.D$$E dee;
    @kotlin.jvm.JvmField()
    public A$B.D$$$E deee;
    @kotlin.jvm.JvmField()
    public J$B.D$$E jdee;
    @kotlin.jvm.JvmField()
    public J$B.D$$$E jdeee;

    public A$B() {
        super();
    }

    /**
     * public final class A$B.C : kotlin/Any {
     *
     *   // signature: <init>()V
     *   public constructor()
     *
     *   // module name: main
     * }
     */
    @kotlin.Metadata()
    public static final class C {

        public C() {
            super();
        }
    }

    /**
     * public final class A$B.D$$$E : kotlin/Any {
     *
     *   // signature: <init>()V
     *   public constructor()
     *
     *   // module name: main
     * }
     */
    @kotlin.Metadata()
    public static final class D$$$E {

        public D$$$E() {
            super();
        }
    }

    /**
     * public final class A$B.D$$E : kotlin/Any {
     *
     *   // signature: <init>()V
     *   public constructor()
     *
     *   // module name: main
     * }
     */
    @kotlin.Metadata()
    public static final class D$$E {

        public D$$E() {
            super();
        }
    }

    /**
     * public final class A$B.D$E : kotlin/Any {
     *
     *   // signature: <init>()V
     *   public constructor()
     *
     *   // field: f:LA$B$D$E$F;
     *   public final lateinit var f: A$B.D$E.F
     *     public final get
     *     public final set
     *
     *   // field: fg:LA$B$D$E$F$G;
     *   public final lateinit var fg: A$B.D$E.F$G
     *     public final get
     *     public final set
     *
     *   // field: jf:LJ$B$D$E$F;
     *   public final lateinit var jf: J$B.D$E.F
     *     public final get
     *     public final set
     *
     *   // field: jfg:LJ$B$D$E$F$G;
     *   public final lateinit var jfg: J$B.D$E.F$G
     *     public final get
     *     public final set
     *
     *   // nested class: F
     *
     *   // nested class: F$G
     *
     *   // module name: main
     * }
     */
    @kotlin.Metadata()
    public static final class D$E {
        @kotlin.jvm.JvmField()
        public A$B.D$E.F f;
        @kotlin.jvm.JvmField()
        public A$B.D$E.F$G fg;
        @kotlin.jvm.JvmField()
        public J$B.D$E.F jf;
        @kotlin.jvm.JvmField()
        public J$B.D$E.F$G jfg;

        public D$E() {
            super();
        }

        /**
         * public final class A$B.D$E.F : kotlin/Any {
         *
         *   // signature: <init>()V
         *   public constructor()
         *
         *   // module name: main
         * }
         */
        @kotlin.Metadata()
        public static final class F {

            public F() {
                super();
            }
        }

        /**
         * public final class A$B.D$E.F$G : kotlin/Any {
         *
         *   // signature: <init>()V
         *   public constructor()
         *
         *   // module name: main
         * }
         */
        @kotlin.Metadata()
        public static final class F$G {

            public F$G() {
                super();
            }
        }
    }
}

////////////////////


/**
 * public final class Experiment : kotlin/Any {
 *
 *   // signature: <init>()V
 *   public constructor()
 *
 *   // nested class: Group
 *
 *   // nested class: Type
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
public final class Experiment {

    public Experiment() {
        super();
    }

    @Experiment.Type()
    /**
     * public final data class Experiment.Group : kotlin/Any {
     *
     *   // signature: <init>(Ljava/lang/String;)V
     *   public constructor(s: kotlin/String)
     *
     *   // signature: component1()Ljava/lang/String;
     *   public final (* synthesized *) operator fun component1(): kotlin/String
     *
     *   // signature: copy(Ljava/lang/String;)LExperiment$Group;
     *   public final (* synthesized *) fun copy(s: kotlin/String (* = ... *)): Experiment.Group
     *
     *   // signature: equals(Ljava/lang/Object;)Z
     *   public open (* synthesized *) operator fun equals(other: kotlin/Any?): kotlin/Boolean
     *
     *   // signature: hashCode()I
     *   public open (* synthesized *) fun hashCode(): kotlin/Int
     *
     *   // signature: toString()Ljava/lang/String;
     *   public open (* synthesized *) fun toString(): kotlin/String
     *
     *   // field: s:Ljava/lang/String;
     *   // getter: getS()Ljava/lang/String;
     *   // setter: setS(Ljava/lang/String;)V
     *   public final var s: kotlin/String
     *     public final get
     *     public final set
     *
     *   // module name: main
     * }
     */
    @kotlin.Metadata()
    public static final class Group {
        @org.jetbrains.annotations.NotNull()
        private java.lang.String s;

        public Group(@org.jetbrains.annotations.NotNull()
        java.lang.String s) {
            super();
        }

        @org.jetbrains.annotations.NotNull()
        public final java.lang.String getS() {
            return null;
        }

        public final void setS(@org.jetbrains.annotations.NotNull()
        java.lang.String p0) {
        }

        @org.jetbrains.annotations.NotNull()
        public final java.lang.String component1() {
            return null;
        }

        @org.jetbrains.annotations.NotNull()
        public final Experiment.Group copy(@org.jetbrains.annotations.NotNull()
        java.lang.String s) {
            return null;
        }

        @java.lang.Override()
        public boolean equals(@org.jetbrains.annotations.Nullable()
        java.lang.Object other) {
            return false;
        }

        @java.lang.Override()
        public int hashCode() {
            return 0;
        }

        @java.lang.Override()
        @org.jetbrains.annotations.NotNull()
        public java.lang.String toString() {
            return null;
        }
    }

    @java.lang.annotation.Retention(value = java.lang.annotation.RetentionPolicy.RUNTIME)
    /**
     * public final annotation class Experiment.Type : kotlin/Annotation {
     *
     *   // signature: <init>()V
     *   public constructor()
     *
     *   // module name: main
     * }
     */
    @kotlin.Metadata()
    public static abstract @interface Type {
    }
}

////////////////////


/**
 * public final class Foo : kotlin/Any {
 *
 *   // signature: <init>()V
 *   public constructor()
 *
 *   // nested class: Bar
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
public final class Foo {

    public Foo() {
        super();
    }

    /**
     * public open class Foo.Bar : kotlin/Any {
     *
     *   // signature: <init>()V
     *   public constructor()
     *
     *   // nested class: Zoo
     *
     *   // module name: main
     * }
     */
    @kotlin.Metadata()
    public static class Bar {

        public Bar() {
            super();
        }

        /**
         * public final object Foo.Bar.Zoo : kotlin/Any {
         *
         *   // signature: <init>()V
         *   private constructor()
         *
         *   // module name: main
         * }
         */
        @kotlin.Metadata()
        public static final class Zoo {
            @org.jetbrains.annotations.NotNull()
            public static final Foo.Bar.Zoo INSTANCE = null;

            private Zoo() {
                super();
            }
        }
    }
}

////////////////////


/**
 * public abstract interface IFoo : kotlin/Any {
 *
 *   // nested class: IBar
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
public abstract interface IFoo {

    /**
     * public abstract interface IFoo.IBar : kotlin/Any {
     *
     *   // nested class: Anno
     *
     *   // nested class: IZoo
     *
     *   // module name: main
     * }
     */
    @kotlin.Metadata()
    public static abstract interface IBar {

        @java.lang.annotation.Retention(value = java.lang.annotation.RetentionPolicy.RUNTIME)
        /**
         * public final annotation class IFoo.IBar.Anno : kotlin/Annotation {
         *
         *   // signature: <init>(Lkotlin/Array;)V
         *   public constructor(vararg value: kotlin/reflect/KClass<*> (* kotlin/Array<out kotlin/reflect/KClass<*>> *))
         *
         *   // getter: value()[Ljava/lang/Class;
         *   public final val value: kotlin/Array<out kotlin/reflect/KClass<*>>
         *     public final get
         *
         *   // module name: main
         * }
         */
        @kotlin.Metadata()
        public static abstract @interface Anno {

            public abstract java.lang.Class<?>[] value();
        }

        @IFoo.IBar.Anno(value = {IFoo.IBar.IZoo.class})
        /**
         * public abstract interface IFoo.IBar.IZoo : kotlin/Any {
         *
         *   // module name: main
         * }
         */
        @kotlin.Metadata()
        public static abstract interface IZoo {
        }
    }
}

////////////////////


public class J$B {

    public J$B() {
        super();
    }

    public class C {

        public C() {
            super();
        }
    }

    public class D$E {

        public D$E() {
            super();
        }

        class F {

            F() {
                super();
            }
        }

        class F$G {

            F$G() {
                super();
            }
        }
    }

    public class D$$E {

        public D$$E() {
            super();
        }
    }

    public class D$$$E {

        public D$$$E() {
            super();
        }
    }
}

////////////////////


public class JavaClass {

    public JavaClass() {
        super();
    }

    public class Foo {

        public Foo() {
            super();
        }

        public class Bar {

            public Bar() {
                super();
            }
        }
    }
}

////////////////////


@IFoo.IBar.Anno(value = {IFoo.IBar.IZoo.class, Foo.Bar.class})
/**
 * public final class Test1 : Foo.Bar, IFoo.IBar, IFoo.IBar.IZoo {
 *
 *   // signature: <init>(LFoo$Bar$Zoo;)V
 *   public constructor(zoo: Foo.Bar.Zoo)
 *
 *   // signature: a()Ljava/lang/Thread$State;
 *   public final fun a(): java/lang/Thread.State
 *
 *   // signature: b(LJavaClass$Foo;LJavaClass$Foo$Bar;)V
 *   public final fun b(foo: JavaClass.Foo, bar: JavaClass.Foo.Bar): kotlin/Unit
 *
 *   // field: zoo:LFoo$Bar$Zoo;
 *   // getter: getZoo()LFoo$Bar$Zoo;
 *   public final val zoo: Foo.Bar.Zoo
 *     public final get
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
public final class Test1 extends Foo.Bar implements IFoo.IBar, IFoo.IBar.IZoo {
    @org.jetbrains.annotations.NotNull()
    private final Foo.Bar.Zoo zoo = null;

    public Test1(@org.jetbrains.annotations.NotNull()
    Foo.Bar.Zoo zoo) {
        super();
    }

    @org.jetbrains.annotations.NotNull()
    public final Foo.Bar.Zoo getZoo() {
        return null;
    }

    @org.jetbrains.annotations.NotNull()
    public final java.lang.Thread.State a() {
        return null;
    }

    public final void b(@org.jetbrains.annotations.NotNull()
    JavaClass.Foo foo, @org.jetbrains.annotations.NotNull()
    JavaClass.Foo.Bar bar) {
    }
}
