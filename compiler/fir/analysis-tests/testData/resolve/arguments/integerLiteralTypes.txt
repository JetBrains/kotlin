FILE: integerLiteralTypes.kt
    public final fun takeInt(x: R|kotlin/Int|): R|kotlin/Unit| {
    }
    public final fun takeLong(x: R|kotlin/Long|): R|kotlin/Unit| {
    }
    public final fun takeByte(x: R|kotlin/Byte|): R|kotlin/Unit| {
    }
    public final fun takeAny(x: R|kotlin/Any|): R|kotlin/Unit| {
    }
    public final fun takeString(x: R|kotlin/String|): R|kotlin/Unit| {
    }
    public final fun test_0(): R|kotlin/Unit| {
        Long(1)
        Int(1)
        Long(10000000000)
    }
    public final fun test_1(): R|kotlin/Unit| {
        R|/takeInt|(Int(1))
        R|/takeByte|(Byte(1))
        R|/takeLong|(Long(1))
    }
    public final fun test_2(): R|kotlin/Unit| {
        <Inapplicable(INAPPLICABLE): /takeInt>#(Long(10000000000))
        R|/takeLong|(Long(10000000000))
        <Inapplicable(INAPPLICABLE): /takeByte>#(Int(1000))
    }
    public final fun test_3(): R|kotlin/Unit| {
        R|/takeInt|(R|kotlin/run|<R|kotlin/Int|>(<L> = run@fun <anonymous>(): R|kotlin/Int| <kind=EXACTLY_ONCE>  {
            ^ Int(1)
        }
        ))
        R|/takeByte|(R|kotlin/run|<R|kotlin/Byte|>(<L> = run@fun <anonymous>(): R|kotlin/Byte| <kind=EXACTLY_ONCE>  {
            ^ Int(1)
        }
        ))
        R|/takeLong|(R|kotlin/run|<R|kotlin/Long|>(<L> = run@fun <anonymous>(): R|kotlin/Long| <kind=EXACTLY_ONCE>  {
            ^ Int(1)
        }
        ))
    }
    public final fun test_4(): R|kotlin/Unit| {
        R|/takeAny|(Int(1))
        R|/takeAny|(R|kotlin/run|<R|kotlin/Int|>(<L> = run@fun <anonymous>(): R|kotlin/Int| <kind=EXACTLY_ONCE>  {
            ^ Int(1)
        }
        ))
    }
    public final fun test_5(): R|kotlin/Unit| {
        <Inapplicable(INAPPLICABLE): /takeString>#(Int(1))
        <Inapplicable(INAPPLICABLE): /takeString>#(R|kotlin/run|<R|kotlin/Int|>(<L> = run@fun <anonymous>(): R|kotlin/Int| <kind=EXACTLY_ONCE>  {
            ^ Int(1)
        }
        ))
    }
    public final annotation class Ann : R|kotlin/Annotation| {
        public constructor(x: R|kotlin/Byte|): R|Ann| {
            super<R|kotlin/Any|>()
        }

        public final val x: R|kotlin/Byte| = R|<local>/x|
            public get(): R|kotlin/Byte|

    }
    @R|Ann|(Byte(10)) public final fun test_6(): R|kotlin/Unit| {
        @R|Ann|(Int(300)) lval x: R|kotlin/String| = String()
    }
