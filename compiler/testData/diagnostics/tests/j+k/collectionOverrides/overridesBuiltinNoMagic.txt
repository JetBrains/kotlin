package

public fun main(): kotlin.Unit

public open class X : kotlin.collections.MutableList<kotlin.String!> {
    public constructor X()
    public open override /*1*/ val size: kotlin.Int
    @java.lang.Override public open override /*1*/ fun add(/*0*/ index: kotlin.Int, /*1*/ element: kotlin.String!): kotlin.Unit
    @java.lang.Override public open override /*1*/ fun add(/*0*/ element: kotlin.String!): kotlin.Boolean
    @java.lang.Override public open override /*1*/ fun addAll(/*0*/ index: kotlin.Int, /*1*/ elements: kotlin.collections.Collection<kotlin.String!>): kotlin.Boolean
    @java.lang.Override public open override /*1*/ fun addAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String!>): kotlin.Boolean
    @java.lang.Override public open override /*1*/ fun clear(): kotlin.Unit
    @java.lang.Override public open override /*1*/ /*isHiddenToOvercomeSignatureClash*/ fun contains(/*0*/ o: kotlin.String!): kotlin.Boolean
    public open operator fun contains(/*0*/ element: kotlin.String!): kotlin.Boolean
    @java.lang.Override public open override /*1*/ fun containsAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String!>): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    @java.lang.Override public open override /*1*/ fun get(/*0*/ index: kotlin.Int): kotlin.String!
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    @java.lang.Override public open override /*1*/ fun indexOf(/*0*/ o: kotlin.String!): kotlin.Int
    @java.lang.Override public open override /*1*/ fun isEmpty(): kotlin.Boolean
    @org.jetbrains.annotations.NotNull @java.lang.Override public open override /*1*/ fun iterator(): kotlin.collections.MutableIterator<kotlin.String!>
    @java.lang.Override public open override /*1*/ fun lastIndexOf(/*0*/ o: kotlin.String!): kotlin.Int
    @org.jetbrains.annotations.NotNull @java.lang.Override public open override /*1*/ fun listIterator(): kotlin.collections.MutableListIterator<kotlin.String!>
    @org.jetbrains.annotations.NotNull @java.lang.Override public open override /*1*/ fun listIterator(/*0*/ index: kotlin.Int): kotlin.collections.MutableListIterator<kotlin.String!>
    @java.lang.Override public open override /*1*/ fun remove(/*0*/ o: kotlin.String!): kotlin.Boolean
    @java.lang.Override public open override /*1*/ fun removeAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String!>): kotlin.Boolean
    @java.lang.Override public open override /*1*/ /*isHiddenToOvercomeSignatureClash*/ fun removeAt(/*0*/ index: kotlin.Int): kotlin.String!
    public open fun removeAt(/*0*/ index: kotlin.Int): kotlin.String!
    @java.lang.Override public open override /*1*/ fun retainAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String!>): kotlin.Boolean
    @java.lang.Override public open override /*1*/ fun set(/*0*/ index: kotlin.Int, /*1*/ element: kotlin.String!): kotlin.String!
    @org.jetbrains.annotations.NotNull @java.lang.Override public open override /*1*/ fun subList(/*0*/ fromIndex: kotlin.Int, /*1*/ toIndex: kotlin.Int): kotlin.collections.MutableList<kotlin.String!>
    @org.jetbrains.annotations.NotNull @java.lang.Override public open fun toArray(): kotlin.Array<(out) kotlin.Any!>
    @org.jetbrains.annotations.NotNull @java.lang.Override public open fun </*0*/ T : kotlin.Any!> toArray(/*0*/ a: kotlin.Array<(out) T!>!): kotlin.Array<(out) T!>
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class Y : X {
    public constructor Y()
    public open override /*1*/ /*fake_override*/ val size: kotlin.Int
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun add(/*0*/ index: kotlin.Int, /*1*/ element: kotlin.String!): kotlin.Unit
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun add(/*0*/ element: kotlin.String!): kotlin.Boolean
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun addAll(/*0*/ index: kotlin.Int, /*1*/ elements: kotlin.collections.Collection<kotlin.String!>): kotlin.Boolean
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun addAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String!>): kotlin.Boolean
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun clear(): kotlin.Unit
    @java.lang.Override public open override /*1*/ /*fake_override*/ /*isHiddenToOvercomeSignatureClash*/ fun contains(/*0*/ o: kotlin.String!): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun contains(/*0*/ element: kotlin.String!): kotlin.Boolean
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun containsAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String!>): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun get(/*0*/ index: kotlin.Int): kotlin.String!
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun indexOf(/*0*/ o: kotlin.String!): kotlin.Int
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun isEmpty(): kotlin.Boolean
    @org.jetbrains.annotations.NotNull @java.lang.Override public open override /*1*/ /*fake_override*/ fun iterator(): kotlin.collections.MutableIterator<kotlin.String!>
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun lastIndexOf(/*0*/ o: kotlin.String!): kotlin.Int
    @org.jetbrains.annotations.NotNull @java.lang.Override public open override /*1*/ /*fake_override*/ fun listIterator(): kotlin.collections.MutableListIterator<kotlin.String!>
    @org.jetbrains.annotations.NotNull @java.lang.Override public open override /*1*/ /*fake_override*/ fun listIterator(/*0*/ index: kotlin.Int): kotlin.collections.MutableListIterator<kotlin.String!>
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun remove(/*0*/ o: kotlin.String!): kotlin.Boolean
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun removeAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String!>): kotlin.Boolean
    @java.lang.Override public open override /*1*/ /*fake_override*/ /*isHiddenToOvercomeSignatureClash*/ fun removeAt(/*0*/ index: kotlin.Int): kotlin.String!
    public open override /*1*/ /*fake_override*/ fun removeAt(/*0*/ index: kotlin.Int): kotlin.String!
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun retainAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String!>): kotlin.Boolean
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun set(/*0*/ index: kotlin.Int, /*1*/ element: kotlin.String!): kotlin.String!
    @org.jetbrains.annotations.NotNull @java.lang.Override public open override /*1*/ /*fake_override*/ fun subList(/*0*/ fromIndex: kotlin.Int, /*1*/ toIndex: kotlin.Int): kotlin.collections.MutableList<kotlin.String!>
    @org.jetbrains.annotations.NotNull @java.lang.Override public open override /*1*/ /*fake_override*/ fun toArray(): kotlin.Array<(out) kotlin.Any!>
    @org.jetbrains.annotations.NotNull @java.lang.Override public open override /*1*/ /*fake_override*/ fun </*0*/ T : kotlin.Any!> toArray(/*0*/ a: kotlin.Array<(out) T!>!): kotlin.Array<(out) T!>
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class Y2 : X {
    public constructor Y2()
    public open override /*1*/ /*fake_override*/ val size: kotlin.Int
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun add(/*0*/ index: kotlin.Int, /*1*/ element: kotlin.String!): kotlin.Unit
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun add(/*0*/ element: kotlin.String!): kotlin.Boolean
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun addAll(/*0*/ index: kotlin.Int, /*1*/ elements: kotlin.collections.Collection<kotlin.String!>): kotlin.Boolean
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun addAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String!>): kotlin.Boolean
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun clear(): kotlin.Unit
    @java.lang.Override public open override /*1*/ /*fake_override*/ /*isHiddenToOvercomeSignatureClash*/ fun contains(/*0*/ o: kotlin.String!): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun contains(/*0*/ element: kotlin.String!): kotlin.Boolean
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun containsAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String!>): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun get(/*0*/ index: kotlin.Int): kotlin.String!
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun indexOf(/*0*/ o: kotlin.String!): kotlin.Int
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun isEmpty(): kotlin.Boolean
    @org.jetbrains.annotations.NotNull @java.lang.Override public open override /*1*/ /*fake_override*/ fun iterator(): kotlin.collections.MutableIterator<kotlin.String!>
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun lastIndexOf(/*0*/ o: kotlin.String!): kotlin.Int
    @org.jetbrains.annotations.NotNull @java.lang.Override public open override /*1*/ /*fake_override*/ fun listIterator(): kotlin.collections.MutableListIterator<kotlin.String!>
    @org.jetbrains.annotations.NotNull @java.lang.Override public open override /*1*/ /*fake_override*/ fun listIterator(/*0*/ index: kotlin.Int): kotlin.collections.MutableListIterator<kotlin.String!>
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun remove(/*0*/ o: kotlin.String!): kotlin.Boolean
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun removeAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String!>): kotlin.Boolean
    public open override /*1*/ fun removeAt(/*0*/ index: kotlin.Int): kotlin.String
    @java.lang.Override public open override /*1*/ /*fake_override*/ /*isHiddenToOvercomeSignatureClash*/ fun removeAt(/*0*/ index: kotlin.Int): kotlin.String!
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun retainAll(/*0*/ elements: kotlin.collections.Collection<kotlin.String!>): kotlin.Boolean
    @java.lang.Override public open override /*1*/ /*fake_override*/ fun set(/*0*/ index: kotlin.Int, /*1*/ element: kotlin.String!): kotlin.String!
    @org.jetbrains.annotations.NotNull @java.lang.Override public open override /*1*/ /*fake_override*/ fun subList(/*0*/ fromIndex: kotlin.Int, /*1*/ toIndex: kotlin.Int): kotlin.collections.MutableList<kotlin.String!>
    @org.jetbrains.annotations.NotNull @java.lang.Override public open override /*1*/ /*fake_override*/ fun toArray(): kotlin.Array<(out) kotlin.Any!>
    @org.jetbrains.annotations.NotNull @java.lang.Override public open override /*1*/ /*fake_override*/ fun </*0*/ T : kotlin.Any!> toArray(/*0*/ a: kotlin.Array<(out) T!>!): kotlin.Array<(out) T!>
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
