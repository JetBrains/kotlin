class SimpleType : SimpleTypeMarker {
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  fun foo(): String {
    return "OK"
  }

}

class UserImpl {
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  fun SimpleTypeMarker.bar(): String {
    require(value = <this> is SimpleType)
    return <this> /*as SimpleType */.foo()
  }

}

interface SimpleTypeMarker {
}

interface User {
  fun SimpleTypeMarker.bar(): String {
    require(value = <this> is SimpleType)
    return <this> /*as SimpleType */.foo()
  }

}

