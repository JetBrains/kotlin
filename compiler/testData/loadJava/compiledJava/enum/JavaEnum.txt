package test

public final enum class JavaEnum : kotlin.Enum<test.JavaEnum!> {
    enum entry ENTRY

    enum entry ANOTHER

    private constructor JavaEnum()
    public final override /*1*/ /*fake_override*/ val name: kotlin.String
    public final override /*1*/ /*fake_override*/ val ordinal: kotlin.Int
    protected final override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
    public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: test.JavaEnum!): kotlin.Int
    protected/*protected and package*/ final override /*1*/ /*fake_override*/ /*isHiddenForResolutionEverywhereBesideSupercalls*/ fun finalize(): kotlin.Unit
    public final override /*1*/ /*fake_override*/ /*isHiddenForResolutionEverywhereBesideSupercalls*/ fun getDeclaringClass(): java.lang.Class<test.JavaEnum!>!

    // Static members
    public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): test.JavaEnum
    public final /*synthesized*/ fun values(): kotlin.Array<test.JavaEnum>
}
