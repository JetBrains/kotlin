/*
 * Copyright 2010-2024 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.android.synthetic.test;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TargetBackend;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.GenerateTestsKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@RunWith(JUnit3RunnerWithInners.class)
public class AndroidIrBoxTestGenerated extends AbstractAndroidIrBoxTest {
  @TestMetadata("plugins/android-extensions/android-extensions-compiler/testData/codegen/android")
  @TestDataPath("$PROJECT_ROOT")
  @RunWith(JUnit3RunnerWithInners.class)
  public static class Android extends AbstractAndroidIrBoxTest {
    private void runTest(String testDataFilePath) {
      KotlinTestUtils.runTest(this::doCompileAgainstAndroidSdkTest, TargetBackend.JVM_IR, testDataFilePath);
    }

    public void testAllFilesPresentInAndroid() {
      KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("plugins/android-extensions/android-extensions-compiler/testData/codegen/android"), Pattern.compile("^([^\\.]+)$"), null, TargetBackend.JVM_IR, false);
    }

    @TestMetadata("androidEntity")
    public void testAndroidEntity() {
      runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/android/androidEntity/");
    }

    @TestMetadata("androidEntityInnerClass")
    public void testAndroidEntityInnerClass() {
      runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/android/androidEntityInnerClass/");
    }

    @TestMetadata("fqNameInAttr")
    public void testFqNameInAttr() {
      runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/android/fqNameInAttr/");
    }

    @TestMetadata("fqNameInTag")
    public void testFqNameInTag() {
      runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/android/fqNameInTag/");
    }

    @TestMetadata("fragment")
    public void testFragment() {
      runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/android/fragment/");
    }

    @TestMetadata("fragmentNoGetView")
    public void testFragmentNoGetView() {
      runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/android/fragmentNoGetView/");
    }

    @TestMetadata("manyWidgets")
    public void testManyWidgets() {
      runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/android/manyWidgets/");
    }

    @TestMetadata("multiFile")
    public void testMultiFile() {
      runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/android/multiFile/");
    }

    @TestMetadata("singleFile")
    public void testSingleFile() {
      runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/android/singleFile/");
    }

    @TestMetadata("view")
    public void testView() {
      runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/android/view/");
    }
  }

  @TestMetadata("plugins/android-extensions/android-extensions-compiler/testData/codegen/android")
  @TestDataPath("$PROJECT_ROOT")
  @RunWith(JUnit3RunnerWithInners.class)
  public static class Invoke extends AbstractAndroidIrBoxTest {
    private void runTest(String testDataFilePath) {
      KotlinTestUtils.runTest(this::doFakeInvocationTest, TargetBackend.JVM_IR, testDataFilePath);
    }

    public void testAllFilesPresentInInvoke() {
      KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("plugins/android-extensions/android-extensions-compiler/testData/codegen/android"), Pattern.compile("^([^\\.]+)$"), null, TargetBackend.JVM_IR, false);
    }

    @TestMetadata("androidEntity")
    public void testAndroidEntity() {
      runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/android/androidEntity/");
    }

    @TestMetadata("androidEntityInnerClass")
    public void testAndroidEntityInnerClass() {
      runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/android/androidEntityInnerClass/");
    }

    @TestMetadata("fqNameInAttr")
    public void testFqNameInAttr() {
      runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/android/fqNameInAttr/");
    }

    @TestMetadata("fqNameInTag")
    public void testFqNameInTag() {
      runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/android/fqNameInTag/");
    }

    @TestMetadata("fragment")
    public void testFragment() {
      runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/android/fragment/");
    }

    @TestMetadata("fragmentNoGetView")
    public void testFragmentNoGetView() {
      runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/android/fragmentNoGetView/");
    }

    @TestMetadata("manyWidgets")
    public void testManyWidgets() {
      runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/android/manyWidgets/");
    }

    @TestMetadata("multiFile")
    public void testMultiFile() {
      runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/android/multiFile/");
    }

    @TestMetadata("singleFile")
    public void testSingleFile() {
      runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/android/singleFile/");
    }

    @TestMetadata("view")
    public void testView() {
      runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/android/view/");
    }
  }
}
