/is_operator.kt:(23,36): info: Generated Viper text for isNonNullable:
method f$isNonNullable$TF$Int(p$x: Ref) returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$boolType())
{
  inhale df$rt$isSubtype(df$rt$typeOf(p$x), df$rt$nullable(df$rt$intType()))
  ret$0 := df$rt$boolToRef(df$rt$isSubtype(df$rt$typeOf(p$x), df$rt$intType()))
  goto lbl$ret$0
  label lbl$ret$0
}

/is_operator.kt:(84,97): info: Generated Viper text for notIsNullable:
method f$notIsNullable$TF$Int(p$x: Ref) returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$boolType())
{
  inhale df$rt$isSubtype(df$rt$typeOf(p$x), df$rt$nullable(df$rt$intType()))
  ret$0 := sp$notBool(df$rt$boolToRef(df$rt$isSubtype(df$rt$typeOf(p$x), df$rt$nothingType())))
  goto lbl$ret$0
  label lbl$ret$0
}

/is_operator.kt:(150,159): info: Generated Viper text for smartCast:
method f$smartCast$TF$Any(p$x: Ref) returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$intType())
{
  inhale df$rt$isSubtype(df$rt$typeOf(p$x), df$rt$nullable(df$rt$anyType()))
  if (df$rt$isSubtype(df$rt$typeOf(p$x), df$rt$intType())) {
    ret$0 := p$x
    goto lbl$ret$0
  } else {
    ret$0 := df$rt$intToRef(-1)
    goto lbl$ret$0
  }
  label lbl$ret$0
}
