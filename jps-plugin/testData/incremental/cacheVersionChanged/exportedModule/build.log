================ Step #1 =================

Building module1
Local cache for KotlinChunk<KotlinJvmModuleBuildTarget>(Module 'module1' production) are INVALID: actual=CacheVersion(version=777) -> expected=CacheVersion(version=9011001)
Marked as dirty by Kotlin:
  module1/src/A.kt
Cleaning output files:
  out/production/module1/META-INF/module1.kotlin_module
  out/production/module1/a/A.class
End of files
Compiling files:
  module1/src/A.kt
End of files
Exit code: OK
------------------------------------------
Building module2
Local cache for KotlinChunk<KotlinJvmModuleBuildTarget>(Module 'module2' production) are INVALID: actual=CacheVersion(version=777) -> expected=CacheVersion(version=9011001)
Marked as dirty by Kotlin:
  module2/src/B.kt
Cleaning output files:
  out/production/module2/META-INF/module2.kotlin_module
  out/production/module2/b/B.class
End of files
Compiling files:
  module2/src/B.kt
End of files
Exit code: OK
------------------------------------------
Building module3
Local cache for KotlinChunk<KotlinJvmModuleBuildTarget>(Module 'module3' production) are INVALID: actual=CacheVersion(version=777) -> expected=CacheVersion(version=9011001)
Marked as dirty by Kotlin:
  module3/src/C.kt
Cleaning output files:
  out/production/module3/META-INF/module3.kotlin_module
  out/production/module3/c/C.class
End of files
Compiling files:
  module3/src/C.kt
End of files
Exit code: OK
------------------------------------------
Building module4
Local cache for KotlinChunk<KotlinJvmModuleBuildTarget>(Module 'module4' production) are INVALID: actual=CacheVersion(version=777) -> expected=CacheVersion(version=9011001)
Marked as dirty by Kotlin:
  module4/src/D.kt
Cleaning output files:
  out/production/module4/D/D.class
  out/production/module4/META-INF/module4.kotlin_module
End of files
Compiling files:
  module4/src/D.kt
End of files
Exit code: OK
------------------------------------------