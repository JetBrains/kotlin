FILE: initBlockAndInPlaceLambda.kt
    public abstract interface B : R|kotlin/Any| {
    }
    public abstract interface A : R|kotlin/Any| {
        public abstract val b: R|B?|
            public get(): R|B?|

    }
    public final class C : R|kotlin/Any| {
        public constructor(a: R|A|, b: R|class error: Symbol not found, for `b`|): R|C| {
            super<R|kotlin/Any|>()
        }

        init {
            lval c: R|C?| = R|<local>/a|.R|/A.b|?.R|kotlin/let|<R|B|, R|C|>(<L> = let@fun <anonymous>(it: R|B|): R|C| <kind=EXACTLY_ONCE>  {
                R|/C.C|(R|<local>/a|, R|<local>/it|)
            }
            )
        }

    }
