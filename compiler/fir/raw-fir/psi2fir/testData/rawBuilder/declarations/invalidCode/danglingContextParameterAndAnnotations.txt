FILE: danglingContextParameterAndAnnotations.kt
    @Target(AnnotationTarget#.TYPE#, AnnotationTarget#.VALUE_PARAMETER#) public final? annotation class Anno : R|kotlin/Annotation| {
        public? [ContainingClassKey=Anno] constructor([CorrespondingProperty=/Anno.position] position: String): R|Anno| {
            super<R|kotlin/Any|>()
        }

        public? final? [IsFromPrimaryConstructor=true] val position: String = R|<local>/position|
            public? [ContainingClassKey=Anno] get(): String

    }
    public final? class Foo : R|kotlin/Any| {
        public? [ContainingClassKey=Foo] constructor(): R|Foo| {
            super<R|kotlin/Any|>()
        }

        [ContainingClassKey=Foo] @Anno(String(str)) context(@Anno(String(param)) parameter1: @Anno(<strcat>(String(1), String(2))) Unresolved, parameter2: List<@Anno(String(str)) Unresolved>)
        <DANGLING MODIFIER: Top level declaration expected>
    }
    public? final? fun foo(): R|kotlin/Unit| {
        local final? class Foo : R|kotlin/Any| {
            public? [ContainingClassKey=Foo] constructor(): R|<local>/Foo| {
                super<R|kotlin/Any|>()
            }

            [ContainingClassKey=Foo] @Anno(String(str)) context(@Anno(String(param)) parameter1: @Anno(<strcat>(String(1), String(2))) Unresolved, parameter2: List<@Anno(String(str)) Unresolved>)
            <DANGLING MODIFIER: Top level declaration expected>
        }

    }
    @Anno(String(str)) context(@Anno(String(param)) parameter1: @Anno(<strcat>(String(1), String(2))) Unresolved, parameter2: List<@Anno(String(str)) Unresolved>)
    <DANGLING MODIFIER: Top level declaration expected>
