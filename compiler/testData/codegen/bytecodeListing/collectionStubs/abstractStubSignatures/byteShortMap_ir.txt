@kotlin.Metadata
public abstract class<Ljava/lang/Object;Ljava/util/Map<Ljava/lang/Byte;Ljava/lang/Short;>;Lkotlin/jvm/internal/markers/KMappedMarker;>  ByteShortMap {
    // source: 'byteShortMap.kt'
    public bridge final <()Ljava/util/Collection<Ljava/lang/Short;>;> method values(): java.util.Collection
    public bridge final <()Ljava/util/Set<Ljava/lang/Byte;>;> method keySet(): java.util.Set
    public bridge final <()Ljava/util/Set<Ljava/util/Map$Entry<Ljava/lang/Byte;Ljava/lang/Short;>;>;> method entrySet(): java.util.Set
    public <(Ljava/util/Map<+Ljava/lang/Byte;+Ljava/lang/Short;>;)V> method putAll(p0: java.util.Map): void
    public <null> method <init>(): void
    public <null> method clear(): void
    public abstract <null> method containsKey(p0: byte): boolean
    public bridge final <null> method containsKey(p0: java.lang.Object): boolean
    public bridge final <null> method containsValue(p0: java.lang.Object): boolean
    public abstract <null> method containsValue(p0: short): boolean
    public abstract <null> method get(p0: byte): java.lang.Short
    public synthetic bridge <null> method get(p0: java.lang.Object): java.lang.Object
    public bridge final <null> method get(p0: java.lang.Object): java.lang.Short
    public abstract <null> method getEntries(): java.util.Set
    public abstract <null> method getKeys(): java.util.Set
    public abstract <null> method getSize(): int
    public abstract <null> method getValues(): java.util.Collection
    public <null> method put(p0: byte, p1: short): java.lang.Short
    public synthetic bridge <null> method put(p0: java.lang.Object, p1: java.lang.Object): java.lang.Object
    public synthetic bridge <null> method remove(p0: java.lang.Object): java.lang.Object
    public <null> method remove(p0: java.lang.Object): java.lang.Short
    public bridge final <null> method size(): int
}
