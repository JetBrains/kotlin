import plugins.KotlinBuildPublishingPlugin

plugins {
    id("java-gradle-plugin")
    id("gradle-plugin-common-configuration")
    id("com.gradle.plugin-publish")
    id("jps-compatible")
}

repositories {
    mavenLocal()
    mavenCentral()
}

pill {
    variant = 'FULL'
}

dependencies {
    api project(':kotlin-gradle-plugin-api')
    // Use this dependency instead when building apart from the other modules:
    // compile "org.jetbrains.kotlin:kotlin-gradle-plugin-api:$kotlin_version"

    api project(':kotlin-test:kotlin-test-junit')

    compileOnly kotlinStdlib()
    compileOnly project(':compiler')
    compileOnly project(':compiler:plugin-api')
    compileOnly project(':compiler:cli-common')
    compileOnly project(':compiler:cli')
    
    compileOnly gradleApi()

    compileOnly project(':dependencies:intellij-core')
}

gradlePlugin {
    plugins {
        create("gradle-subplugin-example") {
            id = "org.jetbrains.kotlin.gradle-subplugin-example"
            implementationClass = "example.ExampleSubplugin"
            displayName = "Kotlin Gradle subplugin example"
        }
    }
}

// Disable releasing for this plugin
// It is not intended to be released publicly
tasks.withType(PublishToMavenRepository)
        .configureEach {
            if (it.name.endsWith("PublicationTo${KotlinBuildPublishingPlugin.REPOSITORY_NAME}Repository")) {
                setEnabled(false)
            }
        }

tasks.named("publishPlugins") {
    enabled = false
}
