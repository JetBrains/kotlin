Usage: kotlinc-js <options> <source files>
where possible options include:
  -ir-output-dir <directory> Destination for generated files.
  -ir-output-name            Base name of generated files.
  -libraries <path>          Paths to Kotlin libraries with .meta.js and .kjsm files, separated by the system path separator.
  -source-map                Generate a source map.
  -source-map-prefix         Add the specified prefix to the paths in the source map.
  -source-map-base-dirs <path> Base directories for calculating relative paths to source files in the source map.
  -source-map-embed-sources {always|never|inlining}
                             Embed source files into the source map.
  -source-map-names-policy {no|simple-names|fully-qualified-names}
                             Mode for mapping generated names to original names.
  -target { es5, es2015 }    Generate JS files for the specified ECMA version.
  -module-kind {plain|amd|commonjs|umd|es}
                             The kind of JS module generated by the compiler. ES modules are enabled by default in case of ES2015 target usage
  -main {call|noCall}        Specify whether the 'main' function should be called upon execution.
  -language-version <version> Provide source compatibility with the specified version of Kotlin.
  -api-version <version>     Allow using declarations from only the specified version of bundled libraries.
  -kotlin-home <path>        Path to the Kotlin compiler home directory used for the discovery of runtime libraries.
  -progressive               Enable progressive compiler mode.
                             In this mode, deprecations and bug fixes for unstable code take effect immediately
                             instead of going through a graceful migration cycle.
                             Code written in progressive mode is backward compatible; however, code written without
                             progressive mode enabled may cause compilation errors in progressive mode.
  -script                    Evaluate the given Kotlin script (*.kts) file.
  -opt-in <fq.name>          Enable API usages that require opt-in with an opt-in requirement marker with the given fully qualified name.
  -P plugin:<pluginId>:<optionName>=<value>
                             Pass an option to a plugin.
  -help (-h)                 Print a synopsis of standard options.
  -X                         Print a synopsis of advanced options.
  -version                   Display the compiler version.
  -verbose                   Enable verbose logging output.
  -nowarn                    Don't generate any warnings.
  -Werror                    Report an error if there are any warnings.
  -Wextra                    Enable extra checkers for K2.
  -J<option>                 Pass an option directly to JVM.
  @<argfile>                 Read compiler arguments and file paths from the given file.

For details, see https://kotl.in/cli
OK
