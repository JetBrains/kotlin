<root>
    <item name='android.test.mock.MockContext void enforceCallingPermission(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockContext void sendOrderedBroadcast(android.content.Intent, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockCursor int getColumnIndex(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockCursor int getColumnIndexOrThrow(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockContext boolean startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockContentProvider int bulkInsert(android.net.Uri, android.content.ContentValues[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockResources android.content.res.TypedArray obtainAttributes(android.util.AttributeSet, int[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockCursor void copyStringToBuffer(int, android.database.CharArrayBuffer) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockContentProvider android.content.ContentProviderResult[] applyBatch(java.util.ArrayList&lt;android.content.ContentProviderOperation&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockContext void enforceCallingOrSelfPermission(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockContext int checkCallingOrSelfPermission(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockContext java.lang.Object getSystemService(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockContentProvider int delete(android.net.Uri, java.lang.String, java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockContext void enforcePermission(java.lang.String, int, int, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockContentProvider java.lang.String getType(android.net.Uri) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockApplication void onConfigurationChanged(android.content.res.Configuration) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockContext android.content.Context createDisplayContext(android.view.Display) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockContext int checkCallingPermission(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockContentProvider android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockContentProvider android.net.Uri insert(android.net.Uri, android.content.ContentValues) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockContext android.content.Context createConfigurationContext(android.content.res.Configuration) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockContentProvider android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri, java.lang.String, android.os.Bundle) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockContext boolean bindService(android.content.Intent, android.content.ServiceConnection, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockContext int checkPermission(java.lang.String, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='android.test.mock.MockContext void unbindService(android.content.ServiceConnection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
