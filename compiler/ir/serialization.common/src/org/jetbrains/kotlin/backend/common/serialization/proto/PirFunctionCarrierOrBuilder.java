// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: compiler/ir/serialization.common/src/KotlinPirCarriers.proto

package org.jetbrains.kotlin.backend.common.serialization.proto;

public interface PirFunctionCarrierOrBuilder extends
    // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.backend.common.serialization.proto.PirFunctionCarrier)
    org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

  /**
   * <code>required int32 lastModified = 1;</code>
   */
  boolean hasLastModified();
  /**
   * <code>required int32 lastModified = 1;</code>
   */
  int getLastModified();

  /**
   * <code>optional int64 parentSymbol = 2;</code>
   */
  boolean hasParentSymbol();
  /**
   * <code>optional int64 parentSymbol = 2;</code>
   */
  long getParentSymbol();

  /**
   * <code>optional int32 origin = 3;</code>
   */
  boolean hasOrigin();
  /**
   * <code>optional int32 origin = 3;</code>
   */
  int getOrigin();

  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 4;</code>
   */
  java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall> 
      getAnnotationList();
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 4;</code>
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall getAnnotation(int index);
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall annotation = 4;</code>
   */
  int getAnnotationCount();

  /**
   * <code>required int32 returnTypeField = 5;</code>
   */
  boolean hasReturnTypeField();
  /**
   * <code>required int32 returnTypeField = 5;</code>
   */
  int getReturnTypeField();

  /**
   * <code>optional int64 dispatchReceiverParameter = 6;</code>
   */
  boolean hasDispatchReceiverParameter();
  /**
   * <code>optional int64 dispatchReceiverParameter = 6;</code>
   */
  long getDispatchReceiverParameter();

  /**
   * <code>optional int64 extensionReceiverParameter = 7;</code>
   */
  boolean hasExtensionReceiverParameter();
  /**
   * <code>optional int64 extensionReceiverParameter = 7;</code>
   */
  long getExtensionReceiverParameter();

  /**
   * <code>optional int32 body = 8;</code>
   */
  boolean hasBody();
  /**
   * <code>optional int32 body = 8;</code>
   */
  int getBody();

  /**
   * <code>repeated int64 typeParameters = 9;</code>
   */
  java.util.List<java.lang.Long> getTypeParametersList();
  /**
   * <code>repeated int64 typeParameters = 9;</code>
   */
  int getTypeParametersCount();
  /**
   * <code>repeated int64 typeParameters = 9;</code>
   */
  long getTypeParameters(int index);

  /**
   * <code>repeated int64 valueParameters = 10;</code>
   */
  java.util.List<java.lang.Long> getValueParametersList();
  /**
   * <code>repeated int64 valueParameters = 10;</code>
   */
  int getValueParametersCount();
  /**
   * <code>repeated int64 valueParameters = 10;</code>
   */
  long getValueParameters(int index);

  /**
   * <code>optional int64 correspondingPropertySymbol = 11;</code>
   */
  boolean hasCorrespondingPropertySymbol();
  /**
   * <code>optional int64 correspondingPropertySymbol = 11;</code>
   */
  long getCorrespondingPropertySymbol();

  /**
   * <code>repeated int64 overriddenSymbols = 12;</code>
   */
  java.util.List<java.lang.Long> getOverriddenSymbolsList();
  /**
   * <code>repeated int64 overriddenSymbols = 12;</code>
   */
  int getOverriddenSymbolsCount();
  /**
   * <code>repeated int64 overriddenSymbols = 12;</code>
   */
  long getOverriddenSymbols(int index);

  /**
   * <code>optional int64 flags = 13 [default = 0];</code>
   */
  boolean hasFlags();
  /**
   * <code>optional int64 flags = 13 [default = 0];</code>
   */
  long getFlags();
}