package

public fun testCallableRefernceSmartCast(): kotlin.Unit
public fun testFunctionCallSmartcast(/*0*/ fn: (() -> kotlin.Unit)?): kotlin.Unit
public fun testLambdaArgumentSmartCast(/*0*/ foo: kotlin.Int?): kotlin.Unit
public fun testSmartCastInDelegate(/*0*/ d: D?): kotlin.Unit

public final class D {
    public constructor D()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final operator fun getValue(/*0*/ ref: kotlin.Any?, /*1*/ property: kotlin.reflect.KProperty<*>): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
