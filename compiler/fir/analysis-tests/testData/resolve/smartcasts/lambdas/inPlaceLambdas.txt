FILE: inPlaceLambdas.kt
    public abstract interface A : R|kotlin/Any| {
        public abstract fun foo(): R|kotlin/Unit|

    }
    public abstract interface B : R|kotlin/Any| {
        public abstract fun bar(): R|kotlin/Unit|

    }
    public final fun test_1(x: R|kotlin/Any?|): R|kotlin/Unit| {
        when () {
            (R|<local>/x| is R|A|) ->  {
                R|kotlin/run|<R|kotlin/Unit|>(<L> = run@fun <anonymous>(): R|kotlin/Unit| <kind=EXACTLY_ONCE>  {
                    R|<local>/x|.R|/A.foo|()
                }
                )
            }
        }

    }
    public final fun test_2(x: R|kotlin/Any?|): R|kotlin/Unit| {
        R|kotlin/run|<R|B|>(<L> = run@fun <anonymous>(): R|B| <kind=EXACTLY_ONCE>  {
            ^ (R|<local>/x| as R|B|)
        }
        )
        R|<local>/x|.R|/B.bar|()
    }
    public final fun test_3(x: R|kotlin/Any?|): R|kotlin/Unit| {
        when () {
            (R|<local>/x| is R|A|) ->  {
                R|kotlin/run|<R|B|>(<L> = run@fun <anonymous>(): R|B| <kind=EXACTLY_ONCE>  {
                    R|<local>/x|.R|/A.foo|()
                    ^ (R|<local>/x| as R|B|)
                }
                )
                R|<local>/x|.R|/B.bar|()
            }
        }

    }
