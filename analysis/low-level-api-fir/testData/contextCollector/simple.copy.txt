Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Implicit receiver:
            FirRegularClassSymbol public final class Foo : R|kotlin/Any|
                Type: foo.Foo
    Element 7
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol p: R|kotlin/String|
    Element 8
        Scope: FirLocalScope
            Properties:
                FirPropertySymbol lval x: R|kotlin/Float|

FILE: [ResolvedTo(IMPORTS)] simple.kt
    public final? [ResolvedTo(RAW_FIR)] class Foo : R|kotlin/Any| {
        public? [ResolvedTo(RAW_FIR)] constructor(): R|foo/Foo| {
            LAZY_super<R|kotlin/Any|>
        }

        public? final? [ResolvedTo(RAW_FIR)] val a: Int
            public? [ResolvedTo(RAW_FIR)] get(): Int

        public final [ResolvedTo(BODY_RESOLVE)] fun foo([ResolvedTo(BODY_RESOLVE)] p: R|kotlin/String|): R|kotlin/Unit| {
            [ResolvedTo(BODY_RESOLVE)] lval x: R|kotlin/Float| = Float(1.0)
            <Unresolved name: print>#(R|<local>/x|)
        }

    }
    public final? [ResolvedTo(RAW_FIR)] class Unrelated : R|kotlin/Any| {
        public? [ResolvedTo(RAW_FIR)] constructor(): R|foo/Unrelated| {
            LAZY_super<R|kotlin/Any|>
        }

        public? final? [ResolvedTo(RAW_FIR)] val unrelatedMember: Boolean
            public? [ResolvedTo(RAW_FIR)] get(): Boolean { LAZY_BLOCK }

    }
    public? final? [ResolvedTo(RAW_FIR)] fun unrelatedFunction(): Int { LAZY_BLOCK }