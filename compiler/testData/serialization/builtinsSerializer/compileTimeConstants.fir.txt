package test

public val a: kotlin.Int = 10
public val arrayConst: kotlin.Any = {1.toByte(), 2.toByte()}
public val b: kotlin.Int
public val booleanConst: kotlin.Boolean = true
public val byteConst: kotlin.Byte = 10.toByte()
public val charConst: kotlin.Char = \u0041 ('A')
public val doubleConst: kotlin.Double = 3.0.toDouble()
public val enumConst: test.Weapon? = Weapon.ROCK
public val floatConst: kotlin.Float = 2.0.toFloat()
public val intConst: kotlin.Int = 30
public val longConst: kotlin.Long = 40.toLong()
public val shortConst: kotlin.Short = 20.toShort()
public val stringConst: kotlin.String = "abcd"

public final class Class {
    public constructor Class()
    public final val a: kotlin.Int = 10
    public final val arrayConst: kotlin.Any = {1.toByte(), 2.toByte()}
    public final val b: kotlin.Int
    public final val booleanConst: kotlin.Boolean = true
    public final val byteConst: kotlin.Byte = 10.toByte()
    public final val charConst: kotlin.Char = \u0041 ('A')
    public final val doubleConst: kotlin.Double = 3.0.toDouble()
    public final val enumConst: test.Weapon? = Weapon.ROCK
    public final val floatConst: kotlin.Float = 2.0.toFloat()
    public final val intConst: kotlin.Int = 30
    public final val longConst: kotlin.Long = 40.toLong()
    public final val shortConst: kotlin.Short = 20.toShort()
    public final val stringConst: kotlin.String = "abcd"
}

public final enum class Weapon : kotlin.Enum<test.Weapon> {
    enum entry ROCK

    enum entry PAPER

    enum entry SCISSORS

    private constructor Weapon()
    @kotlin.internal.IntrinsicConstEvaluation public final override /*1*/ /*fake_override*/ val name: kotlin.String
    public final override /*1*/ /*fake_override*/ val ordinal: kotlin.Int
    protected final override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
    public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: test.Weapon): kotlin.Int

    // Static members
    public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): test.Weapon
    public final /*synthesized*/ fun values(): kotlin.Array<test.Weapon>
}
