FILE: main.kt
    public abstract interface PsiMethod : R|kotlin/Any| {
        public abstract val containingClass: R|PsiClass?|
            public get(): R|PsiClass?|

    }
    public abstract interface PsiClass : R|kotlin/Any| {
    }
    public final fun test(): R|kotlin/Unit| {
        lval processor: R|AdapterProcessor<PsiMethod, PsiClass>| = R|/AdapterProcessor.AdapterProcessor|<R|PsiMethod|, R|PsiClass|>(R|/Function|<R|PsiMethod!|, R|PsiClass!|>(<L> = Function@fun <anonymous>(method: R|PsiMethod?|): R|PsiClass!| <inline=NoInline>  {
            ^ R|<local>/method|?.{ $subj$.R|/PsiMethod.containingClass| }
        }
        ))
    }
