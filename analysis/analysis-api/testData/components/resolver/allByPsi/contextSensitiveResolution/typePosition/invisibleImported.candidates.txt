KtFile: 'main.kt'
  NO_CANDIDATES

KtPackageDirective(0,0): ''
  NO_CANDIDATES

KtImportList(24,34): 'import a.*'
  NO_CANDIDATES

KtImportDirective(24,34): 'import a.*'
  NO_CANDIDATES

KtNameReferenceExpression(31,32): 'a'
  NO_CANDIDATES

KtClass(36,146): 'sealed interface MySealed {'
  NO_CANDIDATES

KtDeclarationModifierList(36,42): 'sealed'
  NO_CANDIDATES

KtClassBody(62,146): '{'
  NO_CANDIDATES

KtClass(68,103): 'class Left(val x: String): MySealed'
  NO_CANDIDATES

KtPrimaryConstructor(78,93): '(val x: String)'
  NO_CANDIDATES

KtParameterList(78,93): '(val x: String)'
  NO_CANDIDATES

KtParameter(79,92): 'val x: String'
  NO_CANDIDATES

KtTypeReference(86,92): 'String'
  NO_CANDIDATES

KtUserType(86,92): 'String'
  NO_CANDIDATES

KtNameReferenceExpression(86,92): 'String'
  NO_CANDIDATES

KtSuperTypeList(95,103): 'MySealed'
  NO_CANDIDATES

KtSuperTypeEntry(95,103): 'MySealed'
  NO_CANDIDATES

KtTypeReference(95,103): 'MySealed'
  NO_CANDIDATES

KtUserType(95,103): 'MySealed'
  NO_CANDIDATES

KtNameReferenceExpression(95,103): 'MySealed'
  NO_CANDIDATES

KtClass(108,144): 'class Right(val y: String): MySealed'
  NO_CANDIDATES

KtPrimaryConstructor(119,134): '(val y: String)'
  NO_CANDIDATES

KtParameterList(119,134): '(val y: String)'
  NO_CANDIDATES

KtParameter(120,133): 'val y: String'
  NO_CANDIDATES

KtTypeReference(127,133): 'String'
  NO_CANDIDATES

KtUserType(127,133): 'String'
  NO_CANDIDATES

KtNameReferenceExpression(127,133): 'String'
  NO_CANDIDATES

KtSuperTypeList(136,144): 'MySealed'
  NO_CANDIDATES

KtSuperTypeEntry(136,144): 'MySealed'
  NO_CANDIDATES

KtTypeReference(136,144): 'MySealed'
  NO_CANDIDATES

KtUserType(136,144): 'MySealed'
  NO_CANDIDATES

KtNameReferenceExpression(136,144): 'MySealed'
  NO_CANDIDATES

KtNamedFunction(148,226): 'fun MySealed.getOrElse1() = when (this) {'
  NO_CANDIDATES

KtTypeReference(152,160): 'MySealed'
  NO_CANDIDATES

KtUserType(152,160): 'MySealed'
  NO_CANDIDATES

KtNameReferenceExpression(152,160): 'MySealed'
  NO_CANDIDATES

KtParameterList(171,173): '()'
  NO_CANDIDATES

KtWhenExpression(176,226): 'when (this) {'
  NO_CANDIDATES

KtThisExpression(182,186): 'this'
  NO_CANDIDATES

KtNameReferenceExpression(182,186): 'this'
  NO_CANDIDATES

KtWhenEntry(194,206): 'is Left -> x'
  NO_CANDIDATES

KtWhenConditionIsPattern(194,201): 'is Left'
  NO_CANDIDATES

KtTypeReference(197,201): 'Left'
  NO_CANDIDATES

KtUserType(197,201): 'Left'
  NO_CANDIDATES

KtNameReferenceExpression(197,201): 'Left'
  NO_CANDIDATES

KtNameReferenceExpression(205,206): 'x'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaSmartCastedReceiverValue:
          original = KaImplicitReceiverValue:
            symbol = KaReceiverParameterSymbol:
              annotations: []
              callableId: null
              compilerVisibility: Public
              contextReceivers: []
              isActual: false
              isExpect: false
              isExtension: false
              isVal: true
              location: LOCAL
              modality: FINAL
              name: <receiver>
              origin: SOURCE
              owningCallableSymbol: KaNamedFunctionSymbol(/getOrElse1)
              receiverParameter: null
              returnType: KaUsualClassType:
                annotations: []
                typeArguments: []
                type: MySealed
              visibility: PUBLIC
            type = MySealed
          type = MySealed.Left
        extensionReceiver = null
        signature = KaVariableSignature:
          name = x
          receiverType = null
          returnType = kotlin.String
          symbol = val x: kotlin.String
          contextParameters = []
          callableId = /MySealed.Left.x
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtWhenEntry(211,224): 'is Right -> y'
  NO_CANDIDATES

KtWhenConditionIsPattern(211,219): 'is Right'
  NO_CANDIDATES

KtTypeReference(214,219): 'Right'
  NO_CANDIDATES

KtUserType(214,219): 'Right'
  NO_CANDIDATES

KtNameReferenceExpression(214,219): 'Right'
  NO_CANDIDATES

KtNameReferenceExpression(223,224): 'y'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaSmartCastedReceiverValue:
          original = KaImplicitReceiverValue:
            symbol = KaReceiverParameterSymbol:
              annotations: []
              callableId: null
              compilerVisibility: Public
              contextReceivers: []
              isActual: false
              isExpect: false
              isExtension: false
              isVal: true
              location: LOCAL
              modality: FINAL
              name: <receiver>
              origin: SOURCE
              owningCallableSymbol: KaNamedFunctionSymbol(/getOrElse1)
              receiverParameter: null
              returnType: KaUsualClassType:
                annotations: []
                typeArguments: []
                type: MySealed
              visibility: PUBLIC
            type = MySealed
          type = MySealed.Right
        extensionReceiver = null
        signature = KaVariableSignature:
          name = y
          receiverType = null
          returnType = kotlin.String
          symbol = val y: kotlin.String
          contextParameters = []
          callableId = /MySealed.Right.y
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNamedFunction(228,301): 'fun Any.getOrElse2() = when (this) {'
  NO_CANDIDATES

KtTypeReference(232,235): 'Any'
  NO_CANDIDATES

KtUserType(232,235): 'Any'
  NO_CANDIDATES

KtNameReferenceExpression(232,235): 'Any'
  NO_CANDIDATES

KtParameterList(246,248): '()'
  NO_CANDIDATES

KtWhenExpression(251,301): 'when (this) {'
  NO_CANDIDATES

KtThisExpression(257,261): 'this'
  NO_CANDIDATES

KtNameReferenceExpression(257,261): 'this'
  NO_CANDIDATES

KtWhenEntry(269,281): 'is Left -> x'
  NO_CANDIDATES

KtWhenConditionIsPattern(269,276): 'is Left'
  NO_CANDIDATES

KtTypeReference(272,276): 'Left'
  NO_CANDIDATES

KtUserType(272,276): 'Left'
  NO_CANDIDATES

KtNameReferenceExpression(272,276): 'Left'
  NO_CANDIDATES

KtNameReferenceExpression(280,281): 'x'
  NO_CANDIDATES

KtWhenEntry(286,299): 'is Right -> y'
  NO_CANDIDATES

KtWhenConditionIsPattern(286,294): 'is Right'
  NO_CANDIDATES

KtTypeReference(289,294): 'Right'
  NO_CANDIDATES

KtUserType(289,294): 'Right'
  NO_CANDIDATES

KtNameReferenceExpression(289,294): 'Right'
  NO_CANDIDATES

KtNameReferenceExpression(298,299): 'y'
  NO_CANDIDATES