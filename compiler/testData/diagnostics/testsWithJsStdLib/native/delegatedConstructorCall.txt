package

public open external class Base {
    public constructor Base(/*0*/ x: kotlin.Int)
    public constructor Base(/*0*/ x: kotlin.String)
    public constructor Base(/*0*/ x: kotlin.String, /*1*/ y: kotlin.String)
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public open external class Derived1 : Base {
    public constructor Derived1()
    public constructor Derived1(/*0*/ x: kotlin.Byte)
    public constructor Derived1(/*0*/ x: kotlin.String)
    public constructor Derived1(/*0*/ x: kotlin.String, /*1*/ y: kotlin.String)
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public open external class Derived2 : Base {
    public constructor Derived2()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
