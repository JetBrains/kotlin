KtFile: 'lambda.kt'
  NO_CANDIDATES

KtPackageDirective(0,0): ''
  NO_CANDIDATES

KtImportList(0,0): ''
  NO_CANDIDATES

KtClass(0,166): '// ISSUE: KT-75315'
  NO_CANDIDATES

KtDeclarationModifierList(92,96): 'open'
  NO_CANDIDATES

KtClassBody(109,166): '{'
  NO_CANDIDATES

KtProperty(115,141): 'val superProp: String = ""'
  NO_CANDIDATES

KtTypeReference(130,136): 'String'
  NO_CANDIDATES

KtUserType(130,136): 'String'
  NO_CANDIDATES

KtNameReferenceExpression(130,136): 'String'
  NO_CANDIDATES

KtStringTemplateExpression(139,141): '""'
  NO_CANDIDATES

KtNamedFunction(146,164): 'fun superFunc() {}'
  NO_CANDIDATES

KtParameterList(159,161): '()'
  NO_CANDIDATES

KtBlockExpression(162,164): '{}'
  NO_CANDIDATES

KtClass(168,773): 'open class MyClass {'
  NO_CANDIDATES

KtDeclarationModifierList(168,172): 'open'
  NO_CANDIDATES

KtClassBody(187,773): '{'
  NO_CANDIDATES

KtObjectDeclaration(193,264): 'object InheritorObject: MyClass() {'
  NO_CANDIDATES

KtSuperTypeList(217,226): 'MyClass()'
  NO_CANDIDATES

KtSuperTypeCallEntry(217,226): 'MyClass()'
  KaApplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtConstructorCalleeExpression(217,224): 'MyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtTypeReference(217,224): 'MyClass'
  NO_CANDIDATES

KtUserType(217,224): 'MyClass'
  NO_CANDIDATES

KtNameReferenceExpression(217,224): 'MyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(224,226): '()'
  NO_CANDIDATES

KtClassBody(227,264): '{'
  NO_CANDIDATES

KtProperty(237,258): 'val prop: String = ""'
  NO_CANDIDATES

KtTypeReference(247,253): 'String'
  NO_CANDIDATES

KtUserType(247,253): 'String'
  NO_CANDIDATES

KtNameReferenceExpression(247,253): 'String'
  NO_CANDIDATES

KtStringTemplateExpression(256,258): '""'
  NO_CANDIDATES

KtClass(270,339): 'class InheritorClass: MyClass() {'
  NO_CANDIDATES

KtSuperTypeList(292,301): 'MyClass()'
  NO_CANDIDATES

KtSuperTypeCallEntry(292,301): 'MyClass()'
  KaApplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtConstructorCalleeExpression(292,299): 'MyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtTypeReference(292,299): 'MyClass'
  NO_CANDIDATES

KtUserType(292,299): 'MyClass'
  NO_CANDIDATES

KtNameReferenceExpression(292,299): 'MyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(299,301): '()'
  NO_CANDIDATES

KtClassBody(302,339): '{'
  NO_CANDIDATES

KtProperty(312,333): 'val prop: String = ""'
  NO_CANDIDATES

KtTypeReference(322,328): 'String'
  NO_CANDIDATES

KtUserType(322,328): 'String'
  NO_CANDIDATES

KtNameReferenceExpression(322,328): 'String'
  NO_CANDIDATES

KtStringTemplateExpression(331,333): '""'
  NO_CANDIDATES

KtObjectDeclaration(345,364): 'object NestedObject'
  NO_CANDIDATES

KtObjectDeclaration(370,771): 'companion object: Super() {'
  NO_CANDIDATES

KtDeclarationModifierList(370,379): 'companion'
  NO_CANDIDATES

KtSuperTypeList(388,395): 'Super()'
  NO_CANDIDATES

KtSuperTypeCallEntry(388,395): 'Super()'
  KaApplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = Super
          symbol = <constructor>(): Super
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtConstructorCalleeExpression(388,393): 'Super'
  KaApplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = Super
          symbol = <constructor>(): Super
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtTypeReference(388,393): 'Super'
  NO_CANDIDATES

KtUserType(388,393): 'Super'
  NO_CANDIDATES

KtNameReferenceExpression(388,393): 'Super'
  KaApplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = Super
          symbol = <constructor>(): Super
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(393,395): '()'
  NO_CANDIDATES

KtClassBody(396,771): '{'
  NO_CANDIDATES

KtProperty(406,439): 'val propMyClass: MyClass = TODO()'
  NO_CANDIDATES

KtTypeReference(423,430): 'MyClass'
  NO_CANDIDATES

KtUserType(423,430): 'MyClass'
  NO_CANDIDATES

KtNameReferenceExpression(423,430): 'MyClass'
  NO_CANDIDATES

KtCallExpression(433,439): 'TODO()'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Nothing
          symbol = kotlin/TODO(): kotlin.Nothing
          valueParameters = []
          contextParameters = []
          callableId = kotlin/TODO
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Nothing
          symbol = kotlin/TODO(reason: kotlin.String): kotlin.Nothing
          valueParameters = [
            KaVariableSignature:
              name = reason
              receiverType = null
              returnType = kotlin.String
              symbol = reason: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/TODO
      typeArgumentsMapping = {}
    diagnostic = ERROR<NO_VALUE_FOR_PARAMETER: No value passed for parameter 'reason'>
    isInBestCandidates = false

KtNameReferenceExpression(433,437): 'TODO'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Nothing
          symbol = kotlin/TODO(): kotlin.Nothing
          valueParameters = []
          contextParameters = []
          callableId = kotlin/TODO
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Nothing
          symbol = kotlin/TODO(reason: kotlin.String): kotlin.Nothing
          valueParameters = [
            KaVariableSignature:
              name = reason
              receiverType = null
              returnType = kotlin.String
              symbol = reason: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/TODO
      typeArgumentsMapping = {}
    diagnostic = ERROR<NO_VALUE_FOR_PARAMETER: No value passed for parameter 'reason'>
    isInBestCandidates = false

KtValueArgumentList(437,439): '()'
  NO_CANDIDATES

KtProperty(448,505): 'val propInheritorClass: InheritorClass = InheritorClass()'
  NO_CANDIDATES

KtTypeReference(472,486): 'InheritorClass'
  NO_CANDIDATES

KtUserType(472,486): 'InheritorClass'
  NO_CANDIDATES

KtNameReferenceExpression(472,486): 'InheritorClass'
  NO_CANDIDATES

KtCallExpression(489,505): 'InheritorClass()'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass.InheritorClass
          symbol = <constructor>(): MyClass.InheritorClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(489,503): 'InheritorClass'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass.InheritorClass
          symbol = <constructor>(): MyClass.InheritorClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(503,505): '()'
  NO_CANDIDATES

KtProperty(514,572): 'val propInheritorObject: InheritorObject = InheritorObject'
  NO_CANDIDATES

KtTypeReference(539,554): 'InheritorObject'
  NO_CANDIDATES

KtUserType(539,554): 'InheritorObject'
  NO_CANDIDATES

KtNameReferenceExpression(539,554): 'InheritorObject'
  NO_CANDIDATES

KtNameReferenceExpression(557,572): 'InheritorObject'
  NO_CANDIDATES

KtProperty(581,602): 'val prop: String = ""'
  NO_CANDIDATES

KtTypeReference(591,597): 'String'
  NO_CANDIDATES

KtUserType(591,597): 'String'
  NO_CANDIDATES

KtNameReferenceExpression(591,597): 'String'
  NO_CANDIDATES

KtStringTemplateExpression(600,602): '""'
  NO_CANDIDATES

KtProperty(611,643): 'const val constProp: String = ""'
  NO_CANDIDATES

KtDeclarationModifierList(611,616): 'const'
  NO_CANDIDATES

KtTypeReference(632,638): 'String'
  NO_CANDIDATES

KtUserType(632,638): 'String'
  NO_CANDIDATES

KtNameReferenceExpression(632,638): 'String'
  NO_CANDIDATES

KtStringTemplateExpression(641,643): '""'
  NO_CANDIDATES

KtProperty(652,685): 'val lazyProp: String by lazy {""}'
  NO_CANDIDATES

KtTypeReference(666,672): 'String'
  NO_CANDIDATES

KtUserType(666,672): 'String'
  NO_CANDIDATES

KtNameReferenceExpression(666,672): 'String'
  NO_CANDIDATES

KtPropertyDelegate(673,685): 'by lazy {""}'
  NO_CANDIDATES

KtCallExpression(676,685): 'lazy {""}'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        {""} -> (KaVariableSignature:
          name = initializer
          receiverType = null
          returnType = kotlin.Function0<ERROR_TYPE>
          symbol = initializer: kotlin.Function0<T>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Lazy<ERROR_TYPE>
          symbol = kotlin/lazy(lock: kotlin.Any?, initializer: kotlin.Function0<T>): kotlin.Lazy<T>
          valueParameters = [
            KaVariableSignature:
              name = lock
              receiverType = null
              returnType = kotlin.Any?
              symbol = lock: kotlin.Any?
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = initializer
              receiverType = null
              returnType = kotlin.Function0<ERROR_TYPE>
              symbol = initializer: kotlin.Function0<T>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/lazy
      typeArgumentsMapping = {
        T -> (ERROR_TYPE)
      }
    diagnostic = ERROR<NO_VALUE_FOR_PARAMETER: No value passed for parameter 'lock'>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        {""} -> (KaVariableSignature:
          name = initializer
          receiverType = null
          returnType = kotlin.Function0<ERROR_TYPE>
          symbol = initializer: kotlin.Function0<T>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Lazy<ERROR_TYPE>
          symbol = kotlin/lazy(mode: kotlin.LazyThreadSafetyMode, initializer: kotlin.Function0<T>): kotlin.Lazy<T>
          valueParameters = [
            KaVariableSignature:
              name = mode
              receiverType = null
              returnType = kotlin.LazyThreadSafetyMode
              symbol = mode: kotlin.LazyThreadSafetyMode
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = initializer
              receiverType = null
              returnType = kotlin.Function0<ERROR_TYPE>
              symbol = initializer: kotlin.Function0<T>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/lazy
      typeArgumentsMapping = {
        T -> (ERROR_TYPE)
      }
    diagnostic = ERROR<NO_VALUE_FOR_PARAMETER: No value passed for parameter 'mode'>
    isInBestCandidates = false

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        {""} -> (KaVariableSignature:
          name = initializer
          receiverType = null
          returnType = kotlin.Function0<kotlin.String>
          symbol = initializer: kotlin.Function0<T>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Lazy<kotlin.String>
          symbol = kotlin/lazy(initializer: kotlin.Function0<T>): kotlin.Lazy<T>
          valueParameters = [
            KaVariableSignature:
              name = initializer
              receiverType = null
              returnType = kotlin.Function0<kotlin.String>
              symbol = initializer: kotlin.Function0<T>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/lazy
      typeArgumentsMapping = {
        T -> (kotlin.String)
      }
    isInBestCandidates = true

KtNameReferenceExpression(676,680): 'lazy'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        {""} -> (KaVariableSignature:
          name = initializer
          receiverType = null
          returnType = kotlin.Function0<ERROR_TYPE>
          symbol = initializer: kotlin.Function0<T>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Lazy<ERROR_TYPE>
          symbol = kotlin/lazy(lock: kotlin.Any?, initializer: kotlin.Function0<T>): kotlin.Lazy<T>
          valueParameters = [
            KaVariableSignature:
              name = lock
              receiverType = null
              returnType = kotlin.Any?
              symbol = lock: kotlin.Any?
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = initializer
              receiverType = null
              returnType = kotlin.Function0<ERROR_TYPE>
              symbol = initializer: kotlin.Function0<T>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/lazy
      typeArgumentsMapping = {
        T -> (ERROR_TYPE)
      }
    diagnostic = ERROR<NO_VALUE_FOR_PARAMETER: No value passed for parameter 'lock'>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        {""} -> (KaVariableSignature:
          name = initializer
          receiverType = null
          returnType = kotlin.Function0<ERROR_TYPE>
          symbol = initializer: kotlin.Function0<T>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Lazy<ERROR_TYPE>
          symbol = kotlin/lazy(mode: kotlin.LazyThreadSafetyMode, initializer: kotlin.Function0<T>): kotlin.Lazy<T>
          valueParameters = [
            KaVariableSignature:
              name = mode
              receiverType = null
              returnType = kotlin.LazyThreadSafetyMode
              symbol = mode: kotlin.LazyThreadSafetyMode
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = initializer
              receiverType = null
              returnType = kotlin.Function0<ERROR_TYPE>
              symbol = initializer: kotlin.Function0<T>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/lazy
      typeArgumentsMapping = {
        T -> (ERROR_TYPE)
      }
    diagnostic = ERROR<NO_VALUE_FOR_PARAMETER: No value passed for parameter 'mode'>
    isInBestCandidates = false

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        {""} -> (KaVariableSignature:
          name = initializer
          receiverType = null
          returnType = kotlin.Function0<kotlin.String>
          symbol = initializer: kotlin.Function0<T>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Lazy<kotlin.String>
          symbol = kotlin/lazy(initializer: kotlin.Function0<T>): kotlin.Lazy<T>
          valueParameters = [
            KaVariableSignature:
              name = initializer
              receiverType = null
              returnType = kotlin.Function0<kotlin.String>
              symbol = initializer: kotlin.Function0<T>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/lazy
      typeArgumentsMapping = {
        T -> (kotlin.String)
      }
    isInBestCandidates = true

KtLambdaArgument(681,685): '{""}'
  NO_CANDIDATES

KtLambdaExpression(681,685): '{""}'
  NO_CANDIDATES

KtFunctionLiteral(681,685): '{""}'
  NO_CANDIDATES

KtBlockExpression(682,684): '""'
  NO_CANDIDATES

KtStringTemplateExpression(682,684): '""'
  NO_CANDIDATES

KtProperty(694,728): 'val lambdaProp = {InheritorObject}'
  NO_CANDIDATES

KtLambdaExpression(711,728): '{InheritorObject}'
  NO_CANDIDATES

KtFunctionLiteral(711,728): '{InheritorObject}'
  NO_CANDIDATES

KtBlockExpression(712,727): 'InheritorObject'
  NO_CANDIDATES

KtNameReferenceExpression(712,727): 'InheritorObject'
  NO_CANDIDATES

KtNamedFunction(737,765): 'fun func(): MyClass = TODO()'
  NO_CANDIDATES

KtParameterList(745,747): '()'
  NO_CANDIDATES

KtTypeReference(749,756): 'MyClass'
  NO_CANDIDATES

KtUserType(749,756): 'MyClass'
  NO_CANDIDATES

KtNameReferenceExpression(749,756): 'MyClass'
  NO_CANDIDATES

KtCallExpression(759,765): 'TODO()'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Nothing
          symbol = kotlin/TODO(): kotlin.Nothing
          valueParameters = []
          contextParameters = []
          callableId = kotlin/TODO
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Nothing
          symbol = kotlin/TODO(reason: kotlin.String): kotlin.Nothing
          valueParameters = [
            KaVariableSignature:
              name = reason
              receiverType = null
              returnType = kotlin.String
              symbol = reason: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/TODO
      typeArgumentsMapping = {}
    diagnostic = ERROR<NO_VALUE_FOR_PARAMETER: No value passed for parameter 'reason'>
    isInBestCandidates = false

KtNameReferenceExpression(759,763): 'TODO'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Nothing
          symbol = kotlin/TODO(): kotlin.Nothing
          valueParameters = []
          contextParameters = []
          callableId = kotlin/TODO
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Nothing
          symbol = kotlin/TODO(reason: kotlin.String): kotlin.Nothing
          valueParameters = [
            KaVariableSignature:
              name = reason
              receiverType = null
              returnType = kotlin.String
              symbol = reason: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/TODO
      typeArgumentsMapping = {}
    diagnostic = ERROR<NO_VALUE_FOR_PARAMETER: No value passed for parameter 'reason'>
    isInBestCandidates = false

KtValueArgumentList(763,765): '()'
  NO_CANDIDATES

KtNamedFunction(775,1172): 'fun testLambda(lMyClass: (arg: MyClass) -> Unit) {'
  NO_CANDIDATES

KtParameterList(789,823): '(lMyClass: (arg: MyClass) -> Unit)'
  NO_CANDIDATES

KtParameter(790,822): 'lMyClass: (arg: MyClass) -> Unit'
  NO_CANDIDATES

KtTypeReference(800,822): '(arg: MyClass) -> Unit'
  NO_CANDIDATES

KtFunctionType(800,822): '(arg: MyClass) -> Unit'
  NO_CANDIDATES

KtParameterList(800,814): '(arg: MyClass)'
  NO_CANDIDATES

KtParameter(801,813): 'arg: MyClass'
  NO_CANDIDATES

KtTypeReference(806,813): 'MyClass'
  NO_CANDIDATES

KtUserType(806,813): 'MyClass'
  NO_CANDIDATES

KtNameReferenceExpression(806,813): 'MyClass'
  NO_CANDIDATES

KtTypeReference(818,822): 'Unit'
  NO_CANDIDATES

KtUserType(818,822): 'Unit'
  NO_CANDIDATES

KtNameReferenceExpression(818,822): 'Unit'
  NO_CANDIDATES

KtBlockExpression(824,1172): '{'
  NO_CANDIDATES

KtCallExpression(830,855): 'lMyClass(InheritorObject)'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        InheritorObject -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
          symbol = p1: P1
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/Function1.invoke(<dispatch receiver>: kotlin.Function1<P1, R>, p1: P1): R
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
              symbol = p1: P1
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Function1.invoke
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        InheritorObject -> (KaVariableSignature:
          name = value
          receiverType = null
          returnType = ERROR_TYPE
          symbol = value: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        signature = KaFunctionSignature:
          receiverType = kotlin.DeepRecursiveFunction<ERROR_TYPE, ERROR_TYPE>
          returnType = ERROR_TYPE
          symbol = kotlin/invoke(<extension receiver>: kotlin.DeepRecursiveFunction<T, R>, value: T): R
          valueParameters = [
            KaVariableSignature:
              name = value
              receiverType = null
              returnType = ERROR_TYPE
              symbol = value: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/invoke
      typeArgumentsMapping = {
        T -> (ERROR_TYPE),
        R -> (ERROR_TYPE)
      }
    diagnostic = ERROR<TYPE_MISMATCH: Type mismatch: inferred type is (MyClass) -> Unit but DeepRecursiveFunction<TypeVariable(T), TypeVariable(R)> was expected>
    isInBestCandidates = false

KtNameReferenceExpression(830,838): 'lMyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = lMyClass
          receiverType = null
          returnType = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          symbol = lMyClass: kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(838,855): '(InheritorObject)'
  NO_CANDIDATES

KtValueArgument(839,854): 'InheritorObject'
  NO_CANDIDATES

KtNameReferenceExpression(839,854): 'InheritorObject'
  NO_CANDIDATES

KtCallExpression(860,881): 'lMyClass(propMyClass)'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        propMyClass -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
          symbol = p1: P1
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/Function1.invoke(<dispatch receiver>: kotlin.Function1<P1, R>, p1: P1): R
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
              symbol = p1: P1
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Function1.invoke
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        propMyClass -> (KaVariableSignature:
          name = value
          receiverType = null
          returnType = ERROR_TYPE
          symbol = value: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        signature = KaFunctionSignature:
          receiverType = kotlin.DeepRecursiveFunction<ERROR_TYPE, ERROR_TYPE>
          returnType = ERROR_TYPE
          symbol = kotlin/invoke(<extension receiver>: kotlin.DeepRecursiveFunction<T, R>, value: T): R
          valueParameters = [
            KaVariableSignature:
              name = value
              receiverType = null
              returnType = ERROR_TYPE
              symbol = value: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/invoke
      typeArgumentsMapping = {
        T -> (ERROR_TYPE),
        R -> (ERROR_TYPE)
      }
    diagnostic = ERROR<TYPE_MISMATCH: Type mismatch: inferred type is (MyClass) -> Unit but DeepRecursiveFunction<TypeVariable(T), TypeVariable(R)> was expected>
    isInBestCandidates = false

KtNameReferenceExpression(860,868): 'lMyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = lMyClass
          receiverType = null
          returnType = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          symbol = lMyClass: kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(868,881): '(propMyClass)'
  NO_CANDIDATES

KtValueArgument(869,880): 'propMyClass'
  NO_CANDIDATES

KtNameReferenceExpression(869,880): 'propMyClass'
  NO_CANDIDATES

KtCallExpression(886,914): 'lMyClass(propInheritorClass)'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        propInheritorClass -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
          symbol = p1: P1
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/Function1.invoke(<dispatch receiver>: kotlin.Function1<P1, R>, p1: P1): R
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
              symbol = p1: P1
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Function1.invoke
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        propInheritorClass -> (KaVariableSignature:
          name = value
          receiverType = null
          returnType = ERROR_TYPE
          symbol = value: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        signature = KaFunctionSignature:
          receiverType = kotlin.DeepRecursiveFunction<ERROR_TYPE, ERROR_TYPE>
          returnType = ERROR_TYPE
          symbol = kotlin/invoke(<extension receiver>: kotlin.DeepRecursiveFunction<T, R>, value: T): R
          valueParameters = [
            KaVariableSignature:
              name = value
              receiverType = null
              returnType = ERROR_TYPE
              symbol = value: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/invoke
      typeArgumentsMapping = {
        T -> (ERROR_TYPE),
        R -> (ERROR_TYPE)
      }
    diagnostic = ERROR<TYPE_MISMATCH: Type mismatch: inferred type is (MyClass) -> Unit but DeepRecursiveFunction<TypeVariable(T), TypeVariable(R)> was expected>
    isInBestCandidates = false

KtNameReferenceExpression(886,894): 'lMyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = lMyClass
          receiverType = null
          returnType = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          symbol = lMyClass: kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(894,914): '(propInheritorClass)'
  NO_CANDIDATES

KtValueArgument(895,913): 'propInheritorClass'
  NO_CANDIDATES

KtNameReferenceExpression(895,913): 'propInheritorClass'
  NO_CANDIDATES

KtCallExpression(919,948): 'lMyClass(propInheritorObject)'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        propInheritorObject -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
          symbol = p1: P1
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/Function1.invoke(<dispatch receiver>: kotlin.Function1<P1, R>, p1: P1): R
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
              symbol = p1: P1
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Function1.invoke
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        propInheritorObject -> (KaVariableSignature:
          name = value
          receiverType = null
          returnType = ERROR_TYPE
          symbol = value: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        signature = KaFunctionSignature:
          receiverType = kotlin.DeepRecursiveFunction<ERROR_TYPE, ERROR_TYPE>
          returnType = ERROR_TYPE
          symbol = kotlin/invoke(<extension receiver>: kotlin.DeepRecursiveFunction<T, R>, value: T): R
          valueParameters = [
            KaVariableSignature:
              name = value
              receiverType = null
              returnType = ERROR_TYPE
              symbol = value: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/invoke
      typeArgumentsMapping = {
        T -> (ERROR_TYPE),
        R -> (ERROR_TYPE)
      }
    diagnostic = ERROR<TYPE_MISMATCH: Type mismatch: inferred type is (MyClass) -> Unit but DeepRecursiveFunction<TypeVariable(T), TypeVariable(R)> was expected>
    isInBestCandidates = false

KtNameReferenceExpression(919,927): 'lMyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = lMyClass
          receiverType = null
          returnType = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          symbol = lMyClass: kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(927,948): '(propInheritorObject)'
  NO_CANDIDATES

KtValueArgument(928,947): 'propInheritorObject'
  NO_CANDIDATES

KtNameReferenceExpression(928,947): 'propInheritorObject'
  NO_CANDIDATES

KtCallExpression(954,976): 'lMyClass(NestedObject)'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        NestedObject -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
          symbol = p1: P1
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/Function1.invoke(<dispatch receiver>: kotlin.Function1<P1, R>, p1: P1): R
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
              symbol = p1: P1
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Function1.invoke
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        NestedObject -> (KaVariableSignature:
          name = value
          receiverType = null
          returnType = ERROR_TYPE
          symbol = value: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        signature = KaFunctionSignature:
          receiverType = kotlin.DeepRecursiveFunction<ERROR_TYPE, ERROR_TYPE>
          returnType = ERROR_TYPE
          symbol = kotlin/invoke(<extension receiver>: kotlin.DeepRecursiveFunction<T, R>, value: T): R
          valueParameters = [
            KaVariableSignature:
              name = value
              receiverType = null
              returnType = ERROR_TYPE
              symbol = value: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/invoke
      typeArgumentsMapping = {
        T -> (ERROR_TYPE),
        R -> (ERROR_TYPE)
      }
    diagnostic = ERROR<TYPE_MISMATCH: Type mismatch: inferred type is (MyClass) -> Unit but DeepRecursiveFunction<TypeVariable(T), TypeVariable(R)> was expected>
    isInBestCandidates = false

KtNameReferenceExpression(954,962): 'lMyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = lMyClass
          receiverType = null
          returnType = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          symbol = lMyClass: kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(962,976): '(NestedObject)'
  NO_CANDIDATES

KtValueArgument(963,975): 'NestedObject'
  NO_CANDIDATES

KtNameReferenceExpression(963,975): 'NestedObject'
  NO_CANDIDATES

KtCallExpression(981,995): 'lMyClass(prop)'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        prop -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
          symbol = p1: P1
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/Function1.invoke(<dispatch receiver>: kotlin.Function1<P1, R>, p1: P1): R
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
              symbol = p1: P1
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Function1.invoke
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        prop -> (KaVariableSignature:
          name = value
          receiverType = null
          returnType = ERROR_TYPE
          symbol = value: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        signature = KaFunctionSignature:
          receiverType = kotlin.DeepRecursiveFunction<ERROR_TYPE, ERROR_TYPE>
          returnType = ERROR_TYPE
          symbol = kotlin/invoke(<extension receiver>: kotlin.DeepRecursiveFunction<T, R>, value: T): R
          valueParameters = [
            KaVariableSignature:
              name = value
              receiverType = null
              returnType = ERROR_TYPE
              symbol = value: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/invoke
      typeArgumentsMapping = {
        T -> (ERROR_TYPE),
        R -> (ERROR_TYPE)
      }
    diagnostic = ERROR<TYPE_MISMATCH: Type mismatch: inferred type is (MyClass) -> Unit but DeepRecursiveFunction<TypeVariable(T), TypeVariable(R)> was expected>
    isInBestCandidates = false

KtNameReferenceExpression(981,989): 'lMyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = lMyClass
          receiverType = null
          returnType = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          symbol = lMyClass: kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(989,995): '(prop)'
  NO_CANDIDATES

KtValueArgument(990,994): 'prop'
  NO_CANDIDATES

KtNameReferenceExpression(990,994): 'prop'
  NO_CANDIDATES

KtCallExpression(1000,1019): 'lMyClass(superProp)'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        superProp -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
          symbol = p1: P1
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/Function1.invoke(<dispatch receiver>: kotlin.Function1<P1, R>, p1: P1): R
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
              symbol = p1: P1
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Function1.invoke
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        superProp -> (KaVariableSignature:
          name = value
          receiverType = null
          returnType = ERROR_TYPE
          symbol = value: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        signature = KaFunctionSignature:
          receiverType = kotlin.DeepRecursiveFunction<ERROR_TYPE, ERROR_TYPE>
          returnType = ERROR_TYPE
          symbol = kotlin/invoke(<extension receiver>: kotlin.DeepRecursiveFunction<T, R>, value: T): R
          valueParameters = [
            KaVariableSignature:
              name = value
              receiverType = null
              returnType = ERROR_TYPE
              symbol = value: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/invoke
      typeArgumentsMapping = {
        T -> (ERROR_TYPE),
        R -> (ERROR_TYPE)
      }
    diagnostic = ERROR<TYPE_MISMATCH: Type mismatch: inferred type is (MyClass) -> Unit but DeepRecursiveFunction<TypeVariable(T), TypeVariable(R)> was expected>
    isInBestCandidates = false

KtNameReferenceExpression(1000,1008): 'lMyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = lMyClass
          receiverType = null
          returnType = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          symbol = lMyClass: kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(1008,1019): '(superProp)'
  NO_CANDIDATES

KtValueArgument(1009,1018): 'superProp'
  NO_CANDIDATES

KtNameReferenceExpression(1009,1018): 'superProp'
  NO_CANDIDATES

KtCallExpression(1024,1043): 'lMyClass(constProp)'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        constProp -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
          symbol = p1: P1
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/Function1.invoke(<dispatch receiver>: kotlin.Function1<P1, R>, p1: P1): R
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
              symbol = p1: P1
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Function1.invoke
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        constProp -> (KaVariableSignature:
          name = value
          receiverType = null
          returnType = ERROR_TYPE
          symbol = value: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        signature = KaFunctionSignature:
          receiverType = kotlin.DeepRecursiveFunction<ERROR_TYPE, ERROR_TYPE>
          returnType = ERROR_TYPE
          symbol = kotlin/invoke(<extension receiver>: kotlin.DeepRecursiveFunction<T, R>, value: T): R
          valueParameters = [
            KaVariableSignature:
              name = value
              receiverType = null
              returnType = ERROR_TYPE
              symbol = value: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/invoke
      typeArgumentsMapping = {
        T -> (ERROR_TYPE),
        R -> (ERROR_TYPE)
      }
    diagnostic = ERROR<TYPE_MISMATCH: Type mismatch: inferred type is (MyClass) -> Unit but DeepRecursiveFunction<TypeVariable(T), TypeVariable(R)> was expected>
    isInBestCandidates = false

KtNameReferenceExpression(1024,1032): 'lMyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = lMyClass
          receiverType = null
          returnType = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          symbol = lMyClass: kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(1032,1043): '(constProp)'
  NO_CANDIDATES

KtValueArgument(1033,1042): 'constProp'
  NO_CANDIDATES

KtNameReferenceExpression(1033,1042): 'constProp'
  NO_CANDIDATES

KtCallExpression(1048,1066): 'lMyClass(lazyProp)'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        lazyProp -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
          symbol = p1: P1
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/Function1.invoke(<dispatch receiver>: kotlin.Function1<P1, R>, p1: P1): R
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
              symbol = p1: P1
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Function1.invoke
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        lazyProp -> (KaVariableSignature:
          name = value
          receiverType = null
          returnType = ERROR_TYPE
          symbol = value: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        signature = KaFunctionSignature:
          receiverType = kotlin.DeepRecursiveFunction<ERROR_TYPE, ERROR_TYPE>
          returnType = ERROR_TYPE
          symbol = kotlin/invoke(<extension receiver>: kotlin.DeepRecursiveFunction<T, R>, value: T): R
          valueParameters = [
            KaVariableSignature:
              name = value
              receiverType = null
              returnType = ERROR_TYPE
              symbol = value: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/invoke
      typeArgumentsMapping = {
        T -> (ERROR_TYPE),
        R -> (ERROR_TYPE)
      }
    diagnostic = ERROR<TYPE_MISMATCH: Type mismatch: inferred type is (MyClass) -> Unit but DeepRecursiveFunction<TypeVariable(T), TypeVariable(R)> was expected>
    isInBestCandidates = false

KtNameReferenceExpression(1048,1056): 'lMyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = lMyClass
          receiverType = null
          returnType = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          symbol = lMyClass: kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(1056,1066): '(lazyProp)'
  NO_CANDIDATES

KtValueArgument(1057,1065): 'lazyProp'
  NO_CANDIDATES

KtNameReferenceExpression(1057,1065): 'lazyProp'
  NO_CANDIDATES

KtCallExpression(1071,1091): 'lMyClass(lambdaProp)'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        lambdaProp -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
          symbol = p1: P1
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/Function1.invoke(<dispatch receiver>: kotlin.Function1<P1, R>, p1: P1): R
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
              symbol = p1: P1
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Function1.invoke
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        lambdaProp -> (KaVariableSignature:
          name = value
          receiverType = null
          returnType = ERROR_TYPE
          symbol = value: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        signature = KaFunctionSignature:
          receiverType = kotlin.DeepRecursiveFunction<ERROR_TYPE, ERROR_TYPE>
          returnType = ERROR_TYPE
          symbol = kotlin/invoke(<extension receiver>: kotlin.DeepRecursiveFunction<T, R>, value: T): R
          valueParameters = [
            KaVariableSignature:
              name = value
              receiverType = null
              returnType = ERROR_TYPE
              symbol = value: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/invoke
      typeArgumentsMapping = {
        T -> (ERROR_TYPE),
        R -> (ERROR_TYPE)
      }
    diagnostic = ERROR<TYPE_MISMATCH: Type mismatch: inferred type is (MyClass) -> Unit but DeepRecursiveFunction<TypeVariable(T), TypeVariable(R)> was expected>
    isInBestCandidates = false

KtNameReferenceExpression(1071,1079): 'lMyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = lMyClass
          receiverType = null
          returnType = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          symbol = lMyClass: kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(1079,1091): '(lambdaProp)'
  NO_CANDIDATES

KtValueArgument(1080,1090): 'lambdaProp'
  NO_CANDIDATES

KtNameReferenceExpression(1080,1090): 'lambdaProp'
  NO_CANDIDATES

KtCallExpression(1097,1123): 'lMyClass(InheritorClass())'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        InheritorClass() -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
          symbol = p1: P1
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/Function1.invoke(<dispatch receiver>: kotlin.Function1<P1, R>, p1: P1): R
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
              symbol = p1: P1
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Function1.invoke
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        InheritorClass() -> (KaVariableSignature:
          name = value
          receiverType = null
          returnType = ERROR_TYPE
          symbol = value: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        signature = KaFunctionSignature:
          receiverType = kotlin.DeepRecursiveFunction<ERROR_TYPE, ERROR_TYPE>
          returnType = ERROR_TYPE
          symbol = kotlin/invoke(<extension receiver>: kotlin.DeepRecursiveFunction<T, R>, value: T): R
          valueParameters = [
            KaVariableSignature:
              name = value
              receiverType = null
              returnType = ERROR_TYPE
              symbol = value: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/invoke
      typeArgumentsMapping = {
        T -> (ERROR_TYPE),
        R -> (ERROR_TYPE)
      }
    diagnostic = ERROR<TYPE_MISMATCH: Type mismatch: inferred type is (MyClass) -> Unit but DeepRecursiveFunction<TypeVariable(T), TypeVariable(R)> was expected>
    isInBestCandidates = false

KtNameReferenceExpression(1097,1105): 'lMyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = lMyClass
          receiverType = null
          returnType = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          symbol = lMyClass: kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(1105,1123): '(InheritorClass())'
  NO_CANDIDATES

KtValueArgument(1106,1122): 'InheritorClass()'
  NO_CANDIDATES

KtCallExpression(1106,1122): 'InheritorClass()'
  NO_CANDIDATES

KtNameReferenceExpression(1106,1120): 'InheritorClass'
  NO_CANDIDATES

KtValueArgumentList(1120,1122): '()'
  NO_CANDIDATES

KtCallExpression(1128,1144): 'lMyClass(func())'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        func() -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
          symbol = p1: P1
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/Function1.invoke(<dispatch receiver>: kotlin.Function1<P1, R>, p1: P1): R
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
              symbol = p1: P1
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Function1.invoke
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        func() -> (KaVariableSignature:
          name = value
          receiverType = null
          returnType = ERROR_TYPE
          symbol = value: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        signature = KaFunctionSignature:
          receiverType = kotlin.DeepRecursiveFunction<ERROR_TYPE, ERROR_TYPE>
          returnType = ERROR_TYPE
          symbol = kotlin/invoke(<extension receiver>: kotlin.DeepRecursiveFunction<T, R>, value: T): R
          valueParameters = [
            KaVariableSignature:
              name = value
              receiverType = null
              returnType = ERROR_TYPE
              symbol = value: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/invoke
      typeArgumentsMapping = {
        T -> (ERROR_TYPE),
        R -> (ERROR_TYPE)
      }
    diagnostic = ERROR<TYPE_MISMATCH: Type mismatch: inferred type is (MyClass) -> Unit but DeepRecursiveFunction<TypeVariable(T), TypeVariable(R)> was expected>
    isInBestCandidates = false

KtNameReferenceExpression(1128,1136): 'lMyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = lMyClass
          receiverType = null
          returnType = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          symbol = lMyClass: kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(1136,1144): '(func())'
  NO_CANDIDATES

KtValueArgument(1137,1143): 'func()'
  NO_CANDIDATES

KtCallExpression(1137,1143): 'func()'
  NO_CANDIDATES

KtNameReferenceExpression(1137,1141): 'func'
  NO_CANDIDATES

KtValueArgumentList(1141,1143): '()'
  NO_CANDIDATES

KtCallExpression(1149,1170): 'lMyClass(superFunc())'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        superFunc() -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
          symbol = p1: P1
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/Function1.invoke(<dispatch receiver>: kotlin.Function1<P1, R>, p1: P1): R
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = @R|kotlin.ParameterName|(name = String(arg))  MyClass
              symbol = p1: P1
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Function1.invoke
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        superFunc() -> (KaVariableSignature:
          name = value
          receiverType = null
          returnType = ERROR_TYPE
          symbol = value: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = KaExplicitReceiverValue:
          expression = lMyClass
          isSafeNavigation = false
          type = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
        signature = KaFunctionSignature:
          receiverType = kotlin.DeepRecursiveFunction<ERROR_TYPE, ERROR_TYPE>
          returnType = ERROR_TYPE
          symbol = kotlin/invoke(<extension receiver>: kotlin.DeepRecursiveFunction<T, R>, value: T): R
          valueParameters = [
            KaVariableSignature:
              name = value
              receiverType = null
              returnType = ERROR_TYPE
              symbol = value: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/invoke
      typeArgumentsMapping = {
        T -> (ERROR_TYPE),
        R -> (ERROR_TYPE)
      }
    diagnostic = ERROR<TYPE_MISMATCH: Type mismatch: inferred type is (MyClass) -> Unit but DeepRecursiveFunction<TypeVariable(T), TypeVariable(R)> was expected>
    isInBestCandidates = false

KtNameReferenceExpression(1149,1157): 'lMyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = lMyClass
          receiverType = null
          returnType = kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          symbol = lMyClass: kotlin.Function1<@R|kotlin.ParameterName|(name = String(arg))  MyClass, kotlin.Unit>
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(1157,1170): '(superFunc())'
  NO_CANDIDATES

KtValueArgument(1158,1169): 'superFunc()'
  NO_CANDIDATES

KtCallExpression(1158,1169): 'superFunc()'
  NO_CANDIDATES

KtNameReferenceExpression(1158,1167): 'superFunc'
  NO_CANDIDATES

KtValueArgumentList(1167,1169): '()'
  NO_CANDIDATES