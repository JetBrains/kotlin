@R|Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|Anno|(LAZY_EXPRESSION)  kotlin/Int>>
  context -> FirNamedFunctionSymbol /OriginalInterface.explicitType
  anchor -> [FirNamedFunctionSymbol /OriginalInterface.explicitType]

@R|Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|Anno|(LAZY_EXPRESSION)  kotlin/Int>
  context -> FirNamedFunctionSymbol /OriginalInterface.explicitType
  anchor -> [FirNamedFunctionSymbol /OriginalInterface.explicitType]

@R|Anno|(LAZY_EXPRESSION)  kotlin/Int
  context -> FirNamedFunctionSymbol /OriginalInterface.explicitType
  anchor -> [FirNamedFunctionSymbol /OriginalInterface.explicitType]

@R|Anno|(LAZY_EXPRESSION)  kotlin/collections/Collection<@R|Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|Anno|(LAZY_EXPRESSION)  kotlin/String>>
  context -> FirReceiverParameterSymbol from FirNamedFunctionSymbol /OriginalInterface.explicitType
  anchor -> [FirReceiverParameterSymbol from FirNamedFunctionSymbol /OriginalInterface.explicitType]

@R|Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|Anno|(LAZY_EXPRESSION)  kotlin/String>
  context -> FirReceiverParameterSymbol from FirNamedFunctionSymbol /OriginalInterface.explicitType
  anchor -> [FirReceiverParameterSymbol from FirNamedFunctionSymbol /OriginalInterface.explicitType]

@R|Anno|(LAZY_EXPRESSION)  kotlin/String
  context -> FirReceiverParameterSymbol from FirNamedFunctionSymbol /OriginalInterface.explicitType
  anchor -> [FirReceiverParameterSymbol from FirNamedFunctionSymbol /OriginalInterface.explicitType]

@R|Anno|(LAZY_EXPRESSION)  kotlin/collections/ListIterator<@R|Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|Anno|(LAZY_EXPRESSION)  kotlin/String>>
  context -> FirValueParameterSymbol <local>/param from FirNamedFunctionSymbol /OriginalInterface.explicitType
  anchor -> [FirValueParameterSymbol <local>/param from FirNamedFunctionSymbol /OriginalInterface.explicitType]

@R|Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|Anno|(LAZY_EXPRESSION)  kotlin/String>
  context -> FirValueParameterSymbol <local>/param from FirNamedFunctionSymbol /OriginalInterface.explicitType
  anchor -> [FirValueParameterSymbol <local>/param from FirNamedFunctionSymbol /OriginalInterface.explicitType]

@R|Anno|(LAZY_EXPRESSION)  kotlin/String
  context -> FirValueParameterSymbol <local>/param from FirNamedFunctionSymbol /OriginalInterface.explicitType
  anchor -> [FirValueParameterSymbol <local>/param from FirNamedFunctionSymbol /OriginalInterface.explicitType]

@R|Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|Anno|(LAZY_EXPRESSION)  kotlin/String>>
  context -> FirTypeParameterSymbol F from FirNamedFunctionSymbol /OriginalInterface.explicitType
  anchor -> [FirNamedFunctionSymbol /OriginalInterface.explicitType]

@R|Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|Anno|(LAZY_EXPRESSION)  kotlin/String>
  context -> FirTypeParameterSymbol F from FirNamedFunctionSymbol /OriginalInterface.explicitType
  anchor -> [FirNamedFunctionSymbol /OriginalInterface.explicitType]

@R|Anno|(LAZY_EXPRESSION)  kotlin/String
  context -> FirTypeParameterSymbol F from FirNamedFunctionSymbol /OriginalInterface.explicitType
  anchor -> [FirNamedFunctionSymbol /OriginalInterface.explicitType]

FILE: [ResolvedTo(IMPORTS)] typeParameterAnnotations.kt
    @R|kotlin/annotation/Target|[CompilerRequiredAnnotations](Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.TYPE|, Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.FUNCTION|, Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.VALUE_PARAMETER|, Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.TYPE_PARAMETER|) public final? [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] annotation class Anno : R|kotlin/Annotation| {
        public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.position] position: String): R|Anno| {
            LAZY_super<R|kotlin/Any|>
        }

        public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val position: String = R|<local>/position|
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

    }
    public final? [ResolvedTo(TYPES)] interface OriginalInterface : R|kotlin/Any| {
        @R|Anno|[Types](LAZY_EXPRESSION) public? final? [ResolvedTo(TYPES)] fun <@R|Anno|[Types](LAZY_EXPRESSION) [ResolvedTo(TYPES)] F : R|@R|Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|Anno|(LAZY_EXPRESSION)  kotlin/String>>|> [ResolvedTo(TYPES)] @RECEIVER:R|Anno|[Types](LAZY_EXPRESSION) R|@R|Anno|(LAZY_EXPRESSION)  kotlin/collections/Collection<@R|Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|Anno|(LAZY_EXPRESSION)  kotlin/String>>|.explicitType([ResolvedTo(TYPES)] @R|Anno|[Types](LAZY_EXPRESSION) param: R|@R|Anno|(LAZY_EXPRESSION)  kotlin/collections/ListIterator<@R|Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|Anno|(LAZY_EXPRESSION)  kotlin/String>>|): R|@R|Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|Anno|(LAZY_EXPRESSION)  kotlin/collections/List<@R|Anno|(LAZY_EXPRESSION)  kotlin/Int>>| { LAZY_BLOCK }

        public final? companion [ResolvedTo(RAW_FIR)] object Companion : R|kotlin/Any| {
            private [ResolvedTo(RAW_FIR)] [ContainingClassKey=Companion] constructor(): R|OriginalInterface.Companion| {
                LAZY_super<R|kotlin/Any|>
            }

            private final? const [ResolvedTo(RAW_FIR)] val prop: <implicit> = LAZY_EXPRESSION
                private [ResolvedTo(RAW_FIR)] [ContainingClassKey=Companion] get(): <implicit>

        }

    }
