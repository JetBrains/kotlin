// Rendering settings:
// - Signature version: 1
// - Show manifest properties: false
// - Show declarations: true

// Library unique name: <type_parameters_library>
abstract interface <#A: kotlin/Any?, #B: kotlin/Any?, #C: kotlin/Any?> type_parameters.test/Interface // type_parameters.test/Interface|null[0]
final class <#A: kotlin.text/Appendable> type_parameters.test/Outer { // type_parameters.test/Outer|null[0]
    final var property // type_parameters.test/Outer.property|4489440291872326119[0]
        final fun (#A).<get-property>(): #A // type_parameters.test/Outer.property.<get-property>|-6423108489323653642[0]
        final fun (#A).<set-property>(#A) // type_parameters.test/Outer.property.<set-property>|-7713990379442476272[0]
    final var property // type_parameters.test/Outer.property|3805809777609767839[0]
        final fun <#A2: kotlin.collections/List<*>> (#A2).<get-property>(): #A2 // type_parameters.test/Outer.property.<get-property>|-822583820382794694[0]
        final fun <#A2: kotlin.collections/List<*>> (#A2).<set-property>(#A2) // type_parameters.test/Outer.property.<set-property>|-4272932867940681381[0]
    final var property // type_parameters.test/Outer.property|-1933538526084063185[0]
        final fun <#A2: kotlin/Number> (#A2?).<get-property>(): #A2 // type_parameters.test/Outer.property.<get-property>|-6933461029252923757[0]
        final fun <#A2: kotlin/Number> (#A2?).<set-property>(#A2) // type_parameters.test/Outer.property.<set-property>|2974327164734062311[0]
    constructor <init>(#A) // type_parameters.test/Outer.<init>|-8731461708390519279[0]
    final fun <#A1: kotlin/Number> one(#A1) // type_parameters.test/Outer.one|-7568257397933152931[0]
    final fun one(#A) // type_parameters.test/Outer.one|1161222343553181190[0]
    final fun <#A1: kotlin/Number> two(#A, #A1) // type_parameters.test/Outer.two|-341849875563176327[0]
    final fun <#A1: kotlin/Number> two(#A1, #A) // type_parameters.test/Outer.two|-1944589062769169813[0]
    final inner class <#A1: kotlin/CharSequence> Inner { // type_parameters.test/Outer.Inner|null[0]
        final var property // type_parameters.test/Outer.Inner.property|-223347943824410311[0]
            final fun (#A).<get-property>(): #A // type_parameters.test/Outer.Inner.property.<get-property>|-1243646438101729819[0]
            final fun (#A).<set-property>(#A) // type_parameters.test/Outer.Inner.property.<set-property>|-8464632873940834829[0]
        final var property // type_parameters.test/Outer.Inner.property|4489440291872326119[0]
            final fun (#A1).<get-property>(): #A1 // type_parameters.test/Outer.Inner.property.<get-property>|-6423108489323653642[0]
            final fun (#A1).<set-property>(#A1) // type_parameters.test/Outer.Inner.property.<set-property>|-7713990379442476272[0]
        final var property // type_parameters.test/Outer.Inner.property|3805809777609767839[0]
            final fun <#A3: kotlin.collections/List<*>> (#A3).<get-property>(): #A3 // type_parameters.test/Outer.Inner.property.<get-property>|-822583820382794694[0]
            final fun <#A3: kotlin.collections/List<*>> (#A3).<set-property>(#A3) // type_parameters.test/Outer.Inner.property.<set-property>|-4272932867940681381[0]
        final var property // type_parameters.test/Outer.Inner.property|-1933538526084063185[0]
            final fun <#A3: kotlin/Number> (#A3?).<get-property>(): #A3 // type_parameters.test/Outer.Inner.property.<get-property>|-6933461029252923757[0]
            final fun <#A3: kotlin/Number> (#A3?).<set-property>(#A3) // type_parameters.test/Outer.Inner.property.<set-property>|2974327164734062311[0]
        constructor <init>(#A, #A1) // type_parameters.test/Outer.Inner.<init>|-2512702059187080850[0]
        final fun <#A2: kotlin/Number> one(#A2) // type_parameters.test/Outer.Inner.one|-7568257397933152931[0]
        final fun one(#A) // type_parameters.test/Outer.Inner.one|-620981264376330367[0]
        final fun one(#A1) // type_parameters.test/Outer.Inner.one|1161222343553181190[0]
        final fun <#A2: kotlin/Number> three(#A, #A1, #A2) // type_parameters.test/Outer.Inner.three|-6822578316645026126[0]
        final fun <#A2: kotlin/Number> three(#A, #A2, #A1) // type_parameters.test/Outer.Inner.three|-6068211090052702765[0]
        final fun <#A2: kotlin/Number> three(#A1, #A, #A2) // type_parameters.test/Outer.Inner.three|2861877999510049331[0]
        final fun <#A2: kotlin/Number> three(#A1, #A2, #A) // type_parameters.test/Outer.Inner.three|-3531545520938433496[0]
        final fun <#A2: kotlin/Number> three(#A2, #A, #A1) // type_parameters.test/Outer.Inner.three|-973075002884847796[0]
        final fun <#A2: kotlin/Number> three(#A2, #A1, #A) // type_parameters.test/Outer.Inner.three|-1778536435556039747[0]
        final fun <#A2: kotlin/Number> two(#A, #A1) // type_parameters.test/Outer.Inner.two|8410250562024702156[0]
        final fun <#A2: kotlin/Number> two(#A, #A2) // type_parameters.test/Outer.Inner.two|-5567322579908695124[0]
        final fun <#A2: kotlin/Number> two(#A1, #A) // type_parameters.test/Outer.Inner.two|-2477726922731367425[0]
        final fun <#A2: kotlin/Number> two(#A1, #A2) // type_parameters.test/Outer.Inner.two|-341849875563176327[0]
        final fun <#A2: kotlin/Number> two(#A2, #A) // type_parameters.test/Outer.Inner.two|989594013197241301[0]
        final fun <#A2: kotlin/Number> two(#A2, #A1) // type_parameters.test/Outer.Inner.two|-1944589062769169813[0]
        final fun two(#A, #A1) // type_parameters.test/Outer.Inner.two|-1538715206688297331[0]
        final fun two(#A1, #A) // type_parameters.test/Outer.Inner.two|2431719587830235698[0]
        final inner class <#A2: kotlin.text/StringBuilder> Inner2 { // type_parameters.test/Outer.Inner.Inner2|null[0]
            final var property // type_parameters.test/Outer.Inner.Inner2.property|4489440291872326119[0]
                final fun (#A2).<get-property>(): #A2 // type_parameters.test/Outer.Inner.Inner2.property.<get-property>|-6423108489323653642[0]
                final fun (#A2).<set-property>(#A2) // type_parameters.test/Outer.Inner.Inner2.property.<set-property>|-7713990379442476272[0]
            constructor <init>(#A, #A1, #A2) // type_parameters.test/Outer.Inner.Inner2.<init>|7897092169597455163[0]
            final fun <#A3: kotlin/Number> four(#A, #A1, #A2, #A3) // type_parameters.test/Outer.Inner.Inner2.four|-3752023088856709567[0]
            final inner class TypeParameterInSuperTypes : type_parameters.test/Interface<kotlin.collections/List<kotlin.collections/List<#A>>, kotlin.collections/Map<#A1, #A2>, kotlin/Triple<#A, #A1, #A2>> { // type_parameters.test/Outer.Inner.Inner2.TypeParameterInSuperTypes|null[0]
                constructor <init>() // type_parameters.test/Outer.Inner.Inner2.TypeParameterInSuperTypes.<init>|-5645683436151566731[0]
            }
        }
        final inner class <#A2: kotlin/Any?> TypeParameterInSuperTypes : type_parameters.test/Interface<kotlin.collections/List<kotlin.collections/List<#A>>, kotlin.collections/Map<#A1, #A2>, kotlin/Triple<#A, #A1, #A2>> { // type_parameters.test/Outer.Inner.TypeParameterInSuperTypes|null[0]
            constructor <init>() // type_parameters.test/Outer.Inner.TypeParameterInSuperTypes.<init>|-5645683436151566731[0]
        }
    }
    final class <#A1: kotlin/CharSequence> Nested { // type_parameters.test/Outer.Nested|null[0]
        final var property // type_parameters.test/Outer.Nested.property|4489440291872326119[0]
            final fun (#A1).<get-property>(): #A1 // type_parameters.test/Outer.Nested.property.<get-property>|-6423108489323653642[0]
            final fun (#A1).<set-property>(#A1) // type_parameters.test/Outer.Nested.property.<set-property>|-7713990379442476272[0]
        final var property // type_parameters.test/Outer.Nested.property|3805809777609767839[0]
            final fun <#A3: kotlin.collections/List<*>> (#A3).<get-property>(): #A3 // type_parameters.test/Outer.Nested.property.<get-property>|-822583820382794694[0]
            final fun <#A3: kotlin.collections/List<*>> (#A3).<set-property>(#A3) // type_parameters.test/Outer.Nested.property.<set-property>|-4272932867940681381[0]
        final var property // type_parameters.test/Outer.Nested.property|-1933538526084063185[0]
            final fun <#A3: kotlin/Number> (#A3?).<get-property>(): #A3 // type_parameters.test/Outer.Nested.property.<get-property>|-6933461029252923757[0]
            final fun <#A3: kotlin/Number> (#A3?).<set-property>(#A3) // type_parameters.test/Outer.Nested.property.<set-property>|2974327164734062311[0]
        constructor <init>(#A1) // type_parameters.test/Outer.Nested.<init>|-8731461708390519279[0]
        final fun <#A2: kotlin/Number> one(#A2) // type_parameters.test/Outer.Nested.one|-7568257397933152931[0]
        final fun one(#A1) // type_parameters.test/Outer.Nested.one|1161222343553181190[0]
        final fun <#A2: kotlin/Number> two(#A1, #A2) // type_parameters.test/Outer.Nested.two|-341849875563176327[0]
        final fun <#A2: kotlin/Number> two(#A2, #A1) // type_parameters.test/Outer.Nested.two|-1944589062769169813[0]
        final inner class <#A2: kotlin.text/StringBuilder> Inner { // type_parameters.test/Outer.Nested.Inner|null[0]
            final var property // type_parameters.test/Outer.Nested.Inner.property|-223347943824410311[0]
                final fun (#A1).<get-property>(): #A1 // type_parameters.test/Outer.Nested.Inner.property.<get-property>|-1243646438101729819[0]
                final fun (#A1).<set-property>(#A1) // type_parameters.test/Outer.Nested.Inner.property.<set-property>|-8464632873940834829[0]
            final var property // type_parameters.test/Outer.Nested.Inner.property|4489440291872326119[0]
                final fun (#A2).<get-property>(): #A2 // type_parameters.test/Outer.Nested.Inner.property.<get-property>|-6423108489323653642[0]
                final fun (#A2).<set-property>(#A2) // type_parameters.test/Outer.Nested.Inner.property.<set-property>|-7713990379442476272[0]
            final var property // type_parameters.test/Outer.Nested.Inner.property|3805809777609767839[0]
                final fun <#A4: kotlin.collections/List<*>> (#A4).<get-property>(): #A4 // type_parameters.test/Outer.Nested.Inner.property.<get-property>|-822583820382794694[0]
                final fun <#A4: kotlin.collections/List<*>> (#A4).<set-property>(#A4) // type_parameters.test/Outer.Nested.Inner.property.<set-property>|-4272932867940681381[0]
            final var property // type_parameters.test/Outer.Nested.Inner.property|-1933538526084063185[0]
                final fun <#A4: kotlin/Number> (#A4?).<get-property>(): #A4 // type_parameters.test/Outer.Nested.Inner.property.<get-property>|-6933461029252923757[0]
                final fun <#A4: kotlin/Number> (#A4?).<set-property>(#A4) // type_parameters.test/Outer.Nested.Inner.property.<set-property>|2974327164734062311[0]
            constructor <init>(#A1, #A2) // type_parameters.test/Outer.Nested.Inner.<init>|-2512702059187080850[0]
            final fun <#A3: kotlin/Number> one(#A3) // type_parameters.test/Outer.Nested.Inner.one|-7568257397933152931[0]
            final fun one(#A1) // type_parameters.test/Outer.Nested.Inner.one|-620981264376330367[0]
            final fun one(#A2) // type_parameters.test/Outer.Nested.Inner.one|1161222343553181190[0]
            final fun <#A3: kotlin/Number> three(#A1, #A2, #A3) // type_parameters.test/Outer.Nested.Inner.three|-6822578316645026126[0]
            final fun <#A3: kotlin/Number> three(#A1, #A3, #A2) // type_parameters.test/Outer.Nested.Inner.three|-6068211090052702765[0]
            final fun <#A3: kotlin/Number> three(#A2, #A1, #A3) // type_parameters.test/Outer.Nested.Inner.three|2861877999510049331[0]
            final fun <#A3: kotlin/Number> three(#A2, #A3, #A1) // type_parameters.test/Outer.Nested.Inner.three|-3531545520938433496[0]
            final fun <#A3: kotlin/Number> three(#A3, #A1, #A2) // type_parameters.test/Outer.Nested.Inner.three|-973075002884847796[0]
            final fun <#A3: kotlin/Number> three(#A3, #A2, #A1) // type_parameters.test/Outer.Nested.Inner.three|-1778536435556039747[0]
            final fun <#A3: kotlin/Number> two(#A1, #A2) // type_parameters.test/Outer.Nested.Inner.two|8410250562024702156[0]
            final fun <#A3: kotlin/Number> two(#A1, #A3) // type_parameters.test/Outer.Nested.Inner.two|-5567322579908695124[0]
            final fun <#A3: kotlin/Number> two(#A2, #A1) // type_parameters.test/Outer.Nested.Inner.two|-2477726922731367425[0]
            final fun <#A3: kotlin/Number> two(#A2, #A3) // type_parameters.test/Outer.Nested.Inner.two|-341849875563176327[0]
            final fun <#A3: kotlin/Number> two(#A3, #A1) // type_parameters.test/Outer.Nested.Inner.two|989594013197241301[0]
            final fun <#A3: kotlin/Number> two(#A3, #A2) // type_parameters.test/Outer.Nested.Inner.two|-1944589062769169813[0]
            final fun two(#A1, #A2) // type_parameters.test/Outer.Nested.Inner.two|-1538715206688297331[0]
            final fun two(#A2, #A1) // type_parameters.test/Outer.Nested.Inner.two|2431719587830235698[0]
            final inner class <#A3: kotlin/Any?> TypeParameterInSuperTypes : type_parameters.test/Interface<kotlin.collections/List<kotlin.collections/List<#A1>>, kotlin.collections/Map<#A2, #A3>, kotlin/Triple<#A1, #A2, #A3>> { // type_parameters.test/Outer.Nested.Inner.TypeParameterInSuperTypes|null[0]
                constructor <init>() // type_parameters.test/Outer.Nested.Inner.TypeParameterInSuperTypes.<init>|-5645683436151566731[0]
            }
        }
        final inner class <#A2: kotlin/Any?, #B2: kotlin/Any?> TypeParameterInSuperTypes : type_parameters.test/Interface<kotlin.collections/List<kotlin.collections/List<#A1>>, kotlin.collections/Map<#B2, #A2>, kotlin/Triple<#A1, #B2, #A2>> { // type_parameters.test/Outer.Nested.TypeParameterInSuperTypes|null[0]
            constructor <init>() // type_parameters.test/Outer.Nested.TypeParameterInSuperTypes.<init>|-5645683436151566731[0]
        }
    }
    final inner class <#A1: kotlin/Any?, #B1: kotlin/Any?> TypeParameterInSuperTypes : type_parameters.test/Interface<kotlin.collections/List<kotlin.collections/List<#A>>, kotlin.collections/Map<#B1, #A1>, kotlin/Triple<#A, #B1, #A1>> { // type_parameters.test/Outer.TypeParameterInSuperTypes|null[0]
        constructor <init>() // type_parameters.test/Outer.TypeParameterInSuperTypes.<init>|-5645683436151566731[0]
    }
}
final class <#A: kotlin/Any?, #B: kotlin/Any?, #C: kotlin/Any?> type_parameters.test/TypeParameterInSuperTypes : type_parameters.test/Interface<kotlin.collections/List<kotlin.collections/List<#C>>, kotlin.collections/Map<#B, #A>, kotlin/Triple<#C, #B, #A>> { // type_parameters.test/TypeParameterInSuperTypes|null[0]
    constructor <init>() // type_parameters.test/TypeParameterInSuperTypes.<init>|-5645683436151566731[0]
}
final var type_parameters.test/property // type_parameters.test/property|2625757545133511549[0]
    final fun <#A1: kotlin.collections/List<*>?> (#A1?).<get-property>(): #A1? // type_parameters.test/property.<get-property>|757188231170761296[0]
    final fun <#A1: kotlin.collections/List<*>?> (#A1?).<set-property>(#A1?) // type_parameters.test/property.<set-property>|-596426223859746[0]
final var type_parameters.test/property // type_parameters.test/property|-2650207999697234990[0]
    final fun <#A1: kotlin.text/Appendable?> (#A1).<get-property>(): #A1 // type_parameters.test/property.<get-property>|2712377550872346404[0]
    final fun <#A1: kotlin.text/Appendable?> (#A1).<set-property>(#A1) // type_parameters.test/property.<set-property>|-4350567656984308373[0]
final var type_parameters.test/property // type_parameters.test/property|5046708877617142561[0]
    final fun <#A1: kotlin/CharSequence> (#A1?).<get-property>(): #A1? // type_parameters.test/property.<get-property>|-8843539092800252583[0]
    final fun <#A1: kotlin/CharSequence> (#A1?).<set-property>(#A1?) // type_parameters.test/property.<set-property>|-5766193361910944002[0]
final var type_parameters.test/property // type_parameters.test/property|4472899887396146803[0]
    final fun <#A1: kotlin/Number> (#A1).<get-property>(): #A1 // type_parameters.test/property.<get-property>|-6424239601896786367[0]
    final fun <#A1: kotlin/Number> (#A1).<set-property>(#A1) // type_parameters.test/property.<set-property>|-6031856956419508218[0]
final inline fun <#A: reified kotlin/Any?, #B: kotlin/Any?> type_parameters.test/functionWithReifiedParameter(#A, #B) // type_parameters.test/functionWithReifiedParameter|-4878473516716391225[0]
final fun <#A: kotlin/CharSequence, #B: #A, #C: #B> type_parameters.test/interDependentTypeParameters(#A, #B, #C) // type_parameters.test/interDependentTypeParameters|6771956060301223135[0]
final fun <#A: kotlin/Any?, #B: kotlin/Any, #C: kotlin/CharSequence?, #D: kotlin/CharSequence, #E: kotlin.text/Appendable?, #F: kotlin.text/Appendable, #G: kotlin/Number?, #H: kotlin/Number, #I: kotlin.collections/List<*>?, #J: kotlin.collections/List<*>, #K: kotlin/Any?, #L: kotlin/Any, #M: kotlin/CharSequence?, #N: kotlin/CharSequence, #O: kotlin.text/Appendable?, #P: kotlin.text/Appendable, #Q: kotlin/Number?, #R: kotlin/Number, #S: kotlin.collections/List<*>?, #T: kotlin.collections/List<*>, #U: kotlin/Any?, #V: kotlin/Any, #W: kotlin/CharSequence?, #X: kotlin/CharSequence, #Y: kotlin.text/Appendable?, #Z: kotlin.text/Appendable, #AA: kotlin/Number?, #AB: kotlin/Number, #AC: kotlin.collections/List<*>?, #AD: kotlin.collections/List<*>, #AE: kotlin/Any?, #AF: kotlin/Any, #AG: kotlin/CharSequence?, #AH: kotlin/CharSequence, #AI: kotlin.text/Appendable?, #AJ: kotlin.text/Appendable, #AK: kotlin/Number?, #AL: kotlin/Number, #AM: kotlin.collections/List<*>?, #AN: kotlin.collections/List<*>, #AO: kotlin/Any?, #AP: kotlin/Any, #AQ: kotlin/CharSequence?, #AR: kotlin/CharSequence, #AS: kotlin.text/Appendable?, #AT: kotlin.text/Appendable, #AU: kotlin/Number?, #AV: kotlin/Number, #AW: kotlin.collections/List<*>?, #AX: kotlin.collections/List<*>, #AY: kotlin/Any?, #AZ: kotlin/Any, #BA: kotlin/CharSequence?, #BB: kotlin/CharSequence, #BC: kotlin.text/Appendable?, #BD: kotlin.text/Appendable, #BE: kotlin/Number?, #BF: kotlin/Number, #BG: kotlin.collections/List<*>?, #BH: kotlin.collections/List<*>> type_parameters.test/lotsOfTypeParameters(): kotlin/CharSequence // type_parameters.test/lotsOfTypeParameters|8111178736292760853[0]
final fun <#A: kotlin.text/Appendable & kotlin/CharSequence & kotlin/Number> type_parameters.test/multipleBounds(#A) // type_parameters.test/multipleBounds|-1381211984309993592[0]
final fun <#A: kotlin.collections/List<*>?> type_parameters.test/one(#A?): #A? // type_parameters.test/one|-1125210795955507193[0]
final fun <#A: kotlin.text/Appendable?> type_parameters.test/one(#A): #A // type_parameters.test/one|-468622467765550922[0]
final fun <#A: kotlin/CharSequence> type_parameters.test/one(#A?): #A? // type_parameters.test/one|5100782278178255209[0]
final fun <#A: kotlin/Number> type_parameters.test/one(#A): #A // type_parameters.test/one|-7568257397933152931[0]
