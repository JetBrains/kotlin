// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: compiler/ir/serialization.common/src/KotlinIr.proto
// Protobuf Java Version: 4.29.3

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference}
 */
public  final class IrRichPropertyReference extends
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite<
        IrRichPropertyReference, IrRichPropertyReference.Builder> implements
    // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference)
    IrRichPropertyReferenceOrBuilder {
  private IrRichPropertyReference() {
    boundValues_ = emptyProtobufList();
  }
  private int bitField0_;
  public static final int BOUND_VALUES_FIELD_NUMBER = 1;
  private org.jetbrains.kotlin.protobuf.Internal.ProtobufList<org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression> boundValues_;
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
   */
  @java.lang.Override
  public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression> getBoundValuesList() {
    return boundValues_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
   */
  public java.util.List<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrExpressionOrBuilder> 
      getBoundValuesOrBuilderList() {
    return boundValues_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
   */
  @java.lang.Override
  public int getBoundValuesCount() {
    return boundValues_.size();
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression getBoundValues(int index) {
    return boundValues_.get(index);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrExpressionOrBuilder getBoundValuesOrBuilder(
      int index) {
    return boundValues_.get(index);
  }
  private void ensureBoundValuesIsMutable() {
    org.jetbrains.kotlin.protobuf.Internal.ProtobufList<org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression> tmp = boundValues_;
    if (!tmp.isModifiable()) {
      boundValues_ =
          org.jetbrains.kotlin.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setBoundValues(
      int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value) {
    value.getClass();  // minimal bytecode null check
    ensureBoundValuesIsMutable();
    boundValues_.set(index, value);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void addBoundValues(org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value) {
    value.getClass();  // minimal bytecode null check
    ensureBoundValuesIsMutable();
    boundValues_.add(value);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void addBoundValues(
      int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value) {
    value.getClass();  // minimal bytecode null check
    ensureBoundValuesIsMutable();
    boundValues_.add(index, value);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
   */
  private void addAllBoundValues(
      java.lang.Iterable<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression> values) {
    ensureBoundValuesIsMutable();
    org.jetbrains.kotlin.protobuf.AbstractMessageLite.addAll(
        values, boundValues_);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
   */
  private void clearBoundValues() {
    boundValues_ = emptyProtobufList();
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
   */
  private void removeBoundValues(int index) {
    ensureBoundValuesIsMutable();
    boundValues_.remove(index);
  }

  public static final int REFLECTION_TARGET_SYMBOL_FIELD_NUMBER = 2;
  private long reflectionTargetSymbol_;
  /**
   * <code>int64 reflection_target_symbol = 2;</code>
   * @return Whether the reflectionTargetSymbol field is set.
   */
  @java.lang.Override
  public boolean hasReflectionTargetSymbol() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>int64 reflection_target_symbol = 2;</code>
   * @return The reflectionTargetSymbol.
   */
  @java.lang.Override
  public long getReflectionTargetSymbol() {
    return reflectionTargetSymbol_;
  }
  /**
   * <code>int64 reflection_target_symbol = 2;</code>
   * @param value The reflectionTargetSymbol to set.
   */
  private void setReflectionTargetSymbol(long value) {
    bitField0_ |= 0x00000001;
    reflectionTargetSymbol_ = value;
  }
  /**
   * <code>int64 reflection_target_symbol = 2;</code>
   */
  private void clearReflectionTargetSymbol() {
    bitField0_ = (bitField0_ & ~0x00000001);
    reflectionTargetSymbol_ = 0L;
  }

  public static final int GETTER_FUNCTION_FIELD_NUMBER = 3;
  private org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getterFunction_;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter_function = 3 [features = { ... }</code>
   */
  @java.lang.Override
  public boolean hasGetterFunction() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter_function = 3 [features = { ... }</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getGetterFunction() {
    return getterFunction_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.getDefaultInstance() : getterFunction_;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter_function = 3 [features = { ... }</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setGetterFunction(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction value) {
    value.getClass();  // minimal bytecode null check
    getterFunction_ = value;
    bitField0_ |= 0x00000002;
    }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter_function = 3 [features = { ... }</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
  private void mergeGetterFunction(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction value) {
    value.getClass();  // minimal bytecode null check
    if (getterFunction_ != null &&
        getterFunction_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.getDefaultInstance()) {
      getterFunction_ =
        org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.newBuilder(getterFunction_).mergeFrom(value).buildPartial();
    } else {
      getterFunction_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter_function = 3 [features = { ... }</code>
   */
  private void clearGetterFunction() {  getterFunction_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public static final int SETTER_FUNCTION_FIELD_NUMBER = 4;
  private org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setterFunction_;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter_function = 4;</code>
   */
  @java.lang.Override
  public boolean hasSetterFunction() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter_function = 4;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getSetterFunction() {
    return setterFunction_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.getDefaultInstance() : setterFunction_;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter_function = 4;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setSetterFunction(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction value) {
    value.getClass();  // minimal bytecode null check
    setterFunction_ = value;
    bitField0_ |= 0x00000004;
    }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter_function = 4;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
  private void mergeSetterFunction(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction value) {
    value.getClass();  // minimal bytecode null check
    if (setterFunction_ != null &&
        setterFunction_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.getDefaultInstance()) {
      setterFunction_ =
        org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.newBuilder(setterFunction_).mergeFrom(value).buildPartial();
    } else {
      setterFunction_ = value;
    }
    bitField0_ |= 0x00000004;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter_function = 4;</code>
   */
  private void clearSetterFunction() {  setterFunction_ = null;
    bitField0_ = (bitField0_ & ~0x00000004);
  }

  public static final int ORIGIN_NAME_FIELD_NUMBER = 5;
  private int originName_;
  /**
   * <code>int32 origin_name = 5;</code>
   * @return Whether the originName field is set.
   */
  @java.lang.Override
  public boolean hasOriginName() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <code>int32 origin_name = 5;</code>
   * @return The originName.
   */
  @java.lang.Override
  public int getOriginName() {
    return originName_;
  }
  /**
   * <code>int32 origin_name = 5;</code>
   * @param value The originName to set.
   */
  private void setOriginName(int value) {
    bitField0_ |= 0x00000008;
    originName_ = value;
  }
  /**
   * <code>int32 origin_name = 5;</code>
   */
  private void clearOriginName() {
    bitField0_ = (bitField0_ & ~0x00000008);
    originName_ = 0;
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference parseFrom(
      java.nio.ByteBuffer data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference parseFrom(
      java.nio.ByteBuffer data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference parseFrom(byte[] data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference parseFrom(
      byte[] data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference parseFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference parseDelimitedFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference}
   */
  public static final class Builder extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference, Builder> implements
      // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference)
      org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReferenceOrBuilder {
    // Construct using org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression> getBoundValuesList() {
      return java.util.Collections.unmodifiableList(
          instance.getBoundValuesList());
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
     */
    @java.lang.Override
    public int getBoundValuesCount() {
      return instance.getBoundValuesCount();
    }/**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression getBoundValues(int index) {
      return instance.getBoundValues(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
     */
    public Builder setBoundValues(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value) {
      copyOnWrite();
      instance.setBoundValues(index, value);
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
     */
    public Builder setBoundValues(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression.Builder builderForValue) {
      copyOnWrite();
      instance.setBoundValues(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
     */
    public Builder addBoundValues(org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value) {
      copyOnWrite();
      instance.addBoundValues(value);
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
     */
    public Builder addBoundValues(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value) {
      copyOnWrite();
      instance.addBoundValues(index, value);
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
     */
    public Builder addBoundValues(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression.Builder builderForValue) {
      copyOnWrite();
      instance.addBoundValues(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
     */
    public Builder addBoundValues(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression.Builder builderForValue) {
      copyOnWrite();
      instance.addBoundValues(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
     */
    public Builder addAllBoundValues(
        java.lang.Iterable<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression> values) {
      copyOnWrite();
      instance.addAllBoundValues(values);
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
     */
    public Builder clearBoundValues() {
      copyOnWrite();
      instance.clearBoundValues();
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression bound_values = 1;</code>
     */
    public Builder removeBoundValues(int index) {
      copyOnWrite();
      instance.removeBoundValues(index);
      return this;
    }

    /**
     * <code>int64 reflection_target_symbol = 2;</code>
     * @return Whether the reflectionTargetSymbol field is set.
     */
    @java.lang.Override
    public boolean hasReflectionTargetSymbol() {
      return instance.hasReflectionTargetSymbol();
    }
    /**
     * <code>int64 reflection_target_symbol = 2;</code>
     * @return The reflectionTargetSymbol.
     */
    @java.lang.Override
    public long getReflectionTargetSymbol() {
      return instance.getReflectionTargetSymbol();
    }
    /**
     * <code>int64 reflection_target_symbol = 2;</code>
     * @param value The reflectionTargetSymbol to set.
     * @return This builder for chaining.
     */
    public Builder setReflectionTargetSymbol(long value) {
      copyOnWrite();
      instance.setReflectionTargetSymbol(value);
      return this;
    }
    /**
     * <code>int64 reflection_target_symbol = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearReflectionTargetSymbol() {
      copyOnWrite();
      instance.clearReflectionTargetSymbol();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter_function = 3 [features = { ... }</code>
     */
    @java.lang.Override
    public boolean hasGetterFunction() {
      return instance.hasGetterFunction();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter_function = 3 [features = { ... }</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getGetterFunction() {
      return instance.getGetterFunction();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter_function = 3 [features = { ... }</code>
     */
    public Builder setGetterFunction(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction value) {
      copyOnWrite();
      instance.setGetterFunction(value);
      return this;
      }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter_function = 3 [features = { ... }</code>
     */
    public Builder setGetterFunction(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.Builder builderForValue) {
      copyOnWrite();
      instance.setGetterFunction(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter_function = 3 [features = { ... }</code>
     */
    public Builder mergeGetterFunction(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction value) {
      copyOnWrite();
      instance.mergeGetterFunction(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter_function = 3 [features = { ... }</code>
     */
    public Builder clearGetterFunction() {  copyOnWrite();
      instance.clearGetterFunction();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter_function = 4;</code>
     */
    @java.lang.Override
    public boolean hasSetterFunction() {
      return instance.hasSetterFunction();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter_function = 4;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getSetterFunction() {
      return instance.getSetterFunction();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter_function = 4;</code>
     */
    public Builder setSetterFunction(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction value) {
      copyOnWrite();
      instance.setSetterFunction(value);
      return this;
      }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter_function = 4;</code>
     */
    public Builder setSetterFunction(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.Builder builderForValue) {
      copyOnWrite();
      instance.setSetterFunction(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter_function = 4;</code>
     */
    public Builder mergeSetterFunction(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction value) {
      copyOnWrite();
      instance.mergeSetterFunction(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter_function = 4;</code>
     */
    public Builder clearSetterFunction() {  copyOnWrite();
      instance.clearSetterFunction();
      return this;
    }

    /**
     * <code>int32 origin_name = 5;</code>
     * @return Whether the originName field is set.
     */
    @java.lang.Override
    public boolean hasOriginName() {
      return instance.hasOriginName();
    }
    /**
     * <code>int32 origin_name = 5;</code>
     * @return The originName.
     */
    @java.lang.Override
    public int getOriginName() {
      return instance.getOriginName();
    }
    /**
     * <code>int32 origin_name = 5;</code>
     * @param value The originName to set.
     * @return This builder for chaining.
     */
    public Builder setOriginName(int value) {
      copyOnWrite();
      instance.setOriginName(value);
      return this;
    }
    /**
     * <code>int32 origin_name = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearOriginName() {
      copyOnWrite();
      instance.clearOriginName();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference)
  }
  private byte memoizedIsInitialized = 2;
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "boundValues_",
            org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression.class,
            "reflectionTargetSymbol_",
            "getterFunction_",
            "setterFunction_",
            "originName_",
          };
          java.lang.String info =
              "\u0004\u0005\u0000\u0001\u0001\u0005\u0005\u0000\u0001\u0003\u0001\u041b\u0002\u1002" +
              "\u0000\u0003\u1509\u0001\u0004\u1409\u0002\u0005\u1004\u0003";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        org.jetbrains.kotlin.protobuf.Parser<org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference> parser = PARSER;
        if (parser == null) {
          synchronized (org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return memoizedIsInitialized;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference)
  private static final org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference DEFAULT_INSTANCE;
  static {
    IrRichPropertyReference defaultInstance = new IrRichPropertyReference();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.registerDefaultInstance(
      IrRichPropertyReference.class, defaultInstance);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile org.jetbrains.kotlin.protobuf.Parser<IrRichPropertyReference> PARSER;

  public static org.jetbrains.kotlin.protobuf.Parser<IrRichPropertyReference> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
