FILE fqName:<root> fileName:/kt43217.kt
  CLASS CLASS name:A modality:FINAL visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.A
    PROPERTY name:b visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:b type:<root>.A.b.<no name provided> visibility:private [final]
        EXPRESSION_BODY
          BLOCK type=<root>.A.b.<no name provided> origin=OBJECT_LITERAL
            CLASS CLASS name:<no name provided> modality:FINAL visibility:local superTypes:[<root>.DoubleExpression]
              thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.A.b.<no name provided>
              CONSTRUCTOR visibility:public returnType:<root>.A.b.<no name provided> [primary]
                BLOCK_BODY
                  DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.DoubleExpression'
                  INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:<no name provided> modality:FINAL visibility:local superTypes:[<root>.DoubleExpression]' type=kotlin.Unit
              FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
                VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
                overridden:
                  public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.DoubleExpression
              FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
                VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                overridden:
                  public open fun hashCode (): kotlin.Int declared in <root>.DoubleExpression
              FUN FAKE_OVERRIDE name:isEqualTo visibility:public modality:OPEN returnType:@[EnhancedNullability] kotlin.Any [fake_override]
                VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.DoubleExpression
                VALUE_PARAMETER kind:Regular name:value index:1 type:kotlin.Double
                annotations:
                  NotNull(value = <null>)
                  Override
                overridden:
                  public open fun isEqualTo (value: kotlin.Double): @[EnhancedNullability] kotlin.Any declared in <root>.DoubleExpression
              FUN FAKE_OVERRIDE name:isEqualTo visibility:public modality:OPEN returnType:@[EnhancedNullability] kotlin.Any [fake_override]
                VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ObservableValue<@[FlexibleNullability] kotlin.Double?>
                VALUE_PARAMETER kind:Regular name:value index:1 type:@[EnhancedNullability] kotlin.Double
                  annotations:
                    NotNull(value = <null>)
                annotations:
                  NotNull(value = <null>)
                overridden:
                  public open fun isEqualTo (value: @[EnhancedNullability] kotlin.Double): @[EnhancedNullability] kotlin.Any declared in <root>.DoubleExpression
              FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
                VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
                overridden:
                  public open fun toString (): kotlin.String declared in <root>.DoubleExpression
              FUN name:get visibility:public modality:OPEN returnType:kotlin.Double
                VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.A.b.<no name provided>
                overridden:
                  public abstract fun get (): @[EnhancedNullability] kotlin.Double declared in <root>.DoubleExpression
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='public open fun get (): kotlin.Double declared in <root>.A.b.<no name provided>'
                    CONST Double type=kotlin.Double value=0.0
            CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.A.b.<no name provided>' type=<root>.A.b.<no name provided> origin=OBJECT_LITERAL
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-b> visibility:private modality:FINAL returnType:<root>.A.b.<no name provided>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.A
        correspondingProperty: PROPERTY name:b visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-b> (): <root>.A.b.<no name provided> declared in <root>.A'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:b type:<root>.A.b.<no name provided> visibility:private [final]' type=<root>.A.b.<no name provided> origin=null
              receiver: GET_VAR '<this>: <root>.A declared in <root>.A.<get-b>' type=<root>.A origin=null
    CONSTRUCTOR visibility:public returnType:<root>.A [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:A modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
  CLASS CLASS name:C modality:FINAL visibility:public superTypes:[<root>.DoubleExpression]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.C
    CONSTRUCTOR visibility:public returnType:<root>.C [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.DoubleExpression'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:C modality:FINAL visibility:public superTypes:[<root>.DoubleExpression]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.DoubleExpression
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in <root>.DoubleExpression
    FUN FAKE_OVERRIDE name:isEqualTo visibility:public modality:OPEN returnType:@[EnhancedNullability] kotlin.Any [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.DoubleExpression
      VALUE_PARAMETER kind:Regular name:value index:1 type:kotlin.Double
      annotations:
        NotNull(value = <null>)
        Override
      overridden:
        public open fun isEqualTo (value: kotlin.Double): @[EnhancedNullability] kotlin.Any declared in <root>.DoubleExpression
    FUN FAKE_OVERRIDE name:isEqualTo visibility:public modality:OPEN returnType:@[EnhancedNullability] kotlin.Any [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.ObservableValue<@[FlexibleNullability] kotlin.Double?>
      VALUE_PARAMETER kind:Regular name:value index:1 type:@[EnhancedNullability] kotlin.Double
        annotations:
          NotNull(value = <null>)
      annotations:
        NotNull(value = <null>)
      overridden:
        public open fun isEqualTo (value: @[EnhancedNullability] kotlin.Double): @[EnhancedNullability] kotlin.Any declared in <root>.DoubleExpression
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in <root>.DoubleExpression
    FUN name:get visibility:public modality:OPEN returnType:kotlin.Double
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.C
      overridden:
        public abstract fun get (): @[EnhancedNullability] kotlin.Double declared in <root>.DoubleExpression
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun get (): kotlin.Double declared in <root>.C'
          CONST Double type=kotlin.Double value=0.0
