JetFile: Annotations_ERR.kt
  PACKAGE_DIRECTIVE
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    DOT_QUALIFIED_EXPRESSION
      DOT_QUALIFIED_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('foo')
        PsiElement(DOT)('.')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('bar')
      PsiElement(DOT)('.')
      REFERENCE_EXPRESSION
        PsiElement(IDENTIFIER)('goo')
  IMPORT_LIST
    <empty list>
  PsiWhiteSpace('\n\n')
  CLASS
    MODIFIER_LIST
      PsiElement(abstract)('abstract')
      PsiWhiteSpace('\n')
      PsiElement(open)('open')
      PsiWhiteSpace('\n')
      PsiElement(enum)('enum')
      PsiWhiteSpace('\n')
      PsiElement(open)('open')
      PsiWhiteSpace('\n')
      ANNOTATION_ENTRY
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('annotation')
      PsiWhiteSpace('\n')
      PsiElement(override)('override')
      PsiWhiteSpace('\n')
      PsiElement(open)('open')
      PsiWhiteSpace('\n')
      PsiElement(abstract)('abstract')
      PsiWhiteSpace('\n')
      ANNOTATION
        PsiElement(AT)('@')
        PsiElement(LBRACKET)('[')
        PsiErrorElement:Expecting a list of annotations
          <empty list>
        PsiElement(RBRACKET)(']')
      PsiWhiteSpace('\n')
      PsiElement(private)('private')
      PsiWhiteSpace('\n')
      PsiElement(protected)('protected')
      PsiWhiteSpace('\n')
      PsiElement(public)('public')
      PsiWhiteSpace('\n')
      PsiElement(internal)('internal')
      PsiWhiteSpace('\n')
      ANNOTATION
        PsiElement(AT)('@')
        PsiElement(LBRACKET)('[')
        ANNOTATION_ENTRY
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('foo')
                TYPE_ARGUMENT_LIST
                  PsiElement(LT)('<')
                  TYPE_PROJECTION
                    TYPE_REFERENCE
                      USER_TYPE
                        REFERENCE_EXPRESSION
                          PsiElement(IDENTIFIER)('A')
                  PsiElement(COMMA)(',')
                  PsiWhiteSpace(' ')
                  TYPE_PROJECTION
                    TYPE_REFERENCE
                      USER_TYPE
                        REFERENCE_EXPRESSION
                          PsiElement(IDENTIFIER)('B')
                  PsiElement(GT)('>')
          VALUE_ARGUMENT_LIST
            PsiElement(LPAR)('(')
            VALUE_ARGUMENT
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('a')
            PsiElement(COMMA)(',')
            PsiWhiteSpace(' ')
            VALUE_ARGUMENT
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('b')
            PsiElement(RPAR)(')')
        PsiErrorElement:No commas needed to separate annotations
          PsiElement(COMMA)(',')
        PsiWhiteSpace(' ')
        ANNOTATION_ENTRY
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('ina')
        PsiWhiteSpace(' ')
        ANNOTATION_ENTRY
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      USER_TYPE
                        USER_TYPE
                          REFERENCE_EXPRESSION
                            PsiElement(IDENTIFIER)('foo')
                        PsiElement(DOT)('.')
                        REFERENCE_EXPRESSION
                          PsiElement(IDENTIFIER)('bar')
                      PsiElement(DOT)('.')
                      REFERENCE_EXPRESSION
                        PsiElement(IDENTIFIER)('goo')
                    PsiElement(DOT)('.')
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('doo')
                    TYPE_ARGUMENT_LIST
                      PsiElement(LT)('<')
                      TYPE_PROJECTION
                        TYPE_REFERENCE
                          USER_TYPE
                            REFERENCE_EXPRESSION
                              PsiElement(IDENTIFIER)('f')
                      PsiElement(GT)('>')
                  PsiElement(DOT)('.')
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('foo')
                  TYPE_ARGUMENT_LIST
                    PsiElement(LT)('<')
                    TYPE_PROJECTION
                      TYPE_REFERENCE
                        USER_TYPE
                          REFERENCE_EXPRESSION
                            PsiElement(IDENTIFIER)('bar')
                    PsiElement(COMMA)(',')
                    PsiWhiteSpace(' ')
                    TYPE_PROJECTION
                      TYPE_REFERENCE
                        USER_TYPE
                          REFERENCE_EXPRESSION
                            PsiElement(IDENTIFIER)('goo')
                    PsiElement(GT)('>')
                PsiElement(DOT)('.')
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('foo')
        PsiElement(RBRACKET)(']')
      PsiWhiteSpace('\n')
      ANNOTATION
        PsiElement(AT)('@')
        PsiElement(LBRACKET)('[')
        ANNOTATION_ENTRY
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('df')
        PsiElement(RBRACKET)(']')
      PsiWhiteSpace('\n')
      PsiElement(in)('in')
      PsiWhiteSpace('\n')
      ANNOTATION
        PsiElement(AT)('@')
        PsiElement(LBRACKET)('[')
        ANNOTATION_ENTRY
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('sdfsdf')
        PsiWhiteSpace(' ')
        PsiElement(RBRACKET)(']')
      PsiWhiteSpace('\n')
      ANNOTATION
        PsiElement(AT)('@')
        PsiElement(LBRACKET)('[')
        ANNOTATION_ENTRY
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('s')
        PsiWhiteSpace(' ')
        ANNOTATION_ENTRY
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('fd')
        PsiWhiteSpace(' ')
        ANNOTATION_ENTRY
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('d')
        PsiErrorElement:No commas needed to separate annotations
          PsiElement(COMMA)(',')
        PsiWhiteSpace(' ')
        PsiElement(RBRACKET)(']')
      PsiWhiteSpace('\n')
      PsiElement(out)('out')
      PsiWhiteSpace('\n')
      ANNOTATION_ENTRY
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('ref')
    PsiWhiteSpace('\n ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('Bar')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      TYPE_PARAMETER
        MODIFIER_LIST
          PsiElement(abstract)('abstract')
          PsiWhiteSpace('\n')
          PsiElement(open)('open')
          PsiWhiteSpace('\n')
          PsiElement(enum)('enum')
          PsiWhiteSpace('\n')
          PsiElement(open)('open')
          PsiWhiteSpace('\n')
          ANNOTATION_ENTRY
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('annotation')
          PsiWhiteSpace('\n')
          PsiElement(override)('override')
          PsiWhiteSpace('\n')
          PsiElement(open)('open')
          PsiWhiteSpace('\n')
          PsiElement(abstract)('abstract')
          PsiWhiteSpace('\n')
          ANNOTATION
            PsiElement(AT)('@')
            PsiElement(LBRACKET)('[')
            ANNOTATION_ENTRY
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('sdfsd')
            PsiWhiteSpace(' ')
            ANNOTATION_ENTRY
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('sdfsd')
            PsiWhiteSpace(' ')
            ANNOTATION_ENTRY
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      USER_TYPE
                        USER_TYPE
                          REFERENCE_EXPRESSION
                            PsiElement(IDENTIFIER)('a')
                        PsiElement(DOT)('.')
                        REFERENCE_EXPRESSION
                          PsiElement(IDENTIFIER)('b')
                      PsiElement(DOT)('.')
                      REFERENCE_EXPRESSION
                        PsiElement(IDENTIFIER)('f')
                    PsiElement(DOT)('.')
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('c')
            PsiElement(RBRACKET)(']')
          PsiWhiteSpace('\n')
          PsiElement(private)('private')
          PsiWhiteSpace('\n')
          PsiElement(protected)('protected')
          PsiWhiteSpace('\n')
          PsiElement(public)('public')
          PsiWhiteSpace('\n')
          PsiElement(internal)('internal')
          PsiWhiteSpace('\n')
          PsiElement(in)('in')
          PsiWhiteSpace('\n')
          PsiElement(out)('out')
          PsiWhiteSpace('\n')
          ANNOTATION_ENTRY
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('ref')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('T')
      PsiElement(GT)('>')
    PsiWhiteSpace(' ')
    CLASS_BODY
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
