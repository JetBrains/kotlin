<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
    <xi:include href="ide-frontend-independent.xml" xpointer="xpointer(/idea-plugin/*)"/>

    <extensionPoints>
        <extensionPoint qualifiedName="org.jetbrains.kotlin.updater" beanClass="com.intellij.openapi.fileTypes.FileTypeExtensionPoint"/>

        <extensionPoint qualifiedName="org.jetbrains.kotlin.declarationAttributeAltererExtension"
                        interface="org.jetbrains.kotlin.extensions.DeclarationAttributeAltererExtension"
                        area="IDEA_PROJECT"/>

        <extensionPoint qualifiedName="org.jetbrains.kotlin.highlighterExtension"
                        interface="org.jetbrains.kotlin.idea.highlighter.HighlighterExtension"
                        dynamic="true"/>

        <extensionPoint qualifiedName="org.jetbrains.kotlin.ultraLightClassModifierExtension"
                        interface="org.jetbrains.kotlin.asJava.UltraLightClassModifierExtension"
                        area="IDEA_PROJECT"/>

        <extensionPoint name="scratchFileLanguageProvider" beanClass="com.intellij.lang.LanguageExtensionPoint">
            <with attribute="implementationClass" implements="org.jetbrains.kotlin.idea.scratch.ScratchFileLanguageProvider"/>
        </extensionPoint>


        <extensionPoint qualifiedName="org.jetbrains.kotlin.facetValidatorCreator"
                        interface="org.jetbrains.kotlin.idea.facet.KotlinFacetValidatorCreator"/>
        <extensionPoint qualifiedName="org.jetbrains.kotlin.clearBuildState"
                        interface="org.jetbrains.kotlin.idea.compiler.configuration.ClearBuildStateExtension"/>

        <extensionPoint qualifiedName="org.jetbrains.kotlin.completionExtension"
                        interface="org.jetbrains.kotlin.idea.completion.KotlinCompletionExtension"/>


        <extensionPoint qualifiedName="org.jetbrains.kotlin.scriptAdditionalIdeaDependenciesProvider"
                        interface="org.jetbrains.kotlin.idea.core.script.dependencies.ScriptAdditionalIdeaDependenciesProvider"
                        area="IDEA_PROJECT"/>

        <extensionPoint qualifiedName="org.jetbrains.kotlin.scriptDefinitionsProvider"
                        interface="kotlin.script.experimental.intellij.ScriptDefinitionsProvider"
                        area="IDEA_PROJECT" dynamic="true"/>

        <extensionPoint qualifiedName="org.jetbrains.kotlin.ideScriptConfigurationControlFacade"
                        interface="kotlin.script.experimental.intellij.IdeScriptConfigurationControlFacade"
                        area="IDEA_PROJECT" dynamic="true"/>

        <extensionPoint qualifiedName="org.jetbrains.kotlin.syntheticScopeProviderExtension"
                        interface="org.jetbrains.kotlin.synthetic.SyntheticScopeProviderExtension"
                        area="IDEA_PROJECT"/>

        <extensionPoint qualifiedName="org.jetbrains.kotlin.resolveScopeEnlarger"
                        interface="org.jetbrains.kotlin.idea.caches.resolve.util.KotlinResolveScopeEnlarger"
                        dynamic="true"/>

        <extensionPoint qualifiedName="org.jetbrains.kotlin.j2kConverterExtension"
                        interface="org.jetbrains.kotlin.j2k.J2kConverterExtension"/>

        <extensionPoint qualifiedName="org.jetbrains.kotlin.scriptDiagnosticFixProvider"
                        interface="org.jetbrains.kotlin.idea.script.ScriptDiagnosticFixProvider"/>

        <extensionPoint qualifiedName="org.jetbrains.kotlin.scripting.idea.loader"
                        interface="org.jetbrains.kotlin.idea.core.script.configuration.loader.ScriptConfigurationLoader"
                        area="IDEA_PROJECT"/>

        <extensionPoint qualifiedName="org.jetbrains.kotlin.scripting.idea.listener"
                        interface="org.jetbrains.kotlin.idea.core.script.configuration.listener.ScriptChangeListener"
                        area="IDEA_PROJECT"/>

        <extensionPoint qualifiedName="org.jetbrains.kotlin.additionalExtractableAnalyser"
                        interface="org.jetbrains.kotlin.idea.refactoring.introduce.extractionEngine.AdditionalExtractableAnalyser"/>

        <extensionPoint qualifiedName="org.jetbrains.kotlin.experimentalFeature"
                        interface="org.jetbrains.kotlin.idea.configuration.ExperimentalFeature"/>

        <extensionPoint qualifiedName="org.jetbrains.kotlin.foreignUsagesRenameProcessor"
                        interface="org.jetbrains.kotlin.idea.refactoring.rename.ForeignUsagesRenameProcessor" dynamic="true"/>

    </extensionPoints>

    <extensions defaultExtensionNs="org.jetbrains.kotlin">

        <scriptDefinitionContributor
            id="ScriptTemplatesFromCompilerSettingsProvider"
            implementation="org.jetbrains.kotlin.idea.script.ScriptTemplatesFromCompilerSettingsProvider"/>

        <scriptDefinitionContributor
            id="BridgeScriptDefinitionsContributor"
            implementation="org.jetbrains.kotlin.idea.script.BridgeScriptDefinitionsContributor"/>

        <scriptDefinitionContributor
            id="ScriptTemplatesFromDependenciesProvider"
            implementation="org.jetbrains.kotlin.idea.script.ScriptTemplatesFromDependenciesProvider"/>

        <scriptDefinitionContributor id="StandardScriptDefinitionContributor"
                                     order="last"
                                     implementation="org.jetbrains.kotlin.idea.core.script.StandardScriptDefinitionContributor"/>

        <scriptDefinitionContributor id="ConsoleScriptDefinitionContributor"
                                     implementation="org.jetbrains.kotlin.console.ConsoleScriptDefinitionContributor"/>

        <scriptDefinitionContributor id="ScriptDefinitionForExtensionAndIdeConsoleRootsSource"
                                     implementation="org.jetbrains.kotlin.jsr223.ScriptDefinitionForExtensionAndIdeConsoleRootsSource"/>

        <scriptDefinitionsProvider id="MainKtsScriptDefinitionSource"
                                   implementation="org.jetbrains.kotlin.idea.script.MainKtsScriptDefinitionSource"/>

        <ideScriptConfigurationControlFacade implementation="org.jetbrains.kotlin.idea.script.DefaultIdeScriptingConfigurationFacade"/>

        <scratchFileLanguageProvider language="kotlin" implementationClass="org.jetbrains.kotlin.idea.scratch.KtScratchFileLanguageProvider"/>
        <scriptAdditionalIdeaDependenciesProvider implementation="org.jetbrains.kotlin.idea.scratch.ScratchAdditionalIdeaDependenciesProvider"/>

        <j2kConverterExtension implementation="org.jetbrains.kotlin.idea.j2k.OldJ2kConverterExtension"/>
        <j2kConverterExtension implementation="org.jetbrains.kotlin.nj2k.NewJ2kConverterExtension"/>
    </extensions>

    <extensions defaultExtensionNs="com.intellij">
        <registryKey key="kotlin.mpp.editTargetPlatformEnabled"
                     description="Enable manual editing of MPP target platforms"
                     defaultValue="false"
                     restartRequired="false"/>
        <registryKey key="kotlin.android.import.mpp.all.transitive"
                     description="Add all transitive dependencies on MPP modules when Android project is imported"
                     defaultValue="true"
                     restartRequired="false"/>

        <registryKey key="kotlin.experimental.new.j2k"
                     description="Enable new Java to Kotlin converter"
                     defaultValue="true"
                     restartRequired="false"/>

        <registryKey key="kotlin.code-vision.usages"
                     description="Enable Code-Vision usages search"
                     defaultValue="false"
                     restartRequired="false"/>

        <registryKey key="kotlin.code-vision.inheritors"
                     description="Enable Code-Vision inheritors search"
                     defaultValue="false"
                     restartRequired="false"/>

        <registryKey key="kotlin.enable.move.method.refactoring"
                     description="Enable experimental move method refactoring"
                     defaultValue="false"
                     restartRequired="false"/>

        <registryKey key="kotlin.gradle-run.enabled"
                     description="Enable delegation of app running to gradle"
                     defaultValue="false"
                     restartRequired="false"/>

        <fileEditorProvider implementation="org.jetbrains.kotlin.idea.scratch.ui.KtScratchFileEditorProvider"/>

        <jbProtocolCommand implementation="org.jetbrains.kotlin.tools.projectWizard.wizard.OpenNewProjectWizardProtocolCommand"/>
    </extensions>
</idea-plugin>
