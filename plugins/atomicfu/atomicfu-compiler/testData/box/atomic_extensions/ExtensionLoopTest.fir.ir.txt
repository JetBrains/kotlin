FILE fqName:<root> fileName:/ExtensionLoopTest.kt
  PROPERTY ATOMICFU_GENERATED_PROPERTY name:a$volatile visibility:private modality:FINAL [var]
    FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private [static]
      annotations:
        Volatile
      EXPRESSION_BODY
        CONST Int type=kotlin.Int value=10
    FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-a$volatile> visibility:private modality:FINAL returnType:kotlin.Int
      correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:a$volatile visibility:private modality:FINAL [var]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun <get-a$volatile> (): kotlin.Int declared in <root>'
          GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private [static] declared in <root>' type=kotlin.Int origin=null
    FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<set-a$volatile> visibility:private modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:Regular name:value index:0 type:kotlin.Int
      correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:a$volatile visibility:private modality:FINAL [var]
      BLOCK_BODY
        RETURN type=kotlin.Unit from='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>'
          SET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private [static] declared in <root>' type=kotlin.Unit origin=null
            value: GET_VAR 'value: kotlin.Int declared in <root>.<set-a$volatile>' type=kotlin.Int origin=null
  PROPERTY ATOMICFU_GENERATED_PROPERTY name:b$volatile visibility:private modality:FINAL [var]
    FIELD ATOMICFU_GENERATED_FIELD name:b$volatile type:kotlin.Boolean visibility:private [static]
      annotations:
        Volatile
      EXPRESSION_BODY
        CONST Boolean type=kotlin.Boolean value=false
    FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-b$volatile> visibility:private modality:FINAL returnType:kotlin.Boolean
      correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:b$volatile visibility:private modality:FINAL [var]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun <get-b$volatile> (): kotlin.Boolean declared in <root>'
          GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:b$volatile type:kotlin.Boolean visibility:private [static] declared in <root>' type=kotlin.Boolean origin=null
    FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<set-b$volatile> visibility:private modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:Regular name:value index:0 type:kotlin.Boolean
      correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:b$volatile visibility:private modality:FINAL [var]
      BLOCK_BODY
        RETURN type=kotlin.Unit from='private final fun <set-b$volatile> (value: kotlin.Boolean): kotlin.Unit declared in <root>'
          SET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:b$volatile type:kotlin.Boolean visibility:private [static] declared in <root>' type=kotlin.Unit origin=null
            value: GET_VAR 'value: kotlin.Boolean declared in <root>.<set-b$volatile>' type=kotlin.Boolean origin=null
  PROPERTY ATOMICFU_GENERATED_PROPERTY name:l$volatile visibility:private modality:FINAL [var]
    FIELD ATOMICFU_GENERATED_FIELD name:l$volatile type:kotlin.Long visibility:private [static]
      annotations:
        Volatile
      EXPRESSION_BODY
        CONST Long type=kotlin.Long value=10
    FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-l$volatile> visibility:private modality:FINAL returnType:kotlin.Long
      correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:l$volatile visibility:private modality:FINAL [var]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun <get-l$volatile> (): kotlin.Long declared in <root>'
          GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:l$volatile type:kotlin.Long visibility:private [static] declared in <root>' type=kotlin.Long origin=null
    FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<set-l$volatile> visibility:private modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:Regular name:value index:0 type:kotlin.Long
      correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:l$volatile visibility:private modality:FINAL [var]
      BLOCK_BODY
        RETURN type=kotlin.Unit from='private final fun <set-l$volatile> (value: kotlin.Long): kotlin.Unit declared in <root>'
          SET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:l$volatile type:kotlin.Long visibility:private [static] declared in <root>' type=kotlin.Unit origin=null
            value: GET_VAR 'value: kotlin.Long declared in <root>.<set-l$volatile>' type=kotlin.Long origin=null
  PROPERTY ATOMICFU_GENERATED_PROPERTY name:ref$volatile visibility:private modality:FINAL [var]
    FIELD ATOMICFU_GENERATED_FIELD name:ref$volatile type:kotlin.Any? visibility:private [static]
      annotations:
        Volatile
      EXPRESSION_BODY
        CONST String type=kotlin.String value="aaa"
    FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-ref$volatile> visibility:private modality:FINAL returnType:kotlin.Any?
      correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:ref$volatile visibility:private modality:FINAL [var]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun <get-ref$volatile> (): kotlin.Any? declared in <root>'
          GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:ref$volatile type:kotlin.Any? visibility:private [static] declared in <root>' type=kotlin.Any? origin=null
    FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<set-ref$volatile> visibility:private modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:Regular name:value index:0 type:kotlin.Any?
      correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:ref$volatile visibility:private modality:FINAL [var]
      BLOCK_BODY
        RETURN type=kotlin.Unit from='private final fun <set-ref$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>'
          SET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:ref$volatile type:kotlin.Any? visibility:private [static] declared in <root>' type=kotlin.Unit origin=null
            value: GET_VAR 'value: kotlin.Any? declared in <root>.<set-ref$volatile>' type=kotlin.Any? origin=null
  CLASS CLASS name:LoopTest modality:FINAL visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.LoopTest
    PROPERTY ATOMICFU_GENERATED_PROPERTY name:a$volatile visibility:private modality:FINAL [var]
      FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private
        annotations:
          Volatile
        EXPRESSION_BODY
          CONST Int type=kotlin.Int value=0
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-a$volatile> visibility:private modality:FINAL returnType:kotlin.Int
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:a$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-a$volatile> (): kotlin.Int declared in <root>.LoopTest'
            GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' type=kotlin.Int origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-a$volatile>' type=<root>.LoopTest origin=null
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<set-a$volatile> visibility:private modality:FINAL returnType:kotlin.Unit
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        VALUE_PARAMETER kind:Regular name:value index:1 type:kotlin.Int
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:a$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Unit from='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest'
            SET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' type=kotlin.Unit origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<set-a$volatile>' type=<root>.LoopTest origin=null
              value: GET_VAR 'value: kotlin.Int declared in <root>.LoopTest.<set-a$volatile>' type=kotlin.Int origin=null
    PROPERTY ATOMICFU_GENERATED_PROPERTY name:a1$volatile visibility:private modality:FINAL [var]
      FIELD ATOMICFU_GENERATED_FIELD name:a1$volatile type:kotlin.Int visibility:private
        annotations:
          Volatile
        EXPRESSION_BODY
          CONST Int type=kotlin.Int value=1
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-a1$volatile> visibility:private modality:FINAL returnType:kotlin.Int
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:a1$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-a1$volatile> (): kotlin.Int declared in <root>.LoopTest'
            GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:a1$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' type=kotlin.Int origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-a1$volatile>' type=<root>.LoopTest origin=null
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<set-a1$volatile> visibility:private modality:FINAL returnType:kotlin.Unit
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        VALUE_PARAMETER kind:Regular name:value index:1 type:kotlin.Int
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:a1$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Unit from='private final fun <set-a1$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest'
            SET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:a1$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' type=kotlin.Unit origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<set-a1$volatile>' type=<root>.LoopTest origin=null
              value: GET_VAR 'value: kotlin.Int declared in <root>.LoopTest.<set-a1$volatile>' type=kotlin.Int origin=null
    PROPERTY ATOMICFU_GENERATED_PROPERTY name:b$volatile visibility:private modality:FINAL [var]
      FIELD ATOMICFU_GENERATED_FIELD name:b$volatile type:kotlin.Boolean visibility:private
        annotations:
          Volatile
        EXPRESSION_BODY
          CONST Boolean type=kotlin.Boolean value=true
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-b$volatile> visibility:private modality:FINAL returnType:kotlin.Boolean
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:b$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-b$volatile> (): kotlin.Boolean declared in <root>.LoopTest'
            GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:b$volatile type:kotlin.Boolean visibility:private declared in <root>.LoopTest' type=kotlin.Boolean origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-b$volatile>' type=<root>.LoopTest origin=null
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<set-b$volatile> visibility:private modality:FINAL returnType:kotlin.Unit
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        VALUE_PARAMETER kind:Regular name:value index:1 type:kotlin.Boolean
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:b$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Unit from='private final fun <set-b$volatile> (value: kotlin.Boolean): kotlin.Unit declared in <root>.LoopTest'
            SET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:b$volatile type:kotlin.Boolean visibility:private declared in <root>.LoopTest' type=kotlin.Unit origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<set-b$volatile>' type=<root>.LoopTest origin=null
              value: GET_VAR 'value: kotlin.Boolean declared in <root>.LoopTest.<set-b$volatile>' type=kotlin.Boolean origin=null
    PROPERTY ATOMICFU_GENERATED_PROPERTY name:l$volatile visibility:private modality:FINAL [var]
      FIELD ATOMICFU_GENERATED_FIELD name:l$volatile type:kotlin.Long visibility:private
        annotations:
          Volatile
        EXPRESSION_BODY
          CONST Long type=kotlin.Long value=5000000000
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-l$volatile> visibility:private modality:FINAL returnType:kotlin.Long
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:l$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-l$volatile> (): kotlin.Long declared in <root>.LoopTest'
            GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:l$volatile type:kotlin.Long visibility:private declared in <root>.LoopTest' type=kotlin.Long origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-l$volatile>' type=<root>.LoopTest origin=null
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<set-l$volatile> visibility:private modality:FINAL returnType:kotlin.Unit
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        VALUE_PARAMETER kind:Regular name:value index:1 type:kotlin.Long
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:l$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Unit from='private final fun <set-l$volatile> (value: kotlin.Long): kotlin.Unit declared in <root>.LoopTest'
            SET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:l$volatile type:kotlin.Long visibility:private declared in <root>.LoopTest' type=kotlin.Unit origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<set-l$volatile>' type=<root>.LoopTest origin=null
              value: GET_VAR 'value: kotlin.Long declared in <root>.LoopTest.<set-l$volatile>' type=kotlin.Long origin=null
    PROPERTY ATOMICFU_GENERATED_PROPERTY name:r$volatile visibility:private modality:FINAL [var]
      FIELD ATOMICFU_GENERATED_FIELD name:r$volatile type:kotlin.Any? visibility:private
        annotations:
          Volatile
        EXPRESSION_BODY
          CONSTRUCTOR_CALL 'public constructor <init> (s: kotlin.String) declared in <root>.LoopTest.A' type=<root>.LoopTest.A origin=null
            ARG s: CONST String type=kotlin.String value="aaaa"
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-r$volatile> visibility:private modality:FINAL returnType:kotlin.Any?
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:r$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-r$volatile> (): kotlin.Any? declared in <root>.LoopTest'
            GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:r$volatile type:kotlin.Any? visibility:private declared in <root>.LoopTest' type=kotlin.Any? origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-r$volatile>' type=<root>.LoopTest origin=null
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<set-r$volatile> visibility:private modality:FINAL returnType:kotlin.Unit
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        VALUE_PARAMETER kind:Regular name:value index:1 type:kotlin.Any?
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:r$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Unit from='private final fun <set-r$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LoopTest'
            SET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:r$volatile type:kotlin.Any? visibility:private declared in <root>.LoopTest' type=kotlin.Unit origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<set-r$volatile>' type=<root>.LoopTest origin=null
              value: GET_VAR 'value: kotlin.Any? declared in <root>.LoopTest.<set-r$volatile>' type=kotlin.Any? origin=null
    PROPERTY ATOMICFU_GENERATED_PROPERTY name:rs$volatile visibility:private modality:FINAL [var]
      FIELD ATOMICFU_GENERATED_FIELD name:rs$volatile type:kotlin.Any? visibility:private
        annotations:
          Volatile
        EXPRESSION_BODY
          CONST String type=kotlin.String value="bbbb"
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-rs$volatile> visibility:private modality:FINAL returnType:kotlin.Any?
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:rs$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-rs$volatile> (): kotlin.Any? declared in <root>.LoopTest'
            GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:rs$volatile type:kotlin.Any? visibility:private declared in <root>.LoopTest' type=kotlin.Any? origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-rs$volatile>' type=<root>.LoopTest origin=null
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<set-rs$volatile> visibility:private modality:FINAL returnType:kotlin.Unit
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        VALUE_PARAMETER kind:Regular name:value index:1 type:kotlin.Any?
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:rs$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Unit from='private final fun <set-rs$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LoopTest'
            SET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:rs$volatile type:kotlin.Any? visibility:private declared in <root>.LoopTest' type=kotlin.Unit origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<set-rs$volatile>' type=<root>.LoopTest origin=null
              value: GET_VAR 'value: kotlin.Any? declared in <root>.LoopTest.<set-rs$volatile>' type=kotlin.Any? origin=null
    CLASS CLASS name:A modality:FINAL visibility:public superTypes:[kotlin.Any]
      thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.LoopTest.A
      PROPERTY name:s visibility:public modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.String visibility:private [final]
          EXPRESSION_BODY
            GET_VAR 's: kotlin.String declared in <root>.LoopTest.A.<init>' type=kotlin.String origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-s> visibility:public modality:FINAL returnType:kotlin.String
          VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest.A
          correspondingProperty: PROPERTY name:s visibility:public modality:FINAL [val]
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-s> (): kotlin.String declared in <root>.LoopTest.A'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.String visibility:private [final]' type=kotlin.String origin=null
                receiver: GET_VAR '<this>: <root>.LoopTest.A declared in <root>.LoopTest.A.<get-s>' type=<root>.LoopTest.A origin=null
      CONSTRUCTOR visibility:public returnType:<root>.LoopTest.A [primary]
        VALUE_PARAMETER kind:Regular name:s index:0 type:kotlin.String
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:A modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        overridden:
          public open fun hashCode (): kotlin.Int declared in kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        overridden:
          public open fun toString (): kotlin.String declared in kotlin.Any
    CONSTRUCTOR visibility:public returnType:<root>.LoopTest [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:LoopTest modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN ATOMICFU_GENERATED_FUNCTION name:bar$atomicfu$ATOMIC_ARRAY$Int visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.concurrent.AtomicIntArray
      VALUE_PARAMETER kind:Regular name:index$atomicfu index:2 type:kotlin.Int
      VALUE_PARAMETER kind:Regular name:delta index:3 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun bar$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, delta: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
          CALL 'private final fun foo$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.bar$atomicfu$ATOMIC_ARRAY$Int' type=<root>.LoopTest origin=null
            ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.bar$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
            ARG index$atomicfu: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.bar$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
            ARG to: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
              ARG <this>: TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
                CALL 'public final fun get (index: kotlin.Int): kotlin.Int declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Int origin=null
                  ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.bar$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
                  ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.bar$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
              ARG other: GET_VAR 'delta: kotlin.Int declared in <root>.LoopTest.bar$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
    FUN ATOMICFU_GENERATED_FUNCTION name:bar$atomicfu$NATIVE_PROPERTY_REF$Int visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> [crossinline]
      VALUE_PARAMETER kind:Regular name:delta index:2 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun bar$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, delta: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
          CALL 'private final fun foo$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.bar$atomicfu$NATIVE_PROPERTY_REF$Int' type=<root>.LoopTest origin=null
            ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.bar$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
            ARG to: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
              ARG <this>: TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
                CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                  TYPE_ARG T: kotlin.Int
                  ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                    ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.bar$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
              ARG other: GET_VAR 'delta: kotlin.Int declared in <root>.LoopTest.bar$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Int origin=null
    FUN ATOMICFU_GENERATED_FUNCTION name:extensionLoop$atomicfu$ATOMIC_ARRAY$Int visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.concurrent.AtomicIntArray
      VALUE_PARAMETER kind:Regular name:index$atomicfu index:2 type:kotlin.Int
      VALUE_PARAMETER kind:Regular name:to index:3 type:kotlin.Int
      BLOCK_BODY
        CALL 'private final fun loop$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extensionLoop$atomicfu$ATOMIC_ARRAY$Int' type=<root>.LoopTest origin=null
          ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.extensionLoop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
          ARG index$atomicfu: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.extensionLoop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun compareAndSet (index: kotlin.Int, expectedValue: kotlin.Int, newValue: kotlin.Int): kotlin.Boolean declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Boolean origin=null
                      ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.extensionLoop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
                      ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.extensionLoop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
                      ARG expectedValue: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.extensionLoop$atomicfu$ATOMIC_ARRAY$Int.<anonymous>' type=kotlin.Int origin=null
                      ARG newValue: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.extensionLoop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
                    then: RETURN type=kotlin.Nothing from='private final fun extensionLoop$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                      TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
                        CALL 'public final fun get (index: kotlin.Int): kotlin.Int declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Int origin=null
                          ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.extensionLoop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
                          ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.extensionLoop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
                RETURN type=kotlin.Nothing from='private final fun extensionLoop$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                  CONST Int type=kotlin.Int value=777
    FUN ATOMICFU_GENERATED_FUNCTION name:extensionLoop$atomicfu$NATIVE_PROPERTY_REF$Int visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> [crossinline]
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Int
      BLOCK_BODY
        CALL 'private final fun loop$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extensionLoop$atomicfu$NATIVE_PROPERTY_REF$Int' type=<root>.LoopTest origin=null
          ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.extensionLoop$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                      TYPE_ARG T: kotlin.Int
                      ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                        ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.extensionLoop$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
                      ARG expectedValue: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.extensionLoop$atomicfu$NATIVE_PROPERTY_REF$Int.<anonymous>' type=kotlin.Int origin=null
                      ARG newValue: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.extensionLoop$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Int origin=null
                    then: RETURN type=kotlin.Nothing from='private final fun extensionLoop$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                      TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
                        CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                          TYPE_ARG T: kotlin.Int
                          ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                            ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.extensionLoop$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
                RETURN type=kotlin.Nothing from='private final fun extensionLoop$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                  CONST Int type=kotlin.Int value=777
    FUN ATOMICFU_GENERATED_FUNCTION name:extensionLoopExpression$atomicfu$ATOMIC_ARRAY$Int visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.concurrent.AtomicIntArray
      VALUE_PARAMETER kind:Regular name:index$atomicfu index:2 type:kotlin.Int
      VALUE_PARAMETER kind:Regular name:to index:3 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun extensionLoopExpression$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
          CALL 'private final fun loop$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extensionLoopExpression$atomicfu$ATOMIC_ARRAY$Int' type=<root>.LoopTest origin=null
            ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.extensionLoopExpression$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
            ARG index$atomicfu: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.extensionLoopExpression$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
            ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
                BLOCK_BODY
                  CALL 'public final fun set (index: kotlin.Int, newValue: kotlin.Int): kotlin.Unit declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Unit origin=null
                    ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.extensionLoopExpression$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
                    ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.extensionLoopExpression$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
                    ARG newValue: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
                      ARG <this>: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.extensionLoopExpression$atomicfu$ATOMIC_ARRAY$Int.<anonymous>' type=kotlin.Int origin=null
                      ARG other: CONST Int type=kotlin.Int value=10
                  RETURN type=kotlin.Nothing from='private final fun extensionLoopExpression$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                    WHEN type=kotlin.Int origin=IF
                      BRANCH
                        if: CALL 'public final fun compareAndSet (index: kotlin.Int, expectedValue: kotlin.Int, newValue: kotlin.Int): kotlin.Boolean declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Boolean origin=null
                          ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.extensionLoopExpression$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
                          ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.extensionLoopExpression$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
                          ARG expectedValue: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.extensionLoopExpression$atomicfu$ATOMIC_ARRAY$Int.<anonymous>' type=kotlin.Int origin=null
                          ARG newValue: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.extensionLoopExpression$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
                        then: TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
                          CALL 'public final fun get (index: kotlin.Int): kotlin.Int declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Int origin=null
                            ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.extensionLoopExpression$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
                            ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.extensionLoopExpression$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
                      BRANCH
                        if: CONST Boolean type=kotlin.Boolean value=true
                        then: CALL 'public final fun incrementAndGet (index: kotlin.Int): kotlin.Int declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Int origin=null
                          ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.extensionLoopExpression$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
                          ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.extensionLoopExpression$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
    FUN ATOMICFU_GENERATED_FUNCTION name:extensionLoopExpression$atomicfu$NATIVE_PROPERTY_REF$Int visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> [crossinline]
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun extensionLoopExpression$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
          CALL 'private final fun loop$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extensionLoopExpression$atomicfu$NATIVE_PROPERTY_REF$Int' type=<root>.LoopTest origin=null
            ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.extensionLoopExpression$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
            ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
                BLOCK_BODY
                  CALL 'internal final fun atomicSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicSetField>, newValue: T of kotlin.concurrent.atomicSetField): kotlin.Unit declared in kotlin.concurrent' type=kotlin.Unit origin=null
                    TYPE_ARG T: kotlin.Int
                    ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                      ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.extensionLoopExpression$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
                    ARG newValue: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
                      ARG <this>: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.extensionLoopExpression$atomicfu$NATIVE_PROPERTY_REF$Int.<anonymous>' type=kotlin.Int origin=null
                      ARG other: CONST Int type=kotlin.Int value=10
                  RETURN type=kotlin.Nothing from='private final fun extensionLoopExpression$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                    WHEN type=kotlin.Int origin=IF
                      BRANCH
                        if: CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                          TYPE_ARG T: kotlin.Int
                          ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                            ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.extensionLoopExpression$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
                          ARG expectedValue: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.extensionLoopExpression$atomicfu$NATIVE_PROPERTY_REF$Int.<anonymous>' type=kotlin.Int origin=null
                          ARG newValue: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.extensionLoopExpression$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Int origin=null
                        then: TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
                          CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                            TYPE_ARG T: kotlin.Int
                            ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                              ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.extensionLoopExpression$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
                      BRANCH
                        if: CONST Boolean type=kotlin.Boolean value=true
                        then: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=null
                          ARG <this>: CALL 'internal final fun getAndAddField (<this>: kotlin.reflect.KMutableProperty0<kotlin.Int>, delta: kotlin.Int): kotlin.Int declared in kotlin.concurrent' type=kotlin.Int origin=null
                            ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                              ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.extensionLoopExpression$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
                            ARG delta: CONST Int type=kotlin.Int value=1
                          ARG other: CONST Int type=kotlin.Int value=1
    FUN ATOMICFU_GENERATED_FUNCTION name:extensionLoopMixedReceivers$atomicfu$ATOMIC_ARRAY$Int visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.concurrent.AtomicIntArray
      VALUE_PARAMETER kind:Regular name:index$atomicfu index:2 type:kotlin.Int
      VALUE_PARAMETER kind:Regular name:first index:3 type:kotlin.Int
      VALUE_PARAMETER kind:Regular name:second index:4 type:kotlin.Int
      BLOCK_BODY
        CALL 'private final fun loop$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extensionLoopMixedReceivers$atomicfu$ATOMIC_ARRAY$Int' type=<root>.LoopTest origin=null
          ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.extensionLoopMixedReceivers$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
          ARG index$atomicfu: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.extensionLoopMixedReceivers$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'public final fun compareAndSet (index: kotlin.Int, expectedValue: kotlin.Int, newValue: kotlin.Int): kotlin.Boolean declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Boolean origin=null
                    ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.extensionLoopMixedReceivers$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
                    ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.extensionLoopMixedReceivers$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
                    ARG expectedValue: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.extensionLoopMixedReceivers$atomicfu$ATOMIC_ARRAY$Int.<anonymous>' type=kotlin.Int origin=null
                    ARG newValue: GET_VAR 'first: kotlin.Int declared in <root>.LoopTest.extensionLoopMixedReceivers$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                    TYPE_ARG T: kotlin.Int
                    ARG <this>: PROPERTY_REFERENCE 'private final a$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-a$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                      ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extensionLoopMixedReceivers$atomicfu$ATOMIC_ARRAY$Int' type=<root>.LoopTest origin=null
                    ARG expectedValue: GET_VAR 'first: kotlin.Int declared in <root>.LoopTest.extensionLoopMixedReceivers$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
                    ARG newValue: GET_VAR 'second: kotlin.Int declared in <root>.LoopTest.extensionLoopMixedReceivers$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
                RETURN type=kotlin.Nothing from='private final fun extensionLoopMixedReceivers$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, first: kotlin.Int, second: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                  TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
                    CALL 'public final fun get (index: kotlin.Int): kotlin.Int declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Int origin=null
                      ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.extensionLoopMixedReceivers$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
                      ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.extensionLoopMixedReceivers$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
    FUN ATOMICFU_GENERATED_FUNCTION name:extensionLoopMixedReceivers$atomicfu$NATIVE_PROPERTY_REF$Int visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> [crossinline]
      VALUE_PARAMETER kind:Regular name:first index:2 type:kotlin.Int
      VALUE_PARAMETER kind:Regular name:second index:3 type:kotlin.Int
      BLOCK_BODY
        CALL 'private final fun loop$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extensionLoopMixedReceivers$atomicfu$NATIVE_PROPERTY_REF$Int' type=<root>.LoopTest origin=null
          ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.extensionLoopMixedReceivers$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                    TYPE_ARG T: kotlin.Int
                    ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                      ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.extensionLoopMixedReceivers$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
                    ARG expectedValue: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.extensionLoopMixedReceivers$atomicfu$NATIVE_PROPERTY_REF$Int.<anonymous>' type=kotlin.Int origin=null
                    ARG newValue: GET_VAR 'first: kotlin.Int declared in <root>.LoopTest.extensionLoopMixedReceivers$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Int origin=null
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                    TYPE_ARG T: kotlin.Int
                    ARG <this>: PROPERTY_REFERENCE 'private final a$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-a$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                      ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extensionLoopMixedReceivers$atomicfu$NATIVE_PROPERTY_REF$Int' type=<root>.LoopTest origin=null
                    ARG expectedValue: GET_VAR 'first: kotlin.Int declared in <root>.LoopTest.extensionLoopMixedReceivers$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Int origin=null
                    ARG newValue: GET_VAR 'second: kotlin.Int declared in <root>.LoopTest.extensionLoopMixedReceivers$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Int origin=null
                RETURN type=kotlin.Nothing from='private final fun extensionLoopMixedReceivers$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, first: kotlin.Int, second: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                  TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
                    CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                      TYPE_ARG T: kotlin.Int
                      ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                        ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.extensionLoopMixedReceivers$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
    FUN ATOMICFU_GENERATED_FUNCTION name:extensionLoopRecursive$atomicfu$ATOMIC_ARRAY$Int visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.concurrent.AtomicIntArray
      VALUE_PARAMETER kind:Regular name:index$atomicfu index:2 type:kotlin.Int
      VALUE_PARAMETER kind:Regular name:to index:3 type:kotlin.Int
      BLOCK_BODY
        CALL 'private final fun loop$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extensionLoopRecursive$atomicfu$ATOMIC_ARRAY$Int' type=<root>.LoopTest origin=null
          ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.extensionLoopRecursive$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
          ARG index$atomicfu: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.extensionLoopRecursive$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'public final fun compareAndSet (index: kotlin.Int, expectedValue: kotlin.Int, newValue: kotlin.Int): kotlin.Boolean declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Boolean origin=null
                    ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.extensionLoopRecursive$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
                    ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.extensionLoopRecursive$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
                    ARG expectedValue: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.extensionLoopRecursive$atomicfu$ATOMIC_ARRAY$Int.<anonymous>' type=kotlin.Int origin=null
                    ARG newValue: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.extensionLoopRecursive$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'private final fun extensionLoop$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
                    ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extensionLoopRecursive$atomicfu$ATOMIC_ARRAY$Int' type=<root>.LoopTest origin=null
                    ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=LAMBDA
                      FUN ATOMICFU_GENERATED_FUNCTION name:<a$volatile-getter> visibility:local modality:FINAL returnType:kotlin.reflect.KMutableProperty0<kotlin.Int> [inline]
                        BLOCK_BODY
                          RETURN type=kotlin.Nothing from='local final fun <a$volatile-getter> (): kotlin.reflect.KMutableProperty0<kotlin.Int> declared in <root>.LoopTest.extensionLoopRecursive$atomicfu$ATOMIC_ARRAY$Int.<anonymous>'
                            PROPERTY_REFERENCE 'private final a$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-a$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                              ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extensionLoopRecursive$atomicfu$ATOMIC_ARRAY$Int' type=<root>.LoopTest origin=null
                    ARG to: CONST Int type=kotlin.Int value=5
                RETURN type=kotlin.Nothing from='private final fun extensionLoopRecursive$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                  TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
                    CALL 'public final fun get (index: kotlin.Int): kotlin.Int declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Int origin=null
                      ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.extensionLoopRecursive$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
                      ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.extensionLoopRecursive$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
    FUN ATOMICFU_GENERATED_FUNCTION name:extensionLoopRecursive$atomicfu$NATIVE_PROPERTY_REF$Int visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> [crossinline]
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Int
      BLOCK_BODY
        CALL 'private final fun loop$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extensionLoopRecursive$atomicfu$NATIVE_PROPERTY_REF$Int' type=<root>.LoopTest origin=null
          ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.extensionLoopRecursive$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                    TYPE_ARG T: kotlin.Int
                    ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                      ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.extensionLoopRecursive$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
                    ARG expectedValue: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.extensionLoopRecursive$atomicfu$NATIVE_PROPERTY_REF$Int.<anonymous>' type=kotlin.Int origin=null
                    ARG newValue: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.extensionLoopRecursive$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Int origin=null
                TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                  CALL 'private final fun extensionLoop$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
                    ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extensionLoopRecursive$atomicfu$NATIVE_PROPERTY_REF$Int' type=<root>.LoopTest origin=null
                    ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=LAMBDA
                      FUN ATOMICFU_GENERATED_FUNCTION name:<a$volatile-getter> visibility:local modality:FINAL returnType:kotlin.reflect.KMutableProperty0<kotlin.Int> [inline]
                        BLOCK_BODY
                          RETURN type=kotlin.Nothing from='local final fun <a$volatile-getter> (): kotlin.reflect.KMutableProperty0<kotlin.Int> declared in <root>.LoopTest.extensionLoopRecursive$atomicfu$NATIVE_PROPERTY_REF$Int.<anonymous>'
                            PROPERTY_REFERENCE 'private final a$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-a$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                              ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extensionLoopRecursive$atomicfu$NATIVE_PROPERTY_REF$Int' type=<root>.LoopTest origin=null
                    ARG to: CONST Int type=kotlin.Int value=5
                RETURN type=kotlin.Nothing from='private final fun extensionLoopRecursive$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                  TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
                    CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                      TYPE_ARG T: kotlin.Int
                      ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                        ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.extensionLoopRecursive$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
    FUN ATOMICFU_GENERATED_FUNCTION name:foo$atomicfu$ATOMIC_ARRAY$Int visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.concurrent.AtomicIntArray
      VALUE_PARAMETER kind:Regular name:index$atomicfu index:2 type:kotlin.Int
      VALUE_PARAMETER kind:Regular name:to index:3 type:kotlin.Int
      BLOCK_BODY
        CALL 'private final fun loop$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.foo$atomicfu$ATOMIC_ARRAY$Int' type=<root>.LoopTest origin=null
          ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.foo$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
          ARG index$atomicfu: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.foo$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun compareAndSet (index: kotlin.Int, expectedValue: kotlin.Int, newValue: kotlin.Int): kotlin.Boolean declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Boolean origin=null
                      ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.foo$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
                      ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.foo$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
                      ARG expectedValue: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.foo$atomicfu$ATOMIC_ARRAY$Int.<anonymous>' type=kotlin.Int origin=null
                      ARG newValue: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.foo$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
                    then: RETURN type=kotlin.Nothing from='private final fun foo$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                      CONST Int type=kotlin.Int value=777
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: RETURN type=kotlin.Nothing from='private final fun foo$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                      TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
                        CALL 'public final fun get (index: kotlin.Int): kotlin.Int declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Int origin=null
                          ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.foo$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
                          ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.foo$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
    FUN ATOMICFU_GENERATED_FUNCTION name:foo$atomicfu$NATIVE_PROPERTY_REF$Int visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> [crossinline]
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Int
      BLOCK_BODY
        CALL 'private final fun loop$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.foo$atomicfu$NATIVE_PROPERTY_REF$Int' type=<root>.LoopTest origin=null
          ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.foo$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                      TYPE_ARG T: kotlin.Int
                      ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                        ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.foo$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
                      ARG expectedValue: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.foo$atomicfu$NATIVE_PROPERTY_REF$Int.<anonymous>' type=kotlin.Int origin=null
                      ARG newValue: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.foo$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Int origin=null
                    then: RETURN type=kotlin.Nothing from='private final fun foo$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                      CONST Int type=kotlin.Int value=777
                  BRANCH
                    if: CONST Boolean type=kotlin.Boolean value=true
                    then: RETURN type=kotlin.Nothing from='private final fun foo$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                      TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
                        CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                          TYPE_ARG T: kotlin.Int
                          ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                            ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.foo$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
    FUN ATOMICFU_GENERATED_FUNCTION name:loop$atomicfu$ATOMIC_ARRAY$Int visibility:private modality:FINAL returnType:kotlin.Unit [inline]
      VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.concurrent.AtomicIntArray
      VALUE_PARAMETER kind:Regular name:index$atomicfu index:2 type:kotlin.Int
      VALUE_PARAMETER kind:Regular name:action$atomicfu index:3 type:kotlin.Function1<kotlin.Int, kotlin.Unit>
      BLOCK_BODY
        WHILE label=null origin=null
          condition: CONST Boolean type=kotlin.Boolean value=true
          body: BLOCK type=R of kotlin.Function1 origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:kotlin.Int [val]
              CALL 'public final fun get (index: kotlin.Int): kotlin.Int declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Int origin=null
                ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.loop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
                ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.loop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
            CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=R of kotlin.Function1 origin=null
              ARG <this>: GET_VAR 'action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit> declared in <root>.LoopTest.loop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=null
              ARG p1: GET_VAR 'val tmp_0: kotlin.Int declared in <root>.LoopTest.loop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
    FUN ATOMICFU_GENERATED_FUNCTION name:loop$atomicfu$NATIVE_PROPERTY_REF$Int visibility:private modality:FINAL returnType:kotlin.Unit [inline]
      VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> [crossinline]
      VALUE_PARAMETER kind:Regular name:action$atomicfu index:2 type:kotlin.Function1<kotlin.Int, kotlin.Unit>
      BLOCK_BODY
        WHILE label=null origin=null
          condition: CONST Boolean type=kotlin.Boolean value=true
          body: BLOCK type=R of kotlin.Function1 origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp_1 type:T of kotlin.concurrent.atomicGetField [val]
              CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                TYPE_ARG T: kotlin.Int
                ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                  ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.loop$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
            CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=R of kotlin.Function1 origin=null
              ARG <this>: GET_VAR 'action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit> declared in <root>.LoopTest.loop$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=null
              ARG p1: GET_VAR 'val tmp_1: T of kotlin.concurrent.atomicGetField declared in <root>.LoopTest.loop$atomicfu$NATIVE_PROPERTY_REF$Int' type=T of kotlin.concurrent.atomicGetField origin=null
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    FUN name:casLoop visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Int
      BLOCK_BODY
        CALL 'private final fun loop$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.casLoop' type=<root>.LoopTest origin=null
          ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=LAMBDA
            FUN ATOMICFU_GENERATED_FUNCTION name:<a$volatile-getter> visibility:local modality:FINAL returnType:kotlin.reflect.KMutableProperty0<kotlin.Int> [inline]
              BLOCK_BODY
                RETURN type=kotlin.Nothing from='local final fun <a$volatile-getter> (): kotlin.reflect.KMutableProperty0<kotlin.Int> declared in <root>.LoopTest.casLoop'
                  PROPERTY_REFERENCE 'private final a$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-a$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                    ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.casLoop' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                      TYPE_ARG T: kotlin.Int
                      ARG <this>: PROPERTY_REFERENCE 'private final a$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-a$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                        ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.casLoop' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
                      ARG expectedValue: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.casLoop.<anonymous>' type=kotlin.Int origin=null
                      ARG newValue: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.casLoop' type=kotlin.Int origin=null
                    then: RETURN type=kotlin.Nothing from='private final fun casLoop (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                      TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
                        CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                          TYPE_ARG T: kotlin.Int
                          ARG <this>: PROPERTY_REFERENCE 'private final a$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-a$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                            ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.casLoop' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
                RETURN type=kotlin.Nothing from='private final fun casLoop (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                  CONST Int type=kotlin.Int value=777
    FUN name:casLoopExpression visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun casLoopExpression (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
          CALL 'private final fun loop$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.casLoopExpression' type=<root>.LoopTest origin=null
            ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=LAMBDA
              FUN ATOMICFU_GENERATED_FUNCTION name:<a$volatile-getter> visibility:local modality:FINAL returnType:kotlin.reflect.KMutableProperty0<kotlin.Int> [inline]
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <a$volatile-getter> (): kotlin.reflect.KMutableProperty0<kotlin.Int> declared in <root>.LoopTest.casLoopExpression'
                    PROPERTY_REFERENCE 'private final a$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-a$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                      ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.casLoopExpression' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
                BLOCK_BODY
                  WHEN type=kotlin.Unit origin=IF
                    BRANCH
                      if: CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                        TYPE_ARG T: kotlin.Int
                        ARG <this>: PROPERTY_REFERENCE 'private final a$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-a$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                          ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.casLoopExpression' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
                        ARG expectedValue: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.casLoopExpression.<anonymous>' type=kotlin.Int origin=null
                        ARG newValue: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.casLoopExpression' type=kotlin.Int origin=null
                      then: RETURN type=kotlin.Nothing from='private final fun casLoopExpression (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                        TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
                          CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                            TYPE_ARG T: kotlin.Int
                            ARG <this>: PROPERTY_REFERENCE 'private final a$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-a$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                              ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.casLoopExpression' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
                  RETURN type=kotlin.Nothing from='private final fun casLoopExpression (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                    CONST Int type=kotlin.Int value=777
    FUN name:testIntExtensionLoops visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      BLOCK_BODY
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=5
          ARG actual: CALL 'private final fun casLoop (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Int type=kotlin.Int value=5
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=6
          ARG actual: CALL 'private final fun casLoopExpression (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Int type=kotlin.Int value=6
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=66
          ARG actual: CALL 'private final fun extensionLoop$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=LAMBDA
              FUN ATOMICFU_GENERATED_FUNCTION name:<a$volatile-getter> visibility:local modality:FINAL returnType:kotlin.reflect.KMutableProperty0<kotlin.Int> [inline]
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <a$volatile-getter> (): kotlin.reflect.KMutableProperty0<kotlin.Int> declared in <root>.LoopTest.testIntExtensionLoops'
                    PROPERTY_REFERENCE 'private final a$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-a$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                      ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Int type=kotlin.Int value=66
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=77
          ARG actual: CALL 'private final fun extensionLoopExpression$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=LAMBDA
              FUN ATOMICFU_GENERATED_FUNCTION name:<a$volatile-getter> visibility:local modality:FINAL returnType:kotlin.reflect.KMutableProperty0<kotlin.Int> [inline]
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <a$volatile-getter> (): kotlin.reflect.KMutableProperty0<kotlin.Int> declared in <root>.LoopTest.testIntExtensionLoops'
                    PROPERTY_REFERENCE 'private final a$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-a$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                      ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Int type=kotlin.Int value=777
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=99
          ARG actual: CALL 'private final fun extensionLoopMixedReceivers$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, first: kotlin.Int, second: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=LAMBDA
              FUN ATOMICFU_GENERATED_FUNCTION name:<a$volatile-getter> visibility:local modality:FINAL returnType:kotlin.reflect.KMutableProperty0<kotlin.Int> [inline]
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <a$volatile-getter> (): kotlin.reflect.KMutableProperty0<kotlin.Int> declared in <root>.LoopTest.testIntExtensionLoops'
                    PROPERTY_REFERENCE 'private final a$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-a$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                      ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG first: CONST Int type=kotlin.Int value=88
            ARG second: CONST Int type=kotlin.Int value=99
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=5
          ARG actual: CALL 'private final fun extensionLoopRecursive$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=LAMBDA
              FUN ATOMICFU_GENERATED_FUNCTION name:<a$volatile-getter> visibility:local modality:FINAL returnType:kotlin.reflect.KMutableProperty0<kotlin.Int> [inline]
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <a$volatile-getter> (): kotlin.reflect.KMutableProperty0<kotlin.Int> declared in <root>.LoopTest.testIntExtensionLoops'
                    PROPERTY_REFERENCE 'private final a$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-a$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                      ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Int type=kotlin.Int value=100
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=777
          ARG actual: CALL 'private final fun bar$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, delta: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=LAMBDA
              FUN ATOMICFU_GENERATED_FUNCTION name:<a$volatile-getter> visibility:local modality:FINAL returnType:kotlin.reflect.KMutableProperty0<kotlin.Int> [inline]
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <a$volatile-getter> (): kotlin.reflect.KMutableProperty0<kotlin.Int> declared in <root>.LoopTest.testIntExtensionLoops'
                    PROPERTY_REFERENCE 'private final a$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-a$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                      ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.testIntExtensionLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG delta: CONST Int type=kotlin.Int value=100
  FUN ATOMICFU_GENERATED_FUNCTION name:loop$atomicfu$ATOMIC_ARRAY$Any visibility:private modality:FINAL returnType:kotlin.Unit [inline]
    VALUE_PARAMETER kind:Regular name:handler$atomicfu index:0 type:kotlin.concurrent.AtomicArray<kotlin.Any?>
    VALUE_PARAMETER kind:Regular name:index$atomicfu index:1 type:kotlin.Int
    VALUE_PARAMETER kind:Regular name:action$atomicfu index:2 type:kotlin.Function1<kotlin.Any?, kotlin.Unit>
    BLOCK_BODY
      WHILE label=null origin=null
        condition: CONST Boolean type=kotlin.Boolean value=true
        body: BLOCK type=R of kotlin.Function1 origin=null
          VAR IR_TEMPORARY_VARIABLE name:tmp_2 type:T of kotlin.concurrent.AtomicArray [val]
            CALL 'public final fun get (index: kotlin.Int): T of kotlin.concurrent.AtomicArray declared in kotlin.concurrent.AtomicArray' type=T of kotlin.concurrent.AtomicArray origin=null
              ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicArray<kotlin.Any?> declared in <root>.loop$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.concurrent.AtomicArray<kotlin.Any?> origin=null
              ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.loop$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.Int origin=null
          CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=R of kotlin.Function1 origin=null
            ARG <this>: GET_VAR 'action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Unit> declared in <root>.loop$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.Function1<kotlin.Any?, kotlin.Unit> origin=null
            ARG p1: GET_VAR 'val tmp_2: T of kotlin.concurrent.AtomicArray declared in <root>.loop$atomicfu$ATOMIC_ARRAY$Any' type=T of kotlin.concurrent.AtomicArray origin=null
  FUN ATOMICFU_GENERATED_FUNCTION name:loop$atomicfu$ATOMIC_ARRAY$Boolean visibility:private modality:FINAL returnType:kotlin.Unit [inline]
    VALUE_PARAMETER kind:Regular name:handler$atomicfu index:0 type:kotlin.concurrent.AtomicIntArray
    VALUE_PARAMETER kind:Regular name:index$atomicfu index:1 type:kotlin.Int
    VALUE_PARAMETER kind:Regular name:action$atomicfu index:2 type:kotlin.Function1<kotlin.Boolean, kotlin.Unit>
    BLOCK_BODY
      WHILE label=null origin=null
        condition: CONST Boolean type=kotlin.Boolean value=true
        body: BLOCK type=R of kotlin.Function1 origin=null
          VAR IR_TEMPORARY_VARIABLE name:tmp_3 type:kotlin.Boolean [val]
            CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
              ARG arg0: CALL 'public final fun get (index: kotlin.Int): kotlin.Int declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Int origin=null
                ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.loop$atomicfu$ATOMIC_ARRAY$Boolean' type=kotlin.concurrent.AtomicIntArray origin=null
                ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.loop$atomicfu$ATOMIC_ARRAY$Boolean' type=kotlin.Int origin=null
              ARG arg1: CONST Int type=kotlin.Int value=1
          CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=R of kotlin.Function1 origin=null
            ARG <this>: GET_VAR 'action$atomicfu: kotlin.Function1<kotlin.Boolean, kotlin.Unit> declared in <root>.loop$atomicfu$ATOMIC_ARRAY$Boolean' type=kotlin.Function1<kotlin.Boolean, kotlin.Unit> origin=null
            ARG p1: GET_VAR 'val tmp_3: kotlin.Boolean declared in <root>.loop$atomicfu$ATOMIC_ARRAY$Boolean' type=kotlin.Boolean origin=null
  FUN ATOMICFU_GENERATED_FUNCTION name:loop$atomicfu$ATOMIC_ARRAY$Int visibility:private modality:FINAL returnType:kotlin.Unit [inline]
    VALUE_PARAMETER kind:Regular name:handler$atomicfu index:0 type:kotlin.concurrent.AtomicIntArray
    VALUE_PARAMETER kind:Regular name:index$atomicfu index:1 type:kotlin.Int
    VALUE_PARAMETER kind:Regular name:action$atomicfu index:2 type:kotlin.Function1<kotlin.Int, kotlin.Unit>
    BLOCK_BODY
      WHILE label=null origin=null
        condition: CONST Boolean type=kotlin.Boolean value=true
        body: BLOCK type=R of kotlin.Function1 origin=null
          VAR IR_TEMPORARY_VARIABLE name:tmp_4 type:kotlin.Int [val]
            CALL 'public final fun get (index: kotlin.Int): kotlin.Int declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Int origin=null
              ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.loop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
              ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.loop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
          CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=R of kotlin.Function1 origin=null
            ARG <this>: GET_VAR 'action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit> declared in <root>.loop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=null
            ARG p1: GET_VAR 'val tmp_4: kotlin.Int declared in <root>.loop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
  FUN ATOMICFU_GENERATED_FUNCTION name:loop$atomicfu$ATOMIC_ARRAY$Long visibility:private modality:FINAL returnType:kotlin.Unit [inline]
    VALUE_PARAMETER kind:Regular name:handler$atomicfu index:0 type:kotlin.concurrent.AtomicLongArray
    VALUE_PARAMETER kind:Regular name:index$atomicfu index:1 type:kotlin.Int
    VALUE_PARAMETER kind:Regular name:action$atomicfu index:2 type:kotlin.Function1<kotlin.Long, kotlin.Unit>
    BLOCK_BODY
      WHILE label=null origin=null
        condition: CONST Boolean type=kotlin.Boolean value=true
        body: BLOCK type=R of kotlin.Function1 origin=null
          VAR IR_TEMPORARY_VARIABLE name:tmp_5 type:kotlin.Long [val]
            CALL 'public final fun get (index: kotlin.Int): kotlin.Long declared in kotlin.concurrent.AtomicLongArray' type=kotlin.Long origin=null
              ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicLongArray declared in <root>.loop$atomicfu$ATOMIC_ARRAY$Long' type=kotlin.concurrent.AtomicLongArray origin=null
              ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.loop$atomicfu$ATOMIC_ARRAY$Long' type=kotlin.Int origin=null
          CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=R of kotlin.Function1 origin=null
            ARG <this>: GET_VAR 'action$atomicfu: kotlin.Function1<kotlin.Long, kotlin.Unit> declared in <root>.loop$atomicfu$ATOMIC_ARRAY$Long' type=kotlin.Function1<kotlin.Long, kotlin.Unit> origin=null
            ARG p1: GET_VAR 'val tmp_5: kotlin.Long declared in <root>.loop$atomicfu$ATOMIC_ARRAY$Long' type=kotlin.Long origin=null
  FUN ATOMICFU_GENERATED_FUNCTION name:loop$atomicfu$NATIVE_PROPERTY_REF$Any visibility:private modality:FINAL returnType:kotlin.Unit [inline]
    VALUE_PARAMETER kind:Regular name:handler$atomicfu index:0 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> [crossinline]
    VALUE_PARAMETER kind:Regular name:action$atomicfu index:1 type:kotlin.Function1<kotlin.Any?, kotlin.Unit>
    BLOCK_BODY
      WHILE label=null origin=null
        condition: CONST Boolean type=kotlin.Boolean value=true
        body: BLOCK type=R of kotlin.Function1 origin=null
          VAR IR_TEMPORARY_VARIABLE name:tmp_6 type:T of kotlin.concurrent.atomicGetField [val]
            CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
              TYPE_ARG T: kotlin.Any?
              ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> declared in <root>.loop$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> origin=null
          CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=R of kotlin.Function1 origin=null
            ARG <this>: GET_VAR 'action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Unit> declared in <root>.loop$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function1<kotlin.Any?, kotlin.Unit> origin=null
            ARG p1: GET_VAR 'val tmp_6: T of kotlin.concurrent.atomicGetField declared in <root>.loop$atomicfu$NATIVE_PROPERTY_REF$Any' type=T of kotlin.concurrent.atomicGetField origin=null
  FUN ATOMICFU_GENERATED_FUNCTION name:loop$atomicfu$NATIVE_PROPERTY_REF$Boolean visibility:private modality:FINAL returnType:kotlin.Unit [inline]
    VALUE_PARAMETER kind:Regular name:handler$atomicfu index:0 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Boolean>> [crossinline]
    VALUE_PARAMETER kind:Regular name:action$atomicfu index:1 type:kotlin.Function1<kotlin.Boolean, kotlin.Unit>
    BLOCK_BODY
      WHILE label=null origin=null
        condition: CONST Boolean type=kotlin.Boolean value=true
        body: BLOCK type=R of kotlin.Function1 origin=null
          VAR IR_TEMPORARY_VARIABLE name:tmp_7 type:T of kotlin.concurrent.atomicGetField [val]
            CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
              TYPE_ARG T: kotlin.Boolean
              ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Boolean>> declared in <root>.loop$atomicfu$NATIVE_PROPERTY_REF$Boolean' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Boolean>> origin=null
          CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=R of kotlin.Function1 origin=null
            ARG <this>: GET_VAR 'action$atomicfu: kotlin.Function1<kotlin.Boolean, kotlin.Unit> declared in <root>.loop$atomicfu$NATIVE_PROPERTY_REF$Boolean' type=kotlin.Function1<kotlin.Boolean, kotlin.Unit> origin=null
            ARG p1: GET_VAR 'val tmp_7: T of kotlin.concurrent.atomicGetField declared in <root>.loop$atomicfu$NATIVE_PROPERTY_REF$Boolean' type=T of kotlin.concurrent.atomicGetField origin=null
  FUN ATOMICFU_GENERATED_FUNCTION name:loop$atomicfu$NATIVE_PROPERTY_REF$Int visibility:private modality:FINAL returnType:kotlin.Unit [inline]
    VALUE_PARAMETER kind:Regular name:handler$atomicfu index:0 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> [crossinline]
    VALUE_PARAMETER kind:Regular name:action$atomicfu index:1 type:kotlin.Function1<kotlin.Int, kotlin.Unit>
    BLOCK_BODY
      WHILE label=null origin=null
        condition: CONST Boolean type=kotlin.Boolean value=true
        body: BLOCK type=R of kotlin.Function1 origin=null
          VAR IR_TEMPORARY_VARIABLE name:tmp_8 type:T of kotlin.concurrent.atomicGetField [val]
            CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
              TYPE_ARG T: kotlin.Int
              ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.loop$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
          CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=R of kotlin.Function1 origin=null
            ARG <this>: GET_VAR 'action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit> declared in <root>.loop$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=null
            ARG p1: GET_VAR 'val tmp_8: T of kotlin.concurrent.atomicGetField declared in <root>.loop$atomicfu$NATIVE_PROPERTY_REF$Int' type=T of kotlin.concurrent.atomicGetField origin=null
  FUN ATOMICFU_GENERATED_FUNCTION name:loop$atomicfu$NATIVE_PROPERTY_REF$Long visibility:private modality:FINAL returnType:kotlin.Unit [inline]
    VALUE_PARAMETER kind:Regular name:handler$atomicfu index:0 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Long>> [crossinline]
    VALUE_PARAMETER kind:Regular name:action$atomicfu index:1 type:kotlin.Function1<kotlin.Long, kotlin.Unit>
    BLOCK_BODY
      WHILE label=null origin=null
        condition: CONST Boolean type=kotlin.Boolean value=true
        body: BLOCK type=R of kotlin.Function1 origin=null
          VAR IR_TEMPORARY_VARIABLE name:tmp_9 type:T of kotlin.concurrent.atomicGetField [val]
            CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
              TYPE_ARG T: kotlin.Long
              ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Long>> declared in <root>.loop$atomicfu$NATIVE_PROPERTY_REF$Long' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Long>> origin=null
          CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=R of kotlin.Function1 origin=null
            ARG <this>: GET_VAR 'action$atomicfu: kotlin.Function1<kotlin.Long, kotlin.Unit> declared in <root>.loop$atomicfu$NATIVE_PROPERTY_REF$Long' type=kotlin.Function1<kotlin.Long, kotlin.Unit> origin=null
            ARG p1: GET_VAR 'val tmp_9: T of kotlin.concurrent.atomicGetField declared in <root>.loop$atomicfu$NATIVE_PROPERTY_REF$Long' type=T of kotlin.concurrent.atomicGetField origin=null
  FUN ATOMICFU_GENERATED_FUNCTION name:topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Any visibility:private modality:FINAL returnType:kotlin.String [inline]
    VALUE_PARAMETER kind:Regular name:handler$atomicfu index:0 type:kotlin.concurrent.AtomicArray<kotlin.Any?>
    VALUE_PARAMETER kind:Regular name:index$atomicfu index:1 type:kotlin.Int
    VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.String
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Any (handler$atomicfu: kotlin.concurrent.AtomicArray<kotlin.Any?>, index$atomicfu: kotlin.Int, to: kotlin.String): kotlin.String declared in <root>'
        CALL 'private final fun loop$atomicfu$ATOMIC_ARRAY$Any (handler$atomicfu: kotlin.concurrent.AtomicArray<kotlin.Any?>, index$atomicfu: kotlin.Int, action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Unit>): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
          ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicArray<kotlin.Any?> declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.concurrent.AtomicArray<kotlin.Any?> origin=null
          ARG index$atomicfu: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.Int origin=null
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.String, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.String
              BLOCK_BODY
                CALL 'public final fun set (index: kotlin.Int, newValue: T of kotlin.concurrent.AtomicArray): kotlin.Unit declared in kotlin.concurrent.AtomicArray' type=kotlin.Unit origin=null
                  ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicArray<kotlin.Any?> declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.concurrent.AtomicArray<kotlin.Any?> origin=null
                  ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.Int origin=null
                  ARG newValue: CALL 'public final fun plus (other: kotlin.Any?): kotlin.String declared in kotlin.String' type=kotlin.String origin=PLUS
                    ARG <this>: GET_VAR 'cur: kotlin.String declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Any.<anonymous>' type=kotlin.String origin=null
                    ARG other: GET_VAR 'to: kotlin.String declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.String origin=null
                RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Any (handler$atomicfu: kotlin.concurrent.AtomicArray<kotlin.Any?>, index$atomicfu: kotlin.Int, to: kotlin.String): kotlin.String declared in <root>'
                  TYPE_OP type=kotlin.Any? origin=CAST typeOperand=kotlin.Any?
                    CALL 'public final fun get (index: kotlin.Int): T of kotlin.concurrent.AtomicArray declared in kotlin.concurrent.AtomicArray' type=T of kotlin.concurrent.AtomicArray origin=null
                      ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicArray<kotlin.Any?> declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.concurrent.AtomicArray<kotlin.Any?> origin=null
                      ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.Int origin=null
  FUN ATOMICFU_GENERATED_FUNCTION name:topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Boolean visibility:private modality:FINAL returnType:kotlin.Boolean [inline]
    VALUE_PARAMETER kind:Regular name:handler$atomicfu index:0 type:kotlin.concurrent.AtomicIntArray
    VALUE_PARAMETER kind:Regular name:index$atomicfu index:1 type:kotlin.Int
    VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Boolean
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Boolean (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, to: kotlin.Boolean): kotlin.Boolean declared in <root>'
        CALL 'private final fun loop$atomicfu$ATOMIC_ARRAY$Boolean (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, action$atomicfu: kotlin.Function1<kotlin.Boolean, kotlin.Unit>): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
          ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Boolean' type=kotlin.concurrent.AtomicIntArray origin=null
          ARG index$atomicfu: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Boolean' type=kotlin.Int origin=null
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Boolean, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Boolean
              BLOCK_BODY
                CALL 'public final fun set (index: kotlin.Int, newValue: kotlin.Int): kotlin.Unit declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Unit origin=null
                  ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Boolean' type=kotlin.concurrent.AtomicIntArray origin=null
                  ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Boolean' type=kotlin.Int origin=null
                  ARG newValue: WHEN type=kotlin.Int origin=null
                    BRANCH
                      if: GET_VAR 'to: kotlin.Boolean declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Boolean' type=kotlin.Boolean origin=null
                      then: CONST Int type=kotlin.Int value=1
                    BRANCH
                      if: CONST Boolean type=kotlin.Boolean value=true
                      then: CONST Int type=kotlin.Int value=0
                RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Boolean (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, to: kotlin.Boolean): kotlin.Boolean declared in <root>'
                  TYPE_OP type=kotlin.Boolean origin=CAST typeOperand=kotlin.Boolean
                    CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                      ARG arg0: CALL 'public final fun get (index: kotlin.Int): kotlin.Int declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Int origin=null
                        ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Boolean' type=kotlin.concurrent.AtomicIntArray origin=null
                        ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Boolean' type=kotlin.Int origin=null
                      ARG arg1: CONST Int type=kotlin.Int value=1
  FUN ATOMICFU_GENERATED_FUNCTION name:topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Int visibility:private modality:FINAL returnType:kotlin.Int [inline]
    VALUE_PARAMETER kind:Regular name:handler$atomicfu index:0 type:kotlin.concurrent.AtomicIntArray
    VALUE_PARAMETER kind:Regular name:index$atomicfu index:1 type:kotlin.Int
    VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Int
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, to: kotlin.Int): kotlin.Int declared in <root>'
        CALL 'private final fun loop$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
          ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
          ARG index$atomicfu: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                CALL 'public final fun set (index: kotlin.Int, newValue: kotlin.Int): kotlin.Unit declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Unit origin=null
                  ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
                  ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
                  ARG newValue: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
                    ARG <this>: GET_VAR 'cur: kotlin.Int declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Int.<anonymous>' type=kotlin.Int origin=null
                    ARG other: GET_VAR 'to: kotlin.Int declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
                RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, to: kotlin.Int): kotlin.Int declared in <root>'
                  TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
                    CALL 'public final fun get (index: kotlin.Int): kotlin.Int declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Int origin=null
                      ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
                      ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
  FUN ATOMICFU_GENERATED_FUNCTION name:topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Long visibility:private modality:FINAL returnType:kotlin.Long [inline]
    VALUE_PARAMETER kind:Regular name:handler$atomicfu index:0 type:kotlin.concurrent.AtomicLongArray
    VALUE_PARAMETER kind:Regular name:index$atomicfu index:1 type:kotlin.Int
    VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Long
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Long (handler$atomicfu: kotlin.concurrent.AtomicLongArray, index$atomicfu: kotlin.Int, to: kotlin.Long): kotlin.Long declared in <root>'
        CALL 'private final fun loop$atomicfu$ATOMIC_ARRAY$Long (handler$atomicfu: kotlin.concurrent.AtomicLongArray, index$atomicfu: kotlin.Int, action$atomicfu: kotlin.Function1<kotlin.Long, kotlin.Unit>): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
          ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicLongArray declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Long' type=kotlin.concurrent.AtomicLongArray origin=null
          ARG index$atomicfu: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Long' type=kotlin.Int origin=null
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Long, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Long
              BLOCK_BODY
                CALL 'public final fun set (index: kotlin.Int, newValue: kotlin.Long): kotlin.Unit declared in kotlin.concurrent.AtomicLongArray' type=kotlin.Unit origin=null
                  ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicLongArray declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Long' type=kotlin.concurrent.AtomicLongArray origin=null
                  ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Long' type=kotlin.Int origin=null
                  ARG newValue: CALL 'public final fun plus (other: kotlin.Long): kotlin.Long declared in kotlin.Long' type=kotlin.Long origin=PLUS
                    ARG <this>: GET_VAR 'cur: kotlin.Long declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Long.<anonymous>' type=kotlin.Long origin=null
                    ARG other: GET_VAR 'to: kotlin.Long declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Long' type=kotlin.Long origin=null
                RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Long (handler$atomicfu: kotlin.concurrent.AtomicLongArray, index$atomicfu: kotlin.Int, to: kotlin.Long): kotlin.Long declared in <root>'
                  TYPE_OP type=kotlin.Long origin=CAST typeOperand=kotlin.Long
                    CALL 'public final fun get (index: kotlin.Int): kotlin.Long declared in kotlin.concurrent.AtomicLongArray' type=kotlin.Long origin=null
                      ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicLongArray declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Long' type=kotlin.concurrent.AtomicLongArray origin=null
                      ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.topLevelExtensionLoop$atomicfu$ATOMIC_ARRAY$Long' type=kotlin.Int origin=null
  FUN ATOMICFU_GENERATED_FUNCTION name:topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Any visibility:private modality:FINAL returnType:kotlin.String [inline]
    VALUE_PARAMETER kind:Regular name:handler$atomicfu index:0 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> [crossinline]
    VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.String
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Any (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>>, to: kotlin.String): kotlin.String declared in <root>'
        CALL 'private final fun loop$atomicfu$NATIVE_PROPERTY_REF$Any (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>>, action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Unit>): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
          ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> declared in <root>.topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> origin=null
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.String, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.String
              BLOCK_BODY
                CALL 'internal final fun atomicSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicSetField>, newValue: T of kotlin.concurrent.atomicSetField): kotlin.Unit declared in kotlin.concurrent' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.Any?
                  ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                    ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> declared in <root>.topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> origin=null
                  ARG newValue: CALL 'public final fun plus (other: kotlin.Any?): kotlin.String declared in kotlin.String' type=kotlin.String origin=PLUS
                    ARG <this>: GET_VAR 'cur: kotlin.String declared in <root>.topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Any.<anonymous>' type=kotlin.String origin=null
                    ARG other: GET_VAR 'to: kotlin.String declared in <root>.topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.String origin=null
                RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Any (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>>, to: kotlin.String): kotlin.String declared in <root>'
                  TYPE_OP type=kotlin.Any? origin=CAST typeOperand=kotlin.Any?
                    CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                      TYPE_ARG T: kotlin.Any?
                      ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                        ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> declared in <root>.topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> origin=null
  FUN ATOMICFU_GENERATED_FUNCTION name:topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Boolean visibility:private modality:FINAL returnType:kotlin.Boolean [inline]
    VALUE_PARAMETER kind:Regular name:handler$atomicfu index:0 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Boolean>> [crossinline]
    VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Boolean
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Boolean (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Boolean>>, to: kotlin.Boolean): kotlin.Boolean declared in <root>'
        CALL 'private final fun loop$atomicfu$NATIVE_PROPERTY_REF$Boolean (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Boolean>>, action$atomicfu: kotlin.Function1<kotlin.Boolean, kotlin.Unit>): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
          ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Boolean>> declared in <root>.topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Boolean' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Boolean>> origin=null
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Boolean, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Boolean
              BLOCK_BODY
                CALL 'internal final fun atomicSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicSetField>, newValue: T of kotlin.concurrent.atomicSetField): kotlin.Unit declared in kotlin.concurrent' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.Boolean
                  ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                    ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Boolean>> declared in <root>.topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Boolean' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Boolean>> origin=null
                  ARG newValue: GET_VAR 'to: kotlin.Boolean declared in <root>.topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Boolean' type=kotlin.Boolean origin=null
                RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Boolean (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Boolean>>, to: kotlin.Boolean): kotlin.Boolean declared in <root>'
                  TYPE_OP type=kotlin.Boolean origin=CAST typeOperand=kotlin.Boolean
                    CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                      TYPE_ARG T: kotlin.Boolean
                      ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                        ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Boolean>> declared in <root>.topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Boolean' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Boolean>> origin=null
  FUN ATOMICFU_GENERATED_FUNCTION name:topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Int visibility:private modality:FINAL returnType:kotlin.Int [inline]
    VALUE_PARAMETER kind:Regular name:handler$atomicfu index:0 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> [crossinline]
    VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Int
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, to: kotlin.Int): kotlin.Int declared in <root>'
        CALL 'private final fun loop$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
          ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
              BLOCK_BODY
                CALL 'internal final fun atomicSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicSetField>, newValue: T of kotlin.concurrent.atomicSetField): kotlin.Unit declared in kotlin.concurrent' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.Int
                  ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                    ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
                  ARG newValue: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
                    ARG <this>: GET_VAR 'cur: kotlin.Int declared in <root>.topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Int.<anonymous>' type=kotlin.Int origin=null
                    ARG other: GET_VAR 'to: kotlin.Int declared in <root>.topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Int origin=null
                RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, to: kotlin.Int): kotlin.Int declared in <root>'
                  TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
                    CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                      TYPE_ARG T: kotlin.Int
                      ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                        ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
  FUN ATOMICFU_GENERATED_FUNCTION name:topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Long visibility:private modality:FINAL returnType:kotlin.Long [inline]
    VALUE_PARAMETER kind:Regular name:handler$atomicfu index:0 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Long>> [crossinline]
    VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Long
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Long (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Long>>, to: kotlin.Long): kotlin.Long declared in <root>'
        CALL 'private final fun loop$atomicfu$NATIVE_PROPERTY_REF$Long (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Long>>, action$atomicfu: kotlin.Function1<kotlin.Long, kotlin.Unit>): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
          ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Long>> declared in <root>.topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Long' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Long>> origin=null
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Long, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Long
              BLOCK_BODY
                CALL 'internal final fun atomicSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicSetField>, newValue: T of kotlin.concurrent.atomicSetField): kotlin.Unit declared in kotlin.concurrent' type=kotlin.Unit origin=null
                  TYPE_ARG T: kotlin.Long
                  ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                    ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Long>> declared in <root>.topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Long' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Long>> origin=null
                  ARG newValue: CALL 'public final fun plus (other: kotlin.Long): kotlin.Long declared in kotlin.Long' type=kotlin.Long origin=PLUS
                    ARG <this>: GET_VAR 'cur: kotlin.Long declared in <root>.topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Long.<anonymous>' type=kotlin.Long origin=null
                    ARG other: GET_VAR 'to: kotlin.Long declared in <root>.topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Long' type=kotlin.Long origin=null
                RETURN type=kotlin.Nothing from='private final fun topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Long (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Long>>, to: kotlin.Long): kotlin.Long declared in <root>'
                  TYPE_OP type=kotlin.Long origin=CAST typeOperand=kotlin.Long
                    CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                      TYPE_ARG T: kotlin.Long
                      ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                        ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Long>> declared in <root>.topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Long' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Long>> origin=null
  FUN name:box visibility:public modality:FINAL returnType:kotlin.String
    BLOCK_BODY
      VAR name:testClass type:<root>.LoopTest [val]
        CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.LoopTest' type=<root>.LoopTest origin=null
      CALL 'public final fun testIntExtensionLoops (): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
        ARG <this>: GET_VAR 'val testClass: <root>.LoopTest declared in <root>.box' type=<root>.LoopTest origin=null
      CALL 'public final fun testTopLevelExtensionLoop (): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        CONST String type=kotlin.String value="OK"
  FUN name:testTopLevelExtensionLoop visibility:public modality:FINAL returnType:kotlin.Unit
    BLOCK_BODY
      CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
        TYPE_ARG T: kotlin.Int
        ARG expected: CONST Int type=kotlin.Int value=110
        ARG actual: CALL 'private final fun topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, to: kotlin.Int): kotlin.Int declared in <root>' type=kotlin.Int origin=null
          ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=LAMBDA
            FUN ATOMICFU_GENERATED_FUNCTION name:<a$volatile-getter> visibility:local modality:FINAL returnType:kotlin.reflect.KMutableProperty0<kotlin.Int> [inline]
              BLOCK_BODY
                RETURN type=kotlin.Nothing from='local final fun <a$volatile-getter> (): kotlin.reflect.KMutableProperty0<kotlin.Int> declared in <root>.testTopLevelExtensionLoop'
                  PROPERTY_REFERENCE 'private final a$volatile: kotlin.Int declared in <root>' field='FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private [static] declared in <root>' getter='private final fun <get-a$volatile> (): kotlin.Int declared in <root>' setter='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
          ARG to: CONST Int type=kotlin.Int value=100
      CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
        TYPE_ARG T: kotlin.Long
        ARG expected: CONST Long type=kotlin.Long value=110
        ARG actual: CALL 'private final fun topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Long (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Long>>, to: kotlin.Long): kotlin.Long declared in <root>' type=kotlin.Long origin=null
          ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Long>> origin=LAMBDA
            FUN ATOMICFU_GENERATED_FUNCTION name:<l$volatile-getter> visibility:local modality:FINAL returnType:kotlin.reflect.KMutableProperty0<kotlin.Long> [inline]
              BLOCK_BODY
                RETURN type=kotlin.Nothing from='local final fun <l$volatile-getter> (): kotlin.reflect.KMutableProperty0<kotlin.Long> declared in <root>.testTopLevelExtensionLoop'
                  PROPERTY_REFERENCE 'private final l$volatile: kotlin.Long declared in <root>' field='FIELD ATOMICFU_GENERATED_FIELD name:l$volatile type:kotlin.Long visibility:private [static] declared in <root>' getter='private final fun <get-l$volatile> (): kotlin.Long declared in <root>' setter='private final fun <set-l$volatile> (value: kotlin.Long): kotlin.Unit declared in <root>' type=kotlin.reflect.KMutableProperty0<kotlin.Long> origin=null
          ARG to: CONST Long type=kotlin.Long value=100
      CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
        TYPE_ARG T: kotlin.Boolean
        ARG expected: CONST Boolean type=kotlin.Boolean value=true
        ARG actual: CALL 'private final fun topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Boolean (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Boolean>>, to: kotlin.Boolean): kotlin.Boolean declared in <root>' type=kotlin.Boolean origin=null
          ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Boolean>> origin=LAMBDA
            FUN ATOMICFU_GENERATED_FUNCTION name:<b$volatile-getter> visibility:local modality:FINAL returnType:kotlin.reflect.KMutableProperty0<kotlin.Boolean> [inline]
              BLOCK_BODY
                RETURN type=kotlin.Nothing from='local final fun <b$volatile-getter> (): kotlin.reflect.KMutableProperty0<kotlin.Boolean> declared in <root>.testTopLevelExtensionLoop'
                  PROPERTY_REFERENCE 'private final b$volatile: kotlin.Boolean declared in <root>' field='FIELD ATOMICFU_GENERATED_FIELD name:b$volatile type:kotlin.Boolean visibility:private [static] declared in <root>' getter='private final fun <get-b$volatile> (): kotlin.Boolean declared in <root>' setter='private final fun <set-b$volatile> (value: kotlin.Boolean): kotlin.Unit declared in <root>' type=kotlin.reflect.KMutableProperty0<kotlin.Boolean> origin=null
          ARG to: CONST Boolean type=kotlin.Boolean value=true
      CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
        TYPE_ARG T: kotlin.String
        ARG expected: CONST String type=kotlin.String value="aaattt"
        ARG actual: CALL 'private final fun topLevelExtensionLoop$atomicfu$NATIVE_PROPERTY_REF$Any (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>>, to: kotlin.String): kotlin.String declared in <root>' type=kotlin.String origin=null
          ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> origin=LAMBDA
            FUN ATOMICFU_GENERATED_FUNCTION name:<ref$volatile-getter> visibility:local modality:FINAL returnType:kotlin.reflect.KMutableProperty0<kotlin.Any?> [inline]
              BLOCK_BODY
                RETURN type=kotlin.Nothing from='local final fun <ref$volatile-getter> (): kotlin.reflect.KMutableProperty0<kotlin.Any?> declared in <root>.testTopLevelExtensionLoop'
                  PROPERTY_REFERENCE 'private final ref$volatile: kotlin.Any? declared in <root>' field='FIELD ATOMICFU_GENERATED_FIELD name:ref$volatile type:kotlin.Any? visibility:private [static] declared in <root>' getter='private final fun <get-ref$volatile> (): kotlin.Any? declared in <root>' setter='private final fun <set-ref$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>' type=kotlin.reflect.KMutableProperty0<kotlin.Any?> origin=null
          ARG to: CONST String type=kotlin.String value="ttt"
