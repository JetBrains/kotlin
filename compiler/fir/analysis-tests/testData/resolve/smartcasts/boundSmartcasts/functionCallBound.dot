digraph functionCallBound_kt {
    graph [nodesep=3]
    node [shape=box penwidth=2]
    edge [penwidth=2]

    subgraph cluster_0 {
        color=red
        0 [label="Enter function <init>" style="filled" fillcolor=red];
        2 [label="Delegated constructor call: super<R|kotlin/Any|>()"];
        1 [label="Exit function <init>" style="filled" fillcolor=red];
    }
    0 -> {2};
    2 -> {1};

    subgraph cluster_1 {
        color=red
        3 [label="Enter class Base" style="filled" fillcolor=red];
        4 [label="Exit class Base" style="filled" fillcolor=red];
    }
    3 -> {4} [color=green];

    subgraph cluster_2 {
        color=red
        5 [label="Enter function <init>" style="filled" fillcolor=red];
        7 [label="Delegated constructor call: super<R|Base|>()"];
        6 [label="Exit function <init>" style="filled" fillcolor=red];
    }
    5 -> {7};
    7 -> {6};

    subgraph cluster_3 {
        color=red
        13 [label="Enter class Sub" style="filled" fillcolor=red];
        subgraph cluster_4 {
            color=blue
            8 [label="Enter function getter" style="filled" fillcolor=red];
            9 [label="Exit function getter" style="filled" fillcolor=red];
        }
        subgraph cluster_5 {
            color=blue
            10 [label="Enter property" style="filled" fillcolor=red];
            12 [label="Access variable R|<local>/data|"];
            11 [label="Exit property" style="filled" fillcolor=red];
        }
        14 [label="Exit class Sub" style="filled" fillcolor=red];
    }
    13 -> {10} [color=green];
    10 -> {12};
    11 -> {14} [color=green];
    12 -> {11};
    8 -> {9};

    subgraph cluster_6 {
        color=red
        15 [label="Enter function isOk" style="filled" fillcolor=red];
        17 [label="Const: Boolean(true)"];
        18 [label="Jump: ^isOk Boolean(true)"];
        19 [label="Stub" style="filled" fillcolor=gray];
        16 [label="Exit function isOk" style="filled" fillcolor=red];
    }
    15 -> {17};
    17 -> {18};
    18 -> {16};
    18 -> {19} [style=dotted];
    19 -> {16} [style=dotted];

    subgraph cluster_7 {
        color=red
        20 [label="Enter function check" style="filled" fillcolor=red];
        subgraph cluster_8 {
            color=blue
            22 [label="Enter when"];
            subgraph cluster_9 {
                color=blue
                24 [label="Enter when branch condition "];
                25 [label="Access variable R|<local>/base|"];
                26 [label="Type operator: (R|<local>/base| as? R|Sub|)"];
                27 [label="Enter safe call"];
                29 [label="Function call: (R|<local>/base| as? R|Sub|)?.R|/isOk|()"];
                28 [label="Exit safe call"];
                30 [label="Const: Boolean(true)"];
                31 [label="Operator =="];
                32 [label="Exit when branch condition"];
            }
            subgraph cluster_10 {
                color=blue
                39 [label="Enter when branch condition else"];
                40 [label="Exit when branch condition"];
            }
            41 [label="Enter when branch result"];
            subgraph cluster_11 {
                color=blue
                42 [label="Enter block"];
                43 [label="Access variable R|<local>/base|"];
                44 [label="Exit block"];
            }
            45 [label="Exit when branch result"];
            33 [label="Enter when branch result"];
            subgraph cluster_12 {
                color=blue
                34 [label="Enter block"];
                35 [label="Access variable R|<local>/base|"];
                36 [label="Access variable R|/Sub.data|"];
                37 [label="Exit block"];
            }
            38 [label="Exit when branch result"];
            23 [label="Exit when"];
        }
        46 [label="Jump: ^check when () {
    ==((R|<local>/base| as? R|Sub|)?.R|/isOk|(), Boolean(true)) ->  {
        R|<local>/base|.R|/Sub.data|
    }
    else ->  {
        R|<local>/base|
    }
}
"];
        47 [label="Stub" style="filled" fillcolor=gray];
        21 [label="Exit function check" style="filled" fillcolor=red];
    }
    20 -> {22};
    22 -> {24};
    23 -> {46};
    24 -> {25};
    25 -> {26};
    26 -> {27 28};
    27 -> {29};
    28 -> {30};
    29 -> {28};
    30 -> {31};
    31 -> {32};
    32 -> {33 39};
    33 -> {34};
    34 -> {35};
    35 -> {36};
    36 -> {37};
    37 -> {38};
    38 -> {23};
    39 -> {40};
    40 -> {41};
    41 -> {42};
    42 -> {43};
    43 -> {44};
    44 -> {45};
    45 -> {23};
    46 -> {21};
    46 -> {47} [style=dotted];
    47 -> {21} [style=dotted];

}
