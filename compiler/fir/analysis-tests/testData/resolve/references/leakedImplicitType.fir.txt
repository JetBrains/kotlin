FILE: leakedImplicitType.kt
    public final class Foo : R|kotlin/Any| {
        public constructor(): R|Foo| {
            super<R|kotlin/Any|>()
        }

        public final fun bar(): R|kotlin/Unit| {
        }

        public final fun f(): <ERROR TYPE REF: Unresolved reference: bar> {
            ^f <Unresolved name: Unresolved>#()::<Unresolved reference: bar>#
        }

    }
    public abstract interface IA : R|kotlin/Any| {
    }
    public abstract interface IB : R|IA| {
    }
    public final fun R|IA|.extFun(x: R|IB|): R|kotlin/Unit| {
    }
    public final fun R|IB|.extFun(x: R|IA|): R|kotlin/Unit| {
    }
    public final fun testWithExpectedType(): R|kotlin/Unit| {
        lval extFun_AA_B: R|IA.(IA) -> kotlin/Unit| = Q|IB|::<Unresolved reference: extFun>#
    }
