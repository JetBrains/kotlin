public final class A {
    public method <init>(): void
}


public final class B {
    public method <init>(): void
}


public final class DelegatesKt {
    private synthetic final static field $$delegatedProperties: kotlin.reflect.KProperty[]
    private final static @org.jetbrains.annotations.NotNull field s$delegate$1: TestDelegate
    private final static @org.jetbrains.annotations.NotNull field s$delegate: TestDelegate
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
    public final static @org.jetbrains.annotations.NotNull method getS(@org.jetbrains.annotations.NotNull p0: A): java.lang.String
    public final static @org.jetbrains.annotations.NotNull method getS(@org.jetbrains.annotations.NotNull p0: B): java.lang.String
}


public class TestDelegate {
    private final field initializer: kotlin.jvm.functions.Function0
    private field value: java.lang.Object
    public method <init>(@org.jetbrains.annotations.NotNull p0: kotlin.jvm.functions.Function0): void
    public @org.jetbrains.annotations.NotNull method getValue(@org.jetbrains.annotations.Nullable p0: java.lang.Object, @org.jetbrains.annotations.NotNull p1: kotlin.reflect.KProperty): java.lang.Object
    public method setValue(@org.jetbrains.annotations.Nullable p0: java.lang.Object, @org.jetbrains.annotations.NotNull p1: kotlin.reflect.KProperty, @org.jetbrains.annotations.NotNull p2: java.lang.Object): void
}
