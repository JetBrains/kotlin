// FIX: Wrap call with 'coroutineScope { ... }'

import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.CoroutineContext
import kotlinx.coroutines.coroutineScope

fun use(context: CoroutineContext) {}

suspend fun CoroutineScope.foo() {
    use(coroutineScope { coroutineContext })
}