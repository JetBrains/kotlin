/shadowing.kt:(23,34): info: Generated Viper text for shadowLocal:
method f$shadowLocal$TF$() returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$unitType())
{
  var l0$foo: Ref
  var l0$x: Ref
  ret$0 := df$rt$unitValue()
  l0$x := df$rt$intToRef(0)
  if (df$rt$intFromRef(l0$x) == 0) {
    var l2$x: Ref
    l0$foo := l0$x
    l2$x := df$rt$intToRef(1)
    l0$foo := l2$x
  } else {
    var l3$x: Ref
    l0$foo := l0$x
    l3$x := df$rt$intToRef(2)
    l0$foo := l3$x
  }
  l0$foo := l0$x
  label lbl$ret$0
}

/shadowing.kt:(232,243): info: Generated Viper text for shadowParam:
method f$shadowParam$TF$T$Int(p$x: Ref) returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$unitType())
{
  var l0$foo: Ref
  var l0$x: Ref
  inhale df$rt$isSubtype(df$rt$typeOf(p$x), df$rt$intType())
  ret$0 := df$rt$unitValue()
  l0$foo := p$x
  l0$x := df$rt$intToRef(0)
  l0$foo := l0$x
  label lbl$ret$0
}

/shadowing.kt:(322,334): info: Generated Viper text for shadowNested:
method f$shadowNested$TF$T$Int(p$x: Ref) returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$unitType())
{
  var l0$foo: Ref
  var l0$x: Ref
  inhale df$rt$isSubtype(df$rt$typeOf(p$x), df$rt$intType())
  ret$0 := df$rt$unitValue()
  l0$foo := p$x
  l0$x := df$rt$intToRef(0)
  l0$foo := l0$x
  if (true) {
    var l2$x: Ref
    var anon$0: Ref
    l0$foo := l0$x
    l2$x := df$rt$intToRef(1)
    l0$foo := l2$x
    label lbl$continue$0
    anon$0 := df$rt$boolToRef(true)
    while (df$rt$boolFromRef(anon$0))
      invariant df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$unitType())
    {
      var l3$x: Ref
      l0$foo := l2$x
      l3$x := df$rt$intToRef(2)
      l0$foo := l3$x
      anon$0 := df$rt$boolToRef(true)
    }
    label lbl$break$0
    l0$foo := l2$x
  }
  l0$foo := l0$x
  label lbl$ret$0
}
