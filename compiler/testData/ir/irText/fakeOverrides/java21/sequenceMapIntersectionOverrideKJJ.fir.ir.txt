FILE fqName:<root> fileName:/1.kt
  CLASS CLASS name:A modality:ABSTRACT visibility:public superTypes:[java.util.HashMap<kotlin.Int, kotlin.Int>; java.util.SequencedMap<kotlin.Int, kotlin.Int>]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.A
    CONSTRUCTOR visibility:public <> () returnType:<root>.A [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in java.util.HashMap'
          <K>: kotlin.Int
          <V>: kotlin.Int
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:A modality:ABSTRACT visibility:public superTypes:[java.util.HashMap<kotlin.Int, kotlin.Int>; java.util.SequencedMap<kotlin.Int, kotlin.Int>]'
    FUN FAKE_OVERRIDE name:clear visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>) returnType:kotlin.Unit [fake_override]
      overridden:
        public open fun clear (): kotlin.Unit declared in java.util.HashMap
        public abstract fun clear (): kotlin.Unit declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
    FUN FAKE_OVERRIDE name:clone visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>) returnType:@[EnhancedNullability] kotlin.Any [fake_override]
      overridden:
        public open fun clone (): @[EnhancedNullability] kotlin.Any declared in java.util.HashMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
    FUN FAKE_OVERRIDE name:compute visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int, p1:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] kotlin.Int, in @[EnhancedNullability] kotlin.Int?, out @[EnhancedNullability] kotlin.Int?>) returnType:@[EnhancedNullability] kotlin.Int? [fake_override]
      overridden:
        public open fun compute (p0: @[EnhancedNullability] K of java.util.HashMap, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] K of java.util.HashMap, in @[EnhancedNullability] V of java.util.HashMap?, out @[EnhancedNullability] V of java.util.HashMap?>): @[EnhancedNullability] V of java.util.HashMap? declared in java.util.HashMap
        public open fun compute (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, in @[EnhancedNullability] V of java.util.SequencedMap?, out @[EnhancedNullability] V of java.util.SequencedMap?>): @[EnhancedNullability] V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] kotlin.Int, in @[EnhancedNullability] kotlin.Int?, out @[EnhancedNullability] kotlin.Int?>
    FUN FAKE_OVERRIDE name:computeIfAbsent visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int, p1:@[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] kotlin.Int, out @[EnhancedNullability] kotlin.Int>) returnType:@[EnhancedNullability] kotlin.Int [fake_override]
      overridden:
        public open fun computeIfAbsent (p0: @[EnhancedNullability] K of java.util.HashMap, p1: @[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] K of java.util.HashMap, out @[EnhancedNullability] V of java.util.HashMap>): @[EnhancedNullability] V of java.util.HashMap declared in java.util.HashMap
        public open fun computeIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, p1: @[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, out @[EnhancedNullability] @[FlexibleNullability] V of java.util.SequencedMap?>): @[EnhancedNullability] @[FlexibleNullability] V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] kotlin.Int, out @[EnhancedNullability] kotlin.Int>
    FUN FAKE_OVERRIDE name:computeIfPresent visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int, p1:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] kotlin.Int, in @[EnhancedNullability] kotlin.Int, out @[EnhancedNullability] kotlin.Int?>) returnType:@[EnhancedNullability] kotlin.Int? [fake_override]
      overridden:
        public open fun computeIfPresent (p0: @[EnhancedNullability] K of java.util.HashMap, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] K of java.util.HashMap, in @[EnhancedNullability] {V of java.util.HashMap & Any}, out @[EnhancedNullability] V of java.util.HashMap?>): @[EnhancedNullability] V of java.util.HashMap? declared in java.util.HashMap
        public open fun computeIfPresent (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, in @[EnhancedNullability] {V of java.util.SequencedMap & Any}, out @[EnhancedNullability] V of java.util.SequencedMap?>): @[EnhancedNullability] V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] kotlin.Int, in @[EnhancedNullability] kotlin.Int, out @[EnhancedNullability] kotlin.Int?>
    FUN FAKE_OVERRIDE name:containsKey visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int) returnType:kotlin.Boolean [fake_override]
      overridden:
        public open fun containsKey (p0: @[EnhancedNullability] K of java.util.HashMap): kotlin.Boolean declared in java.util.HashMap
        public abstract fun containsKey (key: @[FlexibleNullability] K of java.util.SequencedMap?): kotlin.Boolean declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
    FUN FAKE_OVERRIDE name:containsValue visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int) returnType:kotlin.Boolean [fake_override]
      overridden:
        public open fun containsValue (p0: @[EnhancedNullability] V of java.util.HashMap): kotlin.Boolean declared in java.util.HashMap
        public abstract fun containsValue (value: @[FlexibleNullability] V of java.util.SequencedMap?): kotlin.Boolean declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:java.util.AbstractMap<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>, p0:@[EnhancedNullability] kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (p0: @[EnhancedNullability] kotlin.Any?): kotlin.Boolean declared in java.util.HashMap
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.AbstractMap<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Any?
    FUN FAKE_OVERRIDE name:firstEntry visibility:public modality:OPEN <> ($this:java.util.SequencedMap<kotlin.Int, kotlin.Int>) returnType:@[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>? [fake_override]
      overridden:
        public open fun firstEntry (): @[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SequencedMap?, @[FlexibleNullability] V of java.util.SequencedMap?>? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SequencedMap<kotlin.Int, kotlin.Int>
    FUN FAKE_OVERRIDE name:forEach visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] kotlin.Int, in @[EnhancedNullability] kotlin.Int>) returnType:kotlin.Unit [fake_override]
      overridden:
        public open fun forEach (p0: @[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] K of java.util.HashMap, in @[EnhancedNullability] V of java.util.HashMap>): kotlin.Unit declared in java.util.HashMap
        public open fun forEach (p0: @[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, in @[EnhancedNullability] @[FlexibleNullability] V of java.util.SequencedMap?>): kotlin.Unit declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] kotlin.Int, in @[EnhancedNullability] kotlin.Int>
    FUN FAKE_OVERRIDE name:get visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int) returnType:@[EnhancedNullability] kotlin.Int? [fake_override,operator]
      overridden:
        public open fun get (p0: @[EnhancedNullability] K of java.util.HashMap): @[EnhancedNullability] V of java.util.HashMap? declared in java.util.HashMap
        public abstract fun get (key: @[FlexibleNullability] K of java.util.SequencedMap?): V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
    FUN FAKE_OVERRIDE name:getOrDefault visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int, p1:@[EnhancedNullability] kotlin.Int) returnType:@[EnhancedNullability] kotlin.Int [fake_override]
      overridden:
        public open fun getOrDefault (p0: @[EnhancedNullability] K of java.util.HashMap, p1: @[EnhancedNullability] V of java.util.HashMap): @[EnhancedNullability] V of java.util.HashMap declared in java.util.HashMap
        public open fun getOrDefault (key: @[FlexibleNullability] K of java.util.SequencedMap?, defaultValue: @[FlexibleNullability] V of java.util.SequencedMap?): @[FlexibleNullability] V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] kotlin.Int
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:java.util.AbstractMap<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in java.util.HashMap
        public open fun hashCode (): kotlin.Int declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.AbstractMap<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>
    FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>) returnType:kotlin.Boolean [fake_override]
      overridden:
        public open fun isEmpty (): kotlin.Boolean declared in java.util.HashMap
        public abstract fun isEmpty (): kotlin.Boolean declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
    FUN FAKE_OVERRIDE name:lastEntry visibility:public modality:OPEN <> ($this:java.util.SequencedMap<kotlin.Int, kotlin.Int>) returnType:@[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>? [fake_override]
      overridden:
        public open fun lastEntry (): @[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SequencedMap?, @[FlexibleNullability] V of java.util.SequencedMap?>? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SequencedMap<kotlin.Int, kotlin.Int>
    FUN FAKE_OVERRIDE name:merge visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int, p1:@[EnhancedNullability] kotlin.Int, p2:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] kotlin.Int, in @[EnhancedNullability] kotlin.Int, out @[EnhancedNullability] kotlin.Int?>) returnType:@[EnhancedNullability] kotlin.Int? [fake_override]
      overridden:
        public open fun merge (p0: @[EnhancedNullability] K of java.util.HashMap, p1: @[EnhancedNullability] {V of java.util.HashMap & Any}, p2: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] {V of java.util.HashMap & Any}, in @[EnhancedNullability] {V of java.util.HashMap & Any}, out @[EnhancedNullability] V of java.util.HashMap?>): @[EnhancedNullability] V of java.util.HashMap? declared in java.util.HashMap
        public open fun merge (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, p1: @[EnhancedNullability] {V of java.util.SequencedMap & Any}, p2: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] {V of java.util.SequencedMap & Any}, in @[EnhancedNullability] {V of java.util.SequencedMap & Any}, out @[EnhancedNullability] V of java.util.SequencedMap?>): @[EnhancedNullability] V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p2 index:2 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] kotlin.Int, in @[EnhancedNullability] kotlin.Int, out @[EnhancedNullability] kotlin.Int?>
    FUN FAKE_OVERRIDE name:newHashMap visibility:public modality:OPEN <K, V> (p0:kotlin.Int) returnType:@[FlexibleNullability] java.util.HashMap<@[FlexibleNullability] K of <root>.A.newHashMap?, @[FlexibleNullability] V of <root>.A.newHashMap?>? [fake_override]
      overridden:
        public open fun newHashMap <K, V> (p0: kotlin.Int): @[FlexibleNullability] java.util.HashMap<@[FlexibleNullability] K of java.util.HashMap.newHashMap?, @[FlexibleNullability] V of java.util.HashMap.newHashMap?>? declared in java.util.HashMap
      TYPE_PARAMETER name:K index:0 variance: superTypes:[@[FlexibleNullability] kotlin.Any?] reified:false
      TYPE_PARAMETER name:V index:1 variance: superTypes:[@[FlexibleNullability] kotlin.Any?] reified:false
      VALUE_PARAMETER name:p0 index:0 type:kotlin.Int
    FUN FAKE_OVERRIDE name:pollFirstEntry visibility:public modality:OPEN <> ($this:java.util.SequencedMap<kotlin.Int, kotlin.Int>) returnType:@[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>? [fake_override]
      overridden:
        public open fun pollFirstEntry (): @[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SequencedMap?, @[FlexibleNullability] V of java.util.SequencedMap?>? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SequencedMap<kotlin.Int, kotlin.Int>
    FUN FAKE_OVERRIDE name:pollLastEntry visibility:public modality:OPEN <> ($this:java.util.SequencedMap<kotlin.Int, kotlin.Int>) returnType:@[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>? [fake_override]
      overridden:
        public open fun pollLastEntry (): @[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SequencedMap?, @[FlexibleNullability] V of java.util.SequencedMap?>? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SequencedMap<kotlin.Int, kotlin.Int>
    FUN FAKE_OVERRIDE name:put visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int, p1:@[EnhancedNullability] kotlin.Int) returnType:@[EnhancedNullability] kotlin.Int? [fake_override]
      overridden:
        public open fun put (p0: @[EnhancedNullability] K of java.util.HashMap, p1: @[EnhancedNullability] V of java.util.HashMap): @[EnhancedNullability] V of java.util.HashMap? declared in java.util.HashMap
        public abstract fun put (key: @[FlexibleNullability] K of java.util.SequencedMap?, value: @[FlexibleNullability] V of java.util.SequencedMap?): V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] kotlin.Int
    FUN FAKE_OVERRIDE name:putAll visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.collections.Map<out @[EnhancedNullability] kotlin.Int, out @[EnhancedNullability] kotlin.Int>) returnType:kotlin.Unit [fake_override]
      overridden:
        public open fun putAll (p0: @[EnhancedNullability] kotlin.collections.Map<out @[EnhancedNullability] K of java.util.HashMap, out @[EnhancedNullability] V of java.util.HashMap>): kotlin.Unit declared in java.util.HashMap
        public abstract fun putAll (from: kotlin.collections.Map<out @[FlexibleNullability] K of java.util.SequencedMap?, @[FlexibleNullability] V of java.util.SequencedMap?>): kotlin.Unit declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.collections.Map<out @[EnhancedNullability] kotlin.Int, out @[EnhancedNullability] kotlin.Int>
    FUN FAKE_OVERRIDE name:putFirst visibility:public modality:OPEN <> ($this:java.util.SequencedMap<kotlin.Int, kotlin.Int>, p0:@[FlexibleNullability] kotlin.Int?, p1:@[FlexibleNullability] kotlin.Int?) returnType:@[FlexibleNullability] kotlin.Int? [fake_override]
      overridden:
        public open fun putFirst (p0: @[FlexibleNullability] K of java.util.SequencedMap?, p1: @[FlexibleNullability] V of java.util.SequencedMap?): @[FlexibleNullability] V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SequencedMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[FlexibleNullability] kotlin.Int?
      VALUE_PARAMETER name:p1 index:1 type:@[FlexibleNullability] kotlin.Int?
    FUN FAKE_OVERRIDE name:putIfAbsent visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int, p1:@[EnhancedNullability] kotlin.Int) returnType:@[EnhancedNullability] kotlin.Int? [fake_override]
      overridden:
        public open fun putIfAbsent (p0: @[EnhancedNullability] K of java.util.HashMap, p1: @[EnhancedNullability] V of java.util.HashMap): @[EnhancedNullability] V of java.util.HashMap? declared in java.util.HashMap
        public open fun putIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, p1: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SequencedMap?): @[EnhancedNullability] V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] kotlin.Int
    FUN FAKE_OVERRIDE name:putLast visibility:public modality:OPEN <> ($this:java.util.SequencedMap<kotlin.Int, kotlin.Int>, p0:@[FlexibleNullability] kotlin.Int?, p1:@[FlexibleNullability] kotlin.Int?) returnType:@[FlexibleNullability] kotlin.Int? [fake_override]
      overridden:
        public open fun putLast (p0: @[FlexibleNullability] K of java.util.SequencedMap?, p1: @[FlexibleNullability] V of java.util.SequencedMap?): @[FlexibleNullability] V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SequencedMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[FlexibleNullability] kotlin.Int?
      VALUE_PARAMETER name:p1 index:1 type:@[FlexibleNullability] kotlin.Int?
    FUN FAKE_OVERRIDE name:remove visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int) returnType:@[EnhancedNullability] kotlin.Int? [fake_override]
      overridden:
        public open fun remove (p0: @[EnhancedNullability] K of java.util.HashMap): @[EnhancedNullability] V of java.util.HashMap? declared in java.util.HashMap
        public abstract fun remove (key: @[FlexibleNullability] K of java.util.SequencedMap?): V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
    FUN FAKE_OVERRIDE name:remove visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int, p1:@[EnhancedNullability] kotlin.Int) returnType:kotlin.Boolean [fake_override]
      overridden:
        public open fun remove (p0: @[EnhancedNullability] K of java.util.HashMap, p1: @[EnhancedNullability] V of java.util.HashMap): kotlin.Boolean declared in java.util.HashMap
        public open fun remove (key: @[FlexibleNullability] K of java.util.SequencedMap?, value: @[FlexibleNullability] V of java.util.SequencedMap?): kotlin.Boolean declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] kotlin.Int
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int, p1:@[EnhancedNullability] kotlin.Int) returnType:@[EnhancedNullability] kotlin.Int? [fake_override]
      overridden:
        public open fun replace (p0: @[EnhancedNullability] K of java.util.HashMap, p1: @[EnhancedNullability] V of java.util.HashMap): @[EnhancedNullability] V of java.util.HashMap? declared in java.util.HashMap
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, p1: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SequencedMap?): @[EnhancedNullability] V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] kotlin.Int
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int, p1:@[EnhancedNullability] kotlin.Int, p2:@[EnhancedNullability] kotlin.Int) returnType:kotlin.Boolean [fake_override]
      overridden:
        public open fun replace (p0: @[EnhancedNullability] K of java.util.HashMap, p1: @[EnhancedNullability] V of java.util.HashMap, p2: @[EnhancedNullability] V of java.util.HashMap): kotlin.Boolean declared in java.util.HashMap
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, p1: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SequencedMap?, p2: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SequencedMap?): kotlin.Boolean declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p2 index:2 type:@[EnhancedNullability] kotlin.Int
    FUN FAKE_OVERRIDE name:replaceAll visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] kotlin.Int, in @[EnhancedNullability] kotlin.Int, out @[EnhancedNullability] kotlin.Int>) returnType:kotlin.Unit [fake_override]
      overridden:
        public open fun replaceAll (p0: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] K of java.util.HashMap, in @[EnhancedNullability] V of java.util.HashMap, out @[EnhancedNullability] V of java.util.HashMap>): kotlin.Unit declared in java.util.HashMap
        public open fun replaceAll (p0: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, in @[EnhancedNullability] @[FlexibleNullability] V of java.util.SequencedMap?, out @[EnhancedNullability] @[FlexibleNullability] V of java.util.SequencedMap?>): kotlin.Unit declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] kotlin.Int, in @[EnhancedNullability] kotlin.Int, out @[EnhancedNullability] kotlin.Int>
    FUN FAKE_OVERRIDE name:reversed visibility:public modality:ABSTRACT <> ($this:java.util.SequencedMap<kotlin.Int, kotlin.Int>) returnType:@[FlexibleNullability] java.util.SequencedMap<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>? [fake_override]
      overridden:
        public abstract fun reversed (): @[FlexibleNullability] java.util.SequencedMap<@[FlexibleNullability] K of java.util.SequencedMap?, @[FlexibleNullability] V of java.util.SequencedMap?>? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SequencedMap<kotlin.Int, kotlin.Int>
    FUN FAKE_OVERRIDE name:sequencedEntrySet visibility:public modality:OPEN <> ($this:java.util.SequencedMap<kotlin.Int, kotlin.Int>) returnType:@[FlexibleNullability] java.util.SequencedSet<@[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>?>? [fake_override]
      overridden:
        public open fun sequencedEntrySet (): @[FlexibleNullability] java.util.SequencedSet<@[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SequencedMap?, @[FlexibleNullability] V of java.util.SequencedMap?>?>? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SequencedMap<kotlin.Int, kotlin.Int>
    FUN FAKE_OVERRIDE name:sequencedKeySet visibility:public modality:OPEN <> ($this:java.util.SequencedMap<kotlin.Int, kotlin.Int>) returnType:@[FlexibleNullability] java.util.SequencedSet<@[FlexibleNullability] kotlin.Int?>? [fake_override]
      overridden:
        public open fun sequencedKeySet (): @[FlexibleNullability] java.util.SequencedSet<@[FlexibleNullability] K of java.util.SequencedMap?>? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SequencedMap<kotlin.Int, kotlin.Int>
    FUN FAKE_OVERRIDE name:sequencedValues visibility:public modality:OPEN <> ($this:java.util.SequencedMap<kotlin.Int, kotlin.Int>) returnType:@[FlexibleNullability] java.util.SequencedCollection<@[FlexibleNullability] kotlin.Int?>? [fake_override]
      overridden:
        public open fun sequencedValues (): @[FlexibleNullability] java.util.SequencedCollection<@[FlexibleNullability] V of java.util.SequencedMap?>? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SequencedMap<kotlin.Int, kotlin.Int>
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:java.util.AbstractMap<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>) returnType:@[EnhancedNullability] kotlin.String [fake_override]
      overridden:
        public open fun toString (): @[EnhancedNullability] kotlin.String declared in java.util.HashMap
        public open fun toString (): kotlin.String declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.AbstractMap<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>
    PROPERTY FAKE_OVERRIDE name:entries visibility:public modality:OPEN [fake_override,val]
      overridden:
        public open entries: @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[EnhancedNullability] K of java.util.HashMap, @[EnhancedNullability] V of java.util.HashMap>> declared in java.util.HashMap
        public abstract entries: kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SequencedMap?, @[FlexibleNullability] V of java.util.SequencedMap?>> declared in java.util.SequencedMap
      FUN FAKE_OVERRIDE name:<get-entries> visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>) returnType:@[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[EnhancedNullability] kotlin.Int, @[EnhancedNullability] kotlin.Int>> [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:entries visibility:public modality:OPEN [fake_override,val]
        overridden:
          public open fun <get-entries> (): @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[EnhancedNullability] K of java.util.HashMap, @[EnhancedNullability] V of java.util.HashMap>> declared in java.util.HashMap
          public abstract fun <get-entries> (): kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SequencedMap?, @[FlexibleNullability] V of java.util.SequencedMap?>> declared in java.util.SequencedMap
        $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
    PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:OPEN [fake_override,val]
      overridden:
        public open keys: @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] K of java.util.HashMap> declared in java.util.HashMap
        public abstract keys: kotlin.collections.MutableSet<@[FlexibleNullability] K of java.util.SequencedMap?> declared in java.util.SequencedMap
      FUN FAKE_OVERRIDE name:<get-keys> visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>) returnType:@[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.Int> [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:OPEN [fake_override,val]
        overridden:
          public open fun <get-keys> (): @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] K of java.util.HashMap> declared in java.util.HashMap
          public abstract fun <get-keys> (): kotlin.collections.MutableSet<@[FlexibleNullability] K of java.util.SequencedMap?> declared in java.util.SequencedMap
        $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
    PROPERTY FAKE_OVERRIDE name:size visibility:public modality:OPEN [fake_override,val]
      overridden:
        public open size: kotlin.Int declared in java.util.HashMap
        public abstract size: kotlin.Int declared in java.util.SequencedMap
      FUN FAKE_OVERRIDE name:<get-size> visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>) returnType:kotlin.Int [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:size visibility:public modality:OPEN [fake_override,val]
        overridden:
          public open fun <get-size> (): kotlin.Int declared in java.util.HashMap
          public abstract fun <get-size> (): kotlin.Int declared in java.util.SequencedMap
        $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
    PROPERTY FAKE_OVERRIDE name:values visibility:public modality:OPEN [fake_override,val]
      overridden:
        public open values: @[EnhancedNullability] kotlin.collections.MutableCollection<@[EnhancedNullability] V of java.util.HashMap> declared in java.util.HashMap
        public abstract values: kotlin.collections.MutableCollection<@[FlexibleNullability] V of java.util.SequencedMap?> declared in java.util.SequencedMap
      FUN FAKE_OVERRIDE name:<get-values> visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>) returnType:@[EnhancedNullability] kotlin.collections.MutableCollection<@[EnhancedNullability] kotlin.Int> [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:values visibility:public modality:OPEN [fake_override,val]
        overridden:
          public open fun <get-values> (): @[EnhancedNullability] kotlin.collections.MutableCollection<@[EnhancedNullability] V of java.util.HashMap> declared in java.util.HashMap
          public abstract fun <get-values> (): kotlin.collections.MutableCollection<@[FlexibleNullability] V of java.util.SequencedMap?> declared in java.util.SequencedMap
        $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
  CLASS CLASS name:B modality:FINAL visibility:public superTypes:[java.util.HashMap<kotlin.Int, kotlin.Int>; java.util.SequencedMap<kotlin.Int, kotlin.Int>]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.B
    CONSTRUCTOR visibility:public <> () returnType:<root>.B [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in java.util.HashMap'
          <K>: kotlin.Int
          <V>: kotlin.Int
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:B modality:FINAL visibility:public superTypes:[java.util.HashMap<kotlin.Int, kotlin.Int>; java.util.SequencedMap<kotlin.Int, kotlin.Int>]'
    FUN FAKE_OVERRIDE name:clear visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>) returnType:kotlin.Unit [fake_override]
      overridden:
        public open fun clear (): kotlin.Unit declared in java.util.HashMap
        public abstract fun clear (): kotlin.Unit declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
    FUN FAKE_OVERRIDE name:clone visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>) returnType:@[EnhancedNullability] kotlin.Any [fake_override]
      overridden:
        public open fun clone (): @[EnhancedNullability] kotlin.Any declared in java.util.HashMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
    FUN FAKE_OVERRIDE name:compute visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int, p1:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] kotlin.Int, in @[EnhancedNullability] kotlin.Int?, out @[EnhancedNullability] kotlin.Int?>) returnType:@[EnhancedNullability] kotlin.Int? [fake_override]
      overridden:
        public open fun compute (p0: @[EnhancedNullability] K of java.util.HashMap, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] K of java.util.HashMap, in @[EnhancedNullability] V of java.util.HashMap?, out @[EnhancedNullability] V of java.util.HashMap?>): @[EnhancedNullability] V of java.util.HashMap? declared in java.util.HashMap
        public open fun compute (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, in @[EnhancedNullability] V of java.util.SequencedMap?, out @[EnhancedNullability] V of java.util.SequencedMap?>): @[EnhancedNullability] V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] kotlin.Int, in @[EnhancedNullability] kotlin.Int?, out @[EnhancedNullability] kotlin.Int?>
    FUN FAKE_OVERRIDE name:computeIfAbsent visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int, p1:@[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] kotlin.Int, out @[EnhancedNullability] kotlin.Int>) returnType:@[EnhancedNullability] kotlin.Int [fake_override]
      overridden:
        public open fun computeIfAbsent (p0: @[EnhancedNullability] K of java.util.HashMap, p1: @[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] K of java.util.HashMap, out @[EnhancedNullability] V of java.util.HashMap>): @[EnhancedNullability] V of java.util.HashMap declared in java.util.HashMap
        public open fun computeIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, p1: @[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, out @[EnhancedNullability] @[FlexibleNullability] V of java.util.SequencedMap?>): @[EnhancedNullability] @[FlexibleNullability] V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] kotlin.Int, out @[EnhancedNullability] kotlin.Int>
    FUN FAKE_OVERRIDE name:computeIfPresent visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int, p1:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] kotlin.Int, in @[EnhancedNullability] kotlin.Int, out @[EnhancedNullability] kotlin.Int?>) returnType:@[EnhancedNullability] kotlin.Int? [fake_override]
      overridden:
        public open fun computeIfPresent (p0: @[EnhancedNullability] K of java.util.HashMap, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] K of java.util.HashMap, in @[EnhancedNullability] {V of java.util.HashMap & Any}, out @[EnhancedNullability] V of java.util.HashMap?>): @[EnhancedNullability] V of java.util.HashMap? declared in java.util.HashMap
        public open fun computeIfPresent (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, in @[EnhancedNullability] {V of java.util.SequencedMap & Any}, out @[EnhancedNullability] V of java.util.SequencedMap?>): @[EnhancedNullability] V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] kotlin.Int, in @[EnhancedNullability] kotlin.Int, out @[EnhancedNullability] kotlin.Int?>
    FUN FAKE_OVERRIDE name:containsKey visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int) returnType:kotlin.Boolean [fake_override]
      overridden:
        public open fun containsKey (p0: @[EnhancedNullability] K of java.util.HashMap): kotlin.Boolean declared in java.util.HashMap
        public abstract fun containsKey (key: @[FlexibleNullability] K of java.util.SequencedMap?): kotlin.Boolean declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
    FUN FAKE_OVERRIDE name:containsValue visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int) returnType:kotlin.Boolean [fake_override]
      overridden:
        public open fun containsValue (p0: @[EnhancedNullability] V of java.util.HashMap): kotlin.Boolean declared in java.util.HashMap
        public abstract fun containsValue (value: @[FlexibleNullability] V of java.util.SequencedMap?): kotlin.Boolean declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:java.util.AbstractMap<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>, p0:@[EnhancedNullability] kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (p0: @[EnhancedNullability] kotlin.Any?): kotlin.Boolean declared in java.util.HashMap
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.AbstractMap<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Any?
    FUN FAKE_OVERRIDE name:firstEntry visibility:public modality:OPEN <> ($this:java.util.SequencedMap<kotlin.Int, kotlin.Int>) returnType:@[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>? [fake_override]
      overridden:
        public open fun firstEntry (): @[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SequencedMap?, @[FlexibleNullability] V of java.util.SequencedMap?>? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SequencedMap<kotlin.Int, kotlin.Int>
    FUN FAKE_OVERRIDE name:forEach visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] kotlin.Int, in @[EnhancedNullability] kotlin.Int>) returnType:kotlin.Unit [fake_override]
      overridden:
        public open fun forEach (p0: @[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] K of java.util.HashMap, in @[EnhancedNullability] V of java.util.HashMap>): kotlin.Unit declared in java.util.HashMap
        public open fun forEach (p0: @[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, in @[EnhancedNullability] @[FlexibleNullability] V of java.util.SequencedMap?>): kotlin.Unit declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] kotlin.Int, in @[EnhancedNullability] kotlin.Int>
    FUN FAKE_OVERRIDE name:get visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int) returnType:@[EnhancedNullability] kotlin.Int? [fake_override,operator]
      overridden:
        public open fun get (p0: @[EnhancedNullability] K of java.util.HashMap): @[EnhancedNullability] V of java.util.HashMap? declared in java.util.HashMap
        public abstract fun get (key: @[FlexibleNullability] K of java.util.SequencedMap?): V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
    FUN FAKE_OVERRIDE name:getOrDefault visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int, p1:@[EnhancedNullability] kotlin.Int) returnType:@[EnhancedNullability] kotlin.Int [fake_override]
      overridden:
        public open fun getOrDefault (p0: @[EnhancedNullability] K of java.util.HashMap, p1: @[EnhancedNullability] V of java.util.HashMap): @[EnhancedNullability] V of java.util.HashMap declared in java.util.HashMap
        public open fun getOrDefault (key: @[FlexibleNullability] K of java.util.SequencedMap?, defaultValue: @[FlexibleNullability] V of java.util.SequencedMap?): @[FlexibleNullability] V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] kotlin.Int
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:java.util.AbstractMap<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in java.util.HashMap
        public open fun hashCode (): kotlin.Int declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.AbstractMap<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>
    FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>) returnType:kotlin.Boolean [fake_override]
      overridden:
        public open fun isEmpty (): kotlin.Boolean declared in java.util.HashMap
        public abstract fun isEmpty (): kotlin.Boolean declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
    FUN FAKE_OVERRIDE name:lastEntry visibility:public modality:OPEN <> ($this:java.util.SequencedMap<kotlin.Int, kotlin.Int>) returnType:@[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>? [fake_override]
      overridden:
        public open fun lastEntry (): @[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SequencedMap?, @[FlexibleNullability] V of java.util.SequencedMap?>? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SequencedMap<kotlin.Int, kotlin.Int>
    FUN FAKE_OVERRIDE name:merge visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int, p1:@[EnhancedNullability] kotlin.Int, p2:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] kotlin.Int, in @[EnhancedNullability] kotlin.Int, out @[EnhancedNullability] kotlin.Int?>) returnType:@[EnhancedNullability] kotlin.Int? [fake_override]
      overridden:
        public open fun merge (p0: @[EnhancedNullability] K of java.util.HashMap, p1: @[EnhancedNullability] {V of java.util.HashMap & Any}, p2: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] {V of java.util.HashMap & Any}, in @[EnhancedNullability] {V of java.util.HashMap & Any}, out @[EnhancedNullability] V of java.util.HashMap?>): @[EnhancedNullability] V of java.util.HashMap? declared in java.util.HashMap
        public open fun merge (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, p1: @[EnhancedNullability] {V of java.util.SequencedMap & Any}, p2: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] {V of java.util.SequencedMap & Any}, in @[EnhancedNullability] {V of java.util.SequencedMap & Any}, out @[EnhancedNullability] V of java.util.SequencedMap?>): @[EnhancedNullability] V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p2 index:2 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] kotlin.Int, in @[EnhancedNullability] kotlin.Int, out @[EnhancedNullability] kotlin.Int?>
    FUN FAKE_OVERRIDE name:newHashMap visibility:public modality:OPEN <K, V> (p0:kotlin.Int) returnType:@[FlexibleNullability] java.util.HashMap<@[FlexibleNullability] K of <root>.B.newHashMap?, @[FlexibleNullability] V of <root>.B.newHashMap?>? [fake_override]
      overridden:
        public open fun newHashMap <K, V> (p0: kotlin.Int): @[FlexibleNullability] java.util.HashMap<@[FlexibleNullability] K of java.util.HashMap.newHashMap?, @[FlexibleNullability] V of java.util.HashMap.newHashMap?>? declared in java.util.HashMap
      TYPE_PARAMETER name:K index:0 variance: superTypes:[@[FlexibleNullability] kotlin.Any?] reified:false
      TYPE_PARAMETER name:V index:1 variance: superTypes:[@[FlexibleNullability] kotlin.Any?] reified:false
      VALUE_PARAMETER name:p0 index:0 type:kotlin.Int
    FUN FAKE_OVERRIDE name:pollFirstEntry visibility:public modality:OPEN <> ($this:java.util.SequencedMap<kotlin.Int, kotlin.Int>) returnType:@[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>? [fake_override]
      overridden:
        public open fun pollFirstEntry (): @[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SequencedMap?, @[FlexibleNullability] V of java.util.SequencedMap?>? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SequencedMap<kotlin.Int, kotlin.Int>
    FUN FAKE_OVERRIDE name:pollLastEntry visibility:public modality:OPEN <> ($this:java.util.SequencedMap<kotlin.Int, kotlin.Int>) returnType:@[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>? [fake_override]
      overridden:
        public open fun pollLastEntry (): @[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SequencedMap?, @[FlexibleNullability] V of java.util.SequencedMap?>? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SequencedMap<kotlin.Int, kotlin.Int>
    FUN FAKE_OVERRIDE name:put visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int, p1:@[EnhancedNullability] kotlin.Int) returnType:@[EnhancedNullability] kotlin.Int? [fake_override]
      overridden:
        public open fun put (p0: @[EnhancedNullability] K of java.util.HashMap, p1: @[EnhancedNullability] V of java.util.HashMap): @[EnhancedNullability] V of java.util.HashMap? declared in java.util.HashMap
        public abstract fun put (key: @[FlexibleNullability] K of java.util.SequencedMap?, value: @[FlexibleNullability] V of java.util.SequencedMap?): V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] kotlin.Int
    FUN FAKE_OVERRIDE name:putAll visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.collections.Map<out @[EnhancedNullability] kotlin.Int, out @[EnhancedNullability] kotlin.Int>) returnType:kotlin.Unit [fake_override]
      overridden:
        public open fun putAll (p0: @[EnhancedNullability] kotlin.collections.Map<out @[EnhancedNullability] K of java.util.HashMap, out @[EnhancedNullability] V of java.util.HashMap>): kotlin.Unit declared in java.util.HashMap
        public abstract fun putAll (from: kotlin.collections.Map<out @[FlexibleNullability] K of java.util.SequencedMap?, @[FlexibleNullability] V of java.util.SequencedMap?>): kotlin.Unit declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.collections.Map<out @[EnhancedNullability] kotlin.Int, out @[EnhancedNullability] kotlin.Int>
    FUN FAKE_OVERRIDE name:putFirst visibility:public modality:OPEN <> ($this:java.util.SequencedMap<kotlin.Int, kotlin.Int>, p0:@[FlexibleNullability] kotlin.Int?, p1:@[FlexibleNullability] kotlin.Int?) returnType:@[FlexibleNullability] kotlin.Int? [fake_override]
      overridden:
        public open fun putFirst (p0: @[FlexibleNullability] K of java.util.SequencedMap?, p1: @[FlexibleNullability] V of java.util.SequencedMap?): @[FlexibleNullability] V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SequencedMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[FlexibleNullability] kotlin.Int?
      VALUE_PARAMETER name:p1 index:1 type:@[FlexibleNullability] kotlin.Int?
    FUN FAKE_OVERRIDE name:putIfAbsent visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int, p1:@[EnhancedNullability] kotlin.Int) returnType:@[EnhancedNullability] kotlin.Int? [fake_override]
      overridden:
        public open fun putIfAbsent (p0: @[EnhancedNullability] K of java.util.HashMap, p1: @[EnhancedNullability] V of java.util.HashMap): @[EnhancedNullability] V of java.util.HashMap? declared in java.util.HashMap
        public open fun putIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, p1: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SequencedMap?): @[EnhancedNullability] V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] kotlin.Int
    FUN FAKE_OVERRIDE name:putLast visibility:public modality:OPEN <> ($this:java.util.SequencedMap<kotlin.Int, kotlin.Int>, p0:@[FlexibleNullability] kotlin.Int?, p1:@[FlexibleNullability] kotlin.Int?) returnType:@[FlexibleNullability] kotlin.Int? [fake_override]
      overridden:
        public open fun putLast (p0: @[FlexibleNullability] K of java.util.SequencedMap?, p1: @[FlexibleNullability] V of java.util.SequencedMap?): @[FlexibleNullability] V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SequencedMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[FlexibleNullability] kotlin.Int?
      VALUE_PARAMETER name:p1 index:1 type:@[FlexibleNullability] kotlin.Int?
    FUN FAKE_OVERRIDE name:remove visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int) returnType:@[EnhancedNullability] kotlin.Int? [fake_override]
      overridden:
        public open fun remove (p0: @[EnhancedNullability] K of java.util.HashMap): @[EnhancedNullability] V of java.util.HashMap? declared in java.util.HashMap
        public abstract fun remove (key: @[FlexibleNullability] K of java.util.SequencedMap?): V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
    FUN FAKE_OVERRIDE name:remove visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int, p1:@[EnhancedNullability] kotlin.Int) returnType:kotlin.Boolean [fake_override]
      overridden:
        public open fun remove (p0: @[EnhancedNullability] K of java.util.HashMap, p1: @[EnhancedNullability] V of java.util.HashMap): kotlin.Boolean declared in java.util.HashMap
        public open fun remove (key: @[FlexibleNullability] K of java.util.SequencedMap?, value: @[FlexibleNullability] V of java.util.SequencedMap?): kotlin.Boolean declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] kotlin.Int
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int, p1:@[EnhancedNullability] kotlin.Int) returnType:@[EnhancedNullability] kotlin.Int? [fake_override]
      overridden:
        public open fun replace (p0: @[EnhancedNullability] K of java.util.HashMap, p1: @[EnhancedNullability] V of java.util.HashMap): @[EnhancedNullability] V of java.util.HashMap? declared in java.util.HashMap
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, p1: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SequencedMap?): @[EnhancedNullability] V of java.util.SequencedMap? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] kotlin.Int
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] kotlin.Int, p1:@[EnhancedNullability] kotlin.Int, p2:@[EnhancedNullability] kotlin.Int) returnType:kotlin.Boolean [fake_override]
      overridden:
        public open fun replace (p0: @[EnhancedNullability] K of java.util.HashMap, p1: @[EnhancedNullability] V of java.util.HashMap, p2: @[EnhancedNullability] V of java.util.HashMap): kotlin.Boolean declared in java.util.HashMap
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, p1: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SequencedMap?, p2: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SequencedMap?): kotlin.Boolean declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] kotlin.Int
      VALUE_PARAMETER name:p2 index:2 type:@[EnhancedNullability] kotlin.Int
    FUN FAKE_OVERRIDE name:replaceAll visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>, p0:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] kotlin.Int, in @[EnhancedNullability] kotlin.Int, out @[EnhancedNullability] kotlin.Int>) returnType:kotlin.Unit [fake_override]
      overridden:
        public open fun replaceAll (p0: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] K of java.util.HashMap, in @[EnhancedNullability] V of java.util.HashMap, out @[EnhancedNullability] V of java.util.HashMap>): kotlin.Unit declared in java.util.HashMap
        public open fun replaceAll (p0: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SequencedMap?, in @[EnhancedNullability] @[FlexibleNullability] V of java.util.SequencedMap?, out @[EnhancedNullability] @[FlexibleNullability] V of java.util.SequencedMap?>): kotlin.Unit declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] kotlin.Int, in @[EnhancedNullability] kotlin.Int, out @[EnhancedNullability] kotlin.Int>
    FUN FAKE_OVERRIDE name:sequencedEntrySet visibility:public modality:OPEN <> ($this:java.util.SequencedMap<kotlin.Int, kotlin.Int>) returnType:@[FlexibleNullability] java.util.SequencedSet<@[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>?>? [fake_override]
      overridden:
        public open fun sequencedEntrySet (): @[FlexibleNullability] java.util.SequencedSet<@[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SequencedMap?, @[FlexibleNullability] V of java.util.SequencedMap?>?>? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SequencedMap<kotlin.Int, kotlin.Int>
    FUN FAKE_OVERRIDE name:sequencedKeySet visibility:public modality:OPEN <> ($this:java.util.SequencedMap<kotlin.Int, kotlin.Int>) returnType:@[FlexibleNullability] java.util.SequencedSet<@[FlexibleNullability] kotlin.Int?>? [fake_override]
      overridden:
        public open fun sequencedKeySet (): @[FlexibleNullability] java.util.SequencedSet<@[FlexibleNullability] K of java.util.SequencedMap?>? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SequencedMap<kotlin.Int, kotlin.Int>
    FUN FAKE_OVERRIDE name:sequencedValues visibility:public modality:OPEN <> ($this:java.util.SequencedMap<kotlin.Int, kotlin.Int>) returnType:@[FlexibleNullability] java.util.SequencedCollection<@[FlexibleNullability] kotlin.Int?>? [fake_override]
      overridden:
        public open fun sequencedValues (): @[FlexibleNullability] java.util.SequencedCollection<@[FlexibleNullability] V of java.util.SequencedMap?>? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.SequencedMap<kotlin.Int, kotlin.Int>
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:java.util.AbstractMap<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>) returnType:@[EnhancedNullability] kotlin.String [fake_override]
      overridden:
        public open fun toString (): @[EnhancedNullability] kotlin.String declared in java.util.HashMap
        public open fun toString (): kotlin.String declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:java.util.AbstractMap<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>
    FUN name:reversed visibility:public modality:OPEN <> ($this:<root>.B) returnType:java.util.SequencedMap<kotlin.Int, kotlin.Int>
      overridden:
        public abstract fun reversed (): @[FlexibleNullability] java.util.SequencedMap<@[FlexibleNullability] K of java.util.SequencedMap?, @[FlexibleNullability] V of java.util.SequencedMap?>? declared in java.util.SequencedMap
      $this: VALUE_PARAMETER name:<this> type:<root>.B
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun reversed (): java.util.SequencedMap<kotlin.Int, kotlin.Int> declared in <root>.B'
          CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=java.util.SequencedMap<kotlin.Int, kotlin.Int> origin=EXCLEXCL
            <T0>: kotlin.Nothing
            arg0: CONST Null type=kotlin.Nothing? value=null
    PROPERTY FAKE_OVERRIDE name:entries visibility:public modality:OPEN [fake_override,val]
      overridden:
        public open entries: @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[EnhancedNullability] K of java.util.HashMap, @[EnhancedNullability] V of java.util.HashMap>> declared in java.util.HashMap
        public abstract entries: kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SequencedMap?, @[FlexibleNullability] V of java.util.SequencedMap?>> declared in java.util.SequencedMap
      FUN FAKE_OVERRIDE name:<get-entries> visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>) returnType:@[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[EnhancedNullability] kotlin.Int, @[EnhancedNullability] kotlin.Int>> [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:entries visibility:public modality:OPEN [fake_override,val]
        overridden:
          public open fun <get-entries> (): @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[EnhancedNullability] K of java.util.HashMap, @[EnhancedNullability] V of java.util.HashMap>> declared in java.util.HashMap
          public abstract fun <get-entries> (): kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SequencedMap?, @[FlexibleNullability] V of java.util.SequencedMap?>> declared in java.util.SequencedMap
        $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
    PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:OPEN [fake_override,val]
      overridden:
        public open keys: @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] K of java.util.HashMap> declared in java.util.HashMap
        public abstract keys: kotlin.collections.MutableSet<@[FlexibleNullability] K of java.util.SequencedMap?> declared in java.util.SequencedMap
      FUN FAKE_OVERRIDE name:<get-keys> visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>) returnType:@[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.Int> [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:OPEN [fake_override,val]
        overridden:
          public open fun <get-keys> (): @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] K of java.util.HashMap> declared in java.util.HashMap
          public abstract fun <get-keys> (): kotlin.collections.MutableSet<@[FlexibleNullability] K of java.util.SequencedMap?> declared in java.util.SequencedMap
        $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
    PROPERTY FAKE_OVERRIDE name:size visibility:public modality:OPEN [fake_override,val]
      overridden:
        public open size: kotlin.Int declared in java.util.HashMap
        public abstract size: kotlin.Int declared in java.util.SequencedMap
      FUN FAKE_OVERRIDE name:<get-size> visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>) returnType:kotlin.Int [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:size visibility:public modality:OPEN [fake_override,val]
        overridden:
          public open fun <get-size> (): kotlin.Int declared in java.util.HashMap
          public abstract fun <get-size> (): kotlin.Int declared in java.util.SequencedMap
        $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
    PROPERTY FAKE_OVERRIDE name:values visibility:public modality:OPEN [fake_override,val]
      overridden:
        public open values: @[EnhancedNullability] kotlin.collections.MutableCollection<@[EnhancedNullability] V of java.util.HashMap> declared in java.util.HashMap
        public abstract values: kotlin.collections.MutableCollection<@[FlexibleNullability] V of java.util.SequencedMap?> declared in java.util.SequencedMap
      FUN FAKE_OVERRIDE name:<get-values> visibility:public modality:OPEN <> ($this:java.util.HashMap<kotlin.Int, kotlin.Int>) returnType:@[EnhancedNullability] kotlin.collections.MutableCollection<@[EnhancedNullability] kotlin.Int> [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:values visibility:public modality:OPEN [fake_override,val]
        overridden:
          public open fun <get-values> (): @[EnhancedNullability] kotlin.collections.MutableCollection<@[EnhancedNullability] V of java.util.HashMap> declared in java.util.HashMap
          public abstract fun <get-values> (): kotlin.collections.MutableCollection<@[FlexibleNullability] V of java.util.SequencedMap?> declared in java.util.SequencedMap
        $this: VALUE_PARAMETER name:<this> type:java.util.HashMap<kotlin.Int, kotlin.Int>
  FUN name:test visibility:public modality:FINAL <> (a:<root>.A, b:<root>.B) returnType:kotlin.Unit
    VALUE_PARAMETER name:a index:0 type:<root>.A
    VALUE_PARAMETER name:b index:1 type:<root>.B
    BLOCK_BODY
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun <get-size> (): kotlin.Int declared in <root>.A' type=kotlin.Int origin=GET_PROPERTY
          $this: GET_VAR 'a: <root>.A declared in <root>.test' type=<root>.A origin=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun putLast (p0: @[FlexibleNullability] kotlin.Int?, p1: @[FlexibleNullability] kotlin.Int?): @[FlexibleNullability] kotlin.Int? declared in <root>.A' type=@[FlexibleNullability] kotlin.Int? origin=null
          $this: GET_VAR 'a: <root>.A declared in <root>.test' type=<root>.A origin=null
          p0: CONST Null type=kotlin.Nothing? value=null
          p1: CONST Int type=kotlin.Int value=1
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun putLast (p0: @[FlexibleNullability] kotlin.Int?, p1: @[FlexibleNullability] kotlin.Int?): @[FlexibleNullability] kotlin.Int? declared in <root>.A' type=@[FlexibleNullability] kotlin.Int? origin=null
          $this: GET_VAR 'a: <root>.A declared in <root>.test' type=<root>.A origin=null
          p0: CONST Int type=kotlin.Int value=2
          p1: CONST Null type=kotlin.Nothing? value=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun firstEntry (): @[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>? declared in <root>.A' type=@[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>? origin=null
          $this: GET_VAR 'a: <root>.A declared in <root>.test' type=<root>.A origin=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun lastEntry (): @[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>? declared in <root>.A' type=@[FlexibleNullability] @[FlexibleMutability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>? origin=null
          $this: GET_VAR 'a: <root>.A declared in <root>.test' type=<root>.A origin=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun reversed (): @[FlexibleNullability] java.util.SequencedMap<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>? declared in <root>.A' type=@[FlexibleNullability] java.util.SequencedMap<@[FlexibleNullability] kotlin.Int?, @[FlexibleNullability] kotlin.Int?>? origin=null
          $this: GET_VAR 'a: <root>.A declared in <root>.test' type=<root>.A origin=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun reversed (): java.util.SequencedMap<kotlin.Int, kotlin.Int> declared in <root>.B' type=java.util.SequencedMap<kotlin.Int, kotlin.Int> origin=null
          $this: GET_VAR 'b: <root>.B declared in <root>.test' type=<root>.B origin=null
