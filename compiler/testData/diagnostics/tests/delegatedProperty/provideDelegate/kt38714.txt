package

public final class Bar {
    public constructor Bar()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public open class DIAware1 {
    public constructor DIAware1()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    public final inline fun </*0*/ reified T : kotlin.Any> DIAware1.instance1(/*0*/ tag: kotlin.Any? = ...): DIProperty<T>
}

public final class DIProperty</*0*/ out V> : LazyDelegate<V> {
    public constructor DIProperty</*0*/ out V>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ fun provideDelegate(/*0*/ receiver: kotlin.Any?, /*1*/ prop: kotlin.reflect.KProperty<kotlin.Any?>): kotlin.Lazy<V>
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public interface LazyDelegate</*0*/ out V> {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public abstract operator fun provideDelegate(/*0*/ receiver: kotlin.Any?, /*1*/ prop: kotlin.reflect.KProperty<kotlin.Any?>): kotlin.Lazy<V>
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public abstract class MainActivity : DIAware1 {
    public constructor MainActivity()
    public final val bar: Bar
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    public final override /*1*/ inline /*fake_override*/ fun </*0*/ reified T : kotlin.Any> DIAware1.instance1(/*0*/ tag: kotlin.Any? = ...): DIProperty<T>
}
