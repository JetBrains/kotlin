FILE[kind=File[packageFqName=<root>]]
  PACKAGE_DIRECTIVE
  IMPORT_LIST
  FUN[fqName=inlineRun, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=true, name=inlineRun]
    contract: [ effect:CallsInPlace(param(0), AT_LEAST_ONCE) ]
    MODIFIER_LIST[public inline]
    VALUE_PARAMETER_LIST
      VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=block]
        TYPE_REFERENCE
          FUNCTION_TYPE
            VALUE_PARAMETER_LIST
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Unit]
    TYPE_REFERENCE
      USER_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=kotlin]
        REFERENCE_EXPRESSION[referencedName=Unit]
  FUN[fqName=myRun, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=true, name=myRun]
    contract: [ effect:CallsInPlace(param(0), AT_LEAST_ONCE) ]
    MODIFIER_LIST[public]
    VALUE_PARAMETER_LIST
      VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=block]
        TYPE_REFERENCE
          FUNCTION_TYPE
            VALUE_PARAMETER_LIST
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Unit]
    TYPE_REFERENCE
      USER_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=kotlin]
        REFERENCE_EXPRESSION[referencedName=Unit]
