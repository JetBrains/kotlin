Searched references to A
Searched references to parameter p of foo(p: A) in non-Java files
Searched references to parameter p of takeExtFun(p: A.() -> Unit) in non-Java files
Searched references to parameter p of takeFun1(p: (A) -> Unit) in non-Java files
Searched references to parameter p of takeFun2(p: ((A?, Int) -> Unit)?) in non-Java files
Searched references to parameter p of takeFun3(p: (List<A>) -> Unit) in non-Java files
Searched references to parameter p of takeFuns(p: MutableList<(A) -> Unit>) in non-Java files
Searched references to takeExtFun(p: A.() -> Unit) in non-Java files
Searched references to takeFun1(p: (A) -> Unit) in non-Java files
Searched references to takeFun2(p: ((A?, Int) -> Unit)?) in non-Java files
Searched references to takeFun3(p: (List<A>) -> Unit) in non-Java files
Searched references to takeFuns(p: MutableList<(A) -> Unit>) in non-Java files
Searched references to v in non-Java files
Used plain search of parameter a of A(val a: Int, val b: Int) in LocalSearchScope:
    CLASS:A
    FUN:null
    { a, n -> val (x, y) = a!! }
    { val (x, y ) = it }
    { val (x, y) = it }
    { val (x, y) = it }
    { val (x, y) = it }
    { val (x, y) = it[0] }
    { val (x, y) = this }
