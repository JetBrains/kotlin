KtFile: DefinitelyNotNullType.kt
  PACKAGE_DIRECTIVE
    <empty list>
  IMPORT_LIST
    <empty list>
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      TYPE_PARAMETER
        PsiElement(IDENTIFIER)('T')
      PsiElement(GT)('>')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo1')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('x')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('T')
      PsiErrorElement:Expecting comma or ')'
        <empty list>
      PsiErrorElement:Expecting ')'
        PsiElement(EXCLEXCL)('!!')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(COMMA)(',')
  PsiWhiteSpace(' ')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(IDENTIFIER)('y')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(COLON)(':')
  PsiWhiteSpace(' ')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(IDENTIFIER)('List')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(LT)('<')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(IDENTIFIER)('T')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(EXCLEXCL)('!!')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(GT)('>')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(COMMA)(',')
  PsiWhiteSpace(' ')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(IDENTIFIER)('z')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(COLON)(':')
  PsiWhiteSpace(' ')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(IDENTIFIER)('T')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(EXCLEXCL)('!!')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(DOT)('.')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(LPAR)('(')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(IDENTIFIER)('T')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(EXCLEXCL)('!!')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(RPAR)(')')
  PsiWhiteSpace(' ')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(ARROW)('->')
  PsiWhiteSpace(' ')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(IDENTIFIER)('T')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(EXCLEXCL)('!!')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(RPAR)(')')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(COLON)(':')
  PsiWhiteSpace(' ')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(IDENTIFIER)('T')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(EXCLEXCL)('!!')
  PsiWhiteSpace(' ')
  FUN
    PsiErrorElement:Expecting a top level declaration
      <empty list>
    BLOCK
      PsiElement(LBRACE)('{')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n\n')
  FUN
    PsiComment(EOL_COMMENT)('// should be prohibited on type-resolution level')
    PsiWhiteSpace('\n')
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      TYPE_PARAMETER
        PsiElement(IDENTIFIER)('T')
      PsiElement(GT)('>')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo2')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('x')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('T')
      PsiErrorElement:Expecting comma or ')'
        <empty list>
      PsiErrorElement:Expecting ')'
        PsiElement(EXCLEXCL)('!!')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(QUEST)('?')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(COMMA)(',')
  PsiWhiteSpace(' ')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(IDENTIFIER)('y')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(COLON)(':')
  PsiWhiteSpace(' ')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(IDENTIFIER)('List')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(LT)('<')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(IDENTIFIER)('T')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(EXCLEXCL)('!!')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(QUEST)('?')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(GT)('>')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(COMMA)(',')
  PsiWhiteSpace(' ')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(IDENTIFIER)('z')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(COLON)(':')
  PsiWhiteSpace(' ')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(IDENTIFIER)('T')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(EXCLEXCL)('!!')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(SAFE_ACCESS)('?.')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(LPAR)('(')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(IDENTIFIER)('T')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(EXCLEXCL)('!!')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(QUEST)('?')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(RPAR)(')')
  PsiWhiteSpace(' ')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(ARROW)('->')
  PsiWhiteSpace(' ')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(IDENTIFIER)('T')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(EXCLEXCL)('!!')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(QUEST)('?')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(COMMA)(',')
  PsiWhiteSpace(' ')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(IDENTIFIER)('w')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(COLON)(':')
  PsiWhiteSpace(' ')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(IDENTIFIER)('String')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(EXCLEXCL)('!!')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(RPAR)(')')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(COLON)(':')
  PsiWhiteSpace(' ')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(IDENTIFIER)('T')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(EXCLEXCL)('!!')
  PsiWhiteSpace(' ')
  FUN
    PsiErrorElement:Expecting a top level declaration
      <empty list>
    BLOCK
      PsiElement(LBRACE)('{')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo3')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      IF
        PsiElement(if)('if')
        PsiWhiteSpace(' ')
        PsiElement(LPAR)('(')
        CONDITION
          ANNOTATED_EXPRESSION
            ANNOTATION_ENTRY
              PsiElement(AT)('@')
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('RetentionSourceAndTargetExpression')
            PsiWhiteSpace(' ')
            PREFIX_EXPRESSION
              OPERATION_REFERENCE
                PsiElement(EXCL)('!')
              PREFIX_EXPRESSION
                OPERATION_REFERENCE
                  PsiElement(EXCL)('!')
                PARENTHESIZED
                  PsiElement(LPAR)('(')
                  BINARY_EXPRESSION
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('x')
                    PsiWhiteSpace(' ')
                    OPERATION_REFERENCE
                      PsiElement(EQEQ)('==')
                    PsiWhiteSpace(' ')
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('y')
                  PsiElement(RPAR)(')')
        PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        THEN
          BLOCK
            PsiElement(LBRACE)('{')
            PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
