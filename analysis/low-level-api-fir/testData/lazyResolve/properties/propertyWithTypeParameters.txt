RAW_FIR:
FILE: [ResolvedTo(RAW_FIR)] propertyWithTypeParameters.kt
    public? final? [ResolvedTo(RAW_FIR)] val <[ResolvedTo(RAW_FIR)] T : Int, [ResolvedTo(RAW_FIR)] K> [ResolvedTo(RAW_FIR)] T.resolveMe: K
        public? [ResolvedTo(RAW_FIR)] get(): K { LAZY_BLOCK }

IMPORTS:
FILE: [ResolvedTo(IMPORTS)] propertyWithTypeParameters.kt
    public? final? [ResolvedTo(RAW_FIR)] val <[ResolvedTo(RAW_FIR)] T : Int, [ResolvedTo(RAW_FIR)] K> [ResolvedTo(RAW_FIR)] T.resolveMe: K
        public? [ResolvedTo(RAW_FIR)] get(): K { LAZY_BLOCK }

COMPILER_REQUIRED_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] propertyWithTypeParameters.kt
    public? final? [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] val <[ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] T : Int, [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] K> [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] T.resolveMe: K
        public? [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] get(): K { LAZY_BLOCK }

COMPANION_GENERATION:
FILE: [ResolvedTo(IMPORTS)] propertyWithTypeParameters.kt
    public? final? [ResolvedTo(COMPANION_GENERATION)] val <[ResolvedTo(COMPANION_GENERATION)] T : Int, [ResolvedTo(COMPANION_GENERATION)] K> [ResolvedTo(COMPANION_GENERATION)] T.resolveMe: K
        public? [ResolvedTo(COMPANION_GENERATION)] get(): K { LAZY_BLOCK }

SUPER_TYPES:
FILE: [ResolvedTo(IMPORTS)] propertyWithTypeParameters.kt
    public? final? [ResolvedTo(SUPER_TYPES)] val <[ResolvedTo(SUPER_TYPES)] T : Int, [ResolvedTo(SUPER_TYPES)] K> [ResolvedTo(SUPER_TYPES)] T.resolveMe: K
        public? [ResolvedTo(SUPER_TYPES)] get(): K { LAZY_BLOCK }

TYPES:
FILE: [ResolvedTo(IMPORTS)] propertyWithTypeParameters.kt
    public? final? [ResolvedTo(TYPES)] val <[ResolvedTo(TYPES)] T : R|kotlin/Int|, [ResolvedTo(TYPES)] K> [ResolvedTo(TYPES)] R|T|.resolveMe: R|K|
        public? [ResolvedTo(TYPES)] get(): R|K| { LAZY_BLOCK }

STATUS:
FILE: [ResolvedTo(IMPORTS)] propertyWithTypeParameters.kt
    public final [ResolvedTo(STATUS)] val <[ResolvedTo(STATUS)] T : R|kotlin/Int|, [ResolvedTo(STATUS)] K> [ResolvedTo(STATUS)] R|T|.resolveMe: R|K|
        public [ResolvedTo(STATUS)] get(): R|K| { LAZY_BLOCK }

EXPECT_ACTUAL_MATCHING:
FILE: [ResolvedTo(IMPORTS)] propertyWithTypeParameters.kt
    public final [ResolvedTo(EXPECT_ACTUAL_MATCHING)] val <[ResolvedTo(EXPECT_ACTUAL_MATCHING)] T : R|kotlin/Int|, [ResolvedTo(EXPECT_ACTUAL_MATCHING)] K> [ResolvedTo(EXPECT_ACTUAL_MATCHING)] R|T|.resolveMe: R|K|
        public [ResolvedTo(EXPECT_ACTUAL_MATCHING)] get(): R|K| { LAZY_BLOCK }

CONTRACTS:
FILE: [ResolvedTo(IMPORTS)] propertyWithTypeParameters.kt
    public final [ResolvedTo(CONTRACTS)] val <[ResolvedTo(CONTRACTS)] T : R|kotlin/Int|, [ResolvedTo(CONTRACTS)] K> [ResolvedTo(CONTRACTS)] R|T|.resolveMe: R|K|
        public [ResolvedTo(CONTRACTS)] get(): R|K| { LAZY_BLOCK }

IMPLICIT_TYPES_BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] propertyWithTypeParameters.kt
    public final [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] val <[ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] T : R|kotlin/Int|, [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] K> [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] R|T|.resolveMe: R|K|
        public [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] get(): R|K| { LAZY_BLOCK }

CONSTANT_EVALUATION:
FILE: [ResolvedTo(IMPORTS)] propertyWithTypeParameters.kt
    public final [ResolvedTo(CONSTANT_EVALUATION)] val <[ResolvedTo(CONSTANT_EVALUATION)] T : R|kotlin/Int|, [ResolvedTo(CONSTANT_EVALUATION)] K> [ResolvedTo(CONSTANT_EVALUATION)] R|T|.resolveMe: R|K|
        public [ResolvedTo(CONSTANT_EVALUATION)] get(): R|K| { LAZY_BLOCK }

ANNOTATION_ARGUMENTS:
FILE: [ResolvedTo(IMPORTS)] propertyWithTypeParameters.kt
    public final [ResolvedTo(ANNOTATION_ARGUMENTS)] val <[ResolvedTo(ANNOTATION_ARGUMENTS)] T : R|kotlin/Int|, [ResolvedTo(ANNOTATION_ARGUMENTS)] K> [ResolvedTo(ANNOTATION_ARGUMENTS)] R|T|.resolveMe: R|K|
        public [ResolvedTo(ANNOTATION_ARGUMENTS)] get(): R|K| { LAZY_BLOCK }

BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] propertyWithTypeParameters.kt
    public final [ResolvedTo(BODY_RESOLVE)] val <[ResolvedTo(BODY_RESOLVE)] T : R|kotlin/Int|, [ResolvedTo(BODY_RESOLVE)] K> [ResolvedTo(BODY_RESOLVE)] R|T|.resolveMe: R|K|
        public [ResolvedTo(BODY_RESOLVE)] get(): R|K| {
            ^ R|kotlin/TODO|()
        }

FILE RAW TO BODY:
FILE: [ResolvedTo(BODY_RESOLVE)] propertyWithTypeParameters.kt
    public final [ResolvedTo(BODY_RESOLVE)] val <[ResolvedTo(BODY_RESOLVE)] T : R|kotlin/Int|, [ResolvedTo(BODY_RESOLVE)] K> [ResolvedTo(BODY_RESOLVE)] R|T|.resolveMe: R|K|
        public [ResolvedTo(BODY_RESOLVE)] get(): R|K| {
            ^ R|kotlin/TODO|()
        }
