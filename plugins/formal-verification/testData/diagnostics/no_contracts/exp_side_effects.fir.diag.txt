/exp_side_effects.kt:(27,34): info: Generated Viper text for get_foo:
field class_scope_global$class_Foo$member_x: Int

method global$fun_get_foo$fun_take$$return$T_class_global$class_Foo()
  returns (ret: Ref)
  ensures dom$Type$isSubtype((dom$TypeOf$typeOf(ret): dom$Type), dom$Type$global$class_Foo())
{
  var anonymous$0: Ref
  anonymous$0 := class_scope_global$class_Foo$constructor$fun_take$T_Int$return$T_class_global$class_Foo(0)
  ret := anonymous$0
  goto label$ret$0
  label label$ret$0
}

method class_scope_global$class_Foo$constructor$fun_take$T_Int$return$T_class_global$class_Foo(local$x: Int)
  returns (ret: Ref)
  ensures dom$Type$isSubtype((dom$TypeOf$typeOf(ret): dom$Type), dom$Type$global$class_Foo())


/exp_side_effects.kt:(55,66): info: Generated Viper text for side_effect:
method global$fun_side_effect$fun_take$$return$T_Int() returns (ret: Int)
{
  ret := 0
  goto label$ret$0
  label label$ret$0
}

/exp_side_effects.kt:(83,87): info: Generated Viper text for test:
field class_scope_global$class_Foo$member_x: Int

method global$fun_test$fun_take$$return$T_Unit() returns (ret: dom$Unit)
{
  var anonymous$0: Ref
  var anonymous$1: Int
  var anonymous$2: Ref
  var anonymous$3: Int
  var anonymous$4: Int
  var local0$y: Int
  anonymous$0 := global$fun_get_foo$fun_take$$return$T_class_global$class_Foo()
  anonymous$1 := global$fun_side_effect$fun_take$$return$T_Int()
  inhale acc(anonymous$0.class_scope_global$class_Foo$member_x, write)
  anonymous$0.class_scope_global$class_Foo$member_x := anonymous$1
  exhale acc(anonymous$0.class_scope_global$class_Foo$member_x, write)
  anonymous$2 := global$fun_get_foo$fun_take$$return$T_class_global$class_Foo()
  inhale acc(anonymous$2.class_scope_global$class_Foo$member_x, write)
  anonymous$3 := anonymous$2.class_scope_global$class_Foo$member_x
  exhale acc(anonymous$2.class_scope_global$class_Foo$member_x, write)
  anonymous$4 := global$fun_side_effect$fun_take$$return$T_Int()
  local0$y := anonymous$3 + anonymous$4
  label label$ret$0
}

method global$fun_get_foo$fun_take$$return$T_class_global$class_Foo()
  returns (ret: Ref)
  ensures dom$Type$isSubtype((dom$TypeOf$typeOf(ret): dom$Type), dom$Type$global$class_Foo())


method global$fun_side_effect$fun_take$$return$T_Int() returns (ret: Int)

