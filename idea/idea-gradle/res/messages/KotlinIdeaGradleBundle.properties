gradle.script.configurations.importing.feature=Load Gradle Kotlin DSL script configurations during Gradle project import
notification.gradle.legacy.firstLoad=Code insight is disabled to avoid the Gradle build configuration.
notification.gradle.legacy.firstLoad.info=<div width=400><p>The Gradle configuration phase needs to be run to get the Script Configuration. \
Loading the script configuration is disabled by default, since it can be resource-intensive for large Gradle projects.</p>\
<p>Click "Load Configuration" to evaluate the Gradle Kotlin DSL script.</p>\
<p>Alternatively, to automatically load the configuration when the script first opens \
and reload it each time build script configuration blocks are changed, you can enable "auto-reload" for all scripts. \
This option is not recommended for large Gradle projects with long configuration times.</p>\
</div>
notification.gradle.legacy.outsideProject=Code insight unavailable (related Gradle project not linked).
notification.gradle.legacy.outsideProject.addToStandaloneHelp=<div width=400>\
  <p>The Gradle project that evaluates this script needs to be imported to have it analyzed by the IDE. \
  Try re-importing the linked Gradle project or link a new Gradle project that evaluates this script.</p>\
  <p>Alternatively, you can add it to standalone scripts, and its configuration will be loaded automatically.</p>\
  <p><b>NOTE:</b> Each standalone script requires a separate Gradle configuration phase to be executed on update. \
  This can be resource intensive for large Gradle projects.</p>\
  </div>
notification.gradle.legacy.standalone.info=<div width=400>\
  <p>The Gradle project that evaluates this script isn't imported in IDE. \
  <br/>\
  <p><b>NOTE:</b> Each standalone script requires a separate Gradle configuration phase to be executed on update. \
  This can be resource intensive for large Gradle projects.</p>\
  </div>
notification.outsideAnything.text=Code insight unavailable (related Gradle project not linked).
notification.outsideAnything.linkAction=Link Gradle project
notification.wasNotImportedAfterCreation.193.text=Code insight unavailable (Gradle project not imported).
notification.wasNotImportedAfterCreation.text=Code insight unavailable (Script Configurations not loaded).
notification.wasNotImportedAfterCreation.help=<div width=400>\
  <p>The Gradle Kotlin DSL script configurations are missing. \
  Import the external Gradle project or load the configurations \
  to get script code insight.</p>\
  </div>
action.label.import.project=Import Project
action.text.load.script.configurations=Load Script Configurations
action.description.load.script.configurations=The Gradle Kotlin DSL script configuration has been changed. Load the changes to get code insight without importing the external Gradle project.
action.label.enable.auto.import=Enable Auto-Import
notification.notEvaluatedInLastImport.text=Code insight unavailable (configuration for this script wasn't received during the last Gradle project import).
notification.notEvaluatedInLastImport.addAsStandaloneAction=Add to standalone scripts
notification.notEvaluatedInLastImport.info=<div width=400>\
  <p>The Gradle project that evaluates this script needs to be imported to have it analyzed by the IDE. \
  Try re-importing the linked Gradle project or link a new Gradle project that evaluates this script.</p>\
  <p>Alternatively, you can add it to standalone scripts, and its configuration will be loaded separately.</p>\
  <p><b>NOTE:</b> Each standalone script requires a separate Gradle configuration phase to be executed on update. \
  This can be resource intensive for large Gradle projects.</p>\
  </div>
notification.standalone.text=Standalone script
notification.standalone.disableScriptAction=Remove from standalone scripts
notification.standalone.info=<div width=400>\
  <p>The configuration for this script will be loaded separately from Gradle project sync.\
  <br/>\
  <p><b>NOTE:</b> Each standalone script requires a separate Gradle configuration phase to be executed on update. \
  This can be resource intensive for large Gradle projects.</p>\
  </div>
action.text.install=Install
action.text.show.kotlin.gradle.dsl.logs.in=Show Kotlin Gradle DSL Logs in {0}
build.0.project=Build {0}
change.build.gradle.configuration=Change build.gradle configuration
description.text.a.single.platform.kotlin.library.or.application.targeting.javascript=A single-platform Kotlin library or application targeting JavaScript
description.text.a.single.platform.kotlin.library.or.application.targeting.js.for.browser=A single-platform Kotlin library or application targeting JavaScript for browser
description.text.a.single.platform.kotlin.library.or.application.targeting.js.for.node.js=A single-platform Kotlin library or application targeting JavaScript for Node.js
description.text.a.single.platform.kotlin.library.or.application.targeting.the.jvm=A single-platform Kotlin library or application targeting the JVM
description.text.adds.support.for.building.kotlin.projects=Adds support for building Kotlin projects
description.text.multi.targeted.jvm.js.ios.etc.project.with.shared.code.in.common.modules=Multi-targeted (JVM, JS, iOS, etc.) project with shared code in common modules. The targets can be configured in the project''s build script.
description.text.multiplatform.gradle.project.allowing.reuse.of.the.same.kotlin.code.between.android.and.ios.mobile.platforms=Multiplatform Gradle project allowing reuse of the same Kotlin code between Android and iOS mobile platforms
description.text.multiplatform.gradle.project.allowing.reuse.of.the.same.kotlin.code.between.js.client.and.jvm.server=Multiplatform Gradle project allowing reuse of the same Kotlin code between JS Client and JVM Server
description.text.multiplatform.gradle.project.allowing.reuse.of.the.same.kotlin.code.between.two.mobile.platforms.jvm.android.and.native=Multiplatform Gradle project allowing reuse of the same Kotlin code between two mobile platforms (JVM/Android and Native)
description.text.multiplatform.jvm.js.native=Multiplatform Gradle project allowing reuse of the same Kotlin code between all three main platforms (JVM, JS, and Native)
error.text.cannot.find.build.gradle.file.for.module=Cannot find build.gradle file for module {0}
error.text.coroutines.support.requires.version.1.1.or.later.of.the.kotlin.runtime.library=Coroutines support requires version 1.1 or later of the Kotlin runtime library. Please update the version in your build script.
error.text.different.kotlin.gradle.version=Kotlin version that is used for building with Gradle ({0}) differs from the one bundled into the IDE plugin ({1})
error.text.different.kotlin.library.version=Plugin version ({0}) is not the same as library version ({1})
error.text.failed.to.load.script.definitions.by=Failed to load script definitions by {0}
error.text.highlighting.is.impossible.during.gradle.import=Highlighting is impossible during Gradle Import
error.text.invalid.gradle.libraries.directory=Invalid Gradle libraries directory {0}
error.text.missing.jars.in.gradle.directory=Missing jars in gradle directory
error.text.project.isn.t.linked.with.gradle=Project ''{0}'' isn''t linked with Gradle
error.text.support.requires.version={0} support requires version {1} or later of the Kotlin runtime library. Please update the version in your build script.
error.text.this.language.feature.requires.version=This language feature requires version {0} or later of the Kotlin runtime library. Please update the version in your build script.
error.text.unable.to.get.gradle.home.directory=Unable to get Gradle home directory
title.plugin.suggestion=Plugins Suggestion
notification.text.native.debug.provides.debugger.for.kotlin.native=Native Debug provides debugger for Kotlin/Native
presentable.text.java.with.gradle=Java with Gradle
presentable.text.javascript.with.gradle=JavaScript with Gradle
presentable.text.js.client.and.jvm.server.gradle=JS Client and JVM Server | Gradle
presentable.text.mobile.android.ios.gradle=Mobile Android/iOS | Gradle
presentable.text.mobile.shared.library.gradle=Mobile Shared Library | Gradle
presentable.text.multiplatform.library.gradle=Multiplatform Library | Gradle
text.couldn.t.configure.kotlin.gradle.plugin.automatically=Couldn't configure kotlin-gradle plugin automatically.
text.default.kotlin.gradle.script=Default Kotlin Gradle Script
text.gradle.dsl.logs.cannot.be.found.automatically.see.how.to.find.logs=Gradle DSL Logs cannot be found automatically.<br/>See how to find logs <a href="{0}">here</a>.
text.see.manual.installation.instructions=See manual installation instructions <a href="https://kotlinlang.org/docs/reference/using-gradle.html">here</a>.
text.was.modified={0} was modified
title.configure.kotlin.gradle.plugin=Configure Kotlin-Gradle Plugin
title.kotlin.build.script=Gradle Kotlin DSL Scripts errors
title.update.language.version=Update Language Version
display.name.kotlin.multiplatform=Kotlin/Multiplatform
display.name.kotlin.jvm=Kotlin/JVM
display.name.kotlin.js.for.node.js=Kotlin/JS for Node.js
display.name.kotlin.js.for.browser=Kotlin/JS for browser
comman.name.configure.kotlin=Configure Kotlin
command.name.configure.0=Configure {0}
notification.title.script.configuration.has.been.changed=Script configurations has been changed.
notification.text.script.configuration.has.been.changed=Gradle Project needs to be imported to load changes.
