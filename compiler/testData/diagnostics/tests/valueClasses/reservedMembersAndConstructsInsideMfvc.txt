package

package kotlin {

    package kotlin.jvm {

        @kotlin.jvm.JvmInline public final value class IC1 {
            public constructor IC1(/*0*/ x: kotlin.Any)
            public final val x: kotlin.Any
            public final fun box(): kotlin.Unit
            public final fun box(/*0*/ x: kotlin.Any): kotlin.Unit
            public open override /*1*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
            public final fun unbox(): kotlin.Unit
            public final fun unbox(/*0*/ x: kotlin.Any): kotlin.Unit
        }

        @kotlin.jvm.JvmInline public final value class IC2 {
            public constructor IC2(/*0*/ x: kotlin.Any)
            public final val x: kotlin.Any
            public final fun box(): kotlin.Any
            public final fun box(/*0*/ x: kotlin.Any): kotlin.Unit
            public final fun equals(/*0*/ my: kotlin.Any, /*1*/ other: kotlin.Any): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public final fun hashCode(/*0*/ a: kotlin.Any): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
            public final fun unbox(): kotlin.Any
            public final fun unbox(/*0*/ x: kotlin.Any): kotlin.Unit
        }

        @kotlin.jvm.JvmInline public final value class IC3 {
            public constructor IC3(/*0*/ x: kotlin.Any)
            public final val x: kotlin.Any
            public final fun box(/*0*/ x: kotlin.Any): kotlin.Any
            public final fun equals(): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
            public final fun unbox(/*0*/ x: kotlin.Any): kotlin.Any
        }

        @kotlin.jvm.JvmInline public final value class IC4 : kotlin.jvm.WithBox {
            public constructor IC4(/*0*/ s: kotlin.String)
            public final val s: kotlin.String
            public open override /*1*/ fun box(): kotlin.String
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
        }

        @kotlin.jvm.JvmInline public final value class IC5 {
            public constructor IC5(/*0*/ i: kotlin.Int)
            public constructor IC5(/*0*/ a: kotlin.String)
            public final val a: kotlin.String
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
        }

        @kotlin.jvm.JvmInline public final value class IC6 {
            public constructor IC6(/*0*/ a: kotlin.String)
            public final val a: kotlin.String
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public final fun </*0*/ T> equals(/*0*/ other: kotlin.jvm.IC6): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
        }

        public final annotation class JvmInline : kotlin.Annotation {
            public constructor JvmInline()
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }

        @kotlin.jvm.JvmInline public final value class MFVC1 {
            public constructor MFVC1(/*0*/ x: kotlin.Any, /*1*/ y: kotlin.Any)
            public final val x: kotlin.Any
            public final val y: kotlin.Any
            public final fun box(): kotlin.Unit
            public final fun box(/*0*/ x: kotlin.Any): kotlin.Unit
            public open override /*1*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
            public final fun unbox(): kotlin.Unit
            public final fun unbox(/*0*/ x: kotlin.Any): kotlin.Unit
        }

        @kotlin.jvm.JvmInline public final value class MFVC2 {
            public constructor MFVC2(/*0*/ x: kotlin.Any, /*1*/ y: kotlin.Any)
            public final val x: kotlin.Any
            public final val y: kotlin.Any
            public final fun box(): kotlin.Any
            public final fun box(/*0*/ x: kotlin.Any): kotlin.Unit
            public final fun equals(/*0*/ my: kotlin.Any, /*1*/ other: kotlin.Any): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public final fun hashCode(/*0*/ a: kotlin.Any): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
            public final fun unbox(): kotlin.Any
            public final fun unbox(/*0*/ x: kotlin.Any): kotlin.Unit
        }

        @kotlin.jvm.JvmInline public final value class MFVC3 {
            public constructor MFVC3(/*0*/ x: kotlin.Any, /*1*/ y: kotlin.Any)
            public final val x: kotlin.Any
            public final val y: kotlin.Any
            public final fun box(/*0*/ x: kotlin.Any): kotlin.Any
            public final fun equals(): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
            public final fun unbox(/*0*/ x: kotlin.Any): kotlin.Any
        }

        @kotlin.jvm.JvmInline public final value class MFVC4 : kotlin.jvm.WithBox {
            public constructor MFVC4(/*0*/ s: kotlin.String, /*1*/ t: kotlin.String)
            public final val s: kotlin.String
            public final val t: kotlin.String
            public open override /*1*/ fun box(): kotlin.String
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
        }

        @kotlin.jvm.JvmInline public final value class MFVC5 {
            public constructor MFVC5(/*0*/ i: kotlin.Int)
            public constructor MFVC5(/*0*/ a: kotlin.String, /*1*/ b: kotlin.String)
            public final val a: kotlin.String
            public final val b: kotlin.String
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
        }

        @kotlin.jvm.JvmInline public final value class MFVC6 {
            public constructor MFVC6(/*0*/ a: kotlin.String, /*1*/ b: kotlin.String)
            public final val a: kotlin.String
            public final val b: kotlin.String
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public final fun </*0*/ T> equals(/*0*/ other: kotlin.jvm.MFVC6): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
        }

        @kotlin.jvm.JvmInline public final value class MFVC7</*0*/ T> {
            public constructor MFVC7</*0*/ T>(/*0*/ a: kotlin.String, /*1*/ b: kotlin.String)
            public final val a: kotlin.String
            public final val b: kotlin.String
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public final fun equals(/*0*/ other: kotlin.jvm.MFVC7<*>): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
        }

        @kotlin.jvm.JvmInline public final value class MFVC8</*0*/ T> {
            public constructor MFVC8</*0*/ T>(/*0*/ a: kotlin.String, /*1*/ b: kotlin.String)
            public final val a: kotlin.String
            public final val b: kotlin.String
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public final fun equals(/*0*/ other: kotlin.jvm.MFVC8<T>): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
        }

        @kotlin.jvm.JvmInline public final value class MFVC9</*0*/ T> {
            public constructor MFVC9</*0*/ T>(/*0*/ a: kotlin.String, /*1*/ b: kotlin.String)
            public final val a: kotlin.String
            public final val b: kotlin.String
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public final fun equals(/*0*/ other: kotlin.jvm.MFVC9<kotlin.String>): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
        }

        public interface WithBox {
            public abstract fun box(): kotlin.String
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }
    }
}

