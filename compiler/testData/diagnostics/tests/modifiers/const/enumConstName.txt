package

public const val name1: kotlin.String
public const val name2: kotlin.String
public const val name3: kotlin.String
public const val name4: kotlin.String

public final enum class EnumClass : kotlin.Enum<EnumClass> {
    enum entry OK

    enum entry VALUE

    enum entry anotherValue

    enum entry WITH_UNDERSCORE

    private constructor EnumClass()
    @kotlin.internal.IntrinsicConstEvaluation public final override /*1*/ /*fake_override*/ val name: kotlin.String
    public final override /*1*/ /*fake_override*/ val ordinal: kotlin.Int
    protected final override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
    public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: EnumClass): kotlin.Int
    public final override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    protected/*protected and package*/ final override /*1*/ /*fake_override*/ /*isHiddenForResolutionEverywhereBesideSupercalls*/ fun finalize(): kotlin.Unit
    public final override /*1*/ /*fake_override*/ /*isHiddenForResolutionEverywhereBesideSupercalls*/ fun getDeclaringClass(): java.lang.Class<EnumClass!>!
    public final override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    // Static members
    public final /*synthesized*/ val entries: kotlin.enums.EnumEntries<EnumClass>
    public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): EnumClass
    public final /*synthesized*/ fun values(): kotlin.Array<EnumClass>
}
