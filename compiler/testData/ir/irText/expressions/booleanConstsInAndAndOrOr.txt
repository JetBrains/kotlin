FILE fqName:<root> fileName:/booleanConstsInAndAndOrOr.kt
  FUN name:test1 visibility:public modality:FINAL <> (b:kotlin.Boolean) returnType:kotlin.Unit
    VALUE_PARAMETER name:b index:0 type:kotlin.Boolean
    BLOCK_BODY
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        WHEN type=kotlin.Boolean origin=ANDAND
          BRANCH
            if: GET_VAR 'b: kotlin.Boolean declared in <root>.test1' type=kotlin.Boolean origin=null
            then: RETURN type=kotlin.Nothing from='public final fun test1 (b: kotlin.Boolean): kotlin.Unit declared in <root>'
              GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Unit modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: CONST Boolean type=kotlin.Boolean value=false
  FUN name:test2 visibility:public modality:FINAL <> (b:kotlin.Boolean) returnType:kotlin.Unit
    VALUE_PARAMETER name:b index:0 type:kotlin.Boolean
    BLOCK_BODY
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        WHEN type=kotlin.Boolean origin=OROR
          BRANCH
            if: GET_VAR 'b: kotlin.Boolean declared in <root>.test2' type=kotlin.Boolean origin=null
            then: CONST Boolean type=kotlin.Boolean value=true
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: RETURN type=kotlin.Nothing from='public final fun test2 (b: kotlin.Boolean): kotlin.Unit declared in <root>'
              GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Unit modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
