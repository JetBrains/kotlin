RAW_FIR:
FILE: [ResolvedTo(RAW_FIR)] implicitTypeOnFunctionWithUnresolvedRawContract.kt
    public? final? [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] bool: Boolean): <implicit>
        [Contract description] <
            LAZY_EXPRESSION
        >
     { LAZY_BLOCK }

IMPORTS:
FILE: [ResolvedTo(IMPORTS)] implicitTypeOnFunctionWithUnresolvedRawContract.kt
    public? final? [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] bool: Boolean): <implicit>
        [Contract description] <
            LAZY_EXPRESSION
        >
     { LAZY_BLOCK }

COMPILER_REQUIRED_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] implicitTypeOnFunctionWithUnresolvedRawContract.kt
    public? final? [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] fun foo([ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] bool: Boolean): <implicit>
        [Contract description] <
            LAZY_EXPRESSION
        >
     { LAZY_BLOCK }

COMPANION_GENERATION:
FILE: [ResolvedTo(IMPORTS)] implicitTypeOnFunctionWithUnresolvedRawContract.kt
    public? final? [ResolvedTo(COMPANION_GENERATION)] fun foo([ResolvedTo(COMPANION_GENERATION)] bool: Boolean): <implicit>
        [Contract description] <
            LAZY_EXPRESSION
        >
     { LAZY_BLOCK }

SUPER_TYPES:
FILE: [ResolvedTo(IMPORTS)] implicitTypeOnFunctionWithUnresolvedRawContract.kt
    public? final? [ResolvedTo(SUPER_TYPES)] fun foo([ResolvedTo(SUPER_TYPES)] bool: Boolean): <implicit>
        [Contract description] <
            LAZY_EXPRESSION
        >
     { LAZY_BLOCK }

TYPES:
FILE: [ResolvedTo(IMPORTS)] implicitTypeOnFunctionWithUnresolvedRawContract.kt
    public? final? [ResolvedTo(TYPES)] fun foo([ResolvedTo(TYPES)] bool: R|kotlin/Boolean|): <implicit>
        [Contract description] <
            LAZY_EXPRESSION
        >
     { LAZY_BLOCK }

STATUS:
FILE: [ResolvedTo(IMPORTS)] implicitTypeOnFunctionWithUnresolvedRawContract.kt
    public final [ResolvedTo(STATUS)] fun foo([ResolvedTo(STATUS)] bool: R|kotlin/Boolean|): <implicit>
        [Contract description] <
            LAZY_EXPRESSION
        >
     { LAZY_BLOCK }

EXPECT_ACTUAL_MATCHING:
FILE: [ResolvedTo(IMPORTS)] implicitTypeOnFunctionWithUnresolvedRawContract.kt
    public final [ResolvedTo(EXPECT_ACTUAL_MATCHING)] fun foo([ResolvedTo(EXPECT_ACTUAL_MATCHING)] bool: R|kotlin/Boolean|): <implicit>
        [Contract description] <
            LAZY_EXPRESSION
        >
     { LAZY_BLOCK }

CONTRACTS:
FILE: [ResolvedTo(IMPORTS)] implicitTypeOnFunctionWithUnresolvedRawContract.kt
    public final [ResolvedTo(CONTRACTS)] fun foo([ResolvedTo(CONTRACTS)] bool: R|kotlin/Boolean|): <implicit> {
        ^foo bool#
    }

IMPLICIT_TYPES_BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] implicitTypeOnFunctionWithUnresolvedRawContract.kt
    public final [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] fun foo([ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] bool: R|kotlin/Boolean|): R|kotlin/Boolean|
        [Contract description] <
            returns#().implies#(bool#)
        >
     {
        ^foo R|<local>/bool|
    }

CONSTANT_EVALUATION:
FILE: [ResolvedTo(IMPORTS)] implicitTypeOnFunctionWithUnresolvedRawContract.kt
    public final [ResolvedTo(CONSTANT_EVALUATION)] fun foo([ResolvedTo(CONSTANT_EVALUATION)] bool: R|kotlin/Boolean|): R|kotlin/Boolean|
        [Contract description] <
            returns#().implies#(bool#)
        >
     {
        ^foo R|<local>/bool|
    }

ANNOTATION_ARGUMENTS:
FILE: [ResolvedTo(IMPORTS)] implicitTypeOnFunctionWithUnresolvedRawContract.kt
    public final [ResolvedTo(ANNOTATION_ARGUMENTS)] fun foo([ResolvedTo(ANNOTATION_ARGUMENTS)] bool: R|kotlin/Boolean|): R|kotlin/Boolean|
        [Contract description] <
            returns#().implies#(bool#)
        >
     {
        ^foo R|<local>/bool|
    }

BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] implicitTypeOnFunctionWithUnresolvedRawContract.kt
    public final [ResolvedTo(BODY_RESOLVE)] fun foo([ResolvedTo(BODY_RESOLVE)] bool: R|kotlin/Boolean|): R|kotlin/Boolean|
        [Contract description] <
            <Unresolved name: returns>#().<Unresolved name: implies>#(R|<local>/bool|)
        >
     {
        ^foo R|<local>/bool|
    }

FILE RAW TO BODY:
FILE: [ResolvedTo(BODY_RESOLVE)] implicitTypeOnFunctionWithUnresolvedRawContract.kt
    public final [ResolvedTo(BODY_RESOLVE)] fun foo([ResolvedTo(BODY_RESOLVE)] bool: R|kotlin/Boolean|): R|kotlin/Boolean|
        [Contract description] <
            <Unresolved name: returns>#().<Unresolved name: implies>#(R|<local>/bool|)
        >
     {
        ^foo R|<local>/bool|
    }
