// Auto-generated by GeneratePrimitiveVsObjectEqualityTestData. Do not edit!

val nx: Short? = 0.toShort()
val nn: Short? = null
val x: Short = 0.toShort()
val y: Short = 1.toShort()

fun box(): String {
    val ax: Short? = 0.toShort()
    val an: Short? = null
    val bx: Short = 0.toShort()
    val by: Short = 1.toShort()

    return when {
        0.toShort() != nx -> "Fail 0"
        1.toShort() == nx -> "Fail 1"
        !(0.toShort() == nx) -> "Fail 2"
        !(1.toShort() != nx) -> "Fail 3"
        x != nx -> "Fail 4"
        y == nx -> "Fail 5"
        !(x == nx) -> "Fail 6"
        !(y != nx) -> "Fail 7"
        0.toShort() == nn -> "Fail 8"
        !(0.toShort() != nn) -> "Fail 9"
        x == nn -> "Fail 10"
        !(x != nn) -> "Fail 11"
        0.toShort() != ax -> "Fail 12"
        1.toShort() == ax -> "Fail 13"
        !(0.toShort() == ax) -> "Fail 14"
        !(1.toShort() != ax) -> "Fail 15"
        x != ax -> "Fail 16"
        y == ax -> "Fail 17"
        !(x == ax) -> "Fail 18"
        !(y != ax) -> "Fail 19"
        bx != ax -> "Fail 20"
        by == ax -> "Fail 21"
        !(bx == ax) -> "Fail 22"
        !(by != ax) -> "Fail 23"
        0.toShort() == an -> "Fail 24"
        !(0.toShort() != an) -> "Fail 25"
        x == an -> "Fail 26"
        !(x != an) -> "Fail 27"
        bx == an -> "Fail 28"
        !(bx != an) -> "Fail 29"
        else -> "OK"
    }
}
