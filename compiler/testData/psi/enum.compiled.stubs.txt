Ann.class:
  FILE[kind=File[packageFqName=a.b.c.test.enum]]
    PACKAGE_DIRECTIVE
      DOT_QUALIFIED_EXPRESSION
        DOT_QUALIFIED_EXPRESSION
          DOT_QUALIFIED_EXPRESSION
            DOT_QUALIFIED_EXPRESSION
              REFERENCE_EXPRESSION[referencedName=a]
              REFERENCE_EXPRESSION[referencedName=b]
            REFERENCE_EXPRESSION[referencedName=c]
          REFERENCE_EXPRESSION[referencedName=test]
        REFERENCE_EXPRESSION[referencedName=enum]
    IMPORT_LIST
    CLASS[classId=a/b/c/test/enum/Ann, fqName=a.b.c.test.enum.Ann, isClsStubCompiledToJvmDefaultImplementation=false, isEnumEntry=false, isInterface=false, isLocal=false, isTopLevel=true, name=Ann, superNames=[Annotation]]
      MODIFIER_LIST[public final annotation]
      PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Ann]
        MODIFIER_LIST[public]
        VALUE_PARAMETER_LIST
      SUPER_TYPE_LIST
        SUPER_TYPE_ENTRY
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=Annotation]
      CLASS_BODY


Enum.class:
  FILE[kind=File[packageFqName=a.b.c.test.enum]]
    PACKAGE_DIRECTIVE
      DOT_QUALIFIED_EXPRESSION
        DOT_QUALIFIED_EXPRESSION
          DOT_QUALIFIED_EXPRESSION
            DOT_QUALIFIED_EXPRESSION
              REFERENCE_EXPRESSION[referencedName=a]
              REFERENCE_EXPRESSION[referencedName=b]
            REFERENCE_EXPRESSION[referencedName=c]
          REFERENCE_EXPRESSION[referencedName=test]
        REFERENCE_EXPRESSION[referencedName=enum]
    IMPORT_LIST
    CLASS[classId=a/b/c/test/enum/Enum, fqName=a.b.c.test.enum.Enum, isClsStubCompiledToJvmDefaultImplementation=false, isEnumEntry=false, isInterface=false, isLocal=false, isTopLevel=true, name=Enum, superNames=[Enum]]
      MODIFIER_LIST[public final enum]
      PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Enum]
        MODIFIER_LIST[private]
        VALUE_PARAMETER_LIST
      SUPER_TYPE_LIST
        SUPER_TYPE_ENTRY
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=Enum]
              TYPE_ARGUMENT_LIST
                TYPE_PROJECTION[projectionKind=NONE]
                  TYPE_REFERENCE
                    USER_TYPE
                      USER_TYPE
                        USER_TYPE
                          USER_TYPE
                            USER_TYPE
                              USER_TYPE
                                REFERENCE_EXPRESSION[referencedName=a]
                              REFERENCE_EXPRESSION[referencedName=b]
                            REFERENCE_EXPRESSION[referencedName=c]
                          REFERENCE_EXPRESSION[referencedName=test]
                        REFERENCE_EXPRESSION[referencedName=enum]
                      REFERENCE_EXPRESSION[referencedName=Enum]
      CLASS_BODY
        ENUM_ENTRY[classId=null, fqName=a.b.c.test.enum.Enum.A, isClsStubCompiledToJvmDefaultImplementation=false, isEnumEntry=true, isInterface=false, isLocal=false, isTopLevel=false, name=A, superNames=[]]
        ENUM_ENTRY[classId=null, fqName=a.b.c.test.enum.Enum.B, isClsStubCompiledToJvmDefaultImplementation=false, isEnumEntry=true, isInterface=false, isLocal=false, isTopLevel=false, name=B, superNames=[]]
        ENUM_ENTRY[classId=null, fqName=a.b.c.test.enum.Enum.C, isClsStubCompiledToJvmDefaultImplementation=false, isEnumEntry=true, isInterface=false, isLocal=false, isTopLevel=false, name=C, superNames=[]]
        ENUM_ENTRY[classId=null, fqName=a.b.c.test.enum.Enum.D, isClsStubCompiledToJvmDefaultImplementation=false, isEnumEntry=true, isInterface=false, isLocal=false, isTopLevel=false, name=D, superNames=[]]
        ENUM_ENTRY[classId=null, fqName=a.b.c.test.enum.Enum.E, isClsStubCompiledToJvmDefaultImplementation=false, isEnumEntry=true, isInterface=false, isLocal=false, isTopLevel=false, name=E, superNames=[]]
        ENUM_ENTRY[classId=null, fqName=a.b.c.test.enum.Enum.F, isClsStubCompiledToJvmDefaultImplementation=false, isEnumEntry=true, isInterface=false, isLocal=false, isTopLevel=false, name=F, superNames=[]]
        OBJECT_DECLARATION[classId=a/b/c/test/enum/Enum.Companion, fqName=a.b.c.test.enum.Enum.Companion, isLocal=false, isObjectLiteral=false, isTopLevel=false, name=Companion, superNames=[]]
          MODIFIER_LIST[public companion]
          CLASS_BODY
            PROPERTY[fqName=a.b.c.test.enum.Enum.Companion.c, hasBackingField=true, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=c]
              MODIFIER_LIST[public final]
                ANNOTATION_ENTRY[hasValueArguments=false, shortName=Ann]
                  CONSTRUCTOR_CALLEE
                    TYPE_REFERENCE
                      USER_TYPE
                        USER_TYPE
                          USER_TYPE
                            USER_TYPE
                              USER_TYPE
                                USER_TYPE
                                  REFERENCE_EXPRESSION[referencedName=a]
                                REFERENCE_EXPRESSION[referencedName=b]
                              REFERENCE_EXPRESSION[referencedName=c]
                            REFERENCE_EXPRESSION[referencedName=test]
                          REFERENCE_EXPRESSION[referencedName=enum]
                        REFERENCE_EXPRESSION[referencedName=Ann]
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Int]
        FUN[fqName=a.b.c.test.enum.Enum.f, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=f]
          MODIFIER_LIST[public open]
          VALUE_PARAMETER_LIST
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=Int]
