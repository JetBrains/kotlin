namespace jet

public open class jet.Any {
    public final /*constructor*/ fun <init>(): jet.Any
}
public final class jet.Array</*0,r*/ T : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0,r*/ T : jet.Any?><init>(/*0*/ size: jet.Int, /*1*/ init: jet.Function1<jet.Int, T>): jet.Array<T>
    public final fun get(/*0*/ index: jet.Int): T
    public final val indices: jet.IntRange
    public final fun iterator(): jet.Iterator<T>
    public final fun set(/*0*/ index: jet.Int, /*1*/ value: T): jet.Tuple0
    public final val size: jet.Int
}
public final class jet.Boolean : jet.Comparable<jet.Boolean> {
    public final /*constructor*/ fun <init>(): jet.Boolean
    public final fun and(/*0*/ other: jet.Boolean): jet.Boolean
    public open override /*1*/ fun compareTo(/*0*/ that: jet.Boolean): jet.Int
    public final fun equals(/*0*/ other: jet.Any?): jet.Boolean
    public final fun not(): jet.Boolean
    public final fun or(/*0*/ other: jet.Boolean): jet.Boolean
    public final fun xor(/*0*/ other: jet.Boolean): jet.Boolean
}
public final class jet.BooleanArray : jet.Any {
    public final /*constructor*/ fun <init>(/*0*/ size: jet.Int): jet.BooleanArray
    public final fun get(/*0*/ index: jet.Int): jet.Boolean
    public final val indices: jet.IntRange
    public final fun iterator(): jet.BooleanIterator
    public final fun set(/*0*/ index: jet.Int, /*1*/ value: jet.Boolean): jet.Tuple0
    public final val size: jet.Int
}
public abstract trait jet.BooleanIterable : jet.Iterable<jet.Boolean> {
    public abstract override /*1*/ fun iterator(): jet.BooleanIterator
}
public abstract class jet.BooleanIterator : jet.Iterator<jet.Boolean> {
    public final /*constructor*/ fun <init>(): jet.BooleanIterator
    public abstract override /*1*/ val hasNext: jet.Boolean
    public open override /*1*/ fun next(): jet.Boolean
    public abstract fun nextBoolean(): jet.Boolean
}
public final class jet.Byte : jet.Number, jet.Comparable<jet.Byte> {
    public final /*constructor*/ fun <init>(): jet.Byte
    public open override /*1*/ fun compareTo(/*0*/ other: jet.Byte): jet.Int
    public final fun compareTo(/*0*/ other: jet.Char): jet.Int
    public final fun compareTo(/*0*/ other: jet.Double): jet.Int
    public final fun compareTo(/*0*/ other: jet.Float): jet.Int
    public final fun compareTo(/*0*/ other: jet.Int): jet.Int
    public final fun compareTo(/*0*/ other: jet.Long): jet.Int
    public final fun compareTo(/*0*/ other: jet.Short): jet.Int
    public final fun dec(): jet.Byte
    public final fun div(/*0*/ other: jet.Byte): jet.Int
    public final fun div(/*0*/ other: jet.Char): jet.Int
    public final fun div(/*0*/ other: jet.Double): jet.Double
    public final fun div(/*0*/ other: jet.Float): jet.Float
    public final fun div(/*0*/ other: jet.Int): jet.Int
    public final fun div(/*0*/ other: jet.Long): jet.Long
    public final fun div(/*0*/ other: jet.Short): jet.Int
    public final fun downto(/*0*/ other: jet.Byte): jet.ByteRange
    public final fun downto(/*0*/ other: jet.Char): jet.CharRange
    public final fun downto(/*0*/ other: jet.Double): jet.DoubleRange
    public final fun downto(/*0*/ other: jet.Float): jet.FloatRange
    public final fun downto(/*0*/ other: jet.Int): jet.IntRange
    public final fun downto(/*0*/ other: jet.Long): jet.LongRange
    public final fun downto(/*0*/ other: jet.Short): jet.ShortRange
    public open override /*1*/ fun equals(/*0*/ other: jet.Any?): jet.Boolean
    public open override /*1*/ fun hashCode(): jet.Int
    public final fun inc(): jet.Byte
    public final fun minus(): jet.Byte
    public final fun minus(/*0*/ other: jet.Byte): jet.Int
    public final fun minus(/*0*/ other: jet.Char): jet.Int
    public final fun minus(/*0*/ other: jet.Double): jet.Double
    public final fun minus(/*0*/ other: jet.Float): jet.Float
    public final fun minus(/*0*/ other: jet.Int): jet.Int
    public final fun minus(/*0*/ other: jet.Long): jet.Long
    public final fun minus(/*0*/ other: jet.Short): jet.Int
    public final fun mod(/*0*/ other: jet.Byte): jet.Int
    public final fun mod(/*0*/ other: jet.Char): jet.Int
    public final fun mod(/*0*/ other: jet.Double): jet.Double
    public final fun mod(/*0*/ other: jet.Float): jet.Float
    public final fun mod(/*0*/ other: jet.Int): jet.Int
    public final fun mod(/*0*/ other: jet.Long): jet.Long
    public final fun mod(/*0*/ other: jet.Short): jet.Int
    public final fun plus(): jet.Byte
    public final fun plus(/*0*/ other: jet.Byte): jet.Int
    public final fun plus(/*0*/ other: jet.Char): jet.Int
    public final fun plus(/*0*/ other: jet.Double): jet.Double
    public final fun plus(/*0*/ other: jet.Float): jet.Float
    public final fun plus(/*0*/ other: jet.Int): jet.Int
    public final fun plus(/*0*/ other: jet.Long): jet.Long
    public final fun plus(/*0*/ other: jet.Short): jet.Int
    public final fun rangeTo(/*0*/ other: jet.Byte): jet.ByteRange
    public final fun rangeTo(/*0*/ other: jet.Char): jet.CharRange
    public final fun rangeTo(/*0*/ other: jet.Double): jet.DoubleRange
    public final fun rangeTo(/*0*/ other: jet.Float): jet.FloatRange
    public final fun rangeTo(/*0*/ other: jet.Int): jet.IntRange
    public final fun rangeTo(/*0*/ other: jet.Long): jet.LongRange
    public final fun rangeTo(/*0*/ other: jet.Short): jet.ShortRange
    public final fun times(/*0*/ other: jet.Byte): jet.Int
    public final fun times(/*0*/ other: jet.Char): jet.Int
    public final fun times(/*0*/ other: jet.Double): jet.Double
    public final fun times(/*0*/ other: jet.Float): jet.Float
    public final fun times(/*0*/ other: jet.Int): jet.Int
    public final fun times(/*0*/ other: jet.Long): jet.Long
    public final fun times(/*0*/ other: jet.Short): jet.Int
    public open override /*1*/ fun toByte(): jet.Byte
    public open override /*1*/ fun toChar(): jet.Char
    public open override /*1*/ fun toDouble(): jet.Double
    public open override /*1*/ fun toFloat(): jet.Float
    public open override /*1*/ fun toInt(): jet.Int
    public open override /*1*/ fun toLong(): jet.Long
    public open override /*1*/ fun toShort(): jet.Short
    public final fun upto(/*0*/ other: jet.Byte): jet.ByteRange
    public final fun upto(/*0*/ other: jet.Char): jet.CharRange
    public final fun upto(/*0*/ other: jet.Double): jet.DoubleRange
    public final fun upto(/*0*/ other: jet.Float): jet.FloatRange
    public final fun upto(/*0*/ other: jet.Int): jet.IntRange
    public final fun upto(/*0*/ other: jet.Long): jet.LongRange
    public final fun upto(/*0*/ other: jet.Short): jet.ShortRange
}
public final class jet.ByteArray : jet.Any {
    public final /*constructor*/ fun <init>(/*0*/ size: jet.Int): jet.ByteArray
    public final fun get(/*0*/ index: jet.Int): jet.Byte
    public final val indices: jet.IntRange
    public final fun iterator(): jet.ByteIterator
    public final fun set(/*0*/ index: jet.Int, /*1*/ value: jet.Byte): jet.Tuple0
    public final val size: jet.Int
}
public abstract trait jet.ByteIterable : jet.Iterable<jet.Byte> {
    public abstract override /*1*/ fun iterator(): jet.ByteIterator
}
public abstract class jet.ByteIterator : jet.Iterator<jet.Byte> {
    public final /*constructor*/ fun <init>(): jet.ByteIterator
    public abstract override /*1*/ val hasNext: jet.Boolean
    public open override /*1*/ fun next(): jet.Byte
    public abstract fun nextByte(): jet.Byte
}
public final class jet.ByteRange : jet.Range<jet.Byte>, jet.ByteIterable {
    public final /*constructor*/ fun <init>(/*0*/ start: jet.Byte, /*1*/ size: jet.Int): jet.ByteRange
    public open override /*1*/ fun contains(/*0*/ elem: jet.Byte): jet.Boolean
    public final val end: jet.Byte
    public final val isReversed: jet.Boolean
    public open override /*1*/ fun iterator(): jet.ByteIterator
    public final val iteratorStart: jet.Byte
    public final fun minus(): jet.ByteRange
    public final val size: jet.Int
    public final val start: jet.Byte
    public final fun step(/*0*/ step: jet.Int): jet.ByteIterator
}
public final class jet.Char : jet.Number, jet.Comparable<jet.Char> {
    public final /*constructor*/ fun <init>(): jet.Char
    public final fun compareTo(/*0*/ other: jet.Byte): jet.Int
    public open override /*1*/ fun compareTo(/*0*/ other: jet.Char): jet.Int
    public final fun compareTo(/*0*/ other: jet.Double): jet.Int
    public final fun compareTo(/*0*/ other: jet.Float): jet.Int
    public final fun compareTo(/*0*/ other: jet.Int): jet.Int
    public final fun compareTo(/*0*/ other: jet.Long): jet.Int
    public final fun compareTo(/*0*/ other: jet.Short): jet.Int
    public final fun dec(): jet.Char
    public final fun div(/*0*/ other: jet.Byte): jet.Int
    public final fun div(/*0*/ other: jet.Double): jet.Double
    public final fun div(/*0*/ other: jet.Float): jet.Float
    public final fun div(/*0*/ other: jet.Int): jet.Int
    public final fun div(/*0*/ other: jet.Long): jet.Long
    public final fun div(/*0*/ other: jet.Short): jet.Int
    public final fun downto(/*0*/ other: jet.Byte): jet.CharRange
    public final fun downto(/*0*/ other: jet.Char): jet.CharRange
    public final fun downto(/*0*/ other: jet.Double): jet.DoubleRange
    public final fun downto(/*0*/ other: jet.Float): jet.FloatRange
    public final fun downto(/*0*/ other: jet.Int): jet.IntRange
    public final fun downto(/*0*/ other: jet.Long): jet.LongRange
    public final fun downto(/*0*/ other: jet.Short): jet.ShortRange
    public open override /*1*/ fun equals(/*0*/ other: jet.Any?): jet.Boolean
    public open override /*1*/ fun hashCode(): jet.Int
    public final fun inc(): jet.Char
    public final fun minus(): jet.Int
    public final fun minus(/*0*/ other: jet.Byte): jet.Int
    public final fun minus(/*0*/ other: jet.Char): jet.Int
    public final fun minus(/*0*/ other: jet.Double): jet.Double
    public final fun minus(/*0*/ other: jet.Float): jet.Float
    public final fun minus(/*0*/ other: jet.Int): jet.Int
    public final fun minus(/*0*/ other: jet.Long): jet.Long
    public final fun minus(/*0*/ other: jet.Short): jet.Int
    public final fun mod(/*0*/ other: jet.Byte): jet.Int
    public final fun mod(/*0*/ other: jet.Double): jet.Double
    public final fun mod(/*0*/ other: jet.Float): jet.Float
    public final fun mod(/*0*/ other: jet.Int): jet.Int
    public final fun mod(/*0*/ other: jet.Long): jet.Long
    public final fun mod(/*0*/ other: jet.Short): jet.Int
    public final fun plus(): jet.Int
    public final fun plus(/*0*/ other: jet.Byte): jet.Int
    public final fun plus(/*0*/ other: jet.Double): jet.Double
    public final fun plus(/*0*/ other: jet.Float): jet.Float
    public final fun plus(/*0*/ other: jet.Int): jet.Int
    public final fun plus(/*0*/ other: jet.Long): jet.Long
    public final fun plus(/*0*/ other: jet.Short): jet.Int
    public final fun rangeTo(/*0*/ other: jet.Byte): jet.CharRange
    public final fun rangeTo(/*0*/ other: jet.Char): jet.CharRange
    public final fun rangeTo(/*0*/ other: jet.Double): jet.DoubleRange
    public final fun rangeTo(/*0*/ other: jet.Float): jet.FloatRange
    public final fun rangeTo(/*0*/ other: jet.Int): jet.IntRange
    public final fun rangeTo(/*0*/ other: jet.Long): jet.LongRange
    public final fun rangeTo(/*0*/ other: jet.Short): jet.ShortRange
    public final fun times(/*0*/ other: jet.Byte): jet.Int
    public final fun times(/*0*/ other: jet.Double): jet.Double
    public final fun times(/*0*/ other: jet.Float): jet.Float
    public final fun times(/*0*/ other: jet.Int): jet.Int
    public final fun times(/*0*/ other: jet.Long): jet.Long
    public final fun times(/*0*/ other: jet.Short): jet.Int
    public open override /*1*/ fun toByte(): jet.Byte
    public open override /*1*/ fun toChar(): jet.Char
    public open override /*1*/ fun toDouble(): jet.Double
    public open override /*1*/ fun toFloat(): jet.Float
    public open override /*1*/ fun toInt(): jet.Int
    public open override /*1*/ fun toLong(): jet.Long
    public open override /*1*/ fun toShort(): jet.Short
    public final fun upto(/*0*/ other: jet.Byte): jet.CharRange
    public final fun upto(/*0*/ other: jet.Char): jet.CharRange
    public final fun upto(/*0*/ other: jet.Double): jet.DoubleRange
    public final fun upto(/*0*/ other: jet.Float): jet.FloatRange
    public final fun upto(/*0*/ other: jet.Int): jet.IntRange
    public final fun upto(/*0*/ other: jet.Long): jet.LongRange
    public final fun upto(/*0*/ other: jet.Short): jet.ShortRange
}
public final class jet.CharArray : jet.Any {
    public final /*constructor*/ fun <init>(/*0*/ size: jet.Int): jet.CharArray
    public final fun get(/*0*/ index: jet.Int): jet.Char
    public final val indices: jet.IntRange
    public final fun iterator(): jet.CharIterator
    public final fun set(/*0*/ index: jet.Int, /*1*/ value: jet.Char): jet.Tuple0
    public final val size: jet.Int
}
public abstract trait jet.CharIterable : jet.Iterable<jet.Char> {
    public abstract override /*1*/ fun iterator(): jet.CharIterator
}
public abstract class jet.CharIterator : jet.Iterator<jet.Char> {
    public final /*constructor*/ fun <init>(): jet.CharIterator
    public abstract override /*1*/ val hasNext: jet.Boolean
    public open override /*1*/ fun next(): jet.Char
    public abstract fun nextChar(): jet.Char
}
public final class jet.CharRange : jet.Range<jet.Char>, jet.CharIterable {
    public final /*constructor*/ fun <init>(/*0*/ start: jet.Char, /*1*/ size: jet.Int): jet.CharRange
    public open override /*1*/ fun contains(/*0*/ elem: jet.Char): jet.Boolean
    public final val end: jet.Char
    public final val isReversed: jet.Boolean
    public open override /*1*/ fun iterator(): jet.CharIterator
    public final val iteratorStart: jet.Char
    public final fun minus(): jet.CharRange
    public final val size: jet.Int
    public final val start: jet.Char
    public final fun step(/*0*/ step: jet.Int): jet.CharIterator
}
public abstract trait jet.CharSequence : jet.Any {
    public abstract fun get(/*0*/ index: jet.Int): jet.Char
    public abstract val length: jet.Int
    public abstract fun toString(): jet.String
}
public abstract trait jet.Comparable</*0*/ in T : jet.Any?> : jet.Any {
    public abstract fun compareTo(/*0*/ other: T): jet.Int
}
public final class jet.Double : jet.Number, jet.Comparable<jet.Double> {
    public final /*constructor*/ fun <init>(): jet.Double
    public final fun compareTo(/*0*/ other: jet.Byte): jet.Int
    public final fun compareTo(/*0*/ other: jet.Char): jet.Int
    public open override /*1*/ fun compareTo(/*0*/ other: jet.Double): jet.Int
    public final fun compareTo(/*0*/ other: jet.Float): jet.Int
    public final fun compareTo(/*0*/ other: jet.Int): jet.Int
    public final fun compareTo(/*0*/ other: jet.Long): jet.Int
    public final fun compareTo(/*0*/ other: jet.Short): jet.Int
    public final fun dec(): jet.Double
    public final fun div(/*0*/ other: jet.Byte): jet.Double
    public final fun div(/*0*/ other: jet.Char): jet.Double
    public final fun div(/*0*/ other: jet.Double): jet.Double
    public final fun div(/*0*/ other: jet.Float): jet.Double
    public final fun div(/*0*/ other: jet.Int): jet.Double
    public final fun div(/*0*/ other: jet.Long): jet.Double
    public final fun div(/*0*/ other: jet.Short): jet.Double
    public final fun downto(/*0*/ other: jet.Byte): jet.DoubleRange
    public final fun downto(/*0*/ other: jet.Char): jet.DoubleRange
    public final fun downto(/*0*/ other: jet.Double): jet.DoubleRange
    public final fun downto(/*0*/ other: jet.Float): jet.DoubleRange
    public final fun downto(/*0*/ other: jet.Int): jet.DoubleRange
    public final fun downto(/*0*/ other: jet.Long): jet.DoubleRange
    public final fun downto(/*0*/ other: jet.Short): jet.DoubleRange
    public open override /*1*/ fun equals(/*0*/ other: jet.Any?): jet.Boolean
    public open override /*1*/ fun hashCode(): jet.Int
    public final fun inc(): jet.Double
    public final fun minus(): jet.Double
    public final fun minus(/*0*/ other: jet.Byte): jet.Double
    public final fun minus(/*0*/ other: jet.Char): jet.Double
    public final fun minus(/*0*/ other: jet.Double): jet.Double
    public final fun minus(/*0*/ other: jet.Float): jet.Double
    public final fun minus(/*0*/ other: jet.Int): jet.Double
    public final fun minus(/*0*/ other: jet.Long): jet.Double
    public final fun minus(/*0*/ other: jet.Short): jet.Double
    public final fun mod(/*0*/ other: jet.Byte): jet.Double
    public final fun mod(/*0*/ other: jet.Double): jet.Double
    public final fun mod(/*0*/ other: jet.Float): jet.Double
    public final fun mod(/*0*/ other: jet.Int): jet.Double
    public final fun mod(/*0*/ other: jet.Long): jet.Double
    public final fun mod(/*0*/ other: jet.Short): jet.Double
    public final fun plus(): jet.Double
    public final fun plus(/*0*/ other: jet.Byte): jet.Double
    public final fun plus(/*0*/ other: jet.Char): jet.Double
    public final fun plus(/*0*/ other: jet.Double): jet.Double
    public final fun plus(/*0*/ other: jet.Float): jet.Double
    public final fun plus(/*0*/ other: jet.Int): jet.Double
    public final fun plus(/*0*/ other: jet.Long): jet.Double
    public final fun plus(/*0*/ other: jet.Short): jet.Double
    public final fun rangeTo(/*0*/ other: jet.Byte): jet.DoubleRange
    public final fun rangeTo(/*0*/ other: jet.Char): jet.DoubleRange
    public final fun rangeTo(/*0*/ other: jet.Double): jet.DoubleRange
    public final fun rangeTo(/*0*/ other: jet.Float): jet.DoubleRange
    public final fun rangeTo(/*0*/ other: jet.Int): jet.DoubleRange
    public final fun rangeTo(/*0*/ other: jet.Long): jet.DoubleRange
    public final fun rangeTo(/*0*/ other: jet.Short): jet.DoubleRange
    public final fun times(/*0*/ other: jet.Byte): jet.Double
    public final fun times(/*0*/ other: jet.Char): jet.Double
    public final fun times(/*0*/ other: jet.Double): jet.Double
    public final fun times(/*0*/ other: jet.Float): jet.Double
    public final fun times(/*0*/ other: jet.Int): jet.Double
    public final fun times(/*0*/ other: jet.Long): jet.Double
    public final fun times(/*0*/ other: jet.Short): jet.Double
    public open override /*1*/ fun toByte(): jet.Byte
    public open override /*1*/ fun toChar(): jet.Char
    public open override /*1*/ fun toDouble(): jet.Double
    public open override /*1*/ fun toFloat(): jet.Float
    public open override /*1*/ fun toInt(): jet.Int
    public open override /*1*/ fun toLong(): jet.Long
    public open override /*1*/ fun toShort(): jet.Short
    public final fun upto(/*0*/ other: jet.Byte): jet.DoubleRange
    public final fun upto(/*0*/ other: jet.Char): jet.DoubleRange
    public final fun upto(/*0*/ other: jet.Double): jet.DoubleRange
    public final fun upto(/*0*/ other: jet.Float): jet.DoubleRange
    public final fun upto(/*0*/ other: jet.Int): jet.DoubleRange
    public final fun upto(/*0*/ other: jet.Long): jet.DoubleRange
    public final fun upto(/*0*/ other: jet.Short): jet.DoubleRange
}
public final class jet.DoubleArray : jet.Any {
    public final /*constructor*/ fun <init>(/*0*/ size: jet.Int): jet.DoubleArray
    public final fun get(/*0*/ index: jet.Int): jet.Double
    public final val indices: jet.IntRange
    public final fun iterator(): jet.DoubleIterator
    public final fun set(/*0*/ index: jet.Int, /*1*/ value: jet.Double): jet.Tuple0
    public final val size: jet.Int
}
public abstract trait jet.DoubleIterable : jet.Iterable<jet.Double> {
    public abstract override /*1*/ fun iterator(): jet.DoubleIterator
}
public abstract class jet.DoubleIterator : jet.Iterator<jet.Double> {
    public final /*constructor*/ fun <init>(): jet.DoubleIterator
    public abstract override /*1*/ val hasNext: jet.Boolean
    public open override /*1*/ fun next(): jet.Double
    public abstract fun nextDouble(): jet.Double
}
public final class jet.DoubleRange : jet.Range<jet.Double> {
    public final /*constructor*/ fun <init>(/*0*/ start: jet.Double, /*1*/ size: jet.Double): jet.DoubleRange
    public open override /*1*/ fun contains(/*0*/ elem: jet.Double): jet.Boolean
    public final val end: jet.Double
    public final val isReversed: jet.Boolean
    public final fun minus(): jet.DoubleRange
    public final val size: jet.Double
    public final val start: jet.Double
    public final fun step(/*0*/ step: jet.Double): jet.DoubleIterator
}
public abstract class jet.ExtensionFunction0</*0*/ in T : jet.Any?, /*1*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ out R : jet.Any?><init>(): jet.ExtensionFunction0<T, R>
    public abstract fun T.invoke(): R
}
public abstract class jet.ExtensionFunction1</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ out R : jet.Any?><init>(): jet.ExtensionFunction1<T, P1, R>
    public abstract fun T.invoke(/*0*/ p1: P1): R
}
public abstract class jet.ExtensionFunction10</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ out R : jet.Any?><init>(): jet.ExtensionFunction10<T, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, R>
    public abstract fun T.invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10): R
}
public abstract class jet.ExtensionFunction11</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ out R : jet.Any?><init>(): jet.ExtensionFunction11<T, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, R>
    public abstract fun T.invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11): R
}
public abstract class jet.ExtensionFunction12</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ out R : jet.Any?><init>(): jet.ExtensionFunction12<T, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, R>
    public abstract fun T.invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12): R
}
public abstract class jet.ExtensionFunction13</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ in P13 : jet.Any?, /*14*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ in P13 : jet.Any?, /*14*/ out R : jet.Any?><init>(): jet.ExtensionFunction13<T, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, R>
    public abstract fun T.invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12, /*12*/ p13: P13): R
}
public abstract class jet.ExtensionFunction14</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ in P13 : jet.Any?, /*14*/ in P14 : jet.Any?, /*15*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ in P13 : jet.Any?, /*14*/ in P14 : jet.Any?, /*15*/ out R : jet.Any?><init>(): jet.ExtensionFunction14<T, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, R>
    public abstract fun T.invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12, /*12*/ p13: P13, /*13*/ p14: P14): R
}
public abstract class jet.ExtensionFunction15</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ in P13 : jet.Any?, /*14*/ in P14 : jet.Any?, /*15*/ in P15 : jet.Any?, /*16*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ in P13 : jet.Any?, /*14*/ in P14 : jet.Any?, /*15*/ in P15 : jet.Any?, /*16*/ out R : jet.Any?><init>(): jet.ExtensionFunction15<T, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, R>
    public abstract fun T.invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12, /*12*/ p13: P13, /*13*/ p14: P14, /*14*/ p15: P15): R
}
public abstract class jet.ExtensionFunction16</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ in P13 : jet.Any?, /*14*/ in P14 : jet.Any?, /*15*/ in P15 : jet.Any?, /*16*/ in P16 : jet.Any?, /*17*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ in P13 : jet.Any?, /*14*/ in P14 : jet.Any?, /*15*/ in P15 : jet.Any?, /*16*/ in P16 : jet.Any?, /*17*/ out R : jet.Any?><init>(): jet.ExtensionFunction16<T, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, R>
    public abstract fun T.invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12, /*12*/ p13: P13, /*13*/ p14: P14, /*14*/ p15: P15, /*15*/ p16: P16): R
}
public abstract class jet.ExtensionFunction17</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ in P13 : jet.Any?, /*14*/ in P14 : jet.Any?, /*15*/ in P15 : jet.Any?, /*16*/ in P16 : jet.Any?, /*17*/ in P17 : jet.Any?, /*18*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ in P13 : jet.Any?, /*14*/ in P14 : jet.Any?, /*15*/ in P15 : jet.Any?, /*16*/ in P16 : jet.Any?, /*17*/ in P17 : jet.Any?, /*18*/ out R : jet.Any?><init>(): jet.ExtensionFunction17<T, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, R>
    public abstract fun T.invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12, /*12*/ p13: P13, /*13*/ p14: P14, /*14*/ p15: P15, /*15*/ p16: P16, /*16*/ p17: P17): R
}
public abstract class jet.ExtensionFunction18</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ in P13 : jet.Any?, /*14*/ in P14 : jet.Any?, /*15*/ in P15 : jet.Any?, /*16*/ in P16 : jet.Any?, /*17*/ in P17 : jet.Any?, /*18*/ in P18 : jet.Any?, /*19*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ in P13 : jet.Any?, /*14*/ in P14 : jet.Any?, /*15*/ in P15 : jet.Any?, /*16*/ in P16 : jet.Any?, /*17*/ in P17 : jet.Any?, /*18*/ in P18 : jet.Any?, /*19*/ out R : jet.Any?><init>(): jet.ExtensionFunction18<T, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, R>
    public abstract fun T.invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12, /*12*/ p13: P13, /*13*/ p14: P14, /*14*/ p15: P15, /*15*/ p16: P16, /*16*/ p17: P17, /*17*/ p18: P18): R
}
public abstract class jet.ExtensionFunction19</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ in P13 : jet.Any?, /*14*/ in P14 : jet.Any?, /*15*/ in P15 : jet.Any?, /*16*/ in P16 : jet.Any?, /*17*/ in P17 : jet.Any?, /*18*/ in P18 : jet.Any?, /*19*/ in P19 : jet.Any?, /*20*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ in P13 : jet.Any?, /*14*/ in P14 : jet.Any?, /*15*/ in P15 : jet.Any?, /*16*/ in P16 : jet.Any?, /*17*/ in P17 : jet.Any?, /*18*/ in P18 : jet.Any?, /*19*/ in P19 : jet.Any?, /*20*/ out R : jet.Any?><init>(): jet.ExtensionFunction19<T, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, R>
    public abstract fun T.invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12, /*12*/ p13: P13, /*13*/ p14: P14, /*14*/ p15: P15, /*15*/ p16: P16, /*16*/ p17: P17, /*17*/ p18: P18, /*18*/ p19: P19): R
}
public abstract class jet.ExtensionFunction2</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ out R : jet.Any?><init>(): jet.ExtensionFunction2<T, P1, P2, R>
    public abstract fun T.invoke(/*0*/ p1: P1, /*1*/ p2: P2): R
}
public abstract class jet.ExtensionFunction20</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ in P13 : jet.Any?, /*14*/ in P14 : jet.Any?, /*15*/ in P15 : jet.Any?, /*16*/ in P16 : jet.Any?, /*17*/ in P17 : jet.Any?, /*18*/ in P18 : jet.Any?, /*19*/ in P19 : jet.Any?, /*20*/ in P20 : jet.Any?, /*21*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ in P13 : jet.Any?, /*14*/ in P14 : jet.Any?, /*15*/ in P15 : jet.Any?, /*16*/ in P16 : jet.Any?, /*17*/ in P17 : jet.Any?, /*18*/ in P18 : jet.Any?, /*19*/ in P19 : jet.Any?, /*20*/ in P20 : jet.Any?, /*21*/ out R : jet.Any?><init>(): jet.ExtensionFunction20<T, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, R>
    public abstract fun T.invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12, /*12*/ p13: P13, /*13*/ p14: P14, /*14*/ p15: P15, /*15*/ p16: P16, /*16*/ p17: P17, /*17*/ p18: P18, /*18*/ p19: P19, /*19*/ p20: P20): R
}
public abstract class jet.ExtensionFunction21</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ in P13 : jet.Any?, /*14*/ in P14 : jet.Any?, /*15*/ in P15 : jet.Any?, /*16*/ in P16 : jet.Any?, /*17*/ in P17 : jet.Any?, /*18*/ in P18 : jet.Any?, /*19*/ in P19 : jet.Any?, /*20*/ in P20 : jet.Any?, /*21*/ in P21 : jet.Any?, /*22*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ in P13 : jet.Any?, /*14*/ in P14 : jet.Any?, /*15*/ in P15 : jet.Any?, /*16*/ in P16 : jet.Any?, /*17*/ in P17 : jet.Any?, /*18*/ in P18 : jet.Any?, /*19*/ in P19 : jet.Any?, /*20*/ in P20 : jet.Any?, /*21*/ in P21 : jet.Any?, /*22*/ out R : jet.Any?><init>(): jet.ExtensionFunction21<T, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21, R>
    public abstract fun T.invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12, /*12*/ p13: P13, /*13*/ p14: P14, /*14*/ p15: P15, /*15*/ p16: P16, /*16*/ p17: P17, /*17*/ p18: P18, /*18*/ p19: P19, /*19*/ p20: P20, /*20*/ p21: P21): R
}
public abstract class jet.ExtensionFunction22</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ in P13 : jet.Any?, /*14*/ in P14 : jet.Any?, /*15*/ in P15 : jet.Any?, /*16*/ in P16 : jet.Any?, /*17*/ in P17 : jet.Any?, /*18*/ in P18 : jet.Any?, /*19*/ in P19 : jet.Any?, /*20*/ in P20 : jet.Any?, /*21*/ in P21 : jet.Any?, /*22*/ in P22 : jet.Any?, /*23*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ in P10 : jet.Any?, /*11*/ in P11 : jet.Any?, /*12*/ in P12 : jet.Any?, /*13*/ in P13 : jet.Any?, /*14*/ in P14 : jet.Any?, /*15*/ in P15 : jet.Any?, /*16*/ in P16 : jet.Any?, /*17*/ in P17 : jet.Any?, /*18*/ in P18 : jet.Any?, /*19*/ in P19 : jet.Any?, /*20*/ in P20 : jet.Any?, /*21*/ in P21 : jet.Any?, /*22*/ in P22 : jet.Any?, /*23*/ out R : jet.Any?><init>(): jet.ExtensionFunction22<T, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21, P22, R>
    public abstract fun T.invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12, /*12*/ p13: P13, /*13*/ p14: P14, /*14*/ p15: P15, /*15*/ p16: P16, /*16*/ p17: P17, /*17*/ p18: P18, /*18*/ p19: P19, /*19*/ p20: P20, /*20*/ p21: P21, /*21*/ p22: P22): R
}
public abstract class jet.ExtensionFunction3</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ out R : jet.Any?><init>(): jet.ExtensionFunction3<T, P1, P2, P3, R>
    public abstract fun T.invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3): R
}
public abstract class jet.ExtensionFunction4</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ out R : jet.Any?><init>(): jet.ExtensionFunction4<T, P1, P2, P3, P4, R>
    public abstract fun T.invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4): R
}
public abstract class jet.ExtensionFunction5</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ out R : jet.Any?><init>(): jet.ExtensionFunction5<T, P1, P2, P3, P4, P5, R>
    public abstract fun T.invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5): R
}
public abstract class jet.ExtensionFunction6</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ out R : jet.Any?><init>(): jet.ExtensionFunction6<T, P1, P2, P3, P4, P5, P6, R>
    public abstract fun T.invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6): R
}
public abstract class jet.ExtensionFunction7</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ out R : jet.Any?><init>(): jet.ExtensionFunction7<T, P1, P2, P3, P4, P5, P6, P7, R>
    public abstract fun T.invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7): R
}
public abstract class jet.ExtensionFunction8</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ out R : jet.Any?><init>(): jet.ExtensionFunction8<T, P1, P2, P3, P4, P5, P6, P7, P8, R>
    public abstract fun T.invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8): R
}
public abstract class jet.ExtensionFunction9</*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in T : jet.Any?, /*1*/ in P1 : jet.Any?, /*2*/ in P2 : jet.Any?, /*3*/ in P3 : jet.Any?, /*4*/ in P4 : jet.Any?, /*5*/ in P5 : jet.Any?, /*6*/ in P6 : jet.Any?, /*7*/ in P7 : jet.Any?, /*8*/ in P8 : jet.Any?, /*9*/ in P9 : jet.Any?, /*10*/ out R : jet.Any?><init>(): jet.ExtensionFunction9<T, P1, P2, P3, P4, P5, P6, P7, P8, P9, R>
    public abstract fun T.invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9): R
}
public final class jet.Float : jet.Number, jet.Comparable<jet.Float> {
    public final /*constructor*/ fun <init>(): jet.Float
    public final fun compareTo(/*0*/ other: jet.Byte): jet.Int
    public final fun compareTo(/*0*/ other: jet.Char): jet.Int
    public final fun compareTo(/*0*/ other: jet.Double): jet.Int
    public open override /*1*/ fun compareTo(/*0*/ other: jet.Float): jet.Int
    public final fun compareTo(/*0*/ other: jet.Int): jet.Int
    public final fun compareTo(/*0*/ other: jet.Long): jet.Int
    public final fun compareTo(/*0*/ other: jet.Short): jet.Int
    public final fun dec(): jet.Float
    public final fun div(/*0*/ other: jet.Byte): jet.Float
    public final fun div(/*0*/ other: jet.Char): jet.Float
    public final fun div(/*0*/ other: jet.Double): jet.Double
    public final fun div(/*0*/ other: jet.Float): jet.Float
    public final fun div(/*0*/ other: jet.Int): jet.Float
    public final fun div(/*0*/ other: jet.Long): jet.Float
    public final fun div(/*0*/ other: jet.Short): jet.Float
    public final fun downto(/*0*/ other: jet.Byte): jet.FloatRange
    public final fun downto(/*0*/ other: jet.Char): jet.FloatRange
    public final fun downto(/*0*/ other: jet.Double): jet.DoubleRange
    public final fun downto(/*0*/ other: jet.Float): jet.FloatRange
    public final fun downto(/*0*/ other: jet.Int): jet.FloatRange
    public final fun downto(/*0*/ other: jet.Long): jet.DoubleRange
    public final fun downto(/*0*/ other: jet.Short): jet.FloatRange
    public open override /*1*/ fun equals(/*0*/ other: jet.Any?): jet.Boolean
    public open override /*1*/ fun hashCode(): jet.Int
    public final fun inc(): jet.Float
    public final fun minus(): jet.Float
    public final fun minus(/*0*/ other: jet.Byte): jet.Float
    public final fun minus(/*0*/ other: jet.Char): jet.Float
    public final fun minus(/*0*/ other: jet.Double): jet.Double
    public final fun minus(/*0*/ other: jet.Float): jet.Float
    public final fun minus(/*0*/ other: jet.Int): jet.Float
    public final fun minus(/*0*/ other: jet.Long): jet.Float
    public final fun minus(/*0*/ other: jet.Short): jet.Float
    public final fun mod(/*0*/ other: jet.Byte): jet.Float
    public final fun mod(/*0*/ other: jet.Char): jet.Float
    public final fun mod(/*0*/ other: jet.Double): jet.Double
    public final fun mod(/*0*/ other: jet.Float): jet.Float
    public final fun mod(/*0*/ other: jet.Int): jet.Float
    public final fun mod(/*0*/ other: jet.Long): jet.Float
    public final fun mod(/*0*/ other: jet.Short): jet.Float
    public final fun plus(): jet.Float
    public final fun plus(/*0*/ other: jet.Byte): jet.Float
    public final fun plus(/*0*/ other: jet.Char): jet.Float
    public final fun plus(/*0*/ other: jet.Double): jet.Double
    public final fun plus(/*0*/ other: jet.Float): jet.Float
    public final fun plus(/*0*/ other: jet.Int): jet.Float
    public final fun plus(/*0*/ other: jet.Long): jet.Float
    public final fun plus(/*0*/ other: jet.Short): jet.Float
    public final fun rangeTo(/*0*/ other: jet.Byte): jet.FloatRange
    public final fun rangeTo(/*0*/ other: jet.Char): jet.FloatRange
    public final fun rangeTo(/*0*/ other: jet.Double): jet.DoubleRange
    public final fun rangeTo(/*0*/ other: jet.Float): jet.FloatRange
    public final fun rangeTo(/*0*/ other: jet.Int): jet.FloatRange
    public final fun rangeTo(/*0*/ other: jet.Long): jet.DoubleRange
    public final fun rangeTo(/*0*/ other: jet.Short): jet.FloatRange
    public final fun times(/*0*/ other: jet.Byte): jet.Float
    public final fun times(/*0*/ other: jet.Char): jet.Float
    public final fun times(/*0*/ other: jet.Double): jet.Double
    public final fun times(/*0*/ other: jet.Float): jet.Float
    public final fun times(/*0*/ other: jet.Int): jet.Float
    public final fun times(/*0*/ other: jet.Long): jet.Float
    public final fun times(/*0*/ other: jet.Short): jet.Float
    public open override /*1*/ fun toByte(): jet.Byte
    public open override /*1*/ fun toChar(): jet.Char
    public open override /*1*/ fun toDouble(): jet.Double
    public open override /*1*/ fun toFloat(): jet.Float
    public open override /*1*/ fun toInt(): jet.Int
    public open override /*1*/ fun toLong(): jet.Long
    public open override /*1*/ fun toShort(): jet.Short
    public final fun upto(/*0*/ other: jet.Byte): jet.FloatRange
    public final fun upto(/*0*/ other: jet.Char): jet.FloatRange
    public final fun upto(/*0*/ other: jet.Double): jet.DoubleRange
    public final fun upto(/*0*/ other: jet.Float): jet.FloatRange
    public final fun upto(/*0*/ other: jet.Int): jet.FloatRange
    public final fun upto(/*0*/ other: jet.Long): jet.DoubleRange
    public final fun upto(/*0*/ other: jet.Short): jet.FloatRange
}
public final class jet.FloatArray : jet.Any {
    public final /*constructor*/ fun <init>(/*0*/ size: jet.Int): jet.FloatArray
    public final fun get(/*0*/ index: jet.Int): jet.Float
    public final val indices: jet.IntRange
    public final fun iterator(): jet.FloatIterator
    public final fun set(/*0*/ index: jet.Int, /*1*/ value: jet.Float): jet.Tuple0
    public final val size: jet.Int
}
public abstract trait jet.FloatIterable : jet.Iterable<jet.Float> {
    public abstract override /*1*/ fun iterator(): jet.FloatIterator
}
public abstract class jet.FloatIterator : jet.Iterator<jet.Float> {
    public final /*constructor*/ fun <init>(): jet.FloatIterator
    public abstract override /*1*/ val hasNext: jet.Boolean
    public open override /*1*/ fun next(): jet.Float
    public abstract fun nextFloat(): jet.Float
}
public final class jet.FloatRange : jet.Range<jet.Float> {
    public final /*constructor*/ fun <init>(/*0*/ start: jet.Float, /*1*/ size: jet.Float): jet.FloatRange
    public open override /*1*/ fun contains(/*0*/ elem: jet.Float): jet.Boolean
    public final val end: jet.Float
    public final val isReversed: jet.Boolean
    public final fun minus(): jet.FloatRange
    public final val size: jet.Float
    public final val start: jet.Float
    public final fun step(/*0*/ step: jet.Float): jet.FloatIterator
}
public abstract class jet.Function0</*0*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out R : jet.Any?><init>(): jet.Function0<R>
    public abstract fun invoke(): R
}
public abstract class jet.Function1</*0*/ in P1 : jet.Any?, /*1*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ out R : jet.Any?><init>(): jet.Function1<P1, R>
    public abstract fun invoke(/*0*/ p1: P1): R
}
public abstract class jet.Function10</*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ out R : jet.Any?><init>(): jet.Function10<P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, R>
    public abstract fun invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10): R
}
public abstract class jet.Function11</*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ out R : jet.Any?><init>(): jet.Function11<P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, R>
    public abstract fun invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11): R
}
public abstract class jet.Function12</*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ out R : jet.Any?><init>(): jet.Function12<P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, R>
    public abstract fun invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12): R
}
public abstract class jet.Function13</*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ in P13 : jet.Any?, /*13*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ in P13 : jet.Any?, /*13*/ out R : jet.Any?><init>(): jet.Function13<P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, R>
    public abstract fun invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12, /*12*/ p13: P13): R
}
public abstract class jet.Function14</*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ in P13 : jet.Any?, /*13*/ in P14 : jet.Any?, /*14*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ in P13 : jet.Any?, /*13*/ in P14 : jet.Any?, /*14*/ out R : jet.Any?><init>(): jet.Function14<P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, R>
    public abstract fun invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12, /*12*/ p13: P13, /*13*/ p14: P14): R
}
public abstract class jet.Function15</*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ in P13 : jet.Any?, /*13*/ in P14 : jet.Any?, /*14*/ in P15 : jet.Any?, /*15*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ in P13 : jet.Any?, /*13*/ in P14 : jet.Any?, /*14*/ in P15 : jet.Any?, /*15*/ out R : jet.Any?><init>(): jet.Function15<P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, R>
    public abstract fun invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12, /*12*/ p13: P13, /*13*/ p14: P14, /*14*/ p15: P15): R
}
public abstract class jet.Function16</*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ in P13 : jet.Any?, /*13*/ in P14 : jet.Any?, /*14*/ in P15 : jet.Any?, /*15*/ in P16 : jet.Any?, /*16*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ in P13 : jet.Any?, /*13*/ in P14 : jet.Any?, /*14*/ in P15 : jet.Any?, /*15*/ in P16 : jet.Any?, /*16*/ out R : jet.Any?><init>(): jet.Function16<P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, R>
    public abstract fun invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12, /*12*/ p13: P13, /*13*/ p14: P14, /*14*/ p15: P15, /*15*/ p16: P16): R
}
public abstract class jet.Function17</*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ in P13 : jet.Any?, /*13*/ in P14 : jet.Any?, /*14*/ in P15 : jet.Any?, /*15*/ in P16 : jet.Any?, /*16*/ in P17 : jet.Any?, /*17*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ in P13 : jet.Any?, /*13*/ in P14 : jet.Any?, /*14*/ in P15 : jet.Any?, /*15*/ in P16 : jet.Any?, /*16*/ in P17 : jet.Any?, /*17*/ out R : jet.Any?><init>(): jet.Function17<P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, R>
    public abstract fun invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12, /*12*/ p13: P13, /*13*/ p14: P14, /*14*/ p15: P15, /*15*/ p16: P16, /*16*/ p17: P17): R
}
public abstract class jet.Function18</*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ in P13 : jet.Any?, /*13*/ in P14 : jet.Any?, /*14*/ in P15 : jet.Any?, /*15*/ in P16 : jet.Any?, /*16*/ in P17 : jet.Any?, /*17*/ in P18 : jet.Any?, /*18*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ in P13 : jet.Any?, /*13*/ in P14 : jet.Any?, /*14*/ in P15 : jet.Any?, /*15*/ in P16 : jet.Any?, /*16*/ in P17 : jet.Any?, /*17*/ in P18 : jet.Any?, /*18*/ out R : jet.Any?><init>(): jet.Function18<P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, R>
    public abstract fun invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12, /*12*/ p13: P13, /*13*/ p14: P14, /*14*/ p15: P15, /*15*/ p16: P16, /*16*/ p17: P17, /*17*/ p18: P18): R
}
public abstract class jet.Function19</*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ in P13 : jet.Any?, /*13*/ in P14 : jet.Any?, /*14*/ in P15 : jet.Any?, /*15*/ in P16 : jet.Any?, /*16*/ in P17 : jet.Any?, /*17*/ in P18 : jet.Any?, /*18*/ in P19 : jet.Any?, /*19*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ in P13 : jet.Any?, /*13*/ in P14 : jet.Any?, /*14*/ in P15 : jet.Any?, /*15*/ in P16 : jet.Any?, /*16*/ in P17 : jet.Any?, /*17*/ in P18 : jet.Any?, /*18*/ in P19 : jet.Any?, /*19*/ out R : jet.Any?><init>(): jet.Function19<P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, R>
    public abstract fun invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12, /*12*/ p13: P13, /*13*/ p14: P14, /*14*/ p15: P15, /*15*/ p16: P16, /*16*/ p17: P17, /*17*/ p18: P18, /*18*/ p19: P19): R
}
public abstract class jet.Function2</*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ out R : jet.Any?><init>(): jet.Function2<P1, P2, R>
    public abstract fun invoke(/*0*/ p1: P1, /*1*/ p2: P2): R
}
public abstract class jet.Function20</*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ in P13 : jet.Any?, /*13*/ in P14 : jet.Any?, /*14*/ in P15 : jet.Any?, /*15*/ in P16 : jet.Any?, /*16*/ in P17 : jet.Any?, /*17*/ in P18 : jet.Any?, /*18*/ in P19 : jet.Any?, /*19*/ in P20 : jet.Any?, /*20*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ in P13 : jet.Any?, /*13*/ in P14 : jet.Any?, /*14*/ in P15 : jet.Any?, /*15*/ in P16 : jet.Any?, /*16*/ in P17 : jet.Any?, /*17*/ in P18 : jet.Any?, /*18*/ in P19 : jet.Any?, /*19*/ in P20 : jet.Any?, /*20*/ out R : jet.Any?><init>(): jet.Function20<P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, R>
    public abstract fun invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12, /*12*/ p13: P13, /*13*/ p14: P14, /*14*/ p15: P15, /*15*/ p16: P16, /*16*/ p17: P17, /*17*/ p18: P18, /*18*/ p19: P19, /*19*/ p20: P20): R
}
public abstract class jet.Function21</*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ in P13 : jet.Any?, /*13*/ in P14 : jet.Any?, /*14*/ in P15 : jet.Any?, /*15*/ in P16 : jet.Any?, /*16*/ in P17 : jet.Any?, /*17*/ in P18 : jet.Any?, /*18*/ in P19 : jet.Any?, /*19*/ in P20 : jet.Any?, /*20*/ in P21 : jet.Any?, /*21*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ in P13 : jet.Any?, /*13*/ in P14 : jet.Any?, /*14*/ in P15 : jet.Any?, /*15*/ in P16 : jet.Any?, /*16*/ in P17 : jet.Any?, /*17*/ in P18 : jet.Any?, /*18*/ in P19 : jet.Any?, /*19*/ in P20 : jet.Any?, /*20*/ in P21 : jet.Any?, /*21*/ out R : jet.Any?><init>(): jet.Function21<P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21, R>
    public abstract fun invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12, /*12*/ p13: P13, /*13*/ p14: P14, /*14*/ p15: P15, /*15*/ p16: P16, /*16*/ p17: P17, /*17*/ p18: P18, /*18*/ p19: P19, /*19*/ p20: P20, /*20*/ p21: P21): R
}
public abstract class jet.Function22</*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ in P13 : jet.Any?, /*13*/ in P14 : jet.Any?, /*14*/ in P15 : jet.Any?, /*15*/ in P16 : jet.Any?, /*16*/ in P17 : jet.Any?, /*17*/ in P18 : jet.Any?, /*18*/ in P19 : jet.Any?, /*19*/ in P20 : jet.Any?, /*20*/ in P21 : jet.Any?, /*21*/ in P22 : jet.Any?, /*22*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ in P10 : jet.Any?, /*10*/ in P11 : jet.Any?, /*11*/ in P12 : jet.Any?, /*12*/ in P13 : jet.Any?, /*13*/ in P14 : jet.Any?, /*14*/ in P15 : jet.Any?, /*15*/ in P16 : jet.Any?, /*16*/ in P17 : jet.Any?, /*17*/ in P18 : jet.Any?, /*18*/ in P19 : jet.Any?, /*19*/ in P20 : jet.Any?, /*20*/ in P21 : jet.Any?, /*21*/ in P22 : jet.Any?, /*22*/ out R : jet.Any?><init>(): jet.Function22<P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20, P21, P22, R>
    public abstract fun invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9, /*9*/ p10: P10, /*10*/ p11: P11, /*11*/ p12: P12, /*12*/ p13: P13, /*13*/ p14: P14, /*14*/ p15: P15, /*15*/ p16: P16, /*16*/ p17: P17, /*17*/ p18: P18, /*18*/ p19: P19, /*19*/ p20: P20, /*20*/ p21: P21, /*21*/ p22: P22): R
}
public abstract class jet.Function3</*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ out R : jet.Any?><init>(): jet.Function3<P1, P2, P3, R>
    public abstract fun invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3): R
}
public abstract class jet.Function4</*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ out R : jet.Any?><init>(): jet.Function4<P1, P2, P3, P4, R>
    public abstract fun invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4): R
}
public abstract class jet.Function5</*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ out R : jet.Any?><init>(): jet.Function5<P1, P2, P3, P4, P5, R>
    public abstract fun invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5): R
}
public abstract class jet.Function6</*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ out R : jet.Any?><init>(): jet.Function6<P1, P2, P3, P4, P5, P6, R>
    public abstract fun invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6): R
}
public abstract class jet.Function7</*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ out R : jet.Any?><init>(): jet.Function7<P1, P2, P3, P4, P5, P6, P7, R>
    public abstract fun invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7): R
}
public abstract class jet.Function8</*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ out R : jet.Any?><init>(): jet.Function8<P1, P2, P3, P4, P5, P6, P7, P8, R>
    public abstract fun invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8): R
}
public abstract class jet.Function9</*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ out R : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ in P1 : jet.Any?, /*1*/ in P2 : jet.Any?, /*2*/ in P3 : jet.Any?, /*3*/ in P4 : jet.Any?, /*4*/ in P5 : jet.Any?, /*5*/ in P6 : jet.Any?, /*6*/ in P7 : jet.Any?, /*7*/ in P8 : jet.Any?, /*8*/ in P9 : jet.Any?, /*9*/ out R : jet.Any?><init>(): jet.Function9<P1, P2, P3, P4, P5, P6, P7, P8, P9, R>
    public abstract fun invoke(/*0*/ p1: P1, /*1*/ p2: P2, /*2*/ p3: P3, /*3*/ p4: P4, /*4*/ p5: P5, /*5*/ p6: P6, /*6*/ p7: P7, /*7*/ p8: P8, /*8*/ p9: P9): R
}
public abstract trait jet.Hashable : jet.Any {
    public abstract fun equals(/*0*/ other: jet.Any?): jet.Boolean
    public abstract fun hashCode(): jet.Int
}
public final class jet.Int : jet.Number, jet.Comparable<jet.Int> {
    public final /*constructor*/ fun <init>(): jet.Int
    public final fun and(/*0*/ other: jet.Int): jet.Int
    public final fun compareTo(/*0*/ other: jet.Byte): jet.Int
    public final fun compareTo(/*0*/ other: jet.Char): jet.Int
    public final fun compareTo(/*0*/ other: jet.Double): jet.Int
    public final fun compareTo(/*0*/ other: jet.Float): jet.Int
    public open override /*1*/ fun compareTo(/*0*/ other: jet.Int): jet.Int
    public final fun compareTo(/*0*/ other: jet.Long): jet.Int
    public final fun compareTo(/*0*/ other: jet.Short): jet.Int
    public final fun dec(): jet.Int
    public final fun div(/*0*/ other: jet.Byte): jet.Int
    public final fun div(/*0*/ other: jet.Char): jet.Int
    public final fun div(/*0*/ other: jet.Double): jet.Double
    public final fun div(/*0*/ other: jet.Float): jet.Float
    public final fun div(/*0*/ other: jet.Int): jet.Int
    public final fun div(/*0*/ other: jet.Long): jet.Long
    public final fun div(/*0*/ other: jet.Short): jet.Int
    public final fun downto(/*0*/ other: jet.Byte): jet.IntRange
    public final fun downto(/*0*/ other: jet.Char): jet.IntRange
    public final fun downto(/*0*/ other: jet.Double): jet.DoubleRange
    public final fun downto(/*0*/ other: jet.Float): jet.FloatRange
    public final fun downto(/*0*/ other: jet.Int): jet.IntRange
    public final fun downto(/*0*/ other: jet.Long): jet.LongRange
    public final fun downto(/*0*/ other: jet.Short): jet.IntRange
    public open override /*1*/ fun equals(/*0*/ other: jet.Any?): jet.Boolean
    public open override /*1*/ fun hashCode(): jet.Int
    public final fun inc(): jet.Int
    public final fun inv(): jet.Int
    public final fun minus(): jet.Int
    public final fun minus(/*0*/ other: jet.Byte): jet.Int
    public final fun minus(/*0*/ other: jet.Char): jet.Int
    public final fun minus(/*0*/ other: jet.Double): jet.Double
    public final fun minus(/*0*/ other: jet.Float): jet.Float
    public final fun minus(/*0*/ other: jet.Int): jet.Int
    public final fun minus(/*0*/ other: jet.Long): jet.Long
    public final fun minus(/*0*/ other: jet.Short): jet.Int
    public final fun mod(/*0*/ other: jet.Byte): jet.Int
    public final fun mod(/*0*/ other: jet.Char): jet.Int
    public final fun mod(/*0*/ other: jet.Double): jet.Double
    public final fun mod(/*0*/ other: jet.Float): jet.Float
    public final fun mod(/*0*/ other: jet.Int): jet.Int
    public final fun mod(/*0*/ other: jet.Long): jet.Long
    public final fun mod(/*0*/ other: jet.Short): jet.Int
    public final fun or(/*0*/ other: jet.Int): jet.Int
    public final fun plus(): jet.Int
    public final fun plus(/*0*/ other: jet.Byte): jet.Int
    public final fun plus(/*0*/ other: jet.Char): jet.Int
    public final fun plus(/*0*/ other: jet.Double): jet.Double
    public final fun plus(/*0*/ other: jet.Float): jet.Float
    public final fun plus(/*0*/ other: jet.Int): jet.Int
    public final fun plus(/*0*/ other: jet.Long): jet.Long
    public final fun plus(/*0*/ other: jet.Short): jet.Int
    public final fun rangeTo(/*0*/ other: jet.Byte): jet.IntRange
    public final fun rangeTo(/*0*/ other: jet.Char): jet.IntRange
    public final fun rangeTo(/*0*/ other: jet.Double): jet.DoubleRange
    public final fun rangeTo(/*0*/ other: jet.Float): jet.FloatRange
    public final fun rangeTo(/*0*/ other: jet.Int): jet.IntRange
    public final fun rangeTo(/*0*/ other: jet.Long): jet.LongRange
    public final fun rangeTo(/*0*/ other: jet.Short): jet.IntRange
    public final fun shl(/*0*/ bits: jet.Int): jet.Int
    public final fun shr(/*0*/ bits: jet.Int): jet.Int
    public final fun times(/*0*/ other: jet.Byte): jet.Int
    public final fun times(/*0*/ other: jet.Char): jet.Int
    public final fun times(/*0*/ other: jet.Double): jet.Double
    public final fun times(/*0*/ other: jet.Float): jet.Float
    public final fun times(/*0*/ other: jet.Int): jet.Int
    public final fun times(/*0*/ other: jet.Long): jet.Long
    public final fun times(/*0*/ other: jet.Short): jet.Int
    public open override /*1*/ fun toByte(): jet.Byte
    public open override /*1*/ fun toChar(): jet.Char
    public open override /*1*/ fun toDouble(): jet.Double
    public open override /*1*/ fun toFloat(): jet.Float
    public open override /*1*/ fun toInt(): jet.Int
    public open override /*1*/ fun toLong(): jet.Long
    public open override /*1*/ fun toShort(): jet.Short
    public final fun upto(/*0*/ other: jet.Byte): jet.IntRange
    public final fun upto(/*0*/ other: jet.Char): jet.IntRange
    public final fun upto(/*0*/ other: jet.Double): jet.DoubleRange
    public final fun upto(/*0*/ other: jet.Float): jet.FloatRange
    public final fun upto(/*0*/ other: jet.Int): jet.IntRange
    public final fun upto(/*0*/ other: jet.Long): jet.LongRange
    public final fun upto(/*0*/ other: jet.Short): jet.IntRange
    public final fun ushr(/*0*/ bits: jet.Int): jet.Int
    public final fun xor(/*0*/ other: jet.Int): jet.Int
}
public final class jet.IntArray : jet.Any {
    public final /*constructor*/ fun <init>(/*0*/ size: jet.Int): jet.IntArray
    public final fun get(/*0*/ index: jet.Int): jet.Int
    public final val indices: jet.IntRange
    public final fun iterator(): jet.IntIterator
    public final fun set(/*0*/ index: jet.Int, /*1*/ value: jet.Int): jet.Tuple0
    public final val size: jet.Int
}
public abstract trait jet.IntIterable : jet.Iterable<jet.Int> {
    public abstract override /*1*/ fun iterator(): jet.IntIterator
}
public abstract class jet.IntIterator : jet.Iterator<jet.Int> {
    public final /*constructor*/ fun <init>(): jet.IntIterator
    public abstract override /*1*/ val hasNext: jet.Boolean
    public open override /*1*/ fun next(): jet.Int
    public abstract fun nextInt(): jet.Int
}
public final class jet.IntRange : jet.Range<jet.Int>, jet.IntIterable {
    public final /*constructor*/ fun <init>(/*0*/ start: jet.Int, /*1*/ size: jet.Int): jet.IntRange
    public open override /*1*/ fun contains(/*0*/ elem: jet.Int): jet.Boolean
    public final val end: jet.Int
    public final val isReversed: jet.Boolean
    public open override /*1*/ fun iterator(): jet.IntIterator
    public final val iteratorStart: jet.Int
    public final fun minus(): jet.IntRange
    public final val size: jet.Int
    public final val start: jet.Int
    public final fun step(/*0*/ step: jet.Int): jet.IntIterator
}
public abstract trait jet.Iterable</*0*/ out T : jet.Any?> : jet.Any {
    public abstract fun iterator(): jet.Iterator<T>
}
public abstract trait jet.Iterator</*0*/ out T : jet.Any?> : jet.Any {
    public abstract val hasNext: jet.Boolean
    public abstract fun next(): T
}
public final class jet.Long : jet.Number, jet.Comparable<jet.Long> {
    public final /*constructor*/ fun <init>(): jet.Long
    public final fun and(/*0*/ other: jet.Long): jet.Long
    public final fun compareTo(/*0*/ other: jet.Byte): jet.Int
    public final fun compareTo(/*0*/ other: jet.Char): jet.Int
    public final fun compareTo(/*0*/ other: jet.Double): jet.Int
    public final fun compareTo(/*0*/ other: jet.Float): jet.Int
    public final fun compareTo(/*0*/ other: jet.Int): jet.Int
    public open override /*1*/ fun compareTo(/*0*/ other: jet.Long): jet.Int
    public final fun compareTo(/*0*/ other: jet.Short): jet.Int
    public final fun dec(): jet.Long
    public final fun div(/*0*/ other: jet.Byte): jet.Long
    public final fun div(/*0*/ other: jet.Char): jet.Long
    public final fun div(/*0*/ other: jet.Double): jet.Double
    public final fun div(/*0*/ other: jet.Float): jet.Float
    public final fun div(/*0*/ other: jet.Int): jet.Long
    public final fun div(/*0*/ other: jet.Long): jet.Long
    public final fun div(/*0*/ other: jet.Short): jet.Long
    public final fun downto(/*0*/ other: jet.Byte): jet.LongRange
    public final fun downto(/*0*/ other: jet.Char): jet.LongRange
    public final fun downto(/*0*/ other: jet.Double): jet.DoubleRange
    public final fun downto(/*0*/ other: jet.Float): jet.FloatRange
    public final fun downto(/*0*/ other: jet.Int): jet.LongRange
    public final fun downto(/*0*/ other: jet.Long): jet.LongRange
    public final fun downto(/*0*/ other: jet.Short): jet.LongRange
    public open override /*1*/ fun equals(/*0*/ other: jet.Any?): jet.Boolean
    public open override /*1*/ fun hashCode(): jet.Int
    public final fun inc(): jet.Long
    public final fun inv(): jet.Long
    public final fun minus(): jet.Long
    public final fun minus(/*0*/ other: jet.Byte): jet.Long
    public final fun minus(/*0*/ other: jet.Char): jet.Long
    public final fun minus(/*0*/ other: jet.Double): jet.Double
    public final fun minus(/*0*/ other: jet.Float): jet.Float
    public final fun minus(/*0*/ other: jet.Int): jet.Long
    public final fun minus(/*0*/ other: jet.Long): jet.Long
    public final fun minus(/*0*/ other: jet.Short): jet.Long
    public final fun mod(/*0*/ other: jet.Byte): jet.Long
    public final fun mod(/*0*/ other: jet.Char): jet.Long
    public final fun mod(/*0*/ other: jet.Double): jet.Double
    public final fun mod(/*0*/ other: jet.Float): jet.Float
    public final fun mod(/*0*/ other: jet.Int): jet.Long
    public final fun mod(/*0*/ other: jet.Long): jet.Long
    public final fun mod(/*0*/ other: jet.Short): jet.Long
    public final fun or(/*0*/ other: jet.Long): jet.Long
    public final fun plus(): jet.Long
    public final fun plus(/*0*/ other: jet.Byte): jet.Long
    public final fun plus(/*0*/ other: jet.Char): jet.Long
    public final fun plus(/*0*/ other: jet.Double): jet.Double
    public final fun plus(/*0*/ other: jet.Float): jet.Float
    public final fun plus(/*0*/ other: jet.Int): jet.Long
    public final fun plus(/*0*/ other: jet.Long): jet.Long
    public final fun plus(/*0*/ other: jet.Short): jet.Long
    public final fun rangeTo(/*0*/ other: jet.Byte): jet.LongRange
    public final fun rangeTo(/*0*/ other: jet.Char): jet.LongRange
    public final fun rangeTo(/*0*/ other: jet.Double): jet.DoubleRange
    public final fun rangeTo(/*0*/ other: jet.Float): jet.FloatRange
    public final fun rangeTo(/*0*/ other: jet.Int): jet.LongRange
    public final fun rangeTo(/*0*/ other: jet.Long): jet.LongRange
    public final fun rangeTo(/*0*/ other: jet.Short): jet.LongRange
    public final fun shl(/*0*/ bits: jet.Int): jet.Long
    public final fun shr(/*0*/ bits: jet.Int): jet.Long
    public final fun times(/*0*/ other: jet.Byte): jet.Long
    public final fun times(/*0*/ other: jet.Char): jet.Long
    public final fun times(/*0*/ other: jet.Double): jet.Double
    public final fun times(/*0*/ other: jet.Float): jet.Float
    public final fun times(/*0*/ other: jet.Int): jet.Long
    public final fun times(/*0*/ other: jet.Long): jet.Long
    public final fun times(/*0*/ other: jet.Short): jet.Long
    public open override /*1*/ fun toByte(): jet.Byte
    public open override /*1*/ fun toChar(): jet.Char
    public open override /*1*/ fun toDouble(): jet.Double
    public open override /*1*/ fun toFloat(): jet.Float
    public open override /*1*/ fun toInt(): jet.Int
    public open override /*1*/ fun toLong(): jet.Long
    public open override /*1*/ fun toShort(): jet.Short
    public final fun upto(/*0*/ other: jet.Byte): jet.LongRange
    public final fun upto(/*0*/ other: jet.Char): jet.LongRange
    public final fun upto(/*0*/ other: jet.Double): jet.DoubleRange
    public final fun upto(/*0*/ other: jet.Float): jet.FloatRange
    public final fun upto(/*0*/ other: jet.Int): jet.LongRange
    public final fun upto(/*0*/ other: jet.Long): jet.LongRange
    public final fun upto(/*0*/ other: jet.Short): jet.LongRange
    public final fun ushr(/*0*/ bits: jet.Int): jet.Long
    public final fun xor(/*0*/ other: jet.Long): jet.Long
}
public final class jet.LongArray : jet.Any {
    public final /*constructor*/ fun <init>(/*0*/ size: jet.Int): jet.LongArray
    public final fun get(/*0*/ index: jet.Int): jet.Long
    public final val indices: jet.IntRange
    public final fun iterator(): jet.LongIterator
    public final fun set(/*0*/ index: jet.Int, /*1*/ value: jet.Long): jet.Tuple0
    public final val size: jet.Int
}
public abstract trait jet.LongIterable : jet.Iterable<jet.Long> {
    public abstract override /*1*/ fun iterator(): jet.LongIterator
}
public abstract class jet.LongIterator : jet.Iterator<jet.Long> {
    public final /*constructor*/ fun <init>(): jet.LongIterator
    public abstract override /*1*/ val hasNext: jet.Boolean
    public open override /*1*/ fun next(): jet.Long
    public abstract fun nextLong(): jet.Long
}
public final class jet.LongRange : jet.Range<jet.Long>, jet.LongIterable {
    public final /*constructor*/ fun <init>(/*0*/ start: jet.Long, /*1*/ size: jet.Long): jet.LongRange
    public open override /*1*/ fun contains(/*0*/ elem: jet.Long): jet.Boolean
    public final val end: jet.Long
    public final val isReversed: jet.Boolean
    public open override /*1*/ fun iterator(): jet.LongIterator
    public final val iteratorStart: jet.Long
    public final fun minus(): jet.LongRange
    public final val size: jet.Long
    public final val start: jet.Long
    public final fun step(/*0*/ step: jet.Long): jet.LongIterator
}
public final class jet.Nothing {
    private final /*constructor*/ fun <init>(): jet.Nothing
}
public abstract class jet.Number : jet.Hashable {
    public final /*constructor*/ fun <init>(): jet.Number
    public abstract override /*1*/ fun equals(/*0*/ other: jet.Any?): jet.Boolean
    public abstract override /*1*/ fun hashCode(): jet.Int
    public abstract fun toByte(): jet.Byte
    public abstract fun toChar(): jet.Char
    public abstract fun toDouble(): jet.Double
    public abstract fun toFloat(): jet.Float
    public abstract fun toInt(): jet.Int
    public abstract fun toLong(): jet.Long
    public abstract fun toShort(): jet.Short
}
public abstract trait jet.Range</*0*/ in T : jet.Comparable<T>> : jet.Any {
    public abstract fun contains(/*0*/ item: T): jet.Boolean
}
public final class jet.Short : jet.Number, jet.Comparable<jet.Short> {
    public final /*constructor*/ fun <init>(): jet.Short
    public final fun compareTo(/*0*/ other: jet.Byte): jet.Int
    public final fun compareTo(/*0*/ other: jet.Char): jet.Int
    public final fun compareTo(/*0*/ other: jet.Double): jet.Int
    public final fun compareTo(/*0*/ other: jet.Float): jet.Int
    public final fun compareTo(/*0*/ other: jet.Int): jet.Int
    public final fun compareTo(/*0*/ other: jet.Long): jet.Int
    public open override /*1*/ fun compareTo(/*0*/ other: jet.Short): jet.Int
    public final fun dec(): jet.Short
    public final fun div(/*0*/ other: jet.Byte): jet.Int
    public final fun div(/*0*/ other: jet.Char): jet.Int
    public final fun div(/*0*/ other: jet.Double): jet.Double
    public final fun div(/*0*/ other: jet.Float): jet.Float
    public final fun div(/*0*/ other: jet.Int): jet.Int
    public final fun div(/*0*/ other: jet.Long): jet.Long
    public final fun div(/*0*/ other: jet.Short): jet.Int
    public final fun downto(/*0*/ other: jet.Byte): jet.ShortRange
    public final fun downto(/*0*/ other: jet.Char): jet.ShortRange
    public final fun downto(/*0*/ other: jet.Double): jet.DoubleRange
    public final fun downto(/*0*/ other: jet.Float): jet.FloatRange
    public final fun downto(/*0*/ other: jet.Int): jet.IntRange
    public final fun downto(/*0*/ other: jet.Long): jet.LongRange
    public final fun downto(/*0*/ other: jet.Short): jet.ShortRange
    public open override /*1*/ fun equals(/*0*/ other: jet.Any?): jet.Boolean
    public open override /*1*/ fun hashCode(): jet.Int
    public final fun inc(): jet.Short
    public final fun minus(): jet.Short
    public final fun minus(/*0*/ other: jet.Byte): jet.Int
    public final fun minus(/*0*/ other: jet.Char): jet.Int
    public final fun minus(/*0*/ other: jet.Double): jet.Double
    public final fun minus(/*0*/ other: jet.Float): jet.Float
    public final fun minus(/*0*/ other: jet.Int): jet.Int
    public final fun minus(/*0*/ other: jet.Long): jet.Long
    public final fun minus(/*0*/ other: jet.Short): jet.Int
    public final fun mod(/*0*/ other: jet.Byte): jet.Int
    public final fun mod(/*0*/ other: jet.Char): jet.Int
    public final fun mod(/*0*/ other: jet.Double): jet.Double
    public final fun mod(/*0*/ other: jet.Float): jet.Float
    public final fun mod(/*0*/ other: jet.Int): jet.Int
    public final fun mod(/*0*/ other: jet.Long): jet.Long
    public final fun mod(/*0*/ other: jet.Short): jet.Int
    public final fun plus(): jet.Short
    public final fun plus(/*0*/ other: jet.Byte): jet.Int
    public final fun plus(/*0*/ other: jet.Char): jet.Int
    public final fun plus(/*0*/ other: jet.Double): jet.Double
    public final fun plus(/*0*/ other: jet.Float): jet.Float
    public final fun plus(/*0*/ other: jet.Int): jet.Int
    public final fun plus(/*0*/ other: jet.Long): jet.Long
    public final fun plus(/*0*/ other: jet.Short): jet.Int
    public final fun rangeTo(/*0*/ other: jet.Byte): jet.ShortRange
    public final fun rangeTo(/*0*/ other: jet.Char): jet.ShortRange
    public final fun rangeTo(/*0*/ other: jet.Double): jet.DoubleRange
    public final fun rangeTo(/*0*/ other: jet.Float): jet.FloatRange
    public final fun rangeTo(/*0*/ other: jet.Int): jet.IntRange
    public final fun rangeTo(/*0*/ other: jet.Long): jet.LongRange
    public final fun rangeTo(/*0*/ other: jet.Short): jet.ShortRange
    public final fun times(/*0*/ other: jet.Byte): jet.Int
    public final fun times(/*0*/ other: jet.Char): jet.Int
    public final fun times(/*0*/ other: jet.Double): jet.Double
    public final fun times(/*0*/ other: jet.Float): jet.Float
    public final fun times(/*0*/ other: jet.Int): jet.Int
    public final fun times(/*0*/ other: jet.Long): jet.Long
    public final fun times(/*0*/ other: jet.Short): jet.Int
    public open override /*1*/ fun toByte(): jet.Byte
    public open override /*1*/ fun toChar(): jet.Char
    public open override /*1*/ fun toDouble(): jet.Double
    public open override /*1*/ fun toFloat(): jet.Float
    public open override /*1*/ fun toInt(): jet.Int
    public open override /*1*/ fun toLong(): jet.Long
    public open override /*1*/ fun toShort(): jet.Short
    public final fun upto(/*0*/ other: jet.Byte): jet.ShortRange
    public final fun upto(/*0*/ other: jet.Char): jet.ShortRange
    public final fun upto(/*0*/ other: jet.Double): jet.DoubleRange
    public final fun upto(/*0*/ other: jet.Float): jet.FloatRange
    public final fun upto(/*0*/ other: jet.Int): jet.IntRange
    public final fun upto(/*0*/ other: jet.Long): jet.LongRange
    public final fun upto(/*0*/ other: jet.Short): jet.ShortRange
}
public final class jet.ShortArray : jet.Any {
    public final /*constructor*/ fun <init>(/*0*/ size: jet.Int): jet.ShortArray
    public final fun get(/*0*/ index: jet.Int): jet.Short
    public final val indices: jet.IntRange
    public final fun iterator(): jet.ShortIterator
    public final fun set(/*0*/ index: jet.Int, /*1*/ value: jet.Short): jet.Tuple0
    public final val size: jet.Int
}
public abstract trait jet.ShortIterable : jet.Iterable<jet.Short> {
    public abstract override /*1*/ fun iterator(): jet.ShortIterator
}
public abstract class jet.ShortIterator : jet.Iterator<jet.Short> {
    public final /*constructor*/ fun <init>(): jet.ShortIterator
    public abstract override /*1*/ val hasNext: jet.Boolean
    public open override /*1*/ fun next(): jet.Short
    public abstract fun nextShort(): jet.Short
}
public final class jet.ShortRange : jet.Range<jet.Short>, jet.ShortIterable {
    public final /*constructor*/ fun <init>(/*0*/ start: jet.Short, /*1*/ size: jet.Int): jet.ShortRange
    public open override /*1*/ fun contains(/*0*/ elem: jet.Short): jet.Boolean
    public final val end: jet.Short
    public final val isReversed: jet.Boolean
    public open override /*1*/ fun iterator(): jet.ShortIterator
    public final val iteratorStart: jet.Short
    public final fun minus(): jet.ShortRange
    public final val size: jet.Int
    public final val start: jet.Short
    public final fun step(/*0*/ step: jet.Int): jet.ShortIterator
}
public final class jet.String : jet.Comparable<jet.String>, jet.CharSequence {
    public final /*constructor*/ fun <init>(): jet.String
    public open override /*1*/ fun compareTo(/*0*/ that: jet.String): jet.Int
    public final fun equals(/*0*/ other: jet.Any?): jet.Boolean
    public open override /*1*/ fun get(/*0*/ index: jet.Int): jet.Char
    public open override /*1*/ val length: jet.Int
    public final fun plus(/*0*/ other: jet.Any?): jet.String
    public open override /*1*/ fun toString(): jet.String
}
public open class jet.Throwable : jet.Any {
    public final /*constructor*/ fun <init>(/*0*/ message: jet.String? = ?, /*1*/ cause: jet.Throwable? = ?): jet.Throwable
    public final fun getCause(): jet.Throwable?
    public final fun getMessage(): jet.String?
    public final fun printStackTrace(): jet.Tuple0
}
public final class jet.Tuple0 : jet.Any {
    public final /*constructor*/ fun <init>(): jet.Tuple0
}
public final class jet.Tuple1</*0*/ out T1 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?><init>(/*0*/ _1: T1): jet.Tuple1<T1>
    public final val _1: T1
}
public final class jet.Tuple10</*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?><init>(/*0*/ _1: T1, /*1*/ _2: T2, /*2*/ _3: T3, /*3*/ _4: T4, /*4*/ _5: T5, /*5*/ _6: T6, /*6*/ _7: T7, /*7*/ _8: T8, /*8*/ _9: T9, /*9*/ _10: T10): jet.Tuple10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
    public final val _10: T10
    public final val _1: T1
    public final val _2: T2
    public final val _3: T3
    public final val _4: T4
    public final val _5: T5
    public final val _6: T6
    public final val _7: T7
    public final val _8: T8
    public final val _9: T9
}
public final class jet.Tuple11</*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?><init>(/*0*/ _1: T1, /*1*/ _2: T2, /*2*/ _3: T3, /*3*/ _4: T4, /*4*/ _5: T5, /*5*/ _6: T6, /*6*/ _7: T7, /*7*/ _8: T8, /*8*/ _9: T9, /*9*/ _10: T10, /*10*/ _11: T11): jet.Tuple11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>
    public final val _10: T10
    public final val _11: T11
    public final val _1: T1
    public final val _2: T2
    public final val _3: T3
    public final val _4: T4
    public final val _5: T5
    public final val _6: T6
    public final val _7: T7
    public final val _8: T8
    public final val _9: T9
}
public final class jet.Tuple12</*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?><init>(/*0*/ _1: T1, /*1*/ _2: T2, /*2*/ _3: T3, /*3*/ _4: T4, /*4*/ _5: T5, /*5*/ _6: T6, /*6*/ _7: T7, /*7*/ _8: T8, /*8*/ _9: T9, /*9*/ _10: T10, /*10*/ _11: T11, /*11*/ _12: T12): jet.Tuple12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>
    public final val _10: T10
    public final val _11: T11
    public final val _12: T12
    public final val _1: T1
    public final val _2: T2
    public final val _3: T3
    public final val _4: T4
    public final val _5: T5
    public final val _6: T6
    public final val _7: T7
    public final val _8: T8
    public final val _9: T9
}
public final class jet.Tuple13</*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?, /*12*/ out T13 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?, /*12*/ out T13 : jet.Any?><init>(/*0*/ _1: T1, /*1*/ _2: T2, /*2*/ _3: T3, /*3*/ _4: T4, /*4*/ _5: T5, /*5*/ _6: T6, /*6*/ _7: T7, /*7*/ _8: T8, /*8*/ _9: T9, /*9*/ _10: T10, /*10*/ _11: T11, /*11*/ _12: T12, /*12*/ _13: T13): jet.Tuple13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>
    public final val _10: T10
    public final val _11: T11
    public final val _12: T12
    public final val _13: T13
    public final val _1: T1
    public final val _2: T2
    public final val _3: T3
    public final val _4: T4
    public final val _5: T5
    public final val _6: T6
    public final val _7: T7
    public final val _8: T8
    public final val _9: T9
}
public final class jet.Tuple14</*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?, /*12*/ out T13 : jet.Any?, /*13*/ out T14 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?, /*12*/ out T13 : jet.Any?, /*13*/ out T14 : jet.Any?><init>(/*0*/ _1: T1, /*1*/ _2: T2, /*2*/ _3: T3, /*3*/ _4: T4, /*4*/ _5: T5, /*5*/ _6: T6, /*6*/ _7: T7, /*7*/ _8: T8, /*8*/ _9: T9, /*9*/ _10: T10, /*10*/ _11: T11, /*11*/ _12: T12, /*12*/ _13: T13, /*13*/ _14: T14): jet.Tuple14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>
    public final val _10: T10
    public final val _11: T11
    public final val _12: T12
    public final val _13: T13
    public final val _14: T14
    public final val _1: T1
    public final val _2: T2
    public final val _3: T3
    public final val _4: T4
    public final val _5: T5
    public final val _6: T6
    public final val _7: T7
    public final val _8: T8
    public final val _9: T9
}
public final class jet.Tuple15</*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?, /*12*/ out T13 : jet.Any?, /*13*/ out T14 : jet.Any?, /*14*/ out T15 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?, /*12*/ out T13 : jet.Any?, /*13*/ out T14 : jet.Any?, /*14*/ out T15 : jet.Any?><init>(/*0*/ _1: T1, /*1*/ _2: T2, /*2*/ _3: T3, /*3*/ _4: T4, /*4*/ _5: T5, /*5*/ _6: T6, /*6*/ _7: T7, /*7*/ _8: T8, /*8*/ _9: T9, /*9*/ _10: T10, /*10*/ _11: T11, /*11*/ _12: T12, /*12*/ _13: T13, /*13*/ _14: T14, /*14*/ _15: T15): jet.Tuple15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>
    public final val _10: T10
    public final val _11: T11
    public final val _12: T12
    public final val _13: T13
    public final val _14: T14
    public final val _15: T15
    public final val _1: T1
    public final val _2: T2
    public final val _3: T3
    public final val _4: T4
    public final val _5: T5
    public final val _6: T6
    public final val _7: T7
    public final val _8: T8
    public final val _9: T9
}
public final class jet.Tuple16</*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?, /*12*/ out T13 : jet.Any?, /*13*/ out T14 : jet.Any?, /*14*/ out T15 : jet.Any?, /*15*/ out T16 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?, /*12*/ out T13 : jet.Any?, /*13*/ out T14 : jet.Any?, /*14*/ out T15 : jet.Any?, /*15*/ out T16 : jet.Any?><init>(/*0*/ _1: T1, /*1*/ _2: T2, /*2*/ _3: T3, /*3*/ _4: T4, /*4*/ _5: T5, /*5*/ _6: T6, /*6*/ _7: T7, /*7*/ _8: T8, /*8*/ _9: T9, /*9*/ _10: T10, /*10*/ _11: T11, /*11*/ _12: T12, /*12*/ _13: T13, /*13*/ _14: T14, /*14*/ _15: T15, /*15*/ _16: T16): jet.Tuple16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>
    public final val _10: T10
    public final val _11: T11
    public final val _12: T12
    public final val _13: T13
    public final val _14: T14
    public final val _15: T15
    public final val _16: T16
    public final val _1: T1
    public final val _2: T2
    public final val _3: T3
    public final val _4: T4
    public final val _5: T5
    public final val _6: T6
    public final val _7: T7
    public final val _8: T8
    public final val _9: T9
}
public final class jet.Tuple17</*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?, /*12*/ out T13 : jet.Any?, /*13*/ out T14 : jet.Any?, /*14*/ out T15 : jet.Any?, /*15*/ out T16 : jet.Any?, /*16*/ out T17 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?, /*12*/ out T13 : jet.Any?, /*13*/ out T14 : jet.Any?, /*14*/ out T15 : jet.Any?, /*15*/ out T16 : jet.Any?, /*16*/ out T17 : jet.Any?><init>(/*0*/ _1: T1, /*1*/ _2: T2, /*2*/ _3: T3, /*3*/ _4: T4, /*4*/ _5: T5, /*5*/ _6: T6, /*6*/ _7: T7, /*7*/ _8: T8, /*8*/ _9: T9, /*9*/ _10: T10, /*10*/ _11: T11, /*11*/ _12: T12, /*12*/ _13: T13, /*13*/ _14: T14, /*14*/ _15: T15, /*15*/ _16: T16, /*16*/ _17: T17): jet.Tuple17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>
    public final val _10: T10
    public final val _11: T11
    public final val _12: T12
    public final val _13: T13
    public final val _14: T14
    public final val _15: T15
    public final val _16: T16
    public final val _17: T17
    public final val _1: T1
    public final val _2: T2
    public final val _3: T3
    public final val _4: T4
    public final val _5: T5
    public final val _6: T6
    public final val _7: T7
    public final val _8: T8
    public final val _9: T9
}
public final class jet.Tuple18</*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?, /*12*/ out T13 : jet.Any?, /*13*/ out T14 : jet.Any?, /*14*/ out T15 : jet.Any?, /*15*/ out T16 : jet.Any?, /*16*/ out T17 : jet.Any?, /*17*/ out T18 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?, /*12*/ out T13 : jet.Any?, /*13*/ out T14 : jet.Any?, /*14*/ out T15 : jet.Any?, /*15*/ out T16 : jet.Any?, /*16*/ out T17 : jet.Any?, /*17*/ out T18 : jet.Any?><init>(/*0*/ _1: T1, /*1*/ _2: T2, /*2*/ _3: T3, /*3*/ _4: T4, /*4*/ _5: T5, /*5*/ _6: T6, /*6*/ _7: T7, /*7*/ _8: T8, /*8*/ _9: T9, /*9*/ _10: T10, /*10*/ _11: T11, /*11*/ _12: T12, /*12*/ _13: T13, /*13*/ _14: T14, /*14*/ _15: T15, /*15*/ _16: T16, /*16*/ _17: T17, /*17*/ _18: T18): jet.Tuple18<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>
    public final val _10: T10
    public final val _11: T11
    public final val _12: T12
    public final val _13: T13
    public final val _14: T14
    public final val _15: T15
    public final val _16: T16
    public final val _17: T17
    public final val _18: T18
    public final val _1: T1
    public final val _2: T2
    public final val _3: T3
    public final val _4: T4
    public final val _5: T5
    public final val _6: T6
    public final val _7: T7
    public final val _8: T8
    public final val _9: T9
}
public final class jet.Tuple19</*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?, /*12*/ out T13 : jet.Any?, /*13*/ out T14 : jet.Any?, /*14*/ out T15 : jet.Any?, /*15*/ out T16 : jet.Any?, /*16*/ out T17 : jet.Any?, /*17*/ out T18 : jet.Any?, /*18*/ out T19 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?, /*12*/ out T13 : jet.Any?, /*13*/ out T14 : jet.Any?, /*14*/ out T15 : jet.Any?, /*15*/ out T16 : jet.Any?, /*16*/ out T17 : jet.Any?, /*17*/ out T18 : jet.Any?, /*18*/ out T19 : jet.Any?><init>(/*0*/ _1: T1, /*1*/ _2: T2, /*2*/ _3: T3, /*3*/ _4: T4, /*4*/ _5: T5, /*5*/ _6: T6, /*6*/ _7: T7, /*7*/ _8: T8, /*8*/ _9: T9, /*9*/ _10: T10, /*10*/ _11: T11, /*11*/ _12: T12, /*12*/ _13: T13, /*13*/ _14: T14, /*14*/ _15: T15, /*15*/ _16: T16, /*16*/ _17: T17, /*17*/ _18: T18, /*18*/ _19: T19): jet.Tuple19<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>
    public final val _10: T10
    public final val _11: T11
    public final val _12: T12
    public final val _13: T13
    public final val _14: T14
    public final val _15: T15
    public final val _16: T16
    public final val _17: T17
    public final val _18: T18
    public final val _19: T19
    public final val _1: T1
    public final val _2: T2
    public final val _3: T3
    public final val _4: T4
    public final val _5: T5
    public final val _6: T6
    public final val _7: T7
    public final val _8: T8
    public final val _9: T9
}
public final class jet.Tuple2</*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?><init>(/*0*/ _1: T1, /*1*/ _2: T2): jet.Tuple2<T1, T2>
    public final val _1: T1
    public final val _2: T2
}
public final class jet.Tuple20</*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?, /*12*/ out T13 : jet.Any?, /*13*/ out T14 : jet.Any?, /*14*/ out T15 : jet.Any?, /*15*/ out T16 : jet.Any?, /*16*/ out T17 : jet.Any?, /*17*/ out T18 : jet.Any?, /*18*/ out T19 : jet.Any?, /*19*/ out T20 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?, /*12*/ out T13 : jet.Any?, /*13*/ out T14 : jet.Any?, /*14*/ out T15 : jet.Any?, /*15*/ out T16 : jet.Any?, /*16*/ out T17 : jet.Any?, /*17*/ out T18 : jet.Any?, /*18*/ out T19 : jet.Any?, /*19*/ out T20 : jet.Any?><init>(/*0*/ _1: T1, /*1*/ _2: T2, /*2*/ _3: T3, /*3*/ _4: T4, /*4*/ _5: T5, /*5*/ _6: T6, /*6*/ _7: T7, /*7*/ _8: T8, /*8*/ _9: T9, /*9*/ _10: T10, /*10*/ _11: T11, /*11*/ _12: T12, /*12*/ _13: T13, /*13*/ _14: T14, /*14*/ _15: T15, /*15*/ _16: T16, /*16*/ _17: T17, /*17*/ _18: T18, /*18*/ _19: T19, /*19*/ _20: T20): jet.Tuple20<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>
    public final val _10: T10
    public final val _11: T11
    public final val _12: T12
    public final val _13: T13
    public final val _14: T14
    public final val _15: T15
    public final val _16: T16
    public final val _17: T17
    public final val _18: T18
    public final val _19: T19
    public final val _1: T1
    public final val _20: T20
    public final val _2: T2
    public final val _3: T3
    public final val _4: T4
    public final val _5: T5
    public final val _6: T6
    public final val _7: T7
    public final val _8: T8
    public final val _9: T9
}
public final class jet.Tuple21</*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?, /*12*/ out T13 : jet.Any?, /*13*/ out T14 : jet.Any?, /*14*/ out T15 : jet.Any?, /*15*/ out T16 : jet.Any?, /*16*/ out T17 : jet.Any?, /*17*/ out T18 : jet.Any?, /*18*/ out T19 : jet.Any?, /*19*/ out T20 : jet.Any?, /*20*/ out T21 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?, /*12*/ out T13 : jet.Any?, /*13*/ out T14 : jet.Any?, /*14*/ out T15 : jet.Any?, /*15*/ out T16 : jet.Any?, /*16*/ out T17 : jet.Any?, /*17*/ out T18 : jet.Any?, /*18*/ out T19 : jet.Any?, /*19*/ out T20 : jet.Any?, /*20*/ out T21 : jet.Any?><init>(/*0*/ _1: T1, /*1*/ _2: T2, /*2*/ _3: T3, /*3*/ _4: T4, /*4*/ _5: T5, /*5*/ _6: T6, /*6*/ _7: T7, /*7*/ _8: T8, /*8*/ _9: T9, /*9*/ _10: T10, /*10*/ _11: T11, /*11*/ _12: T12, /*12*/ _13: T13, /*13*/ _14: T14, /*14*/ _15: T15, /*15*/ _16: T16, /*16*/ _17: T17, /*17*/ _18: T18, /*18*/ _19: T19, /*19*/ _20: T20, /*20*/ _21: T21): jet.Tuple21<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>
    public final val _10: T10
    public final val _11: T11
    public final val _12: T12
    public final val _13: T13
    public final val _14: T14
    public final val _15: T15
    public final val _16: T16
    public final val _17: T17
    public final val _18: T18
    public final val _19: T19
    public final val _1: T1
    public final val _20: T20
    public final val _21: T21
    public final val _2: T2
    public final val _3: T3
    public final val _4: T4
    public final val _5: T5
    public final val _6: T6
    public final val _7: T7
    public final val _8: T8
    public final val _9: T9
}
public final class jet.Tuple22</*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?, /*12*/ out T13 : jet.Any?, /*13*/ out T14 : jet.Any?, /*14*/ out T15 : jet.Any?, /*15*/ out T16 : jet.Any?, /*16*/ out T17 : jet.Any?, /*17*/ out T18 : jet.Any?, /*18*/ out T19 : jet.Any?, /*19*/ out T20 : jet.Any?, /*20*/ out T21 : jet.Any?, /*21*/ out T22 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?, /*9*/ out T10 : jet.Any?, /*10*/ out T11 : jet.Any?, /*11*/ out T12 : jet.Any?, /*12*/ out T13 : jet.Any?, /*13*/ out T14 : jet.Any?, /*14*/ out T15 : jet.Any?, /*15*/ out T16 : jet.Any?, /*16*/ out T17 : jet.Any?, /*17*/ out T18 : jet.Any?, /*18*/ out T19 : jet.Any?, /*19*/ out T20 : jet.Any?, /*20*/ out T21 : jet.Any?, /*21*/ out T22 : jet.Any?><init>(/*0*/ _1: T1, /*1*/ _2: T2, /*2*/ _3: T3, /*3*/ _4: T4, /*4*/ _5: T5, /*5*/ _6: T6, /*6*/ _7: T7, /*7*/ _8: T8, /*8*/ _9: T9, /*9*/ _10: T10, /*10*/ _11: T11, /*11*/ _12: T12, /*12*/ _13: T13, /*13*/ _14: T14, /*14*/ _15: T15, /*15*/ _16: T16, /*16*/ _17: T17, /*17*/ _18: T18, /*18*/ _19: T19, /*19*/ _20: T20, /*20*/ _21: T21, /*21*/ _22: T22): jet.Tuple22<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>
    public final val _10: T10
    public final val _11: T11
    public final val _12: T12
    public final val _13: T13
    public final val _14: T14
    public final val _15: T15
    public final val _16: T16
    public final val _17: T17
    public final val _18: T18
    public final val _19: T19
    public final val _1: T1
    public final val _20: T20
    public final val _21: T21
    public final val _22: T22
    public final val _2: T2
    public final val _3: T3
    public final val _4: T4
    public final val _5: T5
    public final val _6: T6
    public final val _7: T7
    public final val _8: T8
    public final val _9: T9
}
public final class jet.Tuple3</*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?><init>(/*0*/ _1: T1, /*1*/ _2: T2, /*2*/ _3: T3): jet.Tuple3<T1, T2, T3>
    public final val _1: T1
    public final val _2: T2
    public final val _3: T3
}
public final class jet.Tuple4</*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?><init>(/*0*/ _1: T1, /*1*/ _2: T2, /*2*/ _3: T3, /*3*/ _4: T4): jet.Tuple4<T1, T2, T3, T4>
    public final val _1: T1
    public final val _2: T2
    public final val _3: T3
    public final val _4: T4
}
public final class jet.Tuple5</*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?><init>(/*0*/ _1: T1, /*1*/ _2: T2, /*2*/ _3: T3, /*3*/ _4: T4, /*4*/ _5: T5): jet.Tuple5<T1, T2, T3, T4, T5>
    public final val _1: T1
    public final val _2: T2
    public final val _3: T3
    public final val _4: T4
    public final val _5: T5
}
public final class jet.Tuple6</*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?><init>(/*0*/ _1: T1, /*1*/ _2: T2, /*2*/ _3: T3, /*3*/ _4: T4, /*4*/ _5: T5, /*5*/ _6: T6): jet.Tuple6<T1, T2, T3, T4, T5, T6>
    public final val _1: T1
    public final val _2: T2
    public final val _3: T3
    public final val _4: T4
    public final val _5: T5
    public final val _6: T6
}
public final class jet.Tuple7</*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?><init>(/*0*/ _1: T1, /*1*/ _2: T2, /*2*/ _3: T3, /*3*/ _4: T4, /*4*/ _5: T5, /*5*/ _6: T6, /*6*/ _7: T7): jet.Tuple7<T1, T2, T3, T4, T5, T6, T7>
    public final val _1: T1
    public final val _2: T2
    public final val _3: T3
    public final val _4: T4
    public final val _5: T5
    public final val _6: T6
    public final val _7: T7
}
public final class jet.Tuple8</*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?><init>(/*0*/ _1: T1, /*1*/ _2: T2, /*2*/ _3: T3, /*3*/ _4: T4, /*4*/ _5: T5, /*5*/ _6: T6, /*6*/ _7: T7, /*7*/ _8: T8): jet.Tuple8<T1, T2, T3, T4, T5, T6, T7, T8>
    public final val _1: T1
    public final val _2: T2
    public final val _3: T3
    public final val _4: T4
    public final val _5: T5
    public final val _6: T6
    public final val _7: T7
    public final val _8: T8
}
public final class jet.Tuple9</*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ out T1 : jet.Any?, /*1*/ out T2 : jet.Any?, /*2*/ out T3 : jet.Any?, /*3*/ out T4 : jet.Any?, /*4*/ out T5 : jet.Any?, /*5*/ out T6 : jet.Any?, /*6*/ out T7 : jet.Any?, /*7*/ out T8 : jet.Any?, /*8*/ out T9 : jet.Any?><init>(/*0*/ _1: T1, /*1*/ _2: T2, /*2*/ _3: T3, /*3*/ _4: T4, /*4*/ _5: T5, /*5*/ _6: T6, /*6*/ _7: T7, /*7*/ _8: T8, /*8*/ _9: T9): jet.Tuple9<T1, T2, T3, T4, T5, T6, T7, T8, T9>
    public final val _1: T1
    public final val _2: T2
    public final val _3: T3
    public final val _4: T4
    public final val _5: T5
    public final val _6: T6
    public final val _7: T7
    public final val _8: T8
    public final val _9: T9
}
public final annotation class jet.atomic : jet.Any {
    public final /*constructor*/ fun <init>(): jet.atomic
}
public final annotation class jet.volatile : jet.Any {
    public final /*constructor*/ fun <init>(): jet.volatile
}
public final fun </*0*/ T : jet.Any?>arrayOfNulls(/*0*/ size: jet.Int): jet.Array<T?>
public final fun jet.Any?.equals(/*0*/ other: jet.Any?): jet.Boolean
public final fun jet.Any?.identityEquals(/*0*/ other: jet.Any?): jet.Boolean
public final fun jet.BooleanIterator.iterator(): jet.BooleanIterator
public final fun jet.ByteIterator.iterator(): jet.ByteIterator
public final fun jet.CharIterator.iterator(): jet.CharIterator
public final fun jet.DoubleIterator.iterator(): jet.DoubleIterator
public final fun jet.FloatIterator.iterator(): jet.FloatIterator
public final fun jet.IntIterator.iterator(): jet.IntIterator
public final fun </*0*/ T : jet.Any?>jet.Iterator<T>.iterator(): jet.Iterator<T>
public final fun jet.LongIterator.iterator(): jet.LongIterator
public final fun jet.ShortIterator.iterator(): jet.ShortIterator
public final fun jet.String?.plus(/*0*/ other: jet.Any?): jet.String
public final fun </*0*/ T : jet.Any>T?.sure(): T
public final fun </*0*/ R : jet.Any?>synchronized(/*0*/ lock: jet.Any, /*1*/ block: jet.Function0<R>): R
public final fun jet.Any?.toString(): jet.String
