KtFile: contractsPropertyAccessors.kt
  PsiComment(EOL_COMMENT)('// LANGUAGE: +AllowContractsOnPropertyAccessors')
  PsiWhiteSpace('\n')
  PACKAGE_DIRECTIVE
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    REFERENCE_EXPRESSION
      PsiElement(IDENTIFIER)('test')
  PsiWhiteSpace('\n\n')
  IMPORT_LIST
    IMPORT_DIRECTIVE
      PsiElement(import)('import')
      PsiWhiteSpace(' ')
      DOT_QUALIFIED_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('kotlin')
        PsiElement(DOT)('.')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('contracts')
      PsiElement(DOT)('.')
      PsiElement(MUL)('*')
  PsiWhiteSpace('\n\n')
  PROPERTY
    MODIFIER_LIST
      ANNOTATION_ENTRY
        PsiElement(AT)('@')
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('OptIn')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            CLASS_LITERAL_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('ExperimentalContracts')
              PsiElement(COLONCOLON)('::')
              PsiElement(class)('class')
          PsiElement(RPAR)(')')
    PsiWhiteSpace('\n')
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    TYPE_REFERENCE
      USER_TYPE
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('Boolean')
    PsiElement(DOT)('.')
    PsiElement(IDENTIFIER)('myRequire')
    PsiElement(COLON)(':')
    PsiWhiteSpace(' ')
    TYPE_REFERENCE
      USER_TYPE
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('Boolean')
    PsiWhiteSpace('\n    ')
    PROPERTY_ACCESSOR
      PsiElement(get)('get')
      VALUE_PARAMETER_LIST
        PsiElement(LPAR)('(')
        PsiElement(RPAR)(')')
      PsiWhiteSpace(' ')
      BLOCK
        PsiElement(LBRACE)('{')
        PsiWhiteSpace('\n        ')
        CALL_EXPRESSION
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('contract')
          PsiWhiteSpace(' ')
          LAMBDA_ARGUMENT
            LAMBDA_EXPRESSION
              FUNCTION_LITERAL
                PsiElement(LBRACE)('{')
                PsiWhiteSpace('\n            ')
                BLOCK
                  BINARY_EXPRESSION
                    CALL_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(IDENTIFIER)('returns')
                      VALUE_ARGUMENT_LIST
                        PsiElement(LPAR)('(')
                        VALUE_ARGUMENT
                          BOOLEAN_CONSTANT
                            PsiElement(true)('true')
                        PsiElement(RPAR)(')')
                    PsiWhiteSpace(' ')
                    OPERATION_REFERENCE
                      PsiElement(IDENTIFIER)('implies')
                    PsiWhiteSpace(' ')
                    PARENTHESIZED
                      PsiElement(LPAR)('(')
                      THIS_EXPRESSION
                        REFERENCE_EXPRESSION
                          PsiElement(this)('this')
                        LABEL_QUALIFIER
                          LABEL
                            PsiElement(AT)('@')
                            PsiElement(IDENTIFIER)('myRequire')
                      PsiElement(RPAR)(')')
                PsiWhiteSpace('\n        ')
                PsiElement(RBRACE)('}')
        PsiWhiteSpace('\n\n        ')
        RETURN
          PsiElement(return)('return')
          PsiWhiteSpace(' ')
          BOOLEAN_CONSTANT
            PsiElement(true)('true')
        PsiWhiteSpace('\n    ')
        PsiElement(RBRACE)('}')