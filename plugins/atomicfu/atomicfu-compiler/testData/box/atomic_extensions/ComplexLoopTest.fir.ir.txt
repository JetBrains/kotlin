FILE fqName:<root> fileName:/ComplexLoopTest.kt
  CLASS CLASS name:LoopTest modality:FINAL visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.LoopTest
    PROPERTY ATOMICFU_GENERATED_PROPERTY name:a$volatile visibility:private modality:FINAL [var]
      FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private
        annotations:
          Volatile
        EXPRESSION_BODY
          CONST Int type=kotlin.Int value=10
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-a$volatile> visibility:private modality:FINAL returnType:kotlin.Int
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:a$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-a$volatile> (): kotlin.Int declared in <root>.LoopTest'
            GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' type=kotlin.Int origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-a$volatile>' type=<root>.LoopTest origin=null
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<set-a$volatile> visibility:private modality:FINAL returnType:kotlin.Unit
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        VALUE_PARAMETER kind:Regular name:value index:1 type:kotlin.Int
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:a$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Unit from='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest'
            SET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' type=kotlin.Unit origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<set-a$volatile>' type=<root>.LoopTest origin=null
              value: GET_VAR 'value: kotlin.Int declared in <root>.LoopTest.<set-a$volatile>' type=kotlin.Int origin=null
    PROPERTY ATOMICFU_GENERATED_PROPERTY name:b$volatile visibility:private modality:FINAL [var]
      FIELD ATOMICFU_GENERATED_FIELD name:b$volatile type:kotlin.Int visibility:private
        annotations:
          Volatile
        EXPRESSION_BODY
          CONST Int type=kotlin.Int value=11
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-b$volatile> visibility:private modality:FINAL returnType:kotlin.Int
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:b$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-b$volatile> (): kotlin.Int declared in <root>.LoopTest'
            GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:b$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' type=kotlin.Int origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-b$volatile>' type=<root>.LoopTest origin=null
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<set-b$volatile> visibility:private modality:FINAL returnType:kotlin.Unit
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        VALUE_PARAMETER kind:Regular name:value index:1 type:kotlin.Int
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:b$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Unit from='private final fun <set-b$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest'
            SET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:b$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' type=kotlin.Unit origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<set-b$volatile>' type=<root>.LoopTest origin=null
              value: GET_VAR 'value: kotlin.Int declared in <root>.LoopTest.<set-b$volatile>' type=kotlin.Int origin=null
    PROPERTY ATOMICFU_GENERATED_PROPERTY name:c$volatile visibility:private modality:FINAL [var]
      FIELD ATOMICFU_GENERATED_FIELD name:c$volatile type:kotlin.Int visibility:private
        annotations:
          Volatile
        EXPRESSION_BODY
          CONST Int type=kotlin.Int value=12
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-c$volatile> visibility:private modality:FINAL returnType:kotlin.Int
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:c$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-c$volatile> (): kotlin.Int declared in <root>.LoopTest'
            GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:c$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' type=kotlin.Int origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-c$volatile>' type=<root>.LoopTest origin=null
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<set-c$volatile> visibility:private modality:FINAL returnType:kotlin.Unit
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        VALUE_PARAMETER kind:Regular name:value index:1 type:kotlin.Int
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:c$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Unit from='private final fun <set-c$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest'
            SET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:c$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' type=kotlin.Unit origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<set-c$volatile>' type=<root>.LoopTest origin=null
              value: GET_VAR 'value: kotlin.Int declared in <root>.LoopTest.<set-c$volatile>' type=kotlin.Int origin=null
    PROPERTY ATOMICFU_GENERATED_PROPERTY name:r$volatile visibility:private modality:FINAL [var]
      FIELD ATOMICFU_GENERATED_FIELD name:r$volatile type:kotlin.Any? visibility:private
        annotations:
          Volatile
        EXPRESSION_BODY
          CONST String type=kotlin.String value="aaa"
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-r$volatile> visibility:private modality:FINAL returnType:kotlin.Any?
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:r$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-r$volatile> (): kotlin.Any? declared in <root>.LoopTest'
            GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:r$volatile type:kotlin.Any? visibility:private declared in <root>.LoopTest' type=kotlin.Any? origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-r$volatile>' type=<root>.LoopTest origin=null
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<set-r$volatile> visibility:private modality:FINAL returnType:kotlin.Unit
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        VALUE_PARAMETER kind:Regular name:value index:1 type:kotlin.Any?
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:r$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Unit from='private final fun <set-r$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LoopTest'
            SET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:r$volatile type:kotlin.Any? visibility:private declared in <root>.LoopTest' type=kotlin.Unit origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<set-r$volatile>' type=<root>.LoopTest origin=null
              value: GET_VAR 'value: kotlin.Any? declared in <root>.LoopTest.<set-r$volatile>' type=kotlin.Any? origin=null
    PROPERTY ATOMICFU_GENERATED_PROPERTY name:intArr visibility:private modality:FINAL [val]
      FIELD ATOMICFU_GENERATED_FIELD name:intArr type:kotlin.concurrent.AtomicIntArray visibility:private [final]
        EXPRESSION_BODY
          CONSTRUCTOR_CALL 'public constructor <init> (size: kotlin.Int) declared in kotlin.concurrent.AtomicIntArray' type=kotlin.concurrent.AtomicIntArray origin=null
            ARG size: CONST Int type=kotlin.Int value=10
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-intArr> visibility:private modality:FINAL returnType:kotlin.concurrent.AtomicIntArray
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:intArr visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-intArr> (): kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest'
            GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:intArr type:kotlin.concurrent.AtomicIntArray visibility:private [final] declared in <root>.LoopTest' type=kotlin.concurrent.AtomicIntArray origin=null
              receiver: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.<get-intArr>' type=<root>.LoopTest origin=null
    CONSTRUCTOR visibility:public returnType:<root>.LoopTest [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:LoopTest modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN ATOMICFU_GENERATED_FUNCTION name:extensionEmbeddedLoops$atomicfu$ATOMIC_ARRAY$Int visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.concurrent.AtomicIntArray
      VALUE_PARAMETER kind:Regular name:index$atomicfu index:2 type:kotlin.Int
      VALUE_PARAMETER kind:Regular name:to index:3 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun extensionEmbeddedLoops$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
          CALL 'private final fun loop$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extensionEmbeddedLoops$atomicfu$ATOMIC_ARRAY$Int' type=<root>.LoopTest origin=null
            ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.extensionEmbeddedLoops$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
            ARG index$atomicfu: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.extensionEmbeddedLoops$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
            ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:cur1 index:0 type:kotlin.Int
                BLOCK_BODY
                  TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                    CALL 'public final fun compareAndSet (index: kotlin.Int, expectedValue: kotlin.Int, newValue: kotlin.Int): kotlin.Boolean declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Boolean origin=null
                      ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.extensionEmbeddedLoops$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
                      ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.extensionEmbeddedLoops$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
                      ARG expectedValue: GET_VAR 'cur1: kotlin.Int declared in <root>.LoopTest.extensionEmbeddedLoops$atomicfu$ATOMIC_ARRAY$Int.<anonymous>' type=kotlin.Int origin=null
                      ARG newValue: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.extensionEmbeddedLoops$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
                  CALL 'private final fun loop$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
                    ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extensionEmbeddedLoops$atomicfu$ATOMIC_ARRAY$Int' type=<root>.LoopTest origin=null
                    ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.extensionEmbeddedLoops$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
                    ARG index$atomicfu: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.extensionEmbeddedLoops$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
                    ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
                      FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                        VALUE_PARAMETER kind:Regular name:cur2 index:0 type:kotlin.Int
                        BLOCK_BODY
                          RETURN type=kotlin.Nothing from='private final fun extensionEmbeddedLoops$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                            GET_VAR 'cur2: kotlin.Int declared in <root>.LoopTest.extensionEmbeddedLoops$atomicfu$ATOMIC_ARRAY$Int.<anonymous>.<anonymous>' type=kotlin.Int origin=null
    FUN ATOMICFU_GENERATED_FUNCTION name:extensionEmbeddedLoops$atomicfu$NATIVE_PROPERTY_REF$Int visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> [crossinline]
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun extensionEmbeddedLoops$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
          CALL 'private final fun loop$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extensionEmbeddedLoops$atomicfu$NATIVE_PROPERTY_REF$Int' type=<root>.LoopTest origin=null
            ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.extensionEmbeddedLoops$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
            ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:cur1 index:0 type:kotlin.Int
                BLOCK_BODY
                  TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                    CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                      TYPE_ARG T: kotlin.Int
                      ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                        ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.extensionEmbeddedLoops$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
                      ARG expectedValue: GET_VAR 'cur1: kotlin.Int declared in <root>.LoopTest.extensionEmbeddedLoops$atomicfu$NATIVE_PROPERTY_REF$Int.<anonymous>' type=kotlin.Int origin=null
                      ARG newValue: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.extensionEmbeddedLoops$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Int origin=null
                  CALL 'private final fun loop$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
                    ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extensionEmbeddedLoops$atomicfu$NATIVE_PROPERTY_REF$Int' type=<root>.LoopTest origin=null
                    ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.extensionEmbeddedLoops$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
                    ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
                      FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                        VALUE_PARAMETER kind:Regular name:cur2 index:0 type:kotlin.Int
                        BLOCK_BODY
                          RETURN type=kotlin.Nothing from='private final fun extensionEmbeddedLoops$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                            GET_VAR 'cur2: kotlin.Int declared in <root>.LoopTest.extensionEmbeddedLoops$atomicfu$NATIVE_PROPERTY_REF$Int.<anonymous>.<anonymous>' type=kotlin.Int origin=null
    FUN ATOMICFU_GENERATED_FUNCTION name:extesntionEmbeddedRefUpdate$atomicfu$ATOMIC_ARRAY$Any visibility:private modality:FINAL returnType:kotlin.String [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.concurrent.AtomicArray<kotlin.Any?>
      VALUE_PARAMETER kind:Regular name:index$atomicfu index:2 type:kotlin.Int
      VALUE_PARAMETER kind:Regular name:to index:3 type:kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun extesntionEmbeddedRefUpdate$atomicfu$ATOMIC_ARRAY$Any (handler$atomicfu: kotlin.concurrent.AtomicArray<kotlin.Any?>, index$atomicfu: kotlin.Int, to: kotlin.String): kotlin.String declared in <root>.LoopTest'
          CALL 'private final fun loop$atomicfu$ATOMIC_ARRAY$Any (handler$atomicfu: kotlin.concurrent.AtomicArray<kotlin.Any?>, index$atomicfu: kotlin.Int, action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Unit>): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extesntionEmbeddedRefUpdate$atomicfu$ATOMIC_ARRAY$Any' type=<root>.LoopTest origin=null
            ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicArray<kotlin.Any?> declared in <root>.LoopTest.extesntionEmbeddedRefUpdate$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.concurrent.AtomicArray<kotlin.Any?> origin=null
            ARG index$atomicfu: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.extesntionEmbeddedRefUpdate$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.Int origin=null
            ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.String, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:value index:0 type:kotlin.String
                BLOCK_BODY
                  TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                    CALL 'public final fun compareAndSet (index: kotlin.Int, expectedValue: T of kotlin.concurrent.AtomicArray, newValue: T of kotlin.concurrent.AtomicArray): kotlin.Boolean declared in kotlin.concurrent.AtomicArray' type=kotlin.Boolean origin=null
                      ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicArray<kotlin.Any?> declared in <root>.LoopTest.extesntionEmbeddedRefUpdate$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.concurrent.AtomicArray<kotlin.Any?> origin=null
                      ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.extesntionEmbeddedRefUpdate$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.Int origin=null
                      ARG expectedValue: GET_VAR 'value: kotlin.String declared in <root>.LoopTest.extesntionEmbeddedRefUpdate$atomicfu$ATOMIC_ARRAY$Any.<anonymous>' type=kotlin.String origin=null
                      ARG newValue: GET_VAR 'to: kotlin.String declared in <root>.LoopTest.extesntionEmbeddedRefUpdate$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.String origin=null
                  RETURN type=kotlin.Nothing from='private final fun extesntionEmbeddedRefUpdate$atomicfu$ATOMIC_ARRAY$Any (handler$atomicfu: kotlin.concurrent.AtomicArray<kotlin.Any?>, index$atomicfu: kotlin.Int, to: kotlin.String): kotlin.String declared in <root>.LoopTest'
                    CALL 'private final fun updateAndGet$atomicfu$ATOMIC_ARRAY$Any (handler$atomicfu: kotlin.concurrent.AtomicArray<kotlin.Any?>, index$atomicfu: kotlin.Int, action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Any?>): kotlin.Any? declared in <root>.LoopTest' type=kotlin.Any? origin=null
                      ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extesntionEmbeddedRefUpdate$atomicfu$ATOMIC_ARRAY$Any' type=<root>.LoopTest origin=null
                      ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicArray<kotlin.Any?> declared in <root>.LoopTest.extesntionEmbeddedRefUpdate$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.concurrent.AtomicArray<kotlin.Any?> origin=null
                      ARG index$atomicfu: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.extesntionEmbeddedRefUpdate$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.Int origin=null
                      ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.String, kotlin.String> origin=LAMBDA
                        FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.String
                          VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.String
                          BLOCK_BODY
                            RETURN type=kotlin.Nothing from='local final fun <anonymous> (cur: kotlin.String): kotlin.String declared in <root>.LoopTest.extesntionEmbeddedRefUpdate$atomicfu$ATOMIC_ARRAY$Any.<anonymous>'
                              STRING_CONCATENATION type=kotlin.String
                                GET_VAR 'cur: kotlin.String declared in <root>.LoopTest.extesntionEmbeddedRefUpdate$atomicfu$ATOMIC_ARRAY$Any.<anonymous>.<anonymous>' type=kotlin.String origin=null
                                CONST String type=kotlin.String value="AAA"
    FUN ATOMICFU_GENERATED_FUNCTION name:extesntionEmbeddedRefUpdate$atomicfu$NATIVE_PROPERTY_REF$Any visibility:private modality:FINAL returnType:kotlin.String [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> [crossinline]
      VALUE_PARAMETER kind:Regular name:to index:2 type:kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun extesntionEmbeddedRefUpdate$atomicfu$NATIVE_PROPERTY_REF$Any (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>>, to: kotlin.String): kotlin.String declared in <root>.LoopTest'
          CALL 'private final fun loop$atomicfu$NATIVE_PROPERTY_REF$Any (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>>, action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Unit>): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extesntionEmbeddedRefUpdate$atomicfu$NATIVE_PROPERTY_REF$Any' type=<root>.LoopTest origin=null
            ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> declared in <root>.LoopTest.extesntionEmbeddedRefUpdate$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> origin=null
            ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.String, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:value index:0 type:kotlin.String
                BLOCK_BODY
                  TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                    CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                      TYPE_ARG T: kotlin.Any?
                      ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                        ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> declared in <root>.LoopTest.extesntionEmbeddedRefUpdate$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> origin=null
                      ARG expectedValue: GET_VAR 'value: kotlin.String declared in <root>.LoopTest.extesntionEmbeddedRefUpdate$atomicfu$NATIVE_PROPERTY_REF$Any.<anonymous>' type=kotlin.String origin=null
                      ARG newValue: GET_VAR 'to: kotlin.String declared in <root>.LoopTest.extesntionEmbeddedRefUpdate$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.String origin=null
                  RETURN type=kotlin.Nothing from='private final fun extesntionEmbeddedRefUpdate$atomicfu$NATIVE_PROPERTY_REF$Any (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>>, to: kotlin.String): kotlin.String declared in <root>.LoopTest'
                    CALL 'private final fun updateAndGet$atomicfu$NATIVE_PROPERTY_REF$Any (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>>, action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Any?>): kotlin.Any? declared in <root>.LoopTest' type=kotlin.Any? origin=null
                      ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.extesntionEmbeddedRefUpdate$atomicfu$NATIVE_PROPERTY_REF$Any' type=<root>.LoopTest origin=null
                      ARG handler$atomicfu: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> declared in <root>.LoopTest.extesntionEmbeddedRefUpdate$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> origin=null
                      ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.String, kotlin.String> origin=LAMBDA
                        FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.String
                          VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.String
                          BLOCK_BODY
                            RETURN type=kotlin.Nothing from='local final fun <anonymous> (cur: kotlin.String): kotlin.String declared in <root>.LoopTest.extesntionEmbeddedRefUpdate$atomicfu$NATIVE_PROPERTY_REF$Any.<anonymous>'
                              STRING_CONCATENATION type=kotlin.String
                                GET_VAR 'cur: kotlin.String declared in <root>.LoopTest.extesntionEmbeddedRefUpdate$atomicfu$NATIVE_PROPERTY_REF$Any.<anonymous>.<anonymous>' type=kotlin.String origin=null
                                CONST String type=kotlin.String value="AAA"
    FUN ATOMICFU_GENERATED_FUNCTION name:loop$atomicfu$ATOMIC_ARRAY$Any visibility:private modality:FINAL returnType:kotlin.Unit [inline]
      VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.concurrent.AtomicArray<kotlin.Any?>
      VALUE_PARAMETER kind:Regular name:index$atomicfu index:2 type:kotlin.Int
      VALUE_PARAMETER kind:Regular name:action$atomicfu index:3 type:kotlin.Function1<kotlin.Any?, kotlin.Unit>
      BLOCK_BODY
        WHILE label=null origin=null
          condition: CONST Boolean type=kotlin.Boolean value=true
          body: BLOCK type=R of kotlin.Function1 origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:T of kotlin.concurrent.AtomicArray [val]
              CALL 'public final fun get (index: kotlin.Int): T of kotlin.concurrent.AtomicArray declared in kotlin.concurrent.AtomicArray' type=T of kotlin.concurrent.AtomicArray origin=null
                ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicArray<kotlin.Any?> declared in <root>.LoopTest.loop$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.concurrent.AtomicArray<kotlin.Any?> origin=null
                ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.loop$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.Int origin=null
            CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=R of kotlin.Function1 origin=null
              ARG <this>: GET_VAR 'action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Unit> declared in <root>.LoopTest.loop$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.Function1<kotlin.Any?, kotlin.Unit> origin=null
              ARG p1: GET_VAR 'val tmp_0: T of kotlin.concurrent.AtomicArray declared in <root>.LoopTest.loop$atomicfu$ATOMIC_ARRAY$Any' type=T of kotlin.concurrent.AtomicArray origin=null
    FUN ATOMICFU_GENERATED_FUNCTION name:loop$atomicfu$ATOMIC_ARRAY$Int visibility:private modality:FINAL returnType:kotlin.Unit [inline]
      VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.concurrent.AtomicIntArray
      VALUE_PARAMETER kind:Regular name:index$atomicfu index:2 type:kotlin.Int
      VALUE_PARAMETER kind:Regular name:action$atomicfu index:3 type:kotlin.Function1<kotlin.Int, kotlin.Unit>
      BLOCK_BODY
        WHILE label=null origin=null
          condition: CONST Boolean type=kotlin.Boolean value=true
          body: BLOCK type=R of kotlin.Function1 origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp_1 type:kotlin.Int [val]
              CALL 'public final fun get (index: kotlin.Int): kotlin.Int declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Int origin=null
                ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest.loop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.concurrent.AtomicIntArray origin=null
                ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.loop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
            CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=R of kotlin.Function1 origin=null
              ARG <this>: GET_VAR 'action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit> declared in <root>.LoopTest.loop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=null
              ARG p1: GET_VAR 'val tmp_1: kotlin.Int declared in <root>.LoopTest.loop$atomicfu$ATOMIC_ARRAY$Int' type=kotlin.Int origin=null
    FUN ATOMICFU_GENERATED_FUNCTION name:loop$atomicfu$NATIVE_PROPERTY_REF$Any visibility:private modality:FINAL returnType:kotlin.Unit [inline]
      VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> [crossinline]
      VALUE_PARAMETER kind:Regular name:action$atomicfu index:2 type:kotlin.Function1<kotlin.Any?, kotlin.Unit>
      BLOCK_BODY
        WHILE label=null origin=null
          condition: CONST Boolean type=kotlin.Boolean value=true
          body: BLOCK type=R of kotlin.Function1 origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp_2 type:T of kotlin.concurrent.atomicGetField [val]
              CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                TYPE_ARG T: kotlin.Any?
                ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                  ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> declared in <root>.LoopTest.loop$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> origin=null
            CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=R of kotlin.Function1 origin=null
              ARG <this>: GET_VAR 'action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Unit> declared in <root>.LoopTest.loop$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function1<kotlin.Any?, kotlin.Unit> origin=null
              ARG p1: GET_VAR 'val tmp_2: T of kotlin.concurrent.atomicGetField declared in <root>.LoopTest.loop$atomicfu$NATIVE_PROPERTY_REF$Any' type=T of kotlin.concurrent.atomicGetField origin=null
    FUN ATOMICFU_GENERATED_FUNCTION name:loop$atomicfu$NATIVE_PROPERTY_REF$Int visibility:private modality:FINAL returnType:kotlin.Unit [inline]
      VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> [crossinline]
      VALUE_PARAMETER kind:Regular name:action$atomicfu index:2 type:kotlin.Function1<kotlin.Int, kotlin.Unit>
      BLOCK_BODY
        WHILE label=null origin=null
          condition: CONST Boolean type=kotlin.Boolean value=true
          body: BLOCK type=R of kotlin.Function1 origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp_3 type:T of kotlin.concurrent.atomicGetField [val]
              CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                TYPE_ARG T: kotlin.Int
                ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                  ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.loop$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
            CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=R of kotlin.Function1 origin=null
              ARG <this>: GET_VAR 'action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit> declared in <root>.LoopTest.loop$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=null
              ARG p1: GET_VAR 'val tmp_3: T of kotlin.concurrent.atomicGetField declared in <root>.LoopTest.loop$atomicfu$NATIVE_PROPERTY_REF$Int' type=T of kotlin.concurrent.atomicGetField origin=null
    FUN ATOMICFU_GENERATED_FUNCTION name:updateAndGet$atomicfu$ATOMIC_ARRAY$Any visibility:private modality:FINAL returnType:kotlin.Any? [inline]
      VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.concurrent.AtomicArray<kotlin.Any?>
      VALUE_PARAMETER kind:Regular name:index$atomicfu index:2 type:kotlin.Int
      VALUE_PARAMETER kind:Regular name:action$atomicfu index:3 type:kotlin.Function1<kotlin.Any?, kotlin.Any?>
      BLOCK_BODY
        WHILE label=null origin=null
          condition: CONST Boolean type=kotlin.Boolean value=true
          body: BLOCK type=kotlin.Unit origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp_4 type:T of kotlin.concurrent.AtomicArray [val]
              CALL 'public final fun get (index: kotlin.Int): T of kotlin.concurrent.AtomicArray declared in kotlin.concurrent.AtomicArray' type=T of kotlin.concurrent.AtomicArray origin=null
                ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicArray<kotlin.Any?> declared in <root>.LoopTest.updateAndGet$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.concurrent.AtomicArray<kotlin.Any?> origin=null
                ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.updateAndGet$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.Int origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp_5 type:R of kotlin.Function1 [val]
              CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=R of kotlin.Function1 origin=null
                ARG <this>: GET_VAR 'action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Any?> declared in <root>.LoopTest.updateAndGet$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.Function1<kotlin.Any?, kotlin.Any?> origin=null
                ARG p1: GET_VAR 'val tmp_4: T of kotlin.concurrent.AtomicArray declared in <root>.LoopTest.updateAndGet$atomicfu$ATOMIC_ARRAY$Any' type=T of kotlin.concurrent.AtomicArray origin=null
            WHEN type=kotlin.Unit origin=null
              BRANCH
                if: CALL 'public final fun compareAndSet (index: kotlin.Int, expectedValue: T of kotlin.concurrent.AtomicArray, newValue: T of kotlin.concurrent.AtomicArray): kotlin.Boolean declared in kotlin.concurrent.AtomicArray' type=kotlin.Boolean origin=null
                  ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicArray<kotlin.Any?> declared in <root>.LoopTest.updateAndGet$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.concurrent.AtomicArray<kotlin.Any?> origin=null
                  ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.LoopTest.updateAndGet$atomicfu$ATOMIC_ARRAY$Any' type=kotlin.Int origin=null
                  ARG expectedValue: GET_VAR 'val tmp_4: T of kotlin.concurrent.AtomicArray declared in <root>.LoopTest.updateAndGet$atomicfu$ATOMIC_ARRAY$Any' type=T of kotlin.concurrent.AtomicArray origin=null
                  ARG newValue: GET_VAR 'val tmp_5: R of kotlin.Function1 declared in <root>.LoopTest.updateAndGet$atomicfu$ATOMIC_ARRAY$Any' type=R of kotlin.Function1 origin=null
                then: RETURN type=kotlin.Nothing from='private final fun updateAndGet$atomicfu$ATOMIC_ARRAY$Any (handler$atomicfu: kotlin.concurrent.AtomicArray<kotlin.Any?>, index$atomicfu: kotlin.Int, action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Any?>): kotlin.Any? declared in <root>.LoopTest'
                  GET_VAR 'val tmp_5: R of kotlin.Function1 declared in <root>.LoopTest.updateAndGet$atomicfu$ATOMIC_ARRAY$Any' type=R of kotlin.Function1 origin=null
    FUN ATOMICFU_GENERATED_FUNCTION name:updateAndGet$atomicfu$NATIVE_PROPERTY_REF$Any visibility:private modality:FINAL returnType:kotlin.Any? [inline]
      VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> [crossinline]
      VALUE_PARAMETER kind:Regular name:action$atomicfu index:2 type:kotlin.Function1<kotlin.Any?, kotlin.Any?>
      BLOCK_BODY
        WHILE label=null origin=null
          condition: CONST Boolean type=kotlin.Boolean value=true
          body: BLOCK type=kotlin.Unit origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp_6 type:T of kotlin.concurrent.atomicGetField [val]
              CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                TYPE_ARG T: kotlin.Any?
                ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                  ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> declared in <root>.LoopTest.updateAndGet$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp_7 type:R of kotlin.Function1 [val]
              CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=R of kotlin.Function1 origin=null
                ARG <this>: GET_VAR 'action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Any?> declared in <root>.LoopTest.updateAndGet$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function1<kotlin.Any?, kotlin.Any?> origin=null
                ARG p1: GET_VAR 'val tmp_6: T of kotlin.concurrent.atomicGetField declared in <root>.LoopTest.updateAndGet$atomicfu$NATIVE_PROPERTY_REF$Any' type=T of kotlin.concurrent.atomicGetField origin=null
            WHEN type=kotlin.Unit origin=null
              BRANCH
                if: CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                  TYPE_ARG T: kotlin.Any?
                  ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                    ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> declared in <root>.LoopTest.updateAndGet$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> origin=null
                  ARG expectedValue: GET_VAR 'val tmp_6: T of kotlin.concurrent.atomicGetField declared in <root>.LoopTest.updateAndGet$atomicfu$NATIVE_PROPERTY_REF$Any' type=T of kotlin.concurrent.atomicGetField origin=null
                  ARG newValue: GET_VAR 'val tmp_7: R of kotlin.Function1 declared in <root>.LoopTest.updateAndGet$atomicfu$NATIVE_PROPERTY_REF$Any' type=R of kotlin.Function1 origin=null
                then: RETURN type=kotlin.Nothing from='private final fun updateAndGet$atomicfu$NATIVE_PROPERTY_REF$Any (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>>, action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Any?>): kotlin.Any? declared in <root>.LoopTest'
                  GET_VAR 'val tmp_7: R of kotlin.Function1 declared in <root>.LoopTest.updateAndGet$atomicfu$NATIVE_PROPERTY_REF$Any' type=R of kotlin.Function1 origin=null
    FUN ATOMICFU_GENERATED_FUNCTION name:updateAndGet$atomicfu$NATIVE_PROPERTY_REF$Int visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> [crossinline]
      VALUE_PARAMETER kind:Regular name:action$atomicfu index:2 type:kotlin.Function1<kotlin.Int, kotlin.Int>
      BLOCK_BODY
        WHILE label=null origin=null
          condition: CONST Boolean type=kotlin.Boolean value=true
          body: BLOCK type=kotlin.Unit origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp_8 type:T of kotlin.concurrent.atomicGetField [val]
              CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                TYPE_ARG T: kotlin.Int
                ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                  ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.updateAndGet$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp_9 type:R of kotlin.Function1 [val]
              CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=R of kotlin.Function1 origin=null
                ARG <this>: GET_VAR 'action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Int> declared in <root>.LoopTest.updateAndGet$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function1<kotlin.Int, kotlin.Int> origin=null
                ARG p1: GET_VAR 'val tmp_8: T of kotlin.concurrent.atomicGetField declared in <root>.LoopTest.updateAndGet$atomicfu$NATIVE_PROPERTY_REF$Int' type=T of kotlin.concurrent.atomicGetField origin=null
            WHEN type=kotlin.Unit origin=null
              BRANCH
                if: CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                  TYPE_ARG T: kotlin.Int
                  ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                    ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> declared in <root>.LoopTest.updateAndGet$atomicfu$NATIVE_PROPERTY_REF$Int' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=null
                  ARG expectedValue: GET_VAR 'val tmp_8: T of kotlin.concurrent.atomicGetField declared in <root>.LoopTest.updateAndGet$atomicfu$NATIVE_PROPERTY_REF$Int' type=T of kotlin.concurrent.atomicGetField origin=null
                  ARG newValue: GET_VAR 'val tmp_9: R of kotlin.Function1 declared in <root>.LoopTest.updateAndGet$atomicfu$NATIVE_PROPERTY_REF$Int' type=R of kotlin.Function1 origin=null
                then: RETURN type=kotlin.Nothing from='private final fun updateAndGet$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Int>): kotlin.Int declared in <root>.LoopTest'
                  GET_VAR 'val tmp_9: R of kotlin.Function1 declared in <root>.LoopTest.updateAndGet$atomicfu$NATIVE_PROPERTY_REF$Int' type=R of kotlin.Function1 origin=null
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    FUN name:embeddedLoops visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun embeddedLoops (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
          CALL 'private final fun loop$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.embeddedLoops' type=<root>.LoopTest origin=null
            ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=LAMBDA
              FUN ATOMICFU_GENERATED_FUNCTION name:<a$volatile-getter> visibility:local modality:FINAL returnType:kotlin.reflect.KMutableProperty0<kotlin.Int> [inline]
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <a$volatile-getter> (): kotlin.reflect.KMutableProperty0<kotlin.Int> declared in <root>.LoopTest.embeddedLoops'
                    PROPERTY_REFERENCE 'private final a$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-a$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                      ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.embeddedLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:aValue index:0 type:kotlin.Int
                BLOCK_BODY
                  CALL 'private final fun loop$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
                    ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.embeddedLoops' type=<root>.LoopTest origin=null
                    ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=LAMBDA
                      FUN ATOMICFU_GENERATED_FUNCTION name:<b$volatile-getter> visibility:local modality:FINAL returnType:kotlin.reflect.KMutableProperty0<kotlin.Int> [inline]
                        BLOCK_BODY
                          RETURN type=kotlin.Nothing from='local final fun <b$volatile-getter> (): kotlin.reflect.KMutableProperty0<kotlin.Int> declared in <root>.LoopTest.embeddedLoops.<anonymous>'
                            PROPERTY_REFERENCE 'private final b$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:b$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-b$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-b$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                              ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.embeddedLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
                    ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
                      FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                        VALUE_PARAMETER kind:Regular name:bValue index:0 type:kotlin.Int
                        BLOCK_BODY
                          WHEN type=kotlin.Unit origin=IF
                            BRANCH
                              if: CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                                TYPE_ARG T: kotlin.Int
                                ARG <this>: PROPERTY_REFERENCE 'private final b$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:b$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-b$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-b$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                                  ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.embeddedLoops' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
                                ARG expectedValue: GET_VAR 'bValue: kotlin.Int declared in <root>.LoopTest.embeddedLoops.<anonymous>.<anonymous>' type=kotlin.Int origin=null
                                ARG newValue: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.embeddedLoops' type=kotlin.Int origin=null
                              then: RETURN type=kotlin.Nothing from='private final fun embeddedLoops (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                                CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
                                  ARG <this>: GET_VAR 'aValue: kotlin.Int declared in <root>.LoopTest.embeddedLoops.<anonymous>' type=kotlin.Int origin=null
                                  ARG other: GET_VAR 'bValue: kotlin.Int declared in <root>.LoopTest.embeddedLoops.<anonymous>.<anonymous>' type=kotlin.Int origin=null
    FUN name:embeddedUpdate visibility:private modality:FINAL returnType:kotlin.Int [inline]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      VALUE_PARAMETER kind:Regular name:to index:1 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun embeddedUpdate (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
          CALL 'private final fun loop$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Unit>): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.embeddedUpdate' type=<root>.LoopTest origin=null
            ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=LAMBDA
              FUN ATOMICFU_GENERATED_FUNCTION name:<a$volatile-getter> visibility:local modality:FINAL returnType:kotlin.reflect.KMutableProperty0<kotlin.Int> [inline]
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <a$volatile-getter> (): kotlin.reflect.KMutableProperty0<kotlin.Int> declared in <root>.LoopTest.embeddedUpdate'
                    PROPERTY_REFERENCE 'private final a$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-a$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                      ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.embeddedUpdate' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Unit> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
                VALUE_PARAMETER kind:Regular name:aValue index:0 type:kotlin.Int
                BLOCK_BODY
                  TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                    CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                      TYPE_ARG T: kotlin.Int
                      ARG <this>: PROPERTY_REFERENCE 'private final a$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-a$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                        ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.embeddedUpdate' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
                      ARG expectedValue: GET_VAR 'aValue: kotlin.Int declared in <root>.LoopTest.embeddedUpdate.<anonymous>' type=kotlin.Int origin=null
                      ARG newValue: GET_VAR 'to: kotlin.Int declared in <root>.LoopTest.embeddedUpdate' type=kotlin.Int origin=null
                  RETURN type=kotlin.Nothing from='private final fun embeddedUpdate (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest'
                    CALL 'private final fun updateAndGet$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, action$atomicfu: kotlin.Function1<kotlin.Int, kotlin.Int>): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
                      ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.embeddedUpdate' type=<root>.LoopTest origin=null
                      ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=LAMBDA
                        FUN ATOMICFU_GENERATED_FUNCTION name:<a$volatile-getter> visibility:local modality:FINAL returnType:kotlin.reflect.KMutableProperty0<kotlin.Int> [inline]
                          BLOCK_BODY
                            RETURN type=kotlin.Nothing from='local final fun <a$volatile-getter> (): kotlin.reflect.KMutableProperty0<kotlin.Int> declared in <root>.LoopTest.embeddedUpdate.<anonymous>'
                              PROPERTY_REFERENCE 'private final a$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:a$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-a$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-a$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                                ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.embeddedUpdate' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
                      ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<kotlin.Int, kotlin.Int> origin=LAMBDA
                        FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Int
                          VALUE_PARAMETER kind:Regular name:cur index:0 type:kotlin.Int
                          BLOCK_BODY
                            RETURN type=kotlin.Nothing from='local final fun <anonymous> (cur: kotlin.Int): kotlin.Int declared in <root>.LoopTest.embeddedUpdate.<anonymous>'
                              CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
                                ARG <this>: GET_VAR 'cur: kotlin.Int declared in <root>.LoopTest.embeddedUpdate.<anonymous>.<anonymous>' type=kotlin.Int origin=null
                                ARG other: CONST Int type=kotlin.Int value=100
    FUN name:test visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LoopTest
      BLOCK_BODY
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=21
          ARG actual: CALL 'private final fun embeddedLoops (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.test' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Int type=kotlin.Int value=12
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=77
          ARG actual: CALL 'private final fun extensionEmbeddedLoops$atomicfu$NATIVE_PROPERTY_REF$Int (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>>, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.test' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Int>> origin=LAMBDA
              FUN ATOMICFU_GENERATED_FUNCTION name:<c$volatile-getter> visibility:local modality:FINAL returnType:kotlin.reflect.KMutableProperty0<kotlin.Int> [inline]
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <c$volatile-getter> (): kotlin.reflect.KMutableProperty0<kotlin.Int> declared in <root>.LoopTest.test'
                    PROPERTY_REFERENCE 'private final c$volatile: kotlin.Int declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:c$volatile type:kotlin.Int visibility:private declared in <root>.LoopTest' getter='private final fun <get-c$volatile> (): kotlin.Int declared in <root>.LoopTest' setter='private final fun <set-c$volatile> (value: kotlin.Int): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Int> origin=null
                      ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.test' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Int type=kotlin.Int value=77
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=66
          ARG actual: CALL 'private final fun extensionEmbeddedLoops$atomicfu$ATOMIC_ARRAY$Int (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int, to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.test' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG handler$atomicfu: CALL 'private final fun <get-intArr> (): kotlin.concurrent.AtomicIntArray declared in <root>.LoopTest' type=kotlin.concurrent.AtomicIntArray origin=null
              ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.test' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG index$atomicfu: CONST Int type=kotlin.Int value=0
            ARG to: CONST Int type=kotlin.Int value=66
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=166
          ARG actual: CALL 'private final fun embeddedUpdate (to: kotlin.Int): kotlin.Int declared in <root>.LoopTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.test' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST Int type=kotlin.Int value=66
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.String
          ARG expected: CONST String type=kotlin.String value="bbbAAA"
          ARG actual: CALL 'private final fun extesntionEmbeddedRefUpdate$atomicfu$NATIVE_PROPERTY_REF$Any (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>>, to: kotlin.String): kotlin.String declared in <root>.LoopTest' type=kotlin.String origin=null
            ARG <this>: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.test' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> origin=LAMBDA
              FUN ATOMICFU_GENERATED_FUNCTION name:<r$volatile-getter> visibility:local modality:FINAL returnType:kotlin.reflect.KMutableProperty0<kotlin.Any?> [inline]
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <r$volatile-getter> (): kotlin.reflect.KMutableProperty0<kotlin.Any?> declared in <root>.LoopTest.test'
                    PROPERTY_REFERENCE 'private final r$volatile: kotlin.Any? declared in <root>.LoopTest' field='FIELD ATOMICFU_GENERATED_FIELD name:r$volatile type:kotlin.Any? visibility:private declared in <root>.LoopTest' getter='private final fun <get-r$volatile> (): kotlin.Any? declared in <root>.LoopTest' setter='private final fun <set-r$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LoopTest' type=kotlin.reflect.KMutableProperty0<kotlin.Any?> origin=null
                      ARG 1: GET_VAR '<this>: <root>.LoopTest declared in <root>.LoopTest.test' type=<root>.LoopTest origin=IMPLICIT_ARGUMENT
            ARG to: CONST String type=kotlin.String value="bbb"
  FUN name:box visibility:public modality:FINAL returnType:kotlin.String
    BLOCK_BODY
      VAR name:testClass type:<root>.LoopTest [val]
        CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.LoopTest' type=<root>.LoopTest origin=null
      CALL 'public final fun test (): kotlin.Unit declared in <root>.LoopTest' type=kotlin.Unit origin=null
        ARG <this>: GET_VAR 'val testClass: <root>.LoopTest declared in <root>.box' type=<root>.LoopTest origin=null
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        CONST String type=kotlin.String value="OK"
