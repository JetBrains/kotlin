package test

public open class RawSuperTypeWithRecursiveBoundMultipleParameters {
    public constructor RawSuperTypeWithRecursiveBoundMultipleParameters()

    public open inner class Derived : test.RawSuperTypeWithRecursiveBoundMultipleParameters.Super<(raw) kotlin.Any!, (raw) test.RawSuperTypeWithRecursiveBoundMultipleParameters.Super<*, *>!> {
        public constructor Derived()
        public open override /*1*/ fun dummy(): kotlin.Unit
        public open fun foo(/*0*/ p0: kotlin.Any!, /*1*/ p1: kotlin.Any!): kotlin.Unit
        public open override /*1*/ fun foo(/*0*/ p0: kotlin.Any!, /*1*/ p1: test.RawSuperTypeWithRecursiveBoundMultipleParameters.Super<(raw) kotlin.Any!, (raw) test.RawSuperTypeWithRecursiveBoundMultipleParameters.Super<*, *>!>!): kotlin.Unit
    }

    public interface Super</*0*/ R : kotlin.Any!, /*1*/ T : test.RawSuperTypeWithRecursiveBoundMultipleParameters.Super<R!, T!>!> {
        public abstract fun dummy(): kotlin.Unit
        public abstract fun foo(/*0*/ p0: R!, /*1*/ p1: T!): kotlin.Unit
    }
}
