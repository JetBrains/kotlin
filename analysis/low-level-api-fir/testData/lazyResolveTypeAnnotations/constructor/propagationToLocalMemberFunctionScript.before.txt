@R|util/Anno|(str = <strcat>(String(bar ), R|util/prop|))  kotlin/collections/List<@R|util/Anno|(str = <strcat>(String(nested bar ), R|util/prop|))  kotlin/collections/Collection<@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int>>?
  context -> FirNamedFunctionSymbol <local>/doo
  anchor -> [FirNamedFunctionSymbol util/bar]

@R|util/Anno|(str = <strcat>(String(nested bar ), R|util/prop|))  kotlin/collections/Collection<@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int>
  context -> FirNamedFunctionSymbol <local>/doo
  anchor -> [FirNamedFunctionSymbol util/bar]

@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int
  context -> FirNamedFunctionSymbol <local>/doo
  anchor -> [FirNamedFunctionSymbol util/bar]

@R|util/Anno|(str = <strcat>(String(bar ), R|util/prop|))  kotlin/collections/List<@R|util/Anno|(str = <strcat>(String(nested bar ), R|util/prop|))  kotlin/collections/Collection<@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int>>?
  context -> FirNamedFunctionSymbol <local>/foo
  anchor -> [FirNamedFunctionSymbol util/bar]

@R|util/Anno|(str = <strcat>(String(nested bar ), R|util/prop|))  kotlin/collections/Collection<@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int>
  context -> FirNamedFunctionSymbol <local>/foo
  anchor -> [FirNamedFunctionSymbol util/bar]

@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int
  context -> FirNamedFunctionSymbol <local>/foo
  anchor -> [FirNamedFunctionSymbol util/bar]

@R|util/Anno|(str = <strcat>(String(bar ), R|util/prop|))  kotlin/collections/List<@R|util/Anno|(str = <strcat>(String(nested bar ), R|util/prop|))  kotlin/collections/Collection<@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int>>?
  context -> FirNamedFunctionSymbol <local>/baz
  anchor -> [FirNamedFunctionSymbol util/bar]

@R|util/Anno|(str = <strcat>(String(nested bar ), R|util/prop|))  kotlin/collections/Collection<@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int>
  context -> FirNamedFunctionSymbol <local>/baz
  anchor -> [FirNamedFunctionSymbol util/bar]

@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int
  context -> FirNamedFunctionSymbol <local>/baz
  anchor -> [FirNamedFunctionSymbol util/bar]

@R|util/Anno|(str = <strcat>(String(bar ), R|util/prop|))  kotlin/collections/List<@R|util/Anno|(str = <strcat>(String(nested bar ), R|util/prop|))  kotlin/collections/Collection<@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int>>?
  context -> FirNamedFunctionSymbol <local>/foo
  anchor -> [FirNamedFunctionSymbol <local>/bar]

@R|util/Anno|(str = <strcat>(String(nested bar ), R|util/prop|))  kotlin/collections/Collection<@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int>
  context -> FirNamedFunctionSymbol <local>/foo
  anchor -> [FirNamedFunctionSymbol <local>/bar]

@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int
  context -> FirNamedFunctionSymbol <local>/foo
  anchor -> [FirNamedFunctionSymbol <local>/bar]

@R|util/Anno|(str = <strcat>(String(bar ), R|util/prop|))  kotlin/collections/List<@R|util/Anno|(str = <strcat>(String(nested bar ), R|util/prop|))  kotlin/collections/Collection<@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int>>?
  context -> FirNamedFunctionSymbol <local>/bar
  anchor -> [FirNamedFunctionSymbol <local>/bar]

@R|util/Anno|(str = <strcat>(String(nested bar ), R|util/prop|))  kotlin/collections/Collection<@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int>
  context -> FirNamedFunctionSymbol <local>/bar
  anchor -> [FirNamedFunctionSymbol <local>/bar]

@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int
  context -> FirNamedFunctionSymbol <local>/bar
  anchor -> [FirNamedFunctionSymbol <local>/bar]

@R|util/Anno|(str = <strcat>(String(bar ), R|util/prop|))  kotlin/collections/List<@R|util/Anno|(str = <strcat>(String(nested bar ), R|util/prop|))  kotlin/collections/Collection<@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int>>?
  context -> FirNamedFunctionSymbol <local>/foo2
  anchor -> [FirNamedFunctionSymbol <local>/bar]

@R|util/Anno|(str = <strcat>(String(nested bar ), R|util/prop|))  kotlin/collections/Collection<@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int>
  context -> FirNamedFunctionSymbol <local>/foo2
  anchor -> [FirNamedFunctionSymbol <local>/bar]

@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int
  context -> FirNamedFunctionSymbol <local>/foo2
  anchor -> [FirNamedFunctionSymbol <local>/bar]

FILE: [ResolvedTo(IMPORTS)] propagationToLocalMemberFunctionScript.kts
    context(<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|)
    SCRIPT: [ResolvedTo(TYPES)] <script-propagationToLocalMemberFunctionScript.kts>
        [ResolvedTo(TYPES)] lval args: R|kotlin/Array<kotlin/String>|

        @R|kotlin/annotation/Target|[Types](Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.TYPE|) public final [ResolvedTo(STATUS)] annotation class Anno : R|kotlin/Annotation| {
            public [ResolvedTo(STATUS)] [ContainingClassKey=Anno] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=util/Anno.str] str: R|kotlin/String|): R|util/Anno| {
                LAZY_super<R|kotlin/Any|>
            }

            public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val str: R|kotlin/String| = R|<local>/str|
                public [ResolvedTo(STATUS)] [ContainingClassKey=Anno] get(): R|kotlin/String|

        }

        public final const [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] val prop: R|kotlin/String| = String(str)
            public [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] get(): R|kotlin/String|

        public final [ResolvedTo(ANNOTATION_ARGUMENTS)] fun bar(): R|@R|util/Anno|(str = <strcat>(String(bar ), R|util/prop|))  kotlin/collections/List<@R|util/Anno|(str = <strcat>(String(nested bar ), R|util/prop|))  kotlin/collections/Collection<@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int>>?| {
            ^bar Null(null)
        }

        public final [ResolvedTo(ANNOTATION_ARGUMENTS)] class A : R|kotlin/Any| {
            public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=A] constructor(): R|util/A| {
                super<R|kotlin/Any|>()
                local final [ResolvedTo(BODY_RESOLVE)] class OuterIntoLocal : R|kotlin/Any| {
                    public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=OuterIntoLocal] constructor(): R|<local>/OuterIntoLocal| {
                        super<R|kotlin/Any|>()
                    }

                    public final [ResolvedTo(BODY_RESOLVE)] fun doo(): R|@R|util/Anno|(str = <strcat>(String(bar ), R|util/prop|))  kotlin/collections/List<@R|util/Anno|(str = <strcat>(String(nested bar ), R|util/prop|))  kotlin/collections/Collection<@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int>>?| {
                        ^doo this@R|<local>/OuterIntoLocal|.R|<local>/foo|()
                    }

                    public final [ResolvedTo(BODY_RESOLVE)] fun foo(): R|@R|util/Anno|(str = <strcat>(String(bar ), R|util/prop|))  kotlin/collections/List<@R|util/Anno|(str = <strcat>(String(nested bar ), R|util/prop|))  kotlin/collections/Collection<@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int>>?| {
                        ^foo R|util/bar|()
                    }

                    public final [ResolvedTo(BODY_RESOLVE)] fun baz(): R|@R|util/Anno|(str = <strcat>(String(bar ), R|util/prop|))  kotlin/collections/List<@R|util/Anno|(str = <strcat>(String(nested bar ), R|util/prop|))  kotlin/collections/Collection<@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int>>?| {
                        ^baz this@R|<local>/OuterIntoLocal|.R|<local>/foo|()
                    }

                }

                local final [ResolvedTo(BODY_RESOLVE)] class LocalIntoLocal : R|kotlin/Any| {
                    public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=LocalIntoLocal] constructor(): R|<local>/LocalIntoLocal| {
                        super<R|kotlin/Any|>()
                    }

                    public final [ResolvedTo(BODY_RESOLVE)] fun foo(): R|@R|util/Anno|(str = <strcat>(String(bar ), R|util/prop|))  kotlin/collections/List<@R|util/Anno|(str = <strcat>(String(nested bar ), R|util/prop|))  kotlin/collections/Collection<@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int>>?| {
                        ^foo this@R|<local>/LocalIntoLocal|.R|<local>/bar|()
                    }

                    public final [ResolvedTo(BODY_RESOLVE)] fun bar(): R|@R|util/Anno|(str = <strcat>(String(bar ), R|util/prop|))  kotlin/collections/List<@R|util/Anno|(str = <strcat>(String(nested bar ), R|util/prop|))  kotlin/collections/Collection<@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int>>?| {
                        ^bar Null(null)
                    }

                    public final [ResolvedTo(BODY_RESOLVE)] fun foo2(): R|@R|util/Anno|(str = <strcat>(String(bar ), R|util/prop|))  kotlin/collections/List<@R|util/Anno|(str = <strcat>(String(nested bar ), R|util/prop|))  kotlin/collections/Collection<@R|util/Anno|(str = <strcat>(String(nested nested bar ), R|util/prop|))  kotlin/Int>>?| {
                        ^foo2 this@R|<local>/LocalIntoLocal|.R|<local>/bar|()
                    }

                }

            }

        }
