package

public fun foo(/*0*/ x: kotlin.Any?, /*1*/ a: kotlin.Int): kotlin.Int

public final data class A {
    public constructor A(/*0*/ f: kotlin.Int, /*1*/ s: kotlin.Int)
    public final val f: kotlin.Int
    public final val s: kotlin.Int
    public final operator /*synthesized*/ fun component1(): kotlin.Int
    public final operator /*synthesized*/ fun component2(): kotlin.Int
    public final /*synthesized*/ fun copy(/*0*/ f: kotlin.Int = ..., /*1*/ s: kotlin.Int = ...): A
    public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
}

public final class B {
    public constructor B(/*0*/ f: kotlin.Int, /*1*/ s: kotlin.Int)
    public final val f: kotlin.Int
    public final val s: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final data class C</*0*/ F, /*1*/ S> {
    public constructor C</*0*/ F, /*1*/ S>(/*0*/ f: F, /*1*/ s: S)
    public final val f: F
    public final val s: S
    public final operator /*synthesized*/ fun component1(): F
    public final operator /*synthesized*/ fun component2(): S
    public final /*synthesized*/ fun copy(/*0*/ f: F = ..., /*1*/ s: S = ...): C<F, S>
    public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
}

public final data class Pair</*0*/ F, /*1*/ S> {
    public constructor Pair</*0*/ F, /*1*/ S>(/*0*/ first: F, /*1*/ second: S)
    public final val first: F
    public final val second: S
    public final operator /*synthesized*/ fun component1(): F
    public final operator /*synthesized*/ fun component2(): S
    public final /*synthesized*/ fun copy(/*0*/ first: F = ..., /*1*/ second: S = ...): Pair<F, S>
    public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
}
