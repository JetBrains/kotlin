{
  "14": {
    "neg": {
      "1": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": " Both candidates are more applicable and few of them is non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.6.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "an overload ambiguity which must be reported if several candidates which are equally applicable for the call exests",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 2,
          "description": "call with explicit receiver: different built-in integer types and both of them are kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.3.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": " Both candidates are more applicable and few of them is non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.7.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": " Both candidates are more applicable and few of them are non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.4.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": " Both candidates are more applicable and few of them is non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.5.kt",
          "unexpectedBehaviour": true,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 6,
          "description": "an overload ambiguity which must be reported if several candidates which are equally applicable for the call exests",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        }
      ]
    }
  },
  "7": {
    "neg": {
      "3": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": " Both candidates are more applicable and few of them is non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.6.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 2,
          "description": "call with explicit receiver: different built-in integer types and both of them are kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.3.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": " Both candidates are more applicable and few of them is non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.7.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": " Both candidates are more applicable and few of them are non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.4.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": " Both candidates are more applicable and few of them is non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.5.kt",
          "unexpectedBehaviour": true,
          "linkType": "primary"
        }
      ],
      "2": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "Neither of the two candidates is more applicable than the other and both are non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-9/neg/2.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        }
      ],
      "1": [
        {
          "specVersion": "0.1-413",
          "casesNumber": 3,
          "description": "a callable reference is itself an argument to an overloaded function call",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/resolving-callable-references/bidirectional-resolution-for-callable-calls/p-3/neg/1.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "secondary"
        }
      ]
    },
    "pos": {
      "2": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 2,
          "description": "Neither of the two candidates is more applicable than the other and one is non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-9/pos/1.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        }
      ],
      "3": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "Both candidates are more applicable and few of them are non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/1.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "call with explicit receiver",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/4.5.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "Both candidates are more applicable and one of them is non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/1.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        }
      ],
      "1": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "If both X_k and Y_k are built-in integer types, a type constraint Widen(X_k) \u003c:Widen(Y_k) is built",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-3/pos/1.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 4,
          "description": "for every non-default argument of the call a type constraint is built unless both are built-in integer types (Companion property-like callable)",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-3/pos/1.4.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 3,
          "description": "for every non-default argument of the call a type constraint is built unless both are built-in integer types",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-3/pos/1.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-413",
          "casesNumber": 2,
          "description": "a callable reference is itself an argument to an overloaded function call",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/resolving-callable-references/bidirectional-resolution-for-callable-calls/p-3/pos/1.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "secondary"
        },
        {
          "specVersion": "0.1-413",
          "casesNumber": 4,
          "description": "a callable reference is itself an argument to an overloaded function call",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/resolving-callable-references/bidirectional-resolution-for-callable-calls/p-3/pos/1.3.kt",
          "unexpectedBehaviour": false,
          "linkType": "secondary"
        },
        {
          "specVersion": "0.1-413",
          "casesNumber": 4,
          "description": "a callable reference is itself an argument to an overloaded function call",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/resolving-callable-references/bidirectional-resolution-for-callable-calls/p-3/pos/1.4.kt",
          "unexpectedBehaviour": false,
          "linkType": "secondary"
        },
        {
          "specVersion": "0.1-413",
          "casesNumber": 6,
          "description": "a callable reference is itself an argument to an overloaded function call",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/resolving-callable-references/bidirectional-resolution-for-callable-calls/p-3/pos/1.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "secondary"
        }
      ]
    }
  },
  "11": {
    "neg": {
      "1": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": " Both candidates are more applicable and few of them is non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.6.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": " Both candidates are more applicable and few of them is non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.7.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": " Both candidates are more applicable and few of them are non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.4.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": " Both candidates are more applicable and few of them is non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.5.kt",
          "unexpectedBehaviour": true,
          "linkType": "primary"
        }
      ],
      "2": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": " Both candidates are more applicable and few of them is non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.6.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": " Both candidates are more applicable and few of them is non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.7.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": " Both candidates are more applicable and few of them are non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.4.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": " Both candidates are more applicable and few of them is non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.5.kt",
          "unexpectedBehaviour": true,
          "linkType": "primary"
        }
      ],
      "4": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": " Both candidates are more applicable and few of them is non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.6.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": " Both candidates are more applicable and few of them is non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.5.kt",
          "unexpectedBehaviour": true,
          "linkType": "primary"
        }
      ],
      "5": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": " Both candidates are more applicable and few of them is non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.6.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": " Both candidates are more applicable and few of them is non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-14/neg/1.7.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        }
      ]
    },
    "pos": {
      "1": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "Both candidates are more applicable and few of them are non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/1.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "Both candidates are more applicable and one of them is non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/1.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        }
      ],
      "4": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "call with explicit receiver",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/4.5.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "call with explicit receiver",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/4.5.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 4,
          "description": "call with explicit receiver: different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/4.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 4,
          "description": "call with explicit receiver: different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/4.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 3,
          "description": "call with implicit receiver (built-in integer types extesnsion): different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/4.4.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 3,
          "description": "call with implicit receiver (built-in integer types extesnsion): different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/4.4.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 4,
          "description": "call with implicit receiver: different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/4.3.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 4,
          "description": "call with implicit receiver: different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/4.3.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 3,
          "description": "call with explicit receiver (built-in integer types extesnsion): different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/4.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 3,
          "description": "call with explicit receiver (built-in integer types extesnsion): different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/4.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        }
      ],
      "5": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 2,
          "description": "The candidate having any variable-argument parameters is less specific",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/5.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 2,
          "description": "The candidate having any variable-argument parameters is less specific",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/5.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        }
      ]
    }
  },
  "12": {
    "pos": {
      "2": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 11,
          "description": "call with explicit receiver: different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "infix call: different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.5.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 3,
          "description": "call with implicit receiver (built-in integer types extesnsion): different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.4.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 2,
          "description": "different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.7.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 4,
          "description": "call with implicit receiver: different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.3.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 3,
          "description": "call with explicit receiver (built-in integer types extesnsion): different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "infix call (built-in integer types extesnsion): different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.6.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        }
      ]
    }
  },
  "3": {
    "pos": {
      "1": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 11,
          "description": "call with explicit receiver: different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "infix call: different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.5.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 3,
          "description": "call with implicit receiver (built-in integer types extesnsion): different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.4.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 2,
          "description": "different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.7.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 4,
          "description": "call with implicit receiver: different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.3.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 3,
          "description": "call with explicit receiver (built-in integer types extesnsion): different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "infix call (built-in integer types extesnsion): different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.6.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "call with explicit receiver",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/4.5.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 4,
          "description": "call with explicit receiver: different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/4.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 3,
          "description": "call with implicit receiver (built-in integer types extesnsion): different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/4.4.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 4,
          "description": "call with implicit receiver: different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/4.3.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 3,
          "description": "call with explicit receiver (built-in integer types extesnsion): different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/4.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "If both X_k and Y_k are built-in integer types, a type constraint Widen(X_k) \u003c:Widen(Y_k) is built",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-3/pos/1.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 4,
          "description": "prefer kotlin.Short to kotlin.Byte.",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-3/pos/1.3.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 4,
          "description": "for every non-default argument of the call a type constraint is built unless both are built-in integer types (Companion property-like callable)",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-3/pos/1.4.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 3,
          "description": "for every non-default argument of the call a type constraint is built unless both are built-in integer types",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-3/pos/1.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-448",
          "casesNumber": 1,
          "description": "plusAssign as inline function",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/building-the-overload-candidate-set-ocs/operator-call/p-1/pos/2.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-413",
          "casesNumber": 2,
          "description": "a callable reference is itself an argument to an overloaded function call",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/resolving-callable-references/bidirectional-resolution-for-callable-calls/p-3/pos/1.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "secondary"
        },
        {
          "specVersion": "0.1-413",
          "casesNumber": 4,
          "description": "a callable reference is itself an argument to an overloaded function call",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/resolving-callable-references/bidirectional-resolution-for-callable-calls/p-3/pos/1.3.kt",
          "unexpectedBehaviour": false,
          "linkType": "secondary"
        },
        {
          "specVersion": "0.1-413",
          "casesNumber": 4,
          "description": "a callable reference is itself an argument to an overloaded function call",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/resolving-callable-references/bidirectional-resolution-for-callable-calls/p-3/pos/1.4.kt",
          "unexpectedBehaviour": false,
          "linkType": "secondary"
        },
        {
          "specVersion": "0.1-413",
          "casesNumber": 6,
          "description": "a callable reference is itself an argument to an overloaded function call",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/resolving-callable-references/bidirectional-resolution-for-callable-calls/p-3/pos/1.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "secondary"
        }
      ],
      "3": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 11,
          "description": "call with explicit receiver: different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "infix call: different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.5.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 3,
          "description": "call with implicit receiver (built-in integer types extesnsion): different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.4.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 2,
          "description": "different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.7.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 4,
          "description": "call with implicit receiver: different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.3.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 3,
          "description": "call with explicit receiver (built-in integer types extesnsion): different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "infix call (built-in integer types extesnsion): different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.6.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "call with explicit receiver",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/4.5.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 4,
          "description": "call with explicit receiver: different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/4.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 2,
          "description": "The candidate having any variable-argument parameters is less specific",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/5.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 3,
          "description": "call with implicit receiver (built-in integer types extesnsion): different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/4.4.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 4,
          "description": "call with implicit receiver: different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/4.3.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 3,
          "description": "call with explicit receiver (built-in integer types extesnsion): different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-11/pos/4.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        }
      ],
      "4": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "If both X_k and Y_k are built-in integer types, a type constraint Widen(X_k) \u003c:Widen(Y_k) is built",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-3/pos/1.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 4,
          "description": "for every non-default argument of the call a type constraint is built unless both are built-in integer types (Companion property-like callable)",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-3/pos/1.4.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 3,
          "description": "for every non-default argument of the call a type constraint is built unless both are built-in integer types",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-3/pos/1.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-413",
          "casesNumber": 2,
          "description": "a callable reference is itself an argument to an overloaded function call",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/resolving-callable-references/bidirectional-resolution-for-callable-calls/p-3/pos/1.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "secondary"
        },
        {
          "specVersion": "0.1-413",
          "casesNumber": 4,
          "description": "a callable reference is itself an argument to an overloaded function call",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/resolving-callable-references/bidirectional-resolution-for-callable-calls/p-3/pos/1.3.kt",
          "unexpectedBehaviour": false,
          "linkType": "secondary"
        },
        {
          "specVersion": "0.1-413",
          "casesNumber": 4,
          "description": "a callable reference is itself an argument to an overloaded function call",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/resolving-callable-references/bidirectional-resolution-for-callable-calls/p-3/pos/1.4.kt",
          "unexpectedBehaviour": false,
          "linkType": "secondary"
        },
        {
          "specVersion": "0.1-413",
          "casesNumber": 6,
          "description": "a callable reference is itself an argument to an overloaded function call",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/resolving-callable-references/bidirectional-resolution-for-callable-calls/p-3/pos/1.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "secondary"
        }
      ]
    },
    "neg": {
      "1": [
        {
          "specVersion": "0.1-448",
          "casesNumber": 2,
          "description": "call with lambda as argument",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/building-the-overload-candidate-set-ocs/operator-call/p-1/neg/2.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-448",
          "casesNumber": 1,
          "description": "inline plusAssign functions",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/building-the-overload-candidate-set-ocs/operator-call/p-1/neg/2.5.kt",
          "unexpectedBehaviour": true,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-448",
          "casesNumber": 2,
          "description": "without inline plusAssign functions",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/building-the-overload-candidate-set-ocs/operator-call/p-1/neg/2.4.kt",
          "unexpectedBehaviour": true,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-448",
          "casesNumber": 1,
          "description": "without inline plusAssign functions",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/building-the-overload-candidate-set-ocs/operator-call/p-1/neg/2.9.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-448",
          "casesNumber": 1,
          "description": "without inline plusAssign functions",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/building-the-overload-candidate-set-ocs/operator-call/p-1/neg/2.8.kt",
          "unexpectedBehaviour": true,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-448",
          "casesNumber": 1,
          "description": "without inline plusAssign functions",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/building-the-overload-candidate-set-ocs/operator-call/p-1/neg/2.7.kt",
          "unexpectedBehaviour": true,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-448",
          "casesNumber": 1,
          "description": "plusAssign as inline function",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/building-the-overload-candidate-set-ocs/operator-call/p-1/neg/2.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-448",
          "casesNumber": 1,
          "description": "without inline plusAssign functions",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/building-the-overload-candidate-set-ocs/operator-call/p-1/neg/2.6.kt",
          "unexpectedBehaviour": true,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-413",
          "casesNumber": 3,
          "description": "a callable reference is itself an argument to an overloaded function call",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/resolving-callable-references/bidirectional-resolution-for-callable-calls/p-3/neg/1.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "secondary"
        }
      ],
      "4": [
        {
          "specVersion": "0.1-413",
          "casesNumber": 3,
          "description": "a callable reference is itself an argument to an overloaded function call",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/resolving-callable-references/bidirectional-resolution-for-callable-calls/p-3/neg/1.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "secondary"
        }
      ]
    }
  },
  "17": {
    "pos": {
      "1": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 2,
          "description": "different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.7.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 4,
          "description": "for every non-default argument of the call a type constraint is built unless both are built-in integer types (Companion property-like callable)",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-3/pos/1.4.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        }
      ],
      "3": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 2,
          "description": "different built-in integer types and one of them is kotlin.Int",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-12/pos/2.7.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 4,
          "description": "for every non-default argument of the call a type constraint is built unless both are built-in integer types (Companion property-like callable)",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-3/pos/1.4.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        }
      ]
    },
    "neg": {
      "2": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 3,
          "description": "If several properties are equally applicable, this is an overload ambiguity as usual",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-17/neg/2.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 3,
          "description": "If several properties are equally applicable, this is an overload ambiguity as usual (both are parametrized)",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-17/neg/2.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        }
      ]
    }
  },
  "9": {
    "neg": {
      "2": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "Neither of the two candidates is more applicable than the other and both are non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-9/neg/2.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-464",
          "casesNumber": 1,
          "description": "receiver of intersection type ambuguity",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-9/neg/2.3.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        },
        {
          "specVersion": "0.1-448",
          "casesNumber": 2,
          "description": "explicit receiver ambuguity",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-9/neg/2.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        }
      ]
    },
    "pos": {
      "1": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 2,
          "description": "Neither of the two candidates is more applicable than the other and one is non-parameterized",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-9/pos/1.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "main"
        }
      ]
    }
  },
  "8": {
    "pos": {
      "1": [
        {
          "specVersion": "0.1-387",
          "casesNumber": 1,
          "description": "If both X_k and Y_k are built-in integer types, a type constraint Widen(X_k) \u003c:Widen(Y_k) is built",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-3/pos/1.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 4,
          "description": "for every non-default argument of the call a type constraint is built unless both are built-in integer types (Companion property-like callable)",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-3/pos/1.4.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-387",
          "casesNumber": 3,
          "description": "for every non-default argument of the call a type constraint is built unless both are built-in integer types",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/choosing-the-most-specific-candidate-from-the-overload-candidate-set/algorithm-of-msc-selection/p-3/pos/1.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "primary"
        },
        {
          "specVersion": "0.1-413",
          "casesNumber": 2,
          "description": "a callable reference is itself an argument to an overloaded function call",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/resolving-callable-references/bidirectional-resolution-for-callable-calls/p-3/pos/1.2.kt",
          "unexpectedBehaviour": false,
          "linkType": "secondary"
        },
        {
          "specVersion": "0.1-413",
          "casesNumber": 4,
          "description": "a callable reference is itself an argument to an overloaded function call",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/resolving-callable-references/bidirectional-resolution-for-callable-calls/p-3/pos/1.3.kt",
          "unexpectedBehaviour": false,
          "linkType": "secondary"
        },
        {
          "specVersion": "0.1-413",
          "casesNumber": 4,
          "description": "a callable reference is itself an argument to an overloaded function call",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/resolving-callable-references/bidirectional-resolution-for-callable-calls/p-3/pos/1.4.kt",
          "unexpectedBehaviour": false,
          "linkType": "secondary"
        },
        {
          "specVersion": "0.1-413",
          "casesNumber": 6,
          "description": "a callable reference is itself an argument to an overloaded function call",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/resolving-callable-references/bidirectional-resolution-for-callable-calls/p-3/pos/1.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "secondary"
        }
      ]
    },
    "neg": {
      "1": [
        {
          "specVersion": "0.1-413",
          "casesNumber": 3,
          "description": "a callable reference is itself an argument to an overloaded function call",
          "path": "compiler/tests-spec/testData/diagnostics/linked/overload-resolution/resolving-callable-references/bidirectional-resolution-for-callable-calls/p-3/neg/1.1.kt",
          "unexpectedBehaviour": false,
          "linkType": "secondary"
        }
      ]
    }
  }
}