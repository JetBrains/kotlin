package

context(C) public fun f2(/*0*/ g: context(C) (Param) -> kotlin.Unit): kotlin.Unit
context(C) public fun f4(/*0*/ g: context(C) () -> kotlin.Unit): kotlin.Unit
public fun test(): kotlin.Unit
context(C) public fun R.f1(/*0*/ g: context(C) R.(Param) -> kotlin.Unit): kotlin.Unit
context(C) public fun R.f3(/*0*/ g: context(C) R.() -> kotlin.Unit): kotlin.Unit

public final class C {
    public constructor C()
    public final val c: kotlin.Int = 42
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class Param {
    public constructor Param()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class R {
    public constructor R()
    public final val r: kotlin.Int = 42
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
