@kotlin.Metadata
public final class C {
    // source: 'constructor.kt'
    private final field a: int
    private final @org.jetbrains.annotations.NotNull field b1: java.lang.String
    private final @org.jetbrains.annotations.NotNull field b: java.lang.String
    private final field c: float
    public method <init>(): void
    public synthetic deprecated @kotlin.Deprecated(message="This method is kept for binary compatibility purposes, please use the main overload. This overload corresponds to the initial version.", level=HIDDEN) method <init>(p0: int): void
    public method <init>(p0: int, @kotlin.IntroducedAt(version="1") @org.jetbrains.annotations.NotNull p1: java.lang.String, @kotlin.IntroducedAt(version="1") @org.jetbrains.annotations.NotNull p2: java.lang.String, @kotlin.IntroducedAt(version="2") p3: float): void
    public synthetic deprecated @kotlin.Deprecated(message="This method is kept for binary compatibility purposes, please use the main overload. This overload corresponds to version 1.", level=HIDDEN) method <init>(p0: int, @kotlin.IntroducedAt(version="1") p1: java.lang.String, @kotlin.IntroducedAt(version="1") p2: java.lang.String): void
    public synthetic deprecated method <init>(p0: int, p1: int, p2: kotlin.jvm.internal.DefaultConstructorMarker): void
    public synthetic method <init>(p0: int, p1: java.lang.String, p2: java.lang.String, p3: float, p4: int, p5: kotlin.jvm.internal.DefaultConstructorMarker): void
    public synthetic deprecated method <init>(p0: int, p1: java.lang.String, p2: java.lang.String, p3: int, p4: kotlin.jvm.internal.DefaultConstructorMarker): void
    public final method component1(): int
    public final @org.jetbrains.annotations.NotNull method component2(): java.lang.String
    private final method component3(): java.lang.String
    public final method component4(): float
    public synthetic deprecated static method copy$default(p0: C, p1: int, p2: int, p3: java.lang.Object): C
    public synthetic static method copy$default(p0: C, p1: int, p2: java.lang.String, p3: java.lang.String, p4: float, p5: int, p6: java.lang.Object): C
    public synthetic deprecated static method copy$default(p0: C, p1: int, p2: java.lang.String, p3: java.lang.String, p4: int, p5: java.lang.Object): C
    public synthetic deprecated final @kotlin.Deprecated(message="This method is kept for binary compatibility purposes, please use the main overload. This overload corresponds to the initial version.", level=HIDDEN) method copy(p0: int): C
    public final @org.jetbrains.annotations.NotNull method copy(p0: int, @kotlin.IntroducedAt(version="1") @org.jetbrains.annotations.NotNull p1: java.lang.String, @kotlin.IntroducedAt(version="1") @org.jetbrains.annotations.NotNull p2: java.lang.String, @kotlin.IntroducedAt(version="2") p3: float): C
    public synthetic deprecated final @kotlin.Deprecated(message="This method is kept for binary compatibility purposes, please use the main overload. This overload corresponds to version 1.", level=HIDDEN) method copy(p0: int, @kotlin.IntroducedAt(version="1") p1: java.lang.String, @kotlin.IntroducedAt(version="1") p2: java.lang.String): C
    public method equals(@org.jetbrains.annotations.Nullable p0: java.lang.Object): boolean
    public final method getA(): int
    public final @org.jetbrains.annotations.NotNull method getB(): java.lang.String
    public final method getC(): float
    public method hashCode(): int
    public @org.jetbrains.annotations.NotNull method toString(): java.lang.String
}

@kotlin.Metadata
public final class ConstructorKt {
    // source: 'constructor.kt'
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
    public final static @org.jetbrains.annotations.NotNull method test1(): java.lang.String
    public final static @org.jetbrains.annotations.NotNull method test2(): java.lang.String
}

@kotlin.Metadata
public final class D {
    // source: 'constructor.kt'
    private final @org.jetbrains.annotations.NotNull field a1: java.lang.String
    private final field a: int
    private final @org.jetbrains.annotations.NotNull field b: java.lang.String
    private final field c: float
    public method <init>(): void
    public synthetic deprecated @kotlin.Deprecated(message="This method is kept for binary compatibility purposes, please use the main overload. This overload corresponds to the initial version.", level=HIDDEN) method <init>(p0: int): void
    public synthetic deprecated @kotlin.Deprecated(message="This method is kept for binary compatibility purposes, please use the main overload. This overload corresponds to version 1.", level=HIDDEN) method <init>(p0: int, @kotlin.IntroducedAt(version="1") p1: java.lang.String, @kotlin.IntroducedAt(version="1") p2: float): void
    public method <init>(p0: int, @kotlin.IntroducedAt(version="2") @org.jetbrains.annotations.NotNull p1: java.lang.String, @kotlin.IntroducedAt(version="1") @org.jetbrains.annotations.NotNull p2: java.lang.String, @kotlin.IntroducedAt(version="1") p3: float): void
    public synthetic deprecated method <init>(p0: int, p1: int, p2: kotlin.jvm.internal.DefaultConstructorMarker): void
    public synthetic deprecated method <init>(p0: int, p1: java.lang.String, p2: float, p3: int, p4: kotlin.jvm.internal.DefaultConstructorMarker): void
    public synthetic method <init>(p0: int, p1: java.lang.String, p2: java.lang.String, p3: float, p4: int, p5: kotlin.jvm.internal.DefaultConstructorMarker): void
    public final method component1(): int
    public final @org.jetbrains.annotations.NotNull method component2(): java.lang.String
    private final method component3(): java.lang.String
    public final method component4(): float
    public synthetic deprecated static method copy$default(p0: D, p1: int, p2: int, p3: java.lang.Object): D
    public synthetic deprecated static method copy$default(p0: D, p1: int, p2: java.lang.String, p3: float, p4: int, p5: java.lang.Object): D
    public synthetic static method copy$default(p0: D, p1: int, p2: java.lang.String, p3: java.lang.String, p4: float, p5: int, p6: java.lang.Object): D
    public synthetic deprecated final @kotlin.Deprecated(message="This method is kept for binary compatibility purposes, please use the main overload. This overload corresponds to the initial version.", level=HIDDEN) method copy(p0: int): D
    public synthetic deprecated final @kotlin.Deprecated(message="This method is kept for binary compatibility purposes, please use the main overload. This overload corresponds to version 1.", level=HIDDEN) method copy(p0: int, @kotlin.IntroducedAt(version="1") p1: java.lang.String, @kotlin.IntroducedAt(version="1") p2: float): D
    public final @org.jetbrains.annotations.NotNull method copy(p0: int, @kotlin.IntroducedAt(version="2") @org.jetbrains.annotations.NotNull p1: java.lang.String, @kotlin.IntroducedAt(version="1") @org.jetbrains.annotations.NotNull p2: java.lang.String, @kotlin.IntroducedAt(version="1") p3: float): D
    public method equals(@org.jetbrains.annotations.Nullable p0: java.lang.Object): boolean
    public final method getA(): int
    public final @org.jetbrains.annotations.NotNull method getA1(): java.lang.String
    public final method getC(): float
    public method hashCode(): int
    public @org.jetbrains.annotations.NotNull method toString(): java.lang.String
}
