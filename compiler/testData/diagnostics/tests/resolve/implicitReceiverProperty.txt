package

package a {

    public final class A {
        public constructor A(/*0*/ b: kotlin.String)
        public final val b: kotlin.String
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public final fun mtd(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

        public companion object Companion {
            private constructor Companion()
            public final val c: kotlin.String = ""
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }
    }
}

package test {
    public val x1: kotlin.Int
    public val x3: kotlin.Int
    public fun a.A.extFun1(): kotlin.Int
    public fun </*0*/ T, /*1*/ R> T.with(/*0*/ f: T.() -> R): R
}
