package

internal fun foo(/*0*/ ann: A): kotlin.Unit
internal fun A.bar(): kotlin.Unit

public final class A : kotlin.Annotation {
    public constructor A(/*0*/ value: kotlin.String, /*1*/ arg: kotlin.Int)
    public final val arg: kotlin.Int
    public final val value: kotlin.String
    public abstract fun arg(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    public abstract fun value(): kotlin.String
}

A(arg = IntegerValueType(1), value = "a") internal final class MyClass {
    public constructor MyClass()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
