// CHECK:
//   Mangled name: A
//   Public signature: /A|null[0]
abstract class A : Java1 {
  // CHECK:
  //   Mangled name: A#<init>(){}
  //   Public signature: /A.<init>|-5645683436151566731[0]
  //   Public signature debug description: <init>(){}
  constructor() /* primary */

  // CHECK JVM_IR:
  //   Mangled name: A#add(kotlin.String{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /A.add|1013043421416614297[0]
  //   Public signature debug description: add(kotlin.String{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun add(p0: @EnhancedNullability String): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#addAll(kotlin.collections.Collection<out|kotlin.String{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /A.addAll|3883602098922245867[0]
  //   Public signature debug description: addAll(kotlin.collections.Collection<out|kotlin.String{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun addAll(p0: @EnhancedNullability Collection<out @EnhancedNullability String>): Boolean

  // CHECK:
  //   Mangled name: A#clear(){}
  //   Public signature: /A.clear|-6446868449915108923[0]
  //   Public signature debug description: clear(){}
  /* fake */ override fun clear(): Unit

  // CHECK JVM_IR:
  //   Mangled name: A#clone(){}kotlin.Any{EnhancedNullability}
  //   Public signature: /A.clone|178802004086941196[0]
  //   Public signature debug description: clone(){}kotlin.Any{EnhancedNullability}
  /* fake */ override fun clone(): @EnhancedNullability Any

  // CHECK JVM_IR:
  //   Mangled name: A#contains(kotlin.String{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /A.contains|-1288346193708144028[0]
  //   Public signature debug description: contains(kotlin.String{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override operator fun contains(p0: @EnhancedNullability String): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#containsAll(kotlin.collections.Collection<kotlin.String{EnhancedNullability}>){}kotlin.Boolean
  //   Public signature: /A.containsAll|3856626117350599597[0]
  //   Public signature debug description: containsAll(kotlin.collections.Collection<kotlin.String{EnhancedNullability}>){}kotlin.Boolean
  /* fake */ override fun containsAll(p0: Collection<@EnhancedNullability String>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#equals(kotlin.Any?{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /A.equals|4126616015386471185[0]
  //   Public signature debug description: equals(kotlin.Any?{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override operator fun equals(p0: @EnhancedNullability Any?): Boolean

  // CHECK:
  //   Mangled name: A#forEach(java.util.function.Consumer<in|kotlin.String?>?){}
  //   Public signature: /A.forEach|-5141242812493329438[0]
  //   Public signature debug description: forEach(java.util.function.Consumer<in|kotlin.String?>?){}
  /* fake */ override fun forEach(p0: Consumer<in String?>?): Unit

  // CHECK JVM_IR:
  //   Mangled name: A#hashCode(){}kotlin.Int
  //   Public signature: /A.hashCode|-8048879360829830756[0]
  //   Public signature debug description: hashCode(){}kotlin.Int
  /* fake */ override fun hashCode(): Int

  // CHECK JVM_IR:
  //   Mangled name: A#isEmpty(){}kotlin.Boolean
  //   Public signature: /A.isEmpty|-626562167393617703[0]
  //   Public signature debug description: isEmpty(){}kotlin.Boolean
  /* fake */ override fun isEmpty(): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#iterator(){}kotlin.collections.MutableIterator<kotlin.String{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /A.iterator|1587384006376391028[0]
  //   Public signature debug description: iterator(){}kotlin.collections.MutableIterator<kotlin.String{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override operator fun iterator(): @EnhancedNullability MutableIterator<@EnhancedNullability String>

  // CHECK JVM_IR:
  //   Mangled name: A#parallelStream(){}java.util.stream.Stream<kotlin.String?{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /A.parallelStream|3092772522219636263[0]
  //   Public signature debug description: parallelStream(){}java.util.stream.Stream<kotlin.String?{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override fun parallelStream(): @EnhancedNullability Stream<@EnhancedNullability String?>

  // CHECK JVM_IR:
  //   Mangled name: A#remove(kotlin.String{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /A.remove|2256698784022402098[0]
  //   Public signature debug description: remove(kotlin.String{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun remove(p0: @EnhancedNullability String): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#removeAll(kotlin.collections.Collection<kotlin.String{EnhancedNullability}>){}kotlin.Boolean
  //   Public signature: /A.removeAll|239019554007958597[0]
  //   Public signature debug description: removeAll(kotlin.collections.Collection<kotlin.String{EnhancedNullability}>){}kotlin.Boolean
  /* fake */ override fun removeAll(p0: Collection<@EnhancedNullability String>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#removeIf(java.util.function.Predicate<in|kotlin.String?{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /A.removeIf|8976873494666040524[0]
  //   Public signature debug description: removeIf(java.util.function.Predicate<in|kotlin.String?{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun removeIf(p0: @EnhancedNullability Predicate<in @EnhancedNullability String?>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#retainAll(kotlin.collections.Collection<kotlin.String{EnhancedNullability}>){}kotlin.Boolean
  //   Public signature: /A.retainAll|8583629559312465774[0]
  //   Public signature debug description: retainAll(kotlin.collections.Collection<kotlin.String{EnhancedNullability}>){}kotlin.Boolean
  /* fake */ override fun retainAll(p0: Collection<@EnhancedNullability String>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#spliterator(){}java.util.Spliterator<kotlin.String?>{EnhancedNullability}
  //   Public signature: /A.spliterator|568936852624165869[0]
  //   Public signature debug description: spliterator(){}java.util.Spliterator<kotlin.String?>{EnhancedNullability}
  /* fake */ override fun spliterator(): @EnhancedNullability Spliterator<String?>

  // CHECK JVM_IR:
  //   Mangled name: A#stream(){}java.util.stream.Stream<kotlin.String?{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /A.stream|6909137692784416467[0]
  //   Public signature debug description: stream(){}java.util.stream.Stream<kotlin.String?{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override fun stream(): @EnhancedNullability Stream<@EnhancedNullability String?>

  // CHECK JVM_IR:
  //   Mangled name: A#toArray(){}kotlin.Array<out|kotlin.Any?>?
  //   Public signature: /A.toArray|-8468800257910341540[0]
  //   Public signature debug description: toArray(){}kotlin.Array<out|kotlin.Any?>?
  /* fake */ override fun toArray(): Array<out Any?>?

  // CHECK JVM_IR:
  //   Mangled name: A#toArray(kotlin.Array<out|0:0?>?){0ยง<kotlin.Any?>}kotlin.Array<out|0:0?>?
  //   Public signature: /A.toArray|-7248906015406159030[0]
  //   Public signature debug description: toArray(kotlin.Array<out|0:0?>?){0ยง<kotlin.Any?>}kotlin.Array<out|0:0?>?
  /* fake */ override fun <T : Any?> toArray(p0: Array<out T?>?): Array<out T?>?

  // CHECK JVM_IR:
  //   Mangled name: A#toString(){}kotlin.String{EnhancedNullability}
  //   Public signature: /A.toString|7581629773206850948[0]
  //   Public signature debug description: toString(){}kotlin.String{EnhancedNullability}
  /* fake */ override fun toString(): @EnhancedNullability String

  // CHECK:
  //   Mangled name: A{}size
  //   Public signature: /A.size|-6253659984320132064[0]
  //   Public signature debug description: {}size
  /* fake */ override val size: Int
    // CHECK JVM_IR:
    //   Mangled name: A#<get-size>(){}kotlin.Int
    //   Public signature: /A.size.<get-size>|-3941649985161900780[0]
    //   Public signature debug description: <get-size>(){}kotlin.Int
    /* fake */ override get(): Int

}

// CHECK:
//   Mangled name: B
//   Public signature: /B|null[0]
class B : Java1 {
  // CHECK:
  //   Mangled name: B#<init>(){}
  //   Public signature: /B.<init>|-5645683436151566731[0]
  //   Public signature debug description: <init>(){}
  constructor() /* primary */

  // CHECK JVM_IR:
  //   Mangled name: B#addAll(kotlin.collections.Collection<out|kotlin.String{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /B.addAll|3883602098922245867[0]
  //   Public signature debug description: addAll(kotlin.collections.Collection<out|kotlin.String{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun addAll(p0: @EnhancedNullability Collection<out @EnhancedNullability String>): Boolean

  // CHECK:
  //   Mangled name: B#clear(){}
  //   Public signature: /B.clear|-6446868449915108923[0]
  //   Public signature debug description: clear(){}
  /* fake */ override fun clear(): Unit

  // CHECK JVM_IR:
  //   Mangled name: B#clone(){}kotlin.Any{EnhancedNullability}
  //   Public signature: /B.clone|178802004086941196[0]
  //   Public signature debug description: clone(){}kotlin.Any{EnhancedNullability}
  /* fake */ override fun clone(): @EnhancedNullability Any

  // CHECK JVM_IR:
  //   Mangled name: B#contains(kotlin.String{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /B.contains|-1288346193708144028[0]
  //   Public signature debug description: contains(kotlin.String{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override operator fun contains(p0: @EnhancedNullability String): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#containsAll(kotlin.collections.Collection<kotlin.String{EnhancedNullability}>){}kotlin.Boolean
  //   Public signature: /B.containsAll|3856626117350599597[0]
  //   Public signature debug description: containsAll(kotlin.collections.Collection<kotlin.String{EnhancedNullability}>){}kotlin.Boolean
  /* fake */ override fun containsAll(p0: Collection<@EnhancedNullability String>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#equals(kotlin.Any?{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /B.equals|4126616015386471185[0]
  //   Public signature debug description: equals(kotlin.Any?{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override operator fun equals(p0: @EnhancedNullability Any?): Boolean

  // CHECK:
  //   Mangled name: B#forEach(java.util.function.Consumer<in|kotlin.String?>?){}
  //   Public signature: /B.forEach|-5141242812493329438[0]
  //   Public signature debug description: forEach(java.util.function.Consumer<in|kotlin.String?>?){}
  /* fake */ override fun forEach(p0: Consumer<in String?>?): Unit

  // CHECK JVM_IR:
  //   Mangled name: B#hashCode(){}kotlin.Int
  //   Public signature: /B.hashCode|-8048879360829830756[0]
  //   Public signature debug description: hashCode(){}kotlin.Int
  /* fake */ override fun hashCode(): Int

  // CHECK JVM_IR:
  //   Mangled name: B#isEmpty(){}kotlin.Boolean
  //   Public signature: /B.isEmpty|-626562167393617703[0]
  //   Public signature debug description: isEmpty(){}kotlin.Boolean
  /* fake */ override fun isEmpty(): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#iterator(){}kotlin.collections.MutableIterator<kotlin.String{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /B.iterator|1587384006376391028[0]
  //   Public signature debug description: iterator(){}kotlin.collections.MutableIterator<kotlin.String{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override operator fun iterator(): @EnhancedNullability MutableIterator<@EnhancedNullability String>

  // CHECK JVM_IR:
  //   Mangled name: B#parallelStream(){}java.util.stream.Stream<kotlin.String?{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /B.parallelStream|3092772522219636263[0]
  //   Public signature debug description: parallelStream(){}java.util.stream.Stream<kotlin.String?{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override fun parallelStream(): @EnhancedNullability Stream<@EnhancedNullability String?>

  // CHECK JVM_IR:
  //   Mangled name: B#remove(kotlin.String{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /B.remove|2256698784022402098[0]
  //   Public signature debug description: remove(kotlin.String{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun remove(p0: @EnhancedNullability String): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#removeAll(kotlin.collections.Collection<kotlin.String{EnhancedNullability}>){}kotlin.Boolean
  //   Public signature: /B.removeAll|239019554007958597[0]
  //   Public signature debug description: removeAll(kotlin.collections.Collection<kotlin.String{EnhancedNullability}>){}kotlin.Boolean
  /* fake */ override fun removeAll(p0: Collection<@EnhancedNullability String>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#removeIf(java.util.function.Predicate<in|kotlin.String?{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /B.removeIf|8976873494666040524[0]
  //   Public signature debug description: removeIf(java.util.function.Predicate<in|kotlin.String?{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun removeIf(p0: @EnhancedNullability Predicate<in @EnhancedNullability String?>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#retainAll(kotlin.collections.Collection<kotlin.String{EnhancedNullability}>){}kotlin.Boolean
  //   Public signature: /B.retainAll|8583629559312465774[0]
  //   Public signature debug description: retainAll(kotlin.collections.Collection<kotlin.String{EnhancedNullability}>){}kotlin.Boolean
  /* fake */ override fun retainAll(p0: Collection<@EnhancedNullability String>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#spliterator(){}java.util.Spliterator<kotlin.String?>{EnhancedNullability}
  //   Public signature: /B.spliterator|568936852624165869[0]
  //   Public signature debug description: spliterator(){}java.util.Spliterator<kotlin.String?>{EnhancedNullability}
  /* fake */ override fun spliterator(): @EnhancedNullability Spliterator<String?>

  // CHECK JVM_IR:
  //   Mangled name: B#stream(){}java.util.stream.Stream<kotlin.String?{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /B.stream|6909137692784416467[0]
  //   Public signature debug description: stream(){}java.util.stream.Stream<kotlin.String?{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override fun stream(): @EnhancedNullability Stream<@EnhancedNullability String?>

  // CHECK JVM_IR:
  //   Mangled name: B#toArray(){}kotlin.Array<out|kotlin.Any?>?
  //   Public signature: /B.toArray|-8468800257910341540[0]
  //   Public signature debug description: toArray(){}kotlin.Array<out|kotlin.Any?>?
  /* fake */ override fun toArray(): Array<out Any?>?

  // CHECK JVM_IR:
  //   Mangled name: B#toArray(kotlin.Array<out|0:0?>?){0ยง<kotlin.Any?>}kotlin.Array<out|0:0?>?
  //   Public signature: /B.toArray|-7248906015406159030[0]
  //   Public signature debug description: toArray(kotlin.Array<out|0:0?>?){0ยง<kotlin.Any?>}kotlin.Array<out|0:0?>?
  /* fake */ override fun <T : Any?> toArray(p0: Array<out T?>?): Array<out T?>?

  // CHECK JVM_IR:
  //   Mangled name: B#toString(){}kotlin.String{EnhancedNullability}
  //   Public signature: /B.toString|7581629773206850948[0]
  //   Public signature debug description: toString(){}kotlin.String{EnhancedNullability}
  /* fake */ override fun toString(): @EnhancedNullability String

  // CHECK JVM_IR:
  //   Mangled name: B#add(kotlin.String){}kotlin.Boolean
  //   Public signature: /B.add|-966782944774311941[0]
  //   Public signature debug description: add(kotlin.String){}kotlin.Boolean
  override fun add(element: String): Boolean

  // CHECK:
  //   Mangled name: B{}size
  //   Public signature: /B.size|-6253659984320132064[0]
  //   Public signature debug description: {}size
  override val size: Int
    // CHECK JVM_IR:
    //   Mangled name: B#<get-size>(){}kotlin.Int
    //   Public signature: /B.size.<get-size>|-3941649985161900780[0]
    //   Public signature debug description: <get-size>(){}kotlin.Int
    override get(): Int

}

// CHECK:
//   Mangled name: KotlinClass
//   Public signature: /KotlinClass|null[0]
open class KotlinClass : HashSet<String> {
  // CHECK:
  //   Mangled name: KotlinClass#<init>(){}
  //   Public signature: /KotlinClass.<init>|-5645683436151566731[0]
  //   Public signature debug description: <init>(){}
  constructor() /* primary */

  // CHECK JVM_IR:
  //   Mangled name: KotlinClass#add(kotlin.String{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /KotlinClass.add|1013043421416614297[0]
  //   Public signature debug description: add(kotlin.String{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun add(p0: @EnhancedNullability String): Boolean

  // CHECK JVM_IR:
  //   Mangled name: KotlinClass#addAll(kotlin.collections.Collection<out|kotlin.String{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /KotlinClass.addAll|3883602098922245867[0]
  //   Public signature debug description: addAll(kotlin.collections.Collection<out|kotlin.String{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun addAll(p0: @EnhancedNullability Collection<out @EnhancedNullability String>): Boolean

  // CHECK:
  //   Mangled name: KotlinClass#clear(){}
  //   Public signature: /KotlinClass.clear|-6446868449915108923[0]
  //   Public signature debug description: clear(){}
  /* fake */ override fun clear(): Unit

  // CHECK JVM_IR:
  //   Mangled name: KotlinClass#clone(){}kotlin.Any{EnhancedNullability}
  //   Public signature: /KotlinClass.clone|178802004086941196[0]
  //   Public signature debug description: clone(){}kotlin.Any{EnhancedNullability}
  /* fake */ override fun clone(): @EnhancedNullability Any

  // CHECK JVM_IR:
  //   Mangled name: KotlinClass#contains(kotlin.String{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /KotlinClass.contains|-1288346193708144028[0]
  //   Public signature debug description: contains(kotlin.String{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override operator fun contains(p0: @EnhancedNullability String): Boolean

  // CHECK JVM_IR:
  //   Mangled name: KotlinClass#containsAll(kotlin.collections.Collection<kotlin.String{EnhancedNullability}>){}kotlin.Boolean
  //   Public signature: /KotlinClass.containsAll|3856626117350599597[0]
  //   Public signature debug description: containsAll(kotlin.collections.Collection<kotlin.String{EnhancedNullability}>){}kotlin.Boolean
  /* fake */ override fun containsAll(p0: Collection<@EnhancedNullability String>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: KotlinClass#equals(kotlin.Any?{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /KotlinClass.equals|4126616015386471185[0]
  //   Public signature debug description: equals(kotlin.Any?{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override operator fun equals(p0: @EnhancedNullability Any?): Boolean

  // CHECK:
  //   Mangled name: KotlinClass#forEach(java.util.function.Consumer<in|kotlin.String?>?){}
  //   Public signature: /KotlinClass.forEach|-5141242812493329438[0]
  //   Public signature debug description: forEach(java.util.function.Consumer<in|kotlin.String?>?){}
  /* fake */ override fun forEach(p0: Consumer<in String?>?): Unit

  // CHECK JVM_IR:
  //   Mangled name: KotlinClass#hashCode(){}kotlin.Int
  //   Public signature: /KotlinClass.hashCode|-8048879360829830756[0]
  //   Public signature debug description: hashCode(){}kotlin.Int
  /* fake */ override fun hashCode(): Int

  // CHECK JVM_IR:
  //   Mangled name: KotlinClass#isEmpty(){}kotlin.Boolean
  //   Public signature: /KotlinClass.isEmpty|-626562167393617703[0]
  //   Public signature debug description: isEmpty(){}kotlin.Boolean
  /* fake */ override fun isEmpty(): Boolean

  // CHECK JVM_IR:
  //   Mangled name: KotlinClass#iterator(){}kotlin.collections.MutableIterator<kotlin.String{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /KotlinClass.iterator|1587384006376391028[0]
  //   Public signature debug description: iterator(){}kotlin.collections.MutableIterator<kotlin.String{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override operator fun iterator(): @EnhancedNullability MutableIterator<@EnhancedNullability String>

  // CHECK JVM_IR:
  //   Mangled name: KotlinClass#parallelStream(){}java.util.stream.Stream<kotlin.String?{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /KotlinClass.parallelStream|3092772522219636263[0]
  //   Public signature debug description: parallelStream(){}java.util.stream.Stream<kotlin.String?{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override fun parallelStream(): @EnhancedNullability Stream<@EnhancedNullability String?>

  // CHECK JVM_IR:
  //   Mangled name: KotlinClass#remove(kotlin.String{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /KotlinClass.remove|2256698784022402098[0]
  //   Public signature debug description: remove(kotlin.String{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun remove(p0: @EnhancedNullability String): Boolean

  // CHECK JVM_IR:
  //   Mangled name: KotlinClass#removeAll(kotlin.collections.Collection<kotlin.String{EnhancedNullability}>){}kotlin.Boolean
  //   Public signature: /KotlinClass.removeAll|239019554007958597[0]
  //   Public signature debug description: removeAll(kotlin.collections.Collection<kotlin.String{EnhancedNullability}>){}kotlin.Boolean
  /* fake */ override fun removeAll(p0: Collection<@EnhancedNullability String>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: KotlinClass#removeIf(java.util.function.Predicate<in|kotlin.String?{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /KotlinClass.removeIf|8976873494666040524[0]
  //   Public signature debug description: removeIf(java.util.function.Predicate<in|kotlin.String?{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun removeIf(p0: @EnhancedNullability Predicate<in @EnhancedNullability String?>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: KotlinClass#retainAll(kotlin.collections.Collection<kotlin.String{EnhancedNullability}>){}kotlin.Boolean
  //   Public signature: /KotlinClass.retainAll|8583629559312465774[0]
  //   Public signature debug description: retainAll(kotlin.collections.Collection<kotlin.String{EnhancedNullability}>){}kotlin.Boolean
  /* fake */ override fun retainAll(p0: Collection<@EnhancedNullability String>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: KotlinClass#spliterator(){}java.util.Spliterator<kotlin.String?>{EnhancedNullability}
  //   Public signature: /KotlinClass.spliterator|568936852624165869[0]
  //   Public signature debug description: spliterator(){}java.util.Spliterator<kotlin.String?>{EnhancedNullability}
  /* fake */ override fun spliterator(): @EnhancedNullability Spliterator<String?>

  // CHECK JVM_IR:
  //   Mangled name: KotlinClass#stream(){}java.util.stream.Stream<kotlin.String?{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /KotlinClass.stream|6909137692784416467[0]
  //   Public signature debug description: stream(){}java.util.stream.Stream<kotlin.String?{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override fun stream(): @EnhancedNullability Stream<@EnhancedNullability String?>

  // CHECK JVM_IR:
  //   Mangled name: KotlinClass#toArray(){}kotlin.Array<out|kotlin.Any?>?
  //   Public signature: /KotlinClass.toArray|-8468800257910341540[0]
  //   Public signature debug description: toArray(){}kotlin.Array<out|kotlin.Any?>?
  /* fake */ override fun toArray(): Array<out Any?>?

  // CHECK JVM_IR:
  //   Mangled name: KotlinClass#toArray(kotlin.Array<out|0:0?>?){0ยง<kotlin.Any?>}kotlin.Array<out|0:0?>?
  //   Public signature: /KotlinClass.toArray|-7248906015406159030[0]
  //   Public signature debug description: toArray(kotlin.Array<out|0:0?>?){0ยง<kotlin.Any?>}kotlin.Array<out|0:0?>?
  /* fake */ override fun <T : Any?> toArray(p0: Array<out T?>?): Array<out T?>?

  // CHECK JVM_IR:
  //   Mangled name: KotlinClass#toString(){}kotlin.String{EnhancedNullability}
  //   Public signature: /KotlinClass.toString|7581629773206850948[0]
  //   Public signature debug description: toString(){}kotlin.String{EnhancedNullability}
  /* fake */ override fun toString(): @EnhancedNullability String

  // CHECK:
  //   Mangled name: KotlinClass{}size
  //   Public signature: /KotlinClass.size|-6253659984320132064[0]
  //   Public signature debug description: {}size
  /* fake */ override val size: Int
    // CHECK JVM_IR:
    //   Mangled name: KotlinClass#<get-size>(){}kotlin.Int
    //   Public signature: /KotlinClass.size.<get-size>|-3941649985161900780[0]
    //   Public signature debug description: <get-size>(){}kotlin.Int
    /* fake */ override get(): Int

}

// CHECK:
//   Mangled name: #test(A;B){}
//   Public signature: /test|-2533013708701322011[0]
//   Public signature debug description: test(A;B){}
fun test(a: A, b: B): Unit
