/*
 * Copyright 2010-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license
 * that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.idea.navigation;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TargetBackend;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("idea/testData/navigation/relatedSymbols/multiModule")
@TestDataPath("$PROJECT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public class KotlinGotoRelatedSymbolMultiModuleTestGenerated extends AbstractKotlinGotoRelatedSymbolMultiModuleTest {
    public void testAllFilesPresentInMultiModule() throws Exception {
        KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/navigation/relatedSymbols/multiModule"), Pattern.compile("^([^\\.]+)$"), TargetBackend.ANY, false);
    }

    @TestMetadata("fromActualMemberFunToExpect")
    public void testFromActualMemberFunToExpect() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("idea/testData/navigation/relatedSymbols/multiModule/fromActualMemberFunToExpect/");
        doTest(fileName);
    }

    @TestMetadata("fromActualMemberValToExpect")
    public void testFromActualMemberValToExpect() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("idea/testData/navigation/relatedSymbols/multiModule/fromActualMemberValToExpect/");
        doTest(fileName);
    }

    @TestMetadata("fromExpectMemberFunToActuals")
    public void testFromExpectMemberFunToActuals() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("idea/testData/navigation/relatedSymbols/multiModule/fromExpectMemberFunToActuals/");
        doTest(fileName);
    }

    @TestMetadata("fromExpectMemberValToActuals")
    public void testFromExpectMemberValToActuals() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("idea/testData/navigation/relatedSymbols/multiModule/fromExpectMemberValToActuals/");
        doTest(fileName);
    }

    @TestMetadata("fromNestedActualClassToExpect")
    public void testFromNestedActualClassToExpect() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("idea/testData/navigation/relatedSymbols/multiModule/fromNestedActualClassToExpect/");
        doTest(fileName);
    }

    @TestMetadata("fromNestedExpectClassToActuals")
    public void testFromNestedExpectClassToActuals() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("idea/testData/navigation/relatedSymbols/multiModule/fromNestedExpectClassToActuals/");
        doTest(fileName);
    }

    @TestMetadata("fromTopLevelActualClassToExpect")
    public void testFromTopLevelActualClassToExpect() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("idea/testData/navigation/relatedSymbols/multiModule/fromTopLevelActualClassToExpect/");
        doTest(fileName);
    }

    @TestMetadata("fromTopLevelActualFunToExpect")
    public void testFromTopLevelActualFunToExpect() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("idea/testData/navigation/relatedSymbols/multiModule/fromTopLevelActualFunToExpect/");
        doTest(fileName);
    }

    @TestMetadata("fromTopLevelActualValToExpect")
    public void testFromTopLevelActualValToExpect() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("idea/testData/navigation/relatedSymbols/multiModule/fromTopLevelActualValToExpect/");
        doTest(fileName);
    }

    @TestMetadata("fromTopLevelExpectClassToActuals")
    public void testFromTopLevelExpectClassToActuals() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("idea/testData/navigation/relatedSymbols/multiModule/fromTopLevelExpectClassToActuals/");
        doTest(fileName);
    }

    @TestMetadata("fromTopLevelExpectFunToActuals")
    public void testFromTopLevelExpectFunToActuals() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("idea/testData/navigation/relatedSymbols/multiModule/fromTopLevelExpectFunToActuals/");
        doTest(fileName);
    }

    @TestMetadata("fromTopLevelExpectValToActuals")
    public void testFromTopLevelExpectValToActuals() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("idea/testData/navigation/relatedSymbols/multiModule/fromTopLevelExpectValToActuals/");
        doTest(fileName);
    }
}
