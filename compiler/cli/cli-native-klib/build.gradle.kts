plugins {
    kotlin("jvm")
}

dependencies {
    compileOnly(intellijCore())
    api(kotlinStdlib())
    api(project(":compiler:ir.backend.native"))
    api(project(":compiler:cli-base"))
    api(project(":compiler:fir:entrypoint"))
    api(project(":compiler:ir.serialization.common"))
    api(project(":kotlin-util-klib-metadata"))
    api(project(":native:kotlin-native-utils"))
    implementation(project(":compiler:compiler.version"))
    implementation(project(":compiler:config"))
    implementation(project(":compiler:fir:fir2ir"))
    implementation(project(":compiler:fir:providers"))
    implementation(project(":compiler:fir:resolve"))
    implementation(project(":compiler:fir:semantics"))
    implementation(project(":compiler:fir:tree"))
    implementation(project(":compiler:frontend.common"))
    implementation(project(":compiler:ir.tree"))
    implementation(project(":compiler:psi:psi-api"))
    implementation(project(":core:compiler.common"))
    implementation(project(":core:descriptors"))
    implementation(project(":core:deserialization"))
    implementation(project(":core:metadata"))
    implementation(project(":core:util.runtime"))
    implementation(project(":kotlin-util-io"))
    implementation(project(":kotlin-util-klib"))
    implementation(project(":compiler:ir.serialization.native"))
    implementation(project(":core:compiler.common.native"))
    implementation(project(":compiler:cli"))
    implementation(project(":compiler:cli-common"))
    implementation(project(":compiler:ir.backend.common"))
    implementation(project(":compiler:util"))
    implementation(project(":compiler:fir:fir-native"))
    implementation(project(":compiler:ir.objcinterop"))
    implementation(project(":native:frontend.native"))
}

optInToUnsafeDuringIrConstructionAPI()