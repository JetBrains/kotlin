/*
 * Copyright 2010-2016 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jetbrains.kotlin.js.test.semantics;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("js/js.translator/testData/jsCode/cases")
@TestDataPath("$PROJECT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public class JsCodeTestGenerated extends AbstractJsCodeTest {
    public void testAllFilesPresentInCases() throws Exception {
        KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("js/js.translator/testData/jsCode/cases"), Pattern.compile("^(.+)\\.kt$"), true);
    }

    @TestMetadata("break.kt")
    public void testBreak() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/break.kt");
        doTest(fileName);
    }

    @TestMetadata("catchScope.kt")
    public void testCatchScope() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/catchScope.kt");
        doTest(fileName);
    }

    @TestMetadata("codeFromVariable.kt")
    public void testCodeFromVariable() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/codeFromVariable.kt");
        doTest(fileName);
    }

    @TestMetadata("continue.kt")
    public void testContinue() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/continue.kt");
        doTest(fileName);
    }

    @TestMetadata("doWhile.kt")
    public void testDoWhile() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/doWhile.kt");
        doTest(fileName);
    }

    @TestMetadata("for.kt")
    public void testFor() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/for.kt");
        doTest(fileName);
    }

    @TestMetadata("forIn.kt")
    public void testForIn() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/forIn.kt");
        doTest(fileName);
    }

    @TestMetadata("function.kt")
    public void testFunction() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/function.kt");
        doTest(fileName);
    }

    @TestMetadata("if.kt")
    public void testIf() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/if.kt");
        doTest(fileName);
    }

    @TestMetadata("invocation.kt")
    public void testInvocation() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/invocation.kt");
        doTest(fileName);
    }

    @TestMetadata("label.kt")
    public void testLabel() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/label.kt");
        doTest(fileName);
    }

    @TestMetadata("labelNestedClash.kt")
    public void testLabelNestedClash() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/labelNestedClash.kt");
        doTest(fileName);
    }

    @TestMetadata("labelNestedClashWithKotlin.kt")
    public void testLabelNestedClashWithKotlin() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/labelNestedClashWithKotlin.kt");
        doTest(fileName);
    }

    @TestMetadata("labelSiblingClash.kt")
    public void testLabelSiblingClash() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/labelSiblingClash.kt");
        doTest(fileName);
    }

    @TestMetadata("literal.kt")
    public void testLiteral() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/literal.kt");
        doTest(fileName);
    }

    @TestMetadata("object.kt")
    public void testObject() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/object.kt");
        doTest(fileName);
    }

    @TestMetadata("objectScopes.kt")
    public void testObjectScopes() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/objectScopes.kt");
        doTest(fileName);
    }

    @TestMetadata("operators.kt")
    public void testOperators() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/operators.kt");
        doTest(fileName);
    }

    @TestMetadata("quotes.kt")
    public void testQuotes() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/quotes.kt");
        doTest(fileName);
    }

    @TestMetadata("switch.kt")
    public void testSwitch() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/switch.kt");
        doTest(fileName);
    }

    @TestMetadata("tryCatchFinally.kt")
    public void testTryCatchFinally() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/tryCatchFinally.kt");
        doTest(fileName);
    }

    @TestMetadata("while.kt")
    public void testWhile() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/jsCode/cases/while.kt");
        doTest(fileName);
    }
}
