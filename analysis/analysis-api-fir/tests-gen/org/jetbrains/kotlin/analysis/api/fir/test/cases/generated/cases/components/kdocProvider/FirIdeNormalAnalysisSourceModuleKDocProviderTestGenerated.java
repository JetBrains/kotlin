/*
 * Copyright 2010-2024 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.analysis.api.fir.test.cases.generated.cases.components.kdocProvider;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.kotlin.analysis.api.fir.test.configurators.AnalysisApiFirTestConfiguratorFactory;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisApiTestConfiguratorFactoryData;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisApiTestConfigurator;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.TestModuleKind;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.FrontendKind;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisSessionMode;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisApiMode;
import org.jetbrains.kotlin.analysis.api.impl.base.test.cases.components.kdocProvider.AbstractKDocProviderTest;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.analysis.api.GenerateAnalysisApiTestsKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("analysis/analysis-api/testData/components/kdocProvider/kdoc")
@TestDataPath("$PROJECT_ROOT")
public class FirIdeNormalAnalysisSourceModuleKDocProviderTestGenerated extends AbstractKDocProviderTest {
  @NotNull
  @Override
  public AnalysisApiTestConfigurator getConfigurator() {
    return AnalysisApiFirTestConfiguratorFactory.INSTANCE.createConfigurator(
      new AnalysisApiTestConfiguratorFactoryData(
        FrontendKind.Fir,
        TestModuleKind.Source,
        AnalysisSessionMode.Normal,
        AnalysisApiMode.Ide
      )
    );
  }

  @Test
  @TestMetadata("actual.kt")
  public void testActual() {
    runTest("analysis/analysis-api/testData/components/kdocProvider/kdoc/actual.kt");
  }

  @Test
  public void testAllFilesPresentInKdoc() {
    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("analysis/analysis-api/testData/components/kdocProvider/kdoc"), Pattern.compile("^(.+)\\.kt$"), null, true);
  }

  @Test
  @TestMetadata("basic.kt")
  public void testBasic() {
    runTest("analysis/analysis-api/testData/components/kdocProvider/kdoc/basic.kt");
  }

  @Test
  @TestMetadata("expect.kt")
  public void testExpect() {
    runTest("analysis/analysis-api/testData/components/kdocProvider/kdoc/expect.kt");
  }

  @Test
  @TestMetadata("javadoc.kt")
  public void testJavadoc() {
    runTest("analysis/analysis-api/testData/components/kdocProvider/kdoc/javadoc.kt");
  }

  @Test
  @TestMetadata("override.kt")
  public void testOverride() {
    runTest("analysis/analysis-api/testData/components/kdocProvider/kdoc/override.kt");
  }

  @Test
  @TestMetadata("parameter.kt")
  public void testParameter() {
    runTest("analysis/analysis-api/testData/components/kdocProvider/kdoc/parameter.kt");
  }

  @Test
  @TestMetadata("primaryConstructor.kt")
  public void testPrimaryConstructor() {
    runTest("analysis/analysis-api/testData/components/kdocProvider/kdoc/primaryConstructor.kt");
  }

  @Test
  @TestMetadata("property.kt")
  public void testProperty() {
    runTest("analysis/analysis-api/testData/components/kdocProvider/kdoc/property.kt");
  }

  @Test
  @TestMetadata("stdlib.kt")
  public void testStdlib() {
    runTest("analysis/analysis-api/testData/components/kdocProvider/kdoc/stdlib.kt");
  }
}
