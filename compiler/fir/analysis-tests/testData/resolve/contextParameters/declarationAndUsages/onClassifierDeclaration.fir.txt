FILE: onClassifierDeclaration.kt
    public final class A : R|kotlin/Any| {
        public constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

    }
    context(c: R|A|)
    public final class Test1 : R|kotlin/Any| {
        context(c: R|A|)
        public constructor(): R|Test1| {
            super<R|kotlin/Any|>()
        }

    }
    context(c: R|A|)
    public final object Test2 : R|kotlin/Any| {
        context(c: R|A|)
        private constructor(): R|Test2| {
            super<R|kotlin/Any|>()
        }

    }
    context(c: R|A|)
    public abstract interface Test3 : R|kotlin/Any| {
    }
    context(c: R|A|)
    public abstract fun interface Test4 : R|kotlin/Any| {
        public abstract fun foo(): R|kotlin/Unit|

    }
    context(c: R|A|)
    public final data class Test5 : R|kotlin/Any| {
        context(c: R|A|)
        public constructor(a: R|kotlin/Int|): R|Test5| {
            super<R|kotlin/Any|>()
        }

        public final val a: R|kotlin/Int| = R|<local>/a|
            public get(): R|kotlin/Int|

        public final operator fun component1(): R|kotlin/Int|

        public final fun copy(a: R|kotlin/Int| = this@R|/Test5|.R|/Test5.a|): R|Test5|

    }
    context(c: R|A|)
    public final data object Test6 : R|kotlin/Any| {
        context(c: R|A|)
        private constructor(): R|Test6| {
            super<R|kotlin/Any|>()
        }

    }
    context(c: R|A|)
    public final enum class Test7 : R|kotlin/Enum<Test7>| {
        context(c: R|A|)
        private constructor(): R|Test7| {
            super<R|kotlin/Enum<Test7>|>()
        }

        public final static enum entry FIRST: R|Test7|
        public final static fun values(): R|kotlin/Array<Test7>| {
        }

        public final static fun valueOf(value: R|kotlin/String|): R|Test7| {
        }

        public final static val entries: R|kotlin/enums/EnumEntries<Test7>|
            public get(): R|kotlin/enums/EnumEntries<Test7>|

    }
    context(c: R|A|)
    @R|kotlin/jvm/JvmInline|() public final value class Test8 : R|kotlin/Any| {
        context(c: R|A|)
        public constructor(a: R|kotlin/Int|): R|Test8| {
            super<R|kotlin/Any|>()
        }

        public final val a: R|kotlin/Int| = R|<local>/a|
            public get(): R|kotlin/Int|

    }
    context(c: R|A|)
    public final annotation class Test9 : R|kotlin/Annotation| {
        context(c: R|A|)
        public constructor(): R|Test9| {
            super<R|kotlin/Any|>()
        }

    }
    context(c: R|A|)
    public final class Test10<T> : R|kotlin/Any| {
        context(c: R|A|)
        public constructor<T>(): R|Test10<T>| {
            super<R|kotlin/Any|>()
        }

    }
    public final class Test11 : R|kotlin/Any| {
        public constructor(): R|Test11| {
            super<R|kotlin/Any|>()
        }

        context(c: R|A|)
        public final class Nested : R|kotlin/Any| {
            context(c: R|A|)
            public constructor(): R|Test11.Nested| {
                super<R|kotlin/Any|>()
            }

        }

        context(c: R|A|)
        public final inner class Inner : R|kotlin/Any| {
            context(c: R|A|)
            public Test11.constructor(): R|Test11.Inner| {
                super<R|kotlin/Any|>()
            }

        }

        context(c: R|A|)
        public final object Obj : R|kotlin/Any| {
            context(c: R|A|)
            private constructor(): R|Test11.Obj| {
                super<R|kotlin/Any|>()
            }

        }

        context(c: R|A|)
        public final companion object Companion : R|kotlin/Any| {
            context(c: R|A|)
            private constructor(): R|Test11.Companion| {
                super<R|kotlin/Any|>()
            }

        }

    }
    public final val test12: <ERROR TYPE REF: Ambiguity: context, [kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context]> = <Ambiguity: context, [kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context]>#(<Unresolved name: c>#)
        public get(): <ERROR TYPE REF: Ambiguity: context, [kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context, kotlin/context]>
    public final object <no name provided> : R|kotlin/Any| {
        private constructor(): R|<no name provided>| {
            super<R|kotlin/Any|>()
        }

    }
    public final typealias Test13 = R|kotlin/String|
