// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: compiler/ir/serialization.common/src/KotlinIr.proto
// Protobuf Java Version: 4.29.3

package org.jetbrains.kotlin.backend.common.serialization.proto;

public interface IrTypeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.backend.common.serialization.proto.IrType)
    org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSimpleTypeLegacy legacySimple = 1;</code>
   * @return Whether the legacySimple field is set.
   */
  boolean hasLegacySimple();
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSimpleTypeLegacy legacySimple = 1;</code>
   * @return The legacySimple.
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.IrSimpleTypeLegacy getLegacySimple();

  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicType dynamic = 2;</code>
   * @return Whether the dynamic field is set.
   */
  boolean hasDynamic();
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicType dynamic = 2;</code>
   * @return The dynamic.
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicType getDynamic();

  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDefinitelyNotNullType dnn = 4;</code>
   * @return Whether the dnn field is set.
   */
  boolean hasDnn();
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDefinitelyNotNullType dnn = 4;</code>
   * @return The dnn.
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.IrDefinitelyNotNullType getDnn();

  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSimpleType simple = 5;</code>
   * @return Whether the simple field is set.
   */
  boolean hasSimple();
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSimpleType simple = 5;</code>
   * @return The simple.
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.IrSimpleType getSimple();

  public org.jetbrains.kotlin.backend.common.serialization.proto.IrType.KindCase getKindCase();
}