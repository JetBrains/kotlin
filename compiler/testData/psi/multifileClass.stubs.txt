MultifileClass.kt:
  FILE[kind=Facade[packageFqName=test, facadeFqName=test.MultifileClass]]
    FILE_ANNOTATION_LIST
      ANNOTATION
        ANNOTATION_TARGET[useSiteTarget=FILE]
        ANNOTATION_ENTRY[hasValueArguments=true, shortName=JvmName]
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=JvmName]
          VALUE_ARGUMENT_LIST
            VALUE_ARGUMENT[isSpread=false]
              STRING_TEMPLATE
                LITERAL_STRING_TEMPLATE_ENTRY[text=MultifileClass]
        ANNOTATION_ENTRY[hasValueArguments=false, shortName=JvmMultifileClass]
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=JvmMultifileClass]
    PACKAGE_DIRECTIVE
      REFERENCE_EXPRESSION[referencedName=test]
    IMPORT_LIST
    FUN[fqName=test.p1Fun, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=p1Fun]
      VALUE_PARAMETER_LIST
    FUN[fqName=test.p1ExtFun, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=true, isTopLevel=true, mayHaveContract=false, name=p1ExtFun]
      TYPE_REFERENCE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=String]
      VALUE_PARAMETER_LIST
    FUN[fqName=test.p1ExprFun, hasBody=true, hasNoExpressionBody=false, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=p1ExprFun]
      VALUE_PARAMETER_LIST
      TYPE_REFERENCE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=Int]
    FUN[fqName=test.p1FunWithParams, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=p1FunWithParams]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=x]
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Int]
      TYPE_REFERENCE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=Int]
    PROPERTY[fqName=test.p1Val, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=true, isVar=false, name=p1Val]
      TYPE_REFERENCE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=Int]
    PROPERTY[fqName=test.p1ExtVal, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=true, isTopLevel=true, isVar=false, name=p1ExtVal]
      TYPE_REFERENCE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=String]
      TYPE_REFERENCE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=Int]
      PROPERTY_ACCESSOR[hasBody=true, hasNoExpressionBody=false, isGetter=true, mayHaveContract=false]
        VALUE_PARAMETER_LIST
    PROPERTY[fqName=test.p1Var, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=true, isVar=true, name=p1Var]
      TYPE_REFERENCE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=Int]
    PROPERTY[fqName=test.annotatedConstVal, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=false, isExtension=false, isTopLevel=true, isVar=false, name=annotatedConstVal]
      MODIFIER_LIST[const]
        ANNOTATION_ENTRY[hasValueArguments=true, shortName=Deprecated]
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=Deprecated]
          VALUE_ARGUMENT_LIST
            VALUE_ARGUMENT[isSpread=false]
              STRING_TEMPLATE
                LITERAL_STRING_TEMPLATE_ENTRY[text=deprecated]


SecondPart.kt:
  FILE[kind=Facade[packageFqName=test, facadeFqName=test.MultifileClass]]
    FILE_ANNOTATION_LIST
      ANNOTATION
        ANNOTATION_TARGET[useSiteTarget=FILE]
        ANNOTATION_ENTRY[hasValueArguments=true, shortName=JvmName]
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=JvmName]
          VALUE_ARGUMENT_LIST
            VALUE_ARGUMENT[isSpread=false]
              STRING_TEMPLATE
                LITERAL_STRING_TEMPLATE_ENTRY[text=MultifileClass]
        ANNOTATION_ENTRY[hasValueArguments=false, shortName=JvmMultifileClass]
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=JvmMultifileClass]
    PACKAGE_DIRECTIVE
      REFERENCE_EXPRESSION[referencedName=test]
    IMPORT_LIST
    FUN[fqName=test.p2Fun, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=p2Fun]
      VALUE_PARAMETER_LIST
    FUN[fqName=test.p2ExtFun, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=true, isTopLevel=true, mayHaveContract=false, name=p2ExtFun]
      TYPE_REFERENCE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=String]
      VALUE_PARAMETER_LIST
    PROPERTY[fqName=test.p2Val, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=true, isVar=false, name=p2Val]
      TYPE_REFERENCE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=Int]
    PROPERTY[fqName=test.p2ExtVal, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=true, isTopLevel=true, isVar=false, name=p2ExtVal]
      TYPE_REFERENCE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=String]
      TYPE_REFERENCE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=Int]
      PROPERTY_ACCESSOR[hasBody=true, hasNoExpressionBody=false, isGetter=true, mayHaveContract=false]
        VALUE_PARAMETER_LIST
