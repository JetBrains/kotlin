== neq ==
fun neq(a: Int, b: Int) {
    if (a != b) {}
}
---------------------
L0:
  1 <START>
    v(a: Int)
    w(a)
    v(b: Int)
    w(b)
  2 mark({ if (a != b) {} })
    mark(if (a != b) {})
    mark(a != b)
    r(a)
    r(b)
    call(!=, equals)
    jf(L2)                      NEXT:[read (Unit), mark({})]
  3 mark({})
    read (Unit)
  2 jmp(L3)                     NEXT:[<END>]
L2:
    read (Unit)                 PREV:[jf(L2)]
L1:
L3:
  1 <END>                       NEXT:[<SINK>]                      PREV:[jmp(L3), read (Unit)]
error:
    <ERROR>                     PREV:[]
sink:
    <SINK>                      PREV:[<ERROR>, <END>]
=====================
