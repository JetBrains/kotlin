FILE: main.kt
    public abstract interface TypeConstructor : R|kotlin/Any| {
        public abstract val x: R|kotlin/String|
            public get(): R|kotlin/String|

    }
    public final fun main(): R|kotlin/Unit| {
        Q|OverridingUtil|.R|/OverridingUtil.createWithEqualityAxioms|(<L> = l1@fun <anonymous>(c1: R|ft<TypeConstructor, TypeConstructor?>!|, c2: R|ft<TypeConstructor, TypeConstructor?>!|): R|kotlin/Boolean| {
            when () {
                ==(R|<local>/c1|.R|/TypeConstructor.x|, R|<local>/c2|.R|/TypeConstructor.x|) ->  {
                    ^@l1 Boolean(true)
                }
            }

            ^ Boolean(false)
        }
        )
    }
