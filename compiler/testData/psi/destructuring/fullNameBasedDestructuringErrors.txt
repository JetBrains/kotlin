KtFile: fullNameBasedDestructuringErrors.kt
  PACKAGE_DIRECTIVE
    <empty list>
  IMPORT_LIST
    <empty list>
  PsiComment(EOL_COMMENT)('// COMPILATION_ERRORS')
  PsiWhiteSpace('\n\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('declaration')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      DESTRUCTURING_DECLARATION
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        PsiElement(LPAR)('(')
        PsiErrorElement:Expecting ')'
          <empty list>
      PROPERTY
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('first')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(COMMA)(',')
        PsiWhiteSpace(' ')
        PsiElement(var)('var')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('second')
        PsiElement(COMMA)(',')
        PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('x')
      PsiErrorElement:Expecting an element
        PsiElement(SEMICOLON)(';')
      PsiWhiteSpace('\n    ')
      DESTRUCTURING_DECLARATION
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        PsiElement(LPAR)('(')
        DESTRUCTURING_DECLARATION_ENTRY
          PsiElement(IDENTIFIER)('first')
        PsiElement(COMMA)(',')
        PsiWhiteSpace(' ')
        DESTRUCTURING_DECLARATION_ENTRY
          PsiErrorElement:Expecting a name
            <empty list>
      PROPERTY
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('second')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('x')
      PsiErrorElement:Expecting an element
        PsiElement(SEMICOLON)(';')
      PsiWhiteSpace('\n    ')
      PARENTHESIZED
        PsiElement(LPAR)('(')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('first')
        PsiErrorElement:Expecting ')'
          <empty list>
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(COMMA)(',')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('second')
        PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('x')
      PsiErrorElement:Expecting an element
        PsiElement(SEMICOLON)(';')
      PsiWhiteSpace('\n    ')
      DESTRUCTURING_DECLARATION
        PsiElement(LPAR)('(')
        DESTRUCTURING_DECLARATION_ENTRY
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          PsiElement(IDENTIFIER)('first')
          PsiElement(COLON)(':')
          PsiWhiteSpace(' ')
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('String')
        PsiElement(COMMA)(',')
        PsiWhiteSpace(' ')
        DESTRUCTURING_DECLARATION_ENTRY
          PsiErrorElement:Expecting val or var keyword
            PsiElement(IDENTIFIER)('second')
          PsiErrorElement:Expecting a name
            <empty list>
        PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('x')
      PsiElement(SEMICOLON)(';')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('loop')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      BINARY_EXPRESSION
        FOR
          PsiElement(for)('for')
          PsiWhiteSpace(' ')
          PsiElement(LPAR)('(')
          VALUE_PARAMETER
            DESTRUCTURING_DECLARATION
              PsiElement(LPAR)('(')
              DESTRUCTURING_DECLARATION_ENTRY
                PsiElement(IDENTIFIER)('first')
              PsiElement(COMMA)(',')
              PsiWhiteSpace(' ')
              DESTRUCTURING_DECLARATION_ENTRY
                PsiErrorElement:Expecting a name
                  <empty list>
              PsiErrorElement:Expecting ')'
                PsiElement(val)('val')
          PsiWhiteSpace(' ')
          PsiErrorElement:Expecting 'in'
            PsiElement(IDENTIFIER)('second')
          PsiElement(RPAR)(')')
          PsiWhiteSpace(' ')
          BODY
            PsiErrorElement:Expecting an expression
              <empty list>
        OPERATION_REFERENCE
          PsiElement(in)('in')
        PsiWhiteSpace(' ')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('x')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(RPAR)(')')
      PsiWhiteSpace(' ')
      LAMBDA_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          BLOCK
            <empty list>
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      BINARY_EXPRESSION
        FOR
          PsiElement(for)('for')
          PsiWhiteSpace(' ')
          PsiElement(LPAR)('(')
          VALUE_PARAMETER
            DESTRUCTURING_DECLARATION
              PsiElement(LPAR)('(')
              DESTRUCTURING_DECLARATION_ENTRY
                PsiElement(IDENTIFIER)('first')
              PsiElement(COMMA)(',')
              PsiWhiteSpace(' ')
              DESTRUCTURING_DECLARATION_ENTRY
                PsiErrorElement:Expecting a name
                  <empty list>
              PsiErrorElement:Expecting ')'
                PsiElement(var)('var')
          PsiWhiteSpace(' ')
          PsiErrorElement:Expecting 'in'
            PsiElement(IDENTIFIER)('second')
          PsiElement(RPAR)(')')
          PsiWhiteSpace(' ')
          BODY
            PsiErrorElement:Expecting an expression
              <empty list>
        OPERATION_REFERENCE
          PsiElement(in)('in')
        PsiWhiteSpace(' ')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('x')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(RPAR)(')')
      PsiWhiteSpace(' ')
      LAMBDA_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          BLOCK
            <empty list>
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      FOR
        PsiElement(for)('for')
        PsiWhiteSpace(' ')
        PsiElement(LPAR)('(')
        VALUE_PARAMETER
          DESTRUCTURING_DECLARATION
            PsiElement(LPAR)('(')
            DESTRUCTURING_DECLARATION_ENTRY
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              PsiElement(IDENTIFIER)('first')
            PsiElement(COMMA)(',')
            PsiWhiteSpace(' ')
            DESTRUCTURING_DECLARATION_ENTRY
              PsiErrorElement:Expecting val keyword
                PsiElement(IDENTIFIER)('second')
              PsiErrorElement:Expecting a name
                <empty list>
            PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(in)('in')
        PsiWhiteSpace(' ')
        LOOP_RANGE
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('x')
        PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        BODY
          BLOCK
            PsiElement(LBRACE)('{')
            PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      BINARY_EXPRESSION
        FOR
          PsiElement(for)('for')
          PsiWhiteSpace(' ')
          PsiElement(LPAR)('(')
          VALUE_PARAMETER
            DESTRUCTURING_DECLARATION
              PsiElement(LPAR)('(')
              DESTRUCTURING_DECLARATION_ENTRY
                PsiErrorElement:Expecting a name
                  <empty list>
              PsiErrorElement:Expecting ')'
                PsiElement(var)('var')
          PsiWhiteSpace(' ')
          PsiErrorElement:Expecting 'in'
            PsiElement(IDENTIFIER)('first')
          PsiElement(RPAR)(')')
          PsiWhiteSpace(' ')
          BODY
            PsiErrorElement:Expecting an expression
              <empty list>
        OPERATION_REFERENCE
          PsiElement(in)('in')
        PsiWhiteSpace(' ')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('x')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(RPAR)(')')
      PsiWhiteSpace(' ')
      LAMBDA_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          BLOCK
            <empty list>
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      BINARY_EXPRESSION
        FOR
          PsiElement(for)('for')
          PsiWhiteSpace(' ')
          PsiElement(LPAR)('(')
          VALUE_PARAMETER
            DESTRUCTURING_DECLARATION
              PsiElement(LPAR)('(')
              DESTRUCTURING_DECLARATION_ENTRY
                PsiElement(val)('val')
                PsiWhiteSpace(' ')
                PsiElement(IDENTIFIER)('first')
              PsiElement(COMMA)(',')
              PsiWhiteSpace(' ')
              DESTRUCTURING_DECLARATION_ENTRY
                PsiErrorElement:Expecting val keyword
                  <empty list>
              PsiErrorElement:Expecting ')'
                PsiElement(var)('var')
          PsiWhiteSpace(' ')
          PsiErrorElement:Expecting 'in'
            PsiElement(IDENTIFIER)('second')
          PsiElement(RPAR)(')')
          PsiWhiteSpace(' ')
          BODY
            PsiErrorElement:Expecting an expression
              <empty list>
        OPERATION_REFERENCE
          PsiElement(in)('in')
        PsiWhiteSpace(' ')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('x')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(RPAR)(')')
      PsiWhiteSpace(' ')
      LAMBDA_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          BLOCK
            <empty list>
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('lambda')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('foo')
        PsiWhiteSpace(' ')
        LAMBDA_ARGUMENT
          LAMBDA_EXPRESSION
            FUNCTION_LITERAL
              PsiElement(LBRACE)('{')
              PsiWhiteSpace(' ')
              BLOCK
                PARENTHESIZED
                  PsiElement(LPAR)('(')
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('first')
                  PsiErrorElement:Expecting ')'
                    <empty list>
                PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
                  PsiElement(COMMA)(',')
                  PsiWhiteSpace(' ')
                  PsiElement(val)('val')
                  PsiWhiteSpace(' ')
                  PsiElement(IDENTIFIER)('second')
                  PsiElement(RPAR)(')')
                  PsiWhiteSpace(' ')
                  PsiElement(ARROW)('->')
              PsiWhiteSpace(' ')
              PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('foo')
        PsiWhiteSpace(' ')
        LAMBDA_ARGUMENT
          LAMBDA_EXPRESSION
            FUNCTION_LITERAL
              PsiElement(LBRACE)('{')
              PsiWhiteSpace(' ')
              BLOCK
                PARENTHESIZED
                  PsiElement(LPAR)('(')
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('first')
                  PsiErrorElement:Expecting ')'
                    <empty list>
                PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
                  PsiElement(COMMA)(',')
                  PsiWhiteSpace(' ')
                  PsiElement(var)('var')
                  PsiWhiteSpace(' ')
                  PsiElement(IDENTIFIER)('second')
                  PsiElement(RPAR)(')')
                  PsiWhiteSpace(' ')
                  PsiElement(ARROW)('->')
              PsiWhiteSpace(' ')
              PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('foo')
        PsiWhiteSpace(' ')
        LAMBDA_ARGUMENT
          LAMBDA_EXPRESSION
            FUNCTION_LITERAL
              PsiElement(LBRACE)('{')
              PsiWhiteSpace(' ')
              VALUE_PARAMETER_LIST
                VALUE_PARAMETER
                  DESTRUCTURING_DECLARATION
                    PsiElement(LPAR)('(')
                    DESTRUCTURING_DECLARATION_ENTRY
                      PsiElement(val)('val')
                      PsiWhiteSpace(' ')
                      PsiElement(IDENTIFIER)('first')
                    PsiElement(COMMA)(',')
                    PsiWhiteSpace(' ')
                    DESTRUCTURING_DECLARATION_ENTRY
                      PsiErrorElement:Expecting val keyword
                        PsiElement(IDENTIFIER)('second')
                      PsiErrorElement:Expecting a name
                        <empty list>
                    PsiElement(RPAR)(')')
              PsiWhiteSpace(' ')
              PsiElement(ARROW)('->')
              PsiWhiteSpace(' ')
              BLOCK
                <empty list>
              PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('foo')
        PsiWhiteSpace(' ')
        LAMBDA_ARGUMENT
          LAMBDA_EXPRESSION
            FUNCTION_LITERAL
              PsiElement(LBRACE)('{')
              PsiWhiteSpace(' ')
              BLOCK
                DESTRUCTURING_DECLARATION
                  PsiElement(LPAR)('(')
                  DESTRUCTURING_DECLARATION_ENTRY
                    PsiElement(var)('var')
                    PsiWhiteSpace(' ')
                    PsiElement(IDENTIFIER)('first')
                  PsiElement(RPAR)(')')
                PsiWhiteSpace(' ')
                PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
                  PsiElement(ARROW)('->')
              PsiWhiteSpace(' ')
              PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('foo')
        PsiWhiteSpace(' ')
        LAMBDA_ARGUMENT
          LAMBDA_EXPRESSION
            FUNCTION_LITERAL
              PsiElement(LBRACE)('{')
              PsiWhiteSpace(' ')
              BLOCK
                DESTRUCTURING_DECLARATION
                  PsiElement(LPAR)('(')
                  DESTRUCTURING_DECLARATION_ENTRY
                    PsiElement(val)('val')
                    PsiWhiteSpace(' ')
                    PsiElement(IDENTIFIER)('first')
                  PsiElement(COMMA)(',')
                  PsiWhiteSpace(' ')
                  DESTRUCTURING_DECLARATION_ENTRY
                    PsiElement(var)('var')
                    PsiWhiteSpace(' ')
                    PsiElement(IDENTIFIER)('second')
                  PsiElement(RPAR)(')')
                PsiWhiteSpace(' ')
                PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
                  PsiElement(ARROW)('->')
              PsiWhiteSpace(' ')
              PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')