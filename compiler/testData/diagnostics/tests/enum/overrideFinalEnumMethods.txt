package

public final enum class E : kotlin.Enum<E> {
    enum entry ENTRY

    private constructor E()
    public open override /*1*/ val name: kotlin.String = "lol"
    public open override /*1*/ val ordinal: kotlin.Int = 0
    protected final override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
    public open override /*1*/ fun compareTo(/*0*/ other: E): kotlin.Int
    public open override /*1*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    protected/*protected and package*/ final override /*1*/ /*fake_override*/ /*isHiddenForResolutionEverywhereBesideSupercalls*/ fun finalize(): kotlin.Unit
    public final override /*1*/ /*fake_override*/ /*isHiddenForResolutionEverywhereBesideSupercalls*/ fun getDeclaringClass(): java.lang.Class<E!>!
    public open override /*1*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    // Static members
    public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): E
    public final /*synthesized*/ fun values(): kotlin.Array<E>
}
