public final class home/Color {
    // source: 'main.kt'
    public final static field $stable: int
    private final field b: int
    private final field g: int
    private final field r: int
    static method <clinit>(): void
    public method <init>(p0: int, p1: int, p2: int): void
    public final method getB(): int
    public final method getG(): int
    public final method getR(): int
}

public interface home/ColumnScope {
    // source: 'main.kt'
}

public final class home/DominantColorState {
    // source: 'main.kt'
    public final static field $stable: int
    private final field color$delegate: androidx.compose.runtime.MutableState
    private final field defaultColor: home.Color
    static method <clinit>(): void
    public method <init>(p0: home.Color): void
    public final method getColor(): home.Color
    private final method setColor(p0: home.Color): void
}

public final class home/MainKt {
    // source: 'main.kt'
    public final static method Column(p0: kotlin.jvm.functions.Function3, p1: androidx.compose.runtime.Composer, p2: int): void
    private final static method DynamicThemePrimaryColorsFromImage$lambda$0(p0: home.DominantColorState, p1: kotlin.jvm.functions.Function2, p2: int, p3: int, p4: androidx.compose.runtime.Composer, p5: int): kotlin.Unit
    public final static method DynamicThemePrimaryColorsFromImage(p0: home.DominantColorState, p1: kotlin.jvm.functions.Function2, p2: androidx.compose.runtime.Composer, p3: int, p4: int): void
    private final static method Home$lambda$1(p0: int, p1: androidx.compose.runtime.Composer, p2: int): kotlin.Unit
    public final static method Home(p0: androidx.compose.runtime.Composer, p1: int): void
    public final static method rememberDominantColorState(p0: home.Color, p1: androidx.compose.runtime.Composer, p2: int, p3: int): home.DominantColorState
}
