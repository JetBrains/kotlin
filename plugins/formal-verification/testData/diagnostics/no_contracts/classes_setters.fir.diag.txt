/classes_setters.kt:(427,443): info: Generated Viper text for testCustomSetter:
field public$backing_field_b: Ref

method class_AlwaysPlusOne$constructor$fun_take$$return$T_class_global$class_AlwaysPlusOne()
  returns (ret: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$T_class_global$class_AlwaysPlusOne())
  ensures acc(T_class_global$class_AlwaysPlusOne(ret), wildcard)


method global$fun_testCustomSetter$fun_take$$return$T_Unit()
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
{
  var local0$f: Ref
  var anonymous$0: Ref
  ret$0 := dom$RuntimeType$unitValue()
  local0$f := class_AlwaysPlusOne$constructor$fun_take$$return$T_class_global$class_AlwaysPlusOne()
  inhale acc(local0$f.public$backing_field_b, write)
  local0$f.public$backing_field_b := dom$RuntimeType$intToRef(1)
  exhale acc(local0$f.public$backing_field_b, write)
  anonymous$0 := public$property_setter_num(local0$f, dom$RuntimeType$intToRef(1))
  label label$ret$0
}

method public$property_getter_num(this: Ref) returns (ret: Ref)


method public$property_setter_num(this: Ref, value: Ref) returns (ret: Ref)


/classes_setters.kt:(509,519): info: Generated Viper text for testSetter:
field public$backing_field_age: Ref

method class_Person$constructor$fun_take$T_Int$return$T_class_global$class_Person(local$age: Ref)
  returns (ret: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$T_class_global$class_Person())
  ensures acc(T_class_global$class_Person(ret), wildcard)


method global$fun_testSetter$fun_take$$return$T_Unit() returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
{
  var local0$person: Ref
  var anonymous$0: Ref
  ret$0 := dom$RuntimeType$unitValue()
  local0$person := class_Person$constructor$fun_take$T_Int$return$T_class_global$class_Person(dom$RuntimeType$intToRef(19))
  inhale acc(local0$person.public$backing_field_age, write)
  anonymous$0 := local0$person.public$backing_field_age
  exhale acc(local0$person.public$backing_field_age, write)
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(anonymous$0), dom$RuntimeType$intType())
  inhale acc(local0$person.public$backing_field_age, write)
  local0$person.public$backing_field_age := special$plusInts(anonymous$0, dom$RuntimeType$intToRef(1))
  exhale acc(local0$person.public$backing_field_age, write)
  label label$ret$0
}

/classes_setters.kt:(591,608): info: Generated Viper text for testSetterCascade:
field public$backing_field_a: Ref

field public$backing_field_b: Ref

method class_Bar$constructor$fun_take$T_Int$return$T_class_global$class_Bar(local$a: Ref)
  returns (ret: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$T_class_global$class_Bar())
  ensures acc(T_class_global$class_Bar(ret), wildcard)


method class_Foo$constructor$fun_take$T_class_global$class_Bar$return$T_class_global$class_Foo(local$b: Ref)
  returns (ret: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$T_class_global$class_Foo())
  ensures acc(T_class_global$class_Foo(ret), wildcard)


method global$fun_testSetterCascade$fun_take$$return$T_Unit()
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
{
  var local0$f: Ref
  var anonymous$0: Ref
  var anonymous$1: Ref
  ret$0 := dom$RuntimeType$unitValue()
  anonymous$0 := class_Bar$constructor$fun_take$T_Int$return$T_class_global$class_Bar(dom$RuntimeType$intToRef(10))
  local0$f := class_Foo$constructor$fun_take$T_class_global$class_Bar$return$T_class_global$class_Foo(anonymous$0)
  inhale acc(local0$f.public$backing_field_b, write)
  anonymous$1 := local0$f.public$backing_field_b
  exhale acc(local0$f.public$backing_field_b, write)
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(anonymous$1), dom$RuntimeType$T_class_global$class_Bar())
  inhale acc(T_class_global$class_Bar(anonymous$1), wildcard)
  inhale acc(anonymous$1.public$backing_field_a, write)
  anonymous$1.public$backing_field_a := dom$RuntimeType$intToRef(42)
  exhale acc(anonymous$1.public$backing_field_a, write)
  label label$ret$0
}

/classes_setters.kt:(660,684): info: Generated Viper text for testSetterNoBackingField:
field class_Baz_private$backing_field__a: Ref

method class_Baz$constructor$fun_take$$return$T_class_global$class_Baz()
  returns (ret: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$T_class_global$class_Baz())
  ensures acc(T_class_global$class_Baz(ret), wildcard)


method global$fun_testSetterNoBackingField$fun_take$$return$T_Unit()
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
{
  var local0$baz: Ref
  var anonymous$0: Ref
  ret$0 := dom$RuntimeType$unitValue()
  local0$baz := class_Baz$constructor$fun_take$$return$T_class_global$class_Baz()
  anonymous$0 := public$property_setter_a(local0$baz, dom$RuntimeType$intToRef(42))
  label label$ret$0
}

method public$property_getter_a(this: Ref) returns (ret: Ref)


method public$property_setter_a(this: Ref, value: Ref) returns (ret: Ref)


/classes_setters.kt:(824,840): info: Generated Viper text for testSetterLambda:
field public$backing_field_a: Ref

method class_Bar$constructor$fun_take$T_Int$return$T_class_global$class_Bar(local$a: Ref)
  returns (ret: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$T_class_global$class_Bar())
  ensures acc(T_class_global$class_Bar(ret), wildcard)


method global$fun_testSetterLambda$fun_take$$return$T_Unit()
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
{
  var ret$1: Ref
  var anonymous$0: Ref
  ret$0 := dom$RuntimeType$unitValue()
  anonymous$0 := class_Bar$constructor$fun_take$T_Int$return$T_class_global$class_Bar(dom$RuntimeType$intToRef(0))
  inhale acc(anonymous$0.public$backing_field_a, write)
  anonymous$0.public$backing_field_a := dom$RuntimeType$intToRef(42)
  exhale acc(anonymous$0.public$backing_field_a, write)
  label label$ret$1
  label label$ret$0
}
