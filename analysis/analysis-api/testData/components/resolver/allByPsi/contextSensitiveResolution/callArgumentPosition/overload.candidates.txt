KtFile: 'overload.kt'
  NO_CANDIDATES

KtPackageDirective(0,0): ''
  NO_CANDIDATES

KtImportList(0,0): ''
  NO_CANDIDATES

KtClass(93,154): 'open class MyClass {'
  NO_CANDIDATES

KtDeclarationModifierList(93,97): 'open'
  NO_CANDIDATES

KtClassBody(112,154): '{'
  NO_CANDIDATES

KtObjectDeclaration(118,152): 'object InheritorObject : MyClass()'
  NO_CANDIDATES

KtSuperTypeList(143,152): 'MyClass()'
  NO_CANDIDATES

KtSuperTypeCallEntry(143,152): 'MyClass()'
  KaApplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtConstructorCalleeExpression(143,150): 'MyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtTypeReference(143,150): 'MyClass'
  NO_CANDIDATES

KtUserType(143,150): 'MyClass'
  NO_CANDIDATES

KtNameReferenceExpression(143,150): 'MyClass'
  NO_CANDIDATES

KtValueArgumentList(150,152): '()'
  NO_CANDIDATES

KtClass(156,192): 'enum class MyEnum {'
  NO_CANDIDATES

KtDeclarationModifierList(156,160): 'enum'
  NO_CANDIDATES

KtClassBody(174,192): '{'
  NO_CANDIDATES

KtEnumEntry(180,190): 'EnumValue1'
  NO_CANDIDATES

KtNamedFunction(193,226): 'fun overload(arg: MyEnum)   = arg'
  NO_CANDIDATES

KtParameterList(205,218): '(arg: MyEnum)'
  NO_CANDIDATES

KtParameter(206,217): 'arg: MyEnum'
  NO_CANDIDATES

KtTypeReference(211,217): 'MyEnum'
  NO_CANDIDATES

KtUserType(211,217): 'MyEnum'
  NO_CANDIDATES

KtNameReferenceExpression(211,217): 'MyEnum'
  NO_CANDIDATES

KtNameReferenceExpression(223,226): 'arg'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyEnum
          symbol = arg: MyEnum
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNamedFunction(227,259): 'fun overload(arg: MyClass) = arg'
  NO_CANDIDATES

KtParameterList(239,253): '(arg: MyClass)'
  NO_CANDIDATES

KtParameter(240,252): 'arg: MyClass'
  NO_CANDIDATES

KtTypeReference(245,252): 'MyClass'
  NO_CANDIDATES

KtUserType(245,252): 'MyClass'
  NO_CANDIDATES

KtNameReferenceExpression(245,252): 'MyClass'
  NO_CANDIDATES

KtNameReferenceExpression(256,259): 'arg'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyClass
          symbol = arg: MyClass
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNamedFunction(260,374): 'fun test() {'
  NO_CANDIDATES

KtParameterList(268,270): '()'
  NO_CANDIDATES

KtBlockExpression(271,374): '{'
  NO_CANDIDATES

KtCallExpression(277,297): 'overload(EnumValue1)'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        EnumValue1 -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyClass
          symbol = arg: MyClass
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = /overload(arg: MyClass): MyClass
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyClass
              symbol = arg: MyClass
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /overload
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        EnumValue1 -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyEnum
          symbol = arg: MyEnum
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyEnum
          symbol = /overload(arg: MyEnum): MyEnum
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyEnum
              symbol = arg: MyEnum
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /overload
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(277,285): 'overload'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        EnumValue1 -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyClass
          symbol = arg: MyClass
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = /overload(arg: MyClass): MyClass
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyClass
              symbol = arg: MyClass
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /overload
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        EnumValue1 -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyEnum
          symbol = arg: MyEnum
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyEnum
          symbol = /overload(arg: MyEnum): MyEnum
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyEnum
              symbol = arg: MyEnum
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /overload
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(285,297): '(EnumValue1)'
  NO_CANDIDATES

KtValueArgument(286,296): 'EnumValue1'
  NO_CANDIDATES

KtNameReferenceExpression(286,296): 'EnumValue1'
  NO_CANDIDATES

KtProperty(303,340): 'var v1: MyEnum = overload(EnumValue1)'
  NO_CANDIDATES

KtTypeReference(311,317): 'MyEnum'
  NO_CANDIDATES

KtUserType(311,317): 'MyEnum'
  NO_CANDIDATES

KtNameReferenceExpression(311,317): 'MyEnum'
  NO_CANDIDATES

KtCallExpression(320,340): 'overload(EnumValue1)'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        EnumValue1 -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyClass
          symbol = arg: MyClass
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = /overload(arg: MyClass): MyClass
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyClass
              symbol = arg: MyClass
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /overload
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        EnumValue1 -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyEnum
          symbol = arg: MyEnum
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyEnum
          symbol = /overload(arg: MyEnum): MyEnum
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyEnum
              symbol = arg: MyEnum
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /overload
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(320,328): 'overload'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        EnumValue1 -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyClass
          symbol = arg: MyClass
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = /overload(arg: MyClass): MyClass
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyClass
              symbol = arg: MyClass
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /overload
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        EnumValue1 -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyEnum
          symbol = arg: MyEnum
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyEnum
          symbol = /overload(arg: MyEnum): MyEnum
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyEnum
              symbol = arg: MyEnum
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /overload
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(328,340): '(EnumValue1)'
  NO_CANDIDATES

KtValueArgument(329,339): 'EnumValue1'
  NO_CANDIDATES

KtNameReferenceExpression(329,339): 'EnumValue1'
  NO_CANDIDATES

KtCallExpression(346,371): 'overload(InheritorObject)'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        InheritorObject -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyClass
          symbol = arg: MyClass
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = /overload(arg: MyClass): MyClass
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyClass
              symbol = arg: MyClass
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /overload
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        InheritorObject -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyEnum
          symbol = arg: MyEnum
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyEnum
          symbol = /overload(arg: MyEnum): MyEnum
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyEnum
              symbol = arg: MyEnum
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /overload
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(346,354): 'overload'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        InheritorObject -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyClass
          symbol = arg: MyClass
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = /overload(arg: MyClass): MyClass
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyClass
              symbol = arg: MyClass
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /overload
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        InheritorObject -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyEnum
          symbol = arg: MyEnum
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyEnum
          symbol = /overload(arg: MyEnum): MyEnum
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyEnum
              symbol = arg: MyEnum
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /overload
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(354,371): '(InheritorObject)'
  NO_CANDIDATES

KtValueArgument(355,370): 'InheritorObject'
  NO_CANDIDATES

KtNameReferenceExpression(355,370): 'InheritorObject'
  NO_CANDIDATES

KtNamedFunction(375,429): 'fun overload2(arg: MyEnum) { println("Enum version") }'
  NO_CANDIDATES

KtParameterList(388,401): '(arg: MyEnum)'
  NO_CANDIDATES

KtParameter(389,400): 'arg: MyEnum'
  NO_CANDIDATES

KtTypeReference(394,400): 'MyEnum'
  NO_CANDIDATES

KtUserType(394,400): 'MyEnum'
  NO_CANDIDATES

KtNameReferenceExpression(394,400): 'MyEnum'
  NO_CANDIDATES

KtBlockExpression(402,429): '{ println("Enum version") }'
  NO_CANDIDATES

KtCallExpression(404,427): 'println("Enum version")'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(): kotlin.Unit
          valueParameters = []
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<TOO_MANY_ARGUMENTS: Too many arguments for 'fun println(): Unit'.>
    isInBestCandidates = false

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Any?
          symbol = message: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Any?): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Any?
              symbol = message: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Boolean
          symbol = message: kotlin.Boolean
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Boolean): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Boolean
              symbol = message: kotlin.Boolean
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Boolean' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Byte
          symbol = message: kotlin.Byte
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Byte): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Byte
              symbol = message: kotlin.Byte
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Byte' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Char
          symbol = message: kotlin.Char
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Char): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Char
              symbol = message: kotlin.Char
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Char' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.CharArray
          symbol = message: kotlin.CharArray
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.CharArray): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.CharArray
              symbol = message: kotlin.CharArray
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'CharArray' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Double
          symbol = message: kotlin.Double
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Double): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Double
              symbol = message: kotlin.Double
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Double' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Float
          symbol = message: kotlin.Float
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Float): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Float
              symbol = message: kotlin.Float
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Float' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Int
          symbol = message: kotlin.Int
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Int): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Int
              symbol = message: kotlin.Int
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Int' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Long
          symbol = message: kotlin.Long
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Long): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Long
              symbol = message: kotlin.Long
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Long' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Short
          symbol = message: kotlin.Short
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Short): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Short
              symbol = message: kotlin.Short
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Short' was expected.>
    isInBestCandidates = false

KtNameReferenceExpression(404,411): 'println'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(): kotlin.Unit
          valueParameters = []
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<TOO_MANY_ARGUMENTS: Too many arguments for 'fun println(): Unit'.>
    isInBestCandidates = false

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Any?
          symbol = message: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Any?): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Any?
              symbol = message: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Boolean
          symbol = message: kotlin.Boolean
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Boolean): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Boolean
              symbol = message: kotlin.Boolean
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Boolean' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Byte
          symbol = message: kotlin.Byte
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Byte): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Byte
              symbol = message: kotlin.Byte
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Byte' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Char
          symbol = message: kotlin.Char
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Char): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Char
              symbol = message: kotlin.Char
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Char' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.CharArray
          symbol = message: kotlin.CharArray
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.CharArray): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.CharArray
              symbol = message: kotlin.CharArray
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'CharArray' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Double
          symbol = message: kotlin.Double
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Double): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Double
              symbol = message: kotlin.Double
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Double' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Float
          symbol = message: kotlin.Float
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Float): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Float
              symbol = message: kotlin.Float
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Float' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Int
          symbol = message: kotlin.Int
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Int): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Int
              symbol = message: kotlin.Int
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Int' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Long
          symbol = message: kotlin.Long
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Long): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Long
              symbol = message: kotlin.Long
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Long' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Short
          symbol = message: kotlin.Short
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Short): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Short
              symbol = message: kotlin.Short
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Short' was expected.>
    isInBestCandidates = false

KtValueArgumentList(411,427): '("Enum version")'
  NO_CANDIDATES

KtValueArgument(412,426): '"Enum version"'
  NO_CANDIDATES

KtStringTemplateExpression(412,426): '"Enum version"'
  NO_CANDIDATES

KtLiteralStringTemplateEntry(413,425): 'Enum version'
  NO_CANDIDATES

KtNamedFunction(430,486): 'fun overload2() { println("Without arguments version") }'
  NO_CANDIDATES

KtParameterList(443,445): '()'
  NO_CANDIDATES

KtBlockExpression(446,486): '{ println("Without arguments version") }'
  NO_CANDIDATES

KtCallExpression(448,484): 'println("Without arguments version")'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(): kotlin.Unit
          valueParameters = []
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<TOO_MANY_ARGUMENTS: Too many arguments for 'fun println(): Unit'.>
    isInBestCandidates = false

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Without arguments version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Any?
          symbol = message: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Any?): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Any?
              symbol = message: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Without arguments version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Boolean
          symbol = message: kotlin.Boolean
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Boolean): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Boolean
              symbol = message: kotlin.Boolean
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Boolean' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Without arguments version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Byte
          symbol = message: kotlin.Byte
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Byte): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Byte
              symbol = message: kotlin.Byte
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Byte' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Without arguments version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Char
          symbol = message: kotlin.Char
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Char): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Char
              symbol = message: kotlin.Char
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Char' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Without arguments version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.CharArray
          symbol = message: kotlin.CharArray
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.CharArray): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.CharArray
              symbol = message: kotlin.CharArray
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'CharArray' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Without arguments version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Double
          symbol = message: kotlin.Double
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Double): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Double
              symbol = message: kotlin.Double
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Double' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Without arguments version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Float
          symbol = message: kotlin.Float
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Float): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Float
              symbol = message: kotlin.Float
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Float' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Without arguments version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Int
          symbol = message: kotlin.Int
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Int): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Int
              symbol = message: kotlin.Int
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Int' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Without arguments version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Long
          symbol = message: kotlin.Long
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Long): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Long
              symbol = message: kotlin.Long
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Long' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Without arguments version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Short
          symbol = message: kotlin.Short
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Short): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Short
              symbol = message: kotlin.Short
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Short' was expected.>
    isInBestCandidates = false

KtNameReferenceExpression(448,455): 'println'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(): kotlin.Unit
          valueParameters = []
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<TOO_MANY_ARGUMENTS: Too many arguments for 'fun println(): Unit'.>
    isInBestCandidates = false

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Without arguments version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Any?
          symbol = message: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Any?): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Any?
              symbol = message: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Without arguments version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Boolean
          symbol = message: kotlin.Boolean
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Boolean): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Boolean
              symbol = message: kotlin.Boolean
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Boolean' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Without arguments version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Byte
          symbol = message: kotlin.Byte
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Byte): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Byte
              symbol = message: kotlin.Byte
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Byte' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Without arguments version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Char
          symbol = message: kotlin.Char
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Char): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Char
              symbol = message: kotlin.Char
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Char' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Without arguments version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.CharArray
          symbol = message: kotlin.CharArray
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.CharArray): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.CharArray
              symbol = message: kotlin.CharArray
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'CharArray' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Without arguments version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Double
          symbol = message: kotlin.Double
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Double): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Double
              symbol = message: kotlin.Double
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Double' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Without arguments version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Float
          symbol = message: kotlin.Float
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Float): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Float
              symbol = message: kotlin.Float
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Float' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Without arguments version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Int
          symbol = message: kotlin.Int
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Int): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Int
              symbol = message: kotlin.Int
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Int' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Without arguments version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Long
          symbol = message: kotlin.Long
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Long): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Long
              symbol = message: kotlin.Long
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Long' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Without arguments version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Short
          symbol = message: kotlin.Short
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Short): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Short
              symbol = message: kotlin.Short
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Short' was expected.>
    isInBestCandidates = false

KtValueArgumentList(455,484): '("Without arguments version")'
  NO_CANDIDATES

KtValueArgument(456,483): '"Without arguments version"'
  NO_CANDIDATES

KtStringTemplateExpression(456,483): '"Without arguments version"'
  NO_CANDIDATES

KtLiteralStringTemplateEntry(457,482): 'Without arguments version'
  NO_CANDIDATES

KtNamedFunction(488,529): 'fun test1() {'
  NO_CANDIDATES

KtParameterList(497,499): '()'
  NO_CANDIDATES

KtBlockExpression(500,529): '{'
  NO_CANDIDATES

KtCallExpression(506,527): 'overload2(EnumValue1)'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /overload2(): kotlin.Unit
          valueParameters = []
          contextParameters = []
          callableId = /overload2
      typeArgumentsMapping = {}
    diagnostic = ERROR<TOO_MANY_ARGUMENTS: Too many arguments for 'fun overload2(): Unit'.>
    isInBestCandidates = false

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        EnumValue1 -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyEnum
          symbol = arg: MyEnum
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /overload2(arg: MyEnum): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyEnum
              symbol = arg: MyEnum
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /overload2
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(506,515): 'overload2'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /overload2(): kotlin.Unit
          valueParameters = []
          contextParameters = []
          callableId = /overload2
      typeArgumentsMapping = {}
    diagnostic = ERROR<TOO_MANY_ARGUMENTS: Too many arguments for 'fun overload2(): Unit'.>
    isInBestCandidates = false

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        EnumValue1 -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyEnum
          symbol = arg: MyEnum
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /overload2(arg: MyEnum): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyEnum
              symbol = arg: MyEnum
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /overload2
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(515,527): '(EnumValue1)'
  NO_CANDIDATES

KtValueArgument(516,526): 'EnumValue1'
  NO_CANDIDATES

KtNameReferenceExpression(516,526): 'EnumValue1'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = EnumValue1
          isSafeNavigation = false
          type = kotlin.Unit
        extensionReceiver = null
        signature = KaVariableSignature:
          name = EnumValue1
          receiverType = null
          returnType = MyEnum
          symbol = /MyEnum.EnumValue1
          contextParameters = []
          callableId = /MyEnum.EnumValue1
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNamedFunction(530,584): 'fun overload3(arg: MyEnum) { println("Enum version") }'
  NO_CANDIDATES

KtParameterList(543,556): '(arg: MyEnum)'
  NO_CANDIDATES

KtParameter(544,555): 'arg: MyEnum'
  NO_CANDIDATES

KtTypeReference(549,555): 'MyEnum'
  NO_CANDIDATES

KtUserType(549,555): 'MyEnum'
  NO_CANDIDATES

KtNameReferenceExpression(549,555): 'MyEnum'
  NO_CANDIDATES

KtBlockExpression(557,584): '{ println("Enum version") }'
  NO_CANDIDATES

KtCallExpression(559,582): 'println("Enum version")'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(): kotlin.Unit
          valueParameters = []
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<TOO_MANY_ARGUMENTS: Too many arguments for 'fun println(): Unit'.>
    isInBestCandidates = false

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Any?
          symbol = message: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Any?): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Any?
              symbol = message: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Boolean
          symbol = message: kotlin.Boolean
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Boolean): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Boolean
              symbol = message: kotlin.Boolean
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Boolean' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Byte
          symbol = message: kotlin.Byte
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Byte): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Byte
              symbol = message: kotlin.Byte
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Byte' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Char
          symbol = message: kotlin.Char
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Char): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Char
              symbol = message: kotlin.Char
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Char' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.CharArray
          symbol = message: kotlin.CharArray
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.CharArray): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.CharArray
              symbol = message: kotlin.CharArray
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'CharArray' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Double
          symbol = message: kotlin.Double
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Double): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Double
              symbol = message: kotlin.Double
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Double' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Float
          symbol = message: kotlin.Float
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Float): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Float
              symbol = message: kotlin.Float
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Float' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Int
          symbol = message: kotlin.Int
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Int): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Int
              symbol = message: kotlin.Int
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Int' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Long
          symbol = message: kotlin.Long
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Long): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Long
              symbol = message: kotlin.Long
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Long' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Short
          symbol = message: kotlin.Short
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Short): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Short
              symbol = message: kotlin.Short
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Short' was expected.>
    isInBestCandidates = false

KtNameReferenceExpression(559,566): 'println'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(): kotlin.Unit
          valueParameters = []
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<TOO_MANY_ARGUMENTS: Too many arguments for 'fun println(): Unit'.>
    isInBestCandidates = false

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Any?
          symbol = message: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Any?): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Any?
              symbol = message: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Boolean
          symbol = message: kotlin.Boolean
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Boolean): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Boolean
              symbol = message: kotlin.Boolean
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Boolean' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Byte
          symbol = message: kotlin.Byte
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Byte): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Byte
              symbol = message: kotlin.Byte
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Byte' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Char
          symbol = message: kotlin.Char
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Char): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Char
              symbol = message: kotlin.Char
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Char' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.CharArray
          symbol = message: kotlin.CharArray
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.CharArray): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.CharArray
              symbol = message: kotlin.CharArray
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'CharArray' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Double
          symbol = message: kotlin.Double
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Double): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Double
              symbol = message: kotlin.Double
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Double' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Float
          symbol = message: kotlin.Float
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Float): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Float
              symbol = message: kotlin.Float
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Float' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Int
          symbol = message: kotlin.Int
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Int): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Int
              symbol = message: kotlin.Int
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Int' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Long
          symbol = message: kotlin.Long
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Long): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Long
              symbol = message: kotlin.Long
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Long' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "Enum version" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Short
          symbol = message: kotlin.Short
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Short): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Short
              symbol = message: kotlin.Short
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Short' was expected.>
    isInBestCandidates = false

KtValueArgumentList(566,582): '("Enum version")'
  NO_CANDIDATES

KtValueArgument(567,581): '"Enum version"'
  NO_CANDIDATES

KtStringTemplateExpression(567,581): '"Enum version"'
  NO_CANDIDATES

KtLiteralStringTemplateEntry(568,580): 'Enum version'
  NO_CANDIDATES

KtNamedFunction(585,659): 'fun overload3(arg: MyEnum, s: String = "") { println("With 2 arguments") }'
  NO_CANDIDATES

KtParameterList(598,627): '(arg: MyEnum, s: String = "")'
  NO_CANDIDATES

KtParameter(599,610): 'arg: MyEnum'
  NO_CANDIDATES

KtTypeReference(604,610): 'MyEnum'
  NO_CANDIDATES

KtUserType(604,610): 'MyEnum'
  NO_CANDIDATES

KtNameReferenceExpression(604,610): 'MyEnum'
  NO_CANDIDATES

KtParameter(612,626): 's: String = ""'
  NO_CANDIDATES

KtTypeReference(615,621): 'String'
  NO_CANDIDATES

KtUserType(615,621): 'String'
  NO_CANDIDATES

KtNameReferenceExpression(615,621): 'String'
  NO_CANDIDATES

KtStringTemplateExpression(624,626): '""'
  NO_CANDIDATES

KtBlockExpression(628,659): '{ println("With 2 arguments") }'
  NO_CANDIDATES

KtCallExpression(630,657): 'println("With 2 arguments")'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(): kotlin.Unit
          valueParameters = []
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<TOO_MANY_ARGUMENTS: Too many arguments for 'fun println(): Unit'.>
    isInBestCandidates = false

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "With 2 arguments" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Any?
          symbol = message: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Any?): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Any?
              symbol = message: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "With 2 arguments" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Boolean
          symbol = message: kotlin.Boolean
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Boolean): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Boolean
              symbol = message: kotlin.Boolean
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Boolean' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "With 2 arguments" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Byte
          symbol = message: kotlin.Byte
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Byte): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Byte
              symbol = message: kotlin.Byte
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Byte' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "With 2 arguments" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Char
          symbol = message: kotlin.Char
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Char): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Char
              symbol = message: kotlin.Char
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Char' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "With 2 arguments" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.CharArray
          symbol = message: kotlin.CharArray
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.CharArray): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.CharArray
              symbol = message: kotlin.CharArray
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'CharArray' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "With 2 arguments" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Double
          symbol = message: kotlin.Double
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Double): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Double
              symbol = message: kotlin.Double
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Double' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "With 2 arguments" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Float
          symbol = message: kotlin.Float
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Float): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Float
              symbol = message: kotlin.Float
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Float' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "With 2 arguments" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Int
          symbol = message: kotlin.Int
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Int): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Int
              symbol = message: kotlin.Int
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Int' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "With 2 arguments" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Long
          symbol = message: kotlin.Long
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Long): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Long
              symbol = message: kotlin.Long
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Long' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "With 2 arguments" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Short
          symbol = message: kotlin.Short
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Short): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Short
              symbol = message: kotlin.Short
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Short' was expected.>
    isInBestCandidates = false

KtNameReferenceExpression(630,637): 'println'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(): kotlin.Unit
          valueParameters = []
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<TOO_MANY_ARGUMENTS: Too many arguments for 'fun println(): Unit'.>
    isInBestCandidates = false

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "With 2 arguments" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Any?
          symbol = message: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Any?): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Any?
              symbol = message: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "With 2 arguments" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Boolean
          symbol = message: kotlin.Boolean
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Boolean): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Boolean
              symbol = message: kotlin.Boolean
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Boolean' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "With 2 arguments" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Byte
          symbol = message: kotlin.Byte
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Byte): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Byte
              symbol = message: kotlin.Byte
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Byte' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "With 2 arguments" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Char
          symbol = message: kotlin.Char
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Char): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Char
              symbol = message: kotlin.Char
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Char' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "With 2 arguments" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.CharArray
          symbol = message: kotlin.CharArray
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.CharArray): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.CharArray
              symbol = message: kotlin.CharArray
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'CharArray' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "With 2 arguments" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Double
          symbol = message: kotlin.Double
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Double): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Double
              symbol = message: kotlin.Double
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Double' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "With 2 arguments" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Float
          symbol = message: kotlin.Float
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Float): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Float
              symbol = message: kotlin.Float
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Float' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "With 2 arguments" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Int
          symbol = message: kotlin.Int
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Int): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Int
              symbol = message: kotlin.Int
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Int' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "With 2 arguments" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Long
          symbol = message: kotlin.Long
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Long): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Long
              symbol = message: kotlin.Long
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Long' was expected.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        "With 2 arguments" -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.Short
          symbol = message: kotlin.Short
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = kotlin/io/println(message: kotlin.Short): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.Short
              symbol = message: kotlin.Short
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/io/println
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Short' was expected.>
    isInBestCandidates = false

KtValueArgumentList(637,657): '("With 2 arguments")'
  NO_CANDIDATES

KtValueArgument(638,656): '"With 2 arguments"'
  NO_CANDIDATES

KtStringTemplateExpression(638,656): '"With 2 arguments"'
  NO_CANDIDATES

KtLiteralStringTemplateEntry(639,655): 'With 2 arguments'
  NO_CANDIDATES

KtNamedFunction(661,702): 'fun test2() {'
  NO_CANDIDATES

KtParameterList(670,672): '()'
  NO_CANDIDATES

KtBlockExpression(673,702): '{'
  NO_CANDIDATES

KtCallExpression(679,700): 'overload3(EnumValue1)'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        EnumValue1 -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyEnum
          symbol = arg: MyEnum
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /overload3(arg: MyEnum): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyEnum
              symbol = arg: MyEnum
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /overload3
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        EnumValue1 -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyEnum
          symbol = arg: MyEnum
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /overload3(arg: MyEnum, s: kotlin.String): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyEnum
              symbol = arg: MyEnum
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = s
              receiverType = null
              returnType = kotlin.String
              symbol = s: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /overload3
      typeArgumentsMapping = {}
    isInBestCandidates = false

KtNameReferenceExpression(679,688): 'overload3'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        EnumValue1 -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyEnum
          symbol = arg: MyEnum
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /overload3(arg: MyEnum): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyEnum
              symbol = arg: MyEnum
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /overload3
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        EnumValue1 -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyEnum
          symbol = arg: MyEnum
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /overload3(arg: MyEnum, s: kotlin.String): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyEnum
              symbol = arg: MyEnum
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = s
              receiverType = null
              returnType = kotlin.String
              symbol = s: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /overload3
      typeArgumentsMapping = {}
    isInBestCandidates = false

KtValueArgumentList(688,700): '(EnumValue1)'
  NO_CANDIDATES

KtValueArgument(689,699): 'EnumValue1'
  NO_CANDIDATES

KtNameReferenceExpression(689,699): 'EnumValue1'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = EnumValue1
          isSafeNavigation = false
          type = kotlin.Unit
        extensionReceiver = null
        signature = KaVariableSignature:
          name = EnumValue1
          receiverType = null
          returnType = MyEnum
          symbol = /MyEnum.EnumValue1
          contextParameters = []
          callableId = /MyEnum.EnumValue1
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true