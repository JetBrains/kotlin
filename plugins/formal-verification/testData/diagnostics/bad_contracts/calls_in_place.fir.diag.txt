/calls_in_place.kt:(450,472): info: Generated Viper text for incorrect_at_most_once:
method global$fun_incorrect_at_most_once$fun_take$fun_take$T_Int$return$T_Int$return$T_Int(local$f: Ref)
  returns (ret: Int)
  requires acc(local$f.special$function_object_call_counter, write)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
  ensures local$f.special$function_object_call_counter <=
    old(local$f.special$function_object_call_counter) + 1
{
  var anonymous$0: Int
  var anonymous$1: Int
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$f): dom$Type), dom$Type$Function())
  anonymous$0 := global$fun_unknown$fun_take$fun_take$T_Int$return$T_Int$return$T_Int(local$f)
  special$invoke_function_object(local$f)
  ret := anonymous$1
  goto label$ret$0
  label label$ret$0
}

method global$fun_unknown$fun_take$fun_take$T_Int$return$T_Int$return$T_Int(local$f: Ref)
  returns (ret: Int)
  requires acc(local$f.special$function_object_call_counter, write)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
  ensures true


/calls_in_place.kt:(450,472): warning: Function incorrect_at_most_once may not satisfy its contract.

/calls_in_place.kt:(521,550): warning: Viper verification error: Postcondition of global$fun_incorrect_at_most_once$fun_take$fun_take$T_Int$return$T_Int$return$T_Int might not hold. Assertion local$f.special$function_object_call_counter <= old(local$f.special$function_object_call_counter) + 1 might not hold.

/calls_in_place.kt:(661,683): info: Generated Viper text for incorrect_exactly_once:
method global$fun_incorrect_exactly_once$fun_take$fun_take$T_Int$return$T_Int$return$T_Int(local$f: Ref)
  returns (ret: Int)
  requires acc(local$f.special$function_object_call_counter, write)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
  ensures local$f.special$function_object_call_counter ==
    old(local$f.special$function_object_call_counter) + 1
{
  var anonymous$0: Int
  var anonymous$1: Int
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$f): dom$Type), dom$Type$Function())
  special$invoke_function_object(local$f)
  special$invoke_function_object(local$f)
  ret := anonymous$1
  goto label$ret$0
  label label$ret$0
}

/calls_in_place.kt:(661,683): warning: Function incorrect_exactly_once may not satisfy its contract.

/calls_in_place.kt:(732,761): warning: Viper verification error: Postcondition of global$fun_incorrect_exactly_once$fun_take$fun_take$T_Int$return$T_Int$return$T_Int might not hold. Assertion local$f.special$function_object_call_counter == old(local$f.special$function_object_call_counter) + 1 might not hold.

/calls_in_place.kt:(866,889): info: Generated Viper text for incorrect_at_least_once:
method global$fun_incorrect_at_least_once$fun_take$fun_take$T_Int$return$T_Int$return$T_Int(local$f: Ref)
  returns (ret: Int)
  requires acc(local$f.special$function_object_call_counter, write)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
  ensures local$f.special$function_object_call_counter >
    old(local$f.special$function_object_call_counter)
{
  var anonymous$0: Int
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$f): dom$Type), dom$Type$Function())
  anonymous$0 := global$fun_unknown$fun_take$fun_take$T_Int$return$T_Int$return$T_Int(local$f)
  ret := anonymous$0
  goto label$ret$0
  label label$ret$0
}

method global$fun_unknown$fun_take$fun_take$T_Int$return$T_Int$return$T_Int(local$f: Ref)
  returns (ret: Int)
  requires acc(local$f.special$function_object_call_counter, write)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
  ensures true


/calls_in_place.kt:(866,889): warning: Function incorrect_at_least_once may not satisfy its contract.

/calls_in_place.kt:(938,968): warning: Viper verification error: Postcondition of global$fun_incorrect_at_least_once$fun_take$fun_take$T_Int$return$T_Int$return$T_Int might not hold. Assertion local$f.special$function_object_call_counter > old(local$f.special$function_object_call_counter) might not hold.

/calls_in_place.kt:(1150,1183): info: Generated Viper text for incorrect_exactly_once_with_catch:
method global$fun_incorrect_exactly_once_with_catch$fun_take$fun_take$$return$T_Unit$return$T_Unit(local$f: Ref)
  returns (ret: dom$Unit)
  requires acc(local$f.special$function_object_call_counter, write)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
  ensures local$f.special$function_object_call_counter ==
    old(local$f.special$function_object_call_counter) + 1
{
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$f): dom$Type), dom$Type$Function())
  if (true) {
    var anonymous$0: Bool
    var anonymous$1: dom$Unit
    var anonymous$2: Bool
    if (anonymous$0) {
      goto label$catch$0
    }
    special$invoke_function_object(local$f)
    if (anonymous$2) {
      goto label$catch$0
    }
    goto label$try_exit$0
  }
  if (true) {
    label label$catch$0
    goto label$try_exit$0
  }
  label label$try_exit$0
  label label$ret$0
}

/calls_in_place.kt:(1150,1183): warning: Function incorrect_exactly_once_with_catch may not satisfy its contract.

/calls_in_place.kt:(1232,1261): warning: Viper verification error: Postcondition of global$fun_incorrect_exactly_once_with_catch$fun_take$fun_take$$return$T_Unit$return$T_Unit might not hold. Assertion local$f.special$function_object_call_counter == old(local$f.special$function_object_call_counter) + 1 might not hold.

/calls_in_place.kt:(1478,1519): info: Generated Viper text for incorrect_exactly_once_with_call_in_catch:
method global$fun_incorrect_exactly_once_with_call_in_catch$fun_take$fun_take$$return$T_Unit$return$T_Unit(local$f: Ref)
  returns (ret: dom$Unit)
  requires acc(local$f.special$function_object_call_counter, write)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
  ensures local$f.special$function_object_call_counter ==
    old(local$f.special$function_object_call_counter) + 1
{
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$f): dom$Type), dom$Type$Function())
  if (true) {
    var anonymous$0: Bool
    var anonymous$1: dom$Unit
    var anonymous$2: Bool
    if (anonymous$0) {
      goto label$catch$0
    }
    special$invoke_function_object(local$f)
    if (anonymous$2) {
      goto label$catch$0
    }
    goto label$try_exit$0
  }
  if (true) {
    var anonymous$3: dom$Unit
    label label$catch$0
    special$invoke_function_object(local$f)
    goto label$try_exit$0
  }
  label label$try_exit$0
  label label$ret$0
}

/calls_in_place.kt:(1478,1519): warning: Function incorrect_exactly_once_with_call_in_catch may not satisfy its contract.

/calls_in_place.kt:(1568,1597): warning: Viper verification error: Postcondition of global$fun_incorrect_exactly_once_with_call_in_catch$fun_take$fun_take$$return$T_Unit$return$T_Unit might not hold. Assertion local$f.special$function_object_call_counter == old(local$f.special$function_object_call_counter) + 1 might not hold.
