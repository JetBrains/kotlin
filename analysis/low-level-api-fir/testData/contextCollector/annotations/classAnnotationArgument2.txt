Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Implicit receiver:
            FirRegularClassSymbol public final companion object Companion : R|kotlin/Any|
                Type: pack.TopLevelClass.Companion
    Element 7
        Scope: FirNestedClassifierScopeImpl
            Classifiers:
                FirRegularClassSymbol public final companion object Companion : R|kotlin/Any|
                FirRegularClassSymbol public final class NestedClass : R|kotlin/Any|

FILE: [ResolvedTo(IMPORTS)] classAnnotationArgument2.kt
    public final [ResolvedTo(STATUS)] annotation class Anno : R|kotlin/Annotation| {
        public [ResolvedTo(STATUS)] constructor([ResolvedTo(STATUS)] s: R|kotlin/String|): R|pack/Anno| {
            LAZY_super<R|kotlin/Any|>
        }

        public final [ResolvedTo(STATUS)] val s: R|kotlin/String| = R|<local>/s|
            public [ResolvedTo(STATUS)] get(): R|kotlin/String|

    }
    public final [ResolvedTo(STATUS)] class TopLevelClass : R|kotlin/Any| {
        public [ResolvedTo(STATUS)] constructor([ResolvedTo(STATUS)] i: R|kotlin/Int|): R|pack/TopLevelClass| {
            LAZY_super<R|kotlin/Any|>
        }

        public final [ResolvedTo(STATUS)] val i: R|kotlin/Int| = R|<local>/i|
            public [ResolvedTo(STATUS)] get(): R|kotlin/Int|

        @R|pack/Anno|[Types](s = this@R|pack/TopLevelClass.Companion|.R|pack/TopLevelClass.Companion.CONSTANT|) public final [ResolvedTo(ANNOTATION_ARGUMENTS)] class NestedClass : R|kotlin/Any| {
            public [ResolvedTo(BODY_RESOLVE)] constructor([ResolvedTo(BODY_RESOLVE)] d: R|kotlin/Double|): R|pack/TopLevelClass.NestedClass| {
                super<R|kotlin/Any|>()
            }

            public final [ResolvedTo(BODY_RESOLVE)] val d: R|kotlin/Double| = R|<local>/d|
                public [ResolvedTo(BODY_RESOLVE)] get(): R|kotlin/Double|

            public final companion [ResolvedTo(ANNOTATION_ARGUMENTS)] object Companion : R|kotlin/Any| {
                private [ResolvedTo(BODY_RESOLVE)] constructor(): R|pack/TopLevelClass.NestedClass.Companion| {
                    super<R|kotlin/Any|>()
                }

                public final const [ResolvedTo(BODY_RESOLVE)] val CONSTANT: R|kotlin/Int| = Int(1)
                    public [ResolvedTo(BODY_RESOLVE)] get(): R|kotlin/Int|

            }

        }

        public final companion [ResolvedTo(STATUS)] object Companion : R|kotlin/Any| {
            private [ResolvedTo(STATUS)] constructor(): R|pack/TopLevelClass.Companion| {
                LAZY_super<R|kotlin/Any|>
            }

            public final const [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] val CONSTANT: R|kotlin/String| = String(str)
                public [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] get(): R|kotlin/String|

        }

    }
