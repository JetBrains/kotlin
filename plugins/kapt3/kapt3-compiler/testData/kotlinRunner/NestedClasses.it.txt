package error;

public final class NonExistentClass {
}

////////////////////

package kapt.internal;

public @interface KaptMetadata {

    public java.lang.String value();
}

////////////////////

package kapt.internal;

public @interface KaptSignature {

    public java.lang.String value();
}

////////////////////

package test;

@kotlin.Metadata()
@java.lang.annotation.Retention(value = java.lang.annotation.RetentionPolicy.RUNTIME)
@kapt.internal.KaptMetadata()
public abstract @interface MyAnnotation {
}

////////////////////

package test;

@kotlin.Metadata()
@kapt.internal.KaptMetadata()
public final class Simple {
    public static final test.Simple.Companion Companion = null;

    @MyAnnotation()
    @kapt.internal.KaptSignature("myMethod()V")
    public final void myMethod() {
    }

    @kapt.internal.KaptSignature("<init>()V")
    public Simple() {
        super();
    }

    @kotlin.Metadata()
    public static final class NestedClass {

        @kapt.internal.KaptSignature("<init>()V")
        public NestedClass() {
            super();
        }

        @kotlin.Metadata()
        public static final class NestedNestedClass {

            @kapt.internal.KaptSignature("<init>()V")
            public NestedNestedClass() {
                super();
            }
        }
    }

    @kotlin.Metadata()
    public final class InnerClass {

        @kapt.internal.KaptSignature("<init>(Ltest/Simple;)V")
        public InnerClass() {
            super();
        }
    }

    @kotlin.Metadata()
    public static final class Companion {

        @kapt.internal.KaptSignature("<init>()V")
        private Companion() {
            super();
        }
    }
}
