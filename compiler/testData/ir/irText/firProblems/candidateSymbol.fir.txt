FILE fqName:<root> fileName:/candidateSymbol.kt
  CLASS CLASS name:Candidate modality:FINAL visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Candidate
    CONSTRUCTOR visibility:public <> (symbol:<root>.AbstractFirBasedSymbol<*>) returnType:<root>.Candidate [primary]
      VALUE_PARAMETER name:symbol index:0 type:<root>.AbstractFirBasedSymbol<*>
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Candidate modality:FINAL visibility:public superTypes:[kotlin.Any]'
    PROPERTY name:symbol visibility:public modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:symbol type:<root>.AbstractFirBasedSymbol<*> visibility:private [final]
        EXPRESSION_BODY
          GET_VAR 'symbol: <root>.AbstractFirBasedSymbol<*> declared in <root>.Candidate.<init>' type=<root>.AbstractFirBasedSymbol<*> origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-symbol> visibility:public modality:FINAL <> ($this:<root>.Candidate) returnType:<root>.AbstractFirBasedSymbol<*>
        correspondingProperty: PROPERTY name:symbol visibility:public modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.Candidate
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-symbol> (): <root>.AbstractFirBasedSymbol<*> declared in <root>.Candidate'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:symbol type:<root>.AbstractFirBasedSymbol<*> visibility:private [final]' type=<root>.AbstractFirBasedSymbol<*> origin=null
              receiver: GET_VAR '<this>: <root>.Candidate declared in <root>.Candidate.<get-symbol>' type=<root>.Candidate origin=null
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  CLASS CLASS name:AbstractFirBasedSymbol modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.AbstractFirBasedSymbol<E of <root>.AbstractFirBasedSymbol>
    TYPE_PARAMETER name:E index:0 variance: superTypes:[<root>.FirSymbolOwner<E of <root>.AbstractFirBasedSymbol>; <root>.FirDeclaration]
    CONSTRUCTOR visibility:public <> () returnType:<root>.AbstractFirBasedSymbol<E of <root>.AbstractFirBasedSymbol> [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:AbstractFirBasedSymbol modality:ABSTRACT visibility:public superTypes:[kotlin.Any]'
    PROPERTY name:fir visibility:public modality:FINAL [lateinit,var]
      FIELD PROPERTY_BACKING_FIELD name:fir type:E of <root>.AbstractFirBasedSymbol visibility:public
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-fir> visibility:public modality:FINAL <> ($this:<root>.AbstractFirBasedSymbol<E of <root>.AbstractFirBasedSymbol>) returnType:E of <root>.AbstractFirBasedSymbol
        correspondingProperty: PROPERTY name:fir visibility:public modality:FINAL [lateinit,var]
        $this: VALUE_PARAMETER name:<this> type:<root>.AbstractFirBasedSymbol<E of <root>.AbstractFirBasedSymbol>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-fir> (): E of <root>.AbstractFirBasedSymbol declared in <root>.AbstractFirBasedSymbol'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:fir type:E of <root>.AbstractFirBasedSymbol visibility:public' type=E of <root>.AbstractFirBasedSymbol origin=null
              receiver: GET_VAR '<this>: <root>.AbstractFirBasedSymbol<E of <root>.AbstractFirBasedSymbol> declared in <root>.AbstractFirBasedSymbol.<get-fir>' type=<root>.AbstractFirBasedSymbol<E of <root>.AbstractFirBasedSymbol> origin=null
      FUN DEFAULT_PROPERTY_ACCESSOR name:<set-fir> visibility:public modality:FINAL <> ($this:<root>.AbstractFirBasedSymbol<E of <root>.AbstractFirBasedSymbol>, <set-?>:E of <root>.AbstractFirBasedSymbol) returnType:kotlin.Unit
        correspondingProperty: PROPERTY name:fir visibility:public modality:FINAL [lateinit,var]
        $this: VALUE_PARAMETER name:<this> type:<root>.AbstractFirBasedSymbol<E of <root>.AbstractFirBasedSymbol>
        VALUE_PARAMETER name:<set-?> index:0 type:E of <root>.AbstractFirBasedSymbol
        BLOCK_BODY
          SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:fir type:E of <root>.AbstractFirBasedSymbol visibility:public' type=kotlin.Unit origin=null
            receiver: GET_VAR '<this>: <root>.AbstractFirBasedSymbol<E of <root>.AbstractFirBasedSymbol> declared in <root>.AbstractFirBasedSymbol.<set-fir>' type=<root>.AbstractFirBasedSymbol<E of <root>.AbstractFirBasedSymbol> origin=null
            value: GET_VAR '<set-?>: E of <root>.AbstractFirBasedSymbol declared in <root>.AbstractFirBasedSymbol.<set-fir>' type=E of <root>.AbstractFirBasedSymbol origin=null
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  CLASS INTERFACE name:FirDeclaration modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.FirDeclaration
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  CLASS INTERFACE name:FirSymbolOwner modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.FirSymbolOwner<E of <root>.FirSymbolOwner>
    TYPE_PARAMETER name:E index:0 variance: superTypes:[<root>.FirSymbolOwner<E of <root>.FirSymbolOwner>; <root>.FirDeclaration]
    PROPERTY name:symbol visibility:public modality:ABSTRACT [val]
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-symbol> visibility:public modality:ABSTRACT <> ($this:<root>.FirSymbolOwner<E of <root>.FirSymbolOwner>) returnType:<root>.AbstractFirBasedSymbol<E of <root>.FirSymbolOwner>
        correspondingProperty: PROPERTY name:symbol visibility:public modality:ABSTRACT [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.FirSymbolOwner<E of <root>.FirSymbolOwner>
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  CLASS INTERFACE name:FirCallableMemberDeclaration modality:ABSTRACT visibility:public superTypes:[<root>.FirSymbolOwner<F of <root>.FirCallableMemberDeclaration>; <root>.FirDeclaration]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.FirCallableMemberDeclaration<F of <root>.FirCallableMemberDeclaration>
    TYPE_PARAMETER name:F index:0 variance: superTypes:[<root>.FirCallableMemberDeclaration<F of <root>.FirCallableMemberDeclaration>]
    PROPERTY name:symbol visibility:public modality:ABSTRACT [val]
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-symbol> visibility:public modality:ABSTRACT <> ($this:<root>.FirCallableMemberDeclaration<F of <root>.FirCallableMemberDeclaration>) returnType:<root>.AbstractFirBasedSymbol<F of <root>.FirCallableMemberDeclaration>
        correspondingProperty: PROPERTY name:symbol visibility:public modality:ABSTRACT [val]
        overridden:
          public abstract fun <get-symbol> (): <root>.AbstractFirBasedSymbol<E of <root>.FirSymbolOwner> declared in <root>.FirSymbolOwner
        $this: VALUE_PARAMETER name:<this> type:<root>.FirCallableMemberDeclaration<F of <root>.FirCallableMemberDeclaration>
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  FUN name:foo visibility:public modality:FINAL <> (candidate:<root>.Candidate) returnType:kotlin.Unit
    VALUE_PARAMETER name:candidate index:0 type:<root>.Candidate
    BLOCK_BODY
      VAR name:me type:<root>.FirSymbolOwner<out <root>.FirSymbolOwner<out <root>.FirSymbolOwner<out <root>.FirSymbolOwner<out <root>.FirSymbolOwner<out kotlin.Any?>>>>> [val]
        CALL 'public final fun <get-fir> (): E of <root>.AbstractFirBasedSymbol declared in <root>.AbstractFirBasedSymbol' type=<root>.FirSymbolOwner<out <root>.FirSymbolOwner<out <root>.FirSymbolOwner<out <root>.FirSymbolOwner<out <root>.FirSymbolOwner<out kotlin.Any?>>>>> origin=GET_PROPERTY
          $this: CALL 'public final fun <get-symbol> (): <root>.AbstractFirBasedSymbol<*> declared in <root>.Candidate' type=<root>.AbstractFirBasedSymbol<*> origin=GET_PROPERTY
            $this: GET_VAR 'candidate: <root>.Candidate declared in <root>.foo' type=<root>.Candidate origin=null
      WHEN type=kotlin.Unit origin=IF
        BRANCH
          if: WHEN type=kotlin.Boolean origin=ANDAND
            BRANCH
              if: TYPE_OP type=kotlin.Boolean origin=INSTANCEOF typeOperand=<root>.FirCallableMemberDeclaration<*>
                GET_VAR 'val me: <root>.FirSymbolOwner<out <root>.FirSymbolOwner<out <root>.FirSymbolOwner<out <root>.FirSymbolOwner<out <root>.FirSymbolOwner<out kotlin.Any?>>>>> [val] declared in <root>.foo' type=<root>.FirSymbolOwner<out <root>.FirSymbolOwner<out <root>.FirSymbolOwner<out <root>.FirSymbolOwner<out <root>.FirSymbolOwner<out kotlin.Any?>>>>> origin=null
              then: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
                $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                  arg0: CALL 'public abstract fun <get-symbol> (): <root>.AbstractFirBasedSymbol<F of <root>.FirCallableMemberDeclaration> declared in <root>.FirCallableMemberDeclaration' type=<root>.AbstractFirBasedSymbol<out <root>.FirCallableMemberDeclaration<*>> origin=GET_PROPERTY
                    $this: TYPE_OP type=<root>.FirCallableMemberDeclaration<*> origin=IMPLICIT_CAST typeOperand=<root>.FirCallableMemberDeclaration<*>
                      GET_VAR 'val me: <root>.FirSymbolOwner<out <root>.FirSymbolOwner<out <root>.FirSymbolOwner<out <root>.FirSymbolOwner<out <root>.FirSymbolOwner<out kotlin.Any?>>>>> [val] declared in <root>.foo' type=<root>.FirSymbolOwner<out <root>.FirSymbolOwner<out <root>.FirSymbolOwner<out <root>.FirSymbolOwner<out <root>.FirSymbolOwner<out kotlin.Any?>>>>> origin=null
                  arg1: CONST Null type=kotlin.Nothing? value=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CONST Boolean type=kotlin.Boolean value=false
          then: BLOCK type=kotlin.Unit origin=null
