/*
 * Copyright 2010-2021 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.ir.declarations.persistent.carriers

import org.jetbrains.kotlin.ir.declarations.IrAttributeContainer
import org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin
import org.jetbrains.kotlin.ir.declarations.IrDeclarationParent
import org.jetbrains.kotlin.ir.declarations.IrField
import org.jetbrains.kotlin.ir.declarations.IrSimpleFunction
import org.jetbrains.kotlin.ir.declarations.MetadataSource
import org.jetbrains.kotlin.ir.expressions.IrConstructorCall

// Auto-generated by compiler/ir/ir.tree.persistent/generator/src/org/jetbrains/kotlin/ir/persistentIrGenerator/Main.kt. DO NOT EDIT!

internal interface PropertyCarrier : DeclarationCarrier{
    val backingFieldField: IrField?
    val getterField: IrSimpleFunction?
    val setterField: IrSimpleFunction?
    val metadataField: MetadataSource?
    val attributeOwnerIdField: IrAttributeContainer

    override fun clone(): PropertyCarrier {
        return PropertyCarrierImpl(
            lastModified,
            parentField,
            originField,
            annotationsField,
            backingFieldField,
            getterField,
            setterField,
            metadataField,
            attributeOwnerIdField
        )
    }
}

internal class PropertyCarrierImpl(
    override val lastModified: Int,
    override val parentField: IrDeclarationParent?,
    override val originField: IrDeclarationOrigin,
    override val annotationsField: List<IrConstructorCall>,
    override val backingFieldField: IrField?,
    override val getterField: IrSimpleFunction?,
    override val setterField: IrSimpleFunction?,
    override val metadataField: MetadataSource?,
    override val attributeOwnerIdField: IrAttributeContainer
) : PropertyCarrier
