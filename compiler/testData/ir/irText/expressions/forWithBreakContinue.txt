FILE /forWithBreakContinue.kt
  FUN public fun testForBreak1(ss: kotlin.collections.List<kotlin.String>): kotlin.Unit
    VALUE_PARAMETER value-parameter ss: kotlin.collections.List<kotlin.String>
    BLOCK_BODY
      BLOCK type=kotlin.Unit origin=FOR_LOOP
        VAR FOR_LOOP_ITERATOR val tmp0_iterator: kotlin.collections.Iterator<kotlin.String>
          CALL 'iterator(): Iterator<String>' type=kotlin.collections.Iterator<kotlin.String> origin=FOR_LOOP_ITERATOR
            $this: GET_VAR 'value-parameter ss: List<String>' type=kotlin.collections.List<kotlin.String> origin=null
        WHILE label=null origin=FOR_LOOP_INNER_WHILE
          condition: CALL 'hasNext(): Boolean' type=kotlin.Boolean origin=FOR_LOOP_HAS_NEXT
            $this: GET_VAR 'tmp0_iterator: Iterator<String>' type=kotlin.collections.Iterator<kotlin.String> origin=null
          body: BLOCK type=kotlin.Unit origin=FOR_LOOP_INNER_WHILE
            VAR FOR_LOOP_VARIABLE val s: kotlin.String
              CALL 'next(): String' type=kotlin.String origin=FOR_LOOP_NEXT
                $this: GET_VAR 'tmp0_iterator: Iterator<String>' type=kotlin.collections.Iterator<kotlin.String> origin=null
            BLOCK type=kotlin.Nothing origin=null
              BREAK label=null loop.label=null
  FUN public fun testForBreak2(ss: kotlin.collections.List<kotlin.String>): kotlin.Unit
    VALUE_PARAMETER value-parameter ss: kotlin.collections.List<kotlin.String>
    BLOCK_BODY
      BLOCK type=kotlin.Unit origin=FOR_LOOP
        VAR FOR_LOOP_ITERATOR val tmp0_iterator: kotlin.collections.Iterator<kotlin.String>
          CALL 'iterator(): Iterator<String>' type=kotlin.collections.Iterator<kotlin.String> origin=FOR_LOOP_ITERATOR
            $this: GET_VAR 'value-parameter ss: List<String>' type=kotlin.collections.List<kotlin.String> origin=null
        WHILE label=OUTER origin=FOR_LOOP_INNER_WHILE
          condition: CALL 'hasNext(): Boolean' type=kotlin.Boolean origin=FOR_LOOP_HAS_NEXT
            $this: GET_VAR 'tmp0_iterator: Iterator<String>' type=kotlin.collections.Iterator<kotlin.String> origin=null
          body: BLOCK type=kotlin.Unit origin=FOR_LOOP_INNER_WHILE
            VAR FOR_LOOP_VARIABLE val s1: kotlin.String
              CALL 'next(): String' type=kotlin.String origin=FOR_LOOP_NEXT
                $this: GET_VAR 'tmp0_iterator: Iterator<String>' type=kotlin.collections.Iterator<kotlin.String> origin=null
            BLOCK type=kotlin.Nothing origin=null
              BLOCK type=kotlin.Unit origin=FOR_LOOP
                VAR FOR_LOOP_ITERATOR val tmp1_iterator: kotlin.collections.Iterator<kotlin.String>
                  CALL 'iterator(): Iterator<String>' type=kotlin.collections.Iterator<kotlin.String> origin=FOR_LOOP_ITERATOR
                    $this: GET_VAR 'value-parameter ss: List<String>' type=kotlin.collections.List<kotlin.String> origin=null
                WHILE label=INNER origin=FOR_LOOP_INNER_WHILE
                  condition: CALL 'hasNext(): Boolean' type=kotlin.Boolean origin=FOR_LOOP_HAS_NEXT
                    $this: GET_VAR 'tmp1_iterator: Iterator<String>' type=kotlin.collections.Iterator<kotlin.String> origin=null
                  body: BLOCK type=kotlin.Unit origin=FOR_LOOP_INNER_WHILE
                    VAR FOR_LOOP_VARIABLE val s2: kotlin.String
                      CALL 'next(): String' type=kotlin.String origin=FOR_LOOP_NEXT
                        $this: GET_VAR 'tmp1_iterator: Iterator<String>' type=kotlin.collections.Iterator<kotlin.String> origin=null
                    BLOCK type=kotlin.Nothing origin=null
                      BREAK label=OUTER loop.label=OUTER
                      BREAK label=INNER loop.label=INNER
                      BREAK label=null loop.label=INNER
              BREAK label=OUTER loop.label=OUTER
  FUN public fun testForContinue1(ss: kotlin.collections.List<kotlin.String>): kotlin.Unit
    VALUE_PARAMETER value-parameter ss: kotlin.collections.List<kotlin.String>
    BLOCK_BODY
      BLOCK type=kotlin.Unit origin=FOR_LOOP
        VAR FOR_LOOP_ITERATOR val tmp0_iterator: kotlin.collections.Iterator<kotlin.String>
          CALL 'iterator(): Iterator<String>' type=kotlin.collections.Iterator<kotlin.String> origin=FOR_LOOP_ITERATOR
            $this: GET_VAR 'value-parameter ss: List<String>' type=kotlin.collections.List<kotlin.String> origin=null
        WHILE label=null origin=FOR_LOOP_INNER_WHILE
          condition: CALL 'hasNext(): Boolean' type=kotlin.Boolean origin=FOR_LOOP_HAS_NEXT
            $this: GET_VAR 'tmp0_iterator: Iterator<String>' type=kotlin.collections.Iterator<kotlin.String> origin=null
          body: BLOCK type=kotlin.Unit origin=FOR_LOOP_INNER_WHILE
            VAR FOR_LOOP_VARIABLE val s: kotlin.String
              CALL 'next(): String' type=kotlin.String origin=FOR_LOOP_NEXT
                $this: GET_VAR 'tmp0_iterator: Iterator<String>' type=kotlin.collections.Iterator<kotlin.String> origin=null
            BLOCK type=kotlin.Nothing origin=null
              CONTINUE label=null loop.label=null
  FUN public fun testForContinue2(ss: kotlin.collections.List<kotlin.String>): kotlin.Unit
    VALUE_PARAMETER value-parameter ss: kotlin.collections.List<kotlin.String>
    BLOCK_BODY
      BLOCK type=kotlin.Unit origin=FOR_LOOP
        VAR FOR_LOOP_ITERATOR val tmp0_iterator: kotlin.collections.Iterator<kotlin.String>
          CALL 'iterator(): Iterator<String>' type=kotlin.collections.Iterator<kotlin.String> origin=FOR_LOOP_ITERATOR
            $this: GET_VAR 'value-parameter ss: List<String>' type=kotlin.collections.List<kotlin.String> origin=null
        WHILE label=OUTER origin=FOR_LOOP_INNER_WHILE
          condition: CALL 'hasNext(): Boolean' type=kotlin.Boolean origin=FOR_LOOP_HAS_NEXT
            $this: GET_VAR 'tmp0_iterator: Iterator<String>' type=kotlin.collections.Iterator<kotlin.String> origin=null
          body: BLOCK type=kotlin.Unit origin=FOR_LOOP_INNER_WHILE
            VAR FOR_LOOP_VARIABLE val s1: kotlin.String
              CALL 'next(): String' type=kotlin.String origin=FOR_LOOP_NEXT
                $this: GET_VAR 'tmp0_iterator: Iterator<String>' type=kotlin.collections.Iterator<kotlin.String> origin=null
            BLOCK type=kotlin.Nothing origin=null
              BLOCK type=kotlin.Unit origin=FOR_LOOP
                VAR FOR_LOOP_ITERATOR val tmp1_iterator: kotlin.collections.Iterator<kotlin.String>
                  CALL 'iterator(): Iterator<String>' type=kotlin.collections.Iterator<kotlin.String> origin=FOR_LOOP_ITERATOR
                    $this: GET_VAR 'value-parameter ss: List<String>' type=kotlin.collections.List<kotlin.String> origin=null
                WHILE label=INNER origin=FOR_LOOP_INNER_WHILE
                  condition: CALL 'hasNext(): Boolean' type=kotlin.Boolean origin=FOR_LOOP_HAS_NEXT
                    $this: GET_VAR 'tmp1_iterator: Iterator<String>' type=kotlin.collections.Iterator<kotlin.String> origin=null
                  body: BLOCK type=kotlin.Unit origin=FOR_LOOP_INNER_WHILE
                    VAR FOR_LOOP_VARIABLE val s2: kotlin.String
                      CALL 'next(): String' type=kotlin.String origin=FOR_LOOP_NEXT
                        $this: GET_VAR 'tmp1_iterator: Iterator<String>' type=kotlin.collections.Iterator<kotlin.String> origin=null
                    BLOCK type=kotlin.Nothing origin=null
                      CONTINUE label=OUTER loop.label=OUTER
                      CONTINUE label=INNER loop.label=INNER
                      CONTINUE label=null loop.label=INNER
              CONTINUE label=OUTER loop.label=OUTER

