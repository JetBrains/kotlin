KtFile: stringLiterals.kt
  PACKAGE_DIRECTIVE
    <empty list>
  IMPORT_LIST
    <empty list>
  CLASS
    PsiComment(EOL_COMMENT)('// FILE: StringLiteral.kt')
    PsiWhiteSpace('\n')
    MODIFIER_LIST
      PsiElement(annotation)('annotation')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('StringLiteral')
    PRIMARY_CONSTRUCTOR
      VALUE_PARAMETER_LIST
        PsiElement(LPAR)('(')
        PsiWhiteSpace('\n    ')
        VALUE_PARAMETER
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          PsiElement(IDENTIFIER)('s1')
          PsiElement(COLON)(':')
          PsiWhiteSpace(' ')
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('String')
        PsiElement(COMMA)(',')
        PsiWhiteSpace('\n    ')
        VALUE_PARAMETER
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          PsiElement(IDENTIFIER)('s2')
          PsiElement(COLON)(':')
          PsiWhiteSpace(' ')
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('String')
        PsiElement(COMMA)(',')
        PsiWhiteSpace('\n    ')
        VALUE_PARAMETER
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          PsiElement(IDENTIFIER)('s3')
          PsiElement(COLON)(':')
          PsiWhiteSpace(' ')
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('String')
        PsiWhiteSpace('\n')
        PsiElement(RPAR)(')')
  PsiWhiteSpace('\n\n')
  PROPERTY
    MODIFIER_LIST
      PsiElement(const)('const')
    PsiWhiteSpace(' ')
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('CONSTANT')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    INTEGER_CONSTANT
      PsiElement(INTEGER_LITERAL)('0')
  PsiWhiteSpace('\n\n')
  CLASS
    PsiComment(EOL_COMMENT)('// FILE: WithStringLiteral.kt')
    PsiWhiteSpace('\n')
    MODIFIER_LIST
      ANNOTATION_ENTRY
        PsiElement(AT)('@')
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('StringLiteral')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            STRING_TEMPLATE
              PsiElement(OPEN_QUOTE)('"')
              LITERAL_STRING_TEMPLATE_ENTRY
                PsiElement(REGULAR_STRING_PART)('some')
              PsiElement(CLOSING_QUOTE)('"')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          VALUE_ARGUMENT
            STRING_TEMPLATE
              PsiElement(OPEN_QUOTE)('"')
              PsiElement(CLOSING_QUOTE)('"')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          VALUE_ARGUMENT
            STRING_TEMPLATE
              PsiElement(OPEN_QUOTE)('"')
              LITERAL_STRING_TEMPLATE_ENTRY
                PsiElement(REGULAR_STRING_PART)('H')
              SHORT_STRING_TEMPLATE_ENTRY
                PsiElement(SHORT_TEMPLATE_ENTRY_START)('$')
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('CONSTANT')
              PsiElement(CLOSING_QUOTE)('"')
          PsiElement(RPAR)(')')
    PsiWhiteSpace('\n')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('WithStringLiteral')
  PsiWhiteSpace('\n\n')
  CLASS
    PsiComment(EOL_COMMENT)('// FILE: WithStringLiteralConcat.kt')
    PsiWhiteSpace('\n')
    MODIFIER_LIST
      ANNOTATION_ENTRY
        PsiElement(AT)('@')
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('StringLiteral')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            BINARY_EXPRESSION
              STRING_TEMPLATE
                PsiElement(OPEN_QUOTE)('"')
                LITERAL_STRING_TEMPLATE_ENTRY
                  PsiElement(REGULAR_STRING_PART)('some')
                PsiElement(CLOSING_QUOTE)('"')
              PsiWhiteSpace(' ')
              OPERATION_REFERENCE
                PsiElement(PLUS)('+')
              PsiWhiteSpace(' ')
              STRING_TEMPLATE
                PsiElement(OPEN_QUOTE)('"')
                LITERAL_STRING_TEMPLATE_ENTRY
                  PsiElement(REGULAR_STRING_PART)('1')
                PsiElement(CLOSING_QUOTE)('"')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          VALUE_ARGUMENT
            BINARY_EXPRESSION
              BINARY_EXPRESSION
                STRING_TEMPLATE
                  PsiElement(OPEN_QUOTE)('"')
                  PsiElement(CLOSING_QUOTE)('"')
                PsiWhiteSpace(' ')
                OPERATION_REFERENCE
                  PsiElement(PLUS)('+')
                PsiWhiteSpace(' ')
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('CONSTANT')
              PsiWhiteSpace(' ')
              OPERATION_REFERENCE
                PsiElement(PLUS)('+')
              PsiWhiteSpace(' ')
              STRING_TEMPLATE
                PsiElement(OPEN_QUOTE)('"')
                LITERAL_STRING_TEMPLATE_ENTRY
                  PsiElement(REGULAR_STRING_PART)('2')
                PsiElement(CLOSING_QUOTE)('"')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          VALUE_ARGUMENT
            BINARY_EXPRESSION
              STRING_TEMPLATE
                PsiElement(OPEN_QUOTE)('"')
                SHORT_STRING_TEMPLATE_ENTRY
                  PsiElement(SHORT_TEMPLATE_ENTRY_START)('$')
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('CONSTANT')
                PsiElement(CLOSING_QUOTE)('"')
              PsiWhiteSpace(' ')
              OPERATION_REFERENCE
                PsiElement(PLUS)('+')
              PsiWhiteSpace(' ')
              STRING_TEMPLATE
                PsiElement(OPEN_QUOTE)('"')
                LITERAL_STRING_TEMPLATE_ENTRY
                  PsiElement(REGULAR_STRING_PART)('3')
                PsiElement(CLOSING_QUOTE)('"')
          PsiElement(RPAR)(')')
    PsiWhiteSpace('\n')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('WithStringLiteralConcat')
  PsiWhiteSpace('\n\n')
  CLASS
    PsiComment(EOL_COMMENT)('// FILE: WithStringInterpolationPrefix.kt')
    PsiWhiteSpace('\n')
    MODIFIER_LIST
      ANNOTATION_ENTRY
        PsiElement(AT)('@')
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('StringLiteral')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            STRING_TEMPLATE
              STRING_INTERPOLATION_PREFIX
                PsiElement(INTERPOLATION_PREFIX)('$')
              PsiElement(OPEN_QUOTE)('"')
              SHORT_STRING_TEMPLATE_ENTRY
                PsiElement(SHORT_TEMPLATE_ENTRY_START)('$')
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('CONSTANT')
              PsiElement(CLOSING_QUOTE)('"')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          VALUE_ARGUMENT
            STRING_TEMPLATE
              STRING_INTERPOLATION_PREFIX
                PsiElement(INTERPOLATION_PREFIX)('$$')
              PsiElement(OPEN_QUOTE)('"')
              SHORT_STRING_TEMPLATE_ENTRY
                PsiElement(SHORT_TEMPLATE_ENTRY_START)('$$')
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('CONSTANT')
              PsiElement(CLOSING_QUOTE)('"')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          VALUE_ARGUMENT
            STRING_TEMPLATE
              STRING_INTERPOLATION_PREFIX
                PsiElement(INTERPOLATION_PREFIX)('$$$')
              PsiElement(OPEN_QUOTE)('"')
              SHORT_STRING_TEMPLATE_ENTRY
                PsiElement(SHORT_TEMPLATE_ENTRY_START)('$$$')
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('CONSTANT')
              PsiElement(CLOSING_QUOTE)('"')
          PsiElement(RPAR)(')')
    PsiWhiteSpace('\n')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('WithStringInterpolationPrefix')
  PsiWhiteSpace('\n\n')
  CLASS
    PsiComment(EOL_COMMENT)('// FILE: WithStringConstant.kt')
    PsiWhiteSpace('\n')
    MODIFIER_LIST
      ANNOTATION_ENTRY
        PsiElement(AT)('@')
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('StringLiteral')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            STRING_TEMPLATE
              PsiElement(OPEN_QUOTE)('"')
              LITERAL_STRING_TEMPLATE_ENTRY
                PsiElement(REGULAR_STRING_PART)('some ')
              LONG_STRING_TEMPLATE_ENTRY
                PsiElement(LONG_TEMPLATE_ENTRY_START)('${')
                INTEGER_CONSTANT
                  PsiElement(INTEGER_LITERAL)('1')
                PsiElement(LONG_TEMPLATE_ENTRY_END)('}')
              PsiElement(CLOSING_QUOTE)('"')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          VALUE_ARGUMENT
            STRING_TEMPLATE
              PsiElement(OPEN_QUOTE)('"""')
              LITERAL_STRING_TEMPLATE_ENTRY
                PsiElement(REGULAR_STRING_PART)(' ')
              LONG_STRING_TEMPLATE_ENTRY
                PsiElement(LONG_TEMPLATE_ENTRY_START)('${')
                BINARY_EXPRESSION
                  INTEGER_CONSTANT
                    PsiElement(INTEGER_LITERAL)('2')
                  PsiWhiteSpace(' ')
                  OPERATION_REFERENCE
                    PsiElement(PLUS)('+')
                  PsiWhiteSpace(' ')
                  INTEGER_CONSTANT
                    PsiElement(INTEGER_LITERAL)('1')
                PsiElement(LONG_TEMPLATE_ENTRY_END)('}')
              PsiElement(CLOSING_QUOTE)('"""')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          VALUE_ARGUMENT
            BINARY_EXPRESSION
              STRING_TEMPLATE
                PsiElement(OPEN_QUOTE)('"')
                LITERAL_STRING_TEMPLATE_ENTRY
                  PsiElement(REGULAR_STRING_PART)('str')
                PsiElement(CLOSING_QUOTE)('"')
              PsiWhiteSpace(' ')
              OPERATION_REFERENCE
                PsiElement(PLUS)('+')
              PsiWhiteSpace(' ')
              INTEGER_CONSTANT
                PsiElement(INTEGER_LITERAL)('3')
          PsiElement(RPAR)(')')
    PsiWhiteSpace('\n')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('WithStringConstant')