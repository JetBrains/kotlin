package

public fun builder(/*0*/ c: suspend Controller.() -> kotlin.Unit): kotlin.Unit
public fun test(): kotlin.Unit

public final class A {
    public constructor A()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final suspend fun suspendHere(/*0*/ a: kotlin.Int): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class Controller {
    public constructor Controller()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final suspend fun suspendHere(/*0*/ a: kotlin.String): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
