namespace <root>

internal abstract trait A : jet.Any {
    internal abstract val a1: jet.Int
    internal abstract val a: jet.Int
    internal open fun foo(): jet.Int
    internal open fun foo1(): jet.Int
    internal open fun foo2(): jet.Int
    internal abstract fun </*0*/ T : jet.Any?>g(): T
    internal abstract fun </*0*/ T : jet.Any?>g1(): T
    internal abstract val  </*0*/ T : jet.Any?> g: jet.Iterator<T>
}
internal abstract class B : A {
    public final /*constructor*/ fun <init>(): B
    internal open override /*1*/ val a1: jet.Double
    internal open override /*1*/ val a: jet.Double
    internal open override /*1*/ fun foo(): jet.Tuple0
    internal open override /*1*/ fun foo1(): jet.Int
    internal open override /*1*/ fun foo2(): jet.Tuple0
    internal abstract override /*1*/ fun </*0*/ X : jet.Any?>g(): jet.Int
    internal abstract override /*1*/ fun </*0*/ X : jet.Any?>g1(): java.util.List<X>
    internal abstract override /*1*/ val  </*0*/ X : jet.Any?> g: jet.Iterator<jet.Int>
}
