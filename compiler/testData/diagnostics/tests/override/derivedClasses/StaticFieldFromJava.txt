// -- Module: <lib> --
package

package test {

    public/*package*/ interface I {
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

        // Static members
        public final val OK: kotlin.Array<(out) kotlin.String!>!
    }

    public open class J : test.I {
        public constructor J()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

        // Static members
        public final override /*1*/ /*fake_override*/ val OK: kotlin.Array<(out) kotlin.String!>!
    }
}

// -- Module: <main> --
package

public fun test(): kotlin.Unit

