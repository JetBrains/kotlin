// Rendering settings:
// - Signature version: 2
// - Show manifest properties: false
// - Show declarations: true

// Library unique name: <classifiers_inheritance_library>
abstract class classifiers.inheritance/AbstractClass { // classifiers.inheritance/AbstractClass|null[0]
    abstract val abstractVal // classifiers.inheritance/AbstractClass.abstractVal|{}abstractVal[0]
        abstract fun <get-abstractVal>(): kotlin/String // classifiers.inheritance/AbstractClass.abstractVal.<get-abstractVal>|<get-abstractVal>(){}[0]
    abstract var abstractVar // classifiers.inheritance/AbstractClass.abstractVar|{}abstractVar[0]
        abstract fun <get-abstractVar>(): kotlin/String // classifiers.inheritance/AbstractClass.abstractVar.<get-abstractVar>|<get-abstractVar>(){}[0]
        abstract fun <set-abstractVar>(kotlin/String) // classifiers.inheritance/AbstractClass.abstractVar.<set-abstractVar>|<set-abstractVar>(kotlin.String){}[0]
    final val finalVal // classifiers.inheritance/AbstractClass.finalVal|{}finalVal[0]
        final fun <get-finalVal>(): kotlin/String // classifiers.inheritance/AbstractClass.finalVal.<get-finalVal>|<get-finalVal>(){}[0]
    final var finalVar // classifiers.inheritance/AbstractClass.finalVar|{}finalVar[0]
        final fun <get-finalVar>(): kotlin/String // classifiers.inheritance/AbstractClass.finalVar.<get-finalVar>|<get-finalVar>(){}[0]
        final fun <set-finalVar>(kotlin/String) // classifiers.inheritance/AbstractClass.finalVar.<set-finalVar>|<set-finalVar>(kotlin.String){}[0]
    open val openVal // classifiers.inheritance/AbstractClass.openVal|{}openVal[0]
        open fun <get-openVal>(): kotlin/String // classifiers.inheritance/AbstractClass.openVal.<get-openVal>|<get-openVal>(){}[0]
    open var openVar // classifiers.inheritance/AbstractClass.openVar|{}openVar[0]
        open fun <get-openVar>(): kotlin/String // classifiers.inheritance/AbstractClass.openVar.<get-openVar>|<get-openVar>(){}[0]
        open fun <set-openVar>(kotlin/String) // classifiers.inheritance/AbstractClass.openVar.<set-openVar>|<set-openVar>(kotlin.String){}[0]
    constructor <init>() // classifiers.inheritance/AbstractClass.<init>|<init>(){}[0]
    abstract fun abstractFun(): kotlin/String // classifiers.inheritance/AbstractClass.abstractFun|abstractFun(){}[0]
    final fun finalFun(): kotlin/String // classifiers.inheritance/AbstractClass.finalFun|finalFun(){}[0]
    open fun openFun(): kotlin/String // classifiers.inheritance/AbstractClass.openFun|openFun(){}[0]
}
abstract class classifiers.inheritance/AbstractClassImpl1 : classifiers.inheritance/AbstractClass { // classifiers.inheritance/AbstractClassImpl1|null[0]
    open val abstractVal // classifiers.inheritance/AbstractClassImpl1.abstractVal|{}abstractVal[0]
        open fun <get-abstractVal>(): kotlin/String // classifiers.inheritance/AbstractClassImpl1.abstractVal.<get-abstractVal>|<get-abstractVal>(){}[0]
    open var abstractVar // classifiers.inheritance/AbstractClassImpl1.abstractVar|{}abstractVar[0]
        open fun <get-abstractVar>(): kotlin/String // classifiers.inheritance/AbstractClassImpl1.abstractVar.<get-abstractVar>|<get-abstractVar>(){}[0]
        open fun <set-abstractVar>(kotlin/String) // classifiers.inheritance/AbstractClassImpl1.abstractVar.<set-abstractVar>|<set-abstractVar>(kotlin.String){}[0]
    open val openVal // classifiers.inheritance/AbstractClassImpl1.openVal|{}openVal[0]
        open fun <get-openVal>(): kotlin/String // classifiers.inheritance/AbstractClassImpl1.openVal.<get-openVal>|<get-openVal>(){}[0]
    open var openVar // classifiers.inheritance/AbstractClassImpl1.openVar|{}openVar[0]
        open fun <get-openVar>(): kotlin/String // classifiers.inheritance/AbstractClassImpl1.openVar.<get-openVar>|<get-openVar>(){}[0]
        open fun <set-openVar>(kotlin/String) // classifiers.inheritance/AbstractClassImpl1.openVar.<set-openVar>|<set-openVar>(kotlin.String){}[0]
    constructor <init>() // classifiers.inheritance/AbstractClassImpl1.<init>|<init>(){}[0]
    open fun abstractFun(): kotlin/String // classifiers.inheritance/AbstractClassImpl1.abstractFun|abstractFun(){}[0]
    open fun openFun(): kotlin/String // classifiers.inheritance/AbstractClassImpl1.openFun|openFun(){}[0]
}
abstract class classifiers.inheritance/AbstractClassImpl2 : classifiers.inheritance/AbstractClass { // classifiers.inheritance/AbstractClassImpl2|null[0]
    final val abstractVal // classifiers.inheritance/AbstractClassImpl2.abstractVal|{}abstractVal[0]
        final fun <get-abstractVal>(): kotlin/String // classifiers.inheritance/AbstractClassImpl2.abstractVal.<get-abstractVal>|<get-abstractVal>(){}[0]
    final var abstractVar // classifiers.inheritance/AbstractClassImpl2.abstractVar|{}abstractVar[0]
        final fun <get-abstractVar>(): kotlin/String // classifiers.inheritance/AbstractClassImpl2.abstractVar.<get-abstractVar>|<get-abstractVar>(){}[0]
        final fun <set-abstractVar>(kotlin/String) // classifiers.inheritance/AbstractClassImpl2.abstractVar.<set-abstractVar>|<set-abstractVar>(kotlin.String){}[0]
    final val openVal // classifiers.inheritance/AbstractClassImpl2.openVal|{}openVal[0]
        final fun <get-openVal>(): kotlin/String // classifiers.inheritance/AbstractClassImpl2.openVal.<get-openVal>|<get-openVal>(){}[0]
    final var openVar // classifiers.inheritance/AbstractClassImpl2.openVar|{}openVar[0]
        final fun <get-openVar>(): kotlin/String // classifiers.inheritance/AbstractClassImpl2.openVar.<get-openVar>|<get-openVar>(){}[0]
        final fun <set-openVar>(kotlin/String) // classifiers.inheritance/AbstractClassImpl2.openVar.<set-openVar>|<set-openVar>(kotlin.String){}[0]
    constructor <init>() // classifiers.inheritance/AbstractClassImpl2.<init>|<init>(){}[0]
    final fun abstractFun(): kotlin/String // classifiers.inheritance/AbstractClassImpl2.abstractFun|abstractFun(){}[0]
    final fun openFun(): kotlin/String // classifiers.inheritance/AbstractClassImpl2.openFun|openFun(){}[0]
}
final class classifiers.inheritance/AbstractClassImpl3 : classifiers.inheritance/AbstractClass { // classifiers.inheritance/AbstractClassImpl3|null[0]
    final val abstractVal // classifiers.inheritance/AbstractClassImpl3.abstractVal|{}abstractVal[0]
        final fun <get-abstractVal>(): kotlin/String // classifiers.inheritance/AbstractClassImpl3.abstractVal.<get-abstractVal>|<get-abstractVal>(){}[0]
    final var abstractVar // classifiers.inheritance/AbstractClassImpl3.abstractVar|{}abstractVar[0]
        final fun <get-abstractVar>(): kotlin/String // classifiers.inheritance/AbstractClassImpl3.abstractVar.<get-abstractVar>|<get-abstractVar>(){}[0]
        final fun <set-abstractVar>(kotlin/String) // classifiers.inheritance/AbstractClassImpl3.abstractVar.<set-abstractVar>|<set-abstractVar>(kotlin.String){}[0]
    final val openVal // classifiers.inheritance/AbstractClassImpl3.openVal|{}openVal[0]
        final fun <get-openVal>(): kotlin/String // classifiers.inheritance/AbstractClassImpl3.openVal.<get-openVal>|<get-openVal>(){}[0]
    final var openVar // classifiers.inheritance/AbstractClassImpl3.openVar|{}openVar[0]
        final fun <get-openVar>(): kotlin/String // classifiers.inheritance/AbstractClassImpl3.openVar.<get-openVar>|<get-openVar>(){}[0]
        final fun <set-openVar>(kotlin/String) // classifiers.inheritance/AbstractClassImpl3.openVar.<set-openVar>|<set-openVar>(kotlin.String){}[0]
    constructor <init>() // classifiers.inheritance/AbstractClassImpl3.<init>|<init>(){}[0]
    final fun abstractFun(): kotlin/String // classifiers.inheritance/AbstractClassImpl3.abstractFun|abstractFun(){}[0]
    final fun openFun(): kotlin/String // classifiers.inheritance/AbstractClassImpl3.openFun|openFun(){}[0]
}
final class classifiers.inheritance/AbstractClassImpl4 : classifiers.inheritance/AbstractClass { // classifiers.inheritance/AbstractClassImpl4|null[0]
    final val abstractVal // classifiers.inheritance/AbstractClassImpl4.abstractVal|{}abstractVal[0]
        final fun <get-abstractVal>(): kotlin/String // classifiers.inheritance/AbstractClassImpl4.abstractVal.<get-abstractVal>|<get-abstractVal>(){}[0]
    final var abstractVar // classifiers.inheritance/AbstractClassImpl4.abstractVar|{}abstractVar[0]
        final fun <get-abstractVar>(): kotlin/String // classifiers.inheritance/AbstractClassImpl4.abstractVar.<get-abstractVar>|<get-abstractVar>(){}[0]
        final fun <set-abstractVar>(kotlin/String) // classifiers.inheritance/AbstractClassImpl4.abstractVar.<set-abstractVar>|<set-abstractVar>(kotlin.String){}[0]
    final val openVal // classifiers.inheritance/AbstractClassImpl4.openVal|{}openVal[0]
        final fun <get-openVal>(): kotlin/String // classifiers.inheritance/AbstractClassImpl4.openVal.<get-openVal>|<get-openVal>(){}[0]
    final var openVar // classifiers.inheritance/AbstractClassImpl4.openVar|{}openVar[0]
        final fun <get-openVar>(): kotlin/String // classifiers.inheritance/AbstractClassImpl4.openVar.<get-openVar>|<get-openVar>(){}[0]
        final fun <set-openVar>(kotlin/String) // classifiers.inheritance/AbstractClassImpl4.openVar.<set-openVar>|<set-openVar>(kotlin.String){}[0]
    constructor <init>() // classifiers.inheritance/AbstractClassImpl4.<init>|<init>(){}[0]
    final fun abstractFun(): kotlin/String // classifiers.inheritance/AbstractClassImpl4.abstractFun|abstractFun(){}[0]
    final fun openFun(): kotlin/String // classifiers.inheritance/AbstractClassImpl4.openFun|openFun(){}[0]
}
final class classifiers.inheritance/ClassThatInheritsDefaultImplsFromInterfaces : classifiers.inheritance/InternalInterface, classifiers.inheritance/PublicInterface { // classifiers.inheritance/ClassThatInheritsDefaultImplsFromInterfaces|null[0]
    constructor <init>() // classifiers.inheritance/ClassThatInheritsDefaultImplsFromInterfaces.<init>|<init>(){}[0]
}
final class classifiers.inheritance/FinalClass { // classifiers.inheritance/FinalClass|null[0]
    final val finalVal // classifiers.inheritance/FinalClass.finalVal|{}finalVal[0]
        final fun <get-finalVal>(): kotlin/String // classifiers.inheritance/FinalClass.finalVal.<get-finalVal>|<get-finalVal>(){}[0]
    final var finalVar // classifiers.inheritance/FinalClass.finalVar|{}finalVar[0]
        final fun <get-finalVar>(): kotlin/String // classifiers.inheritance/FinalClass.finalVar.<get-finalVar>|<get-finalVar>(){}[0]
        final fun <set-finalVar>(kotlin/String) // classifiers.inheritance/FinalClass.finalVar.<set-finalVar>|<set-finalVar>(kotlin.String){}[0]
    constructor <init>() // classifiers.inheritance/FinalClass.<init>|<init>(){}[0]
    final fun finalFun(): kotlin/String // classifiers.inheritance/FinalClass.finalFun|finalFun(){}[0]
}
abstract interface classifiers.inheritance/Interface1 { // classifiers.inheritance/Interface1|null[0]
    abstract val abstractVal1 // classifiers.inheritance/Interface1.abstractVal1|{}abstractVal1[0]
        abstract fun <get-abstractVal1>(): kotlin/String // classifiers.inheritance/Interface1.abstractVal1.<get-abstractVal1>|<get-abstractVal1>(){}[0]
    open val openVal1 // classifiers.inheritance/Interface1.openVal1|{}openVal1[0]
        open fun <get-openVal1>(): kotlin/String // classifiers.inheritance/Interface1.openVal1.<get-openVal1>|<get-openVal1>(){}[0]
    abstract fun abstractFun1(): kotlin/String // classifiers.inheritance/Interface1.abstractFun1|abstractFun1(){}[0]
    open fun openFun1(): kotlin/String // classifiers.inheritance/Interface1.openFun1|openFun1(){}[0]
}
abstract interface classifiers.inheritance/Interface2 { // classifiers.inheritance/Interface2|null[0]
    abstract val abstractVal2 // classifiers.inheritance/Interface2.abstractVal2|{}abstractVal2[0]
        abstract fun <get-abstractVal2>(): kotlin/String // classifiers.inheritance/Interface2.abstractVal2.<get-abstractVal2>|<get-abstractVal2>(){}[0]
    open val openVal2 // classifiers.inheritance/Interface2.openVal2|{}openVal2[0]
        open fun <get-openVal2>(): kotlin/String // classifiers.inheritance/Interface2.openVal2.<get-openVal2>|<get-openVal2>(){}[0]
    abstract fun abstractFun2(): kotlin/String // classifiers.inheritance/Interface2.abstractFun2|abstractFun2(){}[0]
    open fun openFun2(): kotlin/String // classifiers.inheritance/Interface2.openFun2|openFun2(){}[0]
}
final class classifiers.inheritance/MultiInheritance_Interface1_Interface2_OpenClass : classifiers.inheritance/Interface1, classifiers.inheritance/Interface2, classifiers.inheritance/OpenClass { // classifiers.inheritance/MultiInheritance_Interface1_Interface2_OpenClass|null[0]
    final val abstractVal1 // classifiers.inheritance/MultiInheritance_Interface1_Interface2_OpenClass.abstractVal1|{}abstractVal1[0]
        final fun <get-abstractVal1>(): kotlin/String // classifiers.inheritance/MultiInheritance_Interface1_Interface2_OpenClass.abstractVal1.<get-abstractVal1>|<get-abstractVal1>(){}[0]
    final val abstractVal2 // classifiers.inheritance/MultiInheritance_Interface1_Interface2_OpenClass.abstractVal2|{}abstractVal2[0]
        final fun <get-abstractVal2>(): kotlin/String // classifiers.inheritance/MultiInheritance_Interface1_Interface2_OpenClass.abstractVal2.<get-abstractVal2>|<get-abstractVal2>(){}[0]
    constructor <init>() // classifiers.inheritance/MultiInheritance_Interface1_Interface2_OpenClass.<init>|<init>(){}[0]
    final fun abstractFun1(): kotlin/String // classifiers.inheritance/MultiInheritance_Interface1_Interface2_OpenClass.abstractFun1|abstractFun1(){}[0]
    final fun abstractFun2(): kotlin/String // classifiers.inheritance/MultiInheritance_Interface1_Interface2_OpenClass.abstractFun2|abstractFun2(){}[0]
}
final class classifiers.inheritance/MultiInheritance_Interface1_OpenClass_Interface2 : classifiers.inheritance/Interface1, classifiers.inheritance/Interface2, classifiers.inheritance/OpenClass { // classifiers.inheritance/MultiInheritance_Interface1_OpenClass_Interface2|null[0]
    final val abstractVal1 // classifiers.inheritance/MultiInheritance_Interface1_OpenClass_Interface2.abstractVal1|{}abstractVal1[0]
        final fun <get-abstractVal1>(): kotlin/String // classifiers.inheritance/MultiInheritance_Interface1_OpenClass_Interface2.abstractVal1.<get-abstractVal1>|<get-abstractVal1>(){}[0]
    final val abstractVal2 // classifiers.inheritance/MultiInheritance_Interface1_OpenClass_Interface2.abstractVal2|{}abstractVal2[0]
        final fun <get-abstractVal2>(): kotlin/String // classifiers.inheritance/MultiInheritance_Interface1_OpenClass_Interface2.abstractVal2.<get-abstractVal2>|<get-abstractVal2>(){}[0]
    constructor <init>() // classifiers.inheritance/MultiInheritance_Interface1_OpenClass_Interface2.<init>|<init>(){}[0]
    final fun abstractFun1(): kotlin/String // classifiers.inheritance/MultiInheritance_Interface1_OpenClass_Interface2.abstractFun1|abstractFun1(){}[0]
    final fun abstractFun2(): kotlin/String // classifiers.inheritance/MultiInheritance_Interface1_OpenClass_Interface2.abstractFun2|abstractFun2(){}[0]
}
final class classifiers.inheritance/MultiInheritance_Interface2_Interface1_OpenClass : classifiers.inheritance/Interface1, classifiers.inheritance/Interface2, classifiers.inheritance/OpenClass { // classifiers.inheritance/MultiInheritance_Interface2_Interface1_OpenClass|null[0]
    final val abstractVal1 // classifiers.inheritance/MultiInheritance_Interface2_Interface1_OpenClass.abstractVal1|{}abstractVal1[0]
        final fun <get-abstractVal1>(): kotlin/String // classifiers.inheritance/MultiInheritance_Interface2_Interface1_OpenClass.abstractVal1.<get-abstractVal1>|<get-abstractVal1>(){}[0]
    final val abstractVal2 // classifiers.inheritance/MultiInheritance_Interface2_Interface1_OpenClass.abstractVal2|{}abstractVal2[0]
        final fun <get-abstractVal2>(): kotlin/String // classifiers.inheritance/MultiInheritance_Interface2_Interface1_OpenClass.abstractVal2.<get-abstractVal2>|<get-abstractVal2>(){}[0]
    constructor <init>() // classifiers.inheritance/MultiInheritance_Interface2_Interface1_OpenClass.<init>|<init>(){}[0]
    final fun abstractFun1(): kotlin/String // classifiers.inheritance/MultiInheritance_Interface2_Interface1_OpenClass.abstractFun1|abstractFun1(){}[0]
    final fun abstractFun2(): kotlin/String // classifiers.inheritance/MultiInheritance_Interface2_Interface1_OpenClass.abstractFun2|abstractFun2(){}[0]
}
final class classifiers.inheritance/MultiInheritance_Interface2_OpenClass_Interface1 : classifiers.inheritance/Interface1, classifiers.inheritance/Interface2, classifiers.inheritance/OpenClass { // classifiers.inheritance/MultiInheritance_Interface2_OpenClass_Interface1|null[0]
    final val abstractVal1 // classifiers.inheritance/MultiInheritance_Interface2_OpenClass_Interface1.abstractVal1|{}abstractVal1[0]
        final fun <get-abstractVal1>(): kotlin/String // classifiers.inheritance/MultiInheritance_Interface2_OpenClass_Interface1.abstractVal1.<get-abstractVal1>|<get-abstractVal1>(){}[0]
    final val abstractVal2 // classifiers.inheritance/MultiInheritance_Interface2_OpenClass_Interface1.abstractVal2|{}abstractVal2[0]
        final fun <get-abstractVal2>(): kotlin/String // classifiers.inheritance/MultiInheritance_Interface2_OpenClass_Interface1.abstractVal2.<get-abstractVal2>|<get-abstractVal2>(){}[0]
    constructor <init>() // classifiers.inheritance/MultiInheritance_Interface2_OpenClass_Interface1.<init>|<init>(){}[0]
    final fun abstractFun1(): kotlin/String // classifiers.inheritance/MultiInheritance_Interface2_OpenClass_Interface1.abstractFun1|abstractFun1(){}[0]
    final fun abstractFun2(): kotlin/String // classifiers.inheritance/MultiInheritance_Interface2_OpenClass_Interface1.abstractFun2|abstractFun2(){}[0]
}
final class classifiers.inheritance/MultiInheritance_OpenClass_Interface1_Interface2 : classifiers.inheritance/Interface1, classifiers.inheritance/Interface2, classifiers.inheritance/OpenClass { // classifiers.inheritance/MultiInheritance_OpenClass_Interface1_Interface2|null[0]
    final val abstractVal1 // classifiers.inheritance/MultiInheritance_OpenClass_Interface1_Interface2.abstractVal1|{}abstractVal1[0]
        final fun <get-abstractVal1>(): kotlin/String // classifiers.inheritance/MultiInheritance_OpenClass_Interface1_Interface2.abstractVal1.<get-abstractVal1>|<get-abstractVal1>(){}[0]
    final val abstractVal2 // classifiers.inheritance/MultiInheritance_OpenClass_Interface1_Interface2.abstractVal2|{}abstractVal2[0]
        final fun <get-abstractVal2>(): kotlin/String // classifiers.inheritance/MultiInheritance_OpenClass_Interface1_Interface2.abstractVal2.<get-abstractVal2>|<get-abstractVal2>(){}[0]
    constructor <init>() // classifiers.inheritance/MultiInheritance_OpenClass_Interface1_Interface2.<init>|<init>(){}[0]
    final fun abstractFun1(): kotlin/String // classifiers.inheritance/MultiInheritance_OpenClass_Interface1_Interface2.abstractFun1|abstractFun1(){}[0]
    final fun abstractFun2(): kotlin/String // classifiers.inheritance/MultiInheritance_OpenClass_Interface1_Interface2.abstractFun2|abstractFun2(){}[0]
}
final class classifiers.inheritance/MultiInheritance_OpenClass_Interface2_Interface1 : classifiers.inheritance/Interface1, classifiers.inheritance/Interface2, classifiers.inheritance/OpenClass { // classifiers.inheritance/MultiInheritance_OpenClass_Interface2_Interface1|null[0]
    final val abstractVal1 // classifiers.inheritance/MultiInheritance_OpenClass_Interface2_Interface1.abstractVal1|{}abstractVal1[0]
        final fun <get-abstractVal1>(): kotlin/String // classifiers.inheritance/MultiInheritance_OpenClass_Interface2_Interface1.abstractVal1.<get-abstractVal1>|<get-abstractVal1>(){}[0]
    final val abstractVal2 // classifiers.inheritance/MultiInheritance_OpenClass_Interface2_Interface1.abstractVal2|{}abstractVal2[0]
        final fun <get-abstractVal2>(): kotlin/String // classifiers.inheritance/MultiInheritance_OpenClass_Interface2_Interface1.abstractVal2.<get-abstractVal2>|<get-abstractVal2>(){}[0]
    constructor <init>() // classifiers.inheritance/MultiInheritance_OpenClass_Interface2_Interface1.<init>|<init>(){}[0]
    final fun abstractFun1(): kotlin/String // classifiers.inheritance/MultiInheritance_OpenClass_Interface2_Interface1.abstractFun1|abstractFun1(){}[0]
    final fun abstractFun2(): kotlin/String // classifiers.inheritance/MultiInheritance_OpenClass_Interface2_Interface1.abstractFun2|abstractFun2(){}[0]
}
open class classifiers.inheritance/OpenClass { // classifiers.inheritance/OpenClass|null[0]
    final val finalVal // classifiers.inheritance/OpenClass.finalVal|{}finalVal[0]
        final fun <get-finalVal>(): kotlin/String // classifiers.inheritance/OpenClass.finalVal.<get-finalVal>|<get-finalVal>(){}[0]
    final var finalVar // classifiers.inheritance/OpenClass.finalVar|{}finalVar[0]
        final fun <get-finalVar>(): kotlin/String // classifiers.inheritance/OpenClass.finalVar.<get-finalVar>|<get-finalVar>(){}[0]
        final fun <set-finalVar>(kotlin/String) // classifiers.inheritance/OpenClass.finalVar.<set-finalVar>|<set-finalVar>(kotlin.String){}[0]
    open val openVal // classifiers.inheritance/OpenClass.openVal|{}openVal[0]
        open fun <get-openVal>(): kotlin/String // classifiers.inheritance/OpenClass.openVal.<get-openVal>|<get-openVal>(){}[0]
    open var openVar // classifiers.inheritance/OpenClass.openVar|{}openVar[0]
        open fun <get-openVar>(): kotlin/String // classifiers.inheritance/OpenClass.openVar.<get-openVar>|<get-openVar>(){}[0]
        open fun <set-openVar>(kotlin/String) // classifiers.inheritance/OpenClass.openVar.<set-openVar>|<set-openVar>(kotlin.String){}[0]
    constructor <init>() // classifiers.inheritance/OpenClass.<init>|<init>(){}[0]
    final fun finalFun(): kotlin/String // classifiers.inheritance/OpenClass.finalFun|finalFun(){}[0]
    open fun openFun(): kotlin/String // classifiers.inheritance/OpenClass.openFun|openFun(){}[0]
}
open class classifiers.inheritance/OpenClassImpl1 : classifiers.inheritance/OpenClass { // classifiers.inheritance/OpenClassImpl1|null[0]
    open val openVal // classifiers.inheritance/OpenClassImpl1.openVal|{}openVal[0]
        open fun <get-openVal>(): kotlin/String // classifiers.inheritance/OpenClassImpl1.openVal.<get-openVal>|<get-openVal>(){}[0]
    open var openVar // classifiers.inheritance/OpenClassImpl1.openVar|{}openVar[0]
        open fun <get-openVar>(): kotlin/String // classifiers.inheritance/OpenClassImpl1.openVar.<get-openVar>|<get-openVar>(){}[0]
        open fun <set-openVar>(kotlin/String) // classifiers.inheritance/OpenClassImpl1.openVar.<set-openVar>|<set-openVar>(kotlin.String){}[0]
    constructor <init>() // classifiers.inheritance/OpenClassImpl1.<init>|<init>(){}[0]
    open fun openFun(): kotlin/String // classifiers.inheritance/OpenClassImpl1.openFun|openFun(){}[0]
}
open class classifiers.inheritance/OpenClassImpl2 : classifiers.inheritance/OpenClass { // classifiers.inheritance/OpenClassImpl2|null[0]
    final val openVal // classifiers.inheritance/OpenClassImpl2.openVal|{}openVal[0]
        final fun <get-openVal>(): kotlin/String // classifiers.inheritance/OpenClassImpl2.openVal.<get-openVal>|<get-openVal>(){}[0]
    final var openVar // classifiers.inheritance/OpenClassImpl2.openVar|{}openVar[0]
        final fun <get-openVar>(): kotlin/String // classifiers.inheritance/OpenClassImpl2.openVar.<get-openVar>|<get-openVar>(){}[0]
        final fun <set-openVar>(kotlin/String) // classifiers.inheritance/OpenClassImpl2.openVar.<set-openVar>|<set-openVar>(kotlin.String){}[0]
    constructor <init>() // classifiers.inheritance/OpenClassImpl2.<init>|<init>(){}[0]
    final fun openFun(): kotlin/String // classifiers.inheritance/OpenClassImpl2.openFun|openFun(){}[0]
}
final class classifiers.inheritance/OpenClassImpl3 : classifiers.inheritance/OpenClass { // classifiers.inheritance/OpenClassImpl3|null[0]
    final val openVal // classifiers.inheritance/OpenClassImpl3.openVal|{}openVal[0]
        final fun <get-openVal>(): kotlin/String // classifiers.inheritance/OpenClassImpl3.openVal.<get-openVal>|<get-openVal>(){}[0]
    final var openVar // classifiers.inheritance/OpenClassImpl3.openVar|{}openVar[0]
        final fun <get-openVar>(): kotlin/String // classifiers.inheritance/OpenClassImpl3.openVar.<get-openVar>|<get-openVar>(){}[0]
        final fun <set-openVar>(kotlin/String) // classifiers.inheritance/OpenClassImpl3.openVar.<set-openVar>|<set-openVar>(kotlin.String){}[0]
    constructor <init>() // classifiers.inheritance/OpenClassImpl3.<init>|<init>(){}[0]
    final fun openFun(): kotlin/String // classifiers.inheritance/OpenClassImpl3.openFun|openFun(){}[0]
}
final class classifiers.inheritance/OpenClassImpl4 : classifiers.inheritance/OpenClass { // classifiers.inheritance/OpenClassImpl4|null[0]
    final val openVal // classifiers.inheritance/OpenClassImpl4.openVal|{}openVal[0]
        final fun <get-openVal>(): kotlin/String // classifiers.inheritance/OpenClassImpl4.openVal.<get-openVal>|<get-openVal>(){}[0]
    final var openVar // classifiers.inheritance/OpenClassImpl4.openVar|{}openVar[0]
        final fun <get-openVar>(): kotlin/String // classifiers.inheritance/OpenClassImpl4.openVar.<get-openVar>|<get-openVar>(){}[0]
        final fun <set-openVar>(kotlin/String) // classifiers.inheritance/OpenClassImpl4.openVar.<set-openVar>|<set-openVar>(kotlin.String){}[0]
    constructor <init>() // classifiers.inheritance/OpenClassImpl4.<init>|<init>(){}[0]
    final fun openFun(): kotlin/String // classifiers.inheritance/OpenClassImpl4.openFun|openFun(){}[0]
}
open class <#A: kotlin/Any?, #B: kotlin/Any?> classifiers.inheritance/OpenClassWithTypeParameters { // classifiers.inheritance/OpenClassWithTypeParameters|null[0]
    constructor <init>() // classifiers.inheritance/OpenClassWithTypeParameters.<init>|<init>(){}[0]
}
final class <#A: kotlin/Any?, #B: kotlin/Any?> classifiers.inheritance/OpenClassWithTypeParametersImpl_DNNT1_DNNT2 : classifiers.inheritance/OpenClassWithTypeParameters<#A!!, #B!!> { // classifiers.inheritance/OpenClassWithTypeParametersImpl_DNNT1_DNNT2|null[0]
    constructor <init>() // classifiers.inheritance/OpenClassWithTypeParametersImpl_DNNT1_DNNT2.<init>|<init>(){}[0]
}
final class classifiers.inheritance/OpenClassWithTypeParametersImpl_Int_String : classifiers.inheritance/OpenClassWithTypeParameters<kotlin/Int, kotlin/String> { // classifiers.inheritance/OpenClassWithTypeParametersImpl_Int_String|null[0]
    constructor <init>() // classifiers.inheritance/OpenClassWithTypeParametersImpl_Int_String.<init>|<init>(){}[0]
}
final class classifiers.inheritance/OpenClassWithTypeParametersImpl_NInt_NString : classifiers.inheritance/OpenClassWithTypeParameters<kotlin/Int?, kotlin/String?> { // classifiers.inheritance/OpenClassWithTypeParametersImpl_NInt_NString|null[0]
    constructor <init>() // classifiers.inheritance/OpenClassWithTypeParametersImpl_NInt_NString.<init>|<init>(){}[0]
}
final class classifiers.inheritance/OpenClassWithTypeParametersImpl_String_Int : classifiers.inheritance/OpenClassWithTypeParameters<kotlin/String, kotlin/Int> { // classifiers.inheritance/OpenClassWithTypeParametersImpl_String_Int|null[0]
    constructor <init>() // classifiers.inheritance/OpenClassWithTypeParametersImpl_String_Int.<init>|<init>(){}[0]
}
final class <#A: kotlin/Number, #B: kotlin/CharSequence> classifiers.inheritance/OpenClassWithTypeParametersImpl_T1_Number_T2_CS : classifiers.inheritance/OpenClassWithTypeParameters<#A, #B> { // classifiers.inheritance/OpenClassWithTypeParametersImpl_T1_Number_T2_CS|null[0]
    constructor <init>() // classifiers.inheritance/OpenClassWithTypeParametersImpl_T1_Number_T2_CS.<init>|<init>(){}[0]
}
final class <#A: kotlin/Any?, #B: kotlin/Any?> classifiers.inheritance/OpenClassWithTypeParametersImpl_T1_T2 : classifiers.inheritance/OpenClassWithTypeParameters<#A, #B> { // classifiers.inheritance/OpenClassWithTypeParametersImpl_T1_T2|null[0]
    constructor <init>() // classifiers.inheritance/OpenClassWithTypeParametersImpl_T1_T2.<init>|<init>(){}[0]
}
final class <#A: kotlin/Any?, #B: kotlin/Any?> classifiers.inheritance/OpenClassWithTypeParametersImpl_T2_T1 : classifiers.inheritance/OpenClassWithTypeParameters<#B, #A> { // classifiers.inheritance/OpenClassWithTypeParametersImpl_T2_T1|null[0]
    constructor <init>() // classifiers.inheritance/OpenClassWithTypeParametersImpl_T2_T1.<init>|<init>(){}[0]
}
abstract interface classifiers.inheritance/PublicInterface { // classifiers.inheritance/PublicInterface|null[0]
    open fun publicDefaultFunInPublicInterface(): kotlin/String // classifiers.inheritance/PublicInterface.publicDefaultFunInPublicInterface|publicDefaultFunInPublicInterface(){}[0]
}
sealed class classifiers.inheritance/SealedClass { // classifiers.inheritance/SealedClass|null[0]
    constructor <init>() // classifiers.inheritance/SealedClass.<init>|<init>(){}[0]
    final class SealedClass_Subclass1 : classifiers.inheritance/SealedClass { // classifiers.inheritance/SealedClass.SealedClass_Subclass1|null[0]
        constructor <init>() // classifiers.inheritance/SealedClass.SealedClass_Subclass1.<init>|<init>(){}[0]
    }
}
final class classifiers.inheritance/SealedClass_Subclass2 : classifiers.inheritance/SealedClass { // classifiers.inheritance/SealedClass_Subclass2|null[0]
    constructor <init>() // classifiers.inheritance/SealedClass_Subclass2.<init>|<init>(){}[0]
}
sealed interface classifiers.inheritance/SealedInterface { // classifiers.inheritance/SealedInterface|null[0]
    final class SealedInterface_Subclass1 : classifiers.inheritance/SealedInterface { // classifiers.inheritance/SealedInterface.SealedInterface_Subclass1|null[0]
        constructor <init>() // classifiers.inheritance/SealedInterface.SealedInterface_Subclass1.<init>|<init>(){}[0]
    }
}
final class classifiers.inheritance/SealedInterface_Subclass2 : classifiers.inheritance/SealedInterface { // classifiers.inheritance/SealedInterface_Subclass2|null[0]
    constructor <init>() // classifiers.inheritance/SealedInterface_Subclass2.<init>|<init>(){}[0]
}
