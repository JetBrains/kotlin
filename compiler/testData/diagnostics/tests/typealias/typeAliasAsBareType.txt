package

public fun testL1(/*0*/ x: kotlin.collections.Collection<kotlin.Any>): kotlin.Boolean
public fun testL2(/*0*/ x: kotlin.collections.Collection<kotlin.Int>): kotlin.collections.List<kotlin.Int>
public fun testL3(/*0*/ x: kotlin.collections.Collection<kotlin.Int>?): kotlin.collections.List<kotlin.Int>?
public fun testL4(/*0*/ x: kotlin.collections.Collection<kotlin.Int>?): kotlin.collections.List<kotlin.Int>?
public fun testLStar(/*0*/ x: kotlin.collections.Collection<kotlin.Int>): kotlin.collections.List<kotlin.Int>
public fun </*0*/ T> testLocal(/*0*/ x: kotlin.Any): kotlin.Unit
public fun testMyList(/*0*/ x: kotlin.collections.Collection<kotlin.Int>): kotlin.collections.List<kotlin.Int>
public fun testNL1(/*0*/ x: kotlin.collections.Collection<kotlin.Int>?): kotlin.Boolean
public fun testNL2(/*0*/ x: kotlin.collections.Collection<kotlin.Int>?): kotlin.collections.List<kotlin.Int>?
public fun testNL3(/*0*/ x: kotlin.collections.Collection<kotlin.Int>?): kotlin.collections.List<kotlin.Int>?
public fun testWrong1(/*0*/ x: kotlin.collections.Map<kotlin.Any, kotlin.Any>): kotlin.Boolean
public fun testWrong2(/*0*/ x: kotlin.collections.Map<kotlin.Any, kotlin.Any>): kotlin.Boolean
public fun testWrong3(/*0*/ x: kotlin.collections.Map<kotlin.Any, kotlin.Any>): kotlin.Boolean
public fun testWrong4(/*0*/ x: kotlin.collections.List<kotlin.Any>): kotlin.Boolean
public typealias Dictionary</*0*/ T>  = kotlin.collections.MutableMap<kotlin.String, T>
public typealias L</*0*/ T>  = kotlin.collections.List<T>
public typealias LStar</*0*/ T>  = kotlin.collections.List<*>
public typealias MMTT</*0*/ T>  = kotlin.collections.MutableMap<T, T>
public typealias MyList</*0*/ T, /*1*/ X>  = kotlin.collections.List<X>
public typealias NL</*0*/ T>  = kotlin.collections.List<T>?
public typealias ReadableList</*0*/ T>  = kotlin.collections.MutableList<out T>
public typealias WriteableMap</*0*/ K, /*1*/ V>  = kotlin.collections.MutableMap<in K, V>
