public interface A {
    inner class A/DefaultImpls
    public abstract method test1(p0: java.lang.Object, p1: java.lang.Object): java.lang.Object
    public abstract @org.jetbrains.annotations.NotNull method test2(p0: java.lang.Object): A
}


public final class A/DefaultImpls {
    inner class A/DefaultImpls
    public static method test1(p0: A, p1: java.lang.Object, p2: java.lang.Object): java.lang.Object
    public static @org.jetbrains.annotations.NotNull method test2(p0: A, p1: java.lang.Object): A
}


public final class B {
    private final field value: java.lang.Object
    public method <init>(p0: java.lang.Object): void
    public final method getValue(): java.lang.Object
}


public final class KKt {
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
}


public final class X {
    private final field p1: java.lang.Object
    private final @org.jetbrains.annotations.NotNull field p2: B
    public method <init>(p0: java.lang.Object, @org.jetbrains.annotations.NotNull p1: B): void
    public final method getP1(): java.lang.Object
    public final @org.jetbrains.annotations.NotNull method getP2(): B
    public method test1(p0: java.lang.Object, p1: java.lang.Object): java.lang.Object
    public @org.jetbrains.annotations.NotNull method test2(p0: java.lang.Object): A
}
