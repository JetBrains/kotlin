package test

internal final class ConstructorTypeParamClassObjectConflict</*0*/ test> {
    /*primary*/ public constructor ConstructorTypeParamClassObjectConflict</*0*/ test>()
    internal final val some: jet.Int
        internal final fun <get-some>(): jet.Int
    
    internal class object <class-object-for-ConstructorTypeParamClassObjectConflict> {
        /*primary*/ private constructor <class-object-for-ConstructorTypeParamClassObjectConflict>()
        internal final val test: jet.Int
            internal final fun <get-test>(): jet.Int
    }
}

internal final class ConstructorTypeParamClassObjectTypeConflict</*0*/ test> {
    /*primary*/ public constructor ConstructorTypeParamClassObjectTypeConflict</*0*/ test>()
    internal final val some: test?
        internal final fun <get-some>(): test?
    
    internal class object <class-object-for-ConstructorTypeParamClassObjectTypeConflict> {
        /*primary*/ private constructor <class-object-for-ConstructorTypeParamClassObjectTypeConflict>()
        
        internal trait test {
        }
    }
}

internal final class TestClassObjectAndClassConflict {
    /*primary*/ public constructor TestClassObjectAndClassConflict()
    internal final val bla: jet.String
        internal final fun <get-bla>(): jet.String
    internal final val some: jet.String
        internal final fun <get-some>(): jet.String
    
    internal class object <class-object-for-TestClassObjectAndClassConflict> {
        /*primary*/ private constructor <class-object-for-TestClassObjectAndClassConflict>()
        internal final val bla: jet.Int
            internal final fun <get-bla>(): jet.Int
    }
}

internal final class TestConstructorParamClassObjectConflict {
    /*primary*/ public constructor TestConstructorParamClassObjectConflict(/*0*/ test: jet.String)
    internal final val some: jet.String
        internal final fun <get-some>(): jet.String
    
    internal class object <class-object-for-TestConstructorParamClassObjectConflict> {
        /*primary*/ private constructor <class-object-for-TestConstructorParamClassObjectConflict>()
        internal final val test: jet.Int
            internal final fun <get-test>(): jet.Int
    }
}

internal final class TestConstructorValClassObjectConflict {
    /*primary*/ public constructor TestConstructorValClassObjectConflict(/*0*/ test: jet.String)
    internal final val some: jet.String
        internal final fun <get-some>(): jet.String
    internal final val test: jet.String
        internal final fun <get-test>(): jet.String
    
    internal class object <class-object-for-TestConstructorValClassObjectConflict> {
        /*primary*/ private constructor <class-object-for-TestConstructorValClassObjectConflict>()
        internal final val test: jet.Int
            internal final fun <get-test>(): jet.Int
    }
}
