// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: compiler/ir/serialization.common/src/KotlinIr.proto

package org.jetbrains.kotlin.backend.common.serialization.proto;

public interface IrFunctionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction)
    org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase base = 1;</code>
   */
  boolean hasBase();
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase base = 1;</code>
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase getBase();

  /**
   * <code>repeated int64 overridden = 2 [packed = true];</code>
   *
   * <pre>
   * TODO: supposed to be deleted
   * </pre>
   */
  java.util.List<java.lang.Long> getOverriddenList();
  /**
   * <code>repeated int64 overridden = 2 [packed = true];</code>
   *
   * <pre>
   * TODO: supposed to be deleted
   * </pre>
   */
  int getOverriddenCount();
  /**
   * <code>repeated int64 overridden = 2 [packed = true];</code>
   *
   * <pre>
   * TODO: supposed to be deleted
   * </pre>
   */
  long getOverridden(int index);

  /**
   * <code>optional int32 prepared_inline_function_file_entry_id = 3;</code>
   *
   * <pre>
   * In case this is a prepared inlineable function copy, stores the file entry where the inline function was originally declared.
   * </pre>
   */
  boolean hasPreparedInlineFunctionFileEntryId();
  /**
   * <code>optional int32 prepared_inline_function_file_entry_id = 3;</code>
   *
   * <pre>
   * In case this is a prepared inlineable function copy, stores the file entry where the inline function was originally declared.
   * </pre>
   */
  int getPreparedInlineFunctionFileEntryId();
}