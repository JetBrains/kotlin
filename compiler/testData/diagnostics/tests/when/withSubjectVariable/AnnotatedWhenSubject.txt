package

public fun annotationInWhenSubject(): kotlin.Unit
public fun wrongAnnotationTargetInWhenSubject(): kotlin.Unit

@kotlin.annotation.Target(allowedTargets = {AnnotationTarget.CLASS}) public final annotation class InvalidAnn : kotlin.Annotation {
    public constructor InvalidAnn()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final annotation class ValidAnn : kotlin.Annotation {
    public constructor ValidAnn()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
