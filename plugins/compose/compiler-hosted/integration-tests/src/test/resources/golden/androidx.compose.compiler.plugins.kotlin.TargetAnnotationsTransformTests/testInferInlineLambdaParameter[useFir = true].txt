//
// Source
// ------------------------------------------

import androidx.compose.runtime.Composable

@Composable
fun Test(content: @Composable () -> Unit) {
  InlineRow {
    Text("test")
  }
}

//
// Transformed IR
// ------------------------------------------

@Composable
@ComposableInferredTarget(scheme = "[UI[_]]")
fun Test(content: Function2<Composer, Int, Unit>, %composer: Composer?, %changed: Int) {
  %composer = %composer.startRestartGroup(<>)
  sourceInformation(%composer, "C(Test)<Inline...>:Test.kt")
  if (%changed and 0b0001 != 0 || !%composer.skipping) {
    if (isTraceInProgress()) {
      traceEventStart(<>, %changed, -1, <>)
    }
    InlineRow({ %composer: Composer?, %changed: Int ->
      sourceInformationMarkerStart(%composer, <>, "C<Text("...>:Test.kt")
      Text("test", %composer, 0b0110)
      sourceInformationMarkerEnd(%composer)
    }, %composer, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    %composer.skipToGroupEnd()
  }
  %composer.endRestartGroup()?.updateScope { %composer: Composer?, %force: Int ->
    Test(content, %composer, updateChangedFlags(%changed or 0b0001))
  }
}
