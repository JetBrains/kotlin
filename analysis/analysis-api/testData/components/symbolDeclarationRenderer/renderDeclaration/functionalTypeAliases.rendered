class A

class B

typealias WithGeneric<T> = (T) -> String

fun withGeneric(f: (Double) -> String)

typealias WithReceiver = String.() -> Unit

fun withReceiver(f: String.() -> Unit)

typealias WithContextReceiver = context(String) () -> Unit

fun withContextReceiver(f: context(String) () -> Unit)

typealias WithSuspend = suspend (String) -> Int

fun withContextReceiver(f: suspend (String) -> Int)

typealias WithEverything<T> = suspend context(T, B) String.(Int, T) -> String

fun withEverything(f: suspend context(A, B) String.(Int, A) -> String)

