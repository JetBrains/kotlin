FILE: propertyAccessors.kt
    public abstract interface A : R|kotlin/Any| {
        public abstract fun foo(): R|kotlin/Unit|

    }
    public final var R|kotlin/Any?|.isNotNull: R|kotlin/Boolean|
        public get(): R|kotlin/Boolean|
            [R|Contract description]
             <
                Returns(TRUE) -> this != null
            >
         {
            [StubStatement]
            ^ !=(this@R|/isNotNull|, Null(null))
        }
        public set(value: R|kotlin/Boolean|): R|kotlin/Unit|
            [R|Contract description]
             <
                Returns(WILDCARD) -> this != null
            >
         {
            [StubStatement]
        }
    public final fun test_1(a: R|A?|): R|kotlin/Unit| {
        when () {
            R|<local>/a|.R|/isNotNull| ->  {
                R|<local>/a|.R|/A.foo|()
            }
        }

    }
    public final fun test_2(a: R|A?|): R|kotlin/Unit| {
        R|<local>/a|.R|/isNotNull| = Boolean(true)
        R|<local>/a|.R|/A.foo|()
    }
