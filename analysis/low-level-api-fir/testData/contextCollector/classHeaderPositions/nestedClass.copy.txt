Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirNestedClassifierScopeImpl
            Classifiers:
                FirRegularClassSymbol public final class B : R|r/A.Base|
                FirRegularClassSymbol public open class Base : R|kotlin/Any|
    Element 7
        Scope: FirLocalScope
            Properties:
                FirValueParameterSymbol x: R|kotlin/Int|

FILE: [ResolvedTo(IMPORTS)] nestedClass.kt
    public final? [ResolvedTo(SUPER_TYPES)] class A : R|kotlin/Any| {
        public? [ResolvedTo(RAW_FIR)] constructor(): R|r/A| {
            LAZY_super<R|kotlin/Any|>
        }

        public open [ResolvedTo(SUPER_TYPES)] class Base : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] constructor([ResolvedTo(RAW_FIR)] x: Int): R|r/A.Base| {
                LAZY_super<R|kotlin/Any|>
            }

            public? final? [ResolvedTo(RAW_FIR)] val x: Int = R|<local>/x|
                public? [ResolvedTo(RAW_FIR)] get(): Int

        }

        public final [ResolvedTo(STATUS)] class B : R|r/A.Base| {
            public [ResolvedTo(BODY_RESOLVE)] constructor([ResolvedTo(BODY_RESOLVE)] x: R|kotlin/Int|): R|r/A.B| {
                super<R|r/A.Base|>(R|<local>/x|)
            }

        }

    }
