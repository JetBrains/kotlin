@java.lang.annotation.Retention
@kotlin.Metadata
public annotation class AllOpen {
    // source: 'anonymousObject.kt'
}

@kotlin.Metadata
public final class Test$a$1 {
    // source: 'anonymousObject.kt'
    inner (anonymous) class Test$a$1
    method <init>(): void
    public method run(): void
}

@kotlin.Metadata
public final class Test$b$1 {
    // source: 'anonymousObject.kt'
    inner (anonymous) class Test$b$1
    method <init>(): void
    public method run(): void
}

@kotlin.Metadata
final class Test$b$2 {
    // source: 'anonymousObject.kt'
    public final static field INSTANCE: Test$b$2
    inner (anonymous) class Test$b$2
    static method <clinit>(): void
    method <init>(): void
    public final method run(): void
}

@AllOpen
@kotlin.Metadata
public class Test {
    // source: 'anonymousObject.kt'
    private final @org.jetbrains.annotations.NotNull field a: java.lang.Runnable
    inner (anonymous) class Test$a$1
    inner (anonymous) class Test$b$1
    inner (anonymous) class Test$b$2
    public method <init>(): void
    public method b(): void
    public @org.jetbrains.annotations.NotNull method getA(): java.lang.Runnable
}
