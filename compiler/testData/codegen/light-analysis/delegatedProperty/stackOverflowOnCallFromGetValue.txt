public final class Delegate {
    public final static field INSTANCE: Delegate
    private method <init>(): void
    public final @org.jetbrains.annotations.NotNull method getValue(@org.jetbrains.annotations.Nullable p0: java.lang.Object, @org.jetbrains.annotations.NotNull p1: kotlin.reflect.KProperty): java.lang.String
    public final method setValue(@org.jetbrains.annotations.Nullable p0: java.lang.Object, @org.jetbrains.annotations.NotNull p1: kotlin.reflect.KProperty, @org.jetbrains.annotations.NotNull p2: java.lang.String): void
}


public final class O {
    private synthetic final static field $$delegatedProperties: kotlin.reflect.KProperty[]
    public final static field INSTANCE: O
    private final static @org.jetbrains.annotations.NotNull field memExt$delegate: Delegate
    private final static @org.jetbrains.annotations.NotNull field member$delegate: Delegate
    private method <init>(): void
    public final @org.jetbrains.annotations.NotNull method getMemExt(@org.jetbrains.annotations.NotNull p0: O): java.lang.String
    public final @org.jetbrains.annotations.NotNull method getMember(): java.lang.String
    public final method setMemExt(@org.jetbrains.annotations.NotNull p0: O, @org.jetbrains.annotations.NotNull p1: java.lang.String): void
    public final method setMember(@org.jetbrains.annotations.NotNull p0: java.lang.String): void
}


public final class StackOverflowOnCallFromGetValueKt {
    private synthetic final static field $$delegatedProperties: kotlin.reflect.KProperty[]
    private final static @org.jetbrains.annotations.NotNull field topLevel$delegate: Delegate
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
    public final static method check(@org.jetbrains.annotations.NotNull p0: kotlin.jvm.functions.Function0): void
    public final static @org.jetbrains.annotations.NotNull method getTopLevel(): java.lang.String
    public final static method setTopLevel(@org.jetbrains.annotations.NotNull p0: java.lang.String): void
}
