package

public fun box(): kotlin.String
public fun kotlin.String.asFsdAddress(): kotlin.String

public abstract class GoBuildingRunConfiguration</*0*/ RunningState : GoBuildingRunningState<out GoBuildingRunConfiguration<RunningState!>!>!> {
    public constructor GoBuildingRunConfiguration</*0*/ RunningState : GoBuildingRunningState<out GoBuildingRunConfiguration<RunningState!>!>!>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public abstract class GoBuildingRunningState</*0*/ T : GoBuildingRunConfiguration<out GoBuildingRunningState<T!>!>!> : RunProfileState {
    public constructor GoBuildingRunningState</*0*/ T : GoBuildingRunConfiguration<out GoBuildingRunningState<T!>!>!>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open fun getBuildingWorkingDirectory(): kotlin.String!
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public interface RunProfileState {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public open class Test {
    public constructor Test()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    @org.jetbrains.annotations.Nullable public open fun getState(): RunProfileState?
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
