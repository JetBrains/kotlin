FILE: KotlinClass.kt
    @FILE:R|kotlin/OptIn|(markerClass = vararg(<getClass>(Q|kotlin/concurrent/atomics/ExperimentalAtomicApi|)))
    public open class KotlinClass : R|kotlin/Any| {
        public constructor(): R|KotlinClass| {
            super<R|kotlin/Any|>()
        }

        public open fun foo(a: R|kotlin/concurrent/atomics/AtomicReference<kotlin/Int>|): R|kotlin/Unit| {
        }

    }
FILE: test.kt
    @FILE:R|kotlin/OptIn|(markerClass = vararg(<getClass>(Q|kotlin/concurrent/atomics/ExperimentalAtomicApi|)))
    public final fun usage(a: R|JavaClass|): R|kotlin/Unit| {
        R|<local>/a|.R|/JavaClass.foo|(Q|java/util/concurrent/atomic|.R|java/util/concurrent/atomic/AtomicReference.AtomicReference|<R|kotlin/String!|>(String()))
        R|<local>/a|.R|/JavaClass.foo<Inapplicable(INAPPLICABLE): /JavaClass.foo>#|(R|kotlin/concurrent/atomics/AtomicReference.AtomicReference|<R|kotlin/Int|>(Int(1)))
    }
