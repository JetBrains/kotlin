KtFile: validExpressions.kt
  PACKAGE_DIRECTIVE
    <empty list>
  IMPORT_LIST
    <empty list>
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      RETURN
        PsiElement(return)('return')
        PsiErrorElement:There should be no space or comments before '@' in label reference
          <empty list>
        PsiWhiteSpace(' ')
        LABEL_QUALIFIER
          LABEL
            PsiElement(AT)('@')
            PsiElement(IDENTIFIER)('ann')
        PsiWhiteSpace(' ')
        INTEGER_CONSTANT
          PsiElement(INTEGER_LITERAL)('1')
      PsiWhiteSpace('\n    ')
      RETURN
        PsiElement(return)('return')
        PsiWhiteSpace(' ')
        PARENTHESIZED
          PsiElement(LPAR)('(')
          ANNOTATED_EXPRESSION
            ANNOTATION_ENTRY
              PsiElement(AT)('@')
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('ann')
            PsiWhiteSpace(' ')
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('2')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n    ')
      ANNOTATED_EXPRESSION
        ANNOTATION_ENTRY
          PsiElement(AT)('@')
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('ann')
        PsiWhiteSpace(' ')
        CALL_EXPRESSION
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('foo')
          VALUE_ARGUMENT_LIST
            PsiElement(LPAR)('(')
            VALUE_ARGUMENT
              STRING_TEMPLATE
                PsiElement(OPEN_QUOTE)('"')
                PsiElement(CLOSING_QUOTE)('"')
            PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n    ')
      BINARY_EXPRESSION
        BINARY_EXPRESSION
          ANNOTATED_EXPRESSION
            ANNOTATION_ENTRY
              PsiElement(AT)('@')
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('ann')
            PsiWhiteSpace(' ')
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('3')
          PsiWhiteSpace(' ')
          OPERATION_REFERENCE
            PsiElement(PLUS)('+')
          PsiWhiteSpace(' ')
          BINARY_EXPRESSION
            ANNOTATED_EXPRESSION
              ANNOTATION_ENTRY
                PsiElement(AT)('@')
                CONSTRUCTOR_CALLEE
                  TYPE_REFERENCE
                    USER_TYPE
                      REFERENCE_EXPRESSION
                        PsiElement(IDENTIFIER)('ann')
              PsiWhiteSpace(' ')
              INTEGER_CONSTANT
                PsiElement(INTEGER_LITERAL)('4')
            PsiWhiteSpace(' ')
            OPERATION_REFERENCE
              PsiElement(MUL)('*')
            PsiWhiteSpace(' ')
            ANNOTATED_EXPRESSION
              ANNOTATION_ENTRY
                PsiElement(AT)('@')
                CONSTRUCTOR_CALLEE
                  TYPE_REFERENCE
                    USER_TYPE
                      REFERENCE_EXPRESSION
                        PsiElement(IDENTIFIER)('ann')
                VALUE_ARGUMENT_LIST
                  PsiElement(LPAR)('(')
                  VALUE_ARGUMENT
                    STRING_TEMPLATE
                      PsiElement(OPEN_QUOTE)('"')
                      PsiElement(CLOSING_QUOTE)('"')
                  PsiElement(RPAR)(')')
              PsiWhiteSpace(' ')
              INTEGER_CONSTANT
                PsiElement(INTEGER_LITERAL)('5')
        PsiWhiteSpace(' ')
        OPERATION_REFERENCE
          PsiElement(IDENTIFIER)('infix')
        PsiWhiteSpace(' ')
        ANNOTATED_EXPRESSION
          ANNOTATION_ENTRY
            PsiElement(AT)('@')
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('ann')
          PsiWhiteSpace(' ')
          INTEGER_CONSTANT
            PsiElement(INTEGER_LITERAL)('6')
      PsiWhiteSpace('\n\n    ')
      DOT_QUALIFIED_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('foo')
        PsiElement(DOT)('.')
        CALL_EXPRESSION
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('bar')
          VALUE_ARGUMENT_LIST
            PsiElement(LPAR)('(')
            VALUE_ARGUMENT
              FUN
                MODIFIER_LIST
                  ANNOTATION_ENTRY
                    PsiElement(AT)('@')
                    CONSTRUCTOR_CALLEE
                      TYPE_REFERENCE
                        USER_TYPE
                          REFERENCE_EXPRESSION
                            PsiElement(IDENTIFIER)('ann')
                PsiWhiteSpace(' ')
                PsiElement(fun)('fun')
                VALUE_PARAMETER_LIST
                  PsiElement(LPAR)('(')
                  VALUE_PARAMETER
                    PsiElement(IDENTIFIER)('x')
                    PsiElement(COLON)(':')
                    PsiWhiteSpace(' ')
                    TYPE_REFERENCE
                      USER_TYPE
                        REFERENCE_EXPRESSION
                          PsiElement(IDENTIFIER)('Int')
                  PsiElement(RPAR)(')')
                PsiWhiteSpace(' ')
                BLOCK
                  PsiElement(LBRACE)('{')
                  PsiWhiteSpace('\n\n    ')
                  PsiElement(RBRACE)('}')
            PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n    ')
      ANNOTATED_EXPRESSION
        ANNOTATION_ENTRY
          PsiElement(AT)('@')
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('ann')
        PsiWhiteSpace(' ')
        IF
          PsiElement(if)('if')
          PsiWhiteSpace(' ')
          PsiElement(LPAR)('(')
          CONDITION
            BINARY_EXPRESSION
              ANNOTATED_EXPRESSION
                ANNOTATION_ENTRY
                  PsiElement(AT)('@')
                  CONSTRUCTOR_CALLEE
                    TYPE_REFERENCE
                      USER_TYPE
                        REFERENCE_EXPRESSION
                          PsiElement(IDENTIFIER)('ann')
                PsiWhiteSpace(' ')
                BOOLEAN_CONSTANT
                  PsiElement(true)('true')
              PsiWhiteSpace(' ')
              OPERATION_REFERENCE
                PsiElement(OROR)('||')
              PsiWhiteSpace(' ')
              BOOLEAN_CONSTANT
                PsiElement(true)('true')
          PsiElement(RPAR)(')')
          PsiWhiteSpace(' ')
          THEN
            BLOCK
              PsiElement(LBRACE)('{')
              PsiWhiteSpace('\n\n    ')
              PsiElement(RBRACE)('}')
          PsiWhiteSpace('\n    ')
          PsiElement(else)('else')
          PsiWhiteSpace(' ')
          ELSE
            BLOCK
              PsiElement(LBRACE)('{')
              PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n    ')
      FOR
        PsiElement(for)('for')
        PsiWhiteSpace(' ')
        PsiElement(LPAR)('(')
        VALUE_PARAMETER
          PsiElement(IDENTIFIER)('i')
        PsiWhiteSpace(' ')
        PsiElement(in)('in')
        PsiWhiteSpace(' ')
        LOOP_RANGE
          ANNOTATED_EXPRESSION
            ANNOTATION_ENTRY
              PsiElement(AT)('@')
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('ann')
            PsiWhiteSpace(' ')
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('x')
        PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        BODY
          BLOCK
            PsiElement(LBRACE)('{')
            PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n    ')
      LABELED_EXPRESSION
        LABEL_QUALIFIER
          LABEL
            PsiElement(IDENTIFIER)('label')
            PsiElement(AT)('@')
        PsiWhiteSpace(' ')
        ANNOTATED_EXPRESSION
          ANNOTATION_ENTRY
            PsiElement(AT)('@')
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('ann')
          PsiWhiteSpace(' ')
          WHILE
            PsiElement(while)('while')
            PsiWhiteSpace(' ')
            PsiElement(LPAR)('(')
            CONDITION
              BOOLEAN_CONSTANT
                PsiElement(true)('true')
            PsiElement(RPAR)(')')
            PsiWhiteSpace(' ')
            BODY
              BLOCK
                PsiElement(LBRACE)('{')
                PsiWhiteSpace('\n        ')
                ANNOTATED_EXPRESSION
                  ANNOTATION_ENTRY
                    PsiElement(AT)('@')
                    CONSTRUCTOR_CALLEE
                      TYPE_REFERENCE
                        USER_TYPE
                          REFERENCE_EXPRESSION
                            PsiElement(IDENTIFIER)('ann')
                  PsiWhiteSpace(' ')
                  BREAK
                    PsiElement(break)('break')
                    LABEL_QUALIFIER
                      LABEL
                        PsiElement(AT)('@')
                        PsiElement(IDENTIFIER)('label')
                PsiWhiteSpace('\n    ')
                PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n    ')
      RETURN
        PsiElement(return)('return')
        LABEL_QUALIFIER
          LABEL
            PsiElement(AT)('@')
            PsiElement(IDENTIFIER)('label')
        PsiWhiteSpace(' ')
        ANNOTATED_EXPRESSION
          ANNOTATION_ENTRY
            PsiElement(AT)('@')
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('ann')
          PsiWhiteSpace(' ')
          INTEGER_CONSTANT
            PsiElement(INTEGER_LITERAL)('1')
      PsiWhiteSpace('\n\n    ')
      LABELED_EXPRESSION
        LABEL_QUALIFIER
          LABEL
            PsiElement(IDENTIFIER)('label')
            PsiElement(AT)('@')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('simpleName')
      PsiWhiteSpace('\n\n    ')
      PROPERTY
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('x')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        ANNOTATED_EXPRESSION
          ANNOTATION_ENTRY
            PsiElement(AT)('@')
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('ann')
          PsiWhiteSpace(' ')
          ANNOTATION
            PsiElement(AT)('@')
            PsiElement(LBRACKET)('[')
            ANNOTATION_ENTRY
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('ann')
            PsiElement(RBRACKET)(']')
          PsiWhiteSpace(' ')
          LABELED_EXPRESSION
            LABEL_QUALIFIER
              LABEL
                PsiElement(IDENTIFIER)('l')
                PsiElement(AT)('@')
            LAMBDA_EXPRESSION
              FUNCTION_LITERAL
                PsiElement(LBRACE)('{')
                PsiWhiteSpace('\n        ')
                VALUE_PARAMETER_LIST
                  VALUE_PARAMETER
                    PsiElement(IDENTIFIER)('a')
                  PsiElement(COMMA)(',')
                  PsiWhiteSpace(' ')
                  VALUE_PARAMETER
                    PsiElement(IDENTIFIER)('b')
                  PsiElement(COMMA)(',')
                  PsiWhiteSpace(' ')
                  VALUE_PARAMETER
                    PsiElement(IDENTIFIER)('c')
                PsiWhiteSpace(' ')
                PsiElement(ARROW)('->')
                PsiWhiteSpace(' ')
                BLOCK
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('a')
                PsiWhiteSpace('\n    ')
                PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
