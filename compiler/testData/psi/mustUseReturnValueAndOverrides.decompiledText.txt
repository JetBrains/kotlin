Base1.class:
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

  public interface Base1 {
      public abstract fun unspecified(): kotlin.String
  }

Base2.class:
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

  @kotlin.MustUseReturnValue public interface Base2 {
      public abstract fun mustUse(): kotlin.String

      @kotlin.IgnorableReturnValue public abstract fun ignorable(): kotlin.String
  }

Impl1.class:
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

  public final class Impl1 public constructor() : Base1 {
      public open fun unspecified(): kotlin.String { /* compiled code */ }
  }

Impl2.class:
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

  public final class Impl2 public constructor() : Base2 {
      public open fun mustUse(): kotlin.String { /* compiled code */ }

      public open fun ignorable(): kotlin.String { /* compiled code */ }
  }

Impl3.class:
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

  @kotlin.MustUseReturnValue public final class Impl3 public constructor() : Base2 {
      public open fun mustUse(): kotlin.String { /* compiled code */ }

      @kotlin.IgnorableReturnValue public open fun ignorable(): kotlin.String { /* compiled code */ }
  }
