buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: "kotlin-multiplatform"

repositories {
    mavenLocal()
    mavenCentral()
}

kotlin.targets.fromPreset(kotlin.presets.js, 'browser') {
    browser()
}

dependencies {
    def browserMainImplConfigName =
            kotlin.getTargets().getByName("browser").getCompilations().getByName("main").getImplementationConfigurationName()

    add(browserMainImplConfigName, project(":libraryProject"))
    add(browserMainImplConfigName, "org.jetbrains.kotlin:kotlin-stdlib-js")
    add(browserMainImplConfigName, "org.mozilla:rhino:1.7.7.1")
}

tasks.named('compileKotlinBrowser') {
    kotlinOptions {
        sourceMap = true
        outputFile = "${buildDir}/web/exampleapp.js"
        suppressWarnings = true
        verbose = true
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinJsDce).configureEach {
    keep("exampleapp.exampleapp.status")
    destinationDirectory = project.layout.buildDirectory.dir("kotlin-js-min")
}

task runRhino(type: JavaExec) {
    dependsOn(tasks.named('processDceBrowserKotlinJs'))
    classpath = kotlin.targets.browser.compilations.main.runtimeDependencyFiles
    workingDir = "${buildDir}"
    mainClass = 'org.mozilla.javascript.tools.shell.Main'
    args = ["-opt", "-1",
            "-f", "kotlin-js-min/kotlin.js",
            "-f", "kotlin-js-min/examplelib.js",
            "-f", "kotlin-js-min/exampleapp.js",
            "-f", "../check.js"]
}
