FILE: inlineForTypeWithContext.kt
    public final fun noInlineRun(f: R|(kotlin/String) -> kotlin/Unit|): R|kotlin/Unit| {
        R|<local>/f|.R|SubstitutionOverride<kotlin/Function1.invoke: R|kotlin/Unit|>|(String())
    }
    public final inline fun test1(a: R|@ContextFunctionTypeParams (kotlin/String) -> kotlin/Unit|): R|kotlin/Unit| {
        R|/noInlineRun|(R|<local>/a|)
        object : R|kotlin/Any| {
            private constructor(): R|<anonymous>| {
                super<R|kotlin/Any|>()
            }

            public final fun run(): R|kotlin/Unit| {
                R|<local>/a|.R|SubstitutionOverride<kotlin/Function1.invoke: R|kotlin/Unit|>|(String())
            }

        }

    }
    public final var property1: R|@ContextFunctionTypeParams (kotlin/String) -> kotlin/Unit|
        public inline get(): R|@ContextFunctionTypeParams (kotlin/String) -> kotlin/Unit| {
            ^ fun <anonymous>(): R|kotlin/Unit| <inline=Unknown>  {
                ^ Unit
            }

        }
        public inline set(value: R|@ContextFunctionTypeParams (kotlin/String) -> kotlin/Unit|): R|kotlin/Unit| {
            R|/noInlineRun|(R|<local>/value|)
            object : R|kotlin/Any| {
                private constructor(): R|<anonymous>| {
                    super<R|kotlin/Any|>()
                }

                public final fun run(): R|kotlin/Unit| {
                    R|<local>/value|.R|SubstitutionOverride<kotlin/Function1.invoke: R|kotlin/Unit|>|(String())
                }

            }

        }
    public final inline fun test2(noinline a: R|@ContextFunctionTypeParams (kotlin/String) -> kotlin/Unit|): R|kotlin/Unit| {
        R|/noInlineRun|(R|<local>/a|)
    }
    public final var property2: R|@ContextFunctionTypeParams (kotlin/String) -> kotlin/Unit|
        public inline get(): R|@ContextFunctionTypeParams (kotlin/String) -> kotlin/Unit| {
            ^ fun <anonymous>(): R|kotlin/Unit| <inline=Unknown>  {
                ^ Unit
            }

        }
        public inline set(noinline value: R|@ContextFunctionTypeParams (kotlin/String) -> kotlin/Unit|): R|kotlin/Unit| {
            R|/noInlineRun|(R|<local>/value|)
        }
    public final inline fun test3(crossinline a: R|@ContextFunctionTypeParams (kotlin/String) -> kotlin/Unit|): R|kotlin/Unit| {
        object : R|kotlin/Any| {
            private constructor(): R|<anonymous>| {
                super<R|kotlin/Any|>()
            }

            public final fun run(): R|kotlin/Unit| {
                R|<local>/a|.R|SubstitutionOverride<kotlin/Function1.invoke: R|kotlin/Unit|>|(String())
            }

        }

    }
    public final var property3: R|@ContextFunctionTypeParams (kotlin/String) -> kotlin/Unit|
        public inline get(): R|@ContextFunctionTypeParams (kotlin/String) -> kotlin/Unit| {
            ^ fun <anonymous>(): R|kotlin/Unit| <inline=Unknown>  {
                ^ Unit
            }

        }
        public inline set(crossinline value: R|@ContextFunctionTypeParams (kotlin/String) -> kotlin/Unit|): R|kotlin/Unit| {
            object : R|kotlin/Any| {
                private constructor(): R|<anonymous>| {
                    super<R|kotlin/Any|>()
                }

                public final fun run(): R|kotlin/Unit| {
                    R|<local>/value|.R|SubstitutionOverride<kotlin/Function1.invoke: R|kotlin/Unit|>|(String())
                }

            }

        }
