Nested.class:
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

  package foo

  public final annotation class Nested public constructor(i: kotlin.Int, s: kotlin.String) : kotlin.Annotation {
      public final val i: kotlin.Int /* compiled code */ /* hasBackingField: false */

      public final val s: kotlin.String /* compiled code */ /* hasBackingField: false */
  }

Outer.class:
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

  public final annotation class Outer public constructor(some: kotlin.String, nested: foo.Nested) : kotlin.Annotation {
      public final val some: kotlin.String /* compiled code */ /* hasBackingField: false */

      public final val nested: foo.Nested /* compiled code */ /* hasBackingField: false */
  }

WithNested.class:
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

  @Outer public final class WithNested public constructor() {
  }

WithQualifiedNested.class:
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

  @Outer public final class WithQualifiedNested public constructor() {
  }
