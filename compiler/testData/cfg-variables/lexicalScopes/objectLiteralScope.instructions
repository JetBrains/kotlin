== foo ==
fun foo() {
    "before"
    val bar = object {
        init {
            val x = 1
        }
        fun foo() {
            val a = 2
        }
    }
    "after"
}
---------------------
L0:
  1 <START>                                                                                       INIT: in: {} out: {}
  2 mark({ "before" val bar = object { init { val x = 1 } fun foo() { val a = 2 } } "after" })
    mark("before")
    r("before") -> <v0>
    v(val bar = object { init { val x = 1 } fun foo() { val a = 2 } })                            INIT: in: {} out: {bar=D}
    mark(object { init { val x = 1 } fun foo() { val a = 2 } })                                   INIT: in: {bar=D} out: {bar=D}
  3 mark({ val x = 1 })
    v(val x = 1)                                                                                  INIT: in: {bar=D} out: {bar=D, x=D}
    r(1) -> <v1>                                                                                  INIT: in: {bar=D, x=D} out: {bar=D, x=D}
    w(x|<v1>)                                                                                     INIT: in: {bar=D, x=D} out: {bar=D, x=ID}
  2 jmp?(L2)                                                                                      INIT: in: {bar=D} out: {bar=D}
    d(fun foo() { val a = 2 })
L2 [after local declaration]:
    r(object { init { val x = 1 } fun foo() { val a = 2 } }) -> <v2>
    w(bar|<v2>)                                                                                   INIT: in: {bar=D} out: {bar=ID}
    mark("after")                                                                                 INIT: in: {bar=ID} out: {bar=ID}
    r("after") -> <v3>
L1:
  1 <END>                                                                                         INIT: in: {} out: {}
error:
    <ERROR>
sink:
    <SINK>                                                                                                                                     USE: in: {} out: {}
=====================
== foo ==
fun foo() {
            val a = 2
        }
---------------------
L3:
  3 <START>                INIT: in: {} out: {}
  4 mark({ val a = 2 })
    v(val a = 2)           INIT: in: {} out: {a=D}
    r(2) -> <v0>           INIT: in: {a=D} out: {a=D}
    w(a|<v0>)              INIT: in: {a=D} out: {a=ID}
L4:
  3 <END>                  INIT: in: {} out: {}
error:
    <ERROR>
sink:
    <SINK>                                                USE: in: {} out: {}
=====================