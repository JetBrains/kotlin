// CHECK:
//   Mangled name: A
//   Public signature: /A|null[0]
class A : LinkedList<Int>, SequencedCollection<Int> {
  // CHECK:
  //   Mangled name: A#<init>(){}
  //   Public signature: /A.<init>|-5645683436151566731[0]
  //   Public signature debug description: <init>(){}
  constructor() /* primary */

  // CHECK JVM_IR:
  //   Mangled name: A#add(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /A.add|7559962077055454748[0]
  //   Public signature debug description: add(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun add(p0: @EnhancedNullability Int): Boolean

  // CHECK:
  //   Mangled name: A#add(kotlin.Int;kotlin.Int{EnhancedNullability}){}
  //   Public signature: /A.add|-3194712170900556378[0]
  //   Public signature debug description: add(kotlin.Int;kotlin.Int{EnhancedNullability}){}
  /* fake */ override fun add(p0: Int, p1: @EnhancedNullability Int): Unit

  // CHECK JVM_IR:
  //   Mangled name: A#addAll(kotlin.collections.Collection<out|kotlin.Int{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /A.addAll|-8388196230555083661[0]
  //   Public signature debug description: addAll(kotlin.collections.Collection<out|kotlin.Int{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun addAll(p0: @EnhancedNullability Collection<out @EnhancedNullability Int>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#addAll(kotlin.Int;kotlin.collections.Collection<out|kotlin.Int{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /A.addAll|30670022050259765[0]
  //   Public signature debug description: addAll(kotlin.Int;kotlin.collections.Collection<out|kotlin.Int{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun addAll(p0: Int, p1: @EnhancedNullability Collection<out @EnhancedNullability Int>): Boolean

  // CHECK:
  //   Mangled name: A#addFirst(kotlin.Int?){}
  //   Public signature: /A.addFirst|-2173470440078379794[0]
  //   Public signature debug description: addFirst(kotlin.Int?){}
  /* fake */ override fun addFirst(p0: Int?): Unit

  // CHECK:
  //   Mangled name: A#addLast(kotlin.Int?){}
  //   Public signature: /A.addLast|-5644727607669257675[0]
  //   Public signature debug description: addLast(kotlin.Int?){}
  /* fake */ override fun addLast(p0: Int?): Unit

  // CHECK:
  //   Mangled name: A#clear(){}
  //   Public signature: /A.clear|-6446868449915108923[0]
  //   Public signature debug description: clear(){}
  /* fake */ override fun clear(): Unit

  // CHECK JVM_IR:
  //   Mangled name: A#clone(){}kotlin.Any{EnhancedNullability}
  //   Public signature: /A.clone|178802004086941196[0]
  //   Public signature debug description: clone(){}kotlin.Any{EnhancedNullability}
  /* fake */ override fun clone(): @EnhancedNullability Any

  // CHECK JVM_IR:
  //   Mangled name: A#contains(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /A.contains|3736388240191289860[0]
  //   Public signature debug description: contains(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override operator fun contains(p0: @EnhancedNullability Int): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#containsAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  //   Public signature: /A.containsAll|-6765067201579764726[0]
  //   Public signature debug description: containsAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  /* fake */ override fun containsAll(p0: Collection<@EnhancedNullability Int>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#descendingIterator(){}kotlin.collections.MutableIterator<kotlin.Int?>?
  //   Public signature: /A.descendingIterator|1071257290826097767[0]
  //   Public signature debug description: descendingIterator(){}kotlin.collections.MutableIterator<kotlin.Int?>?
  /* fake */ override fun descendingIterator(): MutableIterator<Int?>?

  // CHECK JVM_IR:
  //   Mangled name: A#element(){}kotlin.Int?
  //   Public signature: /A.element|-4356321082888444556[0]
  //   Public signature debug description: element(){}kotlin.Int?
  /* fake */ override fun element(): Int?

  // CHECK JVM_IR:
  //   Mangled name: A#equals(kotlin.Any?{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /A.equals|4126616015386471185[0]
  //   Public signature debug description: equals(kotlin.Any?{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override operator fun equals(p0: @EnhancedNullability Any?): Boolean

  // CHECK:
  //   Mangled name: A#forEach(java.util.function.Consumer<in|kotlin.Int?>?){}
  //   Public signature: /A.forEach|5766969768772302175[0]
  //   Public signature debug description: forEach(java.util.function.Consumer<in|kotlin.Int?>?){}
  /* fake */ override fun forEach(p0: Consumer<in Int?>?): Unit

  // CHECK JVM_IR:
  //   Mangled name: A#get(kotlin.Int){}kotlin.Int{EnhancedNullability}
  //   Public signature: /A.get|-8822924217357855534[0]
  //   Public signature debug description: get(kotlin.Int){}kotlin.Int{EnhancedNullability}
  /* fake */ override operator fun get(p0: Int): @EnhancedNullability Int

  // CHECK JVM_IR:
  //   Mangled name: A#getFirst(){}kotlin.Int?
  //   Public signature: /A.getFirst|-7242180087307551226[0]
  //   Public signature debug description: getFirst(){}kotlin.Int?
  /* fake */ override fun getFirst(): Int?

  // CHECK JVM_IR:
  //   Mangled name: A#getLast(){}kotlin.Int?
  //   Public signature: /A.getLast|9162126560290473313[0]
  //   Public signature debug description: getLast(){}kotlin.Int?
  /* fake */ override fun getLast(): Int?

  // CHECK JVM_IR:
  //   Mangled name: A#hashCode(){}kotlin.Int
  //   Public signature: /A.hashCode|-8048879360829830756[0]
  //   Public signature debug description: hashCode(){}kotlin.Int
  /* fake */ override fun hashCode(): Int

  // CHECK JVM_IR:
  //   Mangled name: A#indexOf(kotlin.Int{EnhancedNullability}){}kotlin.Int
  //   Public signature: /A.indexOf|866974352596659798[0]
  //   Public signature debug description: indexOf(kotlin.Int{EnhancedNullability}){}kotlin.Int
  /* fake */ override fun indexOf(p0: @EnhancedNullability Int): Int

  // CHECK JVM_IR:
  //   Mangled name: A#isEmpty(){}kotlin.Boolean
  //   Public signature: /A.isEmpty|-626562167393617703[0]
  //   Public signature debug description: isEmpty(){}kotlin.Boolean
  /* fake */ override fun isEmpty(): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#iterator(){}kotlin.collections.MutableIterator<kotlin.Int{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /A.iterator|115627760567581658[0]
  //   Public signature debug description: iterator(){}kotlin.collections.MutableIterator<kotlin.Int{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override operator fun iterator(): @EnhancedNullability MutableIterator<@EnhancedNullability Int>

  // CHECK JVM_IR:
  //   Mangled name: A#lastIndexOf(kotlin.Int{EnhancedNullability}){}kotlin.Int
  //   Public signature: /A.lastIndexOf|1115527748420890033[0]
  //   Public signature debug description: lastIndexOf(kotlin.Int{EnhancedNullability}){}kotlin.Int
  /* fake */ override fun lastIndexOf(p0: @EnhancedNullability Int): Int

  // CHECK JVM_IR:
  //   Mangled name: A#listIterator(){}kotlin.collections.MutableListIterator<kotlin.Int{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /A.listIterator|4960815808465755041[0]
  //   Public signature debug description: listIterator(){}kotlin.collections.MutableListIterator<kotlin.Int{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override fun listIterator(): @EnhancedNullability MutableListIterator<@EnhancedNullability Int>

  // CHECK JVM_IR:
  //   Mangled name: A#listIterator(kotlin.Int){}kotlin.collections.MutableListIterator<kotlin.Int{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /A.listIterator|-2268028930611070307[0]
  //   Public signature debug description: listIterator(kotlin.Int){}kotlin.collections.MutableListIterator<kotlin.Int{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override fun listIterator(p0: Int): @EnhancedNullability MutableListIterator<@EnhancedNullability Int>

  // CHECK JVM_IR:
  //   Mangled name: A#offer(kotlin.Int?){}kotlin.Boolean
  //   Public signature: /A.offer|5383712942582867597[0]
  //   Public signature debug description: offer(kotlin.Int?){}kotlin.Boolean
  /* fake */ override fun offer(p0: Int?): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#offerFirst(kotlin.Int?){}kotlin.Boolean
  //   Public signature: /A.offerFirst|-2230086223299906854[0]
  //   Public signature debug description: offerFirst(kotlin.Int?){}kotlin.Boolean
  /* fake */ override fun offerFirst(p0: Int?): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#offerLast(kotlin.Int?){}kotlin.Boolean
  //   Public signature: /A.offerLast|8216393660704417722[0]
  //   Public signature debug description: offerLast(kotlin.Int?){}kotlin.Boolean
  /* fake */ override fun offerLast(p0: Int?): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#parallelStream(){}java.util.stream.Stream<kotlin.Int?{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /A.parallelStream|-8395108522211591010[0]
  //   Public signature debug description: parallelStream(){}java.util.stream.Stream<kotlin.Int?{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override fun parallelStream(): @EnhancedNullability Stream<@EnhancedNullability Int?>

  // CHECK JVM_IR:
  //   Mangled name: A#peek(){}kotlin.Int?
  //   Public signature: /A.peek|1449412375335436775[0]
  //   Public signature debug description: peek(){}kotlin.Int?
  /* fake */ override fun peek(): Int?

  // CHECK JVM_IR:
  //   Mangled name: A#peekFirst(){}kotlin.Int?
  //   Public signature: /A.peekFirst|3484373790324163809[0]
  //   Public signature debug description: peekFirst(){}kotlin.Int?
  /* fake */ override fun peekFirst(): Int?

  // CHECK JVM_IR:
  //   Mangled name: A#peekLast(){}kotlin.Int?
  //   Public signature: /A.peekLast|-4316576568426072473[0]
  //   Public signature debug description: peekLast(){}kotlin.Int?
  /* fake */ override fun peekLast(): Int?

  // CHECK JVM_IR:
  //   Mangled name: A#poll(){}kotlin.Int?
  //   Public signature: /A.poll|8800911321434884711[0]
  //   Public signature debug description: poll(){}kotlin.Int?
  /* fake */ override fun poll(): Int?

  // CHECK JVM_IR:
  //   Mangled name: A#pollFirst(){}kotlin.Int?
  //   Public signature: /A.pollFirst|960266731318436282[0]
  //   Public signature debug description: pollFirst(){}kotlin.Int?
  /* fake */ override fun pollFirst(): Int?

  // CHECK JVM_IR:
  //   Mangled name: A#pollLast(){}kotlin.Int?
  //   Public signature: /A.pollLast|-8728956190889553236[0]
  //   Public signature debug description: pollLast(){}kotlin.Int?
  /* fake */ override fun pollLast(): Int?

  // CHECK JVM_IR:
  //   Mangled name: A#pop(){}kotlin.Int?
  //   Public signature: /A.pop|-1522484764836752145[0]
  //   Public signature debug description: pop(){}kotlin.Int?
  /* fake */ override fun pop(): Int?

  // CHECK:
  //   Mangled name: A#push(kotlin.Int?){}
  //   Public signature: /A.push|3371514512529143423[0]
  //   Public signature debug description: push(kotlin.Int?){}
  /* fake */ override fun push(p0: Int?): Unit

  // CHECK JVM_IR:
  //   Mangled name: A#remove(){}kotlin.Int?
  //   Public signature: /A.remove|-548887123174520269[0]
  //   Public signature debug description: remove(){}kotlin.Int?
  /* fake */ override fun remove(): Int?

  // CHECK JVM_IR:
  //   Mangled name: A#remove(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /A.remove|2933193249427016334[0]
  //   Public signature debug description: remove(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun remove(p0: @EnhancedNullability Int): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#removeAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  //   Public signature: /A.removeAll|-5493620261823900507[0]
  //   Public signature debug description: removeAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  /* fake */ override fun removeAll(p0: Collection<@EnhancedNullability Int>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#removeAt(kotlin.Int){}kotlin.Int{EnhancedNullability}
  //   Public signature: /A.removeAt|6480490686215931144[0]
  //   Public signature debug description: removeAt(kotlin.Int){}kotlin.Int{EnhancedNullability}
  /* fake */ override operator fun removeAt(p0: Int): @EnhancedNullability Int

  // CHECK JVM_IR:
  //   Mangled name: A#removeFirst(){}kotlin.Int?
  //   Public signature: /A.removeFirst|2188100118001713249[0]
  //   Public signature debug description: removeFirst(){}kotlin.Int?
  /* fake */ override fun removeFirst(): Int?

  // CHECK JVM_IR:
  //   Mangled name: A#removeFirstOccurrence(kotlin.Any?){}kotlin.Boolean
  //   Public signature: /A.removeFirstOccurrence|-4824227101127372040[0]
  //   Public signature debug description: removeFirstOccurrence(kotlin.Any?){}kotlin.Boolean
  /* fake */ override fun removeFirstOccurrence(p0: Any?): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#removeIf(java.util.function.Predicate<in|kotlin.Int?{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /A.removeIf|-6050971756324174635[0]
  //   Public signature debug description: removeIf(java.util.function.Predicate<in|kotlin.Int?{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun removeIf(p0: @EnhancedNullability Predicate<in @EnhancedNullability Int?>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#removeLast(){}kotlin.Int?
  //   Public signature: /A.removeLast|-8509429199438418208[0]
  //   Public signature debug description: removeLast(){}kotlin.Int?
  /* fake */ override fun removeLast(): Int?

  // CHECK JVM_IR:
  //   Mangled name: A#removeLastOccurrence(kotlin.Any?){}kotlin.Boolean
  //   Public signature: /A.removeLastOccurrence|-4951152957490490384[0]
  //   Public signature debug description: removeLastOccurrence(kotlin.Any?){}kotlin.Boolean
  /* fake */ override fun removeLastOccurrence(p0: Any?): Boolean

  // CHECK:
  //   Mangled name: A#removeRange(kotlin.Int;kotlin.Int){}
  //   Public signature: /A.removeRange|7632320944993890593[0]
  //   Public signature debug description: removeRange(kotlin.Int;kotlin.Int){}
  protected_and_package /* fake */ override fun removeRange(p0: Int, p1: Int): Unit

  // CHECK:
  //   Mangled name: A#replaceAll(java.util.function.UnaryOperator<kotlin.Int?{EnhancedNullability}>{EnhancedNullability}){}
  //   Public signature: /A.replaceAll|6274321624880920804[0]
  //   Public signature debug description: replaceAll(java.util.function.UnaryOperator<kotlin.Int?{EnhancedNullability}>{EnhancedNullability}){}
  /* fake */ override fun replaceAll(p0: @EnhancedNullability UnaryOperator<@EnhancedNullability Int?>): Unit

  // CHECK JVM_IR:
  //   Mangled name: A#retainAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  //   Public signature: /A.retainAll|-3550913358824719637[0]
  //   Public signature debug description: retainAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  /* fake */ override fun retainAll(p0: Collection<@EnhancedNullability Int>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#reversed(){}java.util.LinkedList<kotlin.Int?>?
  //   Public signature: /A.reversed|-5289114913512537611[0]
  //   Public signature debug description: reversed(){}java.util.LinkedList<kotlin.Int?>?
  /* fake */ override fun reversed(): LinkedList<Int?>?

  // CHECK JVM_IR:
  //   Mangled name: A#set(kotlin.Int;kotlin.Int{EnhancedNullability}){}kotlin.Int{EnhancedNullability}
  //   Public signature: /A.set|-7932912415931410975[0]
  //   Public signature debug description: set(kotlin.Int;kotlin.Int{EnhancedNullability}){}kotlin.Int{EnhancedNullability}
  /* fake */ override operator fun set(p0: Int, p1: @EnhancedNullability Int): @EnhancedNullability Int

  // CHECK:
  //   Mangled name: A#sort(java.util.Comparator<in|kotlin.Int?>?){}
  //   Public signature: /A.sort|8069876015820305517[0]
  //   Public signature debug description: sort(java.util.Comparator<in|kotlin.Int?>?){}
  /* fake */ override fun sort(p0: Comparator<in Int?>?): Unit

  // CHECK JVM_IR:
  //   Mangled name: A#spliterator(){}java.util.Spliterator<kotlin.Int?>{EnhancedNullability}
  //   Public signature: /A.spliterator|-3709449862893660489[0]
  //   Public signature debug description: spliterator(){}java.util.Spliterator<kotlin.Int?>{EnhancedNullability}
  /* fake */ override fun spliterator(): @EnhancedNullability Spliterator<Int?>

  // CHECK JVM_IR:
  //   Mangled name: A#stream(){}java.util.stream.Stream<kotlin.Int?{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /A.stream|1565529915260485250[0]
  //   Public signature debug description: stream(){}java.util.stream.Stream<kotlin.Int?{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override fun stream(): @EnhancedNullability Stream<@EnhancedNullability Int?>

  // CHECK JVM_IR:
  //   Mangled name: A#subList(kotlin.Int;kotlin.Int){}kotlin.collections.MutableList<kotlin.Int{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /A.subList|127837164145565172[0]
  //   Public signature debug description: subList(kotlin.Int;kotlin.Int){}kotlin.collections.MutableList<kotlin.Int{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override fun subList(p0: Int, p1: Int): @EnhancedNullability MutableList<@EnhancedNullability Int>

  // CHECK JVM_IR:
  //   Mangled name: A#toArray(){}kotlin.Array<out|kotlin.Any?>?
  //   Public signature: /A.toArray|-8468800257910341540[0]
  //   Public signature debug description: toArray(){}kotlin.Array<out|kotlin.Any?>?
  /* fake */ override fun toArray(): Array<out Any?>?

  // CHECK JVM_IR:
  //   Mangled name: A#toArray(kotlin.Array<out|0:0?>?){0§<kotlin.Any?>}kotlin.Array<out|0:0?>?
  //   Public signature: /A.toArray|-7248906015406159030[0]
  //   Public signature debug description: toArray(kotlin.Array<out|0:0?>?){0§<kotlin.Any?>}kotlin.Array<out|0:0?>?
  /* fake */ override fun <T : Any?> toArray(p0: Array<out T?>?): Array<out T?>?

  // CHECK JVM_IR:
  //   Mangled name: A#toArray(java.util.function.IntFunction<kotlin.Array<out|0:0?>?>?){0§<kotlin.Any?>}kotlin.Array<out|0:0?>?
  //   Public signature: /A.toArray|-1022881482544918047[0]
  //   Public signature debug description: toArray(java.util.function.IntFunction<kotlin.Array<out|0:0?>?>?){0§<kotlin.Any?>}kotlin.Array<out|0:0?>?
  /* fake */ override fun <T : Any?> toArray(p0: IntFunction<Array<out T?>?>?): Array<out T?>?

  // CHECK JVM_IR:
  //   Mangled name: A#toString(){}kotlin.String{EnhancedNullability}
  //   Public signature: /A.toString|7581629773206850948[0]
  //   Public signature debug description: toString(){}kotlin.String{EnhancedNullability}
  /* fake */ override fun toString(): @EnhancedNullability String

  // CHECK:
  //   Mangled name: A{}size
  //   Public signature: /A.size|-6253659984320132064[0]
  //   Public signature debug description: {}size
  /* fake */ override val size: Int
    // CHECK JVM_IR:
    //   Mangled name: A#<get-size>(){}kotlin.Int
    //   Public signature: /A.size.<get-size>|-3941649985161900780[0]
    //   Public signature debug description: <get-size>(){}kotlin.Int
    /* fake */ override get(): Int

}

// CHECK:
//   Mangled name: B
//   Public signature: /B|null[0]
class B : LinkedList<Int>, SequencedCollection<Int> {
  // CHECK:
  //   Mangled name: B#<init>(){}
  //   Public signature: /B.<init>|-5645683436151566731[0]
  //   Public signature debug description: <init>(){}
  constructor() /* primary */

  // CHECK JVM_IR:
  //   Mangled name: B#add(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /B.add|7559962077055454748[0]
  //   Public signature debug description: add(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun add(p0: @EnhancedNullability Int): Boolean

  // CHECK:
  //   Mangled name: B#add(kotlin.Int;kotlin.Int{EnhancedNullability}){}
  //   Public signature: /B.add|-3194712170900556378[0]
  //   Public signature debug description: add(kotlin.Int;kotlin.Int{EnhancedNullability}){}
  /* fake */ override fun add(p0: Int, p1: @EnhancedNullability Int): Unit

  // CHECK JVM_IR:
  //   Mangled name: B#addAll(kotlin.collections.Collection<out|kotlin.Int{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /B.addAll|-8388196230555083661[0]
  //   Public signature debug description: addAll(kotlin.collections.Collection<out|kotlin.Int{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun addAll(p0: @EnhancedNullability Collection<out @EnhancedNullability Int>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#addAll(kotlin.Int;kotlin.collections.Collection<out|kotlin.Int{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /B.addAll|30670022050259765[0]
  //   Public signature debug description: addAll(kotlin.Int;kotlin.collections.Collection<out|kotlin.Int{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun addAll(p0: Int, p1: @EnhancedNullability Collection<out @EnhancedNullability Int>): Boolean

  // CHECK:
  //   Mangled name: B#addLast(kotlin.Int?){}
  //   Public signature: /B.addLast|-5644727607669257675[0]
  //   Public signature debug description: addLast(kotlin.Int?){}
  /* fake */ override fun addLast(p0: Int?): Unit

  // CHECK:
  //   Mangled name: B#clear(){}
  //   Public signature: /B.clear|-6446868449915108923[0]
  //   Public signature debug description: clear(){}
  /* fake */ override fun clear(): Unit

  // CHECK JVM_IR:
  //   Mangled name: B#clone(){}kotlin.Any{EnhancedNullability}
  //   Public signature: /B.clone|178802004086941196[0]
  //   Public signature debug description: clone(){}kotlin.Any{EnhancedNullability}
  /* fake */ override fun clone(): @EnhancedNullability Any

  // CHECK JVM_IR:
  //   Mangled name: B#contains(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /B.contains|3736388240191289860[0]
  //   Public signature debug description: contains(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override operator fun contains(p0: @EnhancedNullability Int): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#containsAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  //   Public signature: /B.containsAll|-6765067201579764726[0]
  //   Public signature debug description: containsAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  /* fake */ override fun containsAll(p0: Collection<@EnhancedNullability Int>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#descendingIterator(){}kotlin.collections.MutableIterator<kotlin.Int?>?
  //   Public signature: /B.descendingIterator|1071257290826097767[0]
  //   Public signature debug description: descendingIterator(){}kotlin.collections.MutableIterator<kotlin.Int?>?
  /* fake */ override fun descendingIterator(): MutableIterator<Int?>?

  // CHECK JVM_IR:
  //   Mangled name: B#element(){}kotlin.Int?
  //   Public signature: /B.element|-4356321082888444556[0]
  //   Public signature debug description: element(){}kotlin.Int?
  /* fake */ override fun element(): Int?

  // CHECK JVM_IR:
  //   Mangled name: B#equals(kotlin.Any?{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /B.equals|4126616015386471185[0]
  //   Public signature debug description: equals(kotlin.Any?{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override operator fun equals(p0: @EnhancedNullability Any?): Boolean

  // CHECK:
  //   Mangled name: B#forEach(java.util.function.Consumer<in|kotlin.Int?>?){}
  //   Public signature: /B.forEach|5766969768772302175[0]
  //   Public signature debug description: forEach(java.util.function.Consumer<in|kotlin.Int?>?){}
  /* fake */ override fun forEach(p0: Consumer<in Int?>?): Unit

  // CHECK JVM_IR:
  //   Mangled name: B#get(kotlin.Int){}kotlin.Int{EnhancedNullability}
  //   Public signature: /B.get|-8822924217357855534[0]
  //   Public signature debug description: get(kotlin.Int){}kotlin.Int{EnhancedNullability}
  /* fake */ override operator fun get(p0: Int): @EnhancedNullability Int

  // CHECK JVM_IR:
  //   Mangled name: B#getFirst(){}kotlin.Int?
  //   Public signature: /B.getFirst|-7242180087307551226[0]
  //   Public signature debug description: getFirst(){}kotlin.Int?
  /* fake */ override fun getFirst(): Int?

  // CHECK JVM_IR:
  //   Mangled name: B#getLast(){}kotlin.Int?
  //   Public signature: /B.getLast|9162126560290473313[0]
  //   Public signature debug description: getLast(){}kotlin.Int?
  /* fake */ override fun getLast(): Int?

  // CHECK JVM_IR:
  //   Mangled name: B#hashCode(){}kotlin.Int
  //   Public signature: /B.hashCode|-8048879360829830756[0]
  //   Public signature debug description: hashCode(){}kotlin.Int
  /* fake */ override fun hashCode(): Int

  // CHECK JVM_IR:
  //   Mangled name: B#indexOf(kotlin.Int{EnhancedNullability}){}kotlin.Int
  //   Public signature: /B.indexOf|866974352596659798[0]
  //   Public signature debug description: indexOf(kotlin.Int{EnhancedNullability}){}kotlin.Int
  /* fake */ override fun indexOf(p0: @EnhancedNullability Int): Int

  // CHECK JVM_IR:
  //   Mangled name: B#isEmpty(){}kotlin.Boolean
  //   Public signature: /B.isEmpty|-626562167393617703[0]
  //   Public signature debug description: isEmpty(){}kotlin.Boolean
  /* fake */ override fun isEmpty(): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#iterator(){}kotlin.collections.MutableIterator<kotlin.Int{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /B.iterator|115627760567581658[0]
  //   Public signature debug description: iterator(){}kotlin.collections.MutableIterator<kotlin.Int{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override operator fun iterator(): @EnhancedNullability MutableIterator<@EnhancedNullability Int>

  // CHECK JVM_IR:
  //   Mangled name: B#lastIndexOf(kotlin.Int{EnhancedNullability}){}kotlin.Int
  //   Public signature: /B.lastIndexOf|1115527748420890033[0]
  //   Public signature debug description: lastIndexOf(kotlin.Int{EnhancedNullability}){}kotlin.Int
  /* fake */ override fun lastIndexOf(p0: @EnhancedNullability Int): Int

  // CHECK JVM_IR:
  //   Mangled name: B#listIterator(){}kotlin.collections.MutableListIterator<kotlin.Int{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /B.listIterator|4960815808465755041[0]
  //   Public signature debug description: listIterator(){}kotlin.collections.MutableListIterator<kotlin.Int{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override fun listIterator(): @EnhancedNullability MutableListIterator<@EnhancedNullability Int>

  // CHECK JVM_IR:
  //   Mangled name: B#listIterator(kotlin.Int){}kotlin.collections.MutableListIterator<kotlin.Int{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /B.listIterator|-2268028930611070307[0]
  //   Public signature debug description: listIterator(kotlin.Int){}kotlin.collections.MutableListIterator<kotlin.Int{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override fun listIterator(p0: Int): @EnhancedNullability MutableListIterator<@EnhancedNullability Int>

  // CHECK JVM_IR:
  //   Mangled name: B#offer(kotlin.Int?){}kotlin.Boolean
  //   Public signature: /B.offer|5383712942582867597[0]
  //   Public signature debug description: offer(kotlin.Int?){}kotlin.Boolean
  /* fake */ override fun offer(p0: Int?): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#offerFirst(kotlin.Int?){}kotlin.Boolean
  //   Public signature: /B.offerFirst|-2230086223299906854[0]
  //   Public signature debug description: offerFirst(kotlin.Int?){}kotlin.Boolean
  /* fake */ override fun offerFirst(p0: Int?): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#offerLast(kotlin.Int?){}kotlin.Boolean
  //   Public signature: /B.offerLast|8216393660704417722[0]
  //   Public signature debug description: offerLast(kotlin.Int?){}kotlin.Boolean
  /* fake */ override fun offerLast(p0: Int?): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#parallelStream(){}java.util.stream.Stream<kotlin.Int?{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /B.parallelStream|-8395108522211591010[0]
  //   Public signature debug description: parallelStream(){}java.util.stream.Stream<kotlin.Int?{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override fun parallelStream(): @EnhancedNullability Stream<@EnhancedNullability Int?>

  // CHECK JVM_IR:
  //   Mangled name: B#peek(){}kotlin.Int?
  //   Public signature: /B.peek|1449412375335436775[0]
  //   Public signature debug description: peek(){}kotlin.Int?
  /* fake */ override fun peek(): Int?

  // CHECK JVM_IR:
  //   Mangled name: B#peekFirst(){}kotlin.Int?
  //   Public signature: /B.peekFirst|3484373790324163809[0]
  //   Public signature debug description: peekFirst(){}kotlin.Int?
  /* fake */ override fun peekFirst(): Int?

  // CHECK JVM_IR:
  //   Mangled name: B#peekLast(){}kotlin.Int?
  //   Public signature: /B.peekLast|-4316576568426072473[0]
  //   Public signature debug description: peekLast(){}kotlin.Int?
  /* fake */ override fun peekLast(): Int?

  // CHECK JVM_IR:
  //   Mangled name: B#poll(){}kotlin.Int?
  //   Public signature: /B.poll|8800911321434884711[0]
  //   Public signature debug description: poll(){}kotlin.Int?
  /* fake */ override fun poll(): Int?

  // CHECK JVM_IR:
  //   Mangled name: B#pollFirst(){}kotlin.Int?
  //   Public signature: /B.pollFirst|960266731318436282[0]
  //   Public signature debug description: pollFirst(){}kotlin.Int?
  /* fake */ override fun pollFirst(): Int?

  // CHECK JVM_IR:
  //   Mangled name: B#pollLast(){}kotlin.Int?
  //   Public signature: /B.pollLast|-8728956190889553236[0]
  //   Public signature debug description: pollLast(){}kotlin.Int?
  /* fake */ override fun pollLast(): Int?

  // CHECK JVM_IR:
  //   Mangled name: B#pop(){}kotlin.Int?
  //   Public signature: /B.pop|-1522484764836752145[0]
  //   Public signature debug description: pop(){}kotlin.Int?
  /* fake */ override fun pop(): Int?

  // CHECK:
  //   Mangled name: B#push(kotlin.Int?){}
  //   Public signature: /B.push|3371514512529143423[0]
  //   Public signature debug description: push(kotlin.Int?){}
  /* fake */ override fun push(p0: Int?): Unit

  // CHECK JVM_IR:
  //   Mangled name: B#remove(){}kotlin.Int?
  //   Public signature: /B.remove|-548887123174520269[0]
  //   Public signature debug description: remove(){}kotlin.Int?
  /* fake */ override fun remove(): Int?

  // CHECK JVM_IR:
  //   Mangled name: B#remove(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /B.remove|2933193249427016334[0]
  //   Public signature debug description: remove(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun remove(p0: @EnhancedNullability Int): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#removeAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  //   Public signature: /B.removeAll|-5493620261823900507[0]
  //   Public signature debug description: removeAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  /* fake */ override fun removeAll(p0: Collection<@EnhancedNullability Int>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#removeAt(kotlin.Int){}kotlin.Int{EnhancedNullability}
  //   Public signature: /B.removeAt|6480490686215931144[0]
  //   Public signature debug description: removeAt(kotlin.Int){}kotlin.Int{EnhancedNullability}
  /* fake */ override operator fun removeAt(p0: Int): @EnhancedNullability Int

  // CHECK JVM_IR:
  //   Mangled name: B#removeFirst(){}kotlin.Int?
  //   Public signature: /B.removeFirst|2188100118001713249[0]
  //   Public signature debug description: removeFirst(){}kotlin.Int?
  /* fake */ override fun removeFirst(): Int?

  // CHECK JVM_IR:
  //   Mangled name: B#removeFirstOccurrence(kotlin.Any?){}kotlin.Boolean
  //   Public signature: /B.removeFirstOccurrence|-4824227101127372040[0]
  //   Public signature debug description: removeFirstOccurrence(kotlin.Any?){}kotlin.Boolean
  /* fake */ override fun removeFirstOccurrence(p0: Any?): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#removeIf(java.util.function.Predicate<in|kotlin.Int?{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /B.removeIf|-6050971756324174635[0]
  //   Public signature debug description: removeIf(java.util.function.Predicate<in|kotlin.Int?{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun removeIf(p0: @EnhancedNullability Predicate<in @EnhancedNullability Int?>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#removeLast(){}kotlin.Int?
  //   Public signature: /B.removeLast|-8509429199438418208[0]
  //   Public signature debug description: removeLast(){}kotlin.Int?
  /* fake */ override fun removeLast(): Int?

  // CHECK JVM_IR:
  //   Mangled name: B#removeLastOccurrence(kotlin.Any?){}kotlin.Boolean
  //   Public signature: /B.removeLastOccurrence|-4951152957490490384[0]
  //   Public signature debug description: removeLastOccurrence(kotlin.Any?){}kotlin.Boolean
  /* fake */ override fun removeLastOccurrence(p0: Any?): Boolean

  // CHECK:
  //   Mangled name: B#removeRange(kotlin.Int;kotlin.Int){}
  //   Public signature: /B.removeRange|7632320944993890593[0]
  //   Public signature debug description: removeRange(kotlin.Int;kotlin.Int){}
  protected_and_package /* fake */ override fun removeRange(p0: Int, p1: Int): Unit

  // CHECK:
  //   Mangled name: B#replaceAll(java.util.function.UnaryOperator<kotlin.Int?{EnhancedNullability}>{EnhancedNullability}){}
  //   Public signature: /B.replaceAll|6274321624880920804[0]
  //   Public signature debug description: replaceAll(java.util.function.UnaryOperator<kotlin.Int?{EnhancedNullability}>{EnhancedNullability}){}
  /* fake */ override fun replaceAll(p0: @EnhancedNullability UnaryOperator<@EnhancedNullability Int?>): Unit

  // CHECK JVM_IR:
  //   Mangled name: B#retainAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  //   Public signature: /B.retainAll|-3550913358824719637[0]
  //   Public signature debug description: retainAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  /* fake */ override fun retainAll(p0: Collection<@EnhancedNullability Int>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#set(kotlin.Int;kotlin.Int{EnhancedNullability}){}kotlin.Int{EnhancedNullability}
  //   Public signature: /B.set|-7932912415931410975[0]
  //   Public signature debug description: set(kotlin.Int;kotlin.Int{EnhancedNullability}){}kotlin.Int{EnhancedNullability}
  /* fake */ override operator fun set(p0: Int, p1: @EnhancedNullability Int): @EnhancedNullability Int

  // CHECK:
  //   Mangled name: B#sort(java.util.Comparator<in|kotlin.Int?>?){}
  //   Public signature: /B.sort|8069876015820305517[0]
  //   Public signature debug description: sort(java.util.Comparator<in|kotlin.Int?>?){}
  /* fake */ override fun sort(p0: Comparator<in Int?>?): Unit

  // CHECK JVM_IR:
  //   Mangled name: B#spliterator(){}java.util.Spliterator<kotlin.Int?>{EnhancedNullability}
  //   Public signature: /B.spliterator|-3709449862893660489[0]
  //   Public signature debug description: spliterator(){}java.util.Spliterator<kotlin.Int?>{EnhancedNullability}
  /* fake */ override fun spliterator(): @EnhancedNullability Spliterator<Int?>

  // CHECK JVM_IR:
  //   Mangled name: B#stream(){}java.util.stream.Stream<kotlin.Int?{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /B.stream|1565529915260485250[0]
  //   Public signature debug description: stream(){}java.util.stream.Stream<kotlin.Int?{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override fun stream(): @EnhancedNullability Stream<@EnhancedNullability Int?>

  // CHECK JVM_IR:
  //   Mangled name: B#subList(kotlin.Int;kotlin.Int){}kotlin.collections.MutableList<kotlin.Int{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /B.subList|127837164145565172[0]
  //   Public signature debug description: subList(kotlin.Int;kotlin.Int){}kotlin.collections.MutableList<kotlin.Int{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override fun subList(p0: Int, p1: Int): @EnhancedNullability MutableList<@EnhancedNullability Int>

  // CHECK JVM_IR:
  //   Mangled name: B#toArray(){}kotlin.Array<out|kotlin.Any?>?
  //   Public signature: /B.toArray|-8468800257910341540[0]
  //   Public signature debug description: toArray(){}kotlin.Array<out|kotlin.Any?>?
  /* fake */ override fun toArray(): Array<out Any?>?

  // CHECK JVM_IR:
  //   Mangled name: B#toArray(kotlin.Array<out|0:0?>?){0§<kotlin.Any?>}kotlin.Array<out|0:0?>?
  //   Public signature: /B.toArray|-7248906015406159030[0]
  //   Public signature debug description: toArray(kotlin.Array<out|0:0?>?){0§<kotlin.Any?>}kotlin.Array<out|0:0?>?
  /* fake */ override fun <T : Any?> toArray(p0: Array<out T?>?): Array<out T?>?

  // CHECK JVM_IR:
  //   Mangled name: B#toArray(java.util.function.IntFunction<kotlin.Array<out|0:0?>?>?){0§<kotlin.Any?>}kotlin.Array<out|0:0?>?
  //   Public signature: /B.toArray|-1022881482544918047[0]
  //   Public signature debug description: toArray(java.util.function.IntFunction<kotlin.Array<out|0:0?>?>?){0§<kotlin.Any?>}kotlin.Array<out|0:0?>?
  /* fake */ override fun <T : Any?> toArray(p0: IntFunction<Array<out T?>?>?): Array<out T?>?

  // CHECK JVM_IR:
  //   Mangled name: B#toString(){}kotlin.String{EnhancedNullability}
  //   Public signature: /B.toString|7581629773206850948[0]
  //   Public signature debug description: toString(){}kotlin.String{EnhancedNullability}
  /* fake */ override fun toString(): @EnhancedNullability String

  // CHECK:
  //   Mangled name: B#addFirst(kotlin.Int?){}
  //   Public signature: /B.addFirst|-2173470440078379794[0]
  //   Public signature debug description: addFirst(kotlin.Int?){}
  override fun addFirst(e: Int?): Unit

  // CHECK JVM_IR:
  //   Mangled name: B#reversed(){}java.util.LinkedList<kotlin.Int>
  //   Public signature: /B.reversed|2298427509454408342[0]
  //   Public signature debug description: reversed(){}java.util.LinkedList<kotlin.Int>
  override fun reversed(): LinkedList<Int>

  // CHECK:
  //   Mangled name: B{}size
  //   Public signature: /B.size|-6253659984320132064[0]
  //   Public signature debug description: {}size
  /* fake */ override val size: Int
    // CHECK JVM_IR:
    //   Mangled name: B#<get-size>(){}kotlin.Int
    //   Public signature: /B.size.<get-size>|-3941649985161900780[0]
    //   Public signature debug description: <get-size>(){}kotlin.Int
    /* fake */ override get(): Int

}

// CHECK:
//   Mangled name: #test(A;B){}
//   Public signature: /test|-2533013708701322011[0]
//   Public signature debug description: test(A;B){}
fun test(a: A, b: B): Unit
