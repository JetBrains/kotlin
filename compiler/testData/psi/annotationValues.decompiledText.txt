AnnotationValues.class:
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

  package test

  public final class AnnotationValues public constructor() {
      @test.Simple public final class WithSimple public constructor() {
      }

      @test.StringLiteral public final class WithStringLiteral public constructor() {
      }

      @test.EnumLiteral public final class WithEnumLiteral public constructor() {
      }

      @test.VarArg public final class WithVarArg public constructor() {
      }

      @test.Arrays public final class WithArrays public constructor() {
      }

      @test.ClassLiteral public final class WithClassLiteral<T> public constructor() {
      }

      @test.Outer public final class WithNested public constructor() {
      }
  }

AnnotationValuesKt.class:
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

  package test

  public const val CONSTANT: kotlin.Int = COMPILED_CODE /* compiled code */ /* hasBackingField: true */

Arrays.class:
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

  package test

  public final annotation class Arrays public constructor(ia: kotlin.IntArray, la: kotlin.LongArray, fa: kotlin.FloatArray, da: kotlin.DoubleArray, ca: kotlin.CharArray, ba: kotlin.BooleanArray) : kotlin.Annotation {
      public final val ia: kotlin.IntArray /* compiled code */ /* hasBackingField: false */

      public final val la: kotlin.LongArray /* compiled code */ /* hasBackingField: false */

      public final val fa: kotlin.FloatArray /* compiled code */ /* hasBackingField: false */

      public final val da: kotlin.DoubleArray /* compiled code */ /* hasBackingField: false */

      public final val ca: kotlin.CharArray /* compiled code */ /* hasBackingField: false */

      public final val ba: kotlin.BooleanArray /* compiled code */ /* hasBackingField: false */
  }

ClassLiteral.class:
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

  package test

  public final annotation class ClassLiteral public constructor(c1: kotlin.reflect.KClass<*>, c2: kotlin.reflect.KClass<*>) : kotlin.Annotation {
      public final val c1: kotlin.reflect.KClass<*> /* compiled code */ /* hasBackingField: false */

      public final val c2: kotlin.reflect.KClass<*> /* compiled code */ /* hasBackingField: false */
  }

E.class:
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

  package test

  public final enum class E private constructor() : kotlin.Enum<test.E> {
      E1,

      E2;
  }

EnumLiteral.class:
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

  package test

  public final annotation class EnumLiteral public constructor(e1: test.E, e2: test.E, e3: test.E) : kotlin.Annotation {
      public final val e1: test.E /* compiled code */ /* hasBackingField: false */

      public final val e2: test.E /* compiled code */ /* hasBackingField: false */

      public final val e3: test.E /* compiled code */ /* hasBackingField: false */
  }

Nested.class:
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

  package test

  public final annotation class Nested public constructor(i: kotlin.Int, s: kotlin.String) : kotlin.Annotation {
      public final val i: kotlin.Int /* compiled code */ /* hasBackingField: false */

      public final val s: kotlin.String /* compiled code */ /* hasBackingField: false */
  }

Outer.class:
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

  package test

  public final annotation class Outer public constructor(some: kotlin.String, nested: test.Nested) : kotlin.Annotation {
      public final val some: kotlin.String /* compiled code */ /* hasBackingField: false */

      public final val nested: test.Nested /* compiled code */ /* hasBackingField: false */
  }

Simple.class:
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

  package test

  public final annotation class Simple public constructor(i: kotlin.Int, l: kotlin.Long, b: kotlin.Byte, d: kotlin.Double, f: kotlin.Float, c: kotlin.Char, b1: kotlin.Boolean, b2: kotlin.Boolean) : kotlin.Annotation {
      public final val i: kotlin.Int /* compiled code */ /* hasBackingField: false */

      public final val l: kotlin.Long /* compiled code */ /* hasBackingField: false */

      public final val b: kotlin.Byte /* compiled code */ /* hasBackingField: false */

      public final val d: kotlin.Double /* compiled code */ /* hasBackingField: false */

      public final val f: kotlin.Float /* compiled code */ /* hasBackingField: false */

      public final val c: kotlin.Char /* compiled code */ /* hasBackingField: false */

      public final val b1: kotlin.Boolean /* compiled code */ /* hasBackingField: false */

      public final val b2: kotlin.Boolean /* compiled code */ /* hasBackingField: false */
  }

StringLiteral.class:
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

  package test

  public final annotation class StringLiteral public constructor(s1: kotlin.String, s2: kotlin.String, s3: kotlin.String) : kotlin.Annotation {
      public final val s1: kotlin.String /* compiled code */ /* hasBackingField: false */

      public final val s2: kotlin.String /* compiled code */ /* hasBackingField: false */

      public final val s3: kotlin.String /* compiled code */ /* hasBackingField: false */
  }

VarArg.class:
  // IntelliJ API Decompiler stub source generated from a class file
  // Implementation of methods is not available

  package test

  public final annotation class VarArg public constructor(vararg v: kotlin.Int) : kotlin.Annotation {
      public final val v: kotlin.IntArray /* compiled code */ /* hasBackingField: false */
  }
