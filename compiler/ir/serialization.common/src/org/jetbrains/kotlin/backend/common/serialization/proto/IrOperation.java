// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: compiler/ir/serialization.common/src/KotlinIr.proto
// Protobuf Java Version: 4.29.3

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * <pre>
 * TODO: we need an extension mechanism to accomodate new
 * IR operators in upcoming releases.
 * </pre>
 *
 * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation}
 */
public  final class IrOperation extends
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite<
        IrOperation, IrOperation.Builder> implements
    // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation)
    IrOperationOrBuilder {
  private IrOperation() {
  }
  private int operationCase_ = 0;
  private java.lang.Object operation_;
  public enum OperationCase {
    BLOCK(1),
    BREAK(2),
    CALL(3),
    CLASS_REFERENCE(4),
    COMPOSITE(5),
    CONST(6),
    CONTINUE(7),
    DELEGATING_CONSTRUCTOR_CALL(8),
    DO_WHILE(9),
    ENUM_CONSTRUCTOR_CALL(10),
    FUNCTION_REFERENCE(11),
    GET_CLASS(12),
    GET_ENUM_VALUE(13),
    GET_FIELD(14),
    GET_OBJECT(15),
    GET_VALUE(16),
    INSTANCE_INITIALIZER_CALL(17),
    PROPERTY_REFERENCE(18),
    RETURN(19),
    SET_FIELD(20),
    SET_VALUE(21),
    STRING_CONCAT(22),
    THROW(23),
    TRY(24),
    TYPE_OP(25),
    VARARG(26),
    WHEN(27),
    WHILE(28),
    DYNAMIC_MEMBER(29),
    DYNAMIC_OPERATOR(30),
    LOCAL_DELEGATED_PROPERTY_REFERENCE(31),
    CONSTRUCTOR_CALL(32),
    FUNCTION_EXPRESSION(33),
    ERROR_EXPRESSION(34),
    ERROR_CALL_EXPRESSION(35),
    RETURNABLE_BLOCK(36),
    INLINED_FUNCTION_BLOCK(37),
    RICH_FUNCTION_REFERENCE(38),
    RICH_PROPERTY_REFERENCE(39),
    OPERATION_NOT_SET(0);
    private final int value;
    private OperationCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OperationCase valueOf(int value) {
      return forNumber(value);
    }

    public static OperationCase forNumber(int value) {
      switch (value) {
        case 1: return BLOCK;
        case 2: return BREAK;
        case 3: return CALL;
        case 4: return CLASS_REFERENCE;
        case 5: return COMPOSITE;
        case 6: return CONST;
        case 7: return CONTINUE;
        case 8: return DELEGATING_CONSTRUCTOR_CALL;
        case 9: return DO_WHILE;
        case 10: return ENUM_CONSTRUCTOR_CALL;
        case 11: return FUNCTION_REFERENCE;
        case 12: return GET_CLASS;
        case 13: return GET_ENUM_VALUE;
        case 14: return GET_FIELD;
        case 15: return GET_OBJECT;
        case 16: return GET_VALUE;
        case 17: return INSTANCE_INITIALIZER_CALL;
        case 18: return PROPERTY_REFERENCE;
        case 19: return RETURN;
        case 20: return SET_FIELD;
        case 21: return SET_VALUE;
        case 22: return STRING_CONCAT;
        case 23: return THROW;
        case 24: return TRY;
        case 25: return TYPE_OP;
        case 26: return VARARG;
        case 27: return WHEN;
        case 28: return WHILE;
        case 29: return DYNAMIC_MEMBER;
        case 30: return DYNAMIC_OPERATOR;
        case 31: return LOCAL_DELEGATED_PROPERTY_REFERENCE;
        case 32: return CONSTRUCTOR_CALL;
        case 33: return FUNCTION_EXPRESSION;
        case 34: return ERROR_EXPRESSION;
        case 35: return ERROR_CALL_EXPRESSION;
        case 36: return RETURNABLE_BLOCK;
        case 37: return INLINED_FUNCTION_BLOCK;
        case 38: return RICH_FUNCTION_REFERENCE;
        case 39: return RICH_PROPERTY_REFERENCE;
        case 0: return OPERATION_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public OperationCase
  getOperationCase() {
    return OperationCase.forNumber(
        operationCase_);
  }

  private void clearOperation() {
    operationCase_ = 0;
    operation_ = null;
  }

  public static final int BLOCK_FIELD_NUMBER = 1;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock block = 1;</code>
   */
  @java.lang.Override
  public boolean hasBlock() {
    return operationCase_ == 1;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock block = 1;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock getBlock() {
    if (operationCase_ == 1) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock block = 1;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setBlock(org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 1;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock block = 1;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeBlock(org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 1 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 1;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock block = 1;</code>
   */
  private void clearBlock() {
    if (operationCase_ == 1) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int BREAK_FIELD_NUMBER = 2;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak break = 2;</code>
   */
  @java.lang.Override
  public boolean hasBreak() {
    return operationCase_ == 2;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak break = 2;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak getBreak() {
    if (operationCase_ == 2) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak break = 2;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setBreak(org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 2;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak break = 2;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeBreak(org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 2 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 2;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak break = 2;</code>
   */
  private void clearBreak() {
    if (operationCase_ == 2) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int CALL_FIELD_NUMBER = 3;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrCall call = 3;</code>
   */
  @java.lang.Override
  public boolean hasCall() {
    return operationCase_ == 3;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrCall call = 3;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrCall getCall() {
    if (operationCase_ == 3) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrCall) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrCall.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrCall call = 3;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setCall(org.jetbrains.kotlin.backend.common.serialization.proto.IrCall value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 3;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrCall call = 3;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeCall(org.jetbrains.kotlin.backend.common.serialization.proto.IrCall value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 3 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrCall.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrCall.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrCall) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 3;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrCall call = 3;</code>
   */
  private void clearCall() {
    if (operationCase_ == 3) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int CLASS_REFERENCE_FIELD_NUMBER = 4;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference class_reference = 4;</code>
   */
  @java.lang.Override
  public boolean hasClassReference() {
    return operationCase_ == 4;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference class_reference = 4;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference getClassReference() {
    if (operationCase_ == 4) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference class_reference = 4;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setClassReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 4;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference class_reference = 4;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeClassReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 4 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 4;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference class_reference = 4;</code>
   */
  private void clearClassReference() {
    if (operationCase_ == 4) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int COMPOSITE_FIELD_NUMBER = 5;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite composite = 5;</code>
   */
  @java.lang.Override
  public boolean hasComposite() {
    return operationCase_ == 5;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite composite = 5;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite getComposite() {
    if (operationCase_ == 5) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite composite = 5;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setComposite(org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 5;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite composite = 5;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeComposite(org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 5 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 5;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite composite = 5;</code>
   */
  private void clearComposite() {
    if (operationCase_ == 5) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int CONST_FIELD_NUMBER = 6;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConst const = 6;</code>
   */
  @java.lang.Override
  public boolean hasConst() {
    return operationCase_ == 6;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConst const = 6;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrConst getConst() {
    if (operationCase_ == 6) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrConst) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrConst.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConst const = 6;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setConst(org.jetbrains.kotlin.backend.common.serialization.proto.IrConst value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 6;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConst const = 6;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeConst(org.jetbrains.kotlin.backend.common.serialization.proto.IrConst value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 6 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrConst.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrConst.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrConst) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 6;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConst const = 6;</code>
   */
  private void clearConst() {
    if (operationCase_ == 6) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int CONTINUE_FIELD_NUMBER = 7;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue continue = 7;</code>
   */
  @java.lang.Override
  public boolean hasContinue() {
    return operationCase_ == 7;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue continue = 7;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue getContinue() {
    if (operationCase_ == 7) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue continue = 7;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setContinue(org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 7;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue continue = 7;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeContinue(org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 7 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 7;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue continue = 7;</code>
   */
  private void clearContinue() {
    if (operationCase_ == 7) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int DELEGATING_CONSTRUCTOR_CALL_FIELD_NUMBER = 8;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall delegating_constructor_call = 8;</code>
   */
  @java.lang.Override
  public boolean hasDelegatingConstructorCall() {
    return operationCase_ == 8;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall delegating_constructor_call = 8;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall getDelegatingConstructorCall() {
    if (operationCase_ == 8) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall delegating_constructor_call = 8;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setDelegatingConstructorCall(org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 8;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall delegating_constructor_call = 8;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeDelegatingConstructorCall(org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 8 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 8;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall delegating_constructor_call = 8;</code>
   */
  private void clearDelegatingConstructorCall() {
    if (operationCase_ == 8) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int DO_WHILE_FIELD_NUMBER = 9;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile do_while = 9;</code>
   */
  @java.lang.Override
  public boolean hasDoWhile() {
    return operationCase_ == 9;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile do_while = 9;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile getDoWhile() {
    if (operationCase_ == 9) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile do_while = 9;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setDoWhile(org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 9;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile do_while = 9;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeDoWhile(org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 9 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 9;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile do_while = 9;</code>
   */
  private void clearDoWhile() {
    if (operationCase_ == 9) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int ENUM_CONSTRUCTOR_CALL_FIELD_NUMBER = 10;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall enum_constructor_call = 10;</code>
   */
  @java.lang.Override
  public boolean hasEnumConstructorCall() {
    return operationCase_ == 10;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall enum_constructor_call = 10;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall getEnumConstructorCall() {
    if (operationCase_ == 10) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall enum_constructor_call = 10;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setEnumConstructorCall(org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 10;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall enum_constructor_call = 10;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeEnumConstructorCall(org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 10 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 10;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall enum_constructor_call = 10;</code>
   */
  private void clearEnumConstructorCall() {
    if (operationCase_ == 10) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int FUNCTION_REFERENCE_FIELD_NUMBER = 11;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference function_reference = 11;</code>
   */
  @java.lang.Override
  public boolean hasFunctionReference() {
    return operationCase_ == 11;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference function_reference = 11;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference getFunctionReference() {
    if (operationCase_ == 11) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference function_reference = 11;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setFunctionReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 11;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference function_reference = 11;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeFunctionReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 11 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 11;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference function_reference = 11;</code>
   */
  private void clearFunctionReference() {
    if (operationCase_ == 11) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int GET_CLASS_FIELD_NUMBER = 12;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass get_class = 12;</code>
   */
  @java.lang.Override
  public boolean hasGetClass() {
    return operationCase_ == 12;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass get_class = 12;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass getGetClass() {
    if (operationCase_ == 12) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass get_class = 12;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setGetClass(org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 12;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass get_class = 12;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeGetClass(org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 12 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 12;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass get_class = 12;</code>
   */
  private void clearGetClass() {
    if (operationCase_ == 12) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int GET_ENUM_VALUE_FIELD_NUMBER = 13;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue get_enum_value = 13;</code>
   */
  @java.lang.Override
  public boolean hasGetEnumValue() {
    return operationCase_ == 13;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue get_enum_value = 13;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue getGetEnumValue() {
    if (operationCase_ == 13) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue get_enum_value = 13;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setGetEnumValue(org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 13;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue get_enum_value = 13;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeGetEnumValue(org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 13 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 13;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue get_enum_value = 13;</code>
   */
  private void clearGetEnumValue() {
    if (operationCase_ == 13) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int GET_FIELD_FIELD_NUMBER = 14;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField get_field = 14;</code>
   */
  @java.lang.Override
  public boolean hasGetField() {
    return operationCase_ == 14;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField get_field = 14;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField getGetField() {
    if (operationCase_ == 14) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField get_field = 14;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setGetField(org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 14;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField get_field = 14;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeGetField(org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 14 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 14;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField get_field = 14;</code>
   */
  private void clearGetField() {
    if (operationCase_ == 14) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int GET_OBJECT_FIELD_NUMBER = 15;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject get_object = 15;</code>
   */
  @java.lang.Override
  public boolean hasGetObject() {
    return operationCase_ == 15;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject get_object = 15;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject getGetObject() {
    if (operationCase_ == 15) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject get_object = 15;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setGetObject(org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 15;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject get_object = 15;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeGetObject(org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 15 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 15;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject get_object = 15;</code>
   */
  private void clearGetObject() {
    if (operationCase_ == 15) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int GET_VALUE_FIELD_NUMBER = 16;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue get_value = 16;</code>
   */
  @java.lang.Override
  public boolean hasGetValue() {
    return operationCase_ == 16;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue get_value = 16;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue getGetValue() {
    if (operationCase_ == 16) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue get_value = 16;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setGetValue(org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 16;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue get_value = 16;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeGetValue(org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 16 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 16;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue get_value = 16;</code>
   */
  private void clearGetValue() {
    if (operationCase_ == 16) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int INSTANCE_INITIALIZER_CALL_FIELD_NUMBER = 17;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall instance_initializer_call = 17;</code>
   */
  @java.lang.Override
  public boolean hasInstanceInitializerCall() {
    return operationCase_ == 17;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall instance_initializer_call = 17;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall getInstanceInitializerCall() {
    if (operationCase_ == 17) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall instance_initializer_call = 17;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setInstanceInitializerCall(org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 17;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall instance_initializer_call = 17;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeInstanceInitializerCall(org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 17 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 17;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall instance_initializer_call = 17;</code>
   */
  private void clearInstanceInitializerCall() {
    if (operationCase_ == 17) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int PROPERTY_REFERENCE_FIELD_NUMBER = 18;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference property_reference = 18;</code>
   */
  @java.lang.Override
  public boolean hasPropertyReference() {
    return operationCase_ == 18;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference property_reference = 18;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference getPropertyReference() {
    if (operationCase_ == 18) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference property_reference = 18;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setPropertyReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 18;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference property_reference = 18;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergePropertyReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 18 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 18;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference property_reference = 18;</code>
   */
  private void clearPropertyReference() {
    if (operationCase_ == 18) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int RETURN_FIELD_NUMBER = 19;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn return = 19;</code>
   */
  @java.lang.Override
  public boolean hasReturn() {
    return operationCase_ == 19;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn return = 19;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn getReturn() {
    if (operationCase_ == 19) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn return = 19;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setReturn(org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 19;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn return = 19;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeReturn(org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 19 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 19;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn return = 19;</code>
   */
  private void clearReturn() {
    if (operationCase_ == 19) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int SET_FIELD_FIELD_NUMBER = 20;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField set_field = 20;</code>
   */
  @java.lang.Override
  public boolean hasSetField() {
    return operationCase_ == 20;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField set_field = 20;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField getSetField() {
    if (operationCase_ == 20) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField set_field = 20;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setSetField(org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 20;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField set_field = 20;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeSetField(org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 20 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 20;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField set_field = 20;</code>
   */
  private void clearSetField() {
    if (operationCase_ == 20) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int SET_VALUE_FIELD_NUMBER = 21;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue set_value = 21;</code>
   */
  @java.lang.Override
  public boolean hasSetValue() {
    return operationCase_ == 21;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue set_value = 21;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue getSetValue() {
    if (operationCase_ == 21) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue set_value = 21;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setSetValue(org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 21;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue set_value = 21;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeSetValue(org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 21 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 21;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue set_value = 21;</code>
   */
  private void clearSetValue() {
    if (operationCase_ == 21) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int STRING_CONCAT_FIELD_NUMBER = 22;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat string_concat = 22;</code>
   */
  @java.lang.Override
  public boolean hasStringConcat() {
    return operationCase_ == 22;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat string_concat = 22;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat getStringConcat() {
    if (operationCase_ == 22) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat string_concat = 22;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setStringConcat(org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 22;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat string_concat = 22;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeStringConcat(org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 22 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 22;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat string_concat = 22;</code>
   */
  private void clearStringConcat() {
    if (operationCase_ == 22) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int THROW_FIELD_NUMBER = 23;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow throw = 23;</code>
   */
  @java.lang.Override
  public boolean hasThrow() {
    return operationCase_ == 23;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow throw = 23;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow getThrow() {
    if (operationCase_ == 23) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow throw = 23;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setThrow(org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 23;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow throw = 23;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeThrow(org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 23 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 23;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow throw = 23;</code>
   */
  private void clearThrow() {
    if (operationCase_ == 23) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int TRY_FIELD_NUMBER = 24;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTry try = 24;</code>
   */
  @java.lang.Override
  public boolean hasTry() {
    return operationCase_ == 24;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTry try = 24;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrTry getTry() {
    if (operationCase_ == 24) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrTry) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrTry.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTry try = 24;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setTry(org.jetbrains.kotlin.backend.common.serialization.proto.IrTry value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 24;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTry try = 24;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeTry(org.jetbrains.kotlin.backend.common.serialization.proto.IrTry value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 24 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrTry.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrTry.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrTry) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 24;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTry try = 24;</code>
   */
  private void clearTry() {
    if (operationCase_ == 24) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int TYPE_OP_FIELD_NUMBER = 25;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp type_op = 25;</code>
   */
  @java.lang.Override
  public boolean hasTypeOp() {
    return operationCase_ == 25;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp type_op = 25;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp getTypeOp() {
    if (operationCase_ == 25) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp type_op = 25;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setTypeOp(org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 25;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp type_op = 25;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeTypeOp(org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 25 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 25;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp type_op = 25;</code>
   */
  private void clearTypeOp() {
    if (operationCase_ == 25) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int VARARG_FIELD_NUMBER = 26;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg vararg = 26;</code>
   */
  @java.lang.Override
  public boolean hasVararg() {
    return operationCase_ == 26;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg vararg = 26;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg getVararg() {
    if (operationCase_ == 26) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg vararg = 26;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setVararg(org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 26;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg vararg = 26;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeVararg(org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 26 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 26;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg vararg = 26;</code>
   */
  private void clearVararg() {
    if (operationCase_ == 26) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int WHEN_FIELD_NUMBER = 27;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen when = 27;</code>
   */
  @java.lang.Override
  public boolean hasWhen() {
    return operationCase_ == 27;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen when = 27;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen getWhen() {
    if (operationCase_ == 27) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen when = 27;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setWhen(org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 27;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen when = 27;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeWhen(org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 27 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 27;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen when = 27;</code>
   */
  private void clearWhen() {
    if (operationCase_ == 27) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int WHILE_FIELD_NUMBER = 28;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile while = 28;</code>
   */
  @java.lang.Override
  public boolean hasWhile() {
    return operationCase_ == 28;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile while = 28;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile getWhile() {
    if (operationCase_ == 28) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile while = 28;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setWhile(org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 28;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile while = 28;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeWhile(org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 28 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 28;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile while = 28;</code>
   */
  private void clearWhile() {
    if (operationCase_ == 28) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int DYNAMIC_MEMBER_FIELD_NUMBER = 29;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression dynamic_member = 29;</code>
   */
  @java.lang.Override
  public boolean hasDynamicMember() {
    return operationCase_ == 29;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression dynamic_member = 29;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression getDynamicMember() {
    if (operationCase_ == 29) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression dynamic_member = 29;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setDynamicMember(org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 29;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression dynamic_member = 29;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeDynamicMember(org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 29 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 29;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression dynamic_member = 29;</code>
   */
  private void clearDynamicMember() {
    if (operationCase_ == 29) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int DYNAMIC_OPERATOR_FIELD_NUMBER = 30;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression dynamic_operator = 30;</code>
   */
  @java.lang.Override
  public boolean hasDynamicOperator() {
    return operationCase_ == 30;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression dynamic_operator = 30;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression getDynamicOperator() {
    if (operationCase_ == 30) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression dynamic_operator = 30;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setDynamicOperator(org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 30;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression dynamic_operator = 30;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeDynamicOperator(org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 30 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 30;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression dynamic_operator = 30;</code>
   */
  private void clearDynamicOperator() {
    if (operationCase_ == 30) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int LOCAL_DELEGATED_PROPERTY_REFERENCE_FIELD_NUMBER = 31;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference local_delegated_property_reference = 31;</code>
   */
  @java.lang.Override
  public boolean hasLocalDelegatedPropertyReference() {
    return operationCase_ == 31;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference local_delegated_property_reference = 31;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference getLocalDelegatedPropertyReference() {
    if (operationCase_ == 31) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference local_delegated_property_reference = 31;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setLocalDelegatedPropertyReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 31;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference local_delegated_property_reference = 31;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeLocalDelegatedPropertyReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 31 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 31;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference local_delegated_property_reference = 31;</code>
   */
  private void clearLocalDelegatedPropertyReference() {
    if (operationCase_ == 31) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int CONSTRUCTOR_CALL_FIELD_NUMBER = 32;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall constructor_call = 32;</code>
   */
  @java.lang.Override
  public boolean hasConstructorCall() {
    return operationCase_ == 32;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall constructor_call = 32;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall getConstructorCall() {
    if (operationCase_ == 32) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall constructor_call = 32;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setConstructorCall(org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 32;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall constructor_call = 32;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeConstructorCall(org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 32 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 32;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall constructor_call = 32;</code>
   */
  private void clearConstructorCall() {
    if (operationCase_ == 32) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int FUNCTION_EXPRESSION_FIELD_NUMBER = 33;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression function_expression = 33;</code>
   */
  @java.lang.Override
  public boolean hasFunctionExpression() {
    return operationCase_ == 33;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression function_expression = 33;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression getFunctionExpression() {
    if (operationCase_ == 33) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression function_expression = 33;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setFunctionExpression(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 33;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression function_expression = 33;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeFunctionExpression(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 33 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 33;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression function_expression = 33;</code>
   */
  private void clearFunctionExpression() {
    if (operationCase_ == 33) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int ERROR_EXPRESSION_FIELD_NUMBER = 34;
  /**
   * <pre>
   * Error code
   * </pre>
   *
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression error_expression = 34;</code>
   */
  @java.lang.Override
  public boolean hasErrorExpression() {
    return operationCase_ == 34;
  }
  /**
   * <pre>
   * Error code
   * </pre>
   *
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression error_expression = 34;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression getErrorExpression() {
    if (operationCase_ == 34) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression.getDefaultInstance();
  }
  /**
   * <pre>
   * Error code
   * </pre>
   *
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression error_expression = 34;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setErrorExpression(org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 34;
  }
  /**
   * <pre>
   * Error code
   * </pre>
   *
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression error_expression = 34;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeErrorExpression(org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 34 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 34;
  }
  /**
   * <pre>
   * Error code
   * </pre>
   *
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression error_expression = 34;</code>
   */
  private void clearErrorExpression() {
    if (operationCase_ == 34) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int ERROR_CALL_EXPRESSION_FIELD_NUMBER = 35;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression error_call_expression = 35;</code>
   */
  @java.lang.Override
  public boolean hasErrorCallExpression() {
    return operationCase_ == 35;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression error_call_expression = 35;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression getErrorCallExpression() {
    if (operationCase_ == 35) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression error_call_expression = 35;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setErrorCallExpression(org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 35;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression error_call_expression = 35;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeErrorCallExpression(org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 35 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 35;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression error_call_expression = 35;</code>
   */
  private void clearErrorCallExpression() {
    if (operationCase_ == 35) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int RETURNABLE_BLOCK_FIELD_NUMBER = 36;
  /**
   * <pre>
   * Operations again
   * </pre>
   *
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock returnable_block = 36;</code>
   */
  @java.lang.Override
  public boolean hasReturnableBlock() {
    return operationCase_ == 36;
  }
  /**
   * <pre>
   * Operations again
   * </pre>
   *
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock returnable_block = 36;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock getReturnableBlock() {
    if (operationCase_ == 36) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock.getDefaultInstance();
  }
  /**
   * <pre>
   * Operations again
   * </pre>
   *
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock returnable_block = 36;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setReturnableBlock(org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 36;
  }
  /**
   * <pre>
   * Operations again
   * </pre>
   *
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock returnable_block = 36;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeReturnableBlock(org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 36 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 36;
  }
  /**
   * <pre>
   * Operations again
   * </pre>
   *
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock returnable_block = 36;</code>
   */
  private void clearReturnableBlock() {
    if (operationCase_ == 36) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int INLINED_FUNCTION_BLOCK_FIELD_NUMBER = 37;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock inlined_function_block = 37;</code>
   */
  @java.lang.Override
  public boolean hasInlinedFunctionBlock() {
    return operationCase_ == 37;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock inlined_function_block = 37;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock getInlinedFunctionBlock() {
    if (operationCase_ == 37) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock inlined_function_block = 37;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setInlinedFunctionBlock(org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 37;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock inlined_function_block = 37;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeInlinedFunctionBlock(org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 37 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 37;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock inlined_function_block = 37;</code>
   */
  private void clearInlinedFunctionBlock() {
    if (operationCase_ == 37) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int RICH_FUNCTION_REFERENCE_FIELD_NUMBER = 38;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference rich_function_reference = 38;</code>
   */
  @java.lang.Override
  public boolean hasRichFunctionReference() {
    return operationCase_ == 38;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference rich_function_reference = 38;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference getRichFunctionReference() {
    if (operationCase_ == 38) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference rich_function_reference = 38;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setRichFunctionReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 38;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference rich_function_reference = 38;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeRichFunctionReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 38 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 38;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference rich_function_reference = 38;</code>
   */
  private void clearRichFunctionReference() {
    if (operationCase_ == 38) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static final int RICH_PROPERTY_REFERENCE_FIELD_NUMBER = 39;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference rich_property_reference = 39;</code>
   */
  @java.lang.Override
  public boolean hasRichPropertyReference() {
    return operationCase_ == 39;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference rich_property_reference = 39;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference getRichPropertyReference() {
    if (operationCase_ == 39) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference) operation_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference rich_property_reference = 39;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setRichPropertyReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference value) {
    value.getClass();  // minimal bytecode null check
    operation_ = value;
    operationCase_ = 39;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference rich_property_reference = 39;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeRichPropertyReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference value) {
    value.getClass();  // minimal bytecode null check
    if (operationCase_ == 39 &&
        operation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference.getDefaultInstance()) {
      operation_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference) operation_)
          .mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    operationCase_ = 39;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference rich_property_reference = 39;</code>
   */
  private void clearRichPropertyReference() {
    if (operationCase_ == 39) {
      operationCase_ = 0;
      operation_ = null;
    }
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation parseFrom(
      java.nio.ByteBuffer data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation parseFrom(
      java.nio.ByteBuffer data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation parseFrom(byte[] data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation parseFrom(
      byte[] data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation parseFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation parseDelimitedFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * TODO: we need an extension mechanism to accomodate new
   * IR operators in upcoming releases.
   * </pre>
   *
   * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation}
   */
  public static final class Builder extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation, Builder> implements
      // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation)
      org.jetbrains.kotlin.backend.common.serialization.proto.IrOperationOrBuilder {
    // Construct using org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public OperationCase
        getOperationCase() {
      return instance.getOperationCase();
    }

    public Builder clearOperation() {
      copyOnWrite();
      instance.clearOperation();
      return this;
    }


    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock block = 1;</code>
     */
    @java.lang.Override
    public boolean hasBlock() {
      return instance.hasBlock();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock block = 1;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock getBlock() {
      return instance.getBlock();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock block = 1;</code>
     */
    public Builder setBlock(org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock value) {
      copyOnWrite();
      instance.setBlock(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock block = 1;</code>
     */
    public Builder setBlock(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock.Builder builderForValue) {
      copyOnWrite();
      instance.setBlock(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock block = 1;</code>
     */
    public Builder mergeBlock(org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock value) {
      copyOnWrite();
      instance.mergeBlock(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock block = 1;</code>
     */
    public Builder clearBlock() {
      copyOnWrite();
      instance.clearBlock();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak break = 2;</code>
     */
    @java.lang.Override
    public boolean hasBreak() {
      return instance.hasBreak();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak break = 2;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak getBreak() {
      return instance.getBreak();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak break = 2;</code>
     */
    public Builder setBreak(org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak value) {
      copyOnWrite();
      instance.setBreak(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak break = 2;</code>
     */
    public Builder setBreak(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak.Builder builderForValue) {
      copyOnWrite();
      instance.setBreak(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak break = 2;</code>
     */
    public Builder mergeBreak(org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak value) {
      copyOnWrite();
      instance.mergeBreak(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak break = 2;</code>
     */
    public Builder clearBreak() {
      copyOnWrite();
      instance.clearBreak();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrCall call = 3;</code>
     */
    @java.lang.Override
    public boolean hasCall() {
      return instance.hasCall();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrCall call = 3;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrCall getCall() {
      return instance.getCall();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrCall call = 3;</code>
     */
    public Builder setCall(org.jetbrains.kotlin.backend.common.serialization.proto.IrCall value) {
      copyOnWrite();
      instance.setCall(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrCall call = 3;</code>
     */
    public Builder setCall(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrCall.Builder builderForValue) {
      copyOnWrite();
      instance.setCall(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrCall call = 3;</code>
     */
    public Builder mergeCall(org.jetbrains.kotlin.backend.common.serialization.proto.IrCall value) {
      copyOnWrite();
      instance.mergeCall(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrCall call = 3;</code>
     */
    public Builder clearCall() {
      copyOnWrite();
      instance.clearCall();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference class_reference = 4;</code>
     */
    @java.lang.Override
    public boolean hasClassReference() {
      return instance.hasClassReference();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference class_reference = 4;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference getClassReference() {
      return instance.getClassReference();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference class_reference = 4;</code>
     */
    public Builder setClassReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference value) {
      copyOnWrite();
      instance.setClassReference(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference class_reference = 4;</code>
     */
    public Builder setClassReference(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference.Builder builderForValue) {
      copyOnWrite();
      instance.setClassReference(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference class_reference = 4;</code>
     */
    public Builder mergeClassReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference value) {
      copyOnWrite();
      instance.mergeClassReference(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference class_reference = 4;</code>
     */
    public Builder clearClassReference() {
      copyOnWrite();
      instance.clearClassReference();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite composite = 5;</code>
     */
    @java.lang.Override
    public boolean hasComposite() {
      return instance.hasComposite();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite composite = 5;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite getComposite() {
      return instance.getComposite();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite composite = 5;</code>
     */
    public Builder setComposite(org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite value) {
      copyOnWrite();
      instance.setComposite(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite composite = 5;</code>
     */
    public Builder setComposite(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite.Builder builderForValue) {
      copyOnWrite();
      instance.setComposite(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite composite = 5;</code>
     */
    public Builder mergeComposite(org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite value) {
      copyOnWrite();
      instance.mergeComposite(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite composite = 5;</code>
     */
    public Builder clearComposite() {
      copyOnWrite();
      instance.clearComposite();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConst const = 6;</code>
     */
    @java.lang.Override
    public boolean hasConst() {
      return instance.hasConst();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConst const = 6;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrConst getConst() {
      return instance.getConst();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConst const = 6;</code>
     */
    public Builder setConst(org.jetbrains.kotlin.backend.common.serialization.proto.IrConst value) {
      copyOnWrite();
      instance.setConst(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConst const = 6;</code>
     */
    public Builder setConst(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrConst.Builder builderForValue) {
      copyOnWrite();
      instance.setConst(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConst const = 6;</code>
     */
    public Builder mergeConst(org.jetbrains.kotlin.backend.common.serialization.proto.IrConst value) {
      copyOnWrite();
      instance.mergeConst(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConst const = 6;</code>
     */
    public Builder clearConst() {
      copyOnWrite();
      instance.clearConst();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue continue = 7;</code>
     */
    @java.lang.Override
    public boolean hasContinue() {
      return instance.hasContinue();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue continue = 7;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue getContinue() {
      return instance.getContinue();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue continue = 7;</code>
     */
    public Builder setContinue(org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue value) {
      copyOnWrite();
      instance.setContinue(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue continue = 7;</code>
     */
    public Builder setContinue(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue.Builder builderForValue) {
      copyOnWrite();
      instance.setContinue(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue continue = 7;</code>
     */
    public Builder mergeContinue(org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue value) {
      copyOnWrite();
      instance.mergeContinue(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue continue = 7;</code>
     */
    public Builder clearContinue() {
      copyOnWrite();
      instance.clearContinue();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall delegating_constructor_call = 8;</code>
     */
    @java.lang.Override
    public boolean hasDelegatingConstructorCall() {
      return instance.hasDelegatingConstructorCall();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall delegating_constructor_call = 8;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall getDelegatingConstructorCall() {
      return instance.getDelegatingConstructorCall();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall delegating_constructor_call = 8;</code>
     */
    public Builder setDelegatingConstructorCall(org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall value) {
      copyOnWrite();
      instance.setDelegatingConstructorCall(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall delegating_constructor_call = 8;</code>
     */
    public Builder setDelegatingConstructorCall(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall.Builder builderForValue) {
      copyOnWrite();
      instance.setDelegatingConstructorCall(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall delegating_constructor_call = 8;</code>
     */
    public Builder mergeDelegatingConstructorCall(org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall value) {
      copyOnWrite();
      instance.mergeDelegatingConstructorCall(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall delegating_constructor_call = 8;</code>
     */
    public Builder clearDelegatingConstructorCall() {
      copyOnWrite();
      instance.clearDelegatingConstructorCall();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile do_while = 9;</code>
     */
    @java.lang.Override
    public boolean hasDoWhile() {
      return instance.hasDoWhile();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile do_while = 9;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile getDoWhile() {
      return instance.getDoWhile();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile do_while = 9;</code>
     */
    public Builder setDoWhile(org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile value) {
      copyOnWrite();
      instance.setDoWhile(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile do_while = 9;</code>
     */
    public Builder setDoWhile(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile.Builder builderForValue) {
      copyOnWrite();
      instance.setDoWhile(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile do_while = 9;</code>
     */
    public Builder mergeDoWhile(org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile value) {
      copyOnWrite();
      instance.mergeDoWhile(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile do_while = 9;</code>
     */
    public Builder clearDoWhile() {
      copyOnWrite();
      instance.clearDoWhile();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall enum_constructor_call = 10;</code>
     */
    @java.lang.Override
    public boolean hasEnumConstructorCall() {
      return instance.hasEnumConstructorCall();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall enum_constructor_call = 10;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall getEnumConstructorCall() {
      return instance.getEnumConstructorCall();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall enum_constructor_call = 10;</code>
     */
    public Builder setEnumConstructorCall(org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall value) {
      copyOnWrite();
      instance.setEnumConstructorCall(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall enum_constructor_call = 10;</code>
     */
    public Builder setEnumConstructorCall(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall.Builder builderForValue) {
      copyOnWrite();
      instance.setEnumConstructorCall(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall enum_constructor_call = 10;</code>
     */
    public Builder mergeEnumConstructorCall(org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall value) {
      copyOnWrite();
      instance.mergeEnumConstructorCall(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall enum_constructor_call = 10;</code>
     */
    public Builder clearEnumConstructorCall() {
      copyOnWrite();
      instance.clearEnumConstructorCall();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference function_reference = 11;</code>
     */
    @java.lang.Override
    public boolean hasFunctionReference() {
      return instance.hasFunctionReference();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference function_reference = 11;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference getFunctionReference() {
      return instance.getFunctionReference();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference function_reference = 11;</code>
     */
    public Builder setFunctionReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference value) {
      copyOnWrite();
      instance.setFunctionReference(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference function_reference = 11;</code>
     */
    public Builder setFunctionReference(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference.Builder builderForValue) {
      copyOnWrite();
      instance.setFunctionReference(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference function_reference = 11;</code>
     */
    public Builder mergeFunctionReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference value) {
      copyOnWrite();
      instance.mergeFunctionReference(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference function_reference = 11;</code>
     */
    public Builder clearFunctionReference() {
      copyOnWrite();
      instance.clearFunctionReference();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass get_class = 12;</code>
     */
    @java.lang.Override
    public boolean hasGetClass() {
      return instance.hasGetClass();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass get_class = 12;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass getGetClass() {
      return instance.getGetClass();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass get_class = 12;</code>
     */
    public Builder setGetClass(org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass value) {
      copyOnWrite();
      instance.setGetClass(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass get_class = 12;</code>
     */
    public Builder setGetClass(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass.Builder builderForValue) {
      copyOnWrite();
      instance.setGetClass(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass get_class = 12;</code>
     */
    public Builder mergeGetClass(org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass value) {
      copyOnWrite();
      instance.mergeGetClass(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass get_class = 12;</code>
     */
    public Builder clearGetClass() {
      copyOnWrite();
      instance.clearGetClass();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue get_enum_value = 13;</code>
     */
    @java.lang.Override
    public boolean hasGetEnumValue() {
      return instance.hasGetEnumValue();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue get_enum_value = 13;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue getGetEnumValue() {
      return instance.getGetEnumValue();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue get_enum_value = 13;</code>
     */
    public Builder setGetEnumValue(org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue value) {
      copyOnWrite();
      instance.setGetEnumValue(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue get_enum_value = 13;</code>
     */
    public Builder setGetEnumValue(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue.Builder builderForValue) {
      copyOnWrite();
      instance.setGetEnumValue(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue get_enum_value = 13;</code>
     */
    public Builder mergeGetEnumValue(org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue value) {
      copyOnWrite();
      instance.mergeGetEnumValue(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue get_enum_value = 13;</code>
     */
    public Builder clearGetEnumValue() {
      copyOnWrite();
      instance.clearGetEnumValue();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField get_field = 14;</code>
     */
    @java.lang.Override
    public boolean hasGetField() {
      return instance.hasGetField();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField get_field = 14;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField getGetField() {
      return instance.getGetField();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField get_field = 14;</code>
     */
    public Builder setGetField(org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField value) {
      copyOnWrite();
      instance.setGetField(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField get_field = 14;</code>
     */
    public Builder setGetField(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField.Builder builderForValue) {
      copyOnWrite();
      instance.setGetField(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField get_field = 14;</code>
     */
    public Builder mergeGetField(org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField value) {
      copyOnWrite();
      instance.mergeGetField(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField get_field = 14;</code>
     */
    public Builder clearGetField() {
      copyOnWrite();
      instance.clearGetField();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject get_object = 15;</code>
     */
    @java.lang.Override
    public boolean hasGetObject() {
      return instance.hasGetObject();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject get_object = 15;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject getGetObject() {
      return instance.getGetObject();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject get_object = 15;</code>
     */
    public Builder setGetObject(org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject value) {
      copyOnWrite();
      instance.setGetObject(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject get_object = 15;</code>
     */
    public Builder setGetObject(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject.Builder builderForValue) {
      copyOnWrite();
      instance.setGetObject(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject get_object = 15;</code>
     */
    public Builder mergeGetObject(org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject value) {
      copyOnWrite();
      instance.mergeGetObject(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject get_object = 15;</code>
     */
    public Builder clearGetObject() {
      copyOnWrite();
      instance.clearGetObject();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue get_value = 16;</code>
     */
    @java.lang.Override
    public boolean hasGetValue() {
      return instance.hasGetValue();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue get_value = 16;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue getGetValue() {
      return instance.getGetValue();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue get_value = 16;</code>
     */
    public Builder setGetValue(org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue value) {
      copyOnWrite();
      instance.setGetValue(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue get_value = 16;</code>
     */
    public Builder setGetValue(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue.Builder builderForValue) {
      copyOnWrite();
      instance.setGetValue(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue get_value = 16;</code>
     */
    public Builder mergeGetValue(org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue value) {
      copyOnWrite();
      instance.mergeGetValue(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue get_value = 16;</code>
     */
    public Builder clearGetValue() {
      copyOnWrite();
      instance.clearGetValue();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall instance_initializer_call = 17;</code>
     */
    @java.lang.Override
    public boolean hasInstanceInitializerCall() {
      return instance.hasInstanceInitializerCall();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall instance_initializer_call = 17;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall getInstanceInitializerCall() {
      return instance.getInstanceInitializerCall();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall instance_initializer_call = 17;</code>
     */
    public Builder setInstanceInitializerCall(org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall value) {
      copyOnWrite();
      instance.setInstanceInitializerCall(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall instance_initializer_call = 17;</code>
     */
    public Builder setInstanceInitializerCall(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall.Builder builderForValue) {
      copyOnWrite();
      instance.setInstanceInitializerCall(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall instance_initializer_call = 17;</code>
     */
    public Builder mergeInstanceInitializerCall(org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall value) {
      copyOnWrite();
      instance.mergeInstanceInitializerCall(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall instance_initializer_call = 17;</code>
     */
    public Builder clearInstanceInitializerCall() {
      copyOnWrite();
      instance.clearInstanceInitializerCall();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference property_reference = 18;</code>
     */
    @java.lang.Override
    public boolean hasPropertyReference() {
      return instance.hasPropertyReference();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference property_reference = 18;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference getPropertyReference() {
      return instance.getPropertyReference();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference property_reference = 18;</code>
     */
    public Builder setPropertyReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference value) {
      copyOnWrite();
      instance.setPropertyReference(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference property_reference = 18;</code>
     */
    public Builder setPropertyReference(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference.Builder builderForValue) {
      copyOnWrite();
      instance.setPropertyReference(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference property_reference = 18;</code>
     */
    public Builder mergePropertyReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference value) {
      copyOnWrite();
      instance.mergePropertyReference(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference property_reference = 18;</code>
     */
    public Builder clearPropertyReference() {
      copyOnWrite();
      instance.clearPropertyReference();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn return = 19;</code>
     */
    @java.lang.Override
    public boolean hasReturn() {
      return instance.hasReturn();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn return = 19;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn getReturn() {
      return instance.getReturn();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn return = 19;</code>
     */
    public Builder setReturn(org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn value) {
      copyOnWrite();
      instance.setReturn(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn return = 19;</code>
     */
    public Builder setReturn(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn.Builder builderForValue) {
      copyOnWrite();
      instance.setReturn(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn return = 19;</code>
     */
    public Builder mergeReturn(org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn value) {
      copyOnWrite();
      instance.mergeReturn(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn return = 19;</code>
     */
    public Builder clearReturn() {
      copyOnWrite();
      instance.clearReturn();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField set_field = 20;</code>
     */
    @java.lang.Override
    public boolean hasSetField() {
      return instance.hasSetField();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField set_field = 20;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField getSetField() {
      return instance.getSetField();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField set_field = 20;</code>
     */
    public Builder setSetField(org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField value) {
      copyOnWrite();
      instance.setSetField(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField set_field = 20;</code>
     */
    public Builder setSetField(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField.Builder builderForValue) {
      copyOnWrite();
      instance.setSetField(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField set_field = 20;</code>
     */
    public Builder mergeSetField(org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField value) {
      copyOnWrite();
      instance.mergeSetField(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField set_field = 20;</code>
     */
    public Builder clearSetField() {
      copyOnWrite();
      instance.clearSetField();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue set_value = 21;</code>
     */
    @java.lang.Override
    public boolean hasSetValue() {
      return instance.hasSetValue();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue set_value = 21;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue getSetValue() {
      return instance.getSetValue();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue set_value = 21;</code>
     */
    public Builder setSetValue(org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue value) {
      copyOnWrite();
      instance.setSetValue(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue set_value = 21;</code>
     */
    public Builder setSetValue(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue.Builder builderForValue) {
      copyOnWrite();
      instance.setSetValue(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue set_value = 21;</code>
     */
    public Builder mergeSetValue(org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue value) {
      copyOnWrite();
      instance.mergeSetValue(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue set_value = 21;</code>
     */
    public Builder clearSetValue() {
      copyOnWrite();
      instance.clearSetValue();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat string_concat = 22;</code>
     */
    @java.lang.Override
    public boolean hasStringConcat() {
      return instance.hasStringConcat();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat string_concat = 22;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat getStringConcat() {
      return instance.getStringConcat();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat string_concat = 22;</code>
     */
    public Builder setStringConcat(org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat value) {
      copyOnWrite();
      instance.setStringConcat(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat string_concat = 22;</code>
     */
    public Builder setStringConcat(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat.Builder builderForValue) {
      copyOnWrite();
      instance.setStringConcat(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat string_concat = 22;</code>
     */
    public Builder mergeStringConcat(org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat value) {
      copyOnWrite();
      instance.mergeStringConcat(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat string_concat = 22;</code>
     */
    public Builder clearStringConcat() {
      copyOnWrite();
      instance.clearStringConcat();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow throw = 23;</code>
     */
    @java.lang.Override
    public boolean hasThrow() {
      return instance.hasThrow();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow throw = 23;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow getThrow() {
      return instance.getThrow();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow throw = 23;</code>
     */
    public Builder setThrow(org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow value) {
      copyOnWrite();
      instance.setThrow(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow throw = 23;</code>
     */
    public Builder setThrow(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow.Builder builderForValue) {
      copyOnWrite();
      instance.setThrow(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow throw = 23;</code>
     */
    public Builder mergeThrow(org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow value) {
      copyOnWrite();
      instance.mergeThrow(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow throw = 23;</code>
     */
    public Builder clearThrow() {
      copyOnWrite();
      instance.clearThrow();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTry try = 24;</code>
     */
    @java.lang.Override
    public boolean hasTry() {
      return instance.hasTry();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTry try = 24;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrTry getTry() {
      return instance.getTry();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTry try = 24;</code>
     */
    public Builder setTry(org.jetbrains.kotlin.backend.common.serialization.proto.IrTry value) {
      copyOnWrite();
      instance.setTry(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTry try = 24;</code>
     */
    public Builder setTry(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrTry.Builder builderForValue) {
      copyOnWrite();
      instance.setTry(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTry try = 24;</code>
     */
    public Builder mergeTry(org.jetbrains.kotlin.backend.common.serialization.proto.IrTry value) {
      copyOnWrite();
      instance.mergeTry(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTry try = 24;</code>
     */
    public Builder clearTry() {
      copyOnWrite();
      instance.clearTry();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp type_op = 25;</code>
     */
    @java.lang.Override
    public boolean hasTypeOp() {
      return instance.hasTypeOp();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp type_op = 25;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp getTypeOp() {
      return instance.getTypeOp();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp type_op = 25;</code>
     */
    public Builder setTypeOp(org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp value) {
      copyOnWrite();
      instance.setTypeOp(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp type_op = 25;</code>
     */
    public Builder setTypeOp(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp.Builder builderForValue) {
      copyOnWrite();
      instance.setTypeOp(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp type_op = 25;</code>
     */
    public Builder mergeTypeOp(org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp value) {
      copyOnWrite();
      instance.mergeTypeOp(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp type_op = 25;</code>
     */
    public Builder clearTypeOp() {
      copyOnWrite();
      instance.clearTypeOp();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg vararg = 26;</code>
     */
    @java.lang.Override
    public boolean hasVararg() {
      return instance.hasVararg();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg vararg = 26;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg getVararg() {
      return instance.getVararg();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg vararg = 26;</code>
     */
    public Builder setVararg(org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg value) {
      copyOnWrite();
      instance.setVararg(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg vararg = 26;</code>
     */
    public Builder setVararg(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg.Builder builderForValue) {
      copyOnWrite();
      instance.setVararg(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg vararg = 26;</code>
     */
    public Builder mergeVararg(org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg value) {
      copyOnWrite();
      instance.mergeVararg(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg vararg = 26;</code>
     */
    public Builder clearVararg() {
      copyOnWrite();
      instance.clearVararg();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen when = 27;</code>
     */
    @java.lang.Override
    public boolean hasWhen() {
      return instance.hasWhen();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen when = 27;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen getWhen() {
      return instance.getWhen();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen when = 27;</code>
     */
    public Builder setWhen(org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen value) {
      copyOnWrite();
      instance.setWhen(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen when = 27;</code>
     */
    public Builder setWhen(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen.Builder builderForValue) {
      copyOnWrite();
      instance.setWhen(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen when = 27;</code>
     */
    public Builder mergeWhen(org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen value) {
      copyOnWrite();
      instance.mergeWhen(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen when = 27;</code>
     */
    public Builder clearWhen() {
      copyOnWrite();
      instance.clearWhen();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile while = 28;</code>
     */
    @java.lang.Override
    public boolean hasWhile() {
      return instance.hasWhile();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile while = 28;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile getWhile() {
      return instance.getWhile();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile while = 28;</code>
     */
    public Builder setWhile(org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile value) {
      copyOnWrite();
      instance.setWhile(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile while = 28;</code>
     */
    public Builder setWhile(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile.Builder builderForValue) {
      copyOnWrite();
      instance.setWhile(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile while = 28;</code>
     */
    public Builder mergeWhile(org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile value) {
      copyOnWrite();
      instance.mergeWhile(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile while = 28;</code>
     */
    public Builder clearWhile() {
      copyOnWrite();
      instance.clearWhile();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression dynamic_member = 29;</code>
     */
    @java.lang.Override
    public boolean hasDynamicMember() {
      return instance.hasDynamicMember();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression dynamic_member = 29;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression getDynamicMember() {
      return instance.getDynamicMember();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression dynamic_member = 29;</code>
     */
    public Builder setDynamicMember(org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression value) {
      copyOnWrite();
      instance.setDynamicMember(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression dynamic_member = 29;</code>
     */
    public Builder setDynamicMember(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression.Builder builderForValue) {
      copyOnWrite();
      instance.setDynamicMember(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression dynamic_member = 29;</code>
     */
    public Builder mergeDynamicMember(org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression value) {
      copyOnWrite();
      instance.mergeDynamicMember(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression dynamic_member = 29;</code>
     */
    public Builder clearDynamicMember() {
      copyOnWrite();
      instance.clearDynamicMember();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression dynamic_operator = 30;</code>
     */
    @java.lang.Override
    public boolean hasDynamicOperator() {
      return instance.hasDynamicOperator();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression dynamic_operator = 30;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression getDynamicOperator() {
      return instance.getDynamicOperator();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression dynamic_operator = 30;</code>
     */
    public Builder setDynamicOperator(org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression value) {
      copyOnWrite();
      instance.setDynamicOperator(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression dynamic_operator = 30;</code>
     */
    public Builder setDynamicOperator(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression.Builder builderForValue) {
      copyOnWrite();
      instance.setDynamicOperator(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression dynamic_operator = 30;</code>
     */
    public Builder mergeDynamicOperator(org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression value) {
      copyOnWrite();
      instance.mergeDynamicOperator(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression dynamic_operator = 30;</code>
     */
    public Builder clearDynamicOperator() {
      copyOnWrite();
      instance.clearDynamicOperator();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference local_delegated_property_reference = 31;</code>
     */
    @java.lang.Override
    public boolean hasLocalDelegatedPropertyReference() {
      return instance.hasLocalDelegatedPropertyReference();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference local_delegated_property_reference = 31;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference getLocalDelegatedPropertyReference() {
      return instance.getLocalDelegatedPropertyReference();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference local_delegated_property_reference = 31;</code>
     */
    public Builder setLocalDelegatedPropertyReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference value) {
      copyOnWrite();
      instance.setLocalDelegatedPropertyReference(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference local_delegated_property_reference = 31;</code>
     */
    public Builder setLocalDelegatedPropertyReference(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference.Builder builderForValue) {
      copyOnWrite();
      instance.setLocalDelegatedPropertyReference(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference local_delegated_property_reference = 31;</code>
     */
    public Builder mergeLocalDelegatedPropertyReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference value) {
      copyOnWrite();
      instance.mergeLocalDelegatedPropertyReference(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference local_delegated_property_reference = 31;</code>
     */
    public Builder clearLocalDelegatedPropertyReference() {
      copyOnWrite();
      instance.clearLocalDelegatedPropertyReference();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall constructor_call = 32;</code>
     */
    @java.lang.Override
    public boolean hasConstructorCall() {
      return instance.hasConstructorCall();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall constructor_call = 32;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall getConstructorCall() {
      return instance.getConstructorCall();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall constructor_call = 32;</code>
     */
    public Builder setConstructorCall(org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall value) {
      copyOnWrite();
      instance.setConstructorCall(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall constructor_call = 32;</code>
     */
    public Builder setConstructorCall(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall.Builder builderForValue) {
      copyOnWrite();
      instance.setConstructorCall(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall constructor_call = 32;</code>
     */
    public Builder mergeConstructorCall(org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall value) {
      copyOnWrite();
      instance.mergeConstructorCall(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall constructor_call = 32;</code>
     */
    public Builder clearConstructorCall() {
      copyOnWrite();
      instance.clearConstructorCall();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression function_expression = 33;</code>
     */
    @java.lang.Override
    public boolean hasFunctionExpression() {
      return instance.hasFunctionExpression();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression function_expression = 33;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression getFunctionExpression() {
      return instance.getFunctionExpression();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression function_expression = 33;</code>
     */
    public Builder setFunctionExpression(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression value) {
      copyOnWrite();
      instance.setFunctionExpression(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression function_expression = 33;</code>
     */
    public Builder setFunctionExpression(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression.Builder builderForValue) {
      copyOnWrite();
      instance.setFunctionExpression(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression function_expression = 33;</code>
     */
    public Builder mergeFunctionExpression(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression value) {
      copyOnWrite();
      instance.mergeFunctionExpression(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression function_expression = 33;</code>
     */
    public Builder clearFunctionExpression() {
      copyOnWrite();
      instance.clearFunctionExpression();
      return this;
    }

    /**
     * <pre>
     * Error code
     * </pre>
     *
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression error_expression = 34;</code>
     */
    @java.lang.Override
    public boolean hasErrorExpression() {
      return instance.hasErrorExpression();
    }
    /**
     * <pre>
     * Error code
     * </pre>
     *
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression error_expression = 34;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression getErrorExpression() {
      return instance.getErrorExpression();
    }
    /**
     * <pre>
     * Error code
     * </pre>
     *
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression error_expression = 34;</code>
     */
    public Builder setErrorExpression(org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression value) {
      copyOnWrite();
      instance.setErrorExpression(value);
      return this;
    }
    /**
     * <pre>
     * Error code
     * </pre>
     *
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression error_expression = 34;</code>
     */
    public Builder setErrorExpression(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression.Builder builderForValue) {
      copyOnWrite();
      instance.setErrorExpression(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Error code
     * </pre>
     *
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression error_expression = 34;</code>
     */
    public Builder mergeErrorExpression(org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression value) {
      copyOnWrite();
      instance.mergeErrorExpression(value);
      return this;
    }
    /**
     * <pre>
     * Error code
     * </pre>
     *
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression error_expression = 34;</code>
     */
    public Builder clearErrorExpression() {
      copyOnWrite();
      instance.clearErrorExpression();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression error_call_expression = 35;</code>
     */
    @java.lang.Override
    public boolean hasErrorCallExpression() {
      return instance.hasErrorCallExpression();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression error_call_expression = 35;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression getErrorCallExpression() {
      return instance.getErrorCallExpression();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression error_call_expression = 35;</code>
     */
    public Builder setErrorCallExpression(org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression value) {
      copyOnWrite();
      instance.setErrorCallExpression(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression error_call_expression = 35;</code>
     */
    public Builder setErrorCallExpression(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression.Builder builderForValue) {
      copyOnWrite();
      instance.setErrorCallExpression(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression error_call_expression = 35;</code>
     */
    public Builder mergeErrorCallExpression(org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression value) {
      copyOnWrite();
      instance.mergeErrorCallExpression(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression error_call_expression = 35;</code>
     */
    public Builder clearErrorCallExpression() {
      copyOnWrite();
      instance.clearErrorCallExpression();
      return this;
    }

    /**
     * <pre>
     * Operations again
     * </pre>
     *
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock returnable_block = 36;</code>
     */
    @java.lang.Override
    public boolean hasReturnableBlock() {
      return instance.hasReturnableBlock();
    }
    /**
     * <pre>
     * Operations again
     * </pre>
     *
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock returnable_block = 36;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock getReturnableBlock() {
      return instance.getReturnableBlock();
    }
    /**
     * <pre>
     * Operations again
     * </pre>
     *
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock returnable_block = 36;</code>
     */
    public Builder setReturnableBlock(org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock value) {
      copyOnWrite();
      instance.setReturnableBlock(value);
      return this;
    }
    /**
     * <pre>
     * Operations again
     * </pre>
     *
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock returnable_block = 36;</code>
     */
    public Builder setReturnableBlock(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock.Builder builderForValue) {
      copyOnWrite();
      instance.setReturnableBlock(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Operations again
     * </pre>
     *
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock returnable_block = 36;</code>
     */
    public Builder mergeReturnableBlock(org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock value) {
      copyOnWrite();
      instance.mergeReturnableBlock(value);
      return this;
    }
    /**
     * <pre>
     * Operations again
     * </pre>
     *
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock returnable_block = 36;</code>
     */
    public Builder clearReturnableBlock() {
      copyOnWrite();
      instance.clearReturnableBlock();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock inlined_function_block = 37;</code>
     */
    @java.lang.Override
    public boolean hasInlinedFunctionBlock() {
      return instance.hasInlinedFunctionBlock();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock inlined_function_block = 37;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock getInlinedFunctionBlock() {
      return instance.getInlinedFunctionBlock();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock inlined_function_block = 37;</code>
     */
    public Builder setInlinedFunctionBlock(org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock value) {
      copyOnWrite();
      instance.setInlinedFunctionBlock(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock inlined_function_block = 37;</code>
     */
    public Builder setInlinedFunctionBlock(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock.Builder builderForValue) {
      copyOnWrite();
      instance.setInlinedFunctionBlock(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock inlined_function_block = 37;</code>
     */
    public Builder mergeInlinedFunctionBlock(org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock value) {
      copyOnWrite();
      instance.mergeInlinedFunctionBlock(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock inlined_function_block = 37;</code>
     */
    public Builder clearInlinedFunctionBlock() {
      copyOnWrite();
      instance.clearInlinedFunctionBlock();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference rich_function_reference = 38;</code>
     */
    @java.lang.Override
    public boolean hasRichFunctionReference() {
      return instance.hasRichFunctionReference();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference rich_function_reference = 38;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference getRichFunctionReference() {
      return instance.getRichFunctionReference();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference rich_function_reference = 38;</code>
     */
    public Builder setRichFunctionReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference value) {
      copyOnWrite();
      instance.setRichFunctionReference(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference rich_function_reference = 38;</code>
     */
    public Builder setRichFunctionReference(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference.Builder builderForValue) {
      copyOnWrite();
      instance.setRichFunctionReference(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference rich_function_reference = 38;</code>
     */
    public Builder mergeRichFunctionReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference value) {
      copyOnWrite();
      instance.mergeRichFunctionReference(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference rich_function_reference = 38;</code>
     */
    public Builder clearRichFunctionReference() {
      copyOnWrite();
      instance.clearRichFunctionReference();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference rich_property_reference = 39;</code>
     */
    @java.lang.Override
    public boolean hasRichPropertyReference() {
      return instance.hasRichPropertyReference();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference rich_property_reference = 39;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference getRichPropertyReference() {
      return instance.getRichPropertyReference();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference rich_property_reference = 39;</code>
     */
    public Builder setRichPropertyReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference value) {
      copyOnWrite();
      instance.setRichPropertyReference(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference rich_property_reference = 39;</code>
     */
    public Builder setRichPropertyReference(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference.Builder builderForValue) {
      copyOnWrite();
      instance.setRichPropertyReference(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference rich_property_reference = 39;</code>
     */
    public Builder mergeRichPropertyReference(org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference value) {
      copyOnWrite();
      instance.mergeRichPropertyReference(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference rich_property_reference = 39;</code>
     */
    public Builder clearRichPropertyReference() {
      copyOnWrite();
      instance.clearRichPropertyReference();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation)
  }
  private byte memoizedIsInitialized = 2;
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "operation_",
            "operationCase_",
            org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrBreak.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrCall.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrClassReference.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrComposite.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrConst.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrContinue.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrDelegatingConstructorCall.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrDoWhile.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumConstructorCall.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionReference.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrGetClass.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrGetEnumValue.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrGetObject.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrGetValue.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrInstanceInitializerCall.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyReference.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrSetField.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrSetValue.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrStringConcat.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrThrow.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrTry.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrWhen.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrWhile.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicMemberExpression.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrDynamicOperatorExpression.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedPropertyReference.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructorCall.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionExpression.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorExpression.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrErrorCallExpression.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnableBlock.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrRichFunctionReference.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrRichPropertyReference.class,
          };
          java.lang.String info =
              "\u0004\'\u0001\u0000\u0001\'\'\u0000\u0000&\u0001\u043c\u0000\u0002\u043c\u0000\u0003" +
              "\u043c\u0000\u0004\u043c\u0000\u0005\u043c\u0000\u0006<\u0000\u0007\u043c\u0000\b" +
              "\u043c\u0000\t\u043c\u0000\n\u043c\u0000\u000b\u043c\u0000\f\u043c\u0000\r\u043c" +
              "\u0000\u000e\u043c\u0000\u000f\u043c\u0000\u0010\u043c\u0000\u0011\u043c\u0000\u0012" +
              "\u043c\u0000\u0013\u043c\u0000\u0014\u043c\u0000\u0015\u043c\u0000\u0016\u043c\u0000" +
              "\u0017\u043c\u0000\u0018\u043c\u0000\u0019\u043c\u0000\u001a\u043c\u0000\u001b\u043c" +
              "\u0000\u001c\u043c\u0000\u001d\u043c\u0000\u001e\u043c\u0000\u001f\u043c\u0000 \u043c" +
              "\u0000!\u043c\u0000\"\u043c\u0000#\u043c\u0000$\u043c\u0000%\u043c\u0000&\u043c\u0000" +
              "\'\u043c\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        org.jetbrains.kotlin.protobuf.Parser<org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation> parser = PARSER;
        if (parser == null) {
          synchronized (org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return memoizedIsInitialized;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation)
  private static final org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation DEFAULT_INSTANCE;
  static {
    IrOperation defaultInstance = new IrOperation();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.registerDefaultInstance(
      IrOperation.class, defaultInstance);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrOperation getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile org.jetbrains.kotlin.protobuf.Parser<IrOperation> PARSER;

  public static org.jetbrains.kotlin.protobuf.Parser<IrOperation> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
