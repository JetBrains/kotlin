LineBreakpoint created at createExpressionWithArray.kt:11
Run Java
Connected to the target VM
createExpressionWithArray.kt:11
package createExpressionWithArray

import forTests.MyJavaClass
// do not remove this import, it checks that we do not insert ambiguous imports during EE
import forTests.MyJavaClass.InnerClass

fun main(args: Array<String>) {
    val baseArray = arrayOf(MyJavaClass().getBaseClassValue())
    val innerArray = arrayOf(MyJavaClass().getInnerClassValue())
    //Breakpoint!
    val a = 1
}

// PRINT_FRAME
// DESCRIPTOR_VIEW_OPTIONS: NAME_EXPRESSION_RESULT

Compile bytecode for args
Compile bytecode for baseArray
Compile bytecode for baseArray[0]
Compile bytecode for baseArray[0].i2
Compile bytecode for innerArray
Compile bytecode for innerArray[0]
Compile bytecode for (innerArray[0] as InnerClass).i
Compile bytecode for (innerArray[0] as InnerClass).i2
 frame    = main
   local    = args (expression = args)
   local    = baseArray (expression = baseArray)
     element  = 0 (expression = baseArray[0])
       field    = i2 (expression = baseArray[0].i2)
   local    = innerArray (expression = innerArray)
     element  = 0 (expression = innerArray[0])
       field    = i (expression = (innerArray[0] as InnerClass).i)
       field    = i2 (expression = (innerArray[0] as InnerClass).i2)
Disconnected from the target VM

Process finished with exit code 0
