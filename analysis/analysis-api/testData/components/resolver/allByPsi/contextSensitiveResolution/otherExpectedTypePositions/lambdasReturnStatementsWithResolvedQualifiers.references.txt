KtNameReferenceExpression(122,130): 'MySealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in MySealed) constructor()

KtNameReferenceExpression(153,161): 'MySealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in MySealed) constructor()

KtNameReferenceExpression(178,186): 'MySealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) sealed class MySealed

KtNameReferenceExpression(223,231): 'MySealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) sealed class MySealed

KtNameReferenceExpression(259,260): 'T'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: myRun) T

KtNameReferenceExpression(263,264): 'T'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: myRun) T

KtCallExpression(267,273): 'TODO()'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(267,271): 'TODO'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin) inline fun TODO(): kotlin.Nothing

KtNameReferenceExpression(289,290): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: id) X

KtNameReferenceExpression(293,294): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: id) X

KtCallExpression(297,303): 'TODO()'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(297,301): 'TODO'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin) inline fun TODO(): kotlin.Nothing

KtNameReferenceExpression(317,324): 'Boolean'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin) class Booleanprivate constructor : kotlin.Comparable<kotlin.Boolean>, java.io.Serializable

KtNameReferenceExpression(340,348): 'MySealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) sealed class MySealed

KtNameReferenceExpression(349,350): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in MySealed) data object X : MySealed()

KtCallExpression(356,433): 'myRunWithMySealed {'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(356,373): 'myRunWithMySealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) fun myRunWithMySealed(b: () -> MySealed)

KtNameReferenceExpression(388,389): 'b'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      b: kotlin.Boolean

KtLabelReferenceExpression(397,415): '@myRunWithMySealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: main) fun(): MySealed

KtNameReferenceExpression(416,417): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object X : MySealed()

KtNameReferenceExpression(426,427): 'Y'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object Y : MySealed()

KtCallExpression(439,524): 'myRunWithMySealed {'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(439,456): 'myRunWithMySealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) fun myRunWithMySealed(b: () -> MySealed)

KtNameReferenceExpression(471,472): 'b'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      b: kotlin.Boolean

KtLabelReferenceExpression(480,498): '@myRunWithMySealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: main) fun(): MySealed

KtCallExpression(499,504): 'id(X)'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(499,501): 'id'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) fun <X> id(x: X): X

KtNameReferenceExpression(502,503): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object X : MySealed()

KtCallExpression(513,518): 'id(Y)'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(513,515): 'id'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) fun <X> id(x: X): X

KtNameReferenceExpression(516,517): 'Y'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object Y : MySealed()

KtCallExpression(530,593): 'myRun<MySealed> {'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(530,535): 'myRun'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) fun <T> myRun(b: () -> T): T

KtNameReferenceExpression(536,544): 'MySealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) sealed class MySealed

KtNameReferenceExpression(560,561): 'b'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      b: kotlin.Boolean

KtLabelReferenceExpression(569,575): '@myRun'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: main) fun(): MySealed

KtNameReferenceExpression(576,577): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object X : MySealed()

KtNameReferenceExpression(586,587): 'Y'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object Y : MySealed()

KtCallExpression(598,682): 'foo('
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(598,601): 'foo'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) fun foo(a: MySealed)

KtCallExpression(611,676): 'myRun {'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(611,616): 'myRun'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) fun <T> myRun(b: () -> T): T

KtNameReferenceExpression(635,636): 'b'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      b: kotlin.Boolean

KtLabelReferenceExpression(644,650): '@myRun'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: main) fun(): MySealed

KtNameReferenceExpression(651,652): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object X : MySealed()

KtNameReferenceExpression(665,666): 'Y'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object Y : MySealed()

KtNameReferenceExpression(695,703): 'MySealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) sealed class MySealed

KtCallExpression(706,759): 'myRun {'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(706,711): 'myRun'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) fun <T> myRun(b: () -> T): T

KtNameReferenceExpression(726,727): 'b'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      b: kotlin.Boolean

KtLabelReferenceExpression(735,741): '@myRun'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: main.z) fun(): MySealed

KtNameReferenceExpression(742,743): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object X : MySealed()

KtNameReferenceExpression(752,753): 'Y'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object Y : MySealed()

KtCallExpression(765,818): 'myRun {'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(765,770): 'myRun'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) fun <T> myRun(b: () -> T): T

KtNameReferenceExpression(785,786): 'b'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      b: kotlin.Boolean

KtLabelReferenceExpression(794,800): '@myRun'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: main) fun(): ERROR(CST(ERROR CLASS: Unresolved name: X, ERROR CLASS: Unresolved name: Y)

KtNameReferenceExpression(801,802): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(811,812): 'Y'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtCallExpression(823,885): 'myRun {'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(823,828): 'myRun'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) fun <T> myRun(b: () -> T): T

KtNameReferenceExpression(843,844): 'b'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      b: kotlin.Boolean

KtLabelReferenceExpression(852,858): '@myRun'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: main) fun(): MySealed.X

KtNameReferenceExpression(859,867): 'MySealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) sealed class MySealed

KtNameReferenceExpression(868,869): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in MySealed) data object X : MySealed()

KtNameReferenceExpression(878,879): 'Y'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object Y : MySealed()