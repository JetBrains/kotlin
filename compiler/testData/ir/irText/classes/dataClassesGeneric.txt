FILE /dataClassesGeneric.kt
  CLASS CLASS Test1
    $this: VALUE_PARAMETER this@Test1: Test1<T>
    TYPE_PARAMETER <T>
    CONSTRUCTOR public constructor Test1<T>(x: T)
      VALUE_PARAMETER value-parameter x: T
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
        INSTANCE_INITIALIZER_CALL classDescriptor='Test1'
    PROPERTY public final val x: T
      FIELD PROPERTY_BACKING_FIELD public final val x: T
        EXPRESSION_BODY
          GET_VAR 'value-parameter x: T' type=T origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR public final fun <get-x>(): T
        $this: VALUE_PARAMETER this@Test1: Test1<T>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='<get-x>(): T'
            GET_FIELD 'x: T' type=T origin=null
              receiver: GET_VAR 'this@Test1: Test1<T>' type=Test1<T> origin=null
    FUN GENERATED_DATA_CLASS_MEMBER public final operator fun component1(): T
      $this: VALUE_PARAMETER this@Test1: Test1<T>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='component1(): T'
          CALL '<get-x>(): T' type=T origin=GET_PROPERTY
            $this: GET_VAR 'this@Test1: Test1<T>' type=Test1<T> origin=null
    FUN GENERATED_DATA_CLASS_MEMBER public final fun copy(x: T = ...): Test1<T>
      $this: VALUE_PARAMETER this@Test1: Test1<T>
      VALUE_PARAMETER value-parameter x: T = ...
        EXPRESSION_BODY
          CALL '<get-x>(): T' type=T origin=GET_PROPERTY
            $this: GET_VAR 'this@Test1: Test1<T>' type=Test1<T> origin=null
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='copy(T = ...): Test1<T>'
          CALL 'constructor Test1(T)' type=Test1<T> origin=null
            <T>: null
            x: GET_VAR 'value-parameter x: T = ...' type=T origin=null
    FUN GENERATED_DATA_CLASS_MEMBER public open override fun toString(): kotlin.String
      $this: VALUE_PARAMETER this@Test1: Test1<T>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='toString(): String'
          STRING_CONCATENATION type=kotlin.String
            CONST String type=kotlin.String value='Test1('
            CONST String type=kotlin.String value='x='
            CALL '<get-x>(): T' type=T origin=GET_PROPERTY
              $this: GET_VAR 'this@Test1: Test1<T>' type=Test1<T> origin=null
            CONST String type=kotlin.String value=')'
    FUN GENERATED_DATA_CLASS_MEMBER public open override fun hashCode(): kotlin.Int
      $this: VALUE_PARAMETER this@Test1: Test1<T>
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE var tmp0_result: kotlin.Int
          CONST Int type=kotlin.Int value='0'
        SET_VAR 'tmp0_result: Int' type=kotlin.Unit origin=EQ
          BLOCK type=kotlin.Int origin=null
            VAR IR_TEMPORARY_VARIABLE val tmp1: T
              CALL '<get-x>(): T' type=T origin=GET_PROPERTY
                $this: GET_VAR 'this@Test1: Test1<T>' type=Test1<T> origin=null
            WHEN type=kotlin.Int origin=null
              BRANCH
                if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean origin=EQEQ
                  arg0: GET_VAR 'tmp1: T' type=T origin=null
                  arg1: CONST Null type=kotlin.Nothing? value='null'
                then: CONST Int type=kotlin.Int value='0'
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value='true'
                then: CALL 'hashCode(): Int' type=kotlin.Int origin=null
                  $this: TYPE_OP type=kotlin.Any origin=IMPLICIT_CAST typeOperand=kotlin.Any
                    GET_VAR 'tmp1: T' type=T origin=null
        RETURN type=kotlin.Nothing from='hashCode(): Int'
          GET_VAR 'tmp0_result: Int' type=kotlin.Int origin=null
    FUN GENERATED_DATA_CLASS_MEMBER public open override fun equals(other: kotlin.Any?): kotlin.Boolean
      $this: VALUE_PARAMETER this@Test1: Test1<T>
      VALUE_PARAMETER value-parameter other: kotlin.Any?
      BLOCK_BODY
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'EQEQEQ(Any?, Any?): Boolean' type=kotlin.Boolean origin=EQEQEQ
              arg0: GET_VAR 'this@Test1: Test1<T>' type=Test1<T> origin=null
              arg1: GET_VAR 'value-parameter other: Any?' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='equals(Any?): Boolean'
              CONST Boolean type=kotlin.Boolean value='true'
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: TYPE_OP type=kotlin.Boolean origin=NOT_INSTANCEOF typeOperand=Test1<T>
              GET_VAR 'value-parameter other: Any?' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='equals(Any?): Boolean'
              CONST Boolean type=kotlin.Boolean value='false'
        VAR IR_TEMPORARY_VARIABLE val tmp0_other_with_cast: Test1<T>
          TYPE_OP type=Test1<T> origin=CAST typeOperand=Test1<T>
            GET_VAR 'value-parameter other: Any?' type=kotlin.Any? origin=null
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean origin=EXCLEQ
              arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean origin=EXCLEQ
                arg0: CALL '<get-x>(): T' type=T origin=GET_PROPERTY
                  $this: GET_VAR 'this@Test1: Test1<T>' type=Test1<T> origin=null
                arg1: CALL '<get-x>(): T' type=T origin=GET_PROPERTY
                  $this: GET_VAR 'tmp0_other_with_cast: Test1<T>' type=Test1<T> origin=null
            then: RETURN type=kotlin.Nothing from='equals(Any?): Boolean'
              CONST Boolean type=kotlin.Boolean value='false'
        RETURN type=kotlin.Nothing from='equals(Any?): Boolean'
          CONST Boolean type=kotlin.Boolean value='true'

