// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: compiler/ir/serialization.common/src/KotlinIr.proto
// Protobuf Java Version: 4.29.3

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock}
 */
public  final class IrInlinedFunctionBlock extends
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite<
        IrInlinedFunctionBlock, IrInlinedFunctionBlock.Builder> implements
    // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock)
    IrInlinedFunctionBlockOrBuilder {
  private IrInlinedFunctionBlock() {
  }
  private int bitField0_;
  public static final int INLINED_FUNCTION_SYMBOL_FIELD_NUMBER = 1;
  private long inlinedFunctionSymbol_;
  /**
   * <code>int64 inlined_function_symbol = 1;</code>
   * @return Whether the inlinedFunctionSymbol field is set.
   */
  @java.lang.Override
  public boolean hasInlinedFunctionSymbol() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>int64 inlined_function_symbol = 1;</code>
   * @return The inlinedFunctionSymbol.
   */
  @java.lang.Override
  public long getInlinedFunctionSymbol() {
    return inlinedFunctionSymbol_;
  }
  /**
   * <code>int64 inlined_function_symbol = 1;</code>
   * @param value The inlinedFunctionSymbol to set.
   */
  private void setInlinedFunctionSymbol(long value) {
    bitField0_ |= 0x00000001;
    inlinedFunctionSymbol_ = value;
  }
  /**
   * <code>int64 inlined_function_symbol = 1;</code>
   */
  private void clearInlinedFunctionSymbol() {
    bitField0_ = (bitField0_ & ~0x00000001);
    inlinedFunctionSymbol_ = 0L;
  }

  public static final int INLINED_FUNCTION_FILE_ENTRY_FIELD_NUMBER = 2;
  private org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry inlinedFunctionFileEntry_;
  /**
   * <pre>
   * Required: either `inlined_function_file_entry` or `inlined_function_file_entry_id` is present.
   * </pre>
   *
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry inlined_function_file_entry = 2;</code>
   */
  @java.lang.Override
  public boolean hasInlinedFunctionFileEntry() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Required: either `inlined_function_file_entry` or `inlined_function_file_entry_id` is present.
   * </pre>
   *
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry inlined_function_file_entry = 2;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry getInlinedFunctionFileEntry() {
    return inlinedFunctionFileEntry_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry.getDefaultInstance() : inlinedFunctionFileEntry_;
  }
  /**
   * <pre>
   * Required: either `inlined_function_file_entry` or `inlined_function_file_entry_id` is present.
   * </pre>
   *
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry inlined_function_file_entry = 2;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setInlinedFunctionFileEntry(org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry value) {
    value.getClass();  // minimal bytecode null check
    inlinedFunctionFileEntry_ = value;
    bitField0_ |= 0x00000002;
    }
  /**
   * <pre>
   * Required: either `inlined_function_file_entry` or `inlined_function_file_entry_id` is present.
   * </pre>
   *
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry inlined_function_file_entry = 2;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
  private void mergeInlinedFunctionFileEntry(org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry value) {
    value.getClass();  // minimal bytecode null check
    if (inlinedFunctionFileEntry_ != null &&
        inlinedFunctionFileEntry_ != org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry.getDefaultInstance()) {
      inlinedFunctionFileEntry_ =
        org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry.newBuilder(inlinedFunctionFileEntry_).mergeFrom(value).buildPartial();
    } else {
      inlinedFunctionFileEntry_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   * <pre>
   * Required: either `inlined_function_file_entry` or `inlined_function_file_entry_id` is present.
   * </pre>
   *
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry inlined_function_file_entry = 2;</code>
   */
  private void clearInlinedFunctionFileEntry() {  inlinedFunctionFileEntry_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public static final int BASE_FIELD_NUMBER = 3;
  private org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock base_;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock base = 3 [features = { ... }</code>
   */
  @java.lang.Override
  public boolean hasBase() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock base = 3 [features = { ... }</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock getBase() {
    return base_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock.getDefaultInstance() : base_;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock base = 3 [features = { ... }</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setBase(org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock value) {
    value.getClass();  // minimal bytecode null check
    base_ = value;
    bitField0_ |= 0x00000004;
    }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock base = 3 [features = { ... }</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
  private void mergeBase(org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock value) {
    value.getClass();  // minimal bytecode null check
    if (base_ != null &&
        base_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock.getDefaultInstance()) {
      base_ =
        org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock.newBuilder(base_).mergeFrom(value).buildPartial();
    } else {
      base_ = value;
    }
    bitField0_ |= 0x00000004;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock base = 3 [features = { ... }</code>
   */
  private void clearBase() {  base_ = null;
    bitField0_ = (bitField0_ & ~0x00000004);
  }

  public static final int INLINED_FUNCTION_START_OFFSET_FIELD_NUMBER = 4;
  private int inlinedFunctionStartOffset_;
  /**
   * <code>int32 inlined_function_start_offset = 4 [features = { ... }</code>
   * @return Whether the inlinedFunctionStartOffset field is set.
   */
  @java.lang.Override
  public boolean hasInlinedFunctionStartOffset() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <code>int32 inlined_function_start_offset = 4 [features = { ... }</code>
   * @return The inlinedFunctionStartOffset.
   */
  @java.lang.Override
  public int getInlinedFunctionStartOffset() {
    return inlinedFunctionStartOffset_;
  }
  /**
   * <code>int32 inlined_function_start_offset = 4 [features = { ... }</code>
   * @param value The inlinedFunctionStartOffset to set.
   */
  private void setInlinedFunctionStartOffset(int value) {
    bitField0_ |= 0x00000008;
    inlinedFunctionStartOffset_ = value;
  }
  /**
   * <code>int32 inlined_function_start_offset = 4 [features = { ... }</code>
   */
  private void clearInlinedFunctionStartOffset() {
    bitField0_ = (bitField0_ & ~0x00000008);
    inlinedFunctionStartOffset_ = 0;
  }

  public static final int INLINED_FUNCTION_END_OFFSET_FIELD_NUMBER = 5;
  private int inlinedFunctionEndOffset_;
  /**
   * <code>int32 inlined_function_end_offset = 5 [features = { ... }</code>
   * @return Whether the inlinedFunctionEndOffset field is set.
   */
  @java.lang.Override
  public boolean hasInlinedFunctionEndOffset() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <code>int32 inlined_function_end_offset = 5 [features = { ... }</code>
   * @return The inlinedFunctionEndOffset.
   */
  @java.lang.Override
  public int getInlinedFunctionEndOffset() {
    return inlinedFunctionEndOffset_;
  }
  /**
   * <code>int32 inlined_function_end_offset = 5 [features = { ... }</code>
   * @param value The inlinedFunctionEndOffset to set.
   */
  private void setInlinedFunctionEndOffset(int value) {
    bitField0_ |= 0x00000010;
    inlinedFunctionEndOffset_ = value;
  }
  /**
   * <code>int32 inlined_function_end_offset = 5 [features = { ... }</code>
   */
  private void clearInlinedFunctionEndOffset() {
    bitField0_ = (bitField0_ & ~0x00000010);
    inlinedFunctionEndOffset_ = 0;
  }

  public static final int INLINED_FUNCTION_FILE_ENTRY_ID_FIELD_NUMBER = 6;
  private int inlinedFunctionFileEntryId_;
  /**
   * <pre>
   * Required: either `inlined_function_file_entry` or `inlined_function_file_entry_id` is present.
   * </pre>
   *
   * <code>int32 inlined_function_file_entry_id = 6;</code>
   * @return Whether the inlinedFunctionFileEntryId field is set.
   */
  @java.lang.Override
  public boolean hasInlinedFunctionFileEntryId() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * Required: either `inlined_function_file_entry` or `inlined_function_file_entry_id` is present.
   * </pre>
   *
   * <code>int32 inlined_function_file_entry_id = 6;</code>
   * @return The inlinedFunctionFileEntryId.
   */
  @java.lang.Override
  public int getInlinedFunctionFileEntryId() {
    return inlinedFunctionFileEntryId_;
  }
  /**
   * <pre>
   * Required: either `inlined_function_file_entry` or `inlined_function_file_entry_id` is present.
   * </pre>
   *
   * <code>int32 inlined_function_file_entry_id = 6;</code>
   * @param value The inlinedFunctionFileEntryId to set.
   */
  private void setInlinedFunctionFileEntryId(int value) {
    bitField0_ |= 0x00000020;
    inlinedFunctionFileEntryId_ = value;
  }
  /**
   * <pre>
   * Required: either `inlined_function_file_entry` or `inlined_function_file_entry_id` is present.
   * </pre>
   *
   * <code>int32 inlined_function_file_entry_id = 6;</code>
   */
  private void clearInlinedFunctionFileEntryId() {
    bitField0_ = (bitField0_ & ~0x00000020);
    inlinedFunctionFileEntryId_ = 0;
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock parseFrom(
      java.nio.ByteBuffer data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock parseFrom(
      java.nio.ByteBuffer data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock parseFrom(byte[] data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock parseFrom(
      byte[] data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock parseFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock parseDelimitedFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock}
   */
  public static final class Builder extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock, Builder> implements
      // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock)
      org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlockOrBuilder {
    // Construct using org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>int64 inlined_function_symbol = 1;</code>
     * @return Whether the inlinedFunctionSymbol field is set.
     */
    @java.lang.Override
    public boolean hasInlinedFunctionSymbol() {
      return instance.hasInlinedFunctionSymbol();
    }
    /**
     * <code>int64 inlined_function_symbol = 1;</code>
     * @return The inlinedFunctionSymbol.
     */
    @java.lang.Override
    public long getInlinedFunctionSymbol() {
      return instance.getInlinedFunctionSymbol();
    }
    /**
     * <code>int64 inlined_function_symbol = 1;</code>
     * @param value The inlinedFunctionSymbol to set.
     * @return This builder for chaining.
     */
    public Builder setInlinedFunctionSymbol(long value) {
      copyOnWrite();
      instance.setInlinedFunctionSymbol(value);
      return this;
    }
    /**
     * <code>int64 inlined_function_symbol = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearInlinedFunctionSymbol() {
      copyOnWrite();
      instance.clearInlinedFunctionSymbol();
      return this;
    }

    /**
     * <pre>
     * Required: either `inlined_function_file_entry` or `inlined_function_file_entry_id` is present.
     * </pre>
     *
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry inlined_function_file_entry = 2;</code>
     */
    @java.lang.Override
    public boolean hasInlinedFunctionFileEntry() {
      return instance.hasInlinedFunctionFileEntry();
    }
    /**
     * <pre>
     * Required: either `inlined_function_file_entry` or `inlined_function_file_entry_id` is present.
     * </pre>
     *
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry inlined_function_file_entry = 2;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry getInlinedFunctionFileEntry() {
      return instance.getInlinedFunctionFileEntry();
    }
    /**
     * <pre>
     * Required: either `inlined_function_file_entry` or `inlined_function_file_entry_id` is present.
     * </pre>
     *
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry inlined_function_file_entry = 2;</code>
     */
    public Builder setInlinedFunctionFileEntry(org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry value) {
      copyOnWrite();
      instance.setInlinedFunctionFileEntry(value);
      return this;
      }
    /**
     * <pre>
     * Required: either `inlined_function_file_entry` or `inlined_function_file_entry_id` is present.
     * </pre>
     *
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry inlined_function_file_entry = 2;</code>
     */
    public Builder setInlinedFunctionFileEntry(
        org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry.Builder builderForValue) {
      copyOnWrite();
      instance.setInlinedFunctionFileEntry(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Required: either `inlined_function_file_entry` or `inlined_function_file_entry_id` is present.
     * </pre>
     *
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry inlined_function_file_entry = 2;</code>
     */
    public Builder mergeInlinedFunctionFileEntry(org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry value) {
      copyOnWrite();
      instance.mergeInlinedFunctionFileEntry(value);
      return this;
    }
    /**
     * <pre>
     * Required: either `inlined_function_file_entry` or `inlined_function_file_entry_id` is present.
     * </pre>
     *
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry inlined_function_file_entry = 2;</code>
     */
    public Builder clearInlinedFunctionFileEntry() {  copyOnWrite();
      instance.clearInlinedFunctionFileEntry();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock base = 3 [features = { ... }</code>
     */
    @java.lang.Override
    public boolean hasBase() {
      return instance.hasBase();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock base = 3 [features = { ... }</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock getBase() {
      return instance.getBase();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock base = 3 [features = { ... }</code>
     */
    public Builder setBase(org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock value) {
      copyOnWrite();
      instance.setBase(value);
      return this;
      }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock base = 3 [features = { ... }</code>
     */
    public Builder setBase(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock.Builder builderForValue) {
      copyOnWrite();
      instance.setBase(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock base = 3 [features = { ... }</code>
     */
    public Builder mergeBase(org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock value) {
      copyOnWrite();
      instance.mergeBase(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrBlock base = 3 [features = { ... }</code>
     */
    public Builder clearBase() {  copyOnWrite();
      instance.clearBase();
      return this;
    }

    /**
     * <code>int32 inlined_function_start_offset = 4 [features = { ... }</code>
     * @return Whether the inlinedFunctionStartOffset field is set.
     */
    @java.lang.Override
    public boolean hasInlinedFunctionStartOffset() {
      return instance.hasInlinedFunctionStartOffset();
    }
    /**
     * <code>int32 inlined_function_start_offset = 4 [features = { ... }</code>
     * @return The inlinedFunctionStartOffset.
     */
    @java.lang.Override
    public int getInlinedFunctionStartOffset() {
      return instance.getInlinedFunctionStartOffset();
    }
    /**
     * <code>int32 inlined_function_start_offset = 4 [features = { ... }</code>
     * @param value The inlinedFunctionStartOffset to set.
     * @return This builder for chaining.
     */
    public Builder setInlinedFunctionStartOffset(int value) {
      copyOnWrite();
      instance.setInlinedFunctionStartOffset(value);
      return this;
    }
    /**
     * <code>int32 inlined_function_start_offset = 4 [features = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearInlinedFunctionStartOffset() {
      copyOnWrite();
      instance.clearInlinedFunctionStartOffset();
      return this;
    }

    /**
     * <code>int32 inlined_function_end_offset = 5 [features = { ... }</code>
     * @return Whether the inlinedFunctionEndOffset field is set.
     */
    @java.lang.Override
    public boolean hasInlinedFunctionEndOffset() {
      return instance.hasInlinedFunctionEndOffset();
    }
    /**
     * <code>int32 inlined_function_end_offset = 5 [features = { ... }</code>
     * @return The inlinedFunctionEndOffset.
     */
    @java.lang.Override
    public int getInlinedFunctionEndOffset() {
      return instance.getInlinedFunctionEndOffset();
    }
    /**
     * <code>int32 inlined_function_end_offset = 5 [features = { ... }</code>
     * @param value The inlinedFunctionEndOffset to set.
     * @return This builder for chaining.
     */
    public Builder setInlinedFunctionEndOffset(int value) {
      copyOnWrite();
      instance.setInlinedFunctionEndOffset(value);
      return this;
    }
    /**
     * <code>int32 inlined_function_end_offset = 5 [features = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearInlinedFunctionEndOffset() {
      copyOnWrite();
      instance.clearInlinedFunctionEndOffset();
      return this;
    }

    /**
     * <pre>
     * Required: either `inlined_function_file_entry` or `inlined_function_file_entry_id` is present.
     * </pre>
     *
     * <code>int32 inlined_function_file_entry_id = 6;</code>
     * @return Whether the inlinedFunctionFileEntryId field is set.
     */
    @java.lang.Override
    public boolean hasInlinedFunctionFileEntryId() {
      return instance.hasInlinedFunctionFileEntryId();
    }
    /**
     * <pre>
     * Required: either `inlined_function_file_entry` or `inlined_function_file_entry_id` is present.
     * </pre>
     *
     * <code>int32 inlined_function_file_entry_id = 6;</code>
     * @return The inlinedFunctionFileEntryId.
     */
    @java.lang.Override
    public int getInlinedFunctionFileEntryId() {
      return instance.getInlinedFunctionFileEntryId();
    }
    /**
     * <pre>
     * Required: either `inlined_function_file_entry` or `inlined_function_file_entry_id` is present.
     * </pre>
     *
     * <code>int32 inlined_function_file_entry_id = 6;</code>
     * @param value The inlinedFunctionFileEntryId to set.
     * @return This builder for chaining.
     */
    public Builder setInlinedFunctionFileEntryId(int value) {
      copyOnWrite();
      instance.setInlinedFunctionFileEntryId(value);
      return this;
    }
    /**
     * <pre>
     * Required: either `inlined_function_file_entry` or `inlined_function_file_entry_id` is present.
     * </pre>
     *
     * <code>int32 inlined_function_file_entry_id = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearInlinedFunctionFileEntryId() {
      copyOnWrite();
      instance.clearInlinedFunctionFileEntryId();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock)
  }
  private byte memoizedIsInitialized = 2;
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "inlinedFunctionSymbol_",
            "inlinedFunctionFileEntry_",
            "base_",
            "inlinedFunctionStartOffset_",
            "inlinedFunctionEndOffset_",
            "inlinedFunctionFileEntryId_",
          };
          java.lang.String info =
              "\u0004\u0006\u0000\u0001\u0001\u0006\u0006\u0000\u0000\u0004\u0001\u1002\u0000\u0002" +
              "\u1409\u0001\u0003\u1509\u0002\u0004\u1504\u0003\u0005\u1504\u0004\u0006\u1004\u0005" +
              "";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        org.jetbrains.kotlin.protobuf.Parser<org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock> parser = PARSER;
        if (parser == null) {
          synchronized (org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return memoizedIsInitialized;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock)
  private static final org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock DEFAULT_INSTANCE;
  static {
    IrInlinedFunctionBlock defaultInstance = new IrInlinedFunctionBlock();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.registerDefaultInstance(
      IrInlinedFunctionBlock.class, defaultInstance);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrInlinedFunctionBlock getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile org.jetbrains.kotlin.protobuf.Parser<IrInlinedFunctionBlock> PARSER;

  public static org.jetbrains.kotlin.protobuf.Parser<IrInlinedFunctionBlock> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
