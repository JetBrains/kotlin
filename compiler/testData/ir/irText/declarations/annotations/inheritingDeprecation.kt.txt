class DefaultImpl : IFoo {
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

}

class Delegated : IFoo {
  private /* final field */ val $$delegate_0: IFoo = foo
  constructor(foo: IFoo) /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  override val String.extProp: String
    override get(): String {
      return (<this>.#$$delegate_0, <this>).<get-extProp>()
    }

  override val prop: String
    override get(): String {
      return <this>.#$$delegate_0.<get-prop>()
    }

}

class ExplicitOverride : IFoo {
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  override val String.extProp: String
    override get(): String {
      return ""
    }

  override val prop: String
    override get(): String {
      return ""
    }

}

interface IFoo {
  @Deprecated(message = "")
  val String.extProp: String
    get(): String {
      return ""
    }

  @Deprecated(message = "")
  val prop: String
    get(): String {
      return ""
    }

}

