Anno1.kt:
  FILE[kind=File[packageFqName=<root>]]
    PACKAGE_DIRECTIVE
    IMPORT_LIST
    CLASS[classId=/Anno1, fqName=Anno1, isClsStubCompiledToJvmDefaultImplementation=false, isEnumEntry=false, isInterface=false, isLocal=false, isTopLevel=true, name=Anno1, superNames=[]]
      MODIFIER_LIST[annotation]
        ANNOTATION_ENTRY[hasValueArguments=true, shortName=Target]
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=Target]
          VALUE_ARGUMENT_LIST
            VALUE_ARGUMENT[isSpread=false]
              DOT_QUALIFIED_EXPRESSION
                REFERENCE_EXPRESSION[referencedName=AnnotationTarget]
                REFERENCE_EXPRESSION[referencedName=TYPE]
            VALUE_ARGUMENT[isSpread=false]
              DOT_QUALIFIED_EXPRESSION
                REFERENCE_EXPRESSION[referencedName=AnnotationTarget]
                REFERENCE_EXPRESSION[referencedName=TYPE_PARAMETER]


Anno2.kt:
  FILE[kind=File[packageFqName=<root>]]
    PACKAGE_DIRECTIVE
    IMPORT_LIST
    CLASS[classId=/Anno2, fqName=Anno2, isClsStubCompiledToJvmDefaultImplementation=false, isEnumEntry=false, isInterface=false, isLocal=false, isTopLevel=true, name=Anno2, superNames=[]]
      MODIFIER_LIST[annotation]
        ANNOTATION_ENTRY[hasValueArguments=true, shortName=Target]
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=Target]
          VALUE_ARGUMENT_LIST
            VALUE_ARGUMENT[isSpread=false]
              DOT_QUALIFIED_EXPRESSION
                REFERENCE_EXPRESSION[referencedName=AnnotationTarget]
                REFERENCE_EXPRESSION[referencedName=TYPE]
            VALUE_ARGUMENT[isSpread=false]
              DOT_QUALIFIED_EXPRESSION
                REFERENCE_EXPRESSION[referencedName=AnnotationTarget]
                REFERENCE_EXPRESSION[referencedName=TYPE_PARAMETER]


I1.kt:
  FILE[kind=File[packageFqName=<root>]]
    PACKAGE_DIRECTIVE
    IMPORT_LIST
    CLASS[classId=/I1, fqName=I1, isClsStubCompiledToJvmDefaultImplementation=false, isEnumEntry=false, isInterface=true, isLocal=false, isTopLevel=true, name=I1, superNames=[]]


I2.kt:
  FILE[kind=File[packageFqName=<root>]]
    PACKAGE_DIRECTIVE
    IMPORT_LIST
    CLASS[classId=/I2, fqName=I2, isClsStubCompiledToJvmDefaultImplementation=false, isEnumEntry=false, isInterface=true, isLocal=false, isTopLevel=true, name=I2, superNames=[]]


foo.kt:
  FILE[kind=Facade[packageFqName=<root>, facadeFqName=FooKt]]
    PACKAGE_DIRECTIVE
    IMPORT_LIST
    FUN[fqName=foo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=true, isExtension=false, isTopLevel=true, mayHaveContract=false, name=foo]
      MODIFIER_LIST[]
        ANNOTATION_ENTRY[hasValueArguments=true, shortName=Suppress]
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=Suppress]
          VALUE_ARGUMENT_LIST
            VALUE_ARGUMENT[isSpread=false]
              STRING_TEMPLATE
                LITERAL_STRING_TEMPLATE_ENTRY[text=ANNOTATION_IN_WHERE_CLAUSE_ERROR]
      TYPE_PARAMETER_LIST
        TYPE_PARAMETER[fqName=null, name=T]
          MODIFIER_LIST[]
            ANNOTATION_ENTRY[hasValueArguments=false, shortName=Anno1]
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=Anno1]
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=I1]
      VALUE_PARAMETER_LIST
      TYPE_CONSTRAINT_LIST
        TYPE_CONSTRAINT
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=Anno2]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=Anno2]
          REFERENCE_EXPRESSION[referencedName=T]
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=I2]
