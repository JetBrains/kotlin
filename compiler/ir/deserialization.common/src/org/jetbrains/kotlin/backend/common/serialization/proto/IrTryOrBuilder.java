// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: compiler/ir/serialization.common/src/KotlinIr.proto

package org.jetbrains.kotlin.backend.common.serialization.proto;

public interface IrTryOrBuilder extends
    // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.backend.common.serialization.proto.IrTry)
    org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression result = 1;</code>
   */
  boolean hasResult();
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression result = 1;</code>
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression getResult();

  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrStatement catch = 2;</code>
   */
  java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrStatement> 
      getCatchList();
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrStatement catch = 2;</code>
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.IrStatement getCatch(int index);
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrStatement catch = 2;</code>
   */
  int getCatchCount();

  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression finally = 3;</code>
   */
  boolean hasFinally();
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression finally = 3;</code>
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression getFinally();
}