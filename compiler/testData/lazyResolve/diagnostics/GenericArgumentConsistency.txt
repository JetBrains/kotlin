namespace <root>

// <namespace name="x">
namespace x

internal abstract trait x.AA1</*0*/ out T : jet.Any?> : jet.Any {
}
internal abstract trait x.AB1 : x.AA1<jet.Int> {
}
internal abstract trait x.AB2 : x.AA1<jet.Number>, x.AB1, x.AB3 {
}
internal abstract trait x.AB3 : x.AA1<jet.Comparable<jet.Int>> {
}
// </namespace name="x">
// <namespace name="x2">
namespace x2

internal abstract trait x2.AA1</*0*/ out T : jet.Any?> : jet.Any {
}
internal abstract trait x2.AB1 : x2.AA1<jet.Any> {
}
internal abstract trait x2.AB2 : x2.AA1<jet.Number>, x2.AB1, x2.AB3 {
}
internal abstract trait x2.AB3 : x2.AA1<jet.Comparable<jet.Int>> {
}
// </namespace name="x2">
// <namespace name="x3">
namespace x3

internal abstract trait x3.AA1</*0*/ in T : jet.Any?> : jet.Any {
}
internal abstract trait x3.AB1 : x3.AA1<jet.Any> {
}
internal abstract trait x3.AB2 : x3.AA1<jet.Number>, x3.AB1, x3.AB3 {
}
internal abstract trait x3.AB3 : x3.AA1<jet.Comparable<jet.Int>> {
}
// </namespace name="x3">
// <namespace name="sx2">
namespace sx2

internal abstract trait sx2.AA1</*0*/ in T : jet.Any?> : jet.Any {
}
internal abstract trait sx2.AB1 : sx2.AA1<jet.Int> {
}
internal abstract trait sx2.AB2 : sx2.AA1<jet.Number>, sx2.AB1, sx2.AB3 {
}
internal abstract trait sx2.AB3 : sx2.AA1<jet.Comparable<jet.Int>> {
}
// </namespace name="sx2">
internal abstract trait A</*0*/ in T : jet.Any?> : jet.Any {
}
internal abstract trait A1</*0*/ out T : jet.Any?> : jet.Any {
}
internal abstract trait B</*0*/ T : jet.Any?> : A<jet.Int> {
}
internal abstract trait B1 : A1<jet.Int> {
}
internal abstract trait B2 : A1<jet.Any>, B1 {
}
internal abstract trait BA1</*0*/ T : jet.Any?> : jet.Any {
}
internal abstract trait BB1 : BA1<jet.Int> {
}
internal abstract trait BB2 : BA1<jet.Any>, BB1 {
}
internal abstract trait C</*0*/ T : jet.Any?> : B<T>, A<T> {
}
internal abstract trait C1</*0*/ T : jet.Any?> : B<T>, A<jet.Any> {
}
internal abstract trait D : C<jet.Boolean>, B<jet.Double> {
}
