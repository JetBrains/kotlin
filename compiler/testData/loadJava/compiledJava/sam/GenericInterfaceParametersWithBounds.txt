package test

public /*synthesized*/ fun </*0*/ A : kotlin.Comparable<A!>!, /*1*/ B : kotlin.(Mutable)List<A!>!> GenericInterfaceParametersWithBounds(/*0*/ function: (kotlin.Array<(out) A!>!, B!) -> kotlin.Unit): test.GenericInterfaceParametersWithBounds<A, B> where A : kotlin.Cloneable!

public interface GenericInterfaceParametersWithBounds</*0*/ A : kotlin.Comparable<A!>!, /*1*/ B : kotlin.(Mutable)List<A!>!> where A : kotlin.Cloneable! {
    public abstract fun method(/*0*/ p0: kotlin.Array<(out) A!>!, /*1*/ p1: B!): kotlin.Unit
}
