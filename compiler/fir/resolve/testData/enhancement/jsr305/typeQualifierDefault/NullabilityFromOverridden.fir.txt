@R|NonNullApi|() public open class A : R|java/lang/Object| {
    public open operator function foo1(x: R|kotlin/String|): R|kotlin/String|

    public open operator function foo2(x: R|kotlin/String|): R|kotlin/String|

    public open operator function foo3(x: R|kotlin/String|): R|kotlin/String|

    @R|javax/annotation/Nullable|() public open operator function bar1(@R|javax/annotation/Nullable|() x: R|kotlin/String|?): R|kotlin/String|?

    @R|javax/annotation/Nullable|() public open operator function bar2(@R|javax/annotation/Nullable|() x: R|kotlin/String|?): R|kotlin/String|?

    public open operator function baz(@R|javax/annotation/Nonnull|() x: R|kotlin/String|): R|kotlin/String|

}
@R|NonNullApi|() public abstract interface AInt : R|java/lang/Object| {
    public abstract operator function foo1(x: R|kotlin/String|): R|kotlin/CharSequence|

    public abstract operator function foo2(x: R|kotlin/String|): R|kotlin/CharSequence|

    public abstract operator function foo3(x: R|kotlin/String|): R|kotlin/CharSequence|

    @R|javax/annotation/Nullable|() public abstract operator function bar1(@R|javax/annotation/Nullable|() x: R|kotlin/String|?): R|kotlin/CharSequence|?

    @R|javax/annotation/Nullable|() public abstract operator function bar2(@R|javax/annotation/Nullable|() x: R|kotlin/String|?): R|kotlin/CharSequence|?

    public abstract operator function baz(@R|javax/annotation/Nonnull|() x: R|kotlin/String|): R|kotlin/CharSequence|

}
@R|NullableApi|() public open class B : R|A|, R|AInt| {
    public open operator function foo1(x: R|kotlin/String|): R|kotlin/String|

    @R|javax/annotation/Nonnull|() public open operator function foo2(@R|javax/annotation/Nonnull|() x: R|kotlin/String|): R|kotlin/String|

    public open operator function bar1(x: R|kotlin/String|?): R|kotlin/String|?

    public open operator function baz(x: R|kotlin/String|): R|kotlin/String|

}
@R|NonNullApi|() public open class C : R|A|, R|AInt| {
    public open operator function foo1(x: R|kotlin/String|): R|kotlin/String|

    public open operator function foo2(@R|javax/annotation/Nonnull|() x: R|kotlin/String|): R|kotlin/String|

    public open operator function bar1(x: R|kotlin/String|?): R|kotlin/String|?

    @R|javax/annotation/Nullable|() public open operator function bar2(@R|javax/annotation/Nullable|() x: R|kotlin/String|?): R|kotlin/String|?

    public open operator function baz(x: R|kotlin/String|): R|kotlin/String|

}
@R|java/lang/annotation/Target|(R|java/lang/annotation/ElementType.TYPE|()) @R|java/lang/annotation/Retention|(R|java/lang/annotation/RetentionPolicy.RUNTIME|()) @R|java/lang/annotation/Documented|() @R|javax/annotation/Nonnull|() @R|javax/annotation/meta/TypeQualifierDefault|(<implicitArrayOf>(R|java/lang/annotation/ElementType.METHOD|(), R|java/lang/annotation/ElementType.PARAMETER|(), R|java/lang/annotation/ElementType.FIELD|())) public abstract annotation class NonNullApi : R|java/lang/annotation/Annotation| {
}
@R|java/lang/annotation/Target|(R|java/lang/annotation/ElementType.TYPE|()) @R|java/lang/annotation/Retention|(R|java/lang/annotation/RetentionPolicy.RUNTIME|()) @R|java/lang/annotation/Documented|() @R|javax/annotation/CheckForNull|() @R|javax/annotation/meta/TypeQualifierDefault|(<implicitArrayOf>(R|java/lang/annotation/ElementType.METHOD|(), R|java/lang/annotation/ElementType.PARAMETER|(), R|java/lang/annotation/ElementType.FIELD|())) public abstract annotation class NullableApi : R|java/lang/annotation/Annotation| {
}
