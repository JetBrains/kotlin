== test ==
tailrec fun test() : Int {
    try {
        // do nothing
    } finally {
        return test()
    }
}
---------------------
L0:
  1 <START>
  2 mark({ try { // do nothing } finally { return test() } })
    mark(try { // do nothing } finally { return test() })
    jmp?(L2)                                                                NEXT:[mark({ return test() }), mark({ // do nothing })]
  3 mark({ // do nothing })
    read (Unit)
  2 jmp?(L2)                                                                NEXT:[mark({ return test() }), jmp(L3)]
    jmp(L3)                                                                 NEXT:[mark({ return test() })]
L2 [onExceptionToFinallyBlock]:
L4 [start finally]:
  3 mark({ return test() })                                                 PREV:[jmp?(L2), jmp?(L2)]
    mark(test())
    call(test(), test) -> <v0>
    ret(*|<v0>) L1                                                          NEXT:[<END>]
L5 [finish finally]:
- 2 jmp(error)                                                              NEXT:[<ERROR>]                                                      PREV:[]
L3 [skipFinallyToErrorBlock]:
L6 [copy of L2, onExceptionToFinallyBlock]:
  3 mark({ return test() })                                                 PREV:[jmp(L3)]
    mark(test())
    call(test(), test) -> <v0>
    ret(*|<v0>) L1                                                          NEXT:[<END>]
- 2 merge(try { // do nothing } finally { return test() }|!<v2>) -> <v3>    PREV:[]
L1:
  1 <END>                                                                   NEXT:[<SINK>]                                                       PREV:[ret(*|<v0>) L1, ret(*|<v0>) L1]
error:
    <ERROR>                                                                 PREV:[]
sink:
    <SINK>                                                                  PREV:[<ERROR>, <END>]
=====================
