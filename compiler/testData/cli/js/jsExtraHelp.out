Usage: kotlinc-js <options> <source files>
where advanced options include:
  -Xfriend-modules=<path>    Paths to friend modules
  -Xfriend-modules-disabled  Disable internal declaration export
  -Xtyped-arrays             Translate primitive arrays to JS typed arrays
  -Xallow-kotlin-package     Allow compiling code in package 'kotlin' and allow not requiring kotlin.stdlib in module-info
  -Xcoroutines={enable|warn|error}
                             Enable coroutines or report warnings or errors on declarations and use sites of 'suspend' modifier
  -Xdump-perf=<path>         Dump detailed performance statistics to the specified file
  -Xeffect-system            Enable experimental language feature: effect system
  -Xexperimental=<fq.name>   Enable and propagate usages of experimental API for marker annotation with the given fully qualified name
  -Xintellij-plugin-root=<path> Path to the kotlin-compiler.jar or directory where IntelliJ configuration files can be found
  -Xlegacy-smart-cast-after-try Allow var smart casts despite assignment in try block
  -Xmulti-platform           Enable experimental language support for multi-platform projects
  -Xnew-inference            Enable new experimental generic type inference algorithm
  -Xno-check-actual          Do not check presence of 'actual' modifier in multi-platform projects
  -Xno-inline                Disable method inlining
  -Xplugin=<path>            Load plugins from the given classpath
  -Xprogressive              Enable compiler progressive mode.
                             In this mode, deprecations and bug fixes for unstable code take effect immediately,
                             instead of going through graceful migration cycle.
                             Code, written in progressive mode is backward compatible; however, code written in
                             non-progressive mode may cause compilation errors in progressive mode.
  -Xproper-ieee754-comparisons Generate proper IEEE 754 comparisons in all cases if values are statically known to be of primitive numeric types
  -Xread-deserialized-contracts Enable reading of contracts from metadata
  -Xreport-output-files      Report source to output files mapping
  -Xreport-perf              Report detailed performance statistics
  -Xskip-metadata-version-check Load classes with bad metadata version anyway (incl. pre-release classes)
  -Xuse-experimental=<fq.name> Enable, but don't propagate usages of experimental API for marker annotation with the given fully qualified name

Advanced options are non-standard and may be changed or removed without any notice.
OK
