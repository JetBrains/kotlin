package

package kotlin {

    package kotlin.jvm {

        @kotlin.jvm.JvmInline public final value class IC1 {
            public constructor IC1(/*0*/ x: kotlin.Any)
            public final val x: kotlin.Any
            public final fun box(): kotlin.Unit
            public final fun box(/*0*/ x: kotlin.Any): kotlin.Unit
            public open override /*1*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
            public final fun unbox(): kotlin.Unit
            public final fun unbox(/*0*/ x: kotlin.Any): kotlin.Unit
        }

        @kotlin.jvm.JvmInline public final value class IC2 {
            public constructor IC2(/*0*/ x: kotlin.Any)
            public final val x: kotlin.Any
            public final fun box(): kotlin.Any
            public final fun box(/*0*/ x: kotlin.Any): kotlin.Unit
            public final fun equals(/*0*/ my: kotlin.Any, /*1*/ other: kotlin.Any): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public final fun hashCode(/*0*/ a: kotlin.Any): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
            public final fun unbox(): kotlin.Any
            public final fun unbox(/*0*/ x: kotlin.Any): kotlin.Unit
        }

        @kotlin.jvm.JvmInline public final value class IC3 {
            public constructor IC3(/*0*/ x: kotlin.Any)
            public final val x: kotlin.Any
            public final fun box(/*0*/ x: kotlin.Any): kotlin.Any
            public final fun equals(): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
            public final fun unbox(/*0*/ x: kotlin.Any): kotlin.Any
        }

        @kotlin.jvm.JvmInline public final value class IC4 : kotlin.jvm.WithBox {
            public constructor IC4(/*0*/ s: kotlin.String)
            public final val s: kotlin.String
            public open override /*1*/ fun box(): kotlin.String
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
        }

        @kotlin.jvm.JvmInline public final value class IC5 {
            public constructor IC5(/*0*/ i: kotlin.Int)
            public constructor IC5(/*0*/ a: kotlin.String)
            public final val a: kotlin.String
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
        }

        public final annotation class JvmInline : kotlin.Annotation {
            public constructor JvmInline()
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }

        public interface WithBox {
            public abstract fun box(): kotlin.String
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }
    }
}
