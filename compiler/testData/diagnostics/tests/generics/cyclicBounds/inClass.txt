package

public final class A1</*0*/ T : [Error type: Cyclic upper bounds], /*1*/ F : [Error type: Cyclic upper bounds]> {
    public constructor A1</*0*/ T : [Error type: Cyclic upper bounds], /*1*/ F : [Error type: Cyclic upper bounds]>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class A2</*0*/ T : F?, /*1*/ F : [Error type: Cyclic upper bounds], /*2*/ E : [Error type: Cyclic upper bounds]> {
    public constructor A2</*0*/ T : F?, /*1*/ F : [Error type: Cyclic upper bounds], /*2*/ E : [Error type: Cyclic upper bounds]>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class A3</*0*/ T : [Error type: Cyclic upper bounds], /*1*/ F : [Error type: Cyclic upper bounds]> {
    public constructor A3</*0*/ T : [Error type: Cyclic upper bounds], /*1*/ F : [Error type: Cyclic upper bounds]>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class A4</*0*/ T : F?, /*1*/ F : [Error type: Cyclic upper bounds], /*2*/ E : [Error type: Cyclic upper bounds]> {
    public constructor A4</*0*/ T : F?, /*1*/ F : [Error type: Cyclic upper bounds], /*2*/ E : [Error type: Cyclic upper bounds]>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
