FILE fqName:<root> fileName:/whenUnusedExpression.kt
  FUN name:test visibility:public modality:FINAL <> (b:kotlin.Boolean, i:kotlin.Int) returnType:kotlin.Unit
    VALUE_PARAMETER name:b index:0 type:kotlin.Boolean
    VALUE_PARAMETER name:i index:1 type:kotlin.Int
    BLOCK_BODY
      WHEN type=kotlin.Int? origin=IF
        BRANCH
          if: GET_VAR 'b: kotlin.Boolean declared in <root>.test' type=kotlin.Boolean origin=null
          then: BLOCK type=kotlin.Int? origin=WHEN
            VAR IR_TEMPORARY_VARIABLE name:tmp0_subject type:kotlin.Int [val]
              GET_VAR 'i: kotlin.Int declared in <root>.test' type=kotlin.Int origin=null
            WHEN type=kotlin.Int? origin=WHEN
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                  arg0: GET_VAR 'val tmp0_subject: kotlin.Int [val] declared in <root>.test' type=kotlin.Int origin=null
                  arg1: CONST Int type=kotlin.Int value=0
                then: CONST Int type=kotlin.Int value=1
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: CONST Null type=kotlin.Nothing? value=null
        BRANCH
          if: CONST Boolean type=kotlin.Boolean value=true
          then: CONST Null type=kotlin.Nothing? value=null
