public final class IfOrWhenSpecialCallKt {
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
    public final static @org.jetbrains.annotations.NotNull method ifTest(p0: int): Option
    public final static @org.jetbrains.annotations.NotNull method whenTest(p0: int): Option
}


public final class None {
    private final @org.jetbrains.annotations.NotNull field s: java.lang.String
    public method <init>(): void
    public method <init>(@org.jetbrains.annotations.NotNull p0: java.lang.String): void
    public synthetic method <init>(p0: java.lang.String, p1: int, p2: kotlin.jvm.internal.DefaultConstructorMarker): void
    public @org.jetbrains.annotations.NotNull method getS(): java.lang.String
}


public interface Option {
    public abstract @org.jetbrains.annotations.NotNull method getS(): java.lang.String
}


public final class Some {
    private final @org.jetbrains.annotations.NotNull field s: java.lang.String
    public method <init>(@org.jetbrains.annotations.NotNull p0: java.lang.String): void
    public @org.jetbrains.annotations.NotNull method getS(): java.lang.String
}
