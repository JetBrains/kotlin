RAW_FIR:
FILE: [ResolvedTo(RAW_FIR)] propertyGetterWithImplicitType.kt
    [ResolvedTo(RAW_FIR)] annotations container
    public? final? [ResolvedTo(RAW_FIR)] val prop: <implicit>
        public? [ResolvedTo(RAW_FIR)] get(): <implicit> { LAZY_BLOCK }

IMPORTS:
FILE: [ResolvedTo(IMPORTS)] propertyGetterWithImplicitType.kt
    [ResolvedTo(RAW_FIR)] annotations container
    public? final? [ResolvedTo(RAW_FIR)] val prop: <implicit>
        public? [ResolvedTo(RAW_FIR)] get(): <implicit> { LAZY_BLOCK }

COMPILER_REQUIRED_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] propertyGetterWithImplicitType.kt
    [ResolvedTo(RAW_FIR)] annotations container
    public? final? [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] val prop: <implicit>
        public? [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] get(): <implicit> { LAZY_BLOCK }

COMPANION_GENERATION:
FILE: [ResolvedTo(IMPORTS)] propertyGetterWithImplicitType.kt
    [ResolvedTo(RAW_FIR)] annotations container
    public? final? [ResolvedTo(COMPANION_GENERATION)] val prop: <implicit>
        public? [ResolvedTo(COMPANION_GENERATION)] get(): <implicit> { LAZY_BLOCK }

SUPER_TYPES:
FILE: [ResolvedTo(IMPORTS)] propertyGetterWithImplicitType.kt
    [ResolvedTo(RAW_FIR)] annotations container
    public? final? [ResolvedTo(SUPER_TYPES)] val prop: <implicit>
        public? [ResolvedTo(SUPER_TYPES)] get(): <implicit> { LAZY_BLOCK }

TYPES:
FILE: [ResolvedTo(IMPORTS)] propertyGetterWithImplicitType.kt
    [ResolvedTo(RAW_FIR)] annotations container
    public? final? [ResolvedTo(TYPES)] val prop: <implicit>
        public? [ResolvedTo(TYPES)] get(): <implicit> { LAZY_BLOCK }

STATUS:
FILE: [ResolvedTo(IMPORTS)] propertyGetterWithImplicitType.kt
    [ResolvedTo(RAW_FIR)] annotations container
    public final [ResolvedTo(STATUS)] val prop: <implicit>
        public [ResolvedTo(STATUS)] get(): <implicit> { LAZY_BLOCK }

EXPECT_ACTUAL_MATCHING:
FILE: [ResolvedTo(IMPORTS)] propertyGetterWithImplicitType.kt
    [ResolvedTo(RAW_FIR)] annotations container
    public final [ResolvedTo(EXPECT_ACTUAL_MATCHING)] val prop: <implicit>
        public [ResolvedTo(EXPECT_ACTUAL_MATCHING)] get(): <implicit> { LAZY_BLOCK }

ARGUMENTS_OF_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] propertyGetterWithImplicitType.kt
    [ResolvedTo(RAW_FIR)] annotations container
    public final [ResolvedTo(ARGUMENTS_OF_ANNOTATIONS)] val prop: <implicit>
        public [ResolvedTo(ARGUMENTS_OF_ANNOTATIONS)] get(): <implicit> { LAZY_BLOCK }

CONTRACTS:
FILE: [ResolvedTo(IMPORTS)] propertyGetterWithImplicitType.kt
    [ResolvedTo(RAW_FIR)] annotations container
    public final [ResolvedTo(CONTRACTS)] val prop: <implicit>
        public [ResolvedTo(CONTRACTS)] get(): <implicit> {
            ^ IntegerLiteral(42)
        }

IMPLICIT_TYPES_BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] propertyGetterWithImplicitType.kt
    [ResolvedTo(RAW_FIR)] annotations container
    public final [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] val prop: R|kotlin/Int|
        public [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] get(): R|kotlin/Int| {
            ^ Int(42)
        }

ANNOTATIONS_ARGUMENTS_MAPPING:
FILE: [ResolvedTo(IMPORTS)] propertyGetterWithImplicitType.kt
    [ResolvedTo(RAW_FIR)] annotations container
    public final [ResolvedTo(ANNOTATIONS_ARGUMENTS_MAPPING)] val prop: R|kotlin/Int|
        public [ResolvedTo(ANNOTATIONS_ARGUMENTS_MAPPING)] get(): R|kotlin/Int| {
            ^ Int(42)
        }

BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] propertyGetterWithImplicitType.kt
    [ResolvedTo(RAW_FIR)] annotations container
    public final [ResolvedTo(BODY_RESOLVE)] val prop: R|kotlin/Int|
        public [ResolvedTo(BODY_RESOLVE)] get(): R|kotlin/Int| {
            ^ Int(42)
        }

FILE RAW TO BODY:
FILE: [ResolvedTo(IMPORTS)] propertyGetterWithImplicitType.kt
    [ResolvedTo(BODY_RESOLVE)] annotations container
    public final [ResolvedTo(BODY_RESOLVE)] val prop: R|kotlin/Int|
        public [ResolvedTo(BODY_RESOLVE)] get(): R|kotlin/Int| {
            ^ Int(42)
        }
