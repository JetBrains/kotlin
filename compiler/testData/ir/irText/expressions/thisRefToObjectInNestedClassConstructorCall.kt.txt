open class Base {
  val x: Any
    field = x
    get

  constructor(x: Any) /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

}

object Host {
  class Derived1 : Base {
    constructor() /* primary */ {
      super/*Base*/(x = Host)
      /* <init>() */

    }

  }

  class Derived2 : Base {
    constructor() /* primary */ {
      super/*Base*/(x = Host)
      /* <init>() */

    }

  }

  private constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

}

