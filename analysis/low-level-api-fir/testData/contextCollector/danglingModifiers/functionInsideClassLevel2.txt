Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Implicit receiver:
            FirRegularClassSymbol public final class MyClass : R|kotlin/Any|
                Type: foo.MyClass

FILE: [ResolvedTo(IMPORTS)] functionInsideClassLevel2.kt
    public final [ResolvedTo(STATUS)] annotation class Anno : R|kotlin/Annotation| {
        public [ResolvedTo(STATUS)] constructor([ResolvedTo(STATUS)] value: R|kotlin/String|): R|foo/Anno| {
            LAZY_super<R|kotlin/Any|>
        }

        public final [ResolvedTo(STATUS)] val value: R|kotlin/String| = R|<local>/value|
            public [ResolvedTo(STATUS)] get(): R|kotlin/String|

    }
    public final [ResolvedTo(ANNOTATION_ARGUMENTS)] class MyClass : R|kotlin/Any| {
        public [ResolvedTo(BODY_RESOLVE)] constructor(): R|foo/MyClass| {
            super<R|kotlin/Any|>()
        }

        [ResolvedTo(BODY_RESOLVE)] @R|foo/Anno|[Types](value = R|foo/action|<R|kotlin/Unit|>(<L> = [ResolvedTo(BODY_RESOLVE)] action@fun <anonymous>(): R|kotlin/Unit| <inline=NoInline>  {
            local final [ResolvedTo(BODY_RESOLVE)] fun bar([ResolvedTo(BODY_RESOLVE)] i: R|kotlin/Int|, [ResolvedTo(BODY_RESOLVE)] s: R|kotlin/String|): R|kotlin/Long| {
                [ResolvedTo(BODY_RESOLVE)] lval l: R|kotlin/Long| = Long(1)
                ^bar R|<local>/l|
            }

        }
        )) <DANGLING MODIFIER: Top level declaration expected>
    }
    public final [ResolvedTo(CONTRACTS)] fun <[ResolvedTo(CONTRACTS)] T> action([ResolvedTo(CONTRACTS)] body: R|() -> T|): R|T| { LAZY_BLOCK }