/*
 * Copyright 2010-2016 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jetbrains.kotlin.js.test.semantics;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("js/js.translator/testData/inline/cases")
@TestDataPath("$PROJECT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public class InlineJsTestGenerated extends AbstractInlineJsTest {
    public void testAllFilesPresentInCases() throws Exception {
        KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("js/js.translator/testData/inline/cases"), Pattern.compile("^(.+)\\.kt$"), true);
    }

    @TestMetadata("anonymousFunction.kt")
    public void testAnonymousFunction() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/anonymousFunction.kt");
        doTest(fileName);
    }

    @TestMetadata("anonymousObjectInlineMethod.kt")
    public void testAnonymousObjectInlineMethod() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/anonymousObjectInlineMethod.kt");
        doTest(fileName);
    }

    @TestMetadata("arrayLiteralAliasing.kt")
    public void testArrayLiteralAliasing() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/arrayLiteralAliasing.kt");
        doTest(fileName);
    }

    @TestMetadata("astCopy.kt")
    public void testAstCopy() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/astCopy.kt");
        doTest(fileName);
    }

    @TestMetadata("callInlineFunctionOnTopLevel.kt")
    public void testCallInlineFunctionOnTopLevel() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/callInlineFunctionOnTopLevel.kt");
        doTest(fileName);
    }

    @TestMetadata("callInlineFunctionOnTopLevelSimple.kt")
    public void testCallInlineFunctionOnTopLevelSimple() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/callInlineFunctionOnTopLevelSimple.kt");
        doTest(fileName);
    }

    @TestMetadata("callableReference.kt")
    public void testCallableReference() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/callableReference.kt");
        doTest(fileName);
    }

    @TestMetadata("callableReferenceOfLocalInline.kt")
    public void testCallableReferenceOfLocalInline() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/callableReferenceOfLocalInline.kt");
        doTest(fileName);
    }

    @TestMetadata("classObject.kt")
    public void testClassObject() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/classObject.kt");
        doTest(fileName);
    }

    @TestMetadata("dontInlineFunctionCall.kt")
    public void testDontInlineFunctionCall() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/dontInlineFunctionCall.kt");
        doTest(fileName);
    }

    @TestMetadata("expressionBodyWithLambdaCall.kt")
    public void testExpressionBodyWithLambdaCall() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/expressionBodyWithLambdaCall.kt");
        doTest(fileName);
    }

    @TestMetadata("extension.kt")
    public void testExtension() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/extension.kt");
        doTest(fileName);
    }

    @TestMetadata("extensionWithManyArguments.kt")
    public void testExtensionWithManyArguments() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/extensionWithManyArguments.kt");
        doTest(fileName);
    }

    @TestMetadata("identityEquals.kt")
    public void testIdentityEquals() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/identityEquals.kt");
        doTest(fileName);
    }

    @TestMetadata("incrementProperty.kt")
    public void testIncrementProperty() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/incrementProperty.kt");
        doTest(fileName);
    }

    @TestMetadata("inlineCallNoInline.kt")
    public void testInlineCallNoInline() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/inlineCallNoInline.kt");
        doTest(fileName);
    }

    @TestMetadata("inlineCapturingThis.kt")
    public void testInlineCapturingThis() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/inlineCapturingThis.kt");
        doTest(fileName);
    }

    @TestMetadata("inlineChain.kt")
    public void testInlineChain() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/inlineChain.kt");
        doTest(fileName);
    }

    @TestMetadata("inlineChainWithFewStatements.kt")
    public void testInlineChainWithFewStatements() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/inlineChainWithFewStatements.kt");
        doTest(fileName);
    }

    @TestMetadata("inlineDefaultArgument.kt")
    public void testInlineDefaultArgument() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/inlineDefaultArgument.kt");
        doTest(fileName);
    }

    @TestMetadata("inlineFunctionInLambda.kt")
    public void testInlineFunctionInLambda() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/inlineFunctionInLambda.kt");
        doTest(fileName);
    }

    @TestMetadata("inlineGenericSimple.kt")
    public void testInlineGenericSimple() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/inlineGenericSimple.kt");
        doTest(fileName);
    }

    @TestMetadata("inlineIf.kt")
    public void testInlineIf() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/inlineIf.kt");
        doTest(fileName);
    }

    @TestMetadata("inlineInc.kt")
    public void testInlineInc() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/inlineInc.kt");
        doTest(fileName);
    }

    @TestMetadata("inlineIntSimple.kt")
    public void testInlineIntSimple() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/inlineIntSimple.kt");
        doTest(fileName);
    }

    @TestMetadata("inlineLambdaNoCapture.kt")
    public void testInlineLambdaNoCapture() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/inlineLambdaNoCapture.kt");
        doTest(fileName);
    }

    @TestMetadata("inlineLambdaWithCapture.kt")
    public void testInlineLambdaWithCapture() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/inlineLambdaWithCapture.kt");
        doTest(fileName);
    }

    @TestMetadata("inlineMethod.kt")
    public void testInlineMethod() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/inlineMethod.kt");
        doTest(fileName);
    }

    @TestMetadata("inlineNoReturn.kt")
    public void testInlineNoReturn() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/inlineNoReturn.kt");
        doTest(fileName);
    }

    @TestMetadata("inlineOrder.kt")
    public void testInlineOrder() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/inlineOrder.kt");
        doTest(fileName);
    }

    @TestMetadata("inlineSimpleAssignment.kt")
    public void testInlineSimpleAssignment() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/inlineSimpleAssignment.kt");
        doTest(fileName);
    }

    @TestMetadata("innerOuterThis.kt")
    public void testInnerOuterThis() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/innerOuterThis.kt");
        doTest(fileName);
    }

    @TestMetadata("iteratorOnInlineFunctionResult.kt")
    public void testIteratorOnInlineFunctionResult() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/iteratorOnInlineFunctionResult.kt");
        doTest(fileName);
    }

    @TestMetadata("jsCode.kt")
    public void testJsCode() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/jsCode.kt");
        doTest(fileName);
    }

    @TestMetadata("jsCodeVarDeclared.kt")
    public void testJsCodeVarDeclared() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/jsCodeVarDeclared.kt");
        doTest(fileName);
    }

    @TestMetadata("lambdaInLambda.kt")
    public void testLambdaInLambda() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/lambdaInLambda.kt");
        doTest(fileName);
    }

    @TestMetadata("lambdaReassignment.kt")
    public void testLambdaReassignment() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/lambdaReassignment.kt");
        doTest(fileName);
    }

    @TestMetadata("lambdaReassignmentWithCapture.kt")
    public void testLambdaReassignmentWithCapture() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/lambdaReassignmentWithCapture.kt");
        doTest(fileName);
    }

    @TestMetadata("localInlineExtensionFunction.kt")
    public void testLocalInlineExtensionFunction() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/localInlineExtensionFunction.kt");
        doTest(fileName);
    }

    @TestMetadata("localInlineFunction.kt")
    public void testLocalInlineFunction() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/localInlineFunction.kt");
        doTest(fileName);
    }

    @TestMetadata("localInlineFunctionComplex.kt")
    public void testLocalInlineFunctionComplex() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/localInlineFunctionComplex.kt");
        doTest(fileName);
    }

    @TestMetadata("localInlineFunctionDeclaredInLambda.kt")
    public void testLocalInlineFunctionDeclaredInLambda() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/localInlineFunctionDeclaredInLambda.kt");
        doTest(fileName);
    }

    @TestMetadata("localInlineFunctionNameClash.kt")
    public void testLocalInlineFunctionNameClash() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/localInlineFunctionNameClash.kt");
        doTest(fileName);
    }

    @TestMetadata("localInlineFunctionReference.kt")
    public void testLocalInlineFunctionReference() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/localInlineFunctionReference.kt");
        doTest(fileName);
    }

    @TestMetadata("metadataForPublicFunction.kt")
    public void testMetadataForPublicFunction() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/metadataForPublicFunction.kt");
        doTest(fileName);
    }

    @TestMetadata("multiDeclaration.kt")
    public void testMultiDeclaration() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/multiDeclaration.kt");
        doTest(fileName);
    }

    @TestMetadata("noInlineLambda.kt")
    public void testNoInlineLambda() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/noInlineLambda.kt");
        doTest(fileName);
    }

    @TestMetadata("params.kt")
    public void testParams() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/params.kt");
        doTest(fileName);
    }

    @TestMetadata("rootConstructor.kt")
    public void testRootConstructor() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/rootConstructor.kt");
        doTest(fileName);
    }

    @TestMetadata("safeCall.kt")
    public void testSafeCall() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/safeCall.kt");
        doTest(fileName);
    }

    @TestMetadata("severalClosures.kt")
    public void testSeveralClosures() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/severalClosures.kt");
        doTest(fileName);
    }

    @TestMetadata("severalUsage.kt")
    public void testSeveralUsage() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/severalUsage.kt");
        doTest(fileName);
    }

    @TestMetadata("simpleDouble.kt")
    public void testSimpleDouble() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/simpleDouble.kt");
        doTest(fileName);
    }

    @TestMetadata("simpleEnum.kt")
    public void testSimpleEnum() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/simpleEnum.kt");
        doTest(fileName);
    }

    @TestMetadata("simpleInt.kt")
    public void testSimpleInt() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/simpleInt.kt");
        doTest(fileName);
    }

    @TestMetadata("simpleLambda.kt")
    public void testSimpleLambda() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/simpleLambda.kt");
        doTest(fileName);
    }

    @TestMetadata("simpleObject.kt")
    public void testSimpleObject() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/simpleObject.kt");
        doTest(fileName);
    }

    @TestMetadata("simpleReturnFunctionWithResultUnused.kt")
    public void testSimpleReturnFunctionWithResultUnused() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/simpleReturnFunctionWithResultUnused.kt");
        doTest(fileName);
    }

    @TestMetadata("statementsAfterReturn.kt")
    public void testStatementsAfterReturn() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/statementsAfterReturn.kt");
        doTest(fileName);
    }

    @TestMetadata("thisImplicitlyCaptured.kt")
    public void testThisImplicitlyCaptured() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/thisImplicitlyCaptured.kt");
        doTest(fileName);
    }

    @TestMetadata("thisLiteralAliasing.kt")
    public void testThisLiteralAliasing() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/thisLiteralAliasing.kt");
        doTest(fileName);
    }

    @TestMetadata("vararg.kt")
    public void testVararg() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("js/js.translator/testData/inline/cases/vararg.kt");
        doTest(fileName);
    }
}
