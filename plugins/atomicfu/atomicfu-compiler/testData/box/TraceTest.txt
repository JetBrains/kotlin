@kotlin.Metadata
final enum class TraceTest$Status {
    // source: 'TraceTest.kt'
    private synthetic final static field $ENTRIES: kotlin.enums.EnumEntries
    private synthetic final static field $VALUES: TraceTest$Status[]
    public final enum static field END: TraceTest$Status
    public final enum static field START: TraceTest$Status
    private synthetic final static method $entries(): TraceTest$Status[]
    private synthetic final static method $values(): TraceTest$Status[]
    static method <clinit>(): void
    private method <init>(p0: java.lang.String, p1: int): void
    public static @org.jetbrains.annotations.NotNull method getEntries(): kotlin.enums.EnumEntries
    public static method valueOf(p0: java.lang.String): TraceTest$Status
    public static method values(): TraceTest$Status[]
    private final inner class TraceTest$Status
}

@kotlin.Metadata
public final class TraceTest {
    // source: 'TraceTest.kt'
    private final static @org.jetbrains.annotations.NotNull field a$FU: java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    private final static @org.jetbrains.annotations.NotNull field a1$FU: java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    private volatile @kotlin.jvm.Volatile field a1: int
    private final static @org.jetbrains.annotations.NotNull field a2$FU: java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    private volatile @kotlin.jvm.Volatile field a2: int
    private final static @org.jetbrains.annotations.NotNull field a3$FU: java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    private volatile @kotlin.jvm.Volatile field a3: int
    private volatile @kotlin.jvm.Volatile field a: int
    private final static @org.jetbrains.annotations.NotNull field s$FU: java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    private volatile @kotlin.jvm.Volatile field s: int
    static method <clinit>(): void
    public method <init>(): void
    public final method test(): void
    public final method testDefaultTrace(): void
    public final method testMultipleAppend(): void
    public final method testNamedTrace(): void
    public final method testTraceInBlock(): void
    public final method testTraceWithFormat(): void
    public final method testTraceWithSize(): void
    private final inner class TraceTest$Status
}

@kotlin.Metadata
public final class TraceTestKt {
    // source: 'TraceTest.kt'
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
}
