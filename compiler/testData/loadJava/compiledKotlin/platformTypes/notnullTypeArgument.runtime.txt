package test

public final class C : java.util.ArrayList<kotlin.String> {
    /*primary*/ public constructor C()
    invisible_fake final override /*1*/ /*fake_override*/ var elementData: kotlin.Array<(out) kotlin.Any!>!
    protected/*protected and package*/ final override /*1*/ /*fake_override*/ var modCount: kotlin.Int
    invisible_fake final override /*1*/ /*fake_override*/ var size: kotlin.Int
    public open override /*1*/ /*fake_override*/ val size: kotlin.Int
        public open override /*1*/ /*fake_override*/ fun `<get-size>`(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun add(/*0*/ kotlin.Int, /*1*/ kotlin.String): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun add(/*0*/ kotlin.String): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun addAll(/*0*/ kotlin.Int, /*1*/ kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun addAll(/*0*/ kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
    invisible_fake open override /*1*/ /*fake_override*/ fun batchRemove(/*0*/ kotlin.collections.(Mutable)Collection<*>!, /*1*/ kotlin.Boolean): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun clear(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
    public open override /*1*/ /*fake_override*/ fun contains(/*0*/ kotlin.String): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun containsAll(/*0*/ kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
    invisible_fake open override /*1*/ /*fake_override*/ fun elementData(/*0*/ kotlin.Int): kotlin.String!
    public open override /*1*/ /*fake_override*/ fun ensureCapacity(/*0*/ kotlin.Int): kotlin.Unit
    invisible_fake open override /*1*/ /*fake_override*/ fun ensureCapacityInternal(/*0*/ kotlin.Int): kotlin.Unit
    invisible_fake open override /*1*/ /*fake_override*/ fun ensureExplicitCapacity(/*0*/ kotlin.Int): kotlin.Unit
    invisible_fake open override /*1*/ /*fake_override*/ fun fastRemove(/*0*/ kotlin.Int): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun forEach(/*0*/ java.util.function.Consumer<in kotlin.String!>!): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun get(/*0*/ kotlin.Int): kotlin.String
    invisible_fake open override /*1*/ /*fake_override*/ fun grow(/*0*/ kotlin.Int): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun indexOf(/*0*/ kotlin.String): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun isEmpty(): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun iterator(): kotlin.collections.MutableIterator<kotlin.String>
    public open override /*1*/ /*fake_override*/ fun lastIndexOf(/*0*/ kotlin.String): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun listIterator(): kotlin.collections.MutableListIterator<kotlin.String>
    public open override /*1*/ /*fake_override*/ fun listIterator(/*0*/ kotlin.Int): kotlin.collections.MutableListIterator<kotlin.String>
    invisible_fake open override /*1*/ /*fake_override*/ fun outOfBoundsMsg(/*0*/ kotlin.Int): kotlin.String!
    public open override /*1*/ /*fake_override*/ fun parallelStream(): java.util.stream.Stream<kotlin.String>
    invisible_fake open override /*1*/ /*fake_override*/ fun rangeCheck(/*0*/ kotlin.Int): kotlin.Unit
    invisible_fake open override /*1*/ /*fake_override*/ fun rangeCheckForAdd(/*0*/ kotlin.Int): kotlin.Unit
    invisible_fake open override /*1*/ /*fake_override*/ fun readObject(/*0*/ java.io.ObjectInputStream!): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun remove(/*0*/ kotlin.String): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun removeAll(/*0*/ kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun removeAt(/*0*/ kotlin.Int): kotlin.String
    public open override /*1*/ /*fake_override*/ fun removeIf(/*0*/ java.util.function.Predicate<in kotlin.String>): kotlin.Boolean
    protected/*protected and package*/ open override /*1*/ /*fake_override*/ fun removeRange(/*0*/ kotlin.Int, /*1*/ kotlin.Int): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun replaceAll(/*0*/ java.util.function.UnaryOperator<kotlin.String>): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun retainAll(/*0*/ kotlin.collections.Collection<kotlin.String>): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun set(/*0*/ kotlin.Int, /*1*/ kotlin.String): kotlin.String
    public open override /*1*/ /*fake_override*/ /*isHiddenForResolutionEverywhereBesideSupercalls*/ fun sort(/*0*/ java.util.Comparator<in kotlin.String!>!): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun spliterator(): java.util.Spliterator<kotlin.String!>
    public open override /*1*/ /*fake_override*/ fun stream(): java.util.stream.Stream<kotlin.String>
    public open override /*1*/ /*fake_override*/ fun subList(/*0*/ kotlin.Int, /*1*/ kotlin.Int): kotlin.collections.MutableList<kotlin.String>
    public open override /*1*/ /*fake_override*/ fun toArray(): kotlin.Array<(out) kotlin.Any!>!
    public open override /*1*/ /*fake_override*/ fun </*0*/ T : kotlin.Any!> toArray(/*0*/ kotlin.Array<(out) T!>!): kotlin.Array<(out) T!>!
    public open override /*1*/ /*fake_override*/ fun trimToSize(): kotlin.Unit
    invisible_fake open override /*1*/ /*fake_override*/ fun writeObject(/*0*/ java.io.ObjectOutputStream!): kotlin.Unit
}
