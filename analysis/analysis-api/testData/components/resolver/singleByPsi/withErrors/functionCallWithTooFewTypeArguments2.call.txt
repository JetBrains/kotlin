KtCallExpression(61,99): 'generic<String, String>("a", "b", "c")'
  KaErrorCallInfo:
    candidateCalls = [
      KaSimpleFunctionCall:
        argumentMapping = {
          "a" -> (KaVariableSignature:
            name = a
            receiverType = null
            returnType = kotlin.String
            symbol = a: A
            contextParameters = []
            callableId = null),
          "b" -> (KaVariableSignature:
            name = b
            receiverType = null
            returnType = kotlin.String
            symbol = b: B
            contextParameters = []
            callableId = null),
          "c" -> (KaVariableSignature:
            name = c
            receiverType = null
            returnType = kotlin.String
            symbol = c: C
            contextParameters = []
            callableId = null)
        }
        isImplicitInvoke = false
        partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
          contextArguments = []
          dispatchReceiver = null
          extensionReceiver = null
          signature = KaFunctionSignature:
            receiverType = null
            returnType = kotlin.Unit
            symbol = /generic(a: A, b: B, c: C): kotlin.Unit
            valueParameters = [
              KaVariableSignature:
                name = a
                receiverType = null
                returnType = kotlin.String
                symbol = a: A
                contextParameters = []
                callableId = null,
              KaVariableSignature:
                name = b
                receiverType = null
                returnType = kotlin.String
                symbol = b: B
                contextParameters = []
                callableId = null,
              KaVariableSignature:
                name = c
                receiverType = null
                returnType = kotlin.String
                symbol = c: C
                contextParameters = []
                callableId = null
            ]
            contextParameters = []
            callableId = /generic
        typeArgumentsMapping = {
          A -> (kotlin.String),
          B -> (kotlin.String),
          C -> (kotlin.String)
        }
    ]
    diagnostic = ERROR<WRONG_NUMBER_OF_TYPE_ARGUMENTS: 3 type arguments expected for fun <A, B, C> generic(a: A, b: B, c: C): Unit.>