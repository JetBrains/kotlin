package

public /*synthesized*/ fun JavaInterface(/*0*/ function: (s: kotlin.String!, runnable1: java.lang.Runnable!, runnable2: java.lang.Runnable!) -> kotlin.Unit): JavaInterface
public fun foo(/*0*/ javaInterface: JavaInterface): kotlin.Unit

public interface JavaInterface {
    public abstract fun doIt(/*0*/ s: kotlin.String!, /*1*/ runnable1: java.lang.Runnable!, /*2*/ runnable2: java.lang.Runnable!): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
