// CHECK:
//   Mangled name: A
//   Public signature: /A|null[0]
abstract class A : Java1, Java2 {
  // CHECK:
  //   Mangled name: A#<init>(){}
  //   Public signature: /A.<init>|-5645683436151566731[0]
  //   Public signature debug description: <init>(){}
  constructor() /* primary */

  // CHECK JVM_IR:
  //   Mangled name: A#get(kotlin.Int?){}kotlin.Int?
  //   Public signature: /A.get|7040689195092882450[0]
  //   Public signature debug description: get(kotlin.Int?){}kotlin.Int?
  abstract /* fake */ override operator fun get(i: Int?): Int?

  // CHECK JVM_IR:
  //   Mangled name: A#get(kotlin.Any?){}kotlin.Any?
  //   Public signature: /A.get|8710632129153264173[0]
  //   Public signature debug description: get(kotlin.Any?){}kotlin.Any?
  abstract /* fake */ override operator fun get(i: Any?): Any?

  // CHECK:
  //   Mangled name: A#invoke(){}
  //   Public signature: /A.invoke|-4663091332620260873[0]
  //   Public signature debug description: invoke(){}
  abstract /* fake */ override operator fun invoke(): Unit

  // CHECK JVM_IR:
  //   Mangled name: A#plus(kotlin.Int?){}Java1?
  //   Public signature: /A.plus|-7032856236956634841[0]
  //   Public signature debug description: plus(kotlin.Int?){}Java1?
  abstract /* fake */ override operator fun plus(i: Int?): Java1?

  // CHECK JVM_IR:
  //   Mangled name: A#plus(kotlin.Any?){}Java2?
  //   Public signature: /A.plus|-7463288905288082942[0]
  //   Public signature debug description: plus(kotlin.Any?){}Java2?
  abstract /* fake */ override operator fun plus(i: Any?): Java2?

}

// CHECK:
//   Mangled name: B
//   Public signature: /B|null[0]
class B : Java1, Java2 {
  // CHECK:
  //   Mangled name: B#<init>(){}
  //   Public signature: /B.<init>|-5645683436151566731[0]
  //   Public signature debug description: <init>(){}
  constructor() /* primary */

  // CHECK JVM_IR:
  //   Mangled name: B#get(kotlin.Any?){}kotlin.Any
  //   Public signature: /B.get|-2113546338636552698[0]
  //   Public signature debug description: get(kotlin.Any?){}kotlin.Any
  override operator fun get(i: Any?): Any

  // CHECK JVM_IR:
  //   Mangled name: B#get(kotlin.Int?){}kotlin.Int
  //   Public signature: /B.get|6449384512088502848[0]
  //   Public signature debug description: get(kotlin.Int?){}kotlin.Int
  override operator fun get(i: Int?): Int

  // CHECK:
  //   Mangled name: B#invoke(){}
  //   Public signature: /B.invoke|-4663091332620260873[0]
  //   Public signature debug description: invoke(){}
  override operator fun invoke(): Unit

  // CHECK JVM_IR:
  //   Mangled name: B#plus(kotlin.Any?){}Java2
  //   Public signature: /B.plus|7623942856736290743[0]
  //   Public signature debug description: plus(kotlin.Any?){}Java2
  override operator fun plus(i: Any?): Java2

  // CHECK JVM_IR:
  //   Mangled name: B#plus(kotlin.Int?){}Java1
  //   Public signature: /B.plus|5151435286051456288[0]
  //   Public signature debug description: plus(kotlin.Int?){}Java1
  override operator fun plus(i: Int?): Java1

}

// CHECK:
//   Mangled name: C
//   Public signature: /C|null[0]
abstract class C : Java1, KotlinInterface {
  // CHECK:
  //   Mangled name: C#<init>(){}
  //   Public signature: /C.<init>|-5645683436151566731[0]
  //   Public signature debug description: <init>(){}
  constructor() /* primary */

  // CHECK JVM_IR:
  //   Mangled name: C#get(kotlin.Int?){}kotlin.Int
  //   Public signature: /C.get|6449384512088502848[0]
  //   Public signature debug description: get(kotlin.Int?){}kotlin.Int
  abstract /* fake */ override operator fun get(i: Int?): Int

  // CHECK:
  //   Mangled name: C#invoke(){}
  //   Public signature: /C.invoke|-4663091332620260873[0]
  //   Public signature debug description: invoke(){}
  abstract /* fake */ override operator fun invoke(): Unit

  // CHECK JVM_IR:
  //   Mangled name: C#plus(kotlin.Int?){}Java1?
  //   Public signature: /C.plus|-7032856236956634841[0]
  //   Public signature debug description: plus(kotlin.Int?){}Java1?
  abstract /* fake */ override operator fun plus(i: Int?): Java1?

}

// CHECK:
//   Mangled name: D
//   Public signature: /D|null[0]
class D : Java1, KotlinInterface {
  // CHECK:
  //   Mangled name: D#<init>(){}
  //   Public signature: /D.<init>|-5645683436151566731[0]
  //   Public signature debug description: <init>(){}
  constructor() /* primary */

  // CHECK JVM_IR:
  //   Mangled name: D#get(kotlin.Int?){}kotlin.Int
  //   Public signature: /D.get|6449384512088502848[0]
  //   Public signature debug description: get(kotlin.Int?){}kotlin.Int
  override operator fun get(i: Int?): Int

  // CHECK:
  //   Mangled name: D#invoke(){}
  //   Public signature: /D.invoke|-4663091332620260873[0]
  //   Public signature debug description: invoke(){}
  override operator fun invoke(): Unit

  // CHECK JVM_IR:
  //   Mangled name: D#plus(kotlin.Int?){}Java1
  //   Public signature: /D.plus|5151435286051456288[0]
  //   Public signature debug description: plus(kotlin.Int?){}Java1
  override operator fun plus(i: Int?): Java1

}

// CHECK:
//   Mangled name: KotlinInterface
//   Public signature: /KotlinInterface|null[0]
interface KotlinInterface {
  // CHECK JVM_IR:
  //   Mangled name: KotlinInterface#get(kotlin.Int?){}kotlin.Int
  //   Public signature: /KotlinInterface.get|6449384512088502848[0]
  //   Public signature debug description: get(kotlin.Int?){}kotlin.Int
  abstract operator fun get(i: Int?): Int

  // CHECK:
  //   Mangled name: KotlinInterface#invoke(){}
  //   Public signature: /KotlinInterface.invoke|-4663091332620260873[0]
  //   Public signature debug description: invoke(){}
  abstract operator fun invoke(): Unit

}

// CHECK:
//   Mangled name: #test(A;B;C;D){}
//   Public signature: /test|7656439746344069424[0]
//   Public signature debug description: test(A;B;C;D){}
fun test(a: A, b: B, c: C, d: D): Unit
