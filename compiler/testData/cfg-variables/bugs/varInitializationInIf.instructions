== foo ==
fun foo() {
    val b: Boolean
    if (1 < 2) {
        b = false
    }
    else {
        b = true
    }
    use(b)
}
---------------------
L0:
  1 <START>                                                                       INIT: in: {} out: {}            USE: in: {} out: {}
  2 mark({ val b: Boolean if (1 < 2) { b = false } else { b = true } use(b) })
    v(val b: Boolean)                                                             INIT: in: {} out: {b=D}
    mark(if (1 < 2) { b = false } else { b = true })                              INIT: in: {b=D} out: {b=D}
    mark(1 < 2)
    r(1)
    r(2)
    call(<, compareTo)
    jf(L2)
  3 mark({ b = false })
    r(false)                                                                                                      USE: in: {b=WRITTEN_AFTER_READ} out: {b=WRITTEN_AFTER_READ}
    w(b)                                                                          INIT: in: {b=D} out: {b=ID}     USE: in: {b=READ} out: {b=WRITTEN_AFTER_READ}
  2 jmp(L3)                                                                       INIT: in: {b=ID} out: {b=ID}    USE: in: {b=READ} out: {b=READ}
L2:
  3 mark({ b = true })                                                            INIT: in: {b=D} out: {b=D}
    r(true)                                                                                                       USE: in: {b=WRITTEN_AFTER_READ} out: {b=WRITTEN_AFTER_READ}
    w(b)                                                                          INIT: in: {b=D} out: {b=ID}     USE: in: {b=READ} out: {b=WRITTEN_AFTER_READ}
L3:
  2 mark(use(b))                                                                  INIT: in: {b=ID} out: {b=ID}
    error(use, No resolved call)                                                                                  USE: in: {b=READ} out: {b=READ}
    r(b)                                                                                                          USE: in: {} out: {b=READ}
    error(use, No resolved call)
L1:
  1 <END>                                                                         INIT: in: {} out: {}
error:
    <ERROR>
sink:
    <SINK>                                                                                                        USE: in: {} out: {}
=====================
