@kotlin.Metadata
public final class DelegatedProperties$A {
    // source: 'DelegatedPropertiesTest.kt'
    private final @org.jetbrains.annotations.NotNull field b: DelegatedProperties$B
    public method <init>(@org.jetbrains.annotations.NotNull p0: DelegatedProperties$B): void
    public final @org.jetbrains.annotations.NotNull method getB(): DelegatedProperties$B
    public final inner class DelegatedProperties$A
    public final inner class DelegatedProperties$B
}

@kotlin.Metadata
public final class DelegatedProperties$B {
    // source: 'DelegatedPropertiesTest.kt'
    private final field n: int
    public method <init>(p0: int): void
    public final method getN(): int
    public final inner class DelegatedProperties$B
}

@kotlin.Metadata
public final class DelegatedProperties$D {
    // source: 'DelegatedPropertiesTest.kt'
    private volatile @kotlin.jvm.Volatile @org.jetbrains.annotations.Nullable field c: java.lang.Object
    synthetic final field this$0: DelegatedProperties
    public method <init>(p0: DelegatedProperties): void
    public final @org.jetbrains.annotations.NotNull method getC(): java.lang.String
    public final method setC(@org.jetbrains.annotations.NotNull p0: java.lang.String): void
    public final inner class DelegatedProperties$D
}

@kotlin.Metadata
public final class DelegatedProperties {
    // source: 'DelegatedPropertiesTest.kt'
    private final static @org.jetbrains.annotations.NotNull field _a$FU: java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    private volatile @kotlin.jvm.Volatile field _a: int
    private final static @org.jetbrains.annotations.NotNull field _b$FU: java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    private volatile @kotlin.jvm.Volatile field _b: int
    private final static @org.jetbrains.annotations.NotNull field _l$FU: java.util.concurrent.atomic.AtomicLongFieldUpdater
    private volatile @kotlin.jvm.Volatile field _l: long
    private final static @org.jetbrains.annotations.NotNull field _ref$FU: java.util.concurrent.atomic.AtomicReferenceFieldUpdater
    private volatile @kotlin.jvm.Volatile @org.jetbrains.annotations.Nullable field _ref: java.lang.Object
    private volatile @kotlin.jvm.Volatile field vBoolean: int
    private volatile @kotlin.jvm.Volatile field vInt: int
    private volatile @kotlin.jvm.Volatile field vLong: int
    private volatile @kotlin.jvm.Volatile @org.jetbrains.annotations.Nullable field vRef: java.lang.Object
    static method <clinit>(): void
    public method <init>(): void
    public final method getA(): int
    private final method getB(): boolean
    private final method getL(): long
    private final method getPrivateA(): int
    private final method getRef(): DelegatedProperties$A
    private final method getVBoolean(): boolean
    private final method getVInt(): int
    private final method getVLong(): int
    private final method getVRef(): DelegatedProperties$A
    public final method setA(p0: int): void
    private final method setB(p0: boolean): void
    private final method setL(p0: long): void
    private final method setPrivateA(p0: int): void
    private final method setRef(p0: DelegatedProperties$A): void
    private final method setVBoolean(p0: boolean): void
    private final method setVInt(p0: int): void
    private final method setVLong(p0: int): void
    private final method setVRef(p0: DelegatedProperties$A): void
    public final method test(): void
    public final method testDelegatedAtomicBoolean(): void
    public final method testDelegatedAtomicInt(): void
    public final method testDelegatedAtomicLong(): void
    public final method testDelegatedAtomicRef(): void
    public final method testDelegatedVariablesFlow(): void
    public final method testScopedVolatileProperties(): void
    public final method testVolatileBoolean(): void
    public final method testVolatileInt(): void
    public final method testVolatileLong(): void
    public final method testVolatileRef(): void
    public final inner class DelegatedProperties$A
    public final inner class DelegatedProperties$B
    public final inner class DelegatedProperties$D
}

@kotlin.Metadata
public final class DelegatedPropertiesTestKt {
    // source: 'DelegatedPropertiesTest.kt'
    public final static @org.jetbrains.annotations.NotNull field _topLevelInt$DelegatedPropertiesTest$VolatileWrapper: _topLevelInt$DelegatedPropertiesTest$VolatileWrapper
    private volatile static @kotlin.jvm.Volatile field topLevelVolatile: int
    static method <clinit>(): void
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
    public final static method getTopLevelInt(): int
    private final static method getTopLevelVolatile(): int
    public final static method setTopLevelInt(p0: int): void
    private final static method setTopLevelVolatile(p0: int): void
    public final static method testTopLevelDelegatedProperties(): void
    public final static method testTopLevelVolatileProperties(): void
}

@kotlin.Metadata
public final class _topLevelInt$DelegatedPropertiesTest$VolatileWrapper {
    // source: 'DelegatedPropertiesTest.kt'
    private final static @org.jetbrains.annotations.NotNull field _topLevelInt$FU: java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    private volatile @kotlin.jvm.Volatile field _topLevelInt: int
    static method <clinit>(): void
    public method <init>(): void
    public synthetic final static method access$get_topLevelInt$FU$p(): java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    public synthetic final static method access$get_topLevelInt$p(p0: _topLevelInt$DelegatedPropertiesTest$VolatileWrapper): int
    public synthetic final static method access$set_topLevelInt$p(p0: _topLevelInt$DelegatedPropertiesTest$VolatileWrapper, p1: int): void
}
