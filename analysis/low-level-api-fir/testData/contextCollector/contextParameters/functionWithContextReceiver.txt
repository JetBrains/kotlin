Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Scope: FirMemberTypeParameterScope
            Classifiers:
                FirTypeParameterSymbol T1
    Element 7
        Implicit receiver:
            FirRegularClassSymbol context(R|A|)
            public final class TopLevel<T1> : R|kotlin/Any|
                Type: TopLevel<T1>
    Element 8
        Context receivers:
            FirValueParameterSymbol R|A|
                Type: A
                Label: A

FILE: [ResolvedTo(IMPORTS)] functionWithContextReceiver.kt
    public final? [ResolvedTo(RAW_FIR)] class A : R|kotlin/Any| {
        public? [ResolvedTo(RAW_FIR)] constructor(): R|A| {
            LAZY_super<R|kotlin/Any|>
        }

    }
    public final? [ResolvedTo(RAW_FIR)] class B : R|kotlin/Any| {
        public? [ResolvedTo(RAW_FIR)] constructor(): R|B| {
            LAZY_super<R|kotlin/Any|>
        }

    }
    public final? [ResolvedTo(RAW_FIR)] class C : R|kotlin/Any| {
        public? [ResolvedTo(RAW_FIR)] constructor(): R|C| {
            LAZY_super<R|kotlin/Any|>
        }

    }
    context([ResolvedTo(STATUS)] R|A|)
    public final [ResolvedTo(STATUS)] class TopLevel<[ResolvedTo(STATUS)] T1> : R|kotlin/Any| {
        context([ResolvedTo(RAW_FIR)] A)
        public? [ResolvedTo(RAW_FIR)] constructor<[ResolvedTo(STATUS)] T1>(): R|TopLevel<T1>| {
            LAZY_super<R|kotlin/Any|>
        }

        context([ResolvedTo(RAW_FIR)] B)
        public? final? [ResolvedTo(RAW_FIR)] fun <[ResolvedTo(RAW_FIR)] T2> [ResolvedTo(RAW_FIR)] C.foo([ResolvedTo(RAW_FIR)] param: Int, [ResolvedTo(RAW_FIR)] param2: String): R|kotlin/Unit| { LAZY_BLOCK }

    }
