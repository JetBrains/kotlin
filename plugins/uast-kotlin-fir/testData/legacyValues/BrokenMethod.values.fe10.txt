UFile (package = ) [public final class BrokenMethodKt {...]
    UClass (name = BrokenMethodKt) [public final class BrokenMethodKt {...}]
        UMethod (name = main) [public static final fun main(@org.jetbrains.annotations.NotNull args: java.lang.String[]) : void {...}]
            UParameter (name = args) [@org.jetbrains.annotations.NotNull var args: java.lang.String[]]
                UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
            UBlockExpression [{...}] = Undetermined
                UDeclarationsExpression [public static final class TestUsed {...}] = Undetermined
                    UClass (name = TestUsed) [public static final class TestUsed {...}]
                        UField (name = parameter) [@org.jetbrains.annotations.NotNull private final var parameter: java.lang.CharSequence]
                            UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
                        UMethod (name = getParameter) [public final fun getParameter() : java.lang.CharSequence = UastEmptyExpression]
                        UMethod (name = TestUsed) [public fun TestUsed(@org.jetbrains.annotations.NotNull parameter: java.lang.CharSequence) = UastEmptyExpression]
                            UParameter (name = parameter) [@org.jetbrains.annotations.NotNull var parameter: java.lang.CharSequence]
                                UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
                        UMethod (name = component1) [public final fun component1() : java.lang.CharSequence = UastEmptyExpression]
                        UMethod (name = copy) [public final fun copy(@org.jetbrains.annotations.NotNull parameter: java.lang.CharSequence) : TestUsed = UastEmptyExpression]
                            UParameter (name = parameter) [@org.jetbrains.annotations.NotNull var parameter: java.lang.CharSequence]
                                UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
                        UMethod (name = toString) [public fun toString() : java.lang.String = UastEmptyExpression]
                        UMethod (name = hashCode) [public fun hashCode() : int = UastEmptyExpression]
                        UMethod (name = equals) [public fun equals(@org.jetbrains.annotations.Nullable other: java.lang.Object) : boolean = UastEmptyExpression]
                            UParameter (name = other) [@org.jetbrains.annotations.Nullable var other: java.lang.Object]
                                UAnnotation (fqName = org.jetbrains.annotations.Nullable) [@org.jetbrains.annotations.Nullable]
                        UClass (name = Used) [private static final class Used {...}]
                            UField (name = Companion) [@null public static final var Companion: Companion]
                                UAnnotation (fqName = null) [@null]
                            UField (name = parameter) [@org.jetbrains.annotations.NotNull private final var parameter: java.lang.Object]
                                UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
                            UMethod (name = getParameter) [public final fun getParameter() : java.lang.Object = UastEmptyExpression]
                            UMethod (name = Used) [public fun Used(@org.jetbrains.annotations.NotNull parameter: java.lang.Object) = UastEmptyExpression]
                                UParameter (name = parameter) [@org.jetbrains.annotations.NotNull var parameter: java.lang.Object]
                                    UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
                            UMethod (name = component1) [public final fun component1() : java.lang.Object = UastEmptyExpression]
                            UMethod (name = copy) [public final fun copy(@org.jetbrains.annotations.NotNull parameter: java.lang.Object) : Used = UastEmptyExpression]
                                UParameter (name = parameter) [@org.jetbrains.annotations.NotNull var parameter: java.lang.Object]
                                    UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
                            UMethod (name = toString) [public fun toString() : java.lang.String = UastEmptyExpression]
                            UMethod (name = hashCode) [public fun hashCode() : int = UastEmptyExpression]
                            UMethod (name = equals) [public fun equals(@org.jetbrains.annotations.Nullable other: java.lang.Object) : boolean = UastEmptyExpression]
                                UParameter (name = other) [@org.jetbrains.annotations.Nullable var other: java.lang.Object]
                                    UAnnotation (fqName = org.jetbrains.annotations.Nullable) [@org.jetbrains.annotations.Nullable]
                            UClass (name = Companion) [public static final class Companion {...}]
                                UMethod (name = doStuff1) [public final fun doStuff1(@org.jetbrains.annotations.NotNull $this$doStuff1: java.lang.Object) : Used {...}]
                                    UParameter (name = $this$doStuff1) [@org.jetbrains.annotations.NotNull var $this$doStuff1: java.lang.Object]
                                        UAnnotation (fqName = org.jetbrains.annotations.NotNull) [@org.jetbrains.annotations.NotNull]
                                    UBlockExpression [{...}] = Nothing
                                        UReturnExpression [return <init>(this)] = Nothing
                                            UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 1)) [<init>(this)] = external <init>(this)(Undetermined)
                                                UIdentifier (Identifier (Used)) [UIdentifier (Identifier (Used))]
                                                USimpleNameReferenceExpression (identifier = <init>, resolvesTo = PsiClass: Used) [<init>] = external <init>(this)(Undetermined)
                                                UThisExpression (label = null) [this] = Undetermined
                                UMethod (name = Companion) [private fun Companion() = UastEmptyExpression]
