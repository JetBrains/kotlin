FILE: enums.kt
    public? final? enum class Order : R|kotlin/Enum<Order>| {
        private constructor(): R|Order| {
            super<R|kotlin/Enum<Order>|>()
        }

        public final static enum entry FIRST: R|Order|
        public final static enum entry SECOND: R|Order|
        public final static enum entry THIRD: R|Order|
        public final static fun values(): R|kotlin/Array<Order>| {
        }

        public final static fun valueOf(value: R|kotlin/String|): R|Order| {
        }

    }
    public? final? enum class Planet : R|kotlin/Enum<Planet>| {
        public? constructor(m: Double, r: Double): R|Planet| {
            super<R|kotlin/Enum<Planet>|>()
        }

        public? final? val m: Double = R|<local>/m|
            public? get(): Double

        internal final? val r: Double = R|<local>/r|
            internal get(): Double

        public final static enum entry MERCURY: R|Planet| = object : R|Planet| {
            public? constructor(): R|anonymous| {
                super<R|Planet|>(Double(1.0), Double(2.0))
            }

            public? open? override fun sayHello(): R|kotlin/Unit| {
                println#(String(Hello!!!))
            }

        }

        public final static enum entry VENERA: R|Planet| = object : R|Planet| {
            public? constructor(): R|anonymous| {
                super<R|Planet|>(Double(3.0), Double(4.0))
            }

            public? open? override fun sayHello(): R|kotlin/Unit| {
                println#(String(Ola!!!))
            }

        }

        public final static enum entry EARTH: R|Planet| = object : R|Planet| {
            public? constructor(): R|anonymous| {
                super<R|Planet|>(Double(5.0), Double(6.0))
            }

            public? open? override fun sayHello(): R|kotlin/Unit| {
                println#(String(Privet!!!))
            }

        }

        public? final? val g: Double = G#.times#(m#).div#(r#.times#(r#))
            public? get(): Double

        public? abstract fun sayHello(): R|kotlin/Unit|

        public? final? companion object Companion : R|kotlin/Any| {
            private constructor(): R|Planet.Companion| {
                super<R|kotlin/Any|>()
            }

            public? final? const val G: <implicit> = Double(6.67E-11)
                public? get(): <implicit>

        }

        public final static fun values(): R|kotlin/Array<Planet>| {
        }

        public final static fun valueOf(value: R|kotlin/String|): R|Planet| {
        }

    }
    public? final? enum class PseudoInsn : R|kotlin/Enum<PseudoInsn>| {
        public? constructor(signature: String = String(()V)): R|PseudoInsn| {
            super<R|kotlin/Enum<PseudoInsn>|>()
        }

        public? final? val signature: String = R|<local>/signature|
            public? get(): String

        public final static enum entry FIX_STACK_BEFORE_JUMP: R|PseudoInsn| = object : R|PseudoInsn| {
            public? constructor(): R|anonymous| {
                super<R|PseudoInsn|>()
            }

        }

        public final static enum entry FAKE_ALWAYS_TRUE_IFEQ: R|PseudoInsn| = object : R|PseudoInsn| {
            public? constructor(): R|anonymous| {
                super<R|PseudoInsn|>(String(()I))
            }

        }

        public final static enum entry FAKE_ALWAYS_FALSE_IFEQ: R|PseudoInsn| = object : R|PseudoInsn| {
            public? constructor(): R|anonymous| {
                super<R|PseudoInsn|>(String(()I))
            }

        }

        public final static enum entry SAVE_STACK_BEFORE_TRY: R|PseudoInsn| = object : R|PseudoInsn| {
            public? constructor(): R|anonymous| {
                super<R|PseudoInsn|>()
            }

        }

        public final static enum entry RESTORE_STACK_IN_TRY_CATCH: R|PseudoInsn| = object : R|PseudoInsn| {
            public? constructor(): R|anonymous| {
                super<R|PseudoInsn|>()
            }

        }

        public final static enum entry STORE_NOT_NULL: R|PseudoInsn| = object : R|PseudoInsn| {
            public? constructor(): R|anonymous| {
                super<R|PseudoInsn|>()
            }

        }

        public final static enum entry AS_NOT_NULL: R|PseudoInsn| = object : R|PseudoInsn| {
            public? constructor(): R|anonymous| {
                super<R|PseudoInsn|>(String((Ljava/lang/Object;)Ljava/lang/Object;))
            }

        }

        public? final? fun emit(): R|kotlin/Unit| {
        }

        public final static fun values(): R|kotlin/Array<PseudoInsn>| {
        }

        public final static fun valueOf(value: R|kotlin/String|): R|PseudoInsn| {
        }

    }
