== UnitIncDec ==
class UnitIncDec() {
    fun inc() : Unit {}
    fun dec() : Unit {}
}
---------------------
=====================
== inc ==
fun inc() : Unit {}
---------------------
=====================
== dec ==
fun dec() : Unit {}
---------------------
=====================
== testUnitIncDec ==
fun testUnitIncDec() {
    var x = UnitIncDec()
    x = <warning>x<error>++</error></warning>
}
---------------------
UnitIncDec()                                                         <v0>: UnitIncDec   NEW: call(UnitIncDec(), <init>) -> <v0>
<warning>                                                            <v1>: *            NEW: magic[UNRESOLVED_CALL](<warning>) -> <v1>
<warning>x<                                                          <v2>: *            NEW: magic[UNRESOLVED_CALL](<warning>x<|<v1>) -> <v2>
>++                                                                  !<v3>: *
<warning>x<error>++                                                  <v4>: *            NEW: magic[UNRESOLVED_CALL](<warning>x<error>++|<v2>, !<v3>) -> <v4>
/error>                                                              <v5>: *            NEW: magic[UNRESOLVED_CALL](/error>) -> <v5>
<warning>x<error>++</error>                                          <v6>: *            NEW: magic[UNRESOLVED_CALL](<warning>x<error>++</error>|<v4>, <v5>) -> <v6>
/warning>                                                            <v7>: *            NEW: magic[UNRESOLVED_CALL](/warning>) -> <v7>
<warning>x<error>++</error></warning>                                <v8>: UnitIncDec   NEW: magic[UNRESOLVED_CALL](<warning>x<error>++</error></warning>|<v6>, <v7>) -> <v8>
x = <warning>x<error>++</error></warning>                            !<v9>: *
{ var x = UnitIncDec() x = <warning>x<error>++</error></warning> }   !<v9>: *           COPY
=====================
