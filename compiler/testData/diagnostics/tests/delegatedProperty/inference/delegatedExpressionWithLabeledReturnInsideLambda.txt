package

public fun </*0*/ K> createDelegate(/*0*/ f: () -> K): Delegate<K>
public fun test(): kotlin.Unit
public operator fun </*0*/ T> Delegate<T>.getValue(/*0*/ thisRef: kotlin.Any?, /*1*/ property: kotlin.reflect.KProperty<*>): T

public final class Delegate</*0*/ T> {
    public constructor Delegate</*0*/ T>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
