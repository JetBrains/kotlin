KtOperationReferenceExpression(97,98): '>'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        1 -> (KaVariableSignature:
          name = m
          receiverType = null
          returnType = MyClass
          symbol = m: MyClass
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = m
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Int
          symbol = /MyClass.compareTo(<dispatch receiver>: MyClass, m: MyClass): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = m
              receiverType = null
              returnType = MyClass
              symbol = m: MyClass
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /MyClass.compareTo
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'Int', but 'MyClass' was expected.>
    isInBestCandidates = false

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        1 -> (KaVariableSignature:
          name = number
          receiverType = null
          returnType = kotlin.Int
          symbol = number: kotlin.Int
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = KaExplicitReceiverValue:
          expression = m
          isSafeNavigation = false
          type = MyClass
        signature = KaFunctionSignature:
          receiverType = MyClass
          returnType = kotlin.Int
          symbol = /compareTo(<extension receiver>: R, number: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = number
              receiverType = null
              returnType = kotlin.Int
              symbol = number: kotlin.Int
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /compareTo
      typeArgumentsMapping = {
        R -> (MyClass)
      }
    isInBestCandidates = true

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        1 -> (KaVariableSignature:
          name = int
          receiverType = null
          returnType = kotlin.Int
          symbol = int: kotlin.Int
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = KaExplicitReceiverValue:
          expression = m
          isSafeNavigation = false
          type = MyClass
        signature = KaFunctionSignature:
          receiverType = MyClass
          returnType = kotlin.Int
          symbol = /compareTo(<extension receiver>: T, int: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = int
              receiverType = null
              returnType = kotlin.Int
              symbol = int: kotlin.Int
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /compareTo
      typeArgumentsMapping = {
        T -> (MyClass)
      }
    isInBestCandidates = true