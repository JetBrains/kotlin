== foo ==
fun foo() {
    "before"
    if (true) {
        val a = 1
    }
    else {
        val b = 2
    }
    "after"
}
---------------------
L0:
  1 <START>                                                                  INIT: in: {} out: {}
  2 mark({ "before" if (true) { val a = 1 } else { val b = 2 } "after" })
    mark("before")
    r("before")
    mark(if (true) { val a = 1 } else { val b = 2 })
    r(true)
    jf(L2)
  3 mark({ val a = 1 })
    v(val a = 1)                                                             INIT: in: {} out: {a=D}
    r(1)                                                                     INIT: in: {a=D} out: {a=D}
    w(a)                                                                     INIT: in: {a=D} out: {a=ID}
  2 jmp(L3)                                                                  INIT: in: {} out: {}
L2:
  3 mark({ val b = 2 })
    v(val b = 2)                                                             INIT: in: {} out: {b=D}
    r(2)                                                                     INIT: in: {b=D} out: {b=D}
    w(b)                                                                     INIT: in: {b=D} out: {b=ID}
L3:
  2 mark("after")                                                            INIT: in: {} out: {}
    r("after")
L1:
  1 <END>
error:
    <ERROR>
sink:
    <SINK>                                                                                                  USE: in: {} out: {}
=====================
