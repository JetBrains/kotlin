KtCallExpression(86,92): 'foo(x)'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        x -> (KaVariableSignature:
          name = x
          receiverType = null
          returnType = kotlin.Int
          symbol = x: kotlin.Int
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = ERROR CLASS: Cannot infer argument for type parameter T
          symbol = /foo(x: kotlin.Int): T
          valueParameters = [
            KaVariableSignature:
              name = x
              receiverType = null
              returnType = kotlin.Int
              symbol = x: kotlin.Int
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /foo
      typeArgumentsMapping = {
        T -> (ERROR CLASS: Cannot infer argument for type parameter T)
      }
    diagnostic = ERROR<INAPPLICABLE_CANDIDATE: Inapplicable candidate(s): fun <T : ??? (Unresolved qualified name: NonExistent)> foo(x: Int): T>
    isInBestCandidates = true