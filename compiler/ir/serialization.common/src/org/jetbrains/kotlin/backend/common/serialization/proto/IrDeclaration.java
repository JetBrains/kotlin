// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: compiler/ir/serialization.common/src/KotlinIr.proto
// Protobuf Java Version: 4.29.3

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration}
 */
public  final class IrDeclaration extends
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite<
        IrDeclaration, IrDeclaration.Builder> implements
    // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration)
    IrDeclarationOrBuilder {
  private IrDeclaration() {
  }
  private int declaratorCase_ = 0;
  private java.lang.Object declarator_;
  public enum DeclaratorCase {
    IR_ANONYMOUS_INIT(1),
    IR_CLASS(2),
    IR_CONSTRUCTOR(3),
    IR_ENUM_ENTRY(4),
    IR_FIELD(5),
    IR_FUNCTION(6),
    IR_PROPERTY(7),
    IR_TYPE_PARAMETER(8),
    IR_VARIABLE(9),
    IR_VALUE_PARAMETER(10),
    IR_LOCAL_DELEGATED_PROPERTY(11),
    IR_TYPE_ALIAS(12),
    DECLARATOR_NOT_SET(0);
    private final int value;
    private DeclaratorCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DeclaratorCase valueOf(int value) {
      return forNumber(value);
    }

    public static DeclaratorCase forNumber(int value) {
      switch (value) {
        case 1: return IR_ANONYMOUS_INIT;
        case 2: return IR_CLASS;
        case 3: return IR_CONSTRUCTOR;
        case 4: return IR_ENUM_ENTRY;
        case 5: return IR_FIELD;
        case 6: return IR_FUNCTION;
        case 7: return IR_PROPERTY;
        case 8: return IR_TYPE_PARAMETER;
        case 9: return IR_VARIABLE;
        case 10: return IR_VALUE_PARAMETER;
        case 11: return IR_LOCAL_DELEGATED_PROPERTY;
        case 12: return IR_TYPE_ALIAS;
        case 0: return DECLARATOR_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public DeclaratorCase
  getDeclaratorCase() {
    return DeclaratorCase.forNumber(
        declaratorCase_);
  }

  private void clearDeclarator() {
    declaratorCase_ = 0;
    declarator_ = null;
  }

  public static final int IR_ANONYMOUS_INIT_FIELD_NUMBER = 1;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
   */
  @java.lang.Override
  public boolean hasIrAnonymousInit() {
    return declaratorCase_ == 1;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit getIrAnonymousInit() {
    if (declaratorCase_ == 1) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit) declarator_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setIrAnonymousInit(org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit value) {
    value.getClass();  // minimal bytecode null check
    declarator_ = value;
    declaratorCase_ = 1;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeIrAnonymousInit(org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit value) {
    value.getClass();  // minimal bytecode null check
    if (declaratorCase_ == 1 &&
        declarator_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit.getDefaultInstance()) {
      declarator_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit) declarator_)
          .mergeFrom(value).buildPartial();
    } else {
      declarator_ = value;
    }
    declaratorCase_ = 1;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
   */
  private void clearIrAnonymousInit() {
    if (declaratorCase_ == 1) {
      declaratorCase_ = 0;
      declarator_ = null;
    }
  }

  public static final int IR_CLASS_FIELD_NUMBER = 2;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
   */
  @java.lang.Override
  public boolean hasIrClass() {
    return declaratorCase_ == 2;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrClass getIrClass() {
    if (declaratorCase_ == 2) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrClass) declarator_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrClass.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setIrClass(org.jetbrains.kotlin.backend.common.serialization.proto.IrClass value) {
    value.getClass();  // minimal bytecode null check
    declarator_ = value;
    declaratorCase_ = 2;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeIrClass(org.jetbrains.kotlin.backend.common.serialization.proto.IrClass value) {
    value.getClass();  // minimal bytecode null check
    if (declaratorCase_ == 2 &&
        declarator_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrClass.getDefaultInstance()) {
      declarator_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrClass.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrClass) declarator_)
          .mergeFrom(value).buildPartial();
    } else {
      declarator_ = value;
    }
    declaratorCase_ = 2;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
   */
  private void clearIrClass() {
    if (declaratorCase_ == 2) {
      declaratorCase_ = 0;
      declarator_ = null;
    }
  }

  public static final int IR_CONSTRUCTOR_FIELD_NUMBER = 3;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
   */
  @java.lang.Override
  public boolean hasIrConstructor() {
    return declaratorCase_ == 3;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor getIrConstructor() {
    if (declaratorCase_ == 3) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor) declarator_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setIrConstructor(org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor value) {
    value.getClass();  // minimal bytecode null check
    declarator_ = value;
    declaratorCase_ = 3;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeIrConstructor(org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor value) {
    value.getClass();  // minimal bytecode null check
    if (declaratorCase_ == 3 &&
        declarator_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor.getDefaultInstance()) {
      declarator_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor) declarator_)
          .mergeFrom(value).buildPartial();
    } else {
      declarator_ = value;
    }
    declaratorCase_ = 3;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
   */
  private void clearIrConstructor() {
    if (declaratorCase_ == 3) {
      declaratorCase_ = 0;
      declarator_ = null;
    }
  }

  public static final int IR_ENUM_ENTRY_FIELD_NUMBER = 4;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
   */
  @java.lang.Override
  public boolean hasIrEnumEntry() {
    return declaratorCase_ == 4;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry getIrEnumEntry() {
    if (declaratorCase_ == 4) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry) declarator_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setIrEnumEntry(org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry value) {
    value.getClass();  // minimal bytecode null check
    declarator_ = value;
    declaratorCase_ = 4;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeIrEnumEntry(org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry value) {
    value.getClass();  // minimal bytecode null check
    if (declaratorCase_ == 4 &&
        declarator_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry.getDefaultInstance()) {
      declarator_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry) declarator_)
          .mergeFrom(value).buildPartial();
    } else {
      declarator_ = value;
    }
    declaratorCase_ = 4;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
   */
  private void clearIrEnumEntry() {
    if (declaratorCase_ == 4) {
      declaratorCase_ = 0;
      declarator_ = null;
    }
  }

  public static final int IR_FIELD_FIELD_NUMBER = 5;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
   */
  @java.lang.Override
  public boolean hasIrField() {
    return declaratorCase_ == 5;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrField getIrField() {
    if (declaratorCase_ == 5) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrField) declarator_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrField.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setIrField(org.jetbrains.kotlin.backend.common.serialization.proto.IrField value) {
    value.getClass();  // minimal bytecode null check
    declarator_ = value;
    declaratorCase_ = 5;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeIrField(org.jetbrains.kotlin.backend.common.serialization.proto.IrField value) {
    value.getClass();  // minimal bytecode null check
    if (declaratorCase_ == 5 &&
        declarator_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrField.getDefaultInstance()) {
      declarator_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrField.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrField) declarator_)
          .mergeFrom(value).buildPartial();
    } else {
      declarator_ = value;
    }
    declaratorCase_ = 5;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
   */
  private void clearIrField() {
    if (declaratorCase_ == 5) {
      declaratorCase_ = 0;
      declarator_ = null;
    }
  }

  public static final int IR_FUNCTION_FIELD_NUMBER = 6;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
   */
  @java.lang.Override
  public boolean hasIrFunction() {
    return declaratorCase_ == 6;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getIrFunction() {
    if (declaratorCase_ == 6) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction) declarator_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setIrFunction(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction value) {
    value.getClass();  // minimal bytecode null check
    declarator_ = value;
    declaratorCase_ = 6;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeIrFunction(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction value) {
    value.getClass();  // minimal bytecode null check
    if (declaratorCase_ == 6 &&
        declarator_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.getDefaultInstance()) {
      declarator_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction) declarator_)
          .mergeFrom(value).buildPartial();
    } else {
      declarator_ = value;
    }
    declaratorCase_ = 6;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
   */
  private void clearIrFunction() {
    if (declaratorCase_ == 6) {
      declaratorCase_ = 0;
      declarator_ = null;
    }
  }

  public static final int IR_PROPERTY_FIELD_NUMBER = 7;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
   */
  @java.lang.Override
  public boolean hasIrProperty() {
    return declaratorCase_ == 7;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty getIrProperty() {
    if (declaratorCase_ == 7) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty) declarator_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setIrProperty(org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty value) {
    value.getClass();  // minimal bytecode null check
    declarator_ = value;
    declaratorCase_ = 7;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeIrProperty(org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty value) {
    value.getClass();  // minimal bytecode null check
    if (declaratorCase_ == 7 &&
        declarator_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty.getDefaultInstance()) {
      declarator_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty) declarator_)
          .mergeFrom(value).buildPartial();
    } else {
      declarator_ = value;
    }
    declaratorCase_ = 7;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
   */
  private void clearIrProperty() {
    if (declaratorCase_ == 7) {
      declaratorCase_ = 0;
      declarator_ = null;
    }
  }

  public static final int IR_TYPE_PARAMETER_FIELD_NUMBER = 8;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
   */
  @java.lang.Override
  public boolean hasIrTypeParameter() {
    return declaratorCase_ == 8;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter getIrTypeParameter() {
    if (declaratorCase_ == 8) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter) declarator_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setIrTypeParameter(org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter value) {
    value.getClass();  // minimal bytecode null check
    declarator_ = value;
    declaratorCase_ = 8;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeIrTypeParameter(org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter value) {
    value.getClass();  // minimal bytecode null check
    if (declaratorCase_ == 8 &&
        declarator_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.getDefaultInstance()) {
      declarator_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter) declarator_)
          .mergeFrom(value).buildPartial();
    } else {
      declarator_ = value;
    }
    declaratorCase_ = 8;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
   */
  private void clearIrTypeParameter() {
    if (declaratorCase_ == 8) {
      declaratorCase_ = 0;
      declarator_ = null;
    }
  }

  public static final int IR_VARIABLE_FIELD_NUMBER = 9;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
   */
  @java.lang.Override
  public boolean hasIrVariable() {
    return declaratorCase_ == 9;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable getIrVariable() {
    if (declaratorCase_ == 9) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable) declarator_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setIrVariable(org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable value) {
    value.getClass();  // minimal bytecode null check
    declarator_ = value;
    declaratorCase_ = 9;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeIrVariable(org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable value) {
    value.getClass();  // minimal bytecode null check
    if (declaratorCase_ == 9 &&
        declarator_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable.getDefaultInstance()) {
      declarator_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable) declarator_)
          .mergeFrom(value).buildPartial();
    } else {
      declarator_ = value;
    }
    declaratorCase_ = 9;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
   */
  private void clearIrVariable() {
    if (declaratorCase_ == 9) {
      declaratorCase_ = 0;
      declarator_ = null;
    }
  }

  public static final int IR_VALUE_PARAMETER_FIELD_NUMBER = 10;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
   */
  @java.lang.Override
  public boolean hasIrValueParameter() {
    return declaratorCase_ == 10;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter getIrValueParameter() {
    if (declaratorCase_ == 10) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter) declarator_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setIrValueParameter(org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
    value.getClass();  // minimal bytecode null check
    declarator_ = value;
    declaratorCase_ = 10;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeIrValueParameter(org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
    value.getClass();  // minimal bytecode null check
    if (declaratorCase_ == 10 &&
        declarator_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.getDefaultInstance()) {
      declarator_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter) declarator_)
          .mergeFrom(value).buildPartial();
    } else {
      declarator_ = value;
    }
    declaratorCase_ = 10;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
   */
  private void clearIrValueParameter() {
    if (declaratorCase_ == 10) {
      declaratorCase_ = 0;
      declarator_ = null;
    }
  }

  public static final int IR_LOCAL_DELEGATED_PROPERTY_FIELD_NUMBER = 11;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
   */
  @java.lang.Override
  public boolean hasIrLocalDelegatedProperty() {
    return declaratorCase_ == 11;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty getIrLocalDelegatedProperty() {
    if (declaratorCase_ == 11) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty) declarator_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setIrLocalDelegatedProperty(org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty value) {
    value.getClass();  // minimal bytecode null check
    declarator_ = value;
    declaratorCase_ = 11;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeIrLocalDelegatedProperty(org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty value) {
    value.getClass();  // minimal bytecode null check
    if (declaratorCase_ == 11 &&
        declarator_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty.getDefaultInstance()) {
      declarator_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty) declarator_)
          .mergeFrom(value).buildPartial();
    } else {
      declarator_ = value;
    }
    declaratorCase_ = 11;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
   */
  private void clearIrLocalDelegatedProperty() {
    if (declaratorCase_ == 11) {
      declaratorCase_ = 0;
      declarator_ = null;
    }
  }

  public static final int IR_TYPE_ALIAS_FIELD_NUMBER = 12;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
   */
  @java.lang.Override
  public boolean hasIrTypeAlias() {
    return declaratorCase_ == 12;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias getIrTypeAlias() {
    if (declaratorCase_ == 12) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias) declarator_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setIrTypeAlias(org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias value) {
    value.getClass();  // minimal bytecode null check
    declarator_ = value;
    declaratorCase_ = 12;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeIrTypeAlias(org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias value) {
    value.getClass();  // minimal bytecode null check
    if (declaratorCase_ == 12 &&
        declarator_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias.getDefaultInstance()) {
      declarator_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias) declarator_)
          .mergeFrom(value).buildPartial();
    } else {
      declarator_ = value;
    }
    declaratorCase_ = 12;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
   */
  private void clearIrTypeAlias() {
    if (declaratorCase_ == 12) {
      declaratorCase_ = 0;
      declarator_ = null;
    }
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration parseFrom(
      java.nio.ByteBuffer data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration parseFrom(
      java.nio.ByteBuffer data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration parseFrom(byte[] data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration parseFrom(
      byte[] data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration parseFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration parseDelimitedFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration}
   */
  public static final class Builder extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration, Builder> implements
      // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration)
      org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationOrBuilder {
    // Construct using org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public DeclaratorCase
        getDeclaratorCase() {
      return instance.getDeclaratorCase();
    }

    public Builder clearDeclarator() {
      copyOnWrite();
      instance.clearDeclarator();
      return this;
    }


    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
     */
    @java.lang.Override
    public boolean hasIrAnonymousInit() {
      return instance.hasIrAnonymousInit();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit getIrAnonymousInit() {
      return instance.getIrAnonymousInit();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
     */
    public Builder setIrAnonymousInit(org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit value) {
      copyOnWrite();
      instance.setIrAnonymousInit(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
     */
    public Builder setIrAnonymousInit(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit.Builder builderForValue) {
      copyOnWrite();
      instance.setIrAnonymousInit(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
     */
    public Builder mergeIrAnonymousInit(org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit value) {
      copyOnWrite();
      instance.mergeIrAnonymousInit(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit ir_anonymous_init = 1;</code>
     */
    public Builder clearIrAnonymousInit() {
      copyOnWrite();
      instance.clearIrAnonymousInit();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
     */
    @java.lang.Override
    public boolean hasIrClass() {
      return instance.hasIrClass();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrClass getIrClass() {
      return instance.getIrClass();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
     */
    public Builder setIrClass(org.jetbrains.kotlin.backend.common.serialization.proto.IrClass value) {
      copyOnWrite();
      instance.setIrClass(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
     */
    public Builder setIrClass(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrClass.Builder builderForValue) {
      copyOnWrite();
      instance.setIrClass(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
     */
    public Builder mergeIrClass(org.jetbrains.kotlin.backend.common.serialization.proto.IrClass value) {
      copyOnWrite();
      instance.mergeIrClass(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrClass ir_class = 2;</code>
     */
    public Builder clearIrClass() {
      copyOnWrite();
      instance.clearIrClass();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
     */
    @java.lang.Override
    public boolean hasIrConstructor() {
      return instance.hasIrConstructor();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor getIrConstructor() {
      return instance.getIrConstructor();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
     */
    public Builder setIrConstructor(org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor value) {
      copyOnWrite();
      instance.setIrConstructor(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
     */
    public Builder setIrConstructor(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor.Builder builderForValue) {
      copyOnWrite();
      instance.setIrConstructor(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
     */
    public Builder mergeIrConstructor(org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor value) {
      copyOnWrite();
      instance.mergeIrConstructor(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor ir_constructor = 3;</code>
     */
    public Builder clearIrConstructor() {
      copyOnWrite();
      instance.clearIrConstructor();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
     */
    @java.lang.Override
    public boolean hasIrEnumEntry() {
      return instance.hasIrEnumEntry();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry getIrEnumEntry() {
      return instance.getIrEnumEntry();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
     */
    public Builder setIrEnumEntry(org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry value) {
      copyOnWrite();
      instance.setIrEnumEntry(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
     */
    public Builder setIrEnumEntry(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry.Builder builderForValue) {
      copyOnWrite();
      instance.setIrEnumEntry(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
     */
    public Builder mergeIrEnumEntry(org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry value) {
      copyOnWrite();
      instance.mergeIrEnumEntry(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry ir_enum_entry = 4;</code>
     */
    public Builder clearIrEnumEntry() {
      copyOnWrite();
      instance.clearIrEnumEntry();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
     */
    @java.lang.Override
    public boolean hasIrField() {
      return instance.hasIrField();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrField getIrField() {
      return instance.getIrField();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
     */
    public Builder setIrField(org.jetbrains.kotlin.backend.common.serialization.proto.IrField value) {
      copyOnWrite();
      instance.setIrField(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
     */
    public Builder setIrField(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrField.Builder builderForValue) {
      copyOnWrite();
      instance.setIrField(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
     */
    public Builder mergeIrField(org.jetbrains.kotlin.backend.common.serialization.proto.IrField value) {
      copyOnWrite();
      instance.mergeIrField(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrField ir_field = 5;</code>
     */
    public Builder clearIrField() {
      copyOnWrite();
      instance.clearIrField();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
     */
    @java.lang.Override
    public boolean hasIrFunction() {
      return instance.hasIrFunction();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getIrFunction() {
      return instance.getIrFunction();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
     */
    public Builder setIrFunction(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction value) {
      copyOnWrite();
      instance.setIrFunction(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
     */
    public Builder setIrFunction(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.Builder builderForValue) {
      copyOnWrite();
      instance.setIrFunction(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
     */
    public Builder mergeIrFunction(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction value) {
      copyOnWrite();
      instance.mergeIrFunction(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction ir_function = 6;</code>
     */
    public Builder clearIrFunction() {
      copyOnWrite();
      instance.clearIrFunction();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
     */
    @java.lang.Override
    public boolean hasIrProperty() {
      return instance.hasIrProperty();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty getIrProperty() {
      return instance.getIrProperty();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
     */
    public Builder setIrProperty(org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty value) {
      copyOnWrite();
      instance.setIrProperty(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
     */
    public Builder setIrProperty(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty.Builder builderForValue) {
      copyOnWrite();
      instance.setIrProperty(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
     */
    public Builder mergeIrProperty(org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty value) {
      copyOnWrite();
      instance.mergeIrProperty(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty ir_property = 7;</code>
     */
    public Builder clearIrProperty() {
      copyOnWrite();
      instance.clearIrProperty();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
     */
    @java.lang.Override
    public boolean hasIrTypeParameter() {
      return instance.hasIrTypeParameter();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter getIrTypeParameter() {
      return instance.getIrTypeParameter();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
     */
    public Builder setIrTypeParameter(org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter value) {
      copyOnWrite();
      instance.setIrTypeParameter(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
     */
    public Builder setIrTypeParameter(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder builderForValue) {
      copyOnWrite();
      instance.setIrTypeParameter(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
     */
    public Builder mergeIrTypeParameter(org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter value) {
      copyOnWrite();
      instance.mergeIrTypeParameter(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter ir_type_parameter = 8;</code>
     */
    public Builder clearIrTypeParameter() {
      copyOnWrite();
      instance.clearIrTypeParameter();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
     */
    @java.lang.Override
    public boolean hasIrVariable() {
      return instance.hasIrVariable();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable getIrVariable() {
      return instance.getIrVariable();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
     */
    public Builder setIrVariable(org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable value) {
      copyOnWrite();
      instance.setIrVariable(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
     */
    public Builder setIrVariable(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable.Builder builderForValue) {
      copyOnWrite();
      instance.setIrVariable(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
     */
    public Builder mergeIrVariable(org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable value) {
      copyOnWrite();
      instance.mergeIrVariable(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable ir_variable = 9;</code>
     */
    public Builder clearIrVariable() {
      copyOnWrite();
      instance.clearIrVariable();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
     */
    @java.lang.Override
    public boolean hasIrValueParameter() {
      return instance.hasIrValueParameter();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter getIrValueParameter() {
      return instance.getIrValueParameter();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
     */
    public Builder setIrValueParameter(org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
      copyOnWrite();
      instance.setIrValueParameter(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
     */
    public Builder setIrValueParameter(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.Builder builderForValue) {
      copyOnWrite();
      instance.setIrValueParameter(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
     */
    public Builder mergeIrValueParameter(org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
      copyOnWrite();
      instance.mergeIrValueParameter(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter ir_value_parameter = 10;</code>
     */
    public Builder clearIrValueParameter() {
      copyOnWrite();
      instance.clearIrValueParameter();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
     */
    @java.lang.Override
    public boolean hasIrLocalDelegatedProperty() {
      return instance.hasIrLocalDelegatedProperty();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty getIrLocalDelegatedProperty() {
      return instance.getIrLocalDelegatedProperty();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
     */
    public Builder setIrLocalDelegatedProperty(org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty value) {
      copyOnWrite();
      instance.setIrLocalDelegatedProperty(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
     */
    public Builder setIrLocalDelegatedProperty(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty.Builder builderForValue) {
      copyOnWrite();
      instance.setIrLocalDelegatedProperty(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
     */
    public Builder mergeIrLocalDelegatedProperty(org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty value) {
      copyOnWrite();
      instance.mergeIrLocalDelegatedProperty(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty ir_local_delegated_property = 11;</code>
     */
    public Builder clearIrLocalDelegatedProperty() {
      copyOnWrite();
      instance.clearIrLocalDelegatedProperty();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
     */
    @java.lang.Override
    public boolean hasIrTypeAlias() {
      return instance.hasIrTypeAlias();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias getIrTypeAlias() {
      return instance.getIrTypeAlias();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
     */
    public Builder setIrTypeAlias(org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias value) {
      copyOnWrite();
      instance.setIrTypeAlias(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
     */
    public Builder setIrTypeAlias(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias.Builder builderForValue) {
      copyOnWrite();
      instance.setIrTypeAlias(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
     */
    public Builder mergeIrTypeAlias(org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias value) {
      copyOnWrite();
      instance.mergeIrTypeAlias(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias ir_type_alias = 12;</code>
     */
    public Builder clearIrTypeAlias() {
      copyOnWrite();
      instance.clearIrTypeAlias();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration)
  }
  private byte memoizedIsInitialized = 2;
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "declarator_",
            "declaratorCase_",
            org.jetbrains.kotlin.backend.common.serialization.proto.IrAnonymousInit.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrClass.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrConstructor.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrEnumEntry.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrField.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrVariable.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrLocalDelegatedProperty.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeAlias.class,
          };
          java.lang.String info =
              "\u0004\f\u0001\u0000\u0001\f\f\u0000\u0000\f\u0001\u043c\u0000\u0002\u043c\u0000" +
              "\u0003\u043c\u0000\u0004\u043c\u0000\u0005\u043c\u0000\u0006\u043c\u0000\u0007\u043c" +
              "\u0000\b\u043c\u0000\t\u043c\u0000\n\u043c\u0000\u000b\u043c\u0000\f\u043c\u0000" +
              "";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        org.jetbrains.kotlin.protobuf.Parser<org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration> parser = PARSER;
        if (parser == null) {
          synchronized (org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return memoizedIsInitialized;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration)
  private static final org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration DEFAULT_INSTANCE;
  static {
    IrDeclaration defaultInstance = new IrDeclaration();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.registerDefaultInstance(
      IrDeclaration.class, defaultInstance);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile org.jetbrains.kotlin.protobuf.Parser<IrDeclaration> PARSER;

  public static org.jetbrains.kotlin.protobuf.Parser<IrDeclaration> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
