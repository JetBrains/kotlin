KtFile: 'lambdaReceiverParametrized.kt'
  null

KtPackageDirective(0,0): ''
  null

KtImportList(0,0): ''
  null

KtClass(0,166): '// ISSUE: KT-75315'
  null

KtDeclarationModifierList(92,96): 'open'
  null

KtClassBody(109,166): '{'
  null

KtProperty(115,141): 'val superProp: String = ""'
  null

KtTypeReference(130,136): 'String'
  null

KtUserType(130,136): 'String'
  null

KtNameReferenceExpression(130,136): 'String'
  null

KtStringTemplateExpression(139,141): '""'
  null

KtNamedFunction(146,164): 'fun superFunc() {}'
  null

KtParameterList(159,161): '()'
  null

KtBlockExpression(162,164): '{}'
  null

KtClass(168,773): 'open class MyClass {'
  null

KtDeclarationModifierList(168,172): 'open'
  null

KtClassBody(187,773): '{'
  null

KtObjectDeclaration(193,264): 'object InheritorObject: MyClass() {'
  null

KtSuperTypeList(217,226): 'MyClass()'
  null

KtSuperTypeCallEntry(217,226): 'MyClass()'
  KaSuccessCallInfo:
    call = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(217,224): 'MyClass'
  KaSuccessCallInfo:
    call = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(217,224): 'MyClass'
  null

KtUserType(217,224): 'MyClass'
  null

KtNameReferenceExpression(217,224): 'MyClass'
  null

KtValueArgumentList(224,226): '()'
  null

KtClassBody(227,264): '{'
  null

KtProperty(237,258): 'val prop: String = ""'
  null

KtTypeReference(247,253): 'String'
  null

KtUserType(247,253): 'String'
  null

KtNameReferenceExpression(247,253): 'String'
  null

KtStringTemplateExpression(256,258): '""'
  null

KtClass(270,339): 'class InheritorClass: MyClass() {'
  null

KtSuperTypeList(292,301): 'MyClass()'
  null

KtSuperTypeCallEntry(292,301): 'MyClass()'
  KaSuccessCallInfo:
    call = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(292,299): 'MyClass'
  KaSuccessCallInfo:
    call = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(292,299): 'MyClass'
  null

KtUserType(292,299): 'MyClass'
  null

KtNameReferenceExpression(292,299): 'MyClass'
  null

KtValueArgumentList(299,301): '()'
  null

KtClassBody(302,339): '{'
  null

KtProperty(312,333): 'val prop: String = ""'
  null

KtTypeReference(322,328): 'String'
  null

KtUserType(322,328): 'String'
  null

KtNameReferenceExpression(322,328): 'String'
  null

KtStringTemplateExpression(331,333): '""'
  null

KtObjectDeclaration(345,364): 'object NestedObject'
  null

KtObjectDeclaration(370,771): 'companion object: Super() {'
  null

KtDeclarationModifierList(370,379): 'companion'
  null

KtSuperTypeList(388,395): 'Super()'
  null

KtSuperTypeCallEntry(388,395): 'Super()'
  KaSuccessCallInfo:
    call = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = Super
          symbol = <constructor>(): Super
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(388,393): 'Super'
  KaSuccessCallInfo:
    call = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = Super
          symbol = <constructor>(): Super
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(388,393): 'Super'
  null

KtUserType(388,393): 'Super'
  null

KtNameReferenceExpression(388,393): 'Super'
  null

KtValueArgumentList(393,395): '()'
  null

KtClassBody(396,771): '{'
  null

KtProperty(406,439): 'val propMyClass: MyClass = TODO()'
  null

KtTypeReference(423,430): 'MyClass'
  null

KtUserType(423,430): 'MyClass'
  null

KtNameReferenceExpression(423,430): 'MyClass'
  null

KtCallExpression(433,439): 'TODO()'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Nothing
          symbol = kotlin/TODO(): kotlin.Nothing
          valueParameters = []
          contextParameters = []
          callableId = kotlin/TODO
      typeArgumentsMapping = {}

KtNameReferenceExpression(433,437): 'TODO'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Nothing
          symbol = kotlin/TODO(): kotlin.Nothing
          valueParameters = []
          contextParameters = []
          callableId = kotlin/TODO
      typeArgumentsMapping = {}

KtValueArgumentList(437,439): '()'
  null

KtProperty(448,505): 'val propInheritorClass: InheritorClass = InheritorClass()'
  null

KtTypeReference(472,486): 'InheritorClass'
  null

KtUserType(472,486): 'InheritorClass'
  null

KtNameReferenceExpression(472,486): 'InheritorClass'
  null

KtCallExpression(489,505): 'InheritorClass()'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass.InheritorClass
          symbol = <constructor>(): MyClass.InheritorClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtNameReferenceExpression(489,503): 'InheritorClass'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass.InheritorClass
          symbol = <constructor>(): MyClass.InheritorClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtValueArgumentList(503,505): '()'
  null

KtProperty(514,572): 'val propInheritorObject: InheritorObject = InheritorObject'
  null

KtTypeReference(539,554): 'InheritorObject'
  null

KtUserType(539,554): 'InheritorObject'
  null

KtNameReferenceExpression(539,554): 'InheritorObject'
  null

KtNameReferenceExpression(557,572): 'InheritorObject'
  null

KtProperty(581,602): 'val prop: String = ""'
  null

KtTypeReference(591,597): 'String'
  null

KtUserType(591,597): 'String'
  null

KtNameReferenceExpression(591,597): 'String'
  null

KtStringTemplateExpression(600,602): '""'
  null

KtProperty(611,643): 'const val constProp: String = ""'
  null

KtDeclarationModifierList(611,616): 'const'
  null

KtTypeReference(632,638): 'String'
  null

KtUserType(632,638): 'String'
  null

KtNameReferenceExpression(632,638): 'String'
  null

KtStringTemplateExpression(641,643): '""'
  null

KtProperty(652,685): 'val lazyProp: String by lazy {""}'
  null

KtTypeReference(666,672): 'String'
  null

KtUserType(666,672): 'String'
  null

KtNameReferenceExpression(666,672): 'String'
  null

KtPropertyDelegate(673,685): 'by lazy {""}'
  null

KtCallExpression(676,685): 'lazy {""}'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        {""} -> (KaVariableSignature:
          name = initializer
          receiverType = null
          returnType = kotlin.Function0<kotlin.String>
          symbol = initializer: kotlin.Function0<T>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Lazy<kotlin.String>
          symbol = kotlin/lazy(initializer: kotlin.Function0<T>): kotlin.Lazy<T>
          valueParameters = [
            KaVariableSignature:
              name = initializer
              receiverType = null
              returnType = kotlin.Function0<kotlin.String>
              symbol = initializer: kotlin.Function0<T>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/lazy
      typeArgumentsMapping = {
        T -> (kotlin.String)
      }

KtNameReferenceExpression(676,680): 'lazy'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        {""} -> (KaVariableSignature:
          name = initializer
          receiverType = null
          returnType = kotlin.Function0<kotlin.String>
          symbol = initializer: kotlin.Function0<T>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Lazy<kotlin.String>
          symbol = kotlin/lazy(initializer: kotlin.Function0<T>): kotlin.Lazy<T>
          valueParameters = [
            KaVariableSignature:
              name = initializer
              receiverType = null
              returnType = kotlin.Function0<kotlin.String>
              symbol = initializer: kotlin.Function0<T>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/lazy
      typeArgumentsMapping = {
        T -> (kotlin.String)
      }

KtLambdaArgument(681,685): '{""}'
  null

KtLambdaExpression(681,685): '{""}'
  null

KtFunctionLiteral(681,685): '{""}'
  null

KtBlockExpression(682,684): '""'
  null

KtStringTemplateExpression(682,684): '""'
  null

KtNamedFunction(694,722): 'fun func(): MyClass = TODO()'
  null

KtParameterList(702,704): '()'
  null

KtTypeReference(706,713): 'MyClass'
  null

KtUserType(706,713): 'MyClass'
  null

KtNameReferenceExpression(706,713): 'MyClass'
  null

KtCallExpression(716,722): 'TODO()'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Nothing
          symbol = kotlin/TODO(): kotlin.Nothing
          valueParameters = []
          contextParameters = []
          callableId = kotlin/TODO
      typeArgumentsMapping = {}

KtNameReferenceExpression(716,720): 'TODO'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Nothing
          symbol = kotlin/TODO(): kotlin.Nothing
          valueParameters = []
          contextParameters = []
          callableId = kotlin/TODO
      typeArgumentsMapping = {}

KtValueArgumentList(720,722): '()'
  null

KtProperty(731,765): 'val lambdaProp = {InheritorObject}'
  null

KtLambdaExpression(748,765): '{InheritorObject}'
  null

KtFunctionLiteral(748,765): '{InheritorObject}'
  null

KtBlockExpression(749,764): 'InheritorObject'
  null

KtNameReferenceExpression(749,764): 'InheritorObject'
  null

KtNamedFunction(775,825): 'fun <T>receiveParametrizedLambda(l: (T)->Unit) { }'
  null

KtTypeParameterList(779,782): '<T>'
  null

KtTypeParameter(780,781): 'T'
  null

KtParameterList(807,821): '(l: (T)->Unit)'
  null

KtParameter(808,820): 'l: (T)->Unit'
  null

KtTypeReference(811,820): '(T)->Unit'
  null

KtFunctionType(811,820): '(T)->Unit'
  null

KtParameterList(811,814): '(T)'
  null

KtParameter(812,813): 'T'
  null

KtTypeReference(812,813): 'T'
  null

KtUserType(812,813): 'T'
  null

KtNameReferenceExpression(812,813): 'T'
  null

KtTypeReference(816,820): 'Unit'
  null

KtUserType(816,820): 'Unit'
  null

KtNameReferenceExpression(816,820): 'Unit'
  null

KtBlockExpression(822,825): '{ }'
  null

KtNamedFunction(827,1836): 'fun testReceiveParametrizedLambda() {'
  null

KtParameterList(860,862): '()'
  null

KtBlockExpression(863,1836): '{'
  null

KtCallExpression(869,942): 'receiveParametrizedLambda<MyClass> { i: MyClass -> i == InheritorObject }'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == InheritorObject } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtNameReferenceExpression(869,894): 'receiveParametrizedLambda'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == InheritorObject } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtTypeArgumentList(894,903): '<MyClass>'
  null

KtTypeProjection(895,902): 'MyClass'
  null

KtTypeReference(895,902): 'MyClass'
  null

KtUserType(895,902): 'MyClass'
  null

KtNameReferenceExpression(895,902): 'MyClass'
  null

KtLambdaArgument(904,942): '{ i: MyClass -> i == InheritorObject }'
  null

KtLambdaExpression(904,942): '{ i: MyClass -> i == InheritorObject }'
  null

KtFunctionLiteral(904,942): '{ i: MyClass -> i == InheritorObject }'
  null

KtParameterList(906,916): 'i: MyClass'
  null

KtParameter(906,916): 'i: MyClass'
  null

KtTypeReference(909,916): 'MyClass'
  null

KtUserType(909,916): 'MyClass'
  null

KtNameReferenceExpression(909,916): 'MyClass'
  null

KtBlockExpression(920,940): 'i == InheritorObject'
  null

KtBinaryExpression(920,940): 'i == InheritorObject'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        InheritorObject -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(920,921): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = MyClass
          symbol = i: MyClass
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(922,924): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        InheritorObject -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(925,940): 'InheritorObject'
  null

KtCallExpression(947,1016): 'receiveParametrizedLambda<MyClass> { i: MyClass -> i == propMyClass }'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == propMyClass } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtNameReferenceExpression(947,972): 'receiveParametrizedLambda'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == propMyClass } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtTypeArgumentList(972,981): '<MyClass>'
  null

KtTypeProjection(973,980): 'MyClass'
  null

KtTypeReference(973,980): 'MyClass'
  null

KtUserType(973,980): 'MyClass'
  null

KtNameReferenceExpression(973,980): 'MyClass'
  null

KtLambdaArgument(982,1016): '{ i: MyClass -> i == propMyClass }'
  null

KtLambdaExpression(982,1016): '{ i: MyClass -> i == propMyClass }'
  null

KtFunctionLiteral(982,1016): '{ i: MyClass -> i == propMyClass }'
  null

KtParameterList(984,994): 'i: MyClass'
  null

KtParameter(984,994): 'i: MyClass'
  null

KtTypeReference(987,994): 'MyClass'
  null

KtUserType(987,994): 'MyClass'
  null

KtNameReferenceExpression(987,994): 'MyClass'
  null

KtBlockExpression(998,1014): 'i == propMyClass'
  null

KtBinaryExpression(998,1014): 'i == propMyClass'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        propMyClass -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(998,999): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = MyClass
          symbol = i: MyClass
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(1000,1002): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        propMyClass -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1003,1014): 'propMyClass'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = propMyClass
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = propMyClass
          receiverType = null
          returnType = MyClass
          symbol = val propMyClass: MyClass
          contextParameters = []
          callableId = /MyClass.Companion.propMyClass
      simpleAccess = Read
      typeArgumentsMapping = {}

KtCallExpression(1021,1097): 'receiveParametrizedLambda<MyClass> { i: MyClass -> i == propInheritorClass }'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == propInheritorClass } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtNameReferenceExpression(1021,1046): 'receiveParametrizedLambda'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == propInheritorClass } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtTypeArgumentList(1046,1055): '<MyClass>'
  null

KtTypeProjection(1047,1054): 'MyClass'
  null

KtTypeReference(1047,1054): 'MyClass'
  null

KtUserType(1047,1054): 'MyClass'
  null

KtNameReferenceExpression(1047,1054): 'MyClass'
  null

KtLambdaArgument(1056,1097): '{ i: MyClass -> i == propInheritorClass }'
  null

KtLambdaExpression(1056,1097): '{ i: MyClass -> i == propInheritorClass }'
  null

KtFunctionLiteral(1056,1097): '{ i: MyClass -> i == propInheritorClass }'
  null

KtParameterList(1058,1068): 'i: MyClass'
  null

KtParameter(1058,1068): 'i: MyClass'
  null

KtTypeReference(1061,1068): 'MyClass'
  null

KtUserType(1061,1068): 'MyClass'
  null

KtNameReferenceExpression(1061,1068): 'MyClass'
  null

KtBlockExpression(1072,1095): 'i == propInheritorClass'
  null

KtBinaryExpression(1072,1095): 'i == propInheritorClass'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        propInheritorClass -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1072,1073): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = MyClass
          symbol = i: MyClass
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(1074,1076): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        propInheritorClass -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1077,1095): 'propInheritorClass'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = propInheritorClass
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = propInheritorClass
          receiverType = null
          returnType = MyClass.InheritorClass
          symbol = val propInheritorClass: MyClass.InheritorClass
          contextParameters = []
          callableId = /MyClass.Companion.propInheritorClass
      simpleAccess = Read
      typeArgumentsMapping = {}

KtCallExpression(1102,1179): 'receiveParametrizedLambda<MyClass> { i: MyClass -> i == propInheritorObject }'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == propInheritorObject } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtNameReferenceExpression(1102,1127): 'receiveParametrizedLambda'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == propInheritorObject } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtTypeArgumentList(1127,1136): '<MyClass>'
  null

KtTypeProjection(1128,1135): 'MyClass'
  null

KtTypeReference(1128,1135): 'MyClass'
  null

KtUserType(1128,1135): 'MyClass'
  null

KtNameReferenceExpression(1128,1135): 'MyClass'
  null

KtLambdaArgument(1137,1179): '{ i: MyClass -> i == propInheritorObject }'
  null

KtLambdaExpression(1137,1179): '{ i: MyClass -> i == propInheritorObject }'
  null

KtFunctionLiteral(1137,1179): '{ i: MyClass -> i == propInheritorObject }'
  null

KtParameterList(1139,1149): 'i: MyClass'
  null

KtParameter(1139,1149): 'i: MyClass'
  null

KtTypeReference(1142,1149): 'MyClass'
  null

KtUserType(1142,1149): 'MyClass'
  null

KtNameReferenceExpression(1142,1149): 'MyClass'
  null

KtBlockExpression(1153,1177): 'i == propInheritorObject'
  null

KtBinaryExpression(1153,1177): 'i == propInheritorObject'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        propInheritorObject -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1153,1154): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = MyClass
          symbol = i: MyClass
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(1155,1157): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        propInheritorObject -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1158,1177): 'propInheritorObject'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = propInheritorObject
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = propInheritorObject
          receiverType = null
          returnType = MyClass.InheritorObject
          symbol = val propInheritorObject: MyClass.InheritorObject
          contextParameters = []
          callableId = /MyClass.Companion.propInheritorObject
      simpleAccess = Read
      typeArgumentsMapping = {}

KtCallExpression(1185,1247): 'receiveParametrizedLambda<MyClass> { i: MyClass -> i == prop }'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == prop } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtNameReferenceExpression(1185,1210): 'receiveParametrizedLambda'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == prop } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtTypeArgumentList(1210,1219): '<MyClass>'
  null

KtTypeProjection(1211,1218): 'MyClass'
  null

KtTypeReference(1211,1218): 'MyClass'
  null

KtUserType(1211,1218): 'MyClass'
  null

KtNameReferenceExpression(1211,1218): 'MyClass'
  null

KtLambdaArgument(1220,1247): '{ i: MyClass -> i == prop }'
  null

KtLambdaExpression(1220,1247): '{ i: MyClass -> i == prop }'
  null

KtFunctionLiteral(1220,1247): '{ i: MyClass -> i == prop }'
  null

KtParameterList(1222,1232): 'i: MyClass'
  null

KtParameter(1222,1232): 'i: MyClass'
  null

KtTypeReference(1225,1232): 'MyClass'
  null

KtUserType(1225,1232): 'MyClass'
  null

KtNameReferenceExpression(1225,1232): 'MyClass'
  null

KtBlockExpression(1236,1245): 'i == prop'
  null

KtBinaryExpression(1236,1245): 'i == prop'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        prop -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1236,1237): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = MyClass
          symbol = i: MyClass
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(1238,1240): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        prop -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1241,1245): 'prop'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = prop
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = prop
          receiverType = null
          returnType = kotlin.String
          symbol = val prop: kotlin.String
          contextParameters = []
          callableId = /MyClass.Companion.prop
      simpleAccess = Read
      typeArgumentsMapping = {}

KtCallExpression(1252,1319): 'receiveParametrizedLambda<MyClass> { i: MyClass -> i == superProp }'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == superProp } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtNameReferenceExpression(1252,1277): 'receiveParametrizedLambda'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == superProp } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtTypeArgumentList(1277,1286): '<MyClass>'
  null

KtTypeProjection(1278,1285): 'MyClass'
  null

KtTypeReference(1278,1285): 'MyClass'
  null

KtUserType(1278,1285): 'MyClass'
  null

KtNameReferenceExpression(1278,1285): 'MyClass'
  null

KtLambdaArgument(1287,1319): '{ i: MyClass -> i == superProp }'
  null

KtLambdaExpression(1287,1319): '{ i: MyClass -> i == superProp }'
  null

KtFunctionLiteral(1287,1319): '{ i: MyClass -> i == superProp }'
  null

KtParameterList(1289,1299): 'i: MyClass'
  null

KtParameter(1289,1299): 'i: MyClass'
  null

KtTypeReference(1292,1299): 'MyClass'
  null

KtUserType(1292,1299): 'MyClass'
  null

KtNameReferenceExpression(1292,1299): 'MyClass'
  null

KtBlockExpression(1303,1317): 'i == superProp'
  null

KtBinaryExpression(1303,1317): 'i == superProp'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        superProp -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1303,1304): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = MyClass
          symbol = i: MyClass
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(1305,1307): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        superProp -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1308,1317): 'superProp'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = superProp
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = superProp
          receiverType = null
          returnType = kotlin.String
          symbol = val superProp: kotlin.String
          contextParameters = []
          callableId = /Super.superProp
      simpleAccess = Read
      typeArgumentsMapping = {}

KtCallExpression(1324,1391): 'receiveParametrizedLambda<MyClass> { i: MyClass -> i == constProp }'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == constProp } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtNameReferenceExpression(1324,1349): 'receiveParametrizedLambda'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == constProp } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtTypeArgumentList(1349,1358): '<MyClass>'
  null

KtTypeProjection(1350,1357): 'MyClass'
  null

KtTypeReference(1350,1357): 'MyClass'
  null

KtUserType(1350,1357): 'MyClass'
  null

KtNameReferenceExpression(1350,1357): 'MyClass'
  null

KtLambdaArgument(1359,1391): '{ i: MyClass -> i == constProp }'
  null

KtLambdaExpression(1359,1391): '{ i: MyClass -> i == constProp }'
  null

KtFunctionLiteral(1359,1391): '{ i: MyClass -> i == constProp }'
  null

KtParameterList(1361,1371): 'i: MyClass'
  null

KtParameter(1361,1371): 'i: MyClass'
  null

KtTypeReference(1364,1371): 'MyClass'
  null

KtUserType(1364,1371): 'MyClass'
  null

KtNameReferenceExpression(1364,1371): 'MyClass'
  null

KtBlockExpression(1375,1389): 'i == constProp'
  null

KtBinaryExpression(1375,1389): 'i == constProp'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        constProp -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1375,1376): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = MyClass
          symbol = i: MyClass
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(1377,1379): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        constProp -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1380,1389): 'constProp'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = constProp
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = constProp
          receiverType = null
          returnType = kotlin.String
          symbol = val constProp: kotlin.String
          contextParameters = []
          callableId = /MyClass.Companion.constProp
      simpleAccess = Read
      typeArgumentsMapping = {}

KtCallExpression(1396,1462): 'receiveParametrizedLambda<MyClass> { i: MyClass -> i == lazyProp }'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == lazyProp } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtNameReferenceExpression(1396,1421): 'receiveParametrizedLambda'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == lazyProp } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtTypeArgumentList(1421,1430): '<MyClass>'
  null

KtTypeProjection(1422,1429): 'MyClass'
  null

KtTypeReference(1422,1429): 'MyClass'
  null

KtUserType(1422,1429): 'MyClass'
  null

KtNameReferenceExpression(1422,1429): 'MyClass'
  null

KtLambdaArgument(1431,1462): '{ i: MyClass -> i == lazyProp }'
  null

KtLambdaExpression(1431,1462): '{ i: MyClass -> i == lazyProp }'
  null

KtFunctionLiteral(1431,1462): '{ i: MyClass -> i == lazyProp }'
  null

KtParameterList(1433,1443): 'i: MyClass'
  null

KtParameter(1433,1443): 'i: MyClass'
  null

KtTypeReference(1436,1443): 'MyClass'
  null

KtUserType(1436,1443): 'MyClass'
  null

KtNameReferenceExpression(1436,1443): 'MyClass'
  null

KtBlockExpression(1447,1460): 'i == lazyProp'
  null

KtBinaryExpression(1447,1460): 'i == lazyProp'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        lazyProp -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1447,1448): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = MyClass
          symbol = i: MyClass
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(1449,1451): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        lazyProp -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1452,1460): 'lazyProp'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = lazyProp
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = lazyProp
          receiverType = null
          returnType = kotlin.String
          symbol = val lazyProp: kotlin.String
          contextParameters = []
          callableId = /MyClass.Companion.lazyProp
      simpleAccess = Read
      typeArgumentsMapping = {}

KtCallExpression(1468,1538): 'receiveParametrizedLambda<MyClass> { i: MyClass -> i == NestedObject }'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == NestedObject } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtNameReferenceExpression(1468,1493): 'receiveParametrizedLambda'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == NestedObject } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtTypeArgumentList(1493,1502): '<MyClass>'
  null

KtTypeProjection(1494,1501): 'MyClass'
  null

KtTypeReference(1494,1501): 'MyClass'
  null

KtUserType(1494,1501): 'MyClass'
  null

KtNameReferenceExpression(1494,1501): 'MyClass'
  null

KtLambdaArgument(1503,1538): '{ i: MyClass -> i == NestedObject }'
  null

KtLambdaExpression(1503,1538): '{ i: MyClass -> i == NestedObject }'
  null

KtFunctionLiteral(1503,1538): '{ i: MyClass -> i == NestedObject }'
  null

KtParameterList(1505,1515): 'i: MyClass'
  null

KtParameter(1505,1515): 'i: MyClass'
  null

KtTypeReference(1508,1515): 'MyClass'
  null

KtUserType(1508,1515): 'MyClass'
  null

KtNameReferenceExpression(1508,1515): 'MyClass'
  null

KtBlockExpression(1519,1536): 'i == NestedObject'
  null

KtBinaryExpression(1519,1536): 'i == NestedObject'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        NestedObject -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1519,1520): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = MyClass
          symbol = i: MyClass
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(1521,1523): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        NestedObject -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1524,1536): 'NestedObject'
  null

KtCallExpression(1543,1611): 'receiveParametrizedLambda<MyClass> { i: MyClass -> i == lambdaProp }'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == lambdaProp } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtNameReferenceExpression(1543,1568): 'receiveParametrizedLambda'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == lambdaProp } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtTypeArgumentList(1568,1577): '<MyClass>'
  null

KtTypeProjection(1569,1576): 'MyClass'
  null

KtTypeReference(1569,1576): 'MyClass'
  null

KtUserType(1569,1576): 'MyClass'
  null

KtNameReferenceExpression(1569,1576): 'MyClass'
  null

KtLambdaArgument(1578,1611): '{ i: MyClass -> i == lambdaProp }'
  null

KtLambdaExpression(1578,1611): '{ i: MyClass -> i == lambdaProp }'
  null

KtFunctionLiteral(1578,1611): '{ i: MyClass -> i == lambdaProp }'
  null

KtParameterList(1580,1590): 'i: MyClass'
  null

KtParameter(1580,1590): 'i: MyClass'
  null

KtTypeReference(1583,1590): 'MyClass'
  null

KtUserType(1583,1590): 'MyClass'
  null

KtNameReferenceExpression(1583,1590): 'MyClass'
  null

KtBlockExpression(1594,1609): 'i == lambdaProp'
  null

KtBinaryExpression(1594,1609): 'i == lambdaProp'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        lambdaProp -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1594,1595): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = MyClass
          symbol = i: MyClass
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(1596,1598): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        lambdaProp -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1599,1609): 'lambdaProp'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = lambdaProp
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = lambdaProp
          receiverType = null
          returnType = kotlin.Function0<MyClass.InheritorObject>
          symbol = val lambdaProp: kotlin.Function0<MyClass.InheritorObject>
          contextParameters = []
          callableId = /MyClass.Companion.lambdaProp
      simpleAccess = Read
      typeArgumentsMapping = {}

KtCallExpression(1617,1681): 'receiveParametrizedLambda<MyClass> { i: MyClass -> i == func() }'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == func() } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtNameReferenceExpression(1617,1642): 'receiveParametrizedLambda'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == func() } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtTypeArgumentList(1642,1651): '<MyClass>'
  null

KtTypeProjection(1643,1650): 'MyClass'
  null

KtTypeReference(1643,1650): 'MyClass'
  null

KtUserType(1643,1650): 'MyClass'
  null

KtNameReferenceExpression(1643,1650): 'MyClass'
  null

KtLambdaArgument(1652,1681): '{ i: MyClass -> i == func() }'
  null

KtLambdaExpression(1652,1681): '{ i: MyClass -> i == func() }'
  null

KtFunctionLiteral(1652,1681): '{ i: MyClass -> i == func() }'
  null

KtParameterList(1654,1664): 'i: MyClass'
  null

KtParameter(1654,1664): 'i: MyClass'
  null

KtTypeReference(1657,1664): 'MyClass'
  null

KtUserType(1657,1664): 'MyClass'
  null

KtNameReferenceExpression(1657,1664): 'MyClass'
  null

KtBlockExpression(1668,1679): 'i == func()'
  null

KtBinaryExpression(1668,1679): 'i == func()'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        func() -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1668,1669): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = MyClass
          symbol = i: MyClass
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(1670,1672): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        func() -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtCallExpression(1673,1679): 'func()'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference 'func'.>

KtNameReferenceExpression(1673,1677): 'func'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference 'func'.>

KtValueArgumentList(1677,1679): '()'
  null

KtCallExpression(1686,1755): 'receiveParametrizedLambda<MyClass> { i: MyClass -> i == superFunc() }'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == superFunc() } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtNameReferenceExpression(1686,1711): 'receiveParametrizedLambda'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == superFunc() } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtTypeArgumentList(1711,1720): '<MyClass>'
  null

KtTypeProjection(1712,1719): 'MyClass'
  null

KtTypeReference(1712,1719): 'MyClass'
  null

KtUserType(1712,1719): 'MyClass'
  null

KtNameReferenceExpression(1712,1719): 'MyClass'
  null

KtLambdaArgument(1721,1755): '{ i: MyClass -> i == superFunc() }'
  null

KtLambdaExpression(1721,1755): '{ i: MyClass -> i == superFunc() }'
  null

KtFunctionLiteral(1721,1755): '{ i: MyClass -> i == superFunc() }'
  null

KtParameterList(1723,1733): 'i: MyClass'
  null

KtParameter(1723,1733): 'i: MyClass'
  null

KtTypeReference(1726,1733): 'MyClass'
  null

KtUserType(1726,1733): 'MyClass'
  null

KtNameReferenceExpression(1726,1733): 'MyClass'
  null

KtBlockExpression(1737,1753): 'i == superFunc()'
  null

KtBinaryExpression(1737,1753): 'i == superFunc()'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        superFunc() -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1737,1738): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = MyClass
          symbol = i: MyClass
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(1739,1741): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        superFunc() -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtCallExpression(1742,1753): 'superFunc()'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference 'superFunc'.>

KtNameReferenceExpression(1742,1751): 'superFunc'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference 'superFunc'.>

KtValueArgumentList(1751,1753): '()'
  null

KtCallExpression(1760,1834): 'receiveParametrizedLambda<MyClass> { i: MyClass -> i == InheritorClass() }'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == InheritorClass() } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtNameReferenceExpression(1760,1785): 'receiveParametrizedLambda'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        { i: MyClass -> i == InheritorClass() } -> (KaVariableSignature:
          name = l
          receiverType = null
          returnType = kotlin.Function1<MyClass, kotlin.Unit>
          symbol = l: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveParametrizedLambda(l: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = l
              receiverType = null
              returnType = kotlin.Function1<MyClass, kotlin.Unit>
              symbol = l: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveParametrizedLambda
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtTypeArgumentList(1785,1794): '<MyClass>'
  null

KtTypeProjection(1786,1793): 'MyClass'
  null

KtTypeReference(1786,1793): 'MyClass'
  null

KtUserType(1786,1793): 'MyClass'
  null

KtNameReferenceExpression(1786,1793): 'MyClass'
  null

KtLambdaArgument(1795,1834): '{ i: MyClass -> i == InheritorClass() }'
  null

KtLambdaExpression(1795,1834): '{ i: MyClass -> i == InheritorClass() }'
  null

KtFunctionLiteral(1795,1834): '{ i: MyClass -> i == InheritorClass() }'
  null

KtParameterList(1797,1807): 'i: MyClass'
  null

KtParameter(1797,1807): 'i: MyClass'
  null

KtTypeReference(1800,1807): 'MyClass'
  null

KtUserType(1800,1807): 'MyClass'
  null

KtNameReferenceExpression(1800,1807): 'MyClass'
  null

KtBlockExpression(1811,1832): 'i == InheritorClass()'
  null

KtBinaryExpression(1811,1832): 'i == InheritorClass()'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        InheritorClass() -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1811,1812): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = MyClass
          symbol = i: MyClass
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(1813,1815): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        InheritorClass() -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtCallExpression(1816,1832): 'InheritorClass()'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference 'InheritorClass'.>

KtNameReferenceExpression(1816,1830): 'InheritorClass'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference 'InheritorClass'.>

KtValueArgumentList(1830,1832): '()'
  null