KtFile: 'regularArg.kt'
  null

KtPackageDirective(0,0): ''
  null

KtImportList(0,0): ''
  null

KtClass(93,167): 'open class Super {'
  null

KtDeclarationModifierList(93,97): 'open'
  null

KtClassBody(110,167): '{'
  null

KtProperty(116,142): 'val superProp: String = ""'
  null

KtTypeReference(131,137): 'String'
  null

KtUserType(131,137): 'String'
  null

KtNameReferenceExpression(131,137): 'String'
  null

KtStringTemplateExpression(140,142): '""'
  null

KtNamedFunction(147,165): 'fun superFunc() {}'
  null

KtParameterList(160,162): '()'
  null

KtBlockExpression(163,165): '{}'
  null

KtClass(169,774): 'open class MyClass {'
  null

KtDeclarationModifierList(169,173): 'open'
  null

KtClassBody(188,774): '{'
  null

KtObjectDeclaration(194,265): 'object InheritorObject: MyClass() {'
  null

KtSuperTypeList(218,227): 'MyClass()'
  null

KtSuperTypeCallEntry(218,227): 'MyClass()'
  KaSuccessCallInfo:
    call = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(218,225): 'MyClass'
  KaSuccessCallInfo:
    call = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(218,225): 'MyClass'
  null

KtUserType(218,225): 'MyClass'
  null

KtNameReferenceExpression(218,225): 'MyClass'
  null

KtValueArgumentList(225,227): '()'
  null

KtClassBody(228,265): '{'
  null

KtProperty(238,259): 'val prop: String = ""'
  null

KtTypeReference(248,254): 'String'
  null

KtUserType(248,254): 'String'
  null

KtNameReferenceExpression(248,254): 'String'
  null

KtStringTemplateExpression(257,259): '""'
  null

KtClass(271,340): 'class InheritorClass: MyClass() {'
  null

KtSuperTypeList(293,302): 'MyClass()'
  null

KtSuperTypeCallEntry(293,302): 'MyClass()'
  KaSuccessCallInfo:
    call = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(293,300): 'MyClass'
  KaSuccessCallInfo:
    call = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(293,300): 'MyClass'
  null

KtUserType(293,300): 'MyClass'
  null

KtNameReferenceExpression(293,300): 'MyClass'
  null

KtValueArgumentList(300,302): '()'
  null

KtClassBody(303,340): '{'
  null

KtProperty(313,334): 'val prop: String = ""'
  null

KtTypeReference(323,329): 'String'
  null

KtUserType(323,329): 'String'
  null

KtNameReferenceExpression(323,329): 'String'
  null

KtStringTemplateExpression(332,334): '""'
  null

KtObjectDeclaration(346,365): 'object NestedObject'
  null

KtObjectDeclaration(371,772): 'companion object: Super() {'
  null

KtDeclarationModifierList(371,380): 'companion'
  null

KtSuperTypeList(389,396): 'Super()'
  null

KtSuperTypeCallEntry(389,396): 'Super()'
  KaSuccessCallInfo:
    call = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = Super
          symbol = <constructor>(): Super
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(389,394): 'Super'
  KaSuccessCallInfo:
    call = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = Super
          symbol = <constructor>(): Super
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(389,394): 'Super'
  null

KtUserType(389,394): 'Super'
  null

KtNameReferenceExpression(389,394): 'Super'
  null

KtValueArgumentList(394,396): '()'
  null

KtClassBody(397,772): '{'
  null

KtProperty(407,440): 'val propMyClass: MyClass = TODO()'
  null

KtTypeReference(424,431): 'MyClass'
  null

KtUserType(424,431): 'MyClass'
  null

KtNameReferenceExpression(424,431): 'MyClass'
  null

KtCallExpression(434,440): 'TODO()'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Nothing
          symbol = kotlin/TODO(): kotlin.Nothing
          valueParameters = []
          contextParameters = []
          callableId = kotlin/TODO
      typeArgumentsMapping = {}

KtNameReferenceExpression(434,438): 'TODO'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Nothing
          symbol = kotlin/TODO(): kotlin.Nothing
          valueParameters = []
          contextParameters = []
          callableId = kotlin/TODO
      typeArgumentsMapping = {}

KtValueArgumentList(438,440): '()'
  null

KtProperty(449,506): 'val propInheritorClass: InheritorClass = InheritorClass()'
  null

KtTypeReference(473,487): 'InheritorClass'
  null

KtUserType(473,487): 'InheritorClass'
  null

KtNameReferenceExpression(473,487): 'InheritorClass'
  null

KtCallExpression(490,506): 'InheritorClass()'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass.InheritorClass
          symbol = <constructor>(): MyClass.InheritorClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtNameReferenceExpression(490,504): 'InheritorClass'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass.InheritorClass
          symbol = <constructor>(): MyClass.InheritorClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtValueArgumentList(504,506): '()'
  null

KtProperty(515,573): 'val propInheritorObject: InheritorObject = InheritorObject'
  null

KtTypeReference(540,555): 'InheritorObject'
  null

KtUserType(540,555): 'InheritorObject'
  null

KtNameReferenceExpression(540,555): 'InheritorObject'
  null

KtNameReferenceExpression(558,573): 'InheritorObject'
  null

KtProperty(582,603): 'val prop: String = ""'
  null

KtTypeReference(592,598): 'String'
  null

KtUserType(592,598): 'String'
  null

KtNameReferenceExpression(592,598): 'String'
  null

KtStringTemplateExpression(601,603): '""'
  null

KtProperty(612,644): 'const val constProp: String = ""'
  null

KtDeclarationModifierList(612,617): 'const'
  null

KtTypeReference(633,639): 'String'
  null

KtUserType(633,639): 'String'
  null

KtNameReferenceExpression(633,639): 'String'
  null

KtStringTemplateExpression(642,644): '""'
  null

KtProperty(653,686): 'val lazyProp: String by lazy {""}'
  null

KtTypeReference(667,673): 'String'
  null

KtUserType(667,673): 'String'
  null

KtNameReferenceExpression(667,673): 'String'
  null

KtPropertyDelegate(674,686): 'by lazy {""}'
  null

KtCallExpression(677,686): 'lazy {""}'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        {""} -> (KaVariableSignature:
          name = initializer
          receiverType = null
          returnType = kotlin.Function0<kotlin.String>
          symbol = initializer: kotlin.Function0<T>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Lazy<kotlin.String>
          symbol = kotlin/lazy(initializer: kotlin.Function0<T>): kotlin.Lazy<T>
          valueParameters = [
            KaVariableSignature:
              name = initializer
              receiverType = null
              returnType = kotlin.Function0<kotlin.String>
              symbol = initializer: kotlin.Function0<T>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/lazy
      typeArgumentsMapping = {
        T -> (kotlin.String)
      }

KtNameReferenceExpression(677,681): 'lazy'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        {""} -> (KaVariableSignature:
          name = initializer
          receiverType = null
          returnType = kotlin.Function0<kotlin.String>
          symbol = initializer: kotlin.Function0<T>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Lazy<kotlin.String>
          symbol = kotlin/lazy(initializer: kotlin.Function0<T>): kotlin.Lazy<T>
          valueParameters = [
            KaVariableSignature:
              name = initializer
              receiverType = null
              returnType = kotlin.Function0<kotlin.String>
              symbol = initializer: kotlin.Function0<T>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/lazy
      typeArgumentsMapping = {
        T -> (kotlin.String)
      }

KtLambdaArgument(682,686): '{""}'
  null

KtLambdaExpression(682,686): '{""}'
  null

KtFunctionLiteral(682,686): '{""}'
  null

KtBlockExpression(683,685): '""'
  null

KtStringTemplateExpression(683,685): '""'
  null

KtNamedFunction(695,723): 'fun func(): MyClass = TODO()'
  null

KtParameterList(703,705): '()'
  null

KtTypeReference(707,714): 'MyClass'
  null

KtUserType(707,714): 'MyClass'
  null

KtNameReferenceExpression(707,714): 'MyClass'
  null

KtCallExpression(717,723): 'TODO()'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Nothing
          symbol = kotlin/TODO(): kotlin.Nothing
          valueParameters = []
          contextParameters = []
          callableId = kotlin/TODO
      typeArgumentsMapping = {}

KtNameReferenceExpression(717,721): 'TODO'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Nothing
          symbol = kotlin/TODO(): kotlin.Nothing
          valueParameters = []
          contextParameters = []
          callableId = kotlin/TODO
      typeArgumentsMapping = {}

KtValueArgumentList(721,723): '()'
  null

KtProperty(732,766): 'val lambdaProp = {InheritorObject}'
  null

KtLambdaExpression(749,766): '{InheritorObject}'
  null

KtFunctionLiteral(749,766): '{InheritorObject}'
  null

KtBlockExpression(750,765): 'InheritorObject'
  null

KtNameReferenceExpression(750,765): 'InheritorObject'
  null

KtNamedFunction(776,811): 'fun receiveMyClass(arg: MyClass) {}'
  null

KtParameterList(794,808): '(arg: MyClass)'
  null

KtParameter(795,807): 'arg: MyClass'
  null

KtTypeReference(800,807): 'MyClass'
  null

KtUserType(800,807): 'MyClass'
  null

KtNameReferenceExpression(800,807): 'MyClass'
  null

KtBlockExpression(809,811): '{}'
  null

KtNamedFunction(813,1281): 'fun test0() {'
  null

KtParameterList(822,824): '()'
  null

KtBlockExpression(825,1281): '{'
  null

KtCallExpression(831,862): 'receiveMyClass(InheritorObject)'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        InheritorObject -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyClass
          symbol = arg: MyClass
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyClass
              symbol = arg: MyClass
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveMyClass
      typeArgumentsMapping = {}

KtNameReferenceExpression(831,845): 'receiveMyClass'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        InheritorObject -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyClass
          symbol = arg: MyClass
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyClass
              symbol = arg: MyClass
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveMyClass
      typeArgumentsMapping = {}

KtValueArgumentList(845,862): '(InheritorObject)'
  null

KtValueArgument(846,861): 'InheritorObject'
  null

KtNameReferenceExpression(846,861): 'InheritorObject'
  null

KtCallExpression(867,894): 'receiveMyClass(propMyClass)'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        propMyClass -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyClass
          symbol = arg: MyClass
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyClass
              symbol = arg: MyClass
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveMyClass
      typeArgumentsMapping = {}

KtNameReferenceExpression(867,881): 'receiveMyClass'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        propMyClass -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyClass
          symbol = arg: MyClass
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyClass
              symbol = arg: MyClass
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveMyClass
      typeArgumentsMapping = {}

KtValueArgumentList(881,894): '(propMyClass)'
  null

KtValueArgument(882,893): 'propMyClass'
  null

KtNameReferenceExpression(882,893): 'propMyClass'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = propMyClass
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = propMyClass
          receiverType = null
          returnType = MyClass
          symbol = val propMyClass: MyClass
          contextParameters = []
          callableId = /MyClass.Companion.propMyClass
      simpleAccess = Read
      typeArgumentsMapping = {}

KtCallExpression(899,933): 'receiveMyClass(propInheritorClass)'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        propInheritorClass -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyClass
          symbol = arg: MyClass
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyClass
              symbol = arg: MyClass
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveMyClass
      typeArgumentsMapping = {}

KtNameReferenceExpression(899,913): 'receiveMyClass'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        propInheritorClass -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyClass
          symbol = arg: MyClass
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyClass
              symbol = arg: MyClass
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveMyClass
      typeArgumentsMapping = {}

KtValueArgumentList(913,933): '(propInheritorClass)'
  null

KtValueArgument(914,932): 'propInheritorClass'
  null

KtNameReferenceExpression(914,932): 'propInheritorClass'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = propInheritorClass
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = propInheritorClass
          receiverType = null
          returnType = MyClass.InheritorClass
          symbol = val propInheritorClass: MyClass.InheritorClass
          contextParameters = []
          callableId = /MyClass.Companion.propInheritorClass
      simpleAccess = Read
      typeArgumentsMapping = {}

KtCallExpression(938,973): 'receiveMyClass(propInheritorObject)'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        propInheritorObject -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyClass
          symbol = arg: MyClass
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyClass
              symbol = arg: MyClass
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveMyClass
      typeArgumentsMapping = {}

KtNameReferenceExpression(938,952): 'receiveMyClass'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        propInheritorObject -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyClass
          symbol = arg: MyClass
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyClass
              symbol = arg: MyClass
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveMyClass
      typeArgumentsMapping = {}

KtValueArgumentList(952,973): '(propInheritorObject)'
  null

KtValueArgument(953,972): 'propInheritorObject'
  null

KtNameReferenceExpression(953,972): 'propInheritorObject'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = propInheritorObject
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = propInheritorObject
          receiverType = null
          returnType = MyClass.InheritorObject
          symbol = val propInheritorObject: MyClass.InheritorObject
          contextParameters = []
          callableId = /MyClass.Companion.propInheritorObject
      simpleAccess = Read
      typeArgumentsMapping = {}

KtCallExpression(979,1007): 'receiveMyClass(NestedObject)'
  KaErrorCallInfo:
    candidateCalls = [
      KaSimpleFunctionCall:
        argumentMapping = {
          NestedObject -> (KaVariableSignature:
            name = arg
            receiverType = null
            returnType = MyClass
            symbol = arg: MyClass
            contextParameters = []
            callableId = null)
        }
        isImplicitInvoke = false
        partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
          contextArguments = []
          dispatchReceiver = null
          extensionReceiver = null
          signature = KaFunctionSignature:
            receiverType = null
            returnType = kotlin.Unit
            symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
            valueParameters = [
              KaVariableSignature:
                name = arg
                receiverType = null
                returnType = MyClass
                symbol = arg: MyClass
                contextParameters = []
                callableId = null
            ]
            contextParameters = []
            callableId = /receiveMyClass
        typeArgumentsMapping = {}
    ]
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'MyClass.NestedObject', but 'MyClass' was expected.>

KtNameReferenceExpression(979,993): 'receiveMyClass'
  KaErrorCallInfo:
    candidateCalls = [
      KaSimpleFunctionCall:
        argumentMapping = {
          NestedObject -> (KaVariableSignature:
            name = arg
            receiverType = null
            returnType = MyClass
            symbol = arg: MyClass
            contextParameters = []
            callableId = null)
        }
        isImplicitInvoke = false
        partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
          contextArguments = []
          dispatchReceiver = null
          extensionReceiver = null
          signature = KaFunctionSignature:
            receiverType = null
            returnType = kotlin.Unit
            symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
            valueParameters = [
              KaVariableSignature:
                name = arg
                receiverType = null
                returnType = MyClass
                symbol = arg: MyClass
                contextParameters = []
                callableId = null
            ]
            contextParameters = []
            callableId = /receiveMyClass
        typeArgumentsMapping = {}
    ]
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'MyClass.NestedObject', but 'MyClass' was expected.>

KtValueArgumentList(993,1007): '(NestedObject)'
  null

KtValueArgument(994,1006): 'NestedObject'
  null

KtNameReferenceExpression(994,1006): 'NestedObject'
  null

KtCallExpression(1012,1032): 'receiveMyClass(prop)'
  KaErrorCallInfo:
    candidateCalls = [
      KaSimpleFunctionCall:
        argumentMapping = {
          prop -> (KaVariableSignature:
            name = arg
            receiverType = null
            returnType = MyClass
            symbol = arg: MyClass
            contextParameters = []
            callableId = null)
        }
        isImplicitInvoke = false
        partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
          contextArguments = []
          dispatchReceiver = null
          extensionReceiver = null
          signature = KaFunctionSignature:
            receiverType = null
            returnType = kotlin.Unit
            symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
            valueParameters = [
              KaVariableSignature:
                name = arg
                receiverType = null
                returnType = MyClass
                symbol = arg: MyClass
                contextParameters = []
                callableId = null
            ]
            contextParameters = []
            callableId = /receiveMyClass
        typeArgumentsMapping = {}
    ]
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'MyClass' was expected.>

KtNameReferenceExpression(1012,1026): 'receiveMyClass'
  KaErrorCallInfo:
    candidateCalls = [
      KaSimpleFunctionCall:
        argumentMapping = {
          prop -> (KaVariableSignature:
            name = arg
            receiverType = null
            returnType = MyClass
            symbol = arg: MyClass
            contextParameters = []
            callableId = null)
        }
        isImplicitInvoke = false
        partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
          contextArguments = []
          dispatchReceiver = null
          extensionReceiver = null
          signature = KaFunctionSignature:
            receiverType = null
            returnType = kotlin.Unit
            symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
            valueParameters = [
              KaVariableSignature:
                name = arg
                receiverType = null
                returnType = MyClass
                symbol = arg: MyClass
                contextParameters = []
                callableId = null
            ]
            contextParameters = []
            callableId = /receiveMyClass
        typeArgumentsMapping = {}
    ]
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'MyClass' was expected.>

KtValueArgumentList(1026,1032): '(prop)'
  null

KtValueArgument(1027,1031): 'prop'
  null

KtNameReferenceExpression(1027,1031): 'prop'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = prop
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = prop
          receiverType = null
          returnType = kotlin.String
          symbol = val prop: kotlin.String
          contextParameters = []
          callableId = /MyClass.Companion.prop
      simpleAccess = Read
      typeArgumentsMapping = {}

KtCallExpression(1037,1062): 'receiveMyClass(superProp)'
  KaErrorCallInfo:
    candidateCalls = [
      KaSimpleFunctionCall:
        argumentMapping = {
          superProp -> (KaVariableSignature:
            name = arg
            receiverType = null
            returnType = MyClass
            symbol = arg: MyClass
            contextParameters = []
            callableId = null)
        }
        isImplicitInvoke = false
        partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
          contextArguments = []
          dispatchReceiver = null
          extensionReceiver = null
          signature = KaFunctionSignature:
            receiverType = null
            returnType = kotlin.Unit
            symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
            valueParameters = [
              KaVariableSignature:
                name = arg
                receiverType = null
                returnType = MyClass
                symbol = arg: MyClass
                contextParameters = []
                callableId = null
            ]
            contextParameters = []
            callableId = /receiveMyClass
        typeArgumentsMapping = {}
    ]
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'MyClass' was expected.>

KtNameReferenceExpression(1037,1051): 'receiveMyClass'
  KaErrorCallInfo:
    candidateCalls = [
      KaSimpleFunctionCall:
        argumentMapping = {
          superProp -> (KaVariableSignature:
            name = arg
            receiverType = null
            returnType = MyClass
            symbol = arg: MyClass
            contextParameters = []
            callableId = null)
        }
        isImplicitInvoke = false
        partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
          contextArguments = []
          dispatchReceiver = null
          extensionReceiver = null
          signature = KaFunctionSignature:
            receiverType = null
            returnType = kotlin.Unit
            symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
            valueParameters = [
              KaVariableSignature:
                name = arg
                receiverType = null
                returnType = MyClass
                symbol = arg: MyClass
                contextParameters = []
                callableId = null
            ]
            contextParameters = []
            callableId = /receiveMyClass
        typeArgumentsMapping = {}
    ]
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'MyClass' was expected.>

KtValueArgumentList(1051,1062): '(superProp)'
  null

KtValueArgument(1052,1061): 'superProp'
  null

KtNameReferenceExpression(1052,1061): 'superProp'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = superProp
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = superProp
          receiverType = null
          returnType = kotlin.String
          symbol = val superProp: kotlin.String
          contextParameters = []
          callableId = /Super.superProp
      simpleAccess = Read
      typeArgumentsMapping = {}

KtCallExpression(1067,1092): 'receiveMyClass(constProp)'
  KaErrorCallInfo:
    candidateCalls = [
      KaSimpleFunctionCall:
        argumentMapping = {
          constProp -> (KaVariableSignature:
            name = arg
            receiverType = null
            returnType = MyClass
            symbol = arg: MyClass
            contextParameters = []
            callableId = null)
        }
        isImplicitInvoke = false
        partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
          contextArguments = []
          dispatchReceiver = null
          extensionReceiver = null
          signature = KaFunctionSignature:
            receiverType = null
            returnType = kotlin.Unit
            symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
            valueParameters = [
              KaVariableSignature:
                name = arg
                receiverType = null
                returnType = MyClass
                symbol = arg: MyClass
                contextParameters = []
                callableId = null
            ]
            contextParameters = []
            callableId = /receiveMyClass
        typeArgumentsMapping = {}
    ]
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'MyClass' was expected.>

KtNameReferenceExpression(1067,1081): 'receiveMyClass'
  KaErrorCallInfo:
    candidateCalls = [
      KaSimpleFunctionCall:
        argumentMapping = {
          constProp -> (KaVariableSignature:
            name = arg
            receiverType = null
            returnType = MyClass
            symbol = arg: MyClass
            contextParameters = []
            callableId = null)
        }
        isImplicitInvoke = false
        partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
          contextArguments = []
          dispatchReceiver = null
          extensionReceiver = null
          signature = KaFunctionSignature:
            receiverType = null
            returnType = kotlin.Unit
            symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
            valueParameters = [
              KaVariableSignature:
                name = arg
                receiverType = null
                returnType = MyClass
                symbol = arg: MyClass
                contextParameters = []
                callableId = null
            ]
            contextParameters = []
            callableId = /receiveMyClass
        typeArgumentsMapping = {}
    ]
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'MyClass' was expected.>

KtValueArgumentList(1081,1092): '(constProp)'
  null

KtValueArgument(1082,1091): 'constProp'
  null

KtNameReferenceExpression(1082,1091): 'constProp'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = constProp
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = constProp
          receiverType = null
          returnType = kotlin.String
          symbol = val constProp: kotlin.String
          contextParameters = []
          callableId = /MyClass.Companion.constProp
      simpleAccess = Read
      typeArgumentsMapping = {}

KtCallExpression(1097,1121): 'receiveMyClass(lazyProp)'
  KaErrorCallInfo:
    candidateCalls = [
      KaSimpleFunctionCall:
        argumentMapping = {
          lazyProp -> (KaVariableSignature:
            name = arg
            receiverType = null
            returnType = MyClass
            symbol = arg: MyClass
            contextParameters = []
            callableId = null)
        }
        isImplicitInvoke = false
        partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
          contextArguments = []
          dispatchReceiver = null
          extensionReceiver = null
          signature = KaFunctionSignature:
            receiverType = null
            returnType = kotlin.Unit
            symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
            valueParameters = [
              KaVariableSignature:
                name = arg
                receiverType = null
                returnType = MyClass
                symbol = arg: MyClass
                contextParameters = []
                callableId = null
            ]
            contextParameters = []
            callableId = /receiveMyClass
        typeArgumentsMapping = {}
    ]
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'MyClass' was expected.>

KtNameReferenceExpression(1097,1111): 'receiveMyClass'
  KaErrorCallInfo:
    candidateCalls = [
      KaSimpleFunctionCall:
        argumentMapping = {
          lazyProp -> (KaVariableSignature:
            name = arg
            receiverType = null
            returnType = MyClass
            symbol = arg: MyClass
            contextParameters = []
            callableId = null)
        }
        isImplicitInvoke = false
        partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
          contextArguments = []
          dispatchReceiver = null
          extensionReceiver = null
          signature = KaFunctionSignature:
            receiverType = null
            returnType = kotlin.Unit
            symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
            valueParameters = [
              KaVariableSignature:
                name = arg
                receiverType = null
                returnType = MyClass
                symbol = arg: MyClass
                contextParameters = []
                callableId = null
            ]
            contextParameters = []
            callableId = /receiveMyClass
        typeArgumentsMapping = {}
    ]
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'MyClass' was expected.>

KtValueArgumentList(1111,1121): '(lazyProp)'
  null

KtValueArgument(1112,1120): 'lazyProp'
  null

KtNameReferenceExpression(1112,1120): 'lazyProp'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = lazyProp
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = lazyProp
          receiverType = null
          returnType = kotlin.String
          symbol = val lazyProp: kotlin.String
          contextParameters = []
          callableId = /MyClass.Companion.lazyProp
      simpleAccess = Read
      typeArgumentsMapping = {}

KtCallExpression(1126,1152): 'receiveMyClass(lambdaProp)'
  KaErrorCallInfo:
    candidateCalls = [
      KaSimpleFunctionCall:
        argumentMapping = {
          lambdaProp -> (KaVariableSignature:
            name = arg
            receiverType = null
            returnType = MyClass
            symbol = arg: MyClass
            contextParameters = []
            callableId = null)
        }
        isImplicitInvoke = false
        partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
          contextArguments = []
          dispatchReceiver = null
          extensionReceiver = null
          signature = KaFunctionSignature:
            receiverType = null
            returnType = kotlin.Unit
            symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
            valueParameters = [
              KaVariableSignature:
                name = arg
                receiverType = null
                returnType = MyClass
                symbol = arg: MyClass
                contextParameters = []
                callableId = null
            ]
            contextParameters = []
            callableId = /receiveMyClass
        typeArgumentsMapping = {}
    ]
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'Function0<MyClass.InheritorObject>', but 'MyClass' was expected.>

KtNameReferenceExpression(1126,1140): 'receiveMyClass'
  KaErrorCallInfo:
    candidateCalls = [
      KaSimpleFunctionCall:
        argumentMapping = {
          lambdaProp -> (KaVariableSignature:
            name = arg
            receiverType = null
            returnType = MyClass
            symbol = arg: MyClass
            contextParameters = []
            callableId = null)
        }
        isImplicitInvoke = false
        partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
          contextArguments = []
          dispatchReceiver = null
          extensionReceiver = null
          signature = KaFunctionSignature:
            receiverType = null
            returnType = kotlin.Unit
            symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
            valueParameters = [
              KaVariableSignature:
                name = arg
                receiverType = null
                returnType = MyClass
                symbol = arg: MyClass
                contextParameters = []
                callableId = null
            ]
            contextParameters = []
            callableId = /receiveMyClass
        typeArgumentsMapping = {}
    ]
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'Function0<MyClass.InheritorObject>', but 'MyClass' was expected.>

KtValueArgumentList(1140,1152): '(lambdaProp)'
  null

KtValueArgument(1141,1151): 'lambdaProp'
  null

KtNameReferenceExpression(1141,1151): 'lambdaProp'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = lambdaProp
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = lambdaProp
          receiverType = null
          returnType = kotlin.Function0<MyClass.InheritorObject>
          symbol = val lambdaProp: kotlin.Function0<MyClass.InheritorObject>
          contextParameters = []
          callableId = /MyClass.Companion.lambdaProp
      simpleAccess = Read
      typeArgumentsMapping = {}

KtCallExpression(1157,1182): 'receiveMyClass(superProp)'
  KaErrorCallInfo:
    candidateCalls = [
      KaSimpleFunctionCall:
        argumentMapping = {
          superProp -> (KaVariableSignature:
            name = arg
            receiverType = null
            returnType = MyClass
            symbol = arg: MyClass
            contextParameters = []
            callableId = null)
        }
        isImplicitInvoke = false
        partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
          contextArguments = []
          dispatchReceiver = null
          extensionReceiver = null
          signature = KaFunctionSignature:
            receiverType = null
            returnType = kotlin.Unit
            symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
            valueParameters = [
              KaVariableSignature:
                name = arg
                receiverType = null
                returnType = MyClass
                symbol = arg: MyClass
                contextParameters = []
                callableId = null
            ]
            contextParameters = []
            callableId = /receiveMyClass
        typeArgumentsMapping = {}
    ]
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'MyClass' was expected.>

KtNameReferenceExpression(1157,1171): 'receiveMyClass'
  KaErrorCallInfo:
    candidateCalls = [
      KaSimpleFunctionCall:
        argumentMapping = {
          superProp -> (KaVariableSignature:
            name = arg
            receiverType = null
            returnType = MyClass
            symbol = arg: MyClass
            contextParameters = []
            callableId = null)
        }
        isImplicitInvoke = false
        partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
          contextArguments = []
          dispatchReceiver = null
          extensionReceiver = null
          signature = KaFunctionSignature:
            receiverType = null
            returnType = kotlin.Unit
            symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
            valueParameters = [
              KaVariableSignature:
                name = arg
                receiverType = null
                returnType = MyClass
                symbol = arg: MyClass
                contextParameters = []
                callableId = null
            ]
            contextParameters = []
            callableId = /receiveMyClass
        typeArgumentsMapping = {}
    ]
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'MyClass' was expected.>

KtValueArgumentList(1171,1182): '(superProp)'
  null

KtValueArgument(1172,1181): 'superProp'
  null

KtNameReferenceExpression(1172,1181): 'superProp'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = superProp
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = superProp
          receiverType = null
          returnType = kotlin.String
          symbol = val superProp: kotlin.String
          contextParameters = []
          callableId = /Super.superProp
      simpleAccess = Read
      typeArgumentsMapping = {}

KtCallExpression(1188,1220): 'receiveMyClass(InheritorClass())'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        InheritorClass() -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyClass
          symbol = arg: MyClass
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyClass
              symbol = arg: MyClass
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveMyClass
      typeArgumentsMapping = {}

KtNameReferenceExpression(1188,1202): 'receiveMyClass'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        InheritorClass() -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyClass
          symbol = arg: MyClass
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyClass
              symbol = arg: MyClass
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveMyClass
      typeArgumentsMapping = {}

KtValueArgumentList(1202,1220): '(InheritorClass())'
  null

KtValueArgument(1203,1219): 'InheritorClass()'
  null

KtCallExpression(1203,1219): 'InheritorClass()'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference 'InheritorClass'.>

KtNameReferenceExpression(1203,1217): 'InheritorClass'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference 'InheritorClass'.>

KtValueArgumentList(1217,1219): '()'
  null

KtCallExpression(1225,1247): 'receiveMyClass(func())'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        func() -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyClass
          symbol = arg: MyClass
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyClass
              symbol = arg: MyClass
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveMyClass
      typeArgumentsMapping = {}

KtNameReferenceExpression(1225,1239): 'receiveMyClass'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        func() -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyClass
          symbol = arg: MyClass
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyClass
              symbol = arg: MyClass
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveMyClass
      typeArgumentsMapping = {}

KtValueArgumentList(1239,1247): '(func())'
  null

KtValueArgument(1240,1246): 'func()'
  null

KtCallExpression(1240,1246): 'func()'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference 'func'.>

KtNameReferenceExpression(1240,1244): 'func'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference 'func'.>

KtValueArgumentList(1244,1246): '()'
  null

KtCallExpression(1252,1279): 'receiveMyClass(superFunc())'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        superFunc() -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyClass
          symbol = arg: MyClass
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyClass
              symbol = arg: MyClass
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveMyClass
      typeArgumentsMapping = {}

KtNameReferenceExpression(1252,1266): 'receiveMyClass'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        superFunc() -> (KaVariableSignature:
          name = arg
          receiverType = null
          returnType = MyClass
          symbol = arg: MyClass
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receiveMyClass(arg: MyClass): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = arg
              receiverType = null
              returnType = MyClass
              symbol = arg: MyClass
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receiveMyClass
      typeArgumentsMapping = {}

KtValueArgumentList(1266,1279): '(superFunc())'
  null

KtValueArgument(1267,1278): 'superFunc()'
  null

KtCallExpression(1267,1278): 'superFunc()'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference 'superFunc'.>

KtNameReferenceExpression(1267,1276): 'superFunc'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference 'superFunc'.>

KtValueArgumentList(1276,1278): '()'
  null