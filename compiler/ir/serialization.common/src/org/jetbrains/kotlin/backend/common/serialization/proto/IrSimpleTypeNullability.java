// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: compiler/ir/serialization.common/src/KotlinIr.proto
// Protobuf Java Version: 4.29.3

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * Protobuf enum {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrSimpleTypeNullability}
 */
public enum IrSimpleTypeNullability
    implements org.jetbrains.kotlin.protobuf.Internal.EnumLite {
  /**
   * <code>MARKED_NULLABLE = 0;</code>
   */
  MARKED_NULLABLE(0),
  /**
   * <code>NOT_SPECIFIED = 1;</code>
   */
  NOT_SPECIFIED(1),
  /**
   * <code>DEFINITELY_NOT_NULL = 2;</code>
   */
  DEFINITELY_NOT_NULL(2),
  ;

  /**
   * <code>MARKED_NULLABLE = 0;</code>
   */
  public static final int MARKED_NULLABLE_VALUE = 0;
  /**
   * <code>NOT_SPECIFIED = 1;</code>
   */
  public static final int NOT_SPECIFIED_VALUE = 1;
  /**
   * <code>DEFINITELY_NOT_NULL = 2;</code>
   */
  public static final int DEFINITELY_NOT_NULL_VALUE = 2;


  @java.lang.Override
  public final int getNumber() {
    return value;
  }

  /**
   * @param value The number of the enum to look for.
   * @return The enum associated with the given number.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static IrSimpleTypeNullability valueOf(int value) {
    return forNumber(value);
  }

  public static IrSimpleTypeNullability forNumber(int value) {
    switch (value) {
      case 0: return MARKED_NULLABLE;
      case 1: return NOT_SPECIFIED;
      case 2: return DEFINITELY_NOT_NULL;
      default: return null;
    }
  }

  public static org.jetbrains.kotlin.protobuf.Internal.EnumLiteMap<IrSimpleTypeNullability>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final org.jetbrains.kotlin.protobuf.Internal.EnumLiteMap<
      IrSimpleTypeNullability> internalValueMap =
        new org.jetbrains.kotlin.protobuf.Internal.EnumLiteMap<IrSimpleTypeNullability>() {
          @java.lang.Override
          public IrSimpleTypeNullability findValueByNumber(int number) {
            return IrSimpleTypeNullability.forNumber(number);
          }
        };

  public static org.jetbrains.kotlin.protobuf.Internal.EnumVerifier 
      internalGetVerifier() {
    return IrSimpleTypeNullabilityVerifier.INSTANCE;
  }

  private static final class IrSimpleTypeNullabilityVerifier implements 
       org.jetbrains.kotlin.protobuf.Internal.EnumVerifier { 
          static final org.jetbrains.kotlin.protobuf.Internal.EnumVerifier           INSTANCE = new IrSimpleTypeNullabilityVerifier();
          @java.lang.Override
          public boolean isInRange(int number) {
            return IrSimpleTypeNullability.forNumber(number) != null;
          }
        };

  private final int value;

  private IrSimpleTypeNullability(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrSimpleTypeNullability)
}
