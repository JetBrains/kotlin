package

public operator fun compareTo(/*0*/ other: Example): kotlin.Int
public operator fun component1(): kotlin.Int
public operator fun component1(/*0*/ n: kotlin.Int): kotlin.Int
public operator fun componentN(): kotlin.Int
public operator fun contains(/*0*/ n: kotlin.Int): kotlin.Boolean
public operator fun contains(/*0*/ n: kotlin.Int, /*1*/ s: kotlin.String = ...): kotlin.Boolean
public operator fun dec(): Example?
public operator fun div(/*0*/ o: Example): Example
public operator fun divAssign(/*0*/ n: kotlin.Int, /*1*/ a: kotlin.String = ...): kotlin.Unit
public operator fun equals(/*0*/ a: kotlin.String): kotlin.Boolean
public operator fun get(): kotlin.Unit
public operator fun get(/*0*/ n: kotlin.Int): kotlin.Unit
public operator fun get(/*0*/ n: kotlin.Int, /*1*/ n2: kotlin.Int): kotlin.Unit
public operator fun hasNext(): kotlin.Boolean
public operator fun hasNext(/*0*/ n: kotlin.Int): kotlin.String
public infix fun i1(/*0*/ n: kotlin.Int): kotlin.Unit
public infix fun i1(/*0*/ n: kotlin.Int, /*1*/ n2: kotlin.Int): kotlin.Unit
public infix fun i1(/*0*/ vararg n: kotlin.Int /*kotlin.IntArray*/): kotlin.Unit
public operator fun inc(): Example
public operator fun invoke(): kotlin.Unit
public operator fun iterator(): kotlin.String
public operator fun iterator(/*0*/ n: kotlin.Int): kotlin.String
public operator fun minus(/*0*/ vararg o: Example /*kotlin.Array<out Example>*/): Example
public operator fun minusAssign(/*0*/ n: kotlin.Int): kotlin.String
public operator fun modAssign(/*0*/ vararg n: kotlin.Int /*kotlin.IntArray*/): kotlin.Unit
public operator fun next(): kotlin.String
public operator fun next(/*0*/ n: kotlin.Int): kotlin.String
public operator fun plus(/*0*/ o: Example, /*1*/ s: kotlin.String = ...): Example
public operator fun plus(/*0*/ o: kotlin.String): Example
public operator fun plusAssign(/*0*/ n: kotlin.Int): kotlin.Unit
public operator fun rangeTo(/*0*/ vararg o: kotlin.String /*kotlin.Array<out kotlin.String>*/): kotlin.Unit
public operator fun rangeTo(/*0*/ o: kotlin.Int): kotlin.Unit
public operator fun rangeTo(/*0*/ o: kotlin.Int, /*1*/ o2: kotlin.Int): kotlin.Unit
public operator fun set(/*0*/ v: kotlin.Int): kotlin.Unit
public operator fun set(/*0*/ n: kotlin.Int, /*1*/ v: kotlin.Int): kotlin.Unit
public operator fun set(/*0*/ n: kotlin.Int, /*1*/ n2: kotlin.Int, /*2*/ v: kotlin.Int): kotlin.Unit
public operator fun unaryMinus(): Example
public operator fun unaryMinus(/*0*/ o: Example): kotlin.Unit
public operator fun unaryPlus(): Example
public operator fun unaryPlus(/*0*/ s: kotlin.String = ...): Example
public operator fun Example.compareTo(/*0*/ other: Example): kotlin.Int
public operator fun Example.component1(): kotlin.Int
public operator fun Example.component1(/*0*/ n: kotlin.Int): kotlin.Int
public operator fun Example.componentN(): kotlin.Int
public operator fun Example.contains(/*0*/ n: kotlin.Int): kotlin.Boolean
public operator fun Example.contains(/*0*/ n: kotlin.Int, /*1*/ s: kotlin.String = ...): kotlin.Boolean
public operator fun Example.dec(): Example?
public operator fun Example.div(/*0*/ o: Example): Example
public operator fun Example.divAssign(/*0*/ n: kotlin.Int, /*1*/ a: kotlin.String = ...): kotlin.Unit
public operator fun Example.equals(/*0*/ a: kotlin.String): kotlin.Boolean
public operator fun Example.get(): kotlin.Unit
public operator fun Example.get(/*0*/ n: kotlin.Int): kotlin.Unit
public operator fun Example.get(/*0*/ n: kotlin.Int, /*1*/ n2: kotlin.Int): kotlin.Unit
public operator fun Example.hasNext(): kotlin.Boolean
public operator fun Example.hasNext(/*0*/ n: kotlin.Int): kotlin.String
public infix fun Example.i1(/*0*/ n: kotlin.Int): kotlin.Unit
public infix fun Example.i1(/*0*/ n: kotlin.Int, /*1*/ n2: kotlin.Int): kotlin.Unit
public infix fun Example.i1(/*0*/ vararg n: kotlin.Int /*kotlin.IntArray*/): kotlin.Unit
public operator fun Example.inc(): Example
public operator fun Example.invoke(): kotlin.Unit
public operator fun Example.iterator(): kotlin.String
public operator fun Example.iterator(/*0*/ n: kotlin.Int): kotlin.String
public operator fun Example.minus(): Example
public operator fun Example.minus(/*0*/ vararg o: Example /*kotlin.Array<out Example>*/): Example
public operator fun Example.minusAssign(/*0*/ n: kotlin.Int): kotlin.String
public operator fun Example.modAssign(/*0*/ vararg n: kotlin.Int /*kotlin.IntArray*/): kotlin.Unit
public operator fun Example.next(): kotlin.String
public operator fun Example.next(/*0*/ n: kotlin.Int): kotlin.String
public operator fun Example.plus(): Example
public operator fun Example.plus(/*0*/ o: Example, /*1*/ s: kotlin.String = ...): Example
public operator fun Example.plus(/*0*/ o: kotlin.Any): Example
public operator fun Example.plusAssign(/*0*/ n: kotlin.Int): kotlin.Unit
public operator fun Example.rangeTo(/*0*/ vararg o: kotlin.String /*kotlin.Array<out kotlin.String>*/): kotlin.Unit
public operator fun Example.rangeTo(/*0*/ o: kotlin.Int): kotlin.Unit
public operator fun Example.rangeTo(/*0*/ o: kotlin.Int, /*1*/ o2: kotlin.Int): kotlin.Unit
public operator fun Example.set(/*0*/ v: kotlin.Int): kotlin.Unit
public operator fun Example.set(/*0*/ n: kotlin.Int, /*1*/ v: kotlin.Int): kotlin.Unit
public operator fun Example.set(/*0*/ n: kotlin.Int, /*1*/ n2: kotlin.Int, /*2*/ v: kotlin.Int): kotlin.Unit
public operator fun Example.unaryMinus(): Example
public operator fun Example.unaryMinus(/*0*/ o: Example): kotlin.Unit
public operator fun Example.unaryPlus(): Example
public operator fun Example.unaryPlus(/*0*/ s: kotlin.String = ...): Example

public final class DelegatesWithErrors {
    public constructor DelegatesWithErrors()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final operator fun getValue(/*0*/ thisRef: kotlin.Any?, /*1*/ prop: kotlin.String): kotlin.String
    public final operator fun getValue(/*0*/ prop: kotlin.reflect.KProperty<*>): kotlin.String
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final operator fun setValue(/*0*/ thisRef: kotlin.Any?, /*1*/ prop: kotlin.String, /*2*/ value: kotlin.String): kotlin.Unit
    public final operator fun setValue(/*0*/ thisRef: kotlin.Any?, /*1*/ prop: kotlin.reflect.KProperty<*>, /*2*/ f: kotlin.Float = ...): kotlin.Unit
    public final operator fun setValue(/*0*/ thisRef: kotlin.Any?, /*1*/ prop: kotlin.reflect.KProperty<*>, /*2*/ vararg n: kotlin.Int /*kotlin.IntArray*/): kotlin.Unit
    public final operator fun setValue(/*0*/ prop: kotlin.reflect.KProperty<*>, /*1*/ value: kotlin.String): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public interface DispatchReceiverType {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    public abstract operator fun DispatchReceiverType.ExtensionReceiverType.dec(): DispatchReceiverType
    public abstract operator fun DispatchReceiverType.ExtensionReceiverType.inc(): DispatchReceiverType.ExtensionReceiverType

    public interface ExtensionReceiverType {
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}

public interface Example {
    public abstract operator fun compareTo(/*0*/ other: Example): kotlin.Int
    public abstract operator fun component1(): kotlin.Int
    public abstract operator fun component1(/*0*/ n: kotlin.Int): kotlin.Int
    public abstract operator fun componentN(): kotlin.Int
    public abstract operator fun contains(/*0*/ n: kotlin.Int): kotlin.Boolean
    public abstract operator fun contains(/*0*/ n: kotlin.Int, /*1*/ s: kotlin.String = ...): kotlin.Boolean
    public abstract operator fun dec(): Example?
    public abstract operator fun div(/*0*/ o: Example): Example
    public abstract operator fun divAssign(/*0*/ n: kotlin.Int, /*1*/ a: kotlin.String = ...): kotlin.Unit
    public abstract override /*1*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public abstract operator fun equals(/*0*/ a: kotlin.String): kotlin.Boolean
    public abstract operator fun get(): kotlin.Unit
    public abstract operator fun get(/*0*/ n: kotlin.Int): kotlin.Unit
    public abstract operator fun get(/*0*/ n: kotlin.Int, /*1*/ n2: kotlin.Int): kotlin.Unit
    public abstract operator fun hasNext(): kotlin.Boolean
    public abstract operator fun hasNext(/*0*/ n: kotlin.Int): kotlin.String
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public abstract infix fun i1(/*0*/ n: kotlin.Int): kotlin.Unit
    public abstract infix fun i1(/*0*/ n: kotlin.Int, /*1*/ n2: kotlin.Int): kotlin.Unit
    public abstract infix fun i1(/*0*/ vararg n: kotlin.Int /*kotlin.IntArray*/): kotlin.Unit
    public abstract operator fun inc(): Example
    public abstract operator fun invoke(): kotlin.Unit
    public abstract operator fun iterator(): kotlin.String
    public abstract operator fun iterator(/*0*/ n: kotlin.Int): kotlin.String
    public abstract operator fun minus(): Example
    public abstract operator fun minus(/*0*/ vararg o: Example /*kotlin.Array<out Example>*/): Example
    public abstract operator fun minusAssign(/*0*/ n: kotlin.Int): kotlin.String
    public abstract operator fun modAssign(/*0*/ vararg n: kotlin.Int /*kotlin.IntArray*/): kotlin.Unit
    public abstract operator fun next(): kotlin.String
    public abstract operator fun next(/*0*/ n: kotlin.Int): kotlin.String
    public abstract operator fun plus(): Example
    public abstract operator fun plus(/*0*/ o: Example): Example
    public abstract operator fun plus(/*0*/ o: Example, /*1*/ s: kotlin.String = ...): Example
    public abstract operator fun plusAssign(/*0*/ n: kotlin.Int): kotlin.Unit
    public abstract operator fun rangeTo(/*0*/ vararg o: kotlin.String /*kotlin.Array<out kotlin.String>*/): kotlin.Unit
    public abstract operator fun rangeTo(/*0*/ o: kotlin.Int): kotlin.Unit
    public abstract operator fun rangeTo(/*0*/ o: kotlin.Int, /*1*/ o2: kotlin.Int): kotlin.Unit
    public abstract operator fun set(/*0*/ v: kotlin.Int): kotlin.Unit
    public abstract operator fun set(/*0*/ n: kotlin.Int, /*1*/ v: kotlin.Int): kotlin.Unit
    public abstract operator fun set(/*0*/ n: kotlin.Int, /*1*/ n2: kotlin.Int, /*2*/ v: kotlin.Int): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    public abstract operator fun unaryMinus(): Example
    public abstract operator fun unaryMinus(/*0*/ o: Example): kotlin.Unit
    public abstract operator fun unaryPlus(): Example
    public abstract operator fun unaryPlus(/*0*/ s: kotlin.String = ...): Example
}

public interface Example2 {
    public abstract operator fun compareTo(/*0*/ vararg other: Example /*kotlin.Array<out Example>*/): kotlin.Int
    public abstract operator fun contains(/*0*/ vararg n: kotlin.Int /*kotlin.IntArray*/): kotlin.Boolean
    public abstract operator fun dec(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public abstract operator fun hasNext(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public abstract operator fun inc(/*0*/ s: kotlin.String): Example
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public interface Example3 {
    public abstract operator fun compareTo(/*0*/ other: Example, /*1*/ s: kotlin.String = ...): kotlin.Int
    public abstract operator fun contains(/*0*/ n: kotlin.Int): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class OkDelegates {
    public constructor OkDelegates()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final operator fun getValue(/*0*/ thisRef: kotlin.Any?, /*1*/ prop: kotlin.reflect.KProperty<*>): kotlin.String
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final operator fun setValue(/*0*/ thisRef: kotlin.Any?, /*1*/ prop: kotlin.Any, /*2*/ n: kotlin.Int): kotlin.Unit
    public final operator fun setValue(/*0*/ thisRef: kotlin.Any?, /*1*/ prop: kotlin.Any?, /*2*/ s: kotlin.String): kotlin.Unit
    public final operator fun setValue(/*0*/ thisRef: kotlin.Any?, /*1*/ prop: kotlin.reflect.KProperty<*>, /*2*/ s: kotlin.String): kotlin.String
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
