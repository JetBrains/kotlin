RAW_FIR:
FILE: [ResolvedTo(RAW_FIR)] typeParameterOfNonLocalFunctionScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)] <script-typeParameterOfNonLocalFunctionScript.kts>
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public final? [ResolvedTo(RAW_FIR)] class X : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=X] constructor(): R|X| {
                LAZY_super<R|kotlin/Any|>
            }

            public? final? [ResolvedTo(RAW_FIR)] fun <[ResolvedTo(RAW_FIR)] resolveMe> ddd(): R|kotlin/Unit| { LAZY_BLOCK }

        }


IMPORTS:
FILE: [ResolvedTo(IMPORTS)] typeParameterOfNonLocalFunctionScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)] <script-typeParameterOfNonLocalFunctionScript.kts>
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public final? [ResolvedTo(RAW_FIR)] class X : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=X] constructor(): R|X| {
                LAZY_super<R|kotlin/Any|>
            }

            public? final? [ResolvedTo(RAW_FIR)] fun <[ResolvedTo(RAW_FIR)] resolveMe> ddd(): R|kotlin/Unit| { LAZY_BLOCK }

        }


COMPILER_REQUIRED_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] typeParameterOfNonLocalFunctionScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)] <script-typeParameterOfNonLocalFunctionScript.kts>
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public final? [ResolvedTo(RAW_FIR)] class X : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=X] constructor(): R|X| {
                LAZY_super<R|kotlin/Any|>
            }

            public? final? [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] fun <[ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] resolveMe> ddd(): R|kotlin/Unit| { LAZY_BLOCK }

        }


COMPANION_GENERATION:
FILE: [ResolvedTo(IMPORTS)] typeParameterOfNonLocalFunctionScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)] <script-typeParameterOfNonLocalFunctionScript.kts>
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public final? [ResolvedTo(RAW_FIR)] class X : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=X] constructor(): R|X| {
                LAZY_super<R|kotlin/Any|>
            }

            public? final? [ResolvedTo(COMPANION_GENERATION)] fun <[ResolvedTo(COMPANION_GENERATION)] resolveMe> ddd(): R|kotlin/Unit| { LAZY_BLOCK }

        }


SUPER_TYPES:
FILE: [ResolvedTo(IMPORTS)] typeParameterOfNonLocalFunctionScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)] <script-typeParameterOfNonLocalFunctionScript.kts>
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public final? [ResolvedTo(SUPER_TYPES)] class X : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=X] constructor(): R|X| {
                LAZY_super<R|kotlin/Any|>
            }

            public? final? [ResolvedTo(SUPER_TYPES)] fun <[ResolvedTo(SUPER_TYPES)] resolveMe> ddd(): R|kotlin/Unit| { LAZY_BLOCK }

        }


TYPES:
FILE: [ResolvedTo(IMPORTS)] typeParameterOfNonLocalFunctionScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)] <script-typeParameterOfNonLocalFunctionScript.kts>
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public final? [ResolvedTo(TYPES)] class X : R|kotlin/Any| {
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=X] constructor(): R|X| {
                LAZY_super<R|kotlin/Any|>
            }

            public? final? [ResolvedTo(TYPES)] fun <[ResolvedTo(TYPES)] resolveMe> ddd(): R|kotlin/Unit| { LAZY_BLOCK }

        }


STATUS:
FILE: [ResolvedTo(IMPORTS)] typeParameterOfNonLocalFunctionScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)] <script-typeParameterOfNonLocalFunctionScript.kts>
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public final [ResolvedTo(STATUS)] class X : R|kotlin/Any| {
            public [ResolvedTo(STATUS)] [ContainingClassKey=X] constructor(): R|X| {
                LAZY_super<R|kotlin/Any|>
            }

            public final [ResolvedTo(STATUS)] fun <[ResolvedTo(STATUS)] resolveMe> ddd(): R|kotlin/Unit| { LAZY_BLOCK }

        }


EXPECT_ACTUAL_MATCHING:
FILE: [ResolvedTo(IMPORTS)] typeParameterOfNonLocalFunctionScript.kts
    context(<script>@kotlin.script.templates.standard.ScriptTemplateWithArgs)
    SCRIPT: [ResolvedTo(RAW_FIR)] <script-typeParameterOfNonLocalFunctionScript.kts>
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public final [ResolvedTo(STATUS)] class X : R|kotlin/Any| {
            public [ResolvedTo(STATUS)] [ContainingClassKey=X] constructor(): R|X| {
                LAZY_super<R|kotlin/Any|>
            }

            public final [ResolvedTo(EXPECT_ACTUAL_MATCHING)] fun <[ResolvedTo(EXPECT_ACTUAL_MATCHING)] resolveMe> ddd(): R|kotlin/Unit| { LAZY_BLOCK }

        }


CONTRACTS:
FILE: [ResolvedTo(IMPORTS)] typeParameterOfNonLocalFunctionScript.kts
    context(<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|)
    SCRIPT: [ResolvedTo(TYPES)] <script-typeParameterOfNonLocalFunctionScript.kts>
        [ResolvedTo(TYPES)] lval args: R|kotlin/Array<kotlin/String>|

        public final [ResolvedTo(STATUS)] class X : R|kotlin/Any| {
            public [ResolvedTo(STATUS)] [ContainingClassKey=X] constructor(): R|X| {
                LAZY_super<R|kotlin/Any|>
            }

            public final [ResolvedTo(CONTRACTS)] fun <[ResolvedTo(CONTRACTS)] resolveMe> ddd(): R|kotlin/Unit| {
            }

        }


IMPLICIT_TYPES_BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] typeParameterOfNonLocalFunctionScript.kts
    context(<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|)
    SCRIPT: [ResolvedTo(TYPES)] <script-typeParameterOfNonLocalFunctionScript.kts>
        [ResolvedTo(TYPES)] lval args: R|kotlin/Array<kotlin/String>|

        public final [ResolvedTo(STATUS)] class X : R|kotlin/Any| {
            public [ResolvedTo(STATUS)] [ContainingClassKey=X] constructor(): R|X| {
                LAZY_super<R|kotlin/Any|>
            }

            public final [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] fun <[ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] resolveMe> ddd(): R|kotlin/Unit| {
            }

        }


CONSTANT_EVALUATION:
FILE: [ResolvedTo(IMPORTS)] typeParameterOfNonLocalFunctionScript.kts
    context(<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|)
    SCRIPT: [ResolvedTo(TYPES)] <script-typeParameterOfNonLocalFunctionScript.kts>
        [ResolvedTo(TYPES)] lval args: R|kotlin/Array<kotlin/String>|

        public final [ResolvedTo(STATUS)] class X : R|kotlin/Any| {
            public [ResolvedTo(STATUS)] [ContainingClassKey=X] constructor(): R|X| {
                LAZY_super<R|kotlin/Any|>
            }

            public final [ResolvedTo(CONSTANT_EVALUATION)] fun <[ResolvedTo(CONSTANT_EVALUATION)] resolveMe> ddd(): R|kotlin/Unit| {
            }

        }


ANNOTATION_ARGUMENTS:
FILE: [ResolvedTo(IMPORTS)] typeParameterOfNonLocalFunctionScript.kts
    context(<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|)
    SCRIPT: [ResolvedTo(TYPES)] <script-typeParameterOfNonLocalFunctionScript.kts>
        [ResolvedTo(TYPES)] lval args: R|kotlin/Array<kotlin/String>|

        public final [ResolvedTo(STATUS)] class X : R|kotlin/Any| {
            public [ResolvedTo(STATUS)] [ContainingClassKey=X] constructor(): R|X| {
                LAZY_super<R|kotlin/Any|>
            }

            public final [ResolvedTo(ANNOTATION_ARGUMENTS)] fun <[ResolvedTo(ANNOTATION_ARGUMENTS)] resolveMe> ddd(): R|kotlin/Unit| {
            }

        }


BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] typeParameterOfNonLocalFunctionScript.kts
    context(<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|)
    SCRIPT: [ResolvedTo(TYPES)] <script-typeParameterOfNonLocalFunctionScript.kts>
        [ResolvedTo(TYPES)] lval args: R|kotlin/Array<kotlin/String>|

        public final [ResolvedTo(STATUS)] class X : R|kotlin/Any| {
            public [ResolvedTo(STATUS)] [ContainingClassKey=X] constructor(): R|X| {
                LAZY_super<R|kotlin/Any|>
            }

            public final [ResolvedTo(BODY_RESOLVE)] fun <[ResolvedTo(BODY_RESOLVE)] resolveMe> ddd(): R|kotlin/Unit| {
            }

        }


FILE RAW TO BODY:
FILE: [ResolvedTo(BODY_RESOLVE)] typeParameterOfNonLocalFunctionScript.kts
    context(<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] <script-typeParameterOfNonLocalFunctionScript.kts>
        [ResolvedTo(BODY_RESOLVE)] lval args: R|kotlin/Array<kotlin/String>|

        public final [ResolvedTo(BODY_RESOLVE)] class X : R|kotlin/Any| {
            public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=X] constructor(): R|X| {
                super<R|kotlin/Any|>()
            }

            public final [ResolvedTo(BODY_RESOLVE)] fun <[ResolvedTo(BODY_RESOLVE)] resolveMe> ddd(): R|kotlin/Unit| {
            }

        }
