package

internal fun test(): kotlin.Any?

kotlin.data() internal final class P {
    public constructor P(/*0*/ a: kotlin.Int, /*1*/ b: kotlin.Int)
    internal final val a: kotlin.Int
    internal final val b: kotlin.Int
    internal final /*synthesized*/ fun component1(): kotlin.Int
    internal final /*synthesized*/ fun component2(): kotlin.Int
    public final /*synthesized*/ fun copy(/*0*/ a: kotlin.Int = ..., /*1*/ b: kotlin.Int = ...): P
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

kotlin.annotation.annotation() internal final class ann : kotlin.Annotation {
    public constructor ann()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
