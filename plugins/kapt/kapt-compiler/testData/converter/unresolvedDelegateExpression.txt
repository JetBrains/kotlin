/**
 * public final class B : kotlin/Any {
 *
 *   // signature: <init>()V
 *   public constructor()
 *
 *   // field: a$delegate:Lerror/NonExistentClass;
 *   // getter: getA()Ljava/lang/String;
 *   // synthetic method for annotations: getA$annotations()V
 *   public final (* delegated *) val a: kotlin/String
 *     public final (* non-default *) get
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
@kotlin.Suppress(names = {"UNRESOLVED_REFERENCE"})
public final class B implements NonExisting {
    @org.jetbrains.annotations.NotNull()
    private final java.lang.String a$delegate = null;

    public B() {
        super();
    }

    @org.jetbrains.annotations.NotNull()
    public final java.lang.String getA() {
        return null;
    }

    @kotlin.Suppress(names = {"UNRESOLVED_REFERENCE_WRONG_RECEIVER"})
    @java.lang.Deprecated()
    public static void getA$annotations() {
    }
}

////////////////////


/**
 * public open class C : kotlin/Any {
 *
 *   // signature: <init>()V
 *   public constructor()
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
public class C {

    public C() {
        super();
    }
}

////////////////////


/**
 * public final class D : I {
 *
 *   // signature: <init>()V
 *   public constructor()
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
@kotlin.Suppress(names = {"UNRESOLVED_REFERENCE"})
public final class D implements I {

    public D() {
        super();
    }
}

////////////////////


/**
 * public final class E : kotlin/Any {
 *
 *   // signature: <init>()V
 *   public constructor()
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
@kotlin.Suppress(names = {"UNRESOLVED_REFERENCE", "DELEGATION_NOT_TO_INTERFACE"})
public final class E implements NonExisting {

    public E() {
        super();
    }
}

////////////////////


/**
 * public abstract interface I : kotlin/Any {
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
public abstract interface I {
}

////////////////////


/**
 * package {
 *
 *   // signature: flaf(LC;)Ljava/lang/String;
 *   public final fun C.flaf(): kotlin/String
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
public final class UnresolvedDelegateExpressionKt {

    @org.jetbrains.annotations.NotNull()
    public static final java.lang.String flaf(@org.jetbrains.annotations.NotNull()
    C $this$flaf) {
        return null;
    }
}
