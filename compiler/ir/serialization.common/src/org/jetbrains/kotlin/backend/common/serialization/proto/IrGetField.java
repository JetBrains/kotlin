// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: compiler/ir/serialization.common/src/KotlinIr.proto
// Protobuf Java Version: 4.29.3

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField}
 */
public  final class IrGetField extends
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite<
        IrGetField, IrGetField.Builder> implements
    // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField)
    IrGetFieldOrBuilder {
  private IrGetField() {
  }
  private int bitField0_;
  public static final int FIELD_ACCESS_FIELD_NUMBER = 1;
  private org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon fieldAccess_;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon field_access = 1 [features = { ... }</code>
   */
  @java.lang.Override
  public boolean hasFieldAccess() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon field_access = 1 [features = { ... }</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon getFieldAccess() {
    return fieldAccess_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon.getDefaultInstance() : fieldAccess_;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon field_access = 1 [features = { ... }</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setFieldAccess(org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon value) {
    value.getClass();  // minimal bytecode null check
    fieldAccess_ = value;
    bitField0_ |= 0x00000001;
    }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon field_access = 1 [features = { ... }</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
  private void mergeFieldAccess(org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon value) {
    value.getClass();  // minimal bytecode null check
    if (fieldAccess_ != null &&
        fieldAccess_ != org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon.getDefaultInstance()) {
      fieldAccess_ =
        org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon.newBuilder(fieldAccess_).mergeFrom(value).buildPartial();
    } else {
      fieldAccess_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon field_access = 1 [features = { ... }</code>
   */
  private void clearFieldAccess() {  fieldAccess_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static final int ORIGIN_NAME_FIELD_NUMBER = 2;
  private int originName_;
  /**
   * <code>int32 origin_name = 2;</code>
   * @return Whether the originName field is set.
   */
  @java.lang.Override
  public boolean hasOriginName() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>int32 origin_name = 2;</code>
   * @return The originName.
   */
  @java.lang.Override
  public int getOriginName() {
    return originName_;
  }
  /**
   * <code>int32 origin_name = 2;</code>
   * @param value The originName to set.
   */
  private void setOriginName(int value) {
    bitField0_ |= 0x00000002;
    originName_ = value;
  }
  /**
   * <code>int32 origin_name = 2;</code>
   */
  private void clearOriginName() {
    bitField0_ = (bitField0_ & ~0x00000002);
    originName_ = 0;
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField parseFrom(
      java.nio.ByteBuffer data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField parseFrom(
      java.nio.ByteBuffer data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField parseFrom(byte[] data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField parseFrom(
      byte[] data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField parseFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField parseDelimitedFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField}
   */
  public static final class Builder extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField, Builder> implements
      // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField)
      org.jetbrains.kotlin.backend.common.serialization.proto.IrGetFieldOrBuilder {
    // Construct using org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon field_access = 1 [features = { ... }</code>
     */
    @java.lang.Override
    public boolean hasFieldAccess() {
      return instance.hasFieldAccess();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon field_access = 1 [features = { ... }</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon getFieldAccess() {
      return instance.getFieldAccess();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon field_access = 1 [features = { ... }</code>
     */
    public Builder setFieldAccess(org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon value) {
      copyOnWrite();
      instance.setFieldAccess(value);
      return this;
      }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon field_access = 1 [features = { ... }</code>
     */
    public Builder setFieldAccess(
        org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon.Builder builderForValue) {
      copyOnWrite();
      instance.setFieldAccess(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon field_access = 1 [features = { ... }</code>
     */
    public Builder mergeFieldAccess(org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon value) {
      copyOnWrite();
      instance.mergeFieldAccess(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.FieldAccessCommon field_access = 1 [features = { ... }</code>
     */
    public Builder clearFieldAccess() {  copyOnWrite();
      instance.clearFieldAccess();
      return this;
    }

    /**
     * <code>int32 origin_name = 2;</code>
     * @return Whether the originName field is set.
     */
    @java.lang.Override
    public boolean hasOriginName() {
      return instance.hasOriginName();
    }
    /**
     * <code>int32 origin_name = 2;</code>
     * @return The originName.
     */
    @java.lang.Override
    public int getOriginName() {
      return instance.getOriginName();
    }
    /**
     * <code>int32 origin_name = 2;</code>
     * @param value The originName to set.
     * @return This builder for chaining.
     */
    public Builder setOriginName(int value) {
      copyOnWrite();
      instance.setOriginName(value);
      return this;
    }
    /**
     * <code>int32 origin_name = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearOriginName() {
      copyOnWrite();
      instance.clearOriginName();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField)
  }
  private byte memoizedIsInitialized = 2;
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "fieldAccess_",
            "originName_",
          };
          java.lang.String info =
              "\u0004\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0001\u0001\u1509\u0000\u0002" +
              "\u1004\u0001";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        org.jetbrains.kotlin.protobuf.Parser<org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField> parser = PARSER;
        if (parser == null) {
          synchronized (org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return memoizedIsInitialized;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField)
  private static final org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField DEFAULT_INSTANCE;
  static {
    IrGetField defaultInstance = new IrGetField();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.registerDefaultInstance(
      IrGetField.class, defaultInstance);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrGetField getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile org.jetbrains.kotlin.protobuf.Parser<IrGetField> PARSER;

  public static org.jetbrains.kotlin.protobuf.Parser<IrGetField> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
