// IntelliJ API Decompiler stub source generated from a class file
// Implementation of methods is not available

package a

public final class InheritingClasses public constructor() {
    public abstract class A public constructor(c: kotlin.Int = COMPILED_CODE) : a.InheritingClasses.C {
        public open val c: kotlin.Int /* compiled code */ /* hasBackingField: true */

        public open val op: kotlin.Int /* compiled code */ /* hasBackingField: true */

        public abstract val ap: kotlin.Int /* hasBackingField: false */

        public open fun of(): kotlin.Int { /* compiled code */ }

        public abstract fun af(): kotlin.Int
    }

    public open class B public constructor() : a.InheritingClasses.A {
        public open val op: kotlin.Int /* compiled code */ /* hasBackingField: true */

        public open val ap: kotlin.Int /* compiled code */ /* hasBackingField: true */

        public open fun of(): kotlin.Int { /* compiled code */ }

        public open fun af(): kotlin.Int { /* compiled code */ }
    }

    public interface C {
        public abstract val c: kotlin.Int /* hasBackingField: false */
    }

    public interface D<T> : a.InheritingClasses.C {
        public abstract val c: kotlin.Int /* hasBackingField: false */
    }

    public interface E {
    }

    public final class G public constructor() : a.InheritingClasses.B, a.InheritingClasses.C, a.InheritingClasses.D<kotlin.Int>, a.InheritingClasses.E {
    }

    public final class InheritAny public constructor() {
        public interface SomeTrait {
        }

        public interface SomeTrait2 {
        }

        public final class ImplicitAny public constructor() {
        }

        public final class ExplicitAny public constructor() {
        }

        public final class OnlyTrait public constructor() : a.InheritingClasses.InheritAny.SomeTrait {
        }

        public final class OnlyTraits public constructor() : a.InheritingClasses.InheritAny.SomeTrait, a.InheritingClasses.InheritAny.SomeTrait2 {
        }

        public final class TraitWithExplicitAny public constructor() : kotlin.Any, a.InheritingClasses.InheritAny.SomeTrait {
        }

        public final class TraitsWithExplicitAny public constructor() : a.InheritingClasses.InheritAny.SomeTrait2, kotlin.Any, a.InheritingClasses.InheritAny.SomeTrait {
        }
    }

    public abstract class InheritFunctionType public constructor() : (kotlin.Int, kotlin.String) -> kotlin.Int {
    }
}
