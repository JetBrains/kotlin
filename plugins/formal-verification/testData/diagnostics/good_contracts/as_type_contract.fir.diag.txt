/as_type_contract.kt:(152,162): info: Generated Viper text for asOperator:
method global$fun_asOperator$fun_take$T_class_global$class_Foo$return$T_class_global$class_Bar(local$foo: Ref)
  returns (ret$0: Ref)
  requires acc(T_class_global$class_Foo(local$foo), wildcard)
  ensures acc(T_class_global$class_Foo(local$foo), wildcard)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$T_class_global$class_Bar())
  ensures acc(T_class_global$class_Bar(ret$0), wildcard)
  ensures true ==>
    dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$foo), dom$RuntimeType$T_class_global$class_Bar())
{
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$foo), dom$RuntimeType$T_class_global$class_Foo())
  ret$0 := local$foo
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$T_class_global$class_Bar())
  inhale acc(T_class_global$class_Bar(ret$0), wildcard)
  goto label$ret$0
  label label$ret$0
}

/as_type_contract.kt:(307,321): info: Generated Viper text for safeAsOperator:
method global$fun_safeAsOperator$fun_take$T_class_global$class_Foo$return$NT_class_global$class_Bar(local$foo: Ref)
  returns (ret$0: Ref)
  requires acc(T_class_global$class_Foo(local$foo), wildcard)
  ensures acc(T_class_global$class_Foo(local$foo), wildcard)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$nullable(dom$RuntimeType$T_class_global$class_Bar()))
  ensures ret$0 != dom$RuntimeType$nullValue() ==>
    acc(T_class_global$class_Bar(ret$0), wildcard)
  ensures ret$0 != dom$RuntimeType$nullValue() ==>
    dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$foo), dom$RuntimeType$T_class_global$class_Bar())
{
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$foo), dom$RuntimeType$T_class_global$class_Foo())
  ret$0 := local$foo
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$nullable(dom$RuntimeType$T_class_global$class_Bar()))
  inhale ret$0 != dom$RuntimeType$nullValue() ==>
    acc(T_class_global$class_Bar(ret$0), wildcard)
  goto label$ret$0
  label label$ret$0
}

/as_type_contract.kt:(504,508): info: Generated Viper text for getX:
field class_IntHolder$member_x: Ref

method global$fun_getX$fun_take$T_Any$return$NT_Int(local$a: Ref)
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$nullable(dom$RuntimeType$intType()))
  ensures ret$0 != dom$RuntimeType$nullValue() ==>
    dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$a), dom$RuntimeType$T_class_global$class_IntHolder())
  ensures ret$0 == dom$RuntimeType$nullValue() ==>
    !dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$a), dom$RuntimeType$T_class_global$class_IntHolder())
{
  var anonymous$0: Ref
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$a), dom$RuntimeType$anyType())
  if (dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$a), dom$RuntimeType$T_class_global$class_IntHolder())) {
    anonymous$0 := local$a
  } else {
    anonymous$0 := dom$RuntimeType$nullValue()}
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(anonymous$0), dom$RuntimeType$nullable(dom$RuntimeType$T_class_global$class_IntHolder()))
  inhale anonymous$0 != dom$RuntimeType$nullValue() ==>
    acc(T_class_global$class_IntHolder(anonymous$0), wildcard)
  if (anonymous$0 != dom$RuntimeType$nullValue()) {
    var anonymous$1: Ref
    unfold acc(T_class_global$class_IntHolder(anonymous$0), wildcard)
    anonymous$1 := anonymous$0.class_IntHolder$member_x
    ret$0 := anonymous$1
  } else {
    ret$0 := dom$RuntimeType$nullValue()}
  goto label$ret$0
  label label$ret$0
}
