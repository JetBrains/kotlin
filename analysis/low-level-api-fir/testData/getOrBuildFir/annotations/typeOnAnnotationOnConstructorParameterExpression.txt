KT element: KtStringTemplateExpression
FIR element: FirLiteralExpressionImpl
FIR source kind: KtRealSourceElementKind

FIR element rendered:
String(abc)

FIR FILE:
FILE: [ResolvedTo(IMPORTS)] typeOnAnnotationOnConstructorParameterExpression.kt
    public final [ResolvedTo(ANNOTATION_ARGUMENTS)] class ResolveMe : R|kotlin/Any| {
        public [ResolvedTo(ANNOTATION_ARGUMENTS)] [ContainingClassKey=ResolveMe] constructor([ResolvedTo(ANNOTATION_ARGUMENTS)] addCommaWarning: R|@R|Anno|(s = String(abc))  kotlin/Boolean| = LAZY_EXPRESSION): R|ResolveMe| {
            LAZY_super<R|kotlin/Any|>
        }

    }
    @R|kotlin/annotation/Target|[Types](Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.TYPE|) public final [ResolvedTo(STATUS)] annotation class Anno : R|kotlin/Annotation| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Anno] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=/Anno.s] s: R|kotlin/String|): R|Anno| {
            LAZY_super<R|kotlin/Any|>
        }

        public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val s: R|kotlin/String| = R|<local>/s|
            public [ResolvedTo(STATUS)] [ContainingClassKey=Anno] get(): R|kotlin/String|

    }