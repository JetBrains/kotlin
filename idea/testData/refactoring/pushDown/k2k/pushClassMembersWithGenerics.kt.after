interface Z<T>

open class A<T> {

}

class B<S> : A<Z<S>>() {
    // INFO: {"checked": "true"}
    val t1: Z<S>

    // INFO: {"checked": "true"}
    val t2: Z<Z<S>>

    // INFO: {"checked": "true"}
    fun <S> foo(t1: Z<S>, t2: Z<Z<S>>, s1: S, s2: Z<S>): Boolean = true

    // INFO: {"checked": "true"}
    inner class X : Z<Z<S>> {

    }

    // INFO: {"checked": "true"}
    class Y<U> : Z<U> {

    }

}

class C<K> : A<B<K>>() {
    // INFO: {"checked": "true"}
    val t1: B<K>

    // INFO: {"checked": "true"}
    val t2: Z<B<K>>

    // INFO: {"checked": "true"}
    fun <S> foo(t1: B<K>, t2: Z<B<K>>, s1: S, s2: Z<S>): Boolean = true

    // INFO: {"checked": "true"}
    inner class X : Z<B<K>> {

    }

    // INFO: {"checked": "true"}
    class Y<U> : Z<U> {

    }

}