package

public fun annotatedFalse(/*0*/ x: kotlin.Any?): kotlin.Unit
public fun annotatedFalseWithVariable(/*0*/ x: kotlin.Any?, /*1*/ b: kotlin.Boolean): kotlin.Unit
public fun annotatedTrue(/*0*/ x: kotlin.Any?): kotlin.Unit
public fun annotatedTrueWithVariable(/*0*/ x: kotlin.Any?, /*1*/ b: kotlin.Boolean): kotlin.Unit
@kotlin.internal.Returns(value = ConstantValue.FALSE) public fun falseWhenString(/*0*/ @kotlin.internal.IsInstance(klass = kotlin.String::class) x: kotlin.Any?): kotlin.Boolean
@kotlin.internal.Returns(value = ConstantValue.TRUE) public fun trueWhenString(/*0*/ @kotlin.internal.IsInstance(klass = kotlin.String::class) x: kotlin.Any?): kotlin.Boolean
public fun unknownFunction(/*0*/ x: kotlin.Any?): kotlin.Boolean
