// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: compiler/ir/serialization.common/src/KotlinIr.proto
// Protobuf Java Version: 4.29.3

package org.jetbrains.kotlin.backend.common.serialization.proto;

public interface IrTypeOpOrBuilder extends
    // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOp)
    org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOperator operator = 1 [features = { ... }</code>
   * @return Whether the operator field is set.
   */
  boolean hasOperator();
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOperator operator = 1 [features = { ... }</code>
   * @return The operator.
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeOperator getOperator();

  /**
   * <code>int32 operand = 2 [features = { ... }</code>
   * @return Whether the operand field is set.
   */
  boolean hasOperand();
  /**
   * <code>int32 operand = 2 [features = { ... }</code>
   * @return The operand.
   */
  int getOperand();

  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression argument = 3 [features = { ... }</code>
   * @return Whether the argument field is set.
   */
  boolean hasArgument();
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression argument = 3 [features = { ... }</code>
   * @return The argument.
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression getArgument();
}