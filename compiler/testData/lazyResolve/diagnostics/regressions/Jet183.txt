namespace <root>

internal final enum class Foo</*0*/ T : jet.Any?> : jet.Any {
    public final /*constructor*/ fun </*0*/ T : jet.Any?><init>(): Foo<T>
    internal final class object Foo.<class-object-for-Foo> {
        internal final /*constructor*/ fun <init>(): Foo.<class-object-for-Foo>
        internal final val X: Foo.<class-object-for-Foo>.X
    }
}
internal abstract enum class ProtocolState : jet.Any {
    public final /*constructor*/ fun <init>(): ProtocolState
    internal abstract fun signal(): ProtocolState
    internal final class object ProtocolState.<class-object-for-ProtocolState> {
        internal final /*constructor*/ fun <init>(): ProtocolState.<class-object-for-ProtocolState>
        internal final val TALKING: ProtocolState.<class-object-for-ProtocolState>.TALKING
        internal final val WAITING: ProtocolState.<class-object-for-ProtocolState>.WAITING
    }
}
internal final fun box(): jet.Tuple0
