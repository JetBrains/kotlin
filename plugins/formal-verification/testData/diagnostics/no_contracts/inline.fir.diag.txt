/inline.kt:(42,48): info: Generated Viper text for double:
method pkg$$global$double$Tkotlin_Int(local$x: Int) returns (ret: Int)
{
  var local$y: Int
  local$y := local$x + local$x
  ret := local$y
  goto label$ret
  label label$ret
}

/inline.kt:(140,149): info: Generated Viper text for quadruple:
method pkg$$global$quadruple$Tkotlin_Int(local$x: Int) returns (ret: Int)
{
  var anonymous$1: Int
  var anonymous$2: Int
  if (true) {
    var inline$pkg$$global$double$Tkotlin_Int$local$y: Int
    inline$pkg$$global$double$Tkotlin_Int$local$y := local$x + local$x
    anonymous$1 := inline$pkg$$global$double$Tkotlin_Int$local$y
    goto inline$pkg$$global$double$Tkotlin_Int$label$ret
    label inline$pkg$$global$double$Tkotlin_Int$label$ret
  }
  if (true) {
    var inline$pkg$$global$double$Tkotlin_Int$local$y: Int
    inline$pkg$$global$double$Tkotlin_Int$local$y := local$x + local$x
    anonymous$2 := inline$pkg$$global$double$Tkotlin_Int$local$y
    goto inline$pkg$$global$double$Tkotlin_Int$label$ret
    label inline$pkg$$global$double$Tkotlin_Int$label$ret
  }
  ret := anonymous$1 + anonymous$2
  goto label$ret
  label label$ret
}

/inline.kt:(225,234): info: Generated Viper text for branching:
method pkg$$global$branching$Tkotlin_Boolean(local$b: Bool)
  returns (ret: Int)
{
  if (local$b) {
    ret := 1
    goto label$ret
  } else {
    ret := 0
    goto label$ret
  }
  label label$ret
}

/inline.kt:(365,378): info: Generated Viper text for use_branching:
method pkg$$global$use_branching$() returns (ret: Int)
{
  var anonymous$1: Int
  var anonymous$3: Int
  if (true) {
    var anonymous$2: Bool
    anonymous$2 := false
    if (anonymous$2) {
      anonymous$1 := 1
      goto inline$pkg$$global$branching$Tkotlin_Boolean$label$ret
    } else {
      anonymous$1 := 0
      goto inline$pkg$$global$branching$Tkotlin_Boolean$label$ret
    }
    label inline$pkg$$global$branching$Tkotlin_Boolean$label$ret
  }
  if (true) {
    var anonymous$4: Bool
    anonymous$4 := true
    if (anonymous$4) {
      anonymous$3 := 1
      goto inline$pkg$$global$branching$Tkotlin_Boolean$label$ret
    } else {
      anonymous$3 := 0
      goto inline$pkg$$global$branching$Tkotlin_Boolean$label$ret
    }
    label inline$pkg$$global$branching$Tkotlin_Boolean$label$ret
  }
  ret := anonymous$1 + anonymous$3
  goto label$ret
  label label$ret
}
