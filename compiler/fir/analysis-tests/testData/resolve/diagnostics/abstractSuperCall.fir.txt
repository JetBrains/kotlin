FILE: abstractSuperCall.kt
    public open class C : R|kotlin/Any| {
        public constructor(): R|C| {
            super<R|kotlin/Any|>()
        }

        public open val x: R|kotlin/Int| = Int(10)
            public get(): R|kotlin/Int|

        public final fun h(): R|kotlin/Unit| {
        }

    }
    public abstract class A : R|C| {
        public constructor(): R|A| {
            super<R|C|>()
        }

        public open override val x: R|kotlin/Int| = Int(20)
            public get(): R|kotlin/Int|

        public abstract val y: R|kotlin/Int|
            public get(): R|kotlin/Int|

        public abstract fun f(): R|kotlin/Unit|

        public final fun t(): R|kotlin/Unit| {
            this@R|/A|.super<R|C|>.R|/C.h|()
            this@R|/A|.super<R|C|>.R|/C.x|
        }

    }
    public final class B : R|A| {
        public constructor(): R|B| {
            super<R|A|>()
        }

        public final override fun f(): R|kotlin/Unit| {
        }

        public final fun g(): R|kotlin/Unit| {
            this@R|/B|.super<R|A|>.R|/A.f|()
            this@R|/B|.super<R|A|>.R|/A.t|()
            this@R|/B|.super<R|A|>.R|/A.x|
            this@R|/B|.super<R|A|>.R|/A.y|
        }

    }
    public abstract class J : R|A| {
        public constructor(): R|J| {
            super<R|A|>()
        }

        public final fun r(): R|kotlin/Unit| {
            this@R|/J|.super<R|A|>.R|/A.f|()
            this@R|/J|.super<R|A|>.R|/A.t|()
            this@R|/J|.super<R|A|>.R|/A.x|
            this@R|/J|.super<R|A|>.R|/A.y|
        }

    }
