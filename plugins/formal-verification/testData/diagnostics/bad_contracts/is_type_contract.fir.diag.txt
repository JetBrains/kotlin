/is_type_contract.kt:(121,142): info: Generated Viper text for unverifiableTypeCheck:
field pkg$kotlin$class_String$member_length: Int

method global$fun_unverifiableTypeCheck$fun_take$NT_Int$return$T_Boolean(local$x: dom$Nullable[Int])
  returns (ret$0: Bool)
  ensures true ==>
    dom$Type$isSubtype((dom$TypeOf$typeOf(local$x): dom$Type), dom$Type$Unit())
{
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$x): dom$Type), dom$Type$special$Nullable(dom$Type$Int()))
  ret$0 := dom$Type$isSubtype((dom$TypeOf$typeOf(local$x): dom$Type), dom$Type$pkg$kotlin$global$class_String())
  goto label$ret$0
  label label$ret$0
}

method pkg$kotlin$class_CharSequence$getter_length(this: Ref)
  returns (ret: Int)


/is_type_contract.kt:(186,215): warning: Cannot verify that if the function returns then x is Unit.

/is_type_contract.kt:(289,311): info: Generated Viper text for nullableNotNonNullable:
method global$fun_nullableNotNonNullable$fun_take$NT_Int$return$T_Unit(local$x: dom$Nullable[Int])
  returns (ret$0: dom$Unit)
  ensures true ==>
    dom$Type$isSubtype((dom$TypeOf$typeOf(local$x): dom$Type), dom$Type$Int())
{
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$x): dom$Type), dom$Type$special$Nullable(dom$Type$Int()))
  label label$ret$0
}

/is_type_contract.kt:(346,374): warning: Cannot verify that if the function returns then x is Int.
