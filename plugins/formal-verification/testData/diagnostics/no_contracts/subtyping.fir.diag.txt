/subtyping.kt:(23,33): info: Generated Viper text for smart_cast:
method global$fun_smart_cast$fun_take$NT_Int$return$T_Int(local$x: Ref)
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$intType())
{
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$x), dom$RuntimeType$nullable(dom$RuntimeType$intType()))
  if (local$x == dom$RuntimeType$nullValue()) {
    ret$0 := dom$RuntimeType$intToRef(0)
    goto label$ret$0
  } else {
    ret$0 := local$x
    goto label$ret$0
  }
  label label$ret$0
}

/subtyping.kt:(131,147): info: Generated Viper text for return_subtyping:
method global$fun_return_subtyping$fun_take$$return$NT_Int()
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$nullable(dom$RuntimeType$intType()))
{
  ret$0 := dom$RuntimeType$intToRef(0)
  goto label$ret$0
  label label$ret$0
}

/subtyping.kt:(178,198): info: Generated Viper text for assignment_subtyping:
method global$fun_assignment_subtyping$fun_take$$return$T_Unit()
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
{
  var local0$x: Ref
  ret$0 := dom$RuntimeType$unitValue()
  local0$x := dom$RuntimeType$boolToRef(false)
  local0$x := dom$RuntimeType$boolToRef(true)
  label label$ret$0
}

/subtyping.kt:(251,269): info: Generated Viper text for nullable_parameter:
method global$fun_nullable_parameter$fun_take$NT_Boolean$return$T_Unit(local$b: Ref)
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
{
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$b), dom$RuntimeType$nullable(dom$RuntimeType$boolType()))
  ret$0 := dom$RuntimeType$unitValue()
  label label$ret$0
}

/subtyping.kt:(291,319): info: Generated Viper text for function_parameter_subtyping:
method global$fun_function_parameter_subtyping$fun_take$$return$T_Unit()
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
{
  var anonymous$0: Ref
  ret$0 := dom$RuntimeType$unitValue()
  anonymous$0 := global$fun_nullable_parameter$fun_take$NT_Boolean$return$T_Unit(dom$RuntimeType$boolToRef(false))
  label label$ret$0
}

method global$fun_nullable_parameter$fun_take$NT_Boolean$return$T_Unit(local$b: Ref)
  returns (ret: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$unitType())
