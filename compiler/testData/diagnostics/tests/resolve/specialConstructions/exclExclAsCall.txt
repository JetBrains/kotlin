package

package a {
    internal fun doInt(/*0*/ i: kotlin.Int): kotlin.Int
    internal fun doList(/*0*/ l: kotlin.List<kotlin.Int>): kotlin.List<kotlin.Int>
    internal fun </*0*/ T : a.A> emptyNullableListOfA(): kotlin.List<T>?
    internal fun </*0*/ T> id(/*0*/ t: T): T
    internal fun </*0*/ T> strangeNullableList(/*0*/ f: (T) -> kotlin.Unit): kotlin.List<T>?
    internal fun testDataFlowInfoAfterExclExcl(/*0*/ a: kotlin.Int?): kotlin.Unit
    internal fun testExclExcl(): kotlin.Unit
    internal fun testUnnecessaryExclExcl(/*0*/ a: kotlin.Int): kotlin.Unit

    internal interface A {
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}
