// CHECK:
//   Mangled name: A
//   Public signature: /A|null[0]
abstract class A : HashSet<Int>, SequencedSet<Int> {
  // CHECK:
  //   Mangled name: A#<init>(){}
  //   Public signature: /A.<init>|-5645683436151566731[0]
  //   Public signature debug description: <init>(){}
  constructor() /* primary */

  // CHECK JVM_IR:
  //   Mangled name: A#add(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /A.add|7559962077055454748[0]
  //   Public signature debug description: add(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun add(p0: @EnhancedNullability Int): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#addAll(kotlin.collections.Collection<out|kotlin.Int{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /A.addAll|-8388196230555083661[0]
  //   Public signature debug description: addAll(kotlin.collections.Collection<out|kotlin.Int{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun addAll(p0: @EnhancedNullability Collection<out @EnhancedNullability Int>): Boolean

  // CHECK:
  //   Mangled name: A#addFirst(kotlin.Int?){}
  //   Public signature: /A.addFirst|-2173470440078379794[0]
  //   Public signature debug description: addFirst(kotlin.Int?){}
  /* fake */ override fun addFirst(p0: Int?): Unit

  // CHECK:
  //   Mangled name: A#addLast(kotlin.Int?){}
  //   Public signature: /A.addLast|-5644727607669257675[0]
  //   Public signature debug description: addLast(kotlin.Int?){}
  /* fake */ override fun addLast(p0: Int?): Unit

  // CHECK:
  //   Mangled name: A#clear(){}
  //   Public signature: /A.clear|-6446868449915108923[0]
  //   Public signature debug description: clear(){}
  /* fake */ override fun clear(): Unit

  // CHECK JVM_IR:
  //   Mangled name: A#clone(){}kotlin.Any{EnhancedNullability}
  //   Public signature: /A.clone|178802004086941196[0]
  //   Public signature debug description: clone(){}kotlin.Any{EnhancedNullability}
  /* fake */ override fun clone(): @EnhancedNullability Any

  // CHECK JVM_IR:
  //   Mangled name: A#contains(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /A.contains|3736388240191289860[0]
  //   Public signature debug description: contains(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override operator fun contains(p0: @EnhancedNullability Int): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#containsAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  //   Public signature: /A.containsAll|-6765067201579764726[0]
  //   Public signature debug description: containsAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  /* fake */ override fun containsAll(p0: Collection<@EnhancedNullability Int>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#equals(kotlin.Any?{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /A.equals|4126616015386471185[0]
  //   Public signature debug description: equals(kotlin.Any?{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override operator fun equals(p0: @EnhancedNullability Any?): Boolean

  // CHECK:
  //   Mangled name: A#forEach(java.util.function.Consumer<in|kotlin.Int?>?){}
  //   Public signature: /A.forEach|5766969768772302175[0]
  //   Public signature debug description: forEach(java.util.function.Consumer<in|kotlin.Int?>?){}
  /* fake */ override fun forEach(p0: Consumer<in Int?>?): Unit

  // CHECK JVM_IR:
  //   Mangled name: A#getFirst(){}kotlin.Int?
  //   Public signature: /A.getFirst|-7242180087307551226[0]
  //   Public signature debug description: getFirst(){}kotlin.Int?
  /* fake */ override fun getFirst(): Int?

  // CHECK JVM_IR:
  //   Mangled name: A#getLast(){}kotlin.Int?
  //   Public signature: /A.getLast|9162126560290473313[0]
  //   Public signature debug description: getLast(){}kotlin.Int?
  /* fake */ override fun getLast(): Int?

  // CHECK JVM_IR:
  //   Mangled name: A#hashCode(){}kotlin.Int
  //   Public signature: /A.hashCode|-8048879360829830756[0]
  //   Public signature debug description: hashCode(){}kotlin.Int
  /* fake */ override fun hashCode(): Int

  // CHECK JVM_IR:
  //   Mangled name: A#isEmpty(){}kotlin.Boolean
  //   Public signature: /A.isEmpty|-626562167393617703[0]
  //   Public signature debug description: isEmpty(){}kotlin.Boolean
  /* fake */ override fun isEmpty(): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#iterator(){}kotlin.collections.MutableIterator<kotlin.Int{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /A.iterator|115627760567581658[0]
  //   Public signature debug description: iterator(){}kotlin.collections.MutableIterator<kotlin.Int{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override operator fun iterator(): @EnhancedNullability MutableIterator<@EnhancedNullability Int>

  // CHECK JVM_IR:
  //   Mangled name: A#parallelStream(){}java.util.stream.Stream<kotlin.Int?{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /A.parallelStream|-8395108522211591010[0]
  //   Public signature debug description: parallelStream(){}java.util.stream.Stream<kotlin.Int?{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override fun parallelStream(): @EnhancedNullability Stream<@EnhancedNullability Int?>

  // CHECK JVM_IR:
  //   Mangled name: A#remove(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /A.remove|2933193249427016334[0]
  //   Public signature debug description: remove(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun remove(p0: @EnhancedNullability Int): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#removeAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  //   Public signature: /A.removeAll|-5493620261823900507[0]
  //   Public signature debug description: removeAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  /* fake */ override fun removeAll(p0: Collection<@EnhancedNullability Int>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#removeFirst(){}kotlin.Int?
  //   Public signature: /A.removeFirst|2188100118001713249[0]
  //   Public signature debug description: removeFirst(){}kotlin.Int?
  /* fake */ override fun removeFirst(): Int?

  // CHECK JVM_IR:
  //   Mangled name: A#removeIf(java.util.function.Predicate<in|kotlin.Int?{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /A.removeIf|-6050971756324174635[0]
  //   Public signature debug description: removeIf(java.util.function.Predicate<in|kotlin.Int?{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun removeIf(p0: @EnhancedNullability Predicate<in @EnhancedNullability Int?>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#removeLast(){}kotlin.Int?
  //   Public signature: /A.removeLast|-8509429199438418208[0]
  //   Public signature debug description: removeLast(){}kotlin.Int?
  /* fake */ override fun removeLast(): Int?

  // CHECK JVM_IR:
  //   Mangled name: A#retainAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  //   Public signature: /A.retainAll|-3550913358824719637[0]
  //   Public signature debug description: retainAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  /* fake */ override fun retainAll(p0: Collection<@EnhancedNullability Int>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: A#reversed(){}java.util.SequencedSet<kotlin.Int?>?
  //   Public signature: /A.reversed|687960305119769538[0]
  //   Public signature debug description: reversed(){}java.util.SequencedSet<kotlin.Int?>?
  abstract /* fake */ override fun reversed(): SequencedSet<Int?>?

  // CHECK JVM_IR:
  //   Mangled name: A#stream(){}java.util.stream.Stream<kotlin.Int?{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /A.stream|1565529915260485250[0]
  //   Public signature debug description: stream(){}java.util.stream.Stream<kotlin.Int?{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override fun stream(): @EnhancedNullability Stream<@EnhancedNullability Int?>

  // CHECK JVM_IR:
  //   Mangled name: A#toArray(){}kotlin.Array<out|kotlin.Any?>?
  //   Public signature: /A.toArray|-8468800257910341540[0]
  //   Public signature debug description: toArray(){}kotlin.Array<out|kotlin.Any?>?
  /* fake */ override fun toArray(): Array<out Any?>?

  // CHECK JVM_IR:
  //   Mangled name: A#toArray(kotlin.Array<out|0:0?>?){0ยง<kotlin.Any?>}kotlin.Array<out|0:0?>?
  //   Public signature: /A.toArray|-7248906015406159030[0]
  //   Public signature debug description: toArray(kotlin.Array<out|0:0?>?){0ยง<kotlin.Any?>}kotlin.Array<out|0:0?>?
  /* fake */ override fun <T : Any?> toArray(p0: Array<out T?>?): Array<out T?>?

  // CHECK JVM_IR:
  //   Mangled name: A#toArray(java.util.function.IntFunction<kotlin.Array<out|0:0?>?>?){0ยง<kotlin.Any?>}kotlin.Array<out|0:0?>?
  //   Public signature: /A.toArray|-1022881482544918047[0]
  //   Public signature debug description: toArray(java.util.function.IntFunction<kotlin.Array<out|0:0?>?>?){0ยง<kotlin.Any?>}kotlin.Array<out|0:0?>?
  /* fake */ override fun <T : Any?> toArray(p0: IntFunction<Array<out T?>?>?): Array<out T?>?

  // CHECK JVM_IR:
  //   Mangled name: A#toString(){}kotlin.String{EnhancedNullability}
  //   Public signature: /A.toString|7581629773206850948[0]
  //   Public signature debug description: toString(){}kotlin.String{EnhancedNullability}
  /* fake */ override fun toString(): @EnhancedNullability String

  // CHECK JVM_IR:
  //   Mangled name: A#spliterator(){}java.util.Spliterator<kotlin.Int>
  //   Public signature: /A.spliterator|5735513268042072608[0]
  //   Public signature debug description: spliterator(){}java.util.Spliterator<kotlin.Int>
  override fun spliterator(): Spliterator<Int>

  // CHECK:
  //   Mangled name: A{}size
  //   Public signature: /A.size|-6253659984320132064[0]
  //   Public signature debug description: {}size
  /* fake */ override val size: Int
    // CHECK JVM_IR:
    //   Mangled name: A#<get-size>(){}kotlin.Int
    //   Public signature: /A.size.<get-size>|-3941649985161900780[0]
    //   Public signature debug description: <get-size>(){}kotlin.Int
    /* fake */ override get(): Int

}

// CHECK:
//   Mangled name: B
//   Public signature: /B|null[0]
class B : HashSet<Int>, SequencedSet<Int> {
  // CHECK:
  //   Mangled name: B#<init>(){}
  //   Public signature: /B.<init>|-5645683436151566731[0]
  //   Public signature debug description: <init>(){}
  constructor() /* primary */

  // CHECK JVM_IR:
  //   Mangled name: B#add(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /B.add|7559962077055454748[0]
  //   Public signature debug description: add(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun add(p0: @EnhancedNullability Int): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#addAll(kotlin.collections.Collection<out|kotlin.Int{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /B.addAll|-8388196230555083661[0]
  //   Public signature debug description: addAll(kotlin.collections.Collection<out|kotlin.Int{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun addAll(p0: @EnhancedNullability Collection<out @EnhancedNullability Int>): Boolean

  // CHECK:
  //   Mangled name: B#addFirst(kotlin.Int?){}
  //   Public signature: /B.addFirst|-2173470440078379794[0]
  //   Public signature debug description: addFirst(kotlin.Int?){}
  /* fake */ override fun addFirst(p0: Int?): Unit

  // CHECK:
  //   Mangled name: B#addLast(kotlin.Int?){}
  //   Public signature: /B.addLast|-5644727607669257675[0]
  //   Public signature debug description: addLast(kotlin.Int?){}
  /* fake */ override fun addLast(p0: Int?): Unit

  // CHECK:
  //   Mangled name: B#clear(){}
  //   Public signature: /B.clear|-6446868449915108923[0]
  //   Public signature debug description: clear(){}
  /* fake */ override fun clear(): Unit

  // CHECK JVM_IR:
  //   Mangled name: B#clone(){}kotlin.Any{EnhancedNullability}
  //   Public signature: /B.clone|178802004086941196[0]
  //   Public signature debug description: clone(){}kotlin.Any{EnhancedNullability}
  /* fake */ override fun clone(): @EnhancedNullability Any

  // CHECK JVM_IR:
  //   Mangled name: B#contains(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /B.contains|3736388240191289860[0]
  //   Public signature debug description: contains(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override operator fun contains(p0: @EnhancedNullability Int): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#containsAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  //   Public signature: /B.containsAll|-6765067201579764726[0]
  //   Public signature debug description: containsAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  /* fake */ override fun containsAll(p0: Collection<@EnhancedNullability Int>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#equals(kotlin.Any?{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /B.equals|4126616015386471185[0]
  //   Public signature debug description: equals(kotlin.Any?{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override operator fun equals(p0: @EnhancedNullability Any?): Boolean

  // CHECK:
  //   Mangled name: B#forEach(java.util.function.Consumer<in|kotlin.Int?>?){}
  //   Public signature: /B.forEach|5766969768772302175[0]
  //   Public signature debug description: forEach(java.util.function.Consumer<in|kotlin.Int?>?){}
  /* fake */ override fun forEach(p0: Consumer<in Int?>?): Unit

  // CHECK JVM_IR:
  //   Mangled name: B#getFirst(){}kotlin.Int?
  //   Public signature: /B.getFirst|-7242180087307551226[0]
  //   Public signature debug description: getFirst(){}kotlin.Int?
  /* fake */ override fun getFirst(): Int?

  // CHECK JVM_IR:
  //   Mangled name: B#getLast(){}kotlin.Int?
  //   Public signature: /B.getLast|9162126560290473313[0]
  //   Public signature debug description: getLast(){}kotlin.Int?
  /* fake */ override fun getLast(): Int?

  // CHECK JVM_IR:
  //   Mangled name: B#hashCode(){}kotlin.Int
  //   Public signature: /B.hashCode|-8048879360829830756[0]
  //   Public signature debug description: hashCode(){}kotlin.Int
  /* fake */ override fun hashCode(): Int

  // CHECK JVM_IR:
  //   Mangled name: B#isEmpty(){}kotlin.Boolean
  //   Public signature: /B.isEmpty|-626562167393617703[0]
  //   Public signature debug description: isEmpty(){}kotlin.Boolean
  /* fake */ override fun isEmpty(): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#iterator(){}kotlin.collections.MutableIterator<kotlin.Int{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /B.iterator|115627760567581658[0]
  //   Public signature debug description: iterator(){}kotlin.collections.MutableIterator<kotlin.Int{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override operator fun iterator(): @EnhancedNullability MutableIterator<@EnhancedNullability Int>

  // CHECK JVM_IR:
  //   Mangled name: B#parallelStream(){}java.util.stream.Stream<kotlin.Int?{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /B.parallelStream|-8395108522211591010[0]
  //   Public signature debug description: parallelStream(){}java.util.stream.Stream<kotlin.Int?{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override fun parallelStream(): @EnhancedNullability Stream<@EnhancedNullability Int?>

  // CHECK JVM_IR:
  //   Mangled name: B#remove(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /B.remove|2933193249427016334[0]
  //   Public signature debug description: remove(kotlin.Int{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun remove(p0: @EnhancedNullability Int): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#removeAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  //   Public signature: /B.removeAll|-5493620261823900507[0]
  //   Public signature debug description: removeAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  /* fake */ override fun removeAll(p0: Collection<@EnhancedNullability Int>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#removeFirst(){}kotlin.Int?
  //   Public signature: /B.removeFirst|2188100118001713249[0]
  //   Public signature debug description: removeFirst(){}kotlin.Int?
  /* fake */ override fun removeFirst(): Int?

  // CHECK JVM_IR:
  //   Mangled name: B#removeIf(java.util.function.Predicate<in|kotlin.Int?{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  //   Public signature: /B.removeIf|-6050971756324174635[0]
  //   Public signature debug description: removeIf(java.util.function.Predicate<in|kotlin.Int?{EnhancedNullability}>{EnhancedNullability}){}kotlin.Boolean
  /* fake */ override fun removeIf(p0: @EnhancedNullability Predicate<in @EnhancedNullability Int?>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#removeLast(){}kotlin.Int?
  //   Public signature: /B.removeLast|-8509429199438418208[0]
  //   Public signature debug description: removeLast(){}kotlin.Int?
  /* fake */ override fun removeLast(): Int?

  // CHECK JVM_IR:
  //   Mangled name: B#retainAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  //   Public signature: /B.retainAll|-3550913358824719637[0]
  //   Public signature debug description: retainAll(kotlin.collections.Collection<kotlin.Int{EnhancedNullability}>){}kotlin.Boolean
  /* fake */ override fun retainAll(p0: Collection<@EnhancedNullability Int>): Boolean

  // CHECK JVM_IR:
  //   Mangled name: B#stream(){}java.util.stream.Stream<kotlin.Int?{EnhancedNullability}>{EnhancedNullability}
  //   Public signature: /B.stream|1565529915260485250[0]
  //   Public signature debug description: stream(){}java.util.stream.Stream<kotlin.Int?{EnhancedNullability}>{EnhancedNullability}
  /* fake */ override fun stream(): @EnhancedNullability Stream<@EnhancedNullability Int?>

  // CHECK JVM_IR:
  //   Mangled name: B#toArray(){}kotlin.Array<out|kotlin.Any?>?
  //   Public signature: /B.toArray|-8468800257910341540[0]
  //   Public signature debug description: toArray(){}kotlin.Array<out|kotlin.Any?>?
  /* fake */ override fun toArray(): Array<out Any?>?

  // CHECK JVM_IR:
  //   Mangled name: B#toArray(kotlin.Array<out|0:0?>?){0ยง<kotlin.Any?>}kotlin.Array<out|0:0?>?
  //   Public signature: /B.toArray|-7248906015406159030[0]
  //   Public signature debug description: toArray(kotlin.Array<out|0:0?>?){0ยง<kotlin.Any?>}kotlin.Array<out|0:0?>?
  /* fake */ override fun <T : Any?> toArray(p0: Array<out T?>?): Array<out T?>?

  // CHECK JVM_IR:
  //   Mangled name: B#toArray(java.util.function.IntFunction<kotlin.Array<out|0:0?>?>?){0ยง<kotlin.Any?>}kotlin.Array<out|0:0?>?
  //   Public signature: /B.toArray|-1022881482544918047[0]
  //   Public signature debug description: toArray(java.util.function.IntFunction<kotlin.Array<out|0:0?>?>?){0ยง<kotlin.Any?>}kotlin.Array<out|0:0?>?
  /* fake */ override fun <T : Any?> toArray(p0: IntFunction<Array<out T?>?>?): Array<out T?>?

  // CHECK JVM_IR:
  //   Mangled name: B#toString(){}kotlin.String{EnhancedNullability}
  //   Public signature: /B.toString|7581629773206850948[0]
  //   Public signature debug description: toString(){}kotlin.String{EnhancedNullability}
  /* fake */ override fun toString(): @EnhancedNullability String

  // CHECK JVM_IR:
  //   Mangled name: B#reversed(){}java.util.SequencedSet<kotlin.Int>
  //   Public signature: /B.reversed|-4413749268436593978[0]
  //   Public signature debug description: reversed(){}java.util.SequencedSet<kotlin.Int>
  override fun reversed(): SequencedSet<Int>

  // CHECK JVM_IR:
  //   Mangled name: B#spliterator(){}java.util.Spliterator<kotlin.Int>
  //   Public signature: /B.spliterator|5735513268042072608[0]
  //   Public signature debug description: spliterator(){}java.util.Spliterator<kotlin.Int>
  override fun spliterator(): Spliterator<Int>

  // CHECK:
  //   Mangled name: B{}size
  //   Public signature: /B.size|-6253659984320132064[0]
  //   Public signature debug description: {}size
  /* fake */ override val size: Int
    // CHECK JVM_IR:
    //   Mangled name: B#<get-size>(){}kotlin.Int
    //   Public signature: /B.size.<get-size>|-3941649985161900780[0]
    //   Public signature debug description: <get-size>(){}kotlin.Int
    /* fake */ override get(): Int

}

// CHECK:
//   Mangled name: #test(A;B){}
//   Public signature: /test|-2533013708701322011[0]
//   Public signature debug description: test(A;B){}
fun test(a: A, b: B): Unit
