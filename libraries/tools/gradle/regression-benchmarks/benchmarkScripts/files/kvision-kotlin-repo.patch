diff --git a/build.gradle.kts b/build.gradle.kts
index a2eb037fd8..5e6896deed 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -1,6 +1,5 @@
 plugins {
-    val kotlinVersion: String by System.getProperties()
-    kotlin("plugin.serialization") version kotlinVersion
+    kotlin("plugin.serialization")
     kotlin("multiplatform")
     id("maven-publish")
     id("signing")
@@ -17,7 +17,7 @@ allprojects {
 }

 // Versions
-val kotlinVersion: String by System.getProperties()
+val kotlinVersion: String by extra
 val serializationVersion: String by project
 val coroutinesVersion: String by project

diff --git a/buildSrc/build.gradle.kts b/buildSrc/build.gradle.kts
index d0ef18b67b..ae67887584 100644
--- a/buildSrc/build.gradle.kts
+++ b/buildSrc/build.gradle.kts
@@ -3,12 +3,15 @@ plugins {
 }

 repositories {
+    mavenLocal()
     mavenCentral()
     gradlePluginPortal()
 }

+val kotlinVersion: String by extra
+
 dependencies {
-    implementation("org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.23")
+    implementation("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
     implementation("io.github.gradle-nexus:publish-plugin:1.3.0")
     implementation("org.jetbrains.dokka:dokka-gradle-plugin:1.9.20")
     implementation(gradleApi())
diff --git a/buildSrc/gradle.properties b/buildSrc/gradle.properties
new file mode 100644
index 0000000000..b67c10f362
--- /dev/null
+++ b/buildSrc/gradle.properties
@@ -0,0 +1 @@
+kotlinVersion=<kotlin_version>
diff --git a/buildSrc/src/main/kotlin/Shared.kt b/buildSrc/src/main/kotlin/Shared.kt
index 59bf038735..0e0929a594 100644
--- a/buildSrc/src/main/kotlin/Shared.kt
+++ b/buildSrc/src/main/kotlin/Shared.kt
@@ -16,8 +16,8 @@ import org.jetbrains.kotlin.gradle.targets.js.dsl.KotlinJsTargetDsl

 fun Project.repositories() {
     repositories {
-        mavenCentral()
         mavenLocal()
+        mavenCentral()
     }
 }

diff --git a/gradle.properties b/gradle.properties
index 9315dcac95..d5fabb822c 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,7 +1,7 @@
 group=io.kvision
 versionNumber=7.4.2

-systemProp.kotlinVersion=1.9.23
+kotlinVersion=<kotlin_version>
 javaVersion=17
 coroutinesVersion=1.8.0
 serializationVersion=1.6.3
diff --git a/settings.gradle.kts b/settings.gradle.kts
index 901058aae2..7c338f6ba2 100644
--- a/settings.gradle.kts
+++ b/settings.gradle.kts
@@ -1,8 +1,13 @@
 pluginManagement {
     repositories {
+        mavenLocal()
         gradlePluginPortal()
         mavenCentral()
-        mavenLocal()
+    }
+
+    val kotlinVersion: String by settings
+    plugins {
+        id("org.jetbrains.kotlin.plugin.serialization") version kotlinVersion
     }
 }
 rootProject.name = "kvision"
diff --git a/kvision-modules/kvision-chart/src/jsMain/kotlin/io/kvision/chart/js/Chart.kt b/kvision-modules/kvision-chart/src/jsMain/kotlin/io/kvision/chart/js/Chart.kt
index dc5664b754..51cc73cf84 100644
--- a/kvision-modules/kvision-chart/src/jsMain/kotlin/io/kvision/chart/js/Chart.kt
+++ b/kvision-modules/kvision-chart/src/jsMain/kotlin/io/kvision/chart/js/Chart.kt
@@ -54,7 +54,7 @@ external interface ControllerDatasetOptions : ParsingOptions {
 }

 external interface BarControllerDatasetOptions : ControllerDatasetOptions,
-    ScriptableAndArrayOptions<BarOptions, ScriptableContext>, AnimationOptions {
+    /*ScriptableAndArrayOptions<BarOptions, ScriptableContext>,*/ AnimationOptions {
     var xAxisID: String
     var yAxisID: String
     var barPercentage: Number
@@ -77,8 +77,8 @@ external interface BarControllerChartOptions {

 external var BarController: ChartComponent /* ChartComponent & `T$1` */

-external interface BubbleControllerDatasetOptions : ControllerDatasetOptions,
-    ScriptableAndArrayOptions<PointOptions, ScriptableContext>
+external interface BubbleControllerDatasetOptions : ControllerDatasetOptions/*,
+    ScriptableAndArrayOptions<PointOptions, ScriptableContext>*/

 external interface BubbleDataPoint {
     var x: Number
@@ -89,7 +89,7 @@ external interface BubbleDataPoint {
 external var BubbleController: ChartComponent /* ChartComponent & `T$2` */

 external interface LineControllerDatasetOptions : ControllerDatasetOptions,
-    ScriptableAndArrayOptions<PointPrefixedOptions, ScriptableContext>,
+    /*ScriptableAndArrayOptions<PointPrefixedOptions, ScriptableContext>,*/
     AnimationOptions {
     var xAxisID: String
     var yAxisID: String
@@ -116,7 +116,7 @@ external interface ScatterDataPoint {
 external var ScatterController: ChartComponent /* ChartComponent & `T$4` */

 external interface DoughnutControllerDatasetOptions : ControllerDatasetOptions,
-    ScriptableAndArrayOptions<ArcOptions, ScriptableContext>,
+    /*ScriptableAndArrayOptions<ArcOptions, ScriptableContext>,*/
     AnimationOptions {
     var circumference: Number
     var rotation: Number
@@ -181,7 +181,7 @@ external interface PolarAreaController : DoughnutController {
 }

 external interface RadarControllerDatasetOptions : ControllerDatasetOptions,
-    ScriptableAndArrayOptions<PointOptions /* PointOptions & PointHoverOptions & PointPrefixedOptions & PointPrefixedHoverOptions */, ScriptableContext>,
+    /*ScriptableAndArrayOptions<PointOptions, PointOptions & PointHoverOptions & PointPrefixedOptions & PointPrefixedHoverOptions, ScriptableContext>,*/
     AnimationOptions {
     var xAxisID: String
     var yAxisID: String
diff --git a/kvision-modules/kvision-server-javalin/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt b/kvision-modules/kvision-server-javalin/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
index 38e3fb757e..21e286c299 100644
--- a/kvision-modules/kvision-server-javalin/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
+++ b/kvision-modules/kvision-server-javalin/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
@@ -39,8 +39,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified RET> bind(
         noinline function: suspend T.() -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -51,8 +51,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR, reified RET> bind(
         noinline function: suspend T.(PAR) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -63,8 +63,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -75,8 +75,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -87,8 +87,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -99,8 +99,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -111,8 +111,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified PAR6, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5, PAR6) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -121,7 +121,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified RET> bindTabulatorRemote(
         noinline function: suspend T.(Int?, Int?, List<RemoteFilter>?, List<RemoteSorter>?, String?) -> RemoteData<RET>,
-        route: String? = null
+        route: String?
     )

     /**
@@ -130,7 +130,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1 : Any, reified PAR2 : Any> bind(
         noinline function: suspend T.(ReceiveChannel<PAR1>, SendChannel<PAR2>) -> Unit,
-        route: String? = null
+        route: String?
     )

     /**
@@ -139,6 +139,6 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR : Any> bind(
         noinline function: suspend T.(SendChannel<PAR>) -> Unit,
-        route: String? = null
+        route: String?
     )
 }
diff --git a/kvision-modules/kvision-server-jooby/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt b/kvision-modules/kvision-server-jooby/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
index 38e3fb757e..21e286c299 100644
--- a/kvision-modules/kvision-server-jooby/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
+++ b/kvision-modules/kvision-server-jooby/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
@@ -39,8 +39,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified RET> bind(
         noinline function: suspend T.() -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -51,8 +51,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR, reified RET> bind(
         noinline function: suspend T.(PAR) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -63,8 +63,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -75,8 +75,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -87,8 +87,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -99,8 +99,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -111,8 +111,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified PAR6, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5, PAR6) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -121,7 +121,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified RET> bindTabulatorRemote(
         noinline function: suspend T.(Int?, Int?, List<RemoteFilter>?, List<RemoteSorter>?, String?) -> RemoteData<RET>,
-        route: String? = null
+        route: String?
     )

     /**
@@ -130,7 +130,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1 : Any, reified PAR2 : Any> bind(
         noinline function: suspend T.(ReceiveChannel<PAR1>, SendChannel<PAR2>) -> Unit,
-        route: String? = null
+        route: String?
     )

     /**
@@ -139,6 +139,6 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR : Any> bind(
         noinline function: suspend T.(SendChannel<PAR>) -> Unit,
-        route: String? = null
+        route: String?
     )
 }
diff --git a/kvision-modules/kvision-server-ktor-koin/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt b/kvision-modules/kvision-server-ktor-koin/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
index 38e3fb757e..21e286c299 100644
--- a/kvision-modules/kvision-server-ktor-koin/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
+++ b/kvision-modules/kvision-server-ktor-koin/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
@@ -39,8 +39,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified RET> bind(
         noinline function: suspend T.() -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -51,8 +51,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR, reified RET> bind(
         noinline function: suspend T.(PAR) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -63,8 +63,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -75,8 +75,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -87,8 +87,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -99,8 +99,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -111,8 +111,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified PAR6, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5, PAR6) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -121,7 +121,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified RET> bindTabulatorRemote(
         noinline function: suspend T.(Int?, Int?, List<RemoteFilter>?, List<RemoteSorter>?, String?) -> RemoteData<RET>,
-        route: String? = null
+        route: String?
     )

     /**
@@ -130,7 +130,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1 : Any, reified PAR2 : Any> bind(
         noinline function: suspend T.(ReceiveChannel<PAR1>, SendChannel<PAR2>) -> Unit,
-        route: String? = null
+        route: String?
     )

     /**
@@ -139,6 +139,6 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR : Any> bind(
         noinline function: suspend T.(SendChannel<PAR>) -> Unit,
-        route: String? = null
+        route: String?
     )
 }
diff --git a/kvision-modules/kvision-server-ktor/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt b/kvision-modules/kvision-server-ktor/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
index 38e3fb757e..21e286c299 100644
--- a/kvision-modules/kvision-server-ktor/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
+++ b/kvision-modules/kvision-server-ktor/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
@@ -39,8 +39,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified RET> bind(
         noinline function: suspend T.() -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -51,8 +51,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR, reified RET> bind(
         noinline function: suspend T.(PAR) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -63,8 +63,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -75,8 +75,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -87,8 +87,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -99,8 +99,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -111,8 +111,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified PAR6, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5, PAR6) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -121,7 +121,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified RET> bindTabulatorRemote(
         noinline function: suspend T.(Int?, Int?, List<RemoteFilter>?, List<RemoteSorter>?, String?) -> RemoteData<RET>,
-        route: String? = null
+        route: String?
     )

     /**
@@ -130,7 +130,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1 : Any, reified PAR2 : Any> bind(
         noinline function: suspend T.(ReceiveChannel<PAR1>, SendChannel<PAR2>) -> Unit,
-        route: String? = null
+        route: String?
     )

     /**
@@ -139,6 +139,6 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR : Any> bind(
         noinline function: suspend T.(SendChannel<PAR>) -> Unit,
-        route: String? = null
+        route: String?
     )
 }
diff --git a/kvision-modules/kvision-server-micronaut/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt b/kvision-modules/kvision-server-micronaut/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
index 38e3fb757e..21e286c299 100644
--- a/kvision-modules/kvision-server-micronaut/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
+++ b/kvision-modules/kvision-server-micronaut/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
@@ -39,8 +39,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified RET> bind(
         noinline function: suspend T.() -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -51,8 +51,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR, reified RET> bind(
         noinline function: suspend T.(PAR) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -63,8 +63,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -75,8 +75,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -87,8 +87,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -99,8 +99,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -111,8 +111,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified PAR6, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5, PAR6) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -121,7 +121,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified RET> bindTabulatorRemote(
         noinline function: suspend T.(Int?, Int?, List<RemoteFilter>?, List<RemoteSorter>?, String?) -> RemoteData<RET>,
-        route: String? = null
+        route: String?
     )

     /**
@@ -130,7 +130,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1 : Any, reified PAR2 : Any> bind(
         noinline function: suspend T.(ReceiveChannel<PAR1>, SendChannel<PAR2>) -> Unit,
-        route: String? = null
+        route: String?
     )

     /**
@@ -139,6 +139,6 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR : Any> bind(
         noinline function: suspend T.(SendChannel<PAR>) -> Unit,
-        route: String? = null
+        route: String?
     )
 }
diff --git a/kvision-modules/kvision-server-spring-boot/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt b/kvision-modules/kvision-server-spring-boot/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
index 38e3fb757e..21e286c299 100644
--- a/kvision-modules/kvision-server-spring-boot/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
+++ b/kvision-modules/kvision-server-spring-boot/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
@@ -39,8 +39,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified RET> bind(
         noinline function: suspend T.() -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -51,8 +51,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR, reified RET> bind(
         noinline function: suspend T.(PAR) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -63,8 +63,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -75,8 +75,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -87,8 +87,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -99,8 +99,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -111,8 +111,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified PAR6, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5, PAR6) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -121,7 +121,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified RET> bindTabulatorRemote(
         noinline function: suspend T.(Int?, Int?, List<RemoteFilter>?, List<RemoteSorter>?, String?) -> RemoteData<RET>,
-        route: String? = null
+        route: String?
     )

     /**
@@ -130,7 +130,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1 : Any, reified PAR2 : Any> bind(
         noinline function: suspend T.(ReceiveChannel<PAR1>, SendChannel<PAR2>) -> Unit,
-        route: String? = null
+        route: String?
     )

     /**
@@ -139,6 +139,6 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR : Any> bind(
         noinline function: suspend T.(SendChannel<PAR>) -> Unit,
-        route: String? = null
+        route: String?
     )
 }
diff --git a/kvision-modules/kvision-server-vertx/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt b/kvision-modules/kvision-server-vertx/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
index 38e3fb757e..21e286c299 100644
--- a/kvision-modules/kvision-server-vertx/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
+++ b/kvision-modules/kvision-server-vertx/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
@@ -39,8 +39,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified RET> bind(
         noinline function: suspend T.() -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -51,8 +51,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR, reified RET> bind(
         noinline function: suspend T.(PAR) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -63,8 +63,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -75,8 +75,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -87,8 +87,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -99,8 +99,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -111,8 +111,8 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified PAR6, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5, PAR6) -> RET,
-        method: HttpMethod = HttpMethod.POST,
-        route: String? = null
+        method: HttpMethod,
+        route: String?
     )

     /**
@@ -121,7 +121,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified RET> bindTabulatorRemote(
         noinline function: suspend T.(Int?, Int?, List<RemoteFilter>?, List<RemoteSorter>?, String?) -> RemoteData<RET>,
-        route: String? = null
+        route: String?
     )

     /**
@@ -130,7 +130,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR1 : Any, reified PAR2 : Any> bind(
         noinline function: suspend T.(ReceiveChannel<PAR1>, SendChannel<PAR2>) -> Unit,
-        route: String? = null
+        route: String?
     )

     /**
@@ -139,6 +139,6 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      */
     protected inline fun <reified PAR : Any> bind(
         noinline function: suspend T.(SendChannel<PAR>) -> Unit,
-        route: String? = null
+        route: String?
     )
 }
diff --git a/kvision-modules/kvision-tabulator-remote/src/jsMain/kotlin/io/kvision/tabulator/TabulatorRemote.kt b/kvision-modules/kvision-tabulator-remote/src/jsMain/kotlin/io/kvision/tabulator/TabulatorRemote.kt
index e8974d772a..3ddc31e682 100644
--- a/kvision-modules/kvision-tabulator-remote/src/jsMain/kotlin/io/kvision/tabulator/TabulatorRemote.kt
+++ b/kvision-modules/kvision-tabulator-remote/src/jsMain/kotlin/io/kvision/tabulator/TabulatorRemote.kt
@@ -92,39 +92,40 @@ open class TabulatorRemote<T : Any, out E : Any>(
         val callAgent = CallAgent()

         options.ajaxURL = urlPrefix + url.drop(1)
-        options.ajaxRequestFunc = { _, _, params ->
-            val page = if (params.page != null) "" + params.page else null
-            val size = if (params.size != null) "" + params.size else null
-
-            val filters = if (params.filter != null) {
-                JSON.stringify(params.filter)
-            } else {
-                null
-            }
-
-            val sorters = if (params.sort != null) {
-                JSON.stringify(params.sort)
-            } else {
-                null
-            }
-            val state = stateFunction?.invoke()?.let { JSON.stringify(it) }
-
-            val data =
-                Serialization.plain.encodeToString(JsonRpcRequest(0, url, listOf(page, size, filters, sorters, state)))
-            callAgent.remoteCall(url, data, method = HttpMethod.valueOf(method.name), requestFilter = requestFilter)
-                .then { r: dynamic ->
-                    val result = JSON.parse<dynamic>(r.result.unsafeCast<String>())
-                    if (page != null) {
-                        if (result.data == undefined) {
-                            result.data = js("[]")
-                        }
-                        result
-                    } else if (result.data == undefined) {
-                        js("[]")
-                    } else {
-                        result.data
-                    }
-                }
+        options.ajaxRequestFunc = { _, _, _ ->
+//            val page = if (params.page != null) "" + params.page else null
+//            val size = if (params.size != null) "" + params.size else null
+//
+//            val filters = if (params.filter != null) {
+//                JSON.stringify(params.filter)
+//            } else {
+//                null
+//            }
+//
+//            val sorters = if (params.sort != null) {
+//                JSON.stringify(params.sort)
+//            } else {
+//                null
+//            }
+//            val state = stateFunction?.invoke()?.let { JSON.stringify(it) }
+//
+//            val data =
+//                Serialization.plain.encodeToString(JsonRpcRequest(0, url, listOf(page, size, filters, sorters, state)))
+//            callAgent.remoteCall(url, data, method = HttpMethod.valueOf(method.name), requestFilter = requestFilter)
+//                .then { r: dynamic ->
+//                    val result = JSON.parse<dynamic>(r.result.unsafeCast<String>())
+//                    if (page != null) {
+//                        if (result.data == undefined) {
+//                            result.data = js("[]")
+//                        }
+//                        result
+//                    } else if (result.data == undefined) {
+//                        js("[]")
+//                    } else {
+//                        result.data
+//                    }
+//                }
+            TODO("Stub")
         }
     }
 }
diff --git a/kvision-modules/kvision-tabulator/src/jsMain/kotlin/io/kvision/tabulator/Tabulator.kt b/kvision-modules/kvision-tabulator/src/jsMain/kotlin/io/kvision/tabulator/Tabulator.kt
index fee7578962..f235383cfb 100644
--- a/kvision-modules/kvision-tabulator/src/jsMain/kotlin/io/kvision/tabulator/Tabulator.kt
+++ b/kvision-modules/kvision-tabulator/src/jsMain/kotlin/io/kvision/tabulator/Tabulator.kt
@@ -855,7 +855,7 @@ open class Tabulator<T : Any>(
         return if (jsonHelper == null || serializer == null) {
             throw IllegalStateException("The data class can't be serialized. Please provide a serializer when creating the Tabulator instance.")
         } else {
-            JSON.parse(jsonHelper!!.encodeToString(serializer, data)) as dynamic
+            JSON.parse<dynamic>(jsonHelper!!.encodeToString(serializer, data))
         }
     }

