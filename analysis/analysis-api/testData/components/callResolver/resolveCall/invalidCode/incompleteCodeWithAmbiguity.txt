KtErrorCallInfo:
  candidateCalls = [
    KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = Foo<T>
          symbol = <constructor>(len: kotlin.Int): Foo<T>
          valueParameters = [
            KtVariableLikeSignature:
              name = len
              receiverType = null
              returnType = kotlin.Int
              symbol = len: kotlin.Int
              callableIdIfNonLocal = null
          ]
          callableIdIfNonLocal = null
      typeArgumentsMapping = {
        T -> (kotlin.String)
      }
      argumentMapping = {},
    KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = Foo<T>
          symbol = <constructor>(s: kotlin.String): Foo<T>
          valueParameters = [
            KtVariableLikeSignature:
              name = s
              receiverType = null
              returnType = kotlin.String
              symbol = s: kotlin.String
              callableIdIfNonLocal = null
          ]
          callableIdIfNonLocal = null
      typeArgumentsMapping = {
        T -> (kotlin.String)
      }
      argumentMapping = {}
  ]
  diagnostic = ERROR<null: Inapplicable candidate>
