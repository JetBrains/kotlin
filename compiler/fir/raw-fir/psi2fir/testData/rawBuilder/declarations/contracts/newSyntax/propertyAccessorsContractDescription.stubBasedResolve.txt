FILE: [ResolvedTo(BODY_RESOLVE)] propertyAccessorsContractDescription.kt
    public final [ResolvedTo(ANNOTATION_ARGUMENTS)] class MyClass : R|kotlin/Any| {
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=MyClass] constructor(): R|MyClass| {
            super<R|kotlin/Any|>()
        }

        public final [ResolvedTo(EXPECT_ACTUAL_MATCHING)] var myInt: R|kotlin/Int| = LAZY_EXPRESSION
            public [ResolvedTo(EXPECT_ACTUAL_MATCHING)] [ContainingClassKey=MyClass] get(): R|kotlin/Int|
                [Contract description] <
                    LAZY_EXPRESSION
                >
             { LAZY_BLOCK }
            public [ResolvedTo(EXPECT_ACTUAL_MATCHING)] [ContainingClassKey=MyClass] set([ResolvedTo(EXPECT_ACTUAL_MATCHING)] value: R|kotlin/Int|): R|kotlin/Unit| { LAZY_BLOCK }

    }
    public final [ResolvedTo(ANNOTATION_ARGUMENTS)] class AnotherClass : R|kotlin/Any| {
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=AnotherClass] constructor([ResolvedTo(BODY_RESOLVE)] multiplier: R|kotlin/Int|): R|AnotherClass| {
            super<R|kotlin/Any|>()
        }

        public final [ResolvedTo(EXPECT_ACTUAL_MATCHING)] var anotherInt: R|kotlin/Int| = LAZY_EXPRESSION
            public [ResolvedTo(EXPECT_ACTUAL_MATCHING)] [ContainingClassKey=AnotherClass] get(): R|kotlin/Int|
                [Contract description] <
                    LAZY_EXPRESSION
                >
             { LAZY_BLOCK }
            public [ResolvedTo(EXPECT_ACTUAL_MATCHING)] [ContainingClassKey=AnotherClass] set([ResolvedTo(EXPECT_ACTUAL_MATCHING)] value: R|kotlin/Int|): R|kotlin/Unit|
                [Contract description] <
                    LAZY_EXPRESSION
                >
             { LAZY_BLOCK }

    }
    public final [ResolvedTo(ANNOTATION_ARGUMENTS)] class SomeClass : R|kotlin/Any| {
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=SomeClass] constructor([ResolvedTo(BODY_RESOLVE)] multiplier: R|kotlin/Int?|): R|SomeClass| {
            super<R|kotlin/Any|>()
        }

        public final [ResolvedTo(EXPECT_ACTUAL_MATCHING)] var someInt: R|kotlin/Int| = LAZY_EXPRESSION
            public [ResolvedTo(EXPECT_ACTUAL_MATCHING)] [ContainingClassKey=SomeClass] get(): R|kotlin/Int|
                [Contract description] <
                    LAZY_EXPRESSION
                >
             { LAZY_BLOCK }
            public [ResolvedTo(EXPECT_ACTUAL_MATCHING)] [ContainingClassKey=SomeClass] set([ResolvedTo(EXPECT_ACTUAL_MATCHING)] value: R|kotlin/Int|): R|kotlin/Unit|
                [Contract description] <
                    LAZY_EXPRESSION
                >
             { LAZY_BLOCK }

    }
