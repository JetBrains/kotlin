package

package kotlin {

    package kotlin.jvm {
        public fun test(/*0*/ f1: kotlin.jvm.Foo, /*1*/ f2: kotlin.jvm.Foo, /*2*/ b1: kotlin.jvm.Bar, /*3*/ fn1: kotlin.jvm.Foo?, /*4*/ fn2: kotlin.jvm.Foo?): kotlin.Unit

        @kotlin.jvm.JvmInline public final value class Bar {
            public constructor Bar(/*0*/ y: kotlin.String)
            public final val y: kotlin.String
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
        }

        @kotlin.jvm.JvmInline public final value class Foo {
            public constructor Foo(/*0*/ x: kotlin.Int)
            public final val x: kotlin.Int
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
        }

        public final annotation class JvmInline : kotlin.Annotation {
            public constructor JvmInline()
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }
    }
}
