KtFile: Functions_ERR.kt
  PACKAGE_DIRECTIVE
    <empty list>
  IMPORT_LIST
    <empty list>
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo')
    PsiErrorElement:Expecting '('
      <empty list>
  PsiErrorElement:Expecting a top level declaration
    PsiElement(RPAR)(')')
  PsiWhiteSpace('\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    TYPE_REFERENCE
      MODIFIER_LIST
        ANNOTATION
          PsiElement(AT)('@')
          PsiElement(LBRACKET)('[')
          ANNOTATION_ENTRY
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('a')
          PsiElement(RBRACKET)(']')
      PsiWhiteSpace(' ')
      USER_TYPE
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('T')
    PsiElement(DOT)('.')
    PsiElement(IDENTIFIER)('foo')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('a')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          PsiErrorElement:Type expected
            <empty list>
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    PsiElement(COLON)(':')
    PsiWhiteSpace(' ')
    TYPE_REFERENCE
      USER_TYPE
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('bar')
  PsiWhiteSpace('\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    TYPE_REFERENCE
      MODIFIER_LIST
        ANNOTATION
          PsiElement(AT)('@')
          PsiElement(LBRACKET)('[')
          ANNOTATION_ENTRY
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('a')
            VALUE_ARGUMENT_LIST
              PsiElement(LPAR)('(')
              PsiElement(RPAR)(')')
          PsiElement(RBRACKET)(']')
      PsiWhiteSpace(' ')
      USER_TYPE
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('T')
    PsiElement(DOT)('.')
    PsiElement(IDENTIFIER)('foo')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      PsiErrorElement:Type parameter declaration expected
        <empty list>
      PsiElement(GT)('>')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('a')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('foo')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    PsiElement(COLON)(':')
    PsiWhiteSpace(' ')
    TYPE_REFERENCE
      USER_TYPE
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('bar')
  PsiWhiteSpace('\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    TYPE_REFERENCE
      MODIFIER_LIST
        ANNOTATION
          PsiElement(AT)('@')
          PsiElement(LBRACKET)('[')
          ANNOTATION_ENTRY
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('a')
            VALUE_ARGUMENT_LIST
              PsiElement(LPAR)('(')
              PsiElement(RPAR)(')')
          PsiElement(RBRACKET)(']')
      PsiWhiteSpace(' ')
      USER_TYPE
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('T')
    PsiElement(DOT)('.')
    PsiElement(IDENTIFIER)('foo')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      TYPE_PARAMETER
        PsiElement(IDENTIFIER)('T')
      PsiElement(COMMA)(',')
      PsiWhiteSpace(' ')
      PsiErrorElement:Expecting type parameter declaration
        PsiElement(COMMA)(',')
      PsiWhiteSpace(' ')
      TYPE_PARAMETER
        PsiElement(IDENTIFIER)('T')
      PsiElement(GT)('>')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('a')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('foo')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    PsiElement(COLON)(':')
    PsiWhiteSpace(' ')
    TYPE_REFERENCE
      USER_TYPE
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('bar')
  PsiWhiteSpace('\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    TYPE_REFERENCE
      MODIFIER_LIST
        ANNOTATION
          PsiElement(AT)('@')
          PsiElement(LBRACKET)('[')
          ANNOTATION_ENTRY
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('a')
            VALUE_ARGUMENT_LIST
              PsiElement(LPAR)('(')
              PsiElement(RPAR)(')')
          PsiElement(RBRACKET)(']')
      PsiWhiteSpace(' ')
      USER_TYPE
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('T')
    PsiElement(DOT)('.')
    PsiElement(IDENTIFIER)('foo')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      PsiErrorElement:Expecting type parameter declaration
        PsiElement(COMMA)(',')
      PsiWhiteSpace(' ')
      TYPE_PARAMETER
        PsiElement(IDENTIFIER)('T')
      PsiElement(COMMA)(',')
      PsiWhiteSpace(' ')
      PsiErrorElement:Expecting type parameter declaration
        PsiElement(COMMA)(',')
      PsiWhiteSpace(' ')
      TYPE_PARAMETER
        PsiElement(IDENTIFIER)('T')
      PsiElement(GT)('>')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('a')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('foo')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    PsiElement(COLON)(':')
    PsiWhiteSpace(' ')
    TYPE_REFERENCE
      USER_TYPE
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('bar')
  PsiWhiteSpace('\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    TYPE_REFERENCE
      MODIFIER_LIST
        ANNOTATION
          PsiElement(AT)('@')
          PsiElement(LBRACKET)('[')
          ANNOTATION_ENTRY
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('a')
            VALUE_ARGUMENT_LIST
              PsiElement(LPAR)('(')
              PsiElement(RPAR)(')')
          PsiElement(RBRACKET)(']')
      PsiWhiteSpace(' ')
      USER_TYPE
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('T')
    PsiElement(DOT)('.')
    PsiElement(IDENTIFIER)('foo')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      TYPE_PARAMETER
        PsiElement(IDENTIFIER)('T')
      PsiElement(COMMA)(',')
      PsiWhiteSpace(' ')
      TYPE_PARAMETER
        PsiElement(IDENTIFIER)('T')
      PsiElement(GT)('>')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiErrorElement:Expecting a parameter declaration
        PsiElement(COMMA)(',')
      PsiWhiteSpace(' ')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('a')
        PsiWhiteSpace(' ')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('foo')
      PsiElement(COMMA)(',')
      PsiWhiteSpace(' ')
      PsiErrorElement:Expecting a parameter declaration
        PsiElement(COMMA)(',')
      PsiWhiteSpace(' ')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('a')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('b')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    PsiElement(COLON)(':')
    PsiWhiteSpace(' ')
    TYPE_REFERENCE
      USER_TYPE
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('bar')
  PsiWhiteSpace('\n\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    PsiElement(COLON)(':')
    PsiWhiteSpace(' ')
    TYPE_REFERENCE
      PsiErrorElement:Type expected
        <empty list>
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    REFERENCE_EXPRESSION
      PsiElement(IDENTIFIER)('a')
    PsiElement(SEMICOLON)(';')
  PsiWhiteSpace('\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiErrorElement:Expecting an expression
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(SEMICOLON)(';')
  PsiWhiteSpace('\n\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      TYPE_PARAMETER
        PsiElement(IDENTIFIER)('T')
      PsiElement(GT)('>')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo')
    PsiErrorElement:Only one type parameter list is allowed for a function
      PsiElement(LT)('<')
      PsiElement(IDENTIFIER)('D')
      PsiElement(GT)('>')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
  PsiWhiteSpace('\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      TYPE_PARAMETER
        PsiElement(IDENTIFIER)('T')
      PsiElement(GT)('>')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo')
    PsiErrorElement:Only one type parameter list is allowed for a function
      PsiElement(LT)('<')
      PsiElement(IDENTIFIER)('D')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
  PsiWhiteSpace('\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    TYPE_PARAMETER_LIST
      PsiElement(LT)('<')
      TYPE_PARAMETER
        PsiElement(IDENTIFIER)('T')
      PsiElement(GT)('>')
    PsiWhiteSpace(' ')
    TYPE_REFERENCE
      USER_TYPE
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('A')
    PsiElement(DOT)('.')
    PsiErrorElement:Only one type parameter list is allowed for a function
      PsiElement(LT)('<')
      PsiElement(IDENTIFIER)('foo')
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiErrorElement:Expecting '('
      <empty list>