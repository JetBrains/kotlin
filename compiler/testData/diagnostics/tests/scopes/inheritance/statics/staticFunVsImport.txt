package

public open class A {
    public constructor A()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public/*package*/ open fun nonStatic1(): kotlin.Unit
    public/*package*/ open fun nonStatic2(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    // Static members
    public/*package*/ open fun bar(): kotlin.Int
    public/*package*/ open fun foo(): kotlin.Unit
}

public open class B : A {
    public constructor B()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public/*package*/ open override /*1*/ /*fake_override*/ fun nonStatic1(): kotlin.Unit
    public/*package*/ open override /*1*/ /*fake_override*/ fun nonStatic2(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    // Static members
    public/*package*/ open override /*1*/ /*fake_override*/ fun bar(): kotlin.Int
    public/*package*/ open override /*1*/ /*fake_override*/ fun foo(): kotlin.Unit
}

public open class C {
    public constructor C()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    // Static members
    public/*package*/ open fun bar(): kotlin.Unit
}

public final class E : A {
    public constructor E()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public/*package*/ open override /*1*/ /*fake_override*/ fun nonStatic1(): kotlin.Unit
    public/*package*/ open override /*1*/ /*fake_override*/ fun nonStatic2(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class F : B {
    public constructor F()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public/*package*/ open override /*1*/ /*fake_override*/ fun nonStatic1(): kotlin.Unit
    public/*package*/ open override /*1*/ /*fake_override*/ fun nonStatic2(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class Q : A {
    public constructor Q()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public/*package*/ open override /*1*/ /*fake_override*/ fun nonStatic1(): kotlin.Unit
    public/*package*/ open override /*1*/ /*fake_override*/ fun nonStatic2(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class Z : A {
    public constructor Z()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public/*package*/ open override /*1*/ /*fake_override*/ fun nonStatic1(): kotlin.Unit
    public/*package*/ open override /*1*/ /*fake_override*/ fun nonStatic2(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

