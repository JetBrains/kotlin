package

internal inline fun internalInline(): kotlin.Unit
public inline fun publicInline(): kotlin.Unit

@kotlin.PublishedApi internal final class InternalClassPrivateConstructor {
    private constructor InternalClassPrivateConstructor()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    public companion object Companion {
        private constructor Companion()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        internal final inline operator fun invoke(): InternalClassPrivateConstructor
        internal final inline operator fun invoke(/*0*/ i: kotlin.Int): InternalClassPrivateConstructor
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}

@kotlin.PublishedApi internal open class InternalClassProtectedConstructor {
    protected constructor InternalClassProtectedConstructor()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    public companion object Companion {
        private constructor Companion()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        internal final inline operator fun invoke(): InternalClassProtectedConstructor
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}

public open class OpenClass {
    public constructor OpenClass()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final inline fun foo(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    protected final operator fun invoke(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

private final class PrivateClass {
    public constructor PrivateClass()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final operator fun invoke(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
