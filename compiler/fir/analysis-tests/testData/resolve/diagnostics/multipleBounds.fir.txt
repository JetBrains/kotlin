FILE: multipleBounds.kt
    public open class A : R|kotlin/Any| {
        public constructor(): R|Jet87/A| {
            super<R|kotlin/Any|>()
        }

        public final fun foo(): R|kotlin/Int| {
            ^foo Int(1)
        }

    }
    public abstract interface B : R|kotlin/Any| {
        public open fun bar(): R|kotlin/Double| {
            ^bar Double(1.0)
        }

    }
    public abstract interface G<X> : R|kotlin/Any| {
        public abstract val <X : R|Jet87/A|, R|Jet87/B|> boo: R|kotlin/Double|
            public get(): R|kotlin/Double|

        public abstract val <A : R|Jet87/B|> bal: R|kotlin/Double|
            public get(): R|kotlin/Double|

        public abstract val <Y : R|Jet87/B|> bas: R|kotlin/Double|
            public get(): R|kotlin/Double|

    }
    public final class C : R|Jet87/A|, R|Jet87/B| {
        public constructor(): R|Jet87/C| {
            super<R|Jet87/A|>()
        }

    }
    public final class D : R|kotlin/Any| {
        public constructor(): R|Jet87/D| {
            super<R|kotlin/Any|>()
        }

        public final companion object Companion : R|Jet87/A|, R|Jet87/B| {
            private constructor(): R|Jet87/D.Companion| {
                super<R|Jet87/A|>()
            }

        }

    }
    public final class Test1<T : R|Jet87/A|, R|Jet87/B|> : R|kotlin/Any| {
        public constructor<T : R|Jet87/A|, R|Jet87/B|>(): R|Jet87/Test1<T>| {
            super<R|kotlin/Any|>()
        }

        public final fun test(t: R|T|): R|kotlin/Unit| {
            R|?|.<Unresolved name: foo>#()
            R|?|.<Unresolved name: bar>#()
            R|<local>/t|.R|Jet87/A.foo|()
            R|<local>/t|.R|Jet87/B.bar|()
        }

    }
    public final fun test(): R|kotlin/Unit| {
        R|Jet87/Test1.Test1|<R|Jet87/B|>()
        R|Jet87/Test1.Test1|<R|Jet87/A|>()
        R|Jet87/Test1.Test1|<R|Jet87/C|>()
    }
    public final class Foo : R|kotlin/Any| {
        public constructor(): R|Jet87/Foo| {
            super<R|kotlin/Any|>()
        }

    }
    public final class Bar<T : R|Jet87/Foo|> : R|kotlin/Any| {
        public constructor<T : R|Jet87/Foo|>(): R|Jet87/Bar<T>| {
            super<R|kotlin/Any|>()
        }

    }
    public final class Buzz<T : R|Jet87/Bar<kotlin/Int>|, <ERROR TYPE REF: Symbol not found for nioho>> : R|kotlin/Any| {
        public constructor<T : R|Jet87/Bar<kotlin/Int>|, <ERROR TYPE REF: Symbol not found for nioho>>(): R|Jet87/Buzz<T>| {
            super<R|kotlin/Any|>()
        }

    }
    public final class X<T : R|Jet87/Foo|> : R|kotlin/Any| {
        public constructor<T : R|Jet87/Foo|>(): R|Jet87/X<T>| {
            super<R|kotlin/Any|>()
        }

    }
    public final class Y<T : R|Jet87/Foo|, R|Jet87/Bar<Jet87/Foo>|> : R|kotlin/Any| {
        public constructor<T : R|Jet87/Foo|, R|Jet87/Bar<Jet87/Foo>|>(): R|Jet87/Y<T>| {
            super<R|kotlin/Any|>()
        }

    }
    public final fun <T : R|Jet87/A|, R|Jet87/B|> test2(t: R|T|): R|kotlin/Unit| {
        R|?|.<Unresolved name: foo>#()
        R|?|.<Unresolved name: bar>#()
        R|<local>/t|.R|Jet87/A.foo|()
        R|<local>/t|.R|Jet87/B.bar|()
    }
    public final val t1: R|kotlin/Unit| = <Inapplicable(INAPPLICABLE): Jet87/test2>#<R|Jet87/A|>(R|Jet87/A.A|())
        public get(): R|kotlin/Unit|
    public final val t2: R|kotlin/Unit| = <Inapplicable(INAPPLICABLE): Jet87/test2>#<R|Jet87/B|>(R|Jet87/C.C|())
        public get(): R|kotlin/Unit|
    public final val t3: R|kotlin/Unit| = R|Jet87/test2|<R|Jet87/C|>(R|Jet87/C.C|())
        public get(): R|kotlin/Unit|
    public final val <T, B : R|T|> x: R|kotlin/Int| = Int(0)
        public get(): R|kotlin/Int|
