FILE: main.kt
    public final fun main(): R|kotlin/Unit| {
        R|/A.A|().R|/A.foo|(<L> = SAM(foo@fun <anonymous>(x: <ERROR TYPE REF: Parameter F has a cycle in its upper bounds>): R|kotlin/CharSequence!| <inline=NoInline>  {
            ^ String()
        }
        ))
        Q|A|.R|/A.bar*s|(<L> = SAM(bar@fun <anonymous>(x: <ERROR TYPE REF: Parameter F has a cycle in its upper bounds>): R|kotlin/CharSequence!| <inline=NoInline>  {
            ^ String()
        }
        ))
        Q|A|.R|/A.bar*s<CS errors: /A.bar>#|(R|/Function|<<ERROR TYPE REF: Cannot infer argument for type parameter E>, <ERROR TYPE REF: Cannot infer argument for type parameter F>>(<L> = Function@fun <anonymous>(x: <ERROR TYPE REF: Cannot infer argument for type parameter F>): <ERROR TYPE REF: Cannot infer argument for type parameter E> <inline=NoInline>  {
            ^ String()
        }
        ))
        Q|A|.R|/A.bar*s|(R|/Function|<R|kotlin/CharSequence|, R|kotlin/collections/Map<kotlin/String, kotlin/CharSequence>|>(<L> = Function@fun <anonymous>(x: R|kotlin/collections/Map<kotlin/String, kotlin/CharSequence>!|): R|kotlin/CharSequence!| <inline=NoInline>  {
            ^ R|<local>/x|.R|SubstitutionOverride<kotlin/collections/Map.get: R|kotlin/CharSequence?|>|(String())
        }
        ))
    }
