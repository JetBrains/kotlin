FILE fqName:<root> fileName:/LockTest.kt
  CLASS CLASS name:LockTest modality:FINAL visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.LockTest
    PROPERTY ATOMICFU_GENERATED_PROPERTY name:inProgressLock$volatile visibility:private modality:FINAL [var]
      FIELD ATOMICFU_GENERATED_FIELD name:inProgressLock$volatile type:kotlin.Boolean visibility:private
        annotations:
          Volatile
        EXPRESSION_BODY
          CONST Boolean type=kotlin.Boolean value=false
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-inProgressLock$volatile> visibility:private modality:FINAL returnType:kotlin.Boolean
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LockTest
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:inProgressLock$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-inProgressLock$volatile> (): kotlin.Boolean declared in <root>.LockTest'
            GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:inProgressLock$volatile type:kotlin.Boolean visibility:private declared in <root>.LockTest' type=kotlin.Boolean origin=null
              receiver: GET_VAR '<this>: <root>.LockTest declared in <root>.LockTest.<get-inProgressLock$volatile>' type=<root>.LockTest origin=null
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<set-inProgressLock$volatile> visibility:private modality:FINAL returnType:kotlin.Unit
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LockTest
        VALUE_PARAMETER kind:Regular name:value index:1 type:kotlin.Boolean
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:inProgressLock$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Unit from='private final fun <set-inProgressLock$volatile> (value: kotlin.Boolean): kotlin.Unit declared in <root>.LockTest'
            SET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:inProgressLock$volatile type:kotlin.Boolean visibility:private declared in <root>.LockTest' type=kotlin.Unit origin=null
              receiver: GET_VAR '<this>: <root>.LockTest declared in <root>.LockTest.<set-inProgressLock$volatile>' type=<root>.LockTest origin=null
              value: GET_VAR 'value: kotlin.Boolean declared in <root>.LockTest.<set-inProgressLock$volatile>' type=kotlin.Boolean origin=null
    CONSTRUCTOR visibility:public returnType:<root>.LockTest [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:LockTest modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    FUN name:testLock visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LockTest
      BLOCK_BODY
        VAR name:result type:kotlin.String [var]
          CONST String type=kotlin.String value=""
        WHEN type=kotlin.Unit origin=IF
          BRANCH
            if: CALL 'private final fun tryAcquire$atomicfu$NATIVE_PROPERTY_REF$Boolean (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Boolean>>): kotlin.Boolean declared in <root>' type=kotlin.Boolean origin=null
              ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.Boolean> origin=LAMBDA
                FUN ATOMICFU_GENERATED_FUNCTION name:<inProgressLock$volatile-getter> visibility:local modality:FINAL returnType:kotlin.Boolean [inline]
                  BLOCK_BODY
                    RETURN type=kotlin.Nothing from='local final fun <inProgressLock$volatile-getter> (): kotlin.Boolean declared in <root>.LockTest.testLock'
                      PROPERTY_REFERENCE 'private final inProgressLock$volatile: kotlin.Boolean declared in <root>.LockTest' field='FIELD ATOMICFU_GENERATED_FIELD name:inProgressLock$volatile type:kotlin.Boolean visibility:private declared in <root>.LockTest' getter='private final fun <get-inProgressLock$volatile> (): kotlin.Boolean declared in <root>.LockTest' setter='private final fun <set-inProgressLock$volatile> (value: kotlin.Boolean): kotlin.Unit declared in <root>.LockTest' type=kotlin.Boolean origin=null
                        ARG 1: GET_VAR '<this>: <root>.LockTest declared in <root>.LockTest.testLock' type=<root>.LockTest origin=IMPLICIT_ARGUMENT
            then: BLOCK type=kotlin.Unit origin=null
              SET_VAR 'var result: kotlin.String declared in <root>.LockTest.testLock' type=kotlin.Unit origin=EQ
                CONST String type=kotlin.String value="OK"
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.String
          ARG expected: CONST String type=kotlin.String value="OK"
          ARG actual: GET_VAR 'var result: kotlin.String declared in <root>.LockTest.testLock' type=kotlin.String origin=null
  FUN ATOMICFU_GENERATED_FUNCTION name:tryAcquire$atomicfu$ATOMIC_ARRAY$Boolean visibility:private modality:FINAL returnType:kotlin.Boolean [inline]
    VALUE_PARAMETER kind:Regular name:handler$atomicfu index:0 type:kotlin.concurrent.AtomicIntArray
    VALUE_PARAMETER kind:Regular name:index$atomicfu index:1 type:kotlin.Int
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='private final fun tryAcquire$atomicfu$ATOMIC_ARRAY$Boolean (handler$atomicfu: kotlin.concurrent.AtomicIntArray, index$atomicfu: kotlin.Int): kotlin.Boolean declared in <root>'
        CALL 'public final fun compareAndSet (index: kotlin.Int, expectedValue: kotlin.Int, newValue: kotlin.Int): kotlin.Boolean declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Boolean origin=null
          ARG <this>: GET_VAR 'handler$atomicfu: kotlin.concurrent.AtomicIntArray declared in <root>.tryAcquire$atomicfu$ATOMIC_ARRAY$Boolean' type=kotlin.concurrent.AtomicIntArray origin=null
          ARG index: GET_VAR 'index$atomicfu: kotlin.Int declared in <root>.tryAcquire$atomicfu$ATOMIC_ARRAY$Boolean' type=kotlin.Int origin=null
          ARG expectedValue: WHEN type=kotlin.Int origin=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=false
              then: CONST Int type=kotlin.Int value=1
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CONST Int type=kotlin.Int value=0
          ARG newValue: WHEN type=kotlin.Int origin=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CONST Int type=kotlin.Int value=1
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CONST Int type=kotlin.Int value=0
  FUN ATOMICFU_GENERATED_FUNCTION name:tryAcquire$atomicfu$NATIVE_PROPERTY_REF$Boolean visibility:private modality:FINAL returnType:kotlin.Boolean [inline]
    VALUE_PARAMETER kind:Regular name:handler$atomicfu index:0 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Boolean>> [crossinline]
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='private final fun tryAcquire$atomicfu$NATIVE_PROPERTY_REF$Boolean (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Boolean>>): kotlin.Boolean declared in <root>'
        CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
          TYPE_ARG T: kotlin.Boolean
          ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
            ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Boolean>> declared in <root>.tryAcquire$atomicfu$NATIVE_PROPERTY_REF$Boolean' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Boolean>> origin=null
          ARG expectedValue: CONST Boolean type=kotlin.Boolean value=false
          ARG newValue: CONST Boolean type=kotlin.Boolean value=true
  FUN name:box visibility:public modality:FINAL returnType:kotlin.String
    BLOCK_BODY
      VAR name:testClass type:<root>.LockTest [val]
        CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.LockTest' type=<root>.LockTest origin=null
      CALL 'public final fun testLock (): kotlin.Unit declared in <root>.LockTest' type=kotlin.Unit origin=null
        ARG <this>: GET_VAR 'val testClass: <root>.LockTest declared in <root>.box' type=<root>.LockTest origin=null
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        CONST String type=kotlin.String value="OK"
  FUN name:reflectionTest visibility:public modality:FINAL returnType:kotlin.collections.List<BB of <root>.reflectionTest>
    TYPE_PARAMETER name:AA index:0 variance: superTypes:[kotlin.Any?] reified:false
    TYPE_PARAMETER name:BB index:1 variance: superTypes:[kotlin.Number] reified:false
    VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:0 type:kotlin.String
    VALUE_PARAMETER kind:Regular name:mapParam index:1 type:kotlin.collections.Map<in AA of <root>.reflectionTest, BB of <root>.reflectionTest>
    annotations:
      Suppress(names = ["UNUSED_PARAMETER"] type=kotlin.Array<out kotlin.String> varargElementType=kotlin.String)
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun reflectionTest <AA, BB> (<this>: kotlin.String, mapParam: kotlin.collections.Map<in AA of <root>.reflectionTest, BB of <root>.reflectionTest>): kotlin.collections.List<BB of <root>.reflectionTest> declared in <root>'
        CALL 'public final fun error (message: kotlin.Any): kotlin.Nothing declared in kotlin' type=kotlin.Nothing origin=null
          ARG message: CONST String type=kotlin.String value="no impl"
