public final class org/jetbrains/kotlin/compilerRunner/GradleKotlinCompilerRunnerKt {
	public static final field COULD_NOT_CONNECT_TO_DAEMON_MESSAGE Ljava/lang/String;
	public static final field CREATED_CLIENT_FILE_PREFIX Ljava/lang/String;
	public static final field CREATED_SESSION_FILE_PREFIX Ljava/lang/String;
	public static final field DELETED_SESSION_FILE_PREFIX Ljava/lang/String;
	public static final field EXISTING_CLIENT_FILE_PREFIX Ljava/lang/String;
	public static final field EXISTING_SESSION_FILE_PREFIX Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer : org/gradle/api/DomainObjectSet {
	public fun <init> ()V
	public final fun contains (Ljava/lang/Object;)Z
	public abstract fun contains (Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBinary;)Z
	protected abstract fun createBinaries (Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeOutputKind;Ljava/util/Collection;Lkotlin/jvm/functions/Function4;Lkotlin/jvm/functions/Function1;)V
	public final fun executable ()V
	public final fun executable (Ljava/lang/String;)V
	public final fun executable (Ljava/lang/String;Ljava/util/Collection;)V
	public final fun executable (Ljava/lang/String;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)V
	public final fun executable (Ljava/lang/String;Ljava/util/Collection;Lorg/gradle/api/Action;)V
	public final fun executable (Ljava/lang/String;Lorg/gradle/api/Action;)V
	public final fun executable (Ljava/util/Collection;)V
	public final fun executable (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)V
	public final fun executable (Ljava/util/Collection;Lorg/gradle/api/Action;)V
	public final fun executable (Lorg/gradle/api/Action;)V
	public static synthetic fun executable$default (Lorg/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer;Ljava/lang/String;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun executable$default (Lorg/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer;Ljava/lang/String;Ljava/util/Collection;Lorg/gradle/api/Action;ILjava/lang/Object;)V
	public static synthetic fun executable$default (Lorg/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun executable$default (Lorg/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer;Ljava/util/Collection;Lorg/gradle/api/Action;ILjava/lang/Object;)V
	public abstract fun findByName (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBinary;
	public final fun findExecutable (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/Executable;
	public final fun findExecutable (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/Executable;
	public abstract fun findExecutable (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/Executable;
	public final fun findExecutable (Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/Executable;
	public final fun findFramework (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/Framework;
	public final fun findFramework (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/Framework;
	public abstract fun findFramework (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/Framework;
	public final fun findFramework (Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/Framework;
	public final fun findSharedLib (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/SharedLibrary;
	public final fun findSharedLib (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/SharedLibrary;
	public abstract fun findSharedLib (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/SharedLibrary;
	public final fun findSharedLib (Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/SharedLibrary;
	public final fun findStaticLib (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/StaticLibrary;
	public final fun findStaticLib (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/StaticLibrary;
	public abstract fun findStaticLib (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/StaticLibrary;
	public final fun findStaticLib (Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/StaticLibrary;
	public final fun findTest (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/TestExecutable;
	public final fun findTest (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/TestExecutable;
	public abstract fun findTest (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/TestExecutable;
	public final fun findTest (Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/TestExecutable;
	public final fun framework ()V
	public final fun framework (Ljava/lang/String;)V
	public final fun framework (Ljava/lang/String;Ljava/util/Collection;)V
	public final fun framework (Ljava/lang/String;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)V
	public final fun framework (Ljava/lang/String;Ljava/util/Collection;Lorg/gradle/api/Action;)V
	public final fun framework (Ljava/lang/String;Lorg/gradle/api/Action;)V
	public final fun framework (Ljava/util/Collection;)V
	public final fun framework (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)V
	public final fun framework (Ljava/util/Collection;Lorg/gradle/api/Action;)V
	public final fun framework (Lorg/gradle/api/Action;)V
	public static synthetic fun framework$default (Lorg/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer;Ljava/lang/String;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun framework$default (Lorg/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer;Ljava/lang/String;Ljava/util/Collection;Lorg/gradle/api/Action;ILjava/lang/Object;)V
	public static synthetic fun framework$default (Lorg/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun framework$default (Lorg/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer;Ljava/util/Collection;Lorg/gradle/api/Action;ILjava/lang/Object;)V
	public final fun get (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBinary;
	public final fun getAt (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBinary;
	public abstract fun getByName (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBinary;
	public final fun getDEBUG ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;
	public final fun getExecutable (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/Executable;
	public final fun getExecutable (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/Executable;
	public abstract fun getExecutable (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/Executable;
	public final fun getExecutable (Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/Executable;
	public final fun getFramework (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/Framework;
	public final fun getFramework (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/Framework;
	public abstract fun getFramework (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/Framework;
	public final fun getFramework (Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/Framework;
	public abstract fun getProject ()Lorg/gradle/api/Project;
	public final fun getRELEASE ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;
	public final fun getSharedLib (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/SharedLibrary;
	public final fun getSharedLib (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/SharedLibrary;
	public abstract fun getSharedLib (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/SharedLibrary;
	public final fun getSharedLib (Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/SharedLibrary;
	public abstract fun getSize ()I
	public final fun getStaticLib (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/StaticLibrary;
	public final fun getStaticLib (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/StaticLibrary;
	public abstract fun getStaticLib (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/StaticLibrary;
	public final fun getStaticLib (Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/StaticLibrary;
	public abstract fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTarget;
	public final fun getTest (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/TestExecutable;
	public final fun getTest (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/TestExecutable;
	public abstract fun getTest (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/TestExecutable;
	public final fun getTest (Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/TestExecutable;
	public final fun remove (Ljava/lang/Object;)Z
	public abstract fun remove (Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBinary;)Z
	public final fun sharedLib ()V
	public final fun sharedLib (Ljava/lang/String;)V
	public final fun sharedLib (Ljava/lang/String;Ljava/util/Collection;)V
	public final fun sharedLib (Ljava/lang/String;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)V
	public final fun sharedLib (Ljava/lang/String;Ljava/util/Collection;Lorg/gradle/api/Action;)V
	public final fun sharedLib (Ljava/lang/String;Lorg/gradle/api/Action;)V
	public final fun sharedLib (Ljava/util/Collection;)V
	public final fun sharedLib (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)V
	public final fun sharedLib (Ljava/util/Collection;Lorg/gradle/api/Action;)V
	public final fun sharedLib (Lorg/gradle/api/Action;)V
	public static synthetic fun sharedLib$default (Lorg/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer;Ljava/lang/String;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun sharedLib$default (Lorg/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer;Ljava/lang/String;Ljava/util/Collection;Lorg/gradle/api/Action;ILjava/lang/Object;)V
	public static synthetic fun sharedLib$default (Lorg/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun sharedLib$default (Lorg/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer;Ljava/util/Collection;Lorg/gradle/api/Action;ILjava/lang/Object;)V
	public final fun size ()I
	public final fun staticLib ()V
	public final fun staticLib (Ljava/lang/String;)V
	public final fun staticLib (Ljava/lang/String;Ljava/util/Collection;)V
	public final fun staticLib (Ljava/lang/String;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)V
	public final fun staticLib (Ljava/lang/String;Ljava/util/Collection;Lorg/gradle/api/Action;)V
	public final fun staticLib (Ljava/lang/String;Lorg/gradle/api/Action;)V
	public final fun staticLib (Ljava/util/Collection;)V
	public final fun staticLib (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)V
	public final fun staticLib (Ljava/util/Collection;Lorg/gradle/api/Action;)V
	public final fun staticLib (Lorg/gradle/api/Action;)V
	public static synthetic fun staticLib$default (Lorg/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer;Ljava/lang/String;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun staticLib$default (Lorg/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer;Ljava/lang/String;Ljava/util/Collection;Lorg/gradle/api/Action;ILjava/lang/Object;)V
	public static synthetic fun staticLib$default (Lorg/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun staticLib$default (Lorg/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer;Ljava/util/Collection;Lorg/gradle/api/Action;ILjava/lang/Object;)V
	public final fun test ()V
	public final fun test (Ljava/lang/String;)V
	public final fun test (Ljava/lang/String;Ljava/util/Collection;)V
	public final fun test (Ljava/lang/String;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)V
	public final fun test (Ljava/lang/String;Ljava/util/Collection;Lorg/gradle/api/Action;)V
	public final fun test (Ljava/lang/String;Lorg/gradle/api/Action;)V
	public final fun test (Ljava/util/Collection;)V
	public final fun test (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)V
	public final fun test (Ljava/util/Collection;Lorg/gradle/api/Action;)V
	public final fun test (Lorg/gradle/api/Action;)V
	public static synthetic fun test$default (Lorg/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer;Ljava/lang/String;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun test$default (Lorg/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer;Ljava/lang/String;Ljava/util/Collection;Lorg/gradle/api/Action;ILjava/lang/Object;)V
	public static synthetic fun test$default (Lorg/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer;Ljava/util/Collection;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun test$default (Lorg/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer;Ljava/util/Collection;Lorg/gradle/api/Action;ILjava/lang/Object;)V
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
}

public final class org/jetbrains/kotlin/gradle/dsl/DeprecatedKotlinTargetHierarchyDsl : org/jetbrains/kotlin/gradle/dsl/KotlinTargetHierarchyDsl {
	public fun apply (Lorg/jetbrains/kotlin/gradle/plugin/KotlinHierarchyTemplate;Lkotlin/jvm/functions/Function1;)V
	public fun custom (Lkotlin/jvm/functions/Function1;)V
	public fun default (Lkotlin/jvm/functions/Function1;)V
}

public abstract class org/jetbrains/kotlin/gradle/dsl/KotlinAndroidProjectExtension : org/jetbrains/kotlin/gradle/dsl/KotlinSingleTargetExtension, org/jetbrains/kotlin/gradle/dsl/KotlinAndroidExtension {
	public fun <init> (Lorg/gradle/api/Project;)V
	public fun compilerOptions (Lkotlin/jvm/functions/Function1;)V
	public fun compilerOptions (Lorg/gradle/api/Action;)V
	public synthetic fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions;
	public fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmCompilerOptions;
	public synthetic fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinAndroidTarget;
	public synthetic fun getTargetFuture$kotlin_gradle_plugin_common ()Lorg/jetbrains/kotlin/gradle/utils/Future;
	public fun target (Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinCommonCompile : org/jetbrains/kotlin/gradle/dsl/KotlinCompile, org/jetbrains/kotlin/gradle/tasks/KotlinCompilationTask {
}

public final class org/jetbrains/kotlin/gradle/dsl/KotlinCommonCompile$DefaultImpls {
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompile;Lkotlin/jvm/functions/Function1;)V
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompile;Lorg/gradle/api/Action;)V
	public static fun kotlinOptions (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompile;Lkotlin/jvm/functions/Function1;)V
	public static fun kotlinOptions (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompile;Lorg/gradle/api/Action;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinJsCompile : org/jetbrains/kotlin/gradle/dsl/KotlinCompile, org/jetbrains/kotlin/gradle/tasks/KotlinCompilationTask {
}

public final class org/jetbrains/kotlin/gradle/dsl/KotlinJsCompile$DefaultImpls {
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsCompile;Lkotlin/jvm/functions/Function1;)V
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsCompile;Lorg/gradle/api/Action;)V
	public static fun kotlinOptions (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsCompile;Lkotlin/jvm/functions/Function1;)V
	public static fun kotlinOptions (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsCompile;Lorg/gradle/api/Action;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinJsDce : org/gradle/api/Task, org/jetbrains/kotlin/gradle/tasks/KotlinToolTask {
	public abstract fun dceOptions (Lkotlin/jvm/functions/Function1;)V
	public abstract fun getDceOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsDceOptions;
	public abstract fun getKeep ()Ljava/util/List;
	public abstract fun keep ([Ljava/lang/String;)V
}

public final class org/jetbrains/kotlin/gradle/dsl/KotlinJsDce$DefaultImpls {
	public static fun dceOptions (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsDce;Lkotlin/jvm/functions/Function1;)V
	public static fun toolOptions (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsDce;Lkotlin/jvm/functions/Function1;)V
	public static fun toolOptions (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsDce;Lorg/gradle/api/Action;)V
}

public abstract class org/jetbrains/kotlin/gradle/dsl/KotlinJsProjectExtension : org/jetbrains/kotlin/gradle/dsl/KotlinSingleTargetExtension, org/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerTypeHolder {
	public field irPreset Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrSingleTargetPreset;
	public fun <init> (Lorg/gradle/api/Project;)V
	public synthetic fun getBOTH ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;
	public fun getCompilerTypeFromProperties ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;
	public fun getDefaultJsCompilerType ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;
	public fun getIR ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;
	public final fun getIrPreset ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrSingleTargetPreset;
	public synthetic fun getLEGACY ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;
	public synthetic fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun getTarget ()Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;
	public synthetic fun getTargetFuture$kotlin_gradle_plugin_common ()Lorg/jetbrains/kotlin/gradle/utils/Future;
	public final synthetic fun getTargets ()Lorg/gradle/api/NamedDomainObjectContainer;
	public final fun js ()Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;
	public final fun js (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;
	public final fun js (Ljava/lang/String;Lorg/gradle/api/Action;)Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;
	public final fun js (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;
	public final fun js (Lorg/gradle/api/Action;)Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;
	public final fun js (Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;
	public final fun js (Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;Lorg/gradle/api/Action;)Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;
	public static synthetic fun js$default (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsProjectExtension;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;
	public static synthetic fun js$default (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsProjectExtension;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;
	public static synthetic fun js$default (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsProjectExtension;Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;
	public final fun registerTargetObserver (Lkotlin/jvm/functions/Function1;)V
	public final fun setIrPreset (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrSingleTargetPreset;)V
	public fun target (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinJvmCompile : org/jetbrains/kotlin/gradle/tasks/KotlinJvmCompile {
}

public final class org/jetbrains/kotlin/gradle/dsl/KotlinJvmCompile$DefaultImpls {
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmCompile;Lkotlin/jvm/functions/Function1;)V
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmCompile;Lorg/gradle/api/Action;)V
	public static fun getKotlinJavaToolchain (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmCompile;)Lorg/jetbrains/kotlin/gradle/tasks/KotlinJavaToolchain;
	public static fun kotlinOptions (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmCompile;Lkotlin/jvm/functions/Function1;)V
	public static fun kotlinOptions (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmCompile;Lorg/gradle/api/Action;)V
}

public abstract class org/jetbrains/kotlin/gradle/dsl/KotlinJvmProjectExtension : org/jetbrains/kotlin/gradle/dsl/KotlinSingleJavaTargetExtension, org/jetbrains/kotlin/gradle/dsl/KotlinJvmExtension {
	public fun <init> (Lorg/gradle/api/Project;)V
	public fun compilerOptions (Lkotlin/jvm/functions/Function1;)V
	public fun compilerOptions (Lorg/gradle/api/Action;)V
	public synthetic fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions;
	public fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmCompilerOptions;
	public synthetic fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinWithJavaTarget;
	public synthetic fun getTargetFuture$kotlin_gradle_plugin_common ()Lorg/jetbrains/kotlin/gradle/utils/Future;
	public fun target (Lkotlin/jvm/functions/Function1;)V
}

public abstract class org/jetbrains/kotlin/gradle/dsl/KotlinNativeBinaryContainer : org/jetbrains/kotlin/gradle/dsl/AbstractKotlinNativeBinaryContainer, org/gradle/api/DomainObjectSet {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/dsl/KotlinNativeBinaryContainer$Companion;
	public fun <init> (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTarget;Lorg/gradle/api/DomainObjectSet;)V
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun add (Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBinary;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun addAllLater (Lorg/gradle/api/provider/Provider;)V
	public fun addLater (Lorg/gradle/api/provider/Provider;)V
	public fun all (Lgroovy/lang/Closure;)V
	public fun all (Lorg/gradle/api/Action;)V
	public fun clear ()V
	public fun configureEach (Lorg/gradle/api/Action;)V
	public fun contains (Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBinary;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	protected fun createBinaries (Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeOutputKind;Ljava/util/Collection;Lkotlin/jvm/functions/Function4;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun findAll (Lgroovy/lang/Closure;)Ljava/util/Collection;
	public fun findAll (Lgroovy/lang/Closure;)Ljava/util/Set;
	public fun findByName (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBinary;
	public fun findExecutable (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/Executable;
	public fun findFramework (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/Framework;
	public fun findSharedLib (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/SharedLibrary;
	public fun findStaticLib (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/StaticLibrary;
	public fun findTest (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/TestExecutable;
	public fun getByName (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBinary;
	public fun getExecutable (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/Executable;
	public fun getFramework (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/Framework;
	public final fun getProject ()Lorg/gradle/api/Project;
	public fun getSharedLib (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/SharedLibrary;
	public fun getSize ()I
	public fun getStaticLib (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/StaticLibrary;
	public fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTarget;
	public fun getTest (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/TestExecutable;
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public synthetic fun matching (Lgroovy/lang/Closure;)Lorg/gradle/api/DomainObjectCollection;
	public fun matching (Lgroovy/lang/Closure;)Lorg/gradle/api/DomainObjectSet;
	public synthetic fun matching (Lorg/gradle/api/specs/Spec;)Lorg/gradle/api/DomainObjectCollection;
	public fun matching (Lorg/gradle/api/specs/Spec;)Lorg/gradle/api/DomainObjectSet;
	public fun remove (Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBinary;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public fun whenObjectAdded (Lgroovy/lang/Closure;)V
	public fun whenObjectAdded (Lorg/gradle/api/Action;)Lorg/gradle/api/Action;
	public fun whenObjectRemoved (Lgroovy/lang/Closure;)V
	public fun whenObjectRemoved (Lorg/gradle/api/Action;)Lorg/gradle/api/Action;
	public synthetic fun withType (Ljava/lang/Class;)Lorg/gradle/api/DomainObjectCollection;
	public fun withType (Ljava/lang/Class;)Lorg/gradle/api/DomainObjectSet;
	public fun withType (Ljava/lang/Class;Lgroovy/lang/Closure;)Lorg/gradle/api/DomainObjectCollection;
	public fun withType (Ljava/lang/Class;Lorg/gradle/api/Action;)Lorg/gradle/api/DomainObjectCollection;
}

public final class org/jetbrains/kotlin/gradle/dsl/KotlinNativeBinaryContainer$Companion {
}

public final class org/jetbrains/kotlin/gradle/dsl/KotlinProjectExtensionKt {
	public static final fun getKotlinExtension (Lorg/gradle/api/Project;)Lorg/jetbrains/kotlin/gradle/dsl/KotlinProjectExtension;
}

public abstract class org/jetbrains/kotlin/gradle/dsl/KotlinSingleJavaTargetExtension : org/jetbrains/kotlin/gradle/dsl/KotlinSingleTargetExtension {
	public fun <init> (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/kotlin/gradle/dsl/KotlinSingleTargetExtension : org/jetbrains/kotlin/gradle/dsl/KotlinProjectExtension {
	public fun <init> (Lorg/gradle/api/Project;)V
	public abstract fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public final fun target (Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/kotlin/gradle/dsl/KotlinSourceSetConvention : kotlin/properties/ReadOnlyProperty {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/dsl/KotlinSourceSetConvention;
	public synthetic fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/gradle/api/NamedDomainObjectContainer;Lkotlin/reflect/KProperty;)Lorg/gradle/api/NamedDomainObjectProvider;
}

public final class org/jetbrains/kotlin/gradle/dsl/NativeCacheKind : java/lang/Enum {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/dsl/NativeCacheKind$Companion;
	public static final field DYNAMIC Lorg/jetbrains/kotlin/gradle/dsl/NativeCacheKind;
	public static final field HEADER Lorg/jetbrains/kotlin/gradle/dsl/NativeCacheKind;
	public static final field NONE Lorg/jetbrains/kotlin/gradle/dsl/NativeCacheKind;
	public static final field STATIC Lorg/jetbrains/kotlin/gradle/dsl/NativeCacheKind;
	public final fun getOutputKind ()Lorg/jetbrains/kotlin/konan/target/CompilerOutputKind;
	public final fun getProduce ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/NativeCacheKind;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/dsl/NativeCacheKind;
}

public final class org/jetbrains/kotlin/gradle/dsl/NativeCacheKind$Companion {
	public final fun byCompilerArgument (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/NativeCacheKind;
}

public final class org/jetbrains/kotlin/gradle/dsl/NativeCacheOrchestration : java/lang/Enum {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/dsl/NativeCacheOrchestration$Companion;
	public static final field Compiler Lorg/jetbrains/kotlin/gradle/dsl/NativeCacheOrchestration;
	public static final field Gradle Lorg/jetbrains/kotlin/gradle/dsl/NativeCacheOrchestration;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/NativeCacheOrchestration;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/dsl/NativeCacheOrchestration;
}

public final class org/jetbrains/kotlin/gradle/dsl/NativeCacheOrchestration$Companion {
	public final fun byCompilerArgument (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/NativeCacheOrchestration;
}

public abstract interface class org/jetbrains/kotlin/gradle/execution/KotlinAggregateExecutionSource : org/jetbrains/kotlin/gradle/plugin/KotlinExecution$ExecutionSource {
	public abstract fun getExecutionSources ()Ljava/lang/Iterable;
}

public abstract interface class org/jetbrains/kotlin/gradle/execution/KotlinAggregatingExecution : org/jetbrains/kotlin/gradle/plugin/KotlinExecution {
	public abstract fun configureAllExecutions (Lkotlin/jvm/functions/Function1;)V
	public abstract fun configureAllExecutions (Lorg/gradle/api/Action;)V
	public abstract fun getConfiguredExecutions ()Ljava/lang/Iterable;
}

public final class org/jetbrains/kotlin/gradle/execution/KotlinAggregatingExecution$DefaultImpls {
	public static fun configureAllExecutions (Lorg/jetbrains/kotlin/gradle/execution/KotlinAggregatingExecution;Lorg/gradle/api/Action;)V
}

public abstract class org/jetbrains/kotlin/gradle/incremental/IncrementalModuleInfoBuildService : org/gradle/api/services/BuildService, org/jetbrains/kotlin/gradle/incremental/IncrementalModuleInfoProvider {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/incremental/IncrementalModuleInfoBuildService$Companion;
	public fun <init> ()V
	public fun getInfo ()Lorg/jetbrains/kotlin/incremental/IncrementalModuleInfo;
}

public final class org/jetbrains/kotlin/gradle/incremental/IncrementalModuleInfoBuildService$Companion {
	public final fun registerIfAbsent (Lorg/gradle/api/Project;Lorg/gradle/api/provider/Provider;)Lorg/gradle/api/provider/Provider;
}

public abstract class org/jetbrains/kotlin/gradle/incremental/IncrementalModuleInfoBuildService$Parameters : org/gradle/api/services/BuildServiceParameters {
	public fun <init> ()V
	public abstract fun getInfo ()Lorg/gradle/api/provider/Property;
}

public abstract interface class org/jetbrains/kotlin/gradle/incremental/IncrementalModuleInfoProvider {
	public abstract fun getInfo ()Lorg/jetbrains/kotlin/incremental/IncrementalModuleInfo;
}

public final class org/jetbrains/kotlin/gradle/logging/GradleErrorMessageCollector : org/jetbrains/kotlin/cli/common/messages/MessageCollector {
	public fun <init> (Lorg/gradle/api/logging/Logger;Lorg/jetbrains/kotlin/cli/common/messages/MessageCollector;Ljava/util/List;Ljava/lang/String;)V
	public synthetic fun <init> (Lorg/gradle/api/logging/Logger;Lorg/jetbrains/kotlin/cli/common/messages/MessageCollector;Ljava/util/List;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lorg/jetbrains/kotlin/buildtools/api/KotlinLogger;Lorg/jetbrains/kotlin/cli/common/messages/MessageCollector;Ljava/util/List;Ljava/lang/String;)V
	public synthetic fun <init> (Lorg/jetbrains/kotlin/buildtools/api/KotlinLogger;Lorg/jetbrains/kotlin/cli/common/messages/MessageCollector;Ljava/util/List;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun clear ()V
	public final fun flush (Ljava/util/Set;)V
	public fun hasErrors ()Z
	public final fun report (Ljava/lang/Throwable;Lorg/jetbrains/kotlin/cli/common/messages/CompilerMessageSourceLocation;)V
	public fun report (Lorg/jetbrains/kotlin/cli/common/messages/CompilerMessageSeverity;Ljava/lang/String;Lorg/jetbrains/kotlin/cli/common/messages/CompilerMessageSourceLocation;)V
}

public final class org/jetbrains/kotlin/gradle/model/builder/KaptModelBuilder : org/gradle/tooling/provider/model/ToolingModelBuilder {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/model/builder/KaptModelBuilder$Companion;
	public fun <init> ()V
	public fun buildAll (Ljava/lang/String;Lorg/gradle/api/Project;)Ljava/lang/Object;
	public fun canBuild (Ljava/lang/String;)Z
}

public final class org/jetbrains/kotlin/gradle/model/builder/KaptModelBuilder$Companion {
}

public final class org/jetbrains/kotlin/gradle/model/builder/KotlinAndroidExtensionModelBuilder : org/gradle/tooling/provider/model/ToolingModelBuilder {
	public fun <init> ()V
	public fun buildAll (Ljava/lang/String;Lorg/gradle/api/Project;)Ljava/lang/Object;
	public fun canBuild (Ljava/lang/String;)Z
}

public final class org/jetbrains/kotlin/gradle/model/builder/KotlinModelBuilder : org/gradle/tooling/provider/model/ToolingModelBuilder {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/model/builder/KotlinModelBuilder$Companion;
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinAndroidTarget;)V
	public fun buildAll (Ljava/lang/String;Lorg/gradle/api/Project;)Ljava/lang/Object;
	public fun canBuild (Ljava/lang/String;)Z
}

public final class org/jetbrains/kotlin/gradle/model/builder/KotlinModelBuilder$Companion {
}

public final class org/jetbrains/kotlin/gradle/model/impl/CompilerArgumentsImpl : java/io/Serializable, org/jetbrains/kotlin/gradle/model/CompilerArguments {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/model/impl/CompilerArgumentsImpl$Companion;
	public fun <init> (Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;Ljava/util/List;Ljava/util/List;)Lorg/jetbrains/kotlin/gradle/model/impl/CompilerArgumentsImpl;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/model/impl/CompilerArgumentsImpl;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/model/impl/CompilerArgumentsImpl;
	public fun equals (Ljava/lang/Object;)Z
	public fun getCompileClasspath ()Ljava/util/List;
	public fun getCurrentArguments ()Ljava/util/List;
	public fun getDefaultArguments ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/model/impl/CompilerArgumentsImpl$Companion {
}

public final class org/jetbrains/kotlin/gradle/model/impl/KaptImpl : java/io/Serializable, org/jetbrains/kotlin/gradle/model/Kapt {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/model/impl/KaptImpl$Companion;
	public fun <init> (Ljava/lang/String;Ljava/util/Collection;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/Collection;
	public final fun copy (Ljava/lang/String;Ljava/util/Collection;)Lorg/jetbrains/kotlin/gradle/model/impl/KaptImpl;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/model/impl/KaptImpl;Ljava/lang/String;Ljava/util/Collection;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/model/impl/KaptImpl;
	public fun equals (Ljava/lang/Object;)Z
	public fun getKaptSourceSets ()Ljava/util/Collection;
	public fun getModelVersion ()J
	public fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/model/impl/KaptImpl$Companion {
}

public final class org/jetbrains/kotlin/gradle/model/impl/KaptSourceSetImpl : java/io/Serializable, org/jetbrains/kotlin/gradle/model/KaptSourceSet {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/model/impl/KaptSourceSetImpl$Companion;
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/model/KaptSourceSet$KaptSourceSetType;Ljava/io/File;Ljava/io/File;Ljava/io/File;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lorg/jetbrains/kotlin/gradle/model/KaptSourceSet$KaptSourceSetType;
	public final fun component3 ()Ljava/io/File;
	public final fun component4 ()Ljava/io/File;
	public final fun component5 ()Ljava/io/File;
	public final fun copy (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/model/KaptSourceSet$KaptSourceSetType;Ljava/io/File;Ljava/io/File;Ljava/io/File;)Lorg/jetbrains/kotlin/gradle/model/impl/KaptSourceSetImpl;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/model/impl/KaptSourceSetImpl;Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/model/KaptSourceSet$KaptSourceSetType;Ljava/io/File;Ljava/io/File;Ljava/io/File;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/model/impl/KaptSourceSetImpl;
	public fun equals (Ljava/lang/Object;)Z
	public fun getGeneratedClassesDirectory ()Ljava/io/File;
	public fun getGeneratedKotlinSourcesDirectory ()Ljava/io/File;
	public fun getGeneratedSourcesDirectory ()Ljava/io/File;
	public fun getName ()Ljava/lang/String;
	public fun getType ()Lorg/jetbrains/kotlin/gradle/model/KaptSourceSet$KaptSourceSetType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/model/impl/KaptSourceSetImpl$Companion {
}

public final class org/jetbrains/kotlin/gradle/model/impl/KotlinAndroidExtensionImpl : java/io/Serializable, org/jetbrains/kotlin/gradle/model/KotlinAndroidExtension {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/model/impl/KotlinAndroidExtensionImpl$Companion;
	public fun <init> (Ljava/lang/String;ZLjava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Z
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;ZLjava/lang/String;)Lorg/jetbrains/kotlin/gradle/model/impl/KotlinAndroidExtensionImpl;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/model/impl/KotlinAndroidExtensionImpl;Ljava/lang/String;ZLjava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/model/impl/KotlinAndroidExtensionImpl;
	public fun equals (Ljava/lang/Object;)Z
	public fun getDefaultCacheImplementation ()Ljava/lang/String;
	public fun getModelVersion ()J
	public fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun isExperimental ()Z
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/model/impl/KotlinAndroidExtensionImpl$Companion {
}

public final class org/jetbrains/kotlin/gradle/model/impl/KotlinProjectImpl : java/io/Serializable, org/jetbrains/kotlin/gradle/model/KotlinProject {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/model/impl/KotlinProjectImpl$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/model/KotlinProject$ProjectType;Ljava/util/Collection;Ljava/util/Collection;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Lorg/jetbrains/kotlin/gradle/model/KotlinProject$ProjectType;
	public final fun component4 ()Ljava/util/Collection;
	public final fun component5 ()Ljava/util/Collection;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/model/KotlinProject$ProjectType;Ljava/util/Collection;Ljava/util/Collection;)Lorg/jetbrains/kotlin/gradle/model/impl/KotlinProjectImpl;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/model/impl/KotlinProjectImpl;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/model/KotlinProject$ProjectType;Ljava/util/Collection;Ljava/util/Collection;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/model/impl/KotlinProjectImpl;
	public fun equals (Ljava/lang/Object;)Z
	public fun getExpectedByDependencies ()Ljava/util/Collection;
	public fun getKotlinVersion ()Ljava/lang/String;
	public fun getModelVersion ()J
	public fun getName ()Ljava/lang/String;
	public fun getProjectType ()Lorg/jetbrains/kotlin/gradle/model/KotlinProject$ProjectType;
	public fun getSourceSets ()Ljava/util/Collection;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/model/impl/KotlinProjectImpl$Companion {
}

public final class org/jetbrains/kotlin/gradle/model/impl/SourceSetImpl : java/io/Serializable, org/jetbrains/kotlin/gradle/model/SourceSet {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/model/impl/SourceSetImpl$Companion;
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/model/SourceSet$SourceSetType;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;Ljava/io/File;Ljava/io/File;Lorg/jetbrains/kotlin/gradle/model/CompilerArguments;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lorg/jetbrains/kotlin/gradle/model/SourceSet$SourceSetType;
	public final fun component3 ()Ljava/util/Collection;
	public final fun component4 ()Ljava/util/Collection;
	public final fun component5 ()Ljava/util/Collection;
	public final fun component6 ()Ljava/io/File;
	public final fun component7 ()Ljava/io/File;
	public final fun component8 ()Lorg/jetbrains/kotlin/gradle/model/CompilerArguments;
	public final fun copy (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/model/SourceSet$SourceSetType;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;Ljava/io/File;Ljava/io/File;Lorg/jetbrains/kotlin/gradle/model/CompilerArguments;)Lorg/jetbrains/kotlin/gradle/model/impl/SourceSetImpl;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/model/impl/SourceSetImpl;Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/model/SourceSet$SourceSetType;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;Ljava/io/File;Ljava/io/File;Lorg/jetbrains/kotlin/gradle/model/CompilerArguments;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/model/impl/SourceSetImpl;
	public fun equals (Ljava/lang/Object;)Z
	public fun getClassesOutputDirectory ()Ljava/io/File;
	public fun getCompilerArguments ()Lorg/jetbrains/kotlin/gradle/model/CompilerArguments;
	public fun getFriendSourceSets ()Ljava/util/Collection;
	public fun getName ()Ljava/lang/String;
	public fun getResourcesDirectories ()Ljava/util/Collection;
	public fun getResourcesOutputDirectory ()Ljava/io/File;
	public fun getSourceDirectories ()Ljava/util/Collection;
	public fun getType ()Lorg/jetbrains/kotlin/gradle/model/SourceSet$SourceSetType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/model/impl/SourceSetImpl$Companion {
}

public abstract class org/jetbrains/kotlin/gradle/plugin/AbstractKotlinAndroidPluginWrapper : org/jetbrains/kotlin/gradle/plugin/KotlinBasePluginWrapper {
	public fun <init> (Lorg/gradle/tooling/provider/model/ToolingModelBuilderRegistry;)V
	public fun getProjectExtensionClass ()Lkotlin/reflect/KClass;
	protected final fun getRegistry ()Lorg/gradle/tooling/provider/model/ToolingModelBuilderRegistry;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/AbstractKotlinJsPluginWrapper : org/jetbrains/kotlin/gradle/plugin/KotlinBasePluginWrapper {
	public fun <init> ()V
	public fun getProjectExtensionClass ()Lkotlin/reflect/KClass;
	public fun whenBuildEvaluated (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/kotlin/gradle/plugin/AbstractKotlinMultiplatformPluginWrapper : org/jetbrains/kotlin/gradle/plugin/KotlinBasePluginWrapper {
	public fun <init> ()V
	public fun getProjectExtensionClass ()Lkotlin/reflect/KClass;
}

public final class org/jetbrains/kotlin/gradle/plugin/AbstractKotlinPluginKt {
	public static final field COMPILER_CLASSPATH_CONFIGURATION_NAME Ljava/lang/String;
	public static final field NATIVE_COMPILER_PLUGIN_CLASSPATH_CONFIGURATION_NAME Ljava/lang/String;
	public static final field PLUGIN_CLASSPATH_CONFIGURATION_NAME Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/AbstractKotlinPluginWrapper : org/jetbrains/kotlin/gradle/plugin/KotlinBasePluginWrapper {
	public fun <init> (Lorg/gradle/tooling/provider/model/ToolingModelBuilderRegistry;)V
	public fun getProjectExtensionClass ()Lkotlin/reflect/KClass;
	protected final fun getRegistry ()Lorg/gradle/tooling/provider/model/ToolingModelBuilderRegistry;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/AbstractKotlinTargetConfigurator : org/jetbrains/kotlin/gradle/plugin/KotlinTargetConfigurator {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/AbstractKotlinTargetConfigurator$Companion;
	public static final field runTaskNameSuffix Ljava/lang/String;
	public static final field testTaskNameSuffix Ljava/lang/String;
	public fun <init> (Z)V
	public fun configureTarget (Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/AbstractKotlinTargetConfigurator$Companion {
}

public final class org/jetbrains/kotlin/gradle/plugin/AndroidTestedVariantArtifactsFilter : java/io/Serializable, org/gradle/api/specs/Spec {
	public fun <init> (Lorg/gradle/api/artifacts/ArtifactCollection;ZLjava/lang/String;)V
	public fun isSatisfiedBy (Ljava/io/File;)Z
	public synthetic fun isSatisfiedBy (Ljava/lang/Object;)Z
}

public class org/jetbrains/kotlin/gradle/plugin/BuildEventsListenerRegistryHolder {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/BuildEventsListenerRegistryHolder$Companion;
	public fun <init> (Lorg/gradle/build/event/BuildEventsListenerRegistry;)V
	public final fun getListenerRegistry ()Lorg/gradle/build/event/BuildEventsListenerRegistry;
}

public final class org/jetbrains/kotlin/gradle/plugin/BuildEventsListenerRegistryHolder$Companion {
	public final fun getInstance (Lorg/gradle/api/Project;)Lorg/jetbrains/kotlin/gradle/plugin/BuildEventsListenerRegistryHolder;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/BuildFinishedListenerService : java/lang/AutoCloseable, org/gradle/api/services/BuildService {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/BuildFinishedListenerService$Companion;
	public fun <init> ()V
	public fun close ()V
	public final fun onClose (Lkotlin/jvm/functions/Function0;)V
	public final fun onCloseOnceByKey (Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/BuildFinishedListenerService$Companion {
	public final fun getInstance (Lorg/gradle/api/Project;)Lorg/jetbrains/kotlin/gradle/plugin/BuildFinishedListenerService;
	public final fun registerIfAbsent (Lorg/gradle/api/Project;)Lorg/gradle/api/provider/Provider;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/DefaultKotlinBasePlugin : org/jetbrains/kotlin/gradle/plugin/KotlinBasePlugin {
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
	public fun getPluginVersion ()Ljava/lang/String;
	protected final fun setupAttributeMatchingStrategy (Lorg/gradle/api/Project;Z)V
	public static synthetic fun setupAttributeMatchingStrategy$default (Lorg/jetbrains/kotlin/gradle/plugin/DefaultKotlinBasePlugin;Lorg/gradle/api/Project;ZILjava/lang/Object;)V
	public fun whenBuildEvaluated (Lorg/gradle/api/Project;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/GradleUtilsKt {
	public static final fun getExtraProperties (Lorg/gradle/api/plugins/ExtensionAware;)Lorg/gradle/api/plugins/ExtraPropertiesExtension;
}

public class org/jetbrains/kotlin/gradle/plugin/KaptAnnotationProcessorOptions : org/jetbrains/kotlin/gradle/dsl/KaptArguments {
	public fun <init> ()V
	public fun <init> (Lorg/gradle/api/Project;Ljava/lang/Object;Ljava/lang/Object;)V
	public fun arg (Ljava/lang/Object;[Ljava/lang/Object;)V
	public fun arg (Ljava/lang/String;[Ljava/lang/String;)V
	public final fun execute (Lgroovy/lang/Closure;)V
}

public class org/jetbrains/kotlin/gradle/plugin/KaptExtension : org/jetbrains/kotlin/gradle/dsl/KaptExtensionConfig {
	public fun <init> ()V
	public fun annotationProcessor (Ljava/lang/String;)V
	public fun annotationProcessors ([Ljava/lang/String;)V
	public fun arguments (Lkotlin/jvm/functions/Function1;)V
	public fun arguments (Lorg/gradle/api/Action;)V
	public final fun getAdditionalArguments (Lorg/gradle/api/Project;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
	public final fun getAdditionalArgumentsForJavac (Lorg/gradle/api/Project;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/List;
	public fun getCorrectErrorTypes ()Z
	public fun getDetectMemoryLeaks ()Ljava/lang/String;
	public fun getDumpDefaultParameterValues ()Z
	public fun getGenerateStubs ()Z
	public fun getIncludeCompileClasspath ()Ljava/lang/Boolean;
	public fun getJavacOptions ()Ljava/util/Map;
	public fun getKeepJavacAnnotationProcessors ()Z
	public fun getMapDiagnosticLocations ()Z
	public fun getProcessors ()Ljava/lang/String;
	public fun getShowProcessorStats ()Z
	public fun getStrictMode ()Z
	public fun getStripMetadata ()Z
	public fun getUseBuildCache ()Z
	public fun getUseLightAnalysis ()Z
	public fun javacOptions (Lkotlin/jvm/functions/Function1;)V
	public fun javacOptions (Lorg/gradle/api/Action;)V
	public fun setCorrectErrorTypes (Z)V
	public fun setDetectMemoryLeaks (Ljava/lang/String;)V
	public fun setDumpDefaultParameterValues (Z)V
	public fun setGenerateStubs (Z)V
	public fun setIncludeCompileClasspath (Ljava/lang/Boolean;)V
	public fun setKeepJavacAnnotationProcessors (Z)V
	public fun setMapDiagnosticLocations (Z)V
	public fun setProcessors (Ljava/lang/String;)V
	public fun setShowProcessorStats (Z)V
	public fun setStrictMode (Z)V
	public fun setStripMetadata (Z)V
	public fun setUseBuildCache (Z)V
	public fun setUseLightAnalysis (Z)V
}

public class org/jetbrains/kotlin/gradle/plugin/KaptJavacOptionsDelegate : org/jetbrains/kotlin/gradle/dsl/KaptJavacOption {
	public fun <init> ()V
	public final fun execute (Lgroovy/lang/Closure;)V
	public fun option (Ljava/lang/Object;)V
	public fun option (Ljava/lang/Object;Ljava/lang/Object;)V
	public fun option (Ljava/lang/String;)V
	public fun option (Ljava/lang/String;Ljava/lang/String;)V
}

public class org/jetbrains/kotlin/gradle/plugin/KotlinAndroidPluginWrapper : org/jetbrains/kotlin/gradle/plugin/AbstractKotlinAndroidPluginWrapper {
	public fun <init> (Lorg/gradle/tooling/provider/model/ToolingModelBuilderRegistry;)V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
	public fun getPluginVariant ()Ljava/lang/String;
}

public class org/jetbrains/kotlin/gradle/plugin/KotlinApiPlugin : org/jetbrains/kotlin/gradle/plugin/KotlinBaseApiPlugin {
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/kotlin/gradle/plugin/KotlinBaseApiPlugin : org/jetbrains/kotlin/gradle/plugin/DefaultKotlinBasePlugin, org/jetbrains/kotlin/gradle/plugin/KotlinJvmFactory {
	public fun <init> ()V
	public fun addCompilerPluginDependency (Lorg/gradle/api/provider/Provider;)V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
	public fun createCompilerJvmOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmCompilerOptions;
	public fun createKotlinAndroidExtension ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinAndroidExtension;
	public fun createKotlinJvmExtension ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmExtension;
	public fun createKotlinJvmOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;
	public fun getCompilerPlugins ()Lorg/gradle/api/file/FileCollection;
	public synthetic fun getKaptExtension ()Lorg/jetbrains/kotlin/gradle/dsl/KaptExtensionConfig;
	public fun getKaptExtension ()Lorg/jetbrains/kotlin/gradle/plugin/KaptExtension;
	public fun getKotlinExtension ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinProjectExtension;
	public synthetic fun getKotlinExtension ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinTopLevelExtensionConfig;
	public fun getProviderFactory ()Lorg/gradle/api/provider/ProviderFactory;
	public fun registerKaptGenerateStubsTask (Ljava/lang/String;)Lorg/gradle/api/tasks/TaskProvider;
	public fun registerKaptGenerateStubsTask (Ljava/lang/String;Lorg/gradle/api/tasks/TaskProvider;Lorg/jetbrains/kotlin/gradle/dsl/KaptExtensionConfig;Lorg/gradle/api/provider/Provider;)Lorg/gradle/api/tasks/TaskProvider;
	public fun registerKaptTask (Ljava/lang/String;)Lorg/gradle/api/tasks/TaskProvider;
	public fun registerKaptTask (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/dsl/KaptExtensionConfig;)Lorg/gradle/api/tasks/TaskProvider;
	public fun registerKotlinJvmCompileTask (Ljava/lang/String;)Lorg/gradle/api/tasks/TaskProvider;
	public fun registerKotlinJvmCompileTask (Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/tasks/TaskProvider;
	public fun registerKotlinJvmCompileTask (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmCompilerOptions;Lorg/gradle/api/provider/Provider;)Lorg/gradle/api/tasks/TaskProvider;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/KotlinBasePluginWrapper : org/jetbrains/kotlin/gradle/plugin/DefaultKotlinBasePlugin {
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
	public abstract fun getPluginVariant ()Ljava/lang/String;
	public fun getProjectExtensionClass ()Lkotlin/reflect/KClass;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/KotlinCompilationProcessor {
	protected final fun getDefaultKotlinDestinationDir ()Lorg/gradle/api/provider/Provider;
	public abstract fun getKotlinTask ()Lorg/gradle/api/tasks/TaskProvider;
	protected final fun getProject ()Lorg/gradle/api/Project;
	public abstract fun run ()V
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$ArgumentType : java/lang/Enum {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$ArgumentType$Companion;
	public static final field DependencyClasspath Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$ArgumentType;
	public static final field PluginClasspath Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$ArgumentType;
	public static final field Primitive Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$ArgumentType;
	public static final field Sources Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$ArgumentType;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$ArgumentType;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$ArgumentType;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$ArgumentType$Companion {
	public final fun getAll ()Ljava/util/Set;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$ContributeCompilerArgumentsContext {
	public abstract fun dependencyClasspath (Lkotlin/jvm/functions/Function1;)V
	public abstract fun pluginClasspath (Lkotlin/jvm/functions/Function1;)V
	public abstract fun primitive (Lkotlin/jvm/functions/Function1;)V
	public abstract fun runSafe (Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public abstract fun sources (Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$CreateCompilerArgumentsContext {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$CreateCompilerArgumentsContext$Companion;
	public abstract fun create (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/cli/common/arguments/CommonToolArguments;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$CreateCompilerArgumentsContext$Companion {
	public final fun getDefault ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$CreateCompilerArgumentsContext;
	public final fun getLenient ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$CreateCompilerArgumentsContext;
}

public class org/jetbrains/kotlin/gradle/plugin/KotlinJsPluginWrapper : org/jetbrains/kotlin/gradle/plugin/AbstractKotlinJsPluginWrapper {
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
	public fun getPluginVariant ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinJvmPluginKt {
	public static final field KOTLIN_DSL_NAME Ljava/lang/String;
	public static final field KOTLIN_JS_DSL_NAME Ljava/lang/String;
	public static final field KOTLIN_OPTIONS_DSL_NAME Ljava/lang/String;
}

public class org/jetbrains/kotlin/gradle/plugin/KotlinMultiplatformPluginWrapper : org/jetbrains/kotlin/gradle/plugin/AbstractKotlinMultiplatformPluginWrapper {
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
	public fun getPluginVariant ()Ljava/lang/String;
}

public class org/jetbrains/kotlin/gradle/plugin/KotlinNativeTargetConfigurator : org/jetbrains/kotlin/gradle/plugin/AbstractKotlinTargetConfigurator {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/KotlinNativeTargetConfigurator$Companion;
	public static final field INTEROP_GROUP Ljava/lang/String;
	public static final field RUN_GROUP Ljava/lang/String;
	public fun <init> ()V
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinNativeTargetConfigurator$Companion {
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinNativeTargetConfigurator$NativeArtifactFormat {
	public static final field FRAMEWORK Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/KotlinNativeTargetConfigurator$NativeArtifactFormat;
	public static final field KLIB Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/KotlinOnlyTargetConfigurator : org/jetbrains/kotlin/gradle/plugin/AbstractKotlinTargetConfigurator {
	public fun <init> (Z)V
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinPluginInMultipleProjectsHolderKt {
	public static final field MULTIPLE_KOTLIN_PLUGINS_LOADED_WARNING Ljava/lang/String;
	public static final field MULTIPLE_KOTLIN_PLUGINS_SPECIFIC_PROJECTS_INFO Ljava/lang/String;
	public static final field MULTIPLE_KOTLIN_PLUGINS_SPECIFIC_PROJECTS_WARNING Ljava/lang/String;
}

public class org/jetbrains/kotlin/gradle/plugin/KotlinPluginWrapper : org/jetbrains/kotlin/gradle/plugin/AbstractKotlinPluginWrapper {
	public fun <init> (Lorg/gradle/tooling/provider/model/ToolingModelBuilderRegistry;)V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
	public fun getPluginVariant ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinPluginWrapperKt {
	public static final fun getKotlinPluginVersion (Lorg/gradle/api/Project;)Ljava/lang/String;
	public static final fun getKotlinPluginVersion (Lorg/gradle/api/logging/Logger;)Ljava/lang/String;
	public static final fun getKotlinToolingVersion (Lorg/gradle/api/Project;)Lorg/jetbrains/kotlin/tooling/core/KotlinToolingVersion;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinTargetConfigurator {
	public abstract fun configureTarget (Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinTargetConfigurator$DefaultImpls {
	public static fun configureTarget (Lorg/jetbrains/kotlin/gradle/plugin/KotlinTargetConfigurator;Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinTargetConfiguratorKt {
	public static final fun usesPlatformOf (Lorg/gradle/api/artifacts/Configuration;Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;)Lorg/gradle/api/artifacts/Configuration;
}

public final class org/jetbrains/kotlin/gradle/plugin/ProjectLocalConfigurations {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/ProjectLocalConfigurations;
	public static final field PUBLIC_VALUE Ljava/lang/String;
	public final fun getATTRIBUTE ()Lorg/gradle/api/attributes/Attribute;
	public final fun setupAttributesMatchingStrategy (Lorg/gradle/api/attributes/AttributesSchema;)Lorg/gradle/api/attributes/AttributeMatchingStrategy;
}

public final class org/jetbrains/kotlin/gradle/plugin/ProjectLocalConfigurations$ProjectLocalCompatibility : org/gradle/api/attributes/AttributeCompatibilityRule {
	public fun <init> ()V
	public synthetic fun execute (Ljava/lang/Object;)V
	public fun execute (Lorg/gradle/api/attributes/CompatibilityCheckDetails;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/ProjectLocalConfigurations$ProjectLocalDisambiguation : org/gradle/api/attributes/AttributeDisambiguationRule {
	public fun <init> ()V
	public synthetic fun execute (Ljava/lang/Object;)V
	public fun execute (Lorg/gradle/api/attributes/MultipleCandidatesDetails;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/SubpluginEnvironment {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/SubpluginEnvironment$Companion;
	public fun <init> (Ljava/util/List;Ljava/lang/String;)V
	public final fun addSubpluginOptions (Lorg/gradle/api/Project;Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;)Ljava/util/List;
}

public final class org/jetbrains/kotlin/gradle/plugin/SubpluginEnvironment$Companion {
	public final fun loadSubplugins (Lorg/gradle/api/Project;)Lorg/jetbrains/kotlin/gradle/plugin/SubpluginEnvironment;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/VariantImplementationFactories : org/gradle/api/services/BuildService {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/VariantImplementationFactories$Companion;
	public fun <init> ()V
	public final fun get (Lkotlin/reflect/KClass;)Lorg/jetbrains/kotlin/gradle/plugin/VariantImplementationFactories$VariantImplementationFactory;
}

public final class org/jetbrains/kotlin/gradle/plugin/VariantImplementationFactories$Companion {
	public final fun get (Lorg/gradle/api/Project;)Lorg/jetbrains/kotlin/gradle/plugin/VariantImplementationFactories;
	public final fun getProvider (Lorg/gradle/api/Project;)Lorg/gradle/api/provider/Provider;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/VariantImplementationFactories$Parameters : org/gradle/api/services/BuildServiceParameters {
	public abstract fun getFactories ()Lorg/gradle/api/provider/MapProperty;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/VariantImplementationFactories$VariantImplementationFactory : java/io/Serializable {
}

public abstract class org/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$Companion;
	public fun <init> (Lorg/gradle/api/Project;)V
	public final fun framework (Lkotlin/jvm/functions/Function1;)V
	public final fun framework (Lorg/gradle/api/Action;)V
	public final fun getAuthors ()Ljava/lang/String;
	public final fun getExtraSpecAttributes ()Ljava/util/Map;
	public final fun getHomepage ()Ljava/lang/String;
	public final fun getIos ()Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$PodspecPlatformSettings;
	public final fun getLicense ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getOsx ()Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$PodspecPlatformSettings;
	public final fun getPodfile ()Ljava/io/File;
	public final fun getPods ()Lorg/gradle/api/NamedDomainObjectSet;
	public final fun getPodsAsTaskInput ()Ljava/util/List;
	public final fun getPublishDir ()Ljava/io/File;
	public final fun getSource ()Ljava/lang/String;
	public final fun getSummary ()Ljava/lang/String;
	public final fun getTvos ()Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$PodspecPlatformSettings;
	public final fun getVersion ()Ljava/lang/String;
	public final fun getWatchos ()Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$PodspecPlatformSettings;
	public final fun getXcodeConfigurationToNativeBuildType ()Ljava/util/Map;
	public final fun noPodspec ()V
	public final fun pod (Ljava/lang/String;)V
	public final fun pod (Ljava/lang/String;Ljava/lang/String;)V
	public final fun pod (Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)V
	public final fun pod (Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Ljava/lang/String;)V
	public final fun pod (Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V
	public final fun pod (Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Z)V
	public final fun pod (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public final fun pod (Ljava/lang/String;Lorg/gradle/api/Action;)V
	public static synthetic fun pod$default (Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)V
	public final fun setAuthors (Ljava/lang/String;)V
	public final fun setExtraSpecAttributes (Ljava/util/Map;)V
	public final fun setHomepage (Ljava/lang/String;)V
	public final fun setLicense (Ljava/lang/String;)V
	public final fun setName (Ljava/lang/String;)V
	public final fun setPodfile (Ljava/io/File;)V
	public final fun setPublishDir (Ljava/io/File;)V
	public final fun setSource (Ljava/lang/String;)V
	public final fun setSummary (Ljava/lang/String;)V
	public final fun setVersion (Ljava/lang/String;)V
	public final fun specRepos (Lkotlin/jvm/functions/Function1;)V
	public final fun specRepos (Lorg/gradle/api/Action;)V
}

public abstract class org/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency : org/gradle/api/Named {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun getExtraOpts ()Ljava/util/List;
	public final fun getHeaders ()Ljava/lang/String;
	public final fun getInteropBindingDependencies ()Ljava/util/List;
	public final fun getLinkOnly ()Z
	public final fun getModuleName ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public final fun getPackageName ()Ljava/lang/String;
	public final fun getSource ()Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency$PodLocation;
	public final fun getVersion ()Ljava/lang/String;
	public final fun git (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency$PodLocation;
	public final fun git (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency$PodLocation;
	public final fun git (Ljava/lang/String;Lorg/gradle/api/Action;)Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency$PodLocation;
	public static synthetic fun git$default (Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency$PodLocation;
	public final fun path (Ljava/io/File;)Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency$PodLocation;
	public final fun path (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency$PodLocation;
	public final fun setExtraOpts (Ljava/util/List;)V
	public final fun setHeaders (Ljava/lang/String;)V
	public final fun setLinkOnly (Z)V
	public final fun setModuleName (Ljava/lang/String;)V
	public final fun setPackageName (Ljava/lang/String;)V
	public final fun setSource (Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency$PodLocation;)V
	public final fun setVersion (Ljava/lang/String;)V
	public final fun useInteropBindingFrom (Ljava/lang/String;)V
}

public abstract class org/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency$PodLocation {
}

public final class org/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency$PodLocation$Git : org/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency$PodLocation {
	public fun <init> (Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/net/URI;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun copy (Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency$PodLocation$Git;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency$PodLocation$Git;Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency$PodLocation$Git;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBranch ()Ljava/lang/String;
	public final fun getCommit ()Ljava/lang/String;
	public final fun getTag ()Ljava/lang/String;
	public final fun getUrl ()Ljava/net/URI;
	public fun hashCode ()I
	public final fun setBranch (Ljava/lang/String;)V
	public final fun setCommit (Ljava/lang/String;)V
	public final fun setTag (Ljava/lang/String;)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency$PodLocation$Path : org/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency$PodLocation {
	public fun <init> (Ljava/io/File;)V
	public final fun component1 ()Ljava/io/File;
	public final fun copy (Ljava/io/File;)Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency$PodLocation$Path;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency$PodLocation$Path;Ljava/io/File;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency$PodLocation$Path;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDir ()Ljava/io/File;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$Companion {
}

public final class org/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$PodspecPlatformSettings : org/gradle/api/Named {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$PodspecPlatformSettings;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$PodspecPlatformSettings;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$PodspecPlatformSettings;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDeploymentTarget ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun setDeploymentTarget (Ljava/lang/String;)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$SpecRepos {
	public fun <init> ()V
	public final fun url (Ljava/lang/String;)V
}

public class org/jetbrains/kotlin/gradle/plugin/cocoapods/KotlinCocoapodsPlugin : org/gradle/api/Plugin {
	public static final field ARCHS_PROPERTY Ljava/lang/String;
	public static final field ARTIFACTS_PODSPEC_EXTENSION_NAME Ljava/lang/String;
	public static final field CFLAGS_PROPERTY Ljava/lang/String;
	public static final field COCOAPODS_EXTENSION_NAME Ljava/lang/String;
	public static final field CONFIGURATION_PROPERTY Ljava/lang/String;
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/KotlinCocoapodsPlugin$Companion;
	public static final field DUMMY_FRAMEWORK_TASK_NAME Ljava/lang/String;
	public static final field FRAMEWORK_PATHS_PROPERTY Ljava/lang/String;
	public static final field GENERATE_WRAPPER_PROPERTY Ljava/lang/String;
	public static final field HEADER_PATHS_PROPERTY Ljava/lang/String;
	public static final field PLATFORM_PROPERTY Ljava/lang/String;
	public static final field POD_BUILD_TASK_NAME Ljava/lang/String;
	public static final field POD_FRAMEWORK_PREFIX Ljava/lang/String;
	public static final field POD_GEN_TASK_NAME Ljava/lang/String;
	public static final field POD_IMPORT_TASK_NAME Ljava/lang/String;
	public static final field POD_INSTALL_TASK_NAME Ljava/lang/String;
	public static final field POD_SETUP_BUILD_TASK_NAME Ljava/lang/String;
	public static final field POD_SPEC_TASK_NAME Ljava/lang/String;
	public static final field SYNC_TASK_NAME Ljava/lang/String;
	public static final field TARGET_PROPERTY Ljava/lang/String;
	public static final field TASK_GROUP Ljava/lang/String;
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/cocoapods/KotlinCocoapodsPlugin$Companion {
}

public final class org/jetbrains/kotlin/gradle/plugin/cocoapods/KotlinCocoapodsPluginKt {
	public static final fun withPodspec (Lorg/jetbrains/kotlin/gradle/dsl/KotlinNativeArtifactConfig;Lkotlin/jvm/functions/Function1;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AgpRequirementNotMetForAndroidSourceSetLayoutV2 : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AgpRequirementNotMetForAndroidSourceSetLayoutV2;
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AndroidExtensionPluginRemoval : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AndroidExtensionPluginRemoval;
	public final fun invoke (Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic$Severity;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
	public static synthetic fun invoke$default (Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AndroidExtensionPluginRemoval;Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic$Severity;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AndroidGradlePluginIsMissing : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AndroidGradlePluginIsMissing;
	public final fun invoke (Ljava/lang/Throwable;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
	public static synthetic fun invoke$default (Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AndroidGradlePluginIsMissing;Ljava/lang/Throwable;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AndroidMainSourceSetConventionUsedWithoutAndroidTarget : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AndroidMainSourceSetConventionUsedWithoutAndroidTarget;
	public final fun invoke (Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AndroidPublicationNotConfigured : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AndroidPublicationNotConfigured;
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AndroidSourceSetLayoutV1Deprecation : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AndroidSourceSetLayoutV1Deprecation;
	public final fun invoke ()Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AndroidSourceSetLayoutV1SourceSetsNotFoundError : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AndroidSourceSetLayoutV1SourceSetsNotFoundError;
	public final fun invoke (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AndroidStyleSourceDirUsageWarning : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AndroidStyleSourceDirUsageWarning;
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AndroidTargetIsMissing : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AndroidTargetIsMissing;
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AssetsPublishedMoreThanOncePerTarget : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$AssetsPublishedMoreThanOncePerTarget;
	public final fun invoke ()Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$BrokenKotlinNativeBundleError : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$BrokenKotlinNativeBundleError;
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$BuildToolsApiVersionInconsistency : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$BuildToolsApiVersionInconsistency;
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$CInteropRequiredParametersNotSpecifiedError : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$CInteropRequiredParametersNotSpecifiedError;
	public final fun invoke ()Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$CircularDependsOnEdges : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$CircularDependsOnEdges;
	public final fun invoke (Ljava/util/Collection;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$CommonMainOrTestWithDependsOnDiagnostic : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$CommonMainOrTestWithDependsOnDiagnostic;
	public final fun invoke (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$CreateTarget : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$CreateTarget;
	public final fun invoke ()Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DependencyDoesNotPhysicallyExist : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DependencyDoesNotPhysicallyExist;
	public final fun invoke (Ljava/io/File;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DeprecatedGradleProperties : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DeprecatedGradleProperties;
	public final fun invoke (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DeprecatedInKMPJavaPluginsDiagnostic : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DeprecatedInKMPJavaPluginsDiagnostic;
	public final fun invoke (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DeprecatedJvmHistoryBasedIncrementalCompilationDiagnostic : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DeprecatedJvmHistoryBasedIncrementalCompilationDiagnostic;
	public final fun invoke ()Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DeprecatedJvmWithJavaPresetDiagnostic : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DeprecatedJvmWithJavaPresetDiagnostic;
	public final fun invoke ()Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DeprecatedKotlinNativeTargetsDiagnostic : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DeprecatedKotlinNativeTargetsDiagnostic;
	public final fun invoke (Ljava/util/List;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DeprecatedLegacyCompilationOutputsBackup : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DeprecatedLegacyCompilationOutputsBackup;
	public final fun invoke ()Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DeprecatedPropertyWithReplacement : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DeprecatedPropertyWithReplacement;
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DisabledCinteropsCommonizationInHmppProject : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DisabledCinteropsCommonizationInHmppProject;
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DisabledKotlinNativeTargets : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DisabledKotlinNativeTargets;
	public final fun invoke (Ljava/util/Collection;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DuplicateSourceSetsError : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$DuplicateSourceSetsError;
	public final fun invoke (Ljava/util/Map;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$ExperimentalArtifactsDslUsed : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$ExperimentalArtifactsDslUsed;
	public final fun invoke ()Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$ExperimentalFeatureWarning : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$ExperimentalFeatureWarning;
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$ExperimentalTryNextWarning : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$ExperimentalTryNextWarning;
	public final fun invoke ()Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$FailedToGetAgpVersionWarning : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$FailedToGetAgpVersionWarning;
	public final fun invoke (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$FromPreset : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field DEPRECATION_MESSAGE Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$FromPreset;
	public final fun invoke ()Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$IncompatibleAgpVersionTooLowFatalError : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$IncompatibleAgpVersionTooLowFatalError;
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$IncompatibleGradleVersionTooLowFatalError : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$IncompatibleGradleVersionTooLowFatalError;
	public final fun invoke (Lorg/gradle/util/GradleVersion;Lorg/gradle/util/GradleVersion;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$InconsistentTargetCompatibilityForKotlinAndJavaTasks : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$InconsistentTargetCompatibilityForKotlinAndJavaTasks;
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic$Severity;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$IncorrectCompileOnlyDependencyWarning : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$IncorrectCompileOnlyDependencyWarning;
	public final fun invoke (Ljava/util/List;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$IncorrectCompileOnlyDependencyWarning$CompilationDependenciesPair {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;Ljava/util/List;)V
	public final fun component1 ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;Ljava/util/List;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$IncorrectCompileOnlyDependencyWarning$CompilationDependenciesPair;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$IncorrectCompileOnlyDependencyWarning$CompilationDependenciesPair;Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$IncorrectCompileOnlyDependencyWarning$CompilationDependenciesPair;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCompilation ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;
	public final fun getDependencyCoords ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$InternalKotlinGradlePluginPropertiesUsed : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$InternalKotlinGradlePluginPropertiesUsed;
	public final fun invoke (Ljava/util/Collection;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$IosSourceSetConventionUsedWithoutIosTarget : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$IosSourceSetConventionUsedWithoutIosTarget;
	public final fun invoke (Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$JsEnvironmentNotChosenExplicitly : org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$JsLikeEnvironmentNotChosenExplicitly {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$JsEnvironmentNotChosenExplicitly;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$JsLikeEnvironmentNotChosenExplicitly : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun invoke (Ljava/util/List;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$JvmWithJavaIsIncompatibleWithAndroid : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$JvmWithJavaIsIncompatibleWithAndroid;
	public final fun invoke (Ljava/lang/String;Ljava/lang/Throwable;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KonanHomeConflictDeclaration : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KonanHomeConflictDeclaration;
	public final fun invoke (Ljava/io/File;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KotlinCompilationSourceDeprecation : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KotlinCompilationSourceDeprecation;
	public final fun invoke (Ljava/lang/Throwable;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KotlinCompilerEmbeddableIsPresentInClasspath : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KotlinCompilerEmbeddableIsPresentInClasspath;
	public final fun invoke ()Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KotlinDefaultHierarchyFallbackDependsOnUsageDetected : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KotlinDefaultHierarchyFallbackDependsOnUsageDetected;
	public final fun invoke (Lorg/gradle/api/Project;Ljava/lang/Iterable;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KotlinDefaultHierarchyFallbackIllegalTargetNames : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KotlinDefaultHierarchyFallbackIllegalTargetNames;
	public final fun invoke (Lorg/gradle/api/Project;Ljava/lang/Iterable;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KotlinJvmMainRunTaskConflict : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KotlinJvmMainRunTaskConflict;
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KotlinSourceSetDependsOnDefaultCompilationSourceSet : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KotlinSourceSetDependsOnDefaultCompilationSourceSet;
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KotlinSourceSetTreeDependsOnMismatch : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KotlinSourceSetTreeDependsOnMismatch;
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
	public final fun invoke (Ljava/util/Map;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KotlinTargetAlreadyDeclared : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic$Severity;)V
	public final fun invoke (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KotlinTargetAlreadyDeclaredError : org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KotlinTargetAlreadyDeclared {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KotlinTargetAlreadyDeclaredError;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KotlinTargetAlreadyDeclaredWarning : org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KotlinTargetAlreadyDeclared {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$KotlinTargetAlreadyDeclaredWarning;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$MissingResourcesConfigurationForTarget : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$MissingResourcesConfigurationForTarget;
	public final fun invoke (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$MissingRuntimeDependencyConfigurationForWasmTarget : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$MissingRuntimeDependencyConfigurationForWasmTarget;
	public final fun invoke (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$MultipleSourceSetRootsInCompilation : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$MultipleSourceSetRootsInCompilation;
	public final fun invoke (Ljava/util/Collection;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
	public final fun invoke (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
	public final fun invoke (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;Ljava/util/Collection;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$NativeStdlibIsMissingDiagnostic : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$NativeStdlibIsMissingDiagnostic;
	public final fun invoke (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$NewNativeVersionDiagnostic : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$NewNativeVersionDiagnostic;
	public final fun invoke (Lorg/jetbrains/kotlin/tooling/core/KotlinToolingVersion;Lorg/jetbrains/kotlin/tooling/core/KotlinToolingVersion;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$NoComposeCompilerPluginAppliedWarning : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$NoComposeCompilerPluginAppliedWarning;
	public final fun invoke ()Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$NoKotlinTargetsDeclared : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$NoKotlinTargetsDeclared;
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$NotCompatibleWithGradle9 : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$NotCompatibleWithGradle9;
	public final fun invoke (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$OldNativeVersionDiagnostic : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$OldNativeVersionDiagnostic;
	public final fun invoke (Lorg/jetbrains/kotlin/tooling/core/KotlinToolingVersion;Lorg/jetbrains/kotlin/tooling/core/KotlinToolingVersion;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$PlatformSourceSetConventionUsedWithCustomTargetName : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$PlatformSourceSetConventionUsedWithCustomTargetName;
	public final fun invoke (Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet;Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$PlatformSourceSetConventionUsedWithoutCorrespondingTarget : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$PlatformSourceSetConventionUsedWithoutCorrespondingTarget;
	public final fun invoke (Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$PreHMPPFlagsError : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$PreHMPPFlagsError;
	public final fun invoke (Ljava/util/List;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$PreHmppDependenciesUsedInBuild : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$PreHmppDependenciesUsedInBuild;
	public final fun invoke (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$RedundantDependsOnEdgesFound : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$RedundantDependsOnEdgesFound;
	public final fun invoke (Ljava/util/List;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$RedundantDependsOnEdgesFound$RedundantEdge {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$RedundantDependsOnEdgesFound$RedundantEdge;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$RedundantDependsOnEdgesFound$RedundantEdge;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$RedundantDependsOnEdgesFound$RedundantEdge;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFrom ()Ljava/lang/String;
	public final fun getTo ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$ResourceMayNotBePublishedForTarget : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$ResourceMayNotBePublishedForTarget;
	public final fun invoke (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$ResourceMayNotBeResolvedForTarget : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$ResourceMayNotBeResolvedForTarget;
	public final fun invoke (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$ResourceMayNotBeResolvedWithGradleVersion : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$ResourceMayNotBeResolvedWithGradleVersion;
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$ResourcePublishedMoreThanOncePerTarget : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$ResourcePublishedMoreThanOncePerTarget;
	public final fun invoke (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$SourceSetLayoutV1StyleDirUsageWarning : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$SourceSetLayoutV1StyleDirUsageWarning;
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$TargetFromPreset : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field DEPRECATION_MESSAGE Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$TargetFromPreset;
	public final fun invoke ()Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$UnknownAppleFrameworkBuildType : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$UnknownAppleFrameworkBuildType;
	public final fun invoke (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$UnknownValueProvidedForResourcesStrategy : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$UnknownValueProvidedForResourcesStrategy;
	public final fun invoke (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$UnrecognizedKotlinNativeDistributionType : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$UnrecognizedKotlinNativeDistributionType;
	public final fun invoke (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$UnsupportedTargetShortcutError : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$UnsupportedTargetShortcutError;
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$UnusedSourceSetsWarning : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$UnusedSourceSetsWarning;
	public final fun invoke (Ljava/util/Collection;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$WasmJsEnvironmentNotChosenExplicitly : org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$JsLikeEnvironmentNotChosenExplicitly {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$WasmJsEnvironmentNotChosenExplicitly;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$WasmSourceSetsNotFoundError : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$WasmSourceSetsNotFoundError;
	public final fun invoke (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$WasmWasiEnvironmentNotChosenExplicitly : org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$JsLikeEnvironmentNotChosenExplicitly {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$WasmWasiEnvironmentNotChosenExplicitly;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$XCFrameworkDifferentInnerFrameworksName : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$XCFrameworkDifferentInnerFrameworksName;
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$XcodeUserScriptSandboxingDiagnostic : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$XcodeUserScriptSandboxingDiagnostic;
	public final fun invoke (Z)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$XcodeVersionTooHighWarning : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/KotlinToolingDiagnostics$XcodeVersionTooHighWarning;
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic$Documentation {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic$Documentation;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic$Documentation;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic$Documentation;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAdditionalUrlContext ()Ljava/lang/String;
	public final fun getUrl ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic$ID {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic$ID;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic$ID;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic$ID;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDisplayName ()Ljava/lang/String;
	public final fun getId ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic$Severity : java/lang/Enum {
	public static final field ERROR Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic$Severity;
	public static final field FATAL Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic$Severity;
	public static final field WARNING Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic$Severity;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic$Severity;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic$Severity;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticBuilder {
	public abstract fun documentation (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public abstract fun message (Lkotlin/jvm/functions/Function0;)V
	public abstract fun name (Lkotlin/jvm/functions/Function0;)V
	public abstract fun solution (Lkotlin/jvm/functions/Function0;)V
	public abstract fun solutions (Lkotlin/jvm/functions/Function0;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticBuilder$DefaultImpls {
	public static synthetic fun documentation$default (Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticBuilder;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/ide/IdeCompilerArgumentsResolver {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/ide/IdeCompilerArgumentsResolver$Companion;
	public static fun instance (Lorg/gradle/api/Project;)Lorg/jetbrains/kotlin/gradle/plugin/ide/IdeCompilerArgumentsResolver;
	public abstract fun resolveCompilerArguments (Ljava/lang/Object;)Ljava/util/List;
}

public final class org/jetbrains/kotlin/gradle/plugin/ide/IdeCompilerArgumentsResolver$Companion {
	public final fun instance (Lorg/gradle/api/Project;)Lorg/jetbrains/kotlin/gradle/plugin/ide/IdeCompilerArgumentsResolver;
}

public final class org/jetbrains/kotlin/gradle/plugin/ide/IdeMultiplatformImportAction$Companion {
}

public final class org/jetbrains/kotlin/gradle/plugin/ide/KotlinDebugKeyKt {
	public static final fun getKotlinDebug (Lorg/jetbrains/kotlin/tooling/core/Extras;)Ljava/lang/Object;
	public static final fun getKotlinDebug (Lorg/jetbrains/kotlin/tooling/core/MutableExtras;)Ljava/lang/Object;
	public static final fun setKotlinDebug (Lorg/jetbrains/kotlin/tooling/core/MutableExtras;Ljava/lang/Object;)V
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinCompilation : org/jetbrains/kotlin/gradle/plugin/mpp/DecoratedKotlinCompilation {
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinCompilationToRunnableFiles : org/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinCompilation, org/jetbrains/kotlin/gradle/plugin/KotlinCompilationToRunnableFiles {
	public final fun getRuntimeDependencyConfigurationName ()Ljava/lang/String;
	public final fun getRuntimeDependencyFiles ()Lorg/gradle/api/file/FileCollection;
	public final fun setRuntimeDependencyFiles (Lorg/gradle/api/file/FileCollection;)V
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinNativeCompilation : org/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinCompilation {
	public synthetic fun getCompileKotlinTask ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCompile;
	public fun getCompileKotlinTask ()Lorg/jetbrains/kotlin/gradle/tasks/KotlinNativeCompile;
	public fun getCompileKotlinTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public fun getCompileTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/plugin/HasCompilerOptions;
	public final fun getKonanTarget ()Lorg/jetbrains/kotlin/konan/target/KonanTarget;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinNativeTargetPreset : org/jetbrains/kotlin/gradle/targets/android/internal/InternalKotlinTargetPreset {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinNativeTargetPreset$Companion;
	public fun <init> (Ljava/lang/String;Lorg/gradle/api/Project;Lorg/jetbrains/kotlin/konan/target/KonanTarget;)V
	public synthetic fun createTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun createTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTarget;
	protected abstract fun createTargetConfigurator ()Lorg/jetbrains/kotlin/gradle/plugin/AbstractKotlinTargetConfigurator;
	public synthetic fun createTargetInternal (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun createTargetInternal (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTarget;
	public final fun getKonanTarget ()Lorg/jetbrains/kotlin/konan/target/KonanTarget;
	public fun getName ()Ljava/lang/String;
	public final fun getProject ()Lorg/gradle/api/Project;
	protected abstract fun instantiateTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTarget;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinNativeTargetPreset$Companion {
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinTarget : org/jetbrains/kotlin/gradle/plugin/mpp/InternalKotlinTarget {
	public fun <init> (Lorg/gradle/api/Project;)V
	public fun attributes (Lkotlin/jvm/functions/Function1;)V
	public fun attributes (Lorg/gradle/api/Action;)V
	protected fun createKotlinVariant (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;Ljava/util/Set;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinVariant;
	protected final fun createSourcesJarAndUsageContextIfPublishable (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/gradle/api/attributes/AttributeContainer;Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinUsageContext$MavenScope;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/DefaultKotlinUsageContext;
	public static synthetic fun createSourcesJarAndUsageContextIfPublishable$default (Lorg/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinTarget;Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/gradle/api/attributes/AttributeContainer;Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinUsageContext$MavenScope;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/DefaultKotlinUsageContext;
	public fun getApiElementsConfigurationName ()Ljava/lang/String;
	public fun getArtifactsTaskName ()Ljava/lang/String;
	public fun getAttributes ()Lorg/gradle/api/attributes/AttributeContainer;
	public fun getComponents ()Ljava/util/Set;
	public fun getDisambiguationClassifier ()Ljava/lang/String;
	public synthetic fun getExtras ()Lorg/jetbrains/kotlin/tooling/core/Extras;
	public final fun getExtras ()Lorg/jetbrains/kotlin/tooling/core/MutableExtras;
	public fun getName ()Ljava/lang/String;
	public fun getOverrideDisambiguationClassifierOnIdeImport ()Ljava/lang/String;
	public fun getPreset ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTargetPreset;
	public final fun getProject ()Lorg/gradle/api/Project;
	public fun getPublishable ()Z
	public fun getRuntimeElementsConfigurationName ()Ljava/lang/String;
	public fun getSourceSets ()Lorg/gradle/api/NamedDomainObjectContainer;
	public fun getSourcesElementsConfigurationName ()Ljava/lang/String;
	public fun getUseDisambiguationClassifierAsSourceSetNamePrefix ()Z
	public fun get_preset ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTargetPreset;
	public fun isSourcesPublishable ()Z
	public fun jvmToolchain (I)V
	public fun jvmToolchain (Lorg/gradle/api/Action;)V
	public fun mavenPublication (Lkotlin/jvm/functions/Function1;)V
	public fun mavenPublication (Lorg/gradle/api/Action;)V
	public fun setSourcesPublishable (Z)V
	public fun toString ()Ljava/lang/String;
	public fun withSourcesJar (Z)V
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/DefaultCInteropSettings : org/jetbrains/kotlin/gradle/plugin/CInteropSettings {
	public fun compilerOpts (Ljava/util/List;)V
	public fun compilerOpts ([Ljava/lang/String;)V
	public fun defFile (Ljava/lang/Object;)V
	public fun extraOpts (Ljava/util/List;)V
	public fun extraOpts ([Ljava/lang/Object;)V
	public final fun getCompilerOpts ()Ljava/util/List;
	public final fun getDefFile ()Ljava/io/File;
	public final fun getDefFileProperty ()Lorg/gradle/api/provider/Property;
	public final fun getDefinitionFile ()Lorg/gradle/api/file/RegularFileProperty;
	public fun getDependencyFiles ()Lorg/gradle/api/file/FileCollection;
	public final fun getExtraOpts ()Ljava/util/List;
	public final fun getHeaders ()Lorg/gradle/api/file/FileCollection;
	public final fun getIncludeDirs ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/DefaultCInteropSettings$DefaultIncludeDirectories;
	public final fun getInteropProcessingTaskName ()Ljava/lang/String;
	public final fun getLinkerOpts ()Ljava/util/List;
	public fun getName ()Ljava/lang/String;
	public final fun getPackageName ()Ljava/lang/String;
	public fun header (Ljava/lang/Object;)V
	public fun headers (Lorg/gradle/api/file/FileCollection;)V
	public fun headers ([Ljava/lang/Object;)V
	public fun includeDirs (Lkotlin/jvm/functions/Function1;)V
	public fun includeDirs (Lorg/gradle/api/Action;)V
	public fun includeDirs ([Ljava/lang/Object;)V
	public fun linkerOpts (Ljava/util/List;)V
	public fun linkerOpts ([Ljava/lang/String;)V
	public fun packageName (Ljava/lang/String;)V
	public final fun setDefFile (Ljava/io/File;)V
	public fun setDependencyFiles (Lorg/gradle/api/file/FileCollection;)V
	public final fun setExtraOpts (Ljava/util/List;)V
	public final fun setHeaders (Lorg/gradle/api/file/FileCollection;)V
	public final fun setPackageName (Ljava/lang/String;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/DefaultCInteropSettings$DefaultIncludeDirectories : org/jetbrains/kotlin/gradle/plugin/CInteropSettings$IncludeDirectories {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/plugin/mpp/DefaultCInteropSettings;)V
	public fun allHeaders (Ljava/util/Collection;)V
	public fun allHeaders ([Ljava/lang/Object;)V
	public final fun getAllHeadersDirs ()Lorg/gradle/api/file/FileCollection;
	public final fun getHeaderFilterDirs ()Lorg/gradle/api/file/FileCollection;
	public fun headerFilterOnly (Ljava/util/Collection;)V
	public fun headerFilterOnly ([Ljava/lang/Object;)V
	public final fun setAllHeadersDirs (Lorg/gradle/api/file/FileCollection;)V
	public final fun setHeaderFilterDirs (Lorg/gradle/api/file/FileCollection;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/DefaultKotlinCompilationOutput : java/util/concurrent/Callable, org/jetbrains/kotlin/gradle/plugin/KotlinCompilationOutput {
	public fun <init> (Lorg/gradle/api/Project;Ljava/lang/Object;)V
	public synthetic fun call ()Ljava/lang/Object;
	public fun call ()Lorg/gradle/api/file/FileCollection;
	public fun getAllOutputs ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public synthetic fun getAllOutputs ()Lorg/gradle/api/file/FileCollection;
	public fun getClassesDirs ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public fun getResourcesDir ()Ljava/io/File;
	public fun getResourcesDirProvider ()Ljava/lang/Object;
	public fun setResourcesDirProvider (Ljava/lang/Object;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/DefaultKotlinUsageContext : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinUsageContext {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinUsageContext$MavenScope;Ljava/lang/String;Lorg/gradle/api/provider/SetProperty;Lorg/gradle/api/attributes/AttributeContainer;ZLorg/jetbrains/kotlin/gradle/plugin/mpp/DefaultKotlinUsageContext$PublishOnlyIf;)V
	public synthetic fun <init> (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinUsageContext$MavenScope;Ljava/lang/String;Lorg/gradle/api/provider/SetProperty;Lorg/gradle/api/attributes/AttributeContainer;ZLorg/jetbrains/kotlin/gradle/plugin/mpp/DefaultKotlinUsageContext$PublishOnlyIf;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getArtifacts ()Ljava/util/Set;
	public fun getAttributes ()Lorg/gradle/api/attributes/AttributeContainer;
	public fun getCapabilities ()Ljava/util/Set;
	public fun getCompilation ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;
	public fun getDependencies ()Ljava/util/Set;
	public fun getDependencyConfigurationName ()Ljava/lang/String;
	public fun getDependencyConstraints ()Ljava/util/Set;
	public fun getGlobalExcludes ()Ljava/util/Set;
	public fun getIncludeIntoProjectStructureMetadata ()Z
	public fun getMavenScope ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinUsageContext$MavenScope;
	public fun getName ()Ljava/lang/String;
	public fun getUsage ()Lorg/gradle/api/attributes/Usage;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/mpp/DefaultKotlinUsageContext$PublishOnlyIf {
	public abstract fun predicate ()Z
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/Framework$BitcodeEmbeddingMode {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/mpp/Framework$BitcodeEmbeddingMode;
	public final fun getBITCODE ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
	public final fun getDISABLE ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
	public final fun getMARKER ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/Framework$Companion {
	public final fun getFrameworkTargets ()Lorg/gradle/api/attributes/Attribute;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/GenerateProjectStructureMetadata : org/gradle/api/DefaultTask {
	public fun <init> ()V
	public final fun generateMetadataXml ()V
	public final fun getResultFile ()Ljava/io/File;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/mpp/HasBinaries {
	public abstract fun getBinaries ()Lorg/gradle/api/DomainObjectSet;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/HierarchyAttributeContainer : org/gradle/api/attributes/AttributeContainer {
	public fun <init> (Lorg/gradle/api/attributes/AttributeContainer;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lorg/gradle/api/attributes/AttributeContainer;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun attribute (Lorg/gradle/api/attributes/Attribute;Ljava/lang/Object;)Lorg/gradle/api/attributes/AttributeContainer;
	public fun attributeProvider (Lorg/gradle/api/attributes/Attribute;Lorg/gradle/api/provider/Provider;)Lorg/gradle/api/attributes/AttributeContainer;
	public fun contains (Lorg/gradle/api/attributes/Attribute;)Z
	public fun getAttribute (Lorg/gradle/api/attributes/Attribute;)Ljava/lang/Object;
	public fun getAttributes ()Lorg/gradle/api/attributes/AttributeContainer;
	public final fun getFilterParentAttributes ()Lkotlin/jvm/functions/Function1;
	public final fun getParent ()Lorg/gradle/api/attributes/AttributeContainer;
	public fun isEmpty ()Z
	public fun keySet ()Ljava/util/Set;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/JointAndroidKotlinTargetComponent : org/jetbrains/kotlin/gradle/plugin/mpp/InternalKotlinTargetComponent, org/jetbrains/kotlin/gradle/plugin/mpp/KotlinTargetComponentWithCoordinatesAndPublication {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinAndroidTarget;Ljava/util/Set;Ljava/util/List;)V
	public fun getCoordinates ()Lorg/gradle/api/artifacts/ModuleVersionIdentifier;
	public fun getDefaultArtifactId ()Ljava/lang/String;
	public final fun getFlavorNames ()Ljava/util/List;
	public fun getName ()Ljava/lang/String;
	public fun getPublicationDelegate ()Lorg/gradle/api/publish/maven/MavenPublication;
	public fun getPublishable ()Z
	public fun getPublishableOnCurrentHost ()Z
	public fun getSourcesArtifacts ()Ljava/util/Set;
	public synthetic fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinAndroidTarget;
	public fun getUsages ()Ljava/util/Set;
	public fun setPublicationDelegate (Lorg/gradle/api/publish/maven/MavenPublication;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KmpIsolatedProjectsSupport : java/lang/Enum {
	public static final field AUTO Lorg/jetbrains/kotlin/gradle/plugin/mpp/KmpIsolatedProjectsSupport;
	public static final field DISABLE Lorg/jetbrains/kotlin/gradle/plugin/mpp/KmpIsolatedProjectsSupport;
	public static final field ENABLE Lorg/jetbrains/kotlin/gradle/plugin/mpp/KmpIsolatedProjectsSupport;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KmpIsolatedProjectsSupport;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/plugin/mpp/KmpIsolatedProjectsSupport;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinAndroidTarget : org/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinTarget, org/jetbrains/kotlin/gradle/dsl/HasConfigurableKotlinCompilerOptions {
	public fun <init> (Ljava/lang/String;Lorg/gradle/api/Project;Z)V
	public fun compilerOptions (Lkotlin/jvm/functions/Function1;)V
	public fun compilerOptions (Lorg/gradle/api/Action;)V
	public fun getCompilations ()Lorg/gradle/api/NamedDomainObjectContainer;
	public synthetic fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions;
	public fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmCompilerOptions;
	public final fun getDisambiguationClassifier ()Ljava/lang/String;
	public final fun getInstrumentedTestVariant ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinAndroidTargetVariantDsl;
	public fun getKotlinComponents ()Ljava/util/Set;
	public final fun getMainVariant ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinAndroidTargetVariantDsl;
	public fun getPlatformType ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;
	public final fun getPublishLibraryVariants ()Ljava/util/List;
	public final fun getPublishLibraryVariantsGroupedByFlavor ()Z
	public final fun getTargetName ()Ljava/lang/String;
	public final fun getUnitTestVariant ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinAndroidTargetVariantDsl;
	public final fun instrumentedTestVariant (Lkotlin/jvm/functions/Function1;)V
	public final fun instrumentedTestVariant (Lorg/gradle/api/Action;)V
	public final fun isMultiplatformProject ()Z
	public final fun mainVariant (Lkotlin/jvm/functions/Function1;)V
	public final fun mainVariant (Lorg/gradle/api/Action;)V
	public final fun publishAllLibraryVariants ()V
	public final fun publishLibraryVariants ([Ljava/lang/String;)V
	public final fun setPublishLibraryVariants (Ljava/util/List;)V
	public final fun setPublishLibraryVariantsGroupedByFlavor (Z)V
	public final fun unitTestVariant (Lkotlin/jvm/functions/Function1;)V
	public final fun unitTestVariant (Lorg/gradle/api/Action;)V
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinAndroidTargetPreset : org/jetbrains/kotlin/gradle/targets/android/internal/InternalKotlinTargetPreset {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinAndroidTargetPreset$Companion;
	public static final field PRESET_NAME Ljava/lang/String;
	public fun <init> (Lorg/gradle/api/Project;)V
	public synthetic fun createTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun createTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinAndroidTarget;
	public synthetic fun createTargetInternal (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun createTargetInternal (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinAndroidTarget;
	public fun getName ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinAndroidTargetPreset$Companion {
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinAndroidTargetVariantDsl {
	public abstract fun getSourceSetTree ()Lorg/gradle/api/provider/Property;
}

public class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinCommonCompilation : org/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinCompilation, org/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataCompilation {
	public synthetic fun getCompileKotlinTask ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCompile;
	public fun getCompileKotlinTask ()Lorg/jetbrains/kotlin/gradle/tasks/KotlinCompileCommon;
	public fun getCompileTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinCommonCompilationFactory : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinCompilationFactory {
	public synthetic fun create (Ljava/lang/String;)Ljava/lang/Object;
	public fun create (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinCommonCompilation;
	public fun defaultSourceSetName (Ljava/lang/String;)Ljava/lang/String;
	public fun getItemClass ()Ljava/lang/Class;
	public fun getProject ()Lorg/gradle/api/Project;
	public synthetic fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTarget;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinCompilationFactory : org/gradle/api/NamedDomainObjectFactory {
	public abstract fun defaultSourceSetName (Ljava/lang/String;)Ljava/lang/String;
	public abstract fun getItemClass ()Ljava/lang/Class;
	public abstract fun getProject ()Lorg/gradle/api/Project;
	public abstract fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinCompilationFactory$DefaultImpls {
	public static fun defaultSourceSetName (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinCompilationFactory;Ljava/lang/String;)Ljava/lang/String;
	public static fun getProject (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinCompilationFactory;)Lorg/gradle/api/Project;
}

public class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinJsCompilation : org/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinCompilationToRunnableFiles, org/jetbrains/kotlin/gradle/plugin/mpp/HasBinaries {
	public fun getAttributes ()Lorg/gradle/api/attributes/AttributeContainer;
	public synthetic fun getBinaries ()Lorg/gradle/api/DomainObjectSet;
	public fun getBinaries ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsBinaryContainer;
	public final fun getCompilationPurpose ()Ljava/lang/String;
	public synthetic fun getCompileKotlinTask ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCompile;
	public fun getCompileKotlinTask ()Lorg/jetbrains/kotlin/gradle/tasks/Kotlin2JsCompile;
	public fun getCompileKotlinTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public fun getCompileTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public final fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/plugin/HasCompilerOptions;
	public final fun getNpmAggregatedConfigurationName ()Ljava/lang/String;
	public final fun getOutputModuleName ()Lorg/gradle/api/provider/Provider;
	public fun getProcessResourcesTaskName ()Ljava/lang/String;
	public final fun getPublicPackageJsonConfigurationName ()Ljava/lang/String;
	public synthetic fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun getTarget ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTarget;
	public final fun packageJson (Lgroovy/lang/Closure;)V
	public final fun packageJson (Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinJsCompilationKt {
	public static final fun getFileExtension (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinJsCompilation;)Lorg/gradle/api/provider/Provider;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinJsSingleTargetPreset : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinJsTargetPreset {
	public fun <init> (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinJsTargetPreset : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTargetPreset {
	public fun <init> (Lorg/gradle/api/Project;)V
}

public class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinJvmAndroidCompilation : org/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinCompilationToRunnableFiles {
	public final fun getAndroidVariant ()Lcom/android/build/gradle/api/BaseVariant;
	public final fun getCompileJavaTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public synthetic fun getCompileKotlinTask ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCompile;
	public fun getCompileKotlinTask ()Lorg/jetbrains/kotlin/gradle/tasks/KotlinCompile;
	public fun getCompileKotlinTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public fun getCompileTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/plugin/HasCompilerOptions;
	public synthetic fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinAndroidTarget;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinJvmAndroidCompilationFactory : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinCompilationFactory {
	public synthetic fun create (Ljava/lang/String;)Ljava/lang/Object;
	public fun create (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinJvmAndroidCompilation;
	public fun defaultSourceSetName (Ljava/lang/String;)Ljava/lang/String;
	public fun getItemClass ()Ljava/lang/Class;
	public fun getProject ()Lorg/gradle/api/Project;
	public synthetic fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinAndroidTarget;
}

public class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinJvmCompilation : org/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinCompilationToRunnableFiles, org/jetbrains/kotlin/gradle/plugin/KotlinCompilationWithResources {
	public final fun getCompileJavaTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public synthetic fun getCompileKotlinTask ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCompile;
	public fun getCompileKotlinTask ()Lorg/jetbrains/kotlin/gradle/tasks/KotlinCompile;
	public fun getCompileKotlinTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public fun getCompileTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/plugin/HasCompilerOptions;
	public fun getProcessResourcesTaskName ()Ljava/lang/String;
	public synthetic fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public final fun getTarget ()Lorg/jetbrains/kotlin/gradle/targets/jvm/KotlinJvmTarget;
}

public class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinJvmCompilationFactory : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinCompilationFactory {
	public synthetic fun create (Ljava/lang/String;)Ljava/lang/Object;
	public fun create (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinJvmCompilation;
	public fun defaultSourceSetName (Ljava/lang/String;)Ljava/lang/String;
	public fun getItemClass ()Ljava/lang/Class;
	public fun getProject ()Lorg/gradle/api/Project;
	public synthetic fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public final fun getTarget ()Lorg/jetbrains/kotlin/gradle/targets/jvm/KotlinJvmTarget;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinJvmTargetPreset : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTargetPreset {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinJvmTargetPreset$Companion;
	public static final field PRESET_NAME Ljava/lang/String;
	public fun <init> (Lorg/gradle/api/Project;)V
	public synthetic fun createCompilationFactory (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTarget;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinCompilationFactory;
	public fun getName ()Ljava/lang/String;
	public synthetic fun instantiateTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTarget;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinJvmTargetPreset$Companion {
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinJvmWithJavaTargetPreset : org/jetbrains/kotlin/gradle/targets/android/internal/InternalKotlinTargetPreset {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinJvmWithJavaTargetPreset$Companion;
	public static final field PRESET_NAME Ljava/lang/String;
	public fun <init> (Lorg/gradle/api/Project;)V
	public synthetic fun createTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun createTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinWithJavaTarget;
	public synthetic fun createTargetInternal (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun createTargetInternal (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinWithJavaTarget;
	public fun getName ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinJvmWithJavaTargetPreset$Companion {
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataCompilation : org/jetbrains/kotlin/gradle/plugin/KotlinCompilation {
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataCompilation$DefaultImpls {
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataCompilation;Lkotlin/jvm/functions/Function1;)V
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataCompilation;Lorg/gradle/api/Action;)V
	public static fun defaultSourceSet (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataCompilation;Lorg/gradle/api/Action;)V
	public static fun getAssociateWith (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataCompilation;)Ljava/util/List;
	public static fun getDefaultSourceSetName (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataCompilation;)Ljava/lang/String;
	public static fun getDisambiguatedName (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataCompilation;)Ljava/lang/String;
	public static fun getName (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataCompilation;)Ljava/lang/String;
	public static fun getPlatformType (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataCompilation;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;
	public static fun kotlinOptions (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataCompilation;Lkotlin/jvm/functions/Function1;)V
	public static fun kotlinOptions (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataCompilation;Lorg/gradle/api/Action;)V
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataTarget : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTarget, org/jetbrains/kotlin/gradle/dsl/HasConfigurableKotlinCompilerOptions {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataTarget$Companion;
	public static final field METADATA_TARGET_NAME Ljava/lang/String;
	public fun <init> (Lorg/gradle/api/Project;)V
	public fun compilerOptions (Lkotlin/jvm/functions/Function1;)V
	public fun compilerOptions (Lorg/gradle/api/Action;)V
	public fun getArtifactsTaskName ()Ljava/lang/String;
	public fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions;
	public fun getKotlinComponents ()Ljava/util/Set;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataTarget$Companion {
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataTargetPreset : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTargetPreset {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataTargetPreset$Companion;
	public static final field PRESET_NAME Ljava/lang/String;
	public fun <init> (Lorg/gradle/api/Project;)V
	public synthetic fun createCompilationFactory (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTarget;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinCompilationFactory;
	public synthetic fun createTargetInternal (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun createTargetInternal (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataTarget;
	public synthetic fun createTargetInternal (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTarget;
	public fun getName ()Ljava/lang/String;
	public synthetic fun instantiateTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTarget;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataTargetPreset$Companion {
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinMultiplatformPlugin : org/gradle/api/Plugin {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinMultiplatformPlugin$Companion;
	public static final field METADATA_TARGET_NAME Ljava/lang/String;
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinMultiplatformPlugin$Companion {
}

public class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeCompilation : org/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinNativeCompilation {
	public final fun cinterops (Lorg/gradle/api/Action;)V
	public final fun getBinariesTaskName ()Ljava/lang/String;
	public final fun getCinterops ()Lorg/gradle/api/NamedDomainObjectContainer;
	public synthetic fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/plugin/HasCompilerOptions;
	public fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/targets/native/NativeCompilerOptions;
	public final fun getProcessResourcesTaskName ()Ljava/lang/String;
	public synthetic fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public final fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTarget;
}

public class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeCompilationFactory : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinCompilationFactory {
	public synthetic fun create (Ljava/lang/String;)Ljava/lang/Object;
	public fun create (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeCompilation;
	public fun defaultSourceSetName (Ljava/lang/String;)Ljava/lang/String;
	public fun getItemClass ()Ljava/lang/Class;
	public fun getProject ()Lorg/gradle/api/Project;
	public synthetic fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public final fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTarget;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTarget : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinTargetWithBinaries, org/jetbrains/kotlin/gradle/dsl/HasConfigurableKotlinCompilerOptions {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTarget$Companion;
	public fun <init> (Lorg/gradle/api/Project;Lorg/jetbrains/kotlin/konan/target/KonanTarget;)V
	public fun compilerOptions (Lkotlin/jvm/functions/Function1;)V
	public fun compilerOptions (Lorg/gradle/api/Action;)V
	public fun getArtifactsTaskName ()Ljava/lang/String;
	public synthetic fun getBinaries ()Lorg/gradle/api/DomainObjectSet;
	public fun getBinaries ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinNativeBinaryContainer;
	public synthetic fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions;
	public fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinNativeCompilerOptions;
	public final fun getDEBUG ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;
	public final fun getDYNAMIC ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeOutputKind;
	public final fun getEXECUTABLE ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeOutputKind;
	public final fun getFRAMEWORK ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeOutputKind;
	public final fun getKonanTarget ()Lorg/jetbrains/kotlin/konan/target/KonanTarget;
	public fun getKotlinComponents ()Ljava/util/Set;
	public fun getPublishable ()Z
	public final fun getRELEASE ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;
	public final fun getSTATIC ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeOutputKind;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTarget$Companion {
	public final fun getKonanTargetAttribute ()Lorg/gradle/api/attributes/Attribute;
	public final fun getKotlinNativeBuildTypeAttribute ()Lorg/gradle/api/attributes/Attribute;
	public final fun getKotlinNativeFrameworkNameAttribute ()Lorg/gradle/api/attributes/Attribute;
}

public class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTargetPreset : org/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinNativeTargetPreset {
	public fun <init> (Ljava/lang/String;Lorg/gradle/api/Project;Lorg/jetbrains/kotlin/konan/target/KonanTarget;)V
	protected fun createTargetConfigurator ()Lorg/jetbrains/kotlin/gradle/plugin/AbstractKotlinTargetConfigurator;
	protected fun instantiateTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTarget;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTargetWithHostTests : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTargetWithTests {
	public fun <init> (Lorg/gradle/api/Project;Lorg/jetbrains/kotlin/konan/target/KonanTarget;)V
	public fun getTestRuns ()Lorg/gradle/api/NamedDomainObjectContainer;
}

public class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTargetWithHostTestsPreset : org/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinNativeTargetPreset {
	public fun <init> (Ljava/lang/String;Lorg/gradle/api/Project;Lorg/jetbrains/kotlin/konan/target/KonanTarget;)V
	protected fun createTargetConfigurator ()Lorg/jetbrains/kotlin/gradle/plugin/AbstractKotlinTargetConfigurator;
	public synthetic fun instantiateTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTarget;
	protected fun instantiateTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTargetWithHostTests;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTargetWithSimulatorTests : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTargetWithTests {
	public fun <init> (Lorg/gradle/api/Project;Lorg/jetbrains/kotlin/konan/target/KonanTarget;)V
	public fun getTestRuns ()Lorg/gradle/api/NamedDomainObjectContainer;
}

public class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTargetWithSimulatorTestsPreset : org/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinNativeTargetPreset {
	public fun <init> (Ljava/lang/String;Lorg/gradle/api/Project;Lorg/jetbrains/kotlin/konan/target/KonanTarget;)V
	protected fun createTargetConfigurator ()Lorg/jetbrains/kotlin/gradle/plugin/AbstractKotlinTargetConfigurator;
	public synthetic fun instantiateTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTarget;
	protected fun instantiateTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTargetWithSimulatorTests;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTargetWithTests : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTarget, org/jetbrains/kotlin/gradle/plugin/KotlinTargetWithTests {
	public fun <init> (Lorg/gradle/api/Project;Lorg/jetbrains/kotlin/konan/target/KonanTarget;)V
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTarget : org/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinTarget {
	public fun <init> (Lorg/gradle/api/Project;Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;)V
	public fun getCompilations ()Lorg/gradle/api/NamedDomainObjectContainer;
	public fun getDisambiguationClassifier ()Ljava/lang/String;
	public fun getPlatformType ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;
	public fun getTargetName ()Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTargetPreset : org/jetbrains/kotlin/gradle/targets/android/internal/InternalKotlinTargetPreset {
	public fun <init> (Lorg/gradle/api/Project;)V
	protected abstract fun createCompilationFactory (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTarget;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinCompilationFactory;
	protected abstract fun createKotlinTargetConfigurator ()Lorg/jetbrains/kotlin/gradle/plugin/AbstractKotlinTargetConfigurator;
	public synthetic fun createTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun createTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTarget;
	public synthetic fun createTargetInternal (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun createTargetInternal (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTarget;
	protected abstract fun getPlatformType ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;
	protected final fun getProject ()Lorg/gradle/api/Project;
	protected abstract fun instantiateTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTarget;
	protected fun overrideDisambiguationClassifierOnIdeImport (Ljava/lang/String;)Ljava/lang/String;
	protected fun provideTargetDisambiguationClassifier (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTarget;)Ljava/lang/String;
	protected fun useDisambiguationClassifierAsSourceSetNamePrefix ()Z
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinProjectStructureMetadata : java/io/Serializable {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinProjectStructureMetadata$Companion;
	public fun <init> (Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;ZLjava/util/Set;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;ZLjava/util/Set;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/Map;
	public final fun component2 ()Ljava/util/Map;
	public final fun component3 ()Ljava/util/Map;
	public final fun component4 ()Ljava/util/Map;
	public final fun component5 ()Ljava/util/Map;
	public final fun component6 ()Ljava/util/Set;
	public final fun component7 ()Z
	public final fun component8 ()Ljava/util/Set;
	public final fun component9 ()Ljava/lang/String;
	public final fun copy (Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;ZLjava/util/Set;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinProjectStructureMetadata;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinProjectStructureMetadata;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Set;ZLjava/util/Set;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinProjectStructureMetadata;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFormatVersion ()Ljava/lang/String;
	public final fun getHostSpecificSourceSets ()Ljava/util/Set;
	public final fun getSourceSetBinaryLayout ()Ljava/util/Map;
	public final fun getSourceSetCInteropMetadataDirectory ()Ljava/util/Map;
	public final fun getSourceSetModuleDependencies ()Ljava/util/Map;
	public final fun getSourceSetNames ()Ljava/util/Set;
	public final fun getSourceSetNamesByVariantName ()Ljava/util/Map;
	public final fun getSourceSetsDependsOnRelation ()Ljava/util/Map;
	public fun hashCode ()I
	public final fun isPublishedAsRoot ()Z
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinProjectStructureMetadata$Companion {
}

public class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinSharedNativeCompilation : org/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinNativeCompilation, org/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataCompilation {
	public final fun getKonanTargets ()Ljava/util/List;
	public synthetic fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataTarget;
}

public class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinSharedNativeCompilationFactory : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinCompilationFactory {
	public synthetic fun create (Ljava/lang/String;)Ljava/lang/Object;
	public fun create (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinSharedNativeCompilation;
	public fun defaultSourceSetName (Ljava/lang/String;)Ljava/lang/String;
	public fun getItemClass ()Ljava/lang/Class;
	public fun getProject ()Lorg/gradle/api/Project;
	public synthetic fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public final fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataTarget;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinSoftwareComponent : org/gradle/api/component/ComponentWithVariants, org/gradle/api/internal/component/SoftwareComponentInternal {
	public fun <init> (Lorg/gradle/api/Project;Ljava/lang/String;Ljava/lang/Iterable;)V
	protected final fun getKotlinTargets ()Ljava/lang/Iterable;
	public fun getName ()Ljava/lang/String;
	public final fun getPublicationDelegate ()Lorg/gradle/api/publish/maven/MavenPublication;
	public fun getUsages ()Ljava/util/Set;
	public fun getVariants ()Ljava/util/Set;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinSoftwareComponentWithCoordinatesAndPublication : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinSoftwareComponent, org/gradle/api/component/ComponentWithCoordinates {
	public fun <init> (Lorg/gradle/api/Project;Ljava/lang/String;Ljava/lang/Iterable;)V
	public fun getCoordinates ()Lorg/gradle/api/artifacts/ModuleVersionIdentifier;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinTargetWithBinaries : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTarget, org/jetbrains/kotlin/gradle/plugin/mpp/HasBinaries {
	public fun <init> (Lorg/gradle/api/Project;Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;)V
	public final fun binaries (Lkotlin/jvm/functions/Function1;)V
	public final fun binaries (Lorg/gradle/api/Action;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinUsageContext : org/gradle/api/internal/component/UsageContext {
	public abstract fun getCompilation ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;
	public abstract fun getDependencyConfigurationName ()Ljava/lang/String;
	public abstract fun getIncludeIntoProjectStructureMetadata ()Z
	public abstract fun getMavenScope ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinUsageContext$MavenScope;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinUsageContext$MavenScope : java/lang/Enum {
	public static final field COMPILE Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinUsageContext$MavenScope;
	public static final field RUNTIME Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinUsageContext$MavenScope;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinUsageContext$MavenScope;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinUsageContext$MavenScope;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinUsages {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinUsages;
	public static final field KOTLIN_API Ljava/lang/String;
	public static final field KOTLIN_CINTEROP Ljava/lang/String;
	public static final field KOTLIN_COMMONIZED_CINTEROP Ljava/lang/String;
	public static final field KOTLIN_METADATA Ljava/lang/String;
	public static final field KOTLIN_RESOURCES Ljava/lang/String;
	public static final field KOTLIN_RESOURCES_JS Ljava/lang/String;
	public static final field KOTLIN_RUNTIME Ljava/lang/String;
	public static final field KOTLIN_SOURCES Ljava/lang/String;
	public final fun getValues ()Ljava/util/Set;
}

public class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinVariant : org/jetbrains/kotlin/gradle/plugin/mpp/InternalKotlinTargetComponent, org/jetbrains/kotlin/gradle/plugin/mpp/KotlinTargetComponentWithPublication {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;Ljava/util/Set;)V
	public final fun getArtifactTargetName ()Ljava/lang/String;
	public final fun getComponentName ()Ljava/lang/String;
	public fun getDefaultArtifactId ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public final fun getProducingCompilation ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;
	public fun getPublicationDelegate ()Lorg/gradle/api/publish/maven/MavenPublication;
	public fun getPublishable ()Z
	public fun getPublishableOnCurrentHost ()Z
	public fun getSourcesArtifacts ()Ljava/util/Set;
	public final fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun getUsages ()Ljava/util/Set;
	public final fun setArtifactTargetName (Ljava/lang/String;)V
	public final fun setComponentName (Ljava/lang/String;)V
	public fun setPublicationDelegate (Lorg/gradle/api/publish/maven/MavenPublication;)V
	public fun setPublishable (Z)V
}

public class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinVariantWithCoordinates : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinVariant, org/jetbrains/kotlin/gradle/plugin/mpp/KotlinTargetComponentWithCoordinatesAndPublication {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;Ljava/util/Set;)V
	public fun getCoordinates ()Lorg/gradle/api/artifacts/ModuleVersionIdentifier;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinVariantWithMetadataVariant : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinVariantWithCoordinates, org/gradle/api/component/ComponentWithVariants {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;Ljava/util/Set;Lorg/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinTarget;)V
	public fun getVariants ()Ljava/util/Set;
}

public class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinWithJavaCompilation : org/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinCompilationToRunnableFiles, org/jetbrains/kotlin/gradle/plugin/KotlinCompilationWithResources {
	public final fun getCompileJavaTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/plugin/HasCompilerOptions;
	public final fun getJavaSourceSet ()Lorg/gradle/api/tasks/SourceSet;
	public fun getProcessResourcesTaskName ()Ljava/lang/String;
	public final fun source (Lorg/gradle/api/tasks/SourceSet;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinWithJavaCompilationFactory : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinCompilationFactory {
	public synthetic fun create (Ljava/lang/String;)Ljava/lang/Object;
	public fun create (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinWithJavaCompilation;
	public fun defaultSourceSetName (Ljava/lang/String;)Ljava/lang/String;
	public final fun getCompilerOptionsFactory ()Lkotlin/jvm/functions/Function0;
	public fun getItemClass ()Ljava/lang/Class;
	public final fun getKotlinOptionsFactory ()Lkotlin/jvm/functions/Function1;
	public fun getProject ()Lorg/gradle/api/Project;
	public synthetic fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinWithJavaTarget;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinWithJavaCompilationOutput : java/util/concurrent/Callable, org/jetbrains/kotlin/gradle/plugin/KotlinCompilationOutput {
	public synthetic fun call ()Ljava/lang/Object;
	public fun call ()Lorg/gradle/api/file/FileCollection;
	public fun getAllOutputs ()Lorg/gradle/api/file/FileCollection;
	public fun getClassesDirs ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public fun getResourcesDir ()Ljava/io/File;
	public fun getResourcesDirProvider ()Ljava/lang/Object;
	public fun setResourcesDirProvider (Ljava/lang/Object;)V
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/KotlinWithJavaTarget : org/jetbrains/kotlin/gradle/plugin/mpp/AbstractKotlinTarget, org/jetbrains/kotlin/gradle/dsl/HasConfigurableKotlinCompilerOptions {
	public fun <init> (Lorg/gradle/api/Project;Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;Ljava/lang/String;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)V
	public fun compilerOptions (Lkotlin/jvm/functions/Function1;)V
	public fun compilerOptions (Lorg/gradle/api/Action;)V
	public fun getApiElementsConfigurationName ()Ljava/lang/String;
	public fun getArtifactsTaskName ()Ljava/lang/String;
	public fun getCompilations ()Lorg/gradle/api/NamedDomainObjectContainer;
	public synthetic fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions;
	public fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmCompilerOptions;
	public fun getDisambiguationClassifier ()Ljava/lang/String;
	public fun getPlatformType ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;
	public fun getRuntimeElementsConfigurationName ()Ljava/lang/String;
	public fun getTargetName ()Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/MetadataDependencyTransformationTask : org/gradle/api/DefaultTask, org/jetbrains/kotlin/gradle/plugin/diagnostics/UsesKotlinToolingDiagnostics {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/mpp/MetadataDependencyTransformationTask$Companion;
	public fun <init> (Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet;Lorg/gradle/api/model/ObjectFactory;Lorg/gradle/api/file/ProjectLayout;)V
	protected final fun getParentLibrariesIndexFiles ()Lorg/gradle/api/provider/SetProperty;
	protected final fun getTransformedLibrariesIndexFile ()Lorg/gradle/api/file/RegularFileProperty;
	public fun reportDiagnostic (Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;)V
	public final fun transformMetadata ()V
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/MetadataDependencyTransformationTask$Companion {
}

public class org/jetbrains/kotlin/gradle/plugin/mpp/ModuleDependencyIdentifier : java/io/Serializable {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public fun getGroupId ()Ljava/lang/String;
	public fun getModuleId ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/MppDependencyProjectStructureMetadataExtractor {
	public static final field Factory Lorg/jetbrains/kotlin/gradle/plugin/mpp/MppDependencyProjectStructureMetadataExtractor$Factory;
	public abstract fun getProjectStructureMetadata ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinProjectStructureMetadata;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/MppDependencyProjectStructureMetadataExtractor$Factory {
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/SourceSetMetadataLayout : java/io/Serializable {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/mpp/SourceSetMetadataLayout$Companion;
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getArchiveExtension ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/SourceSetMetadataLayout$Companion {
	public final fun byName (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/SourceSetMetadataLayout;
	public final fun chooseForProducingProject ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/SourceSetMetadataLayout$KLIB;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/SourceSetMetadataLayout$KLIB : org/jetbrains/kotlin/gradle/plugin/mpp/SourceSetMetadataLayout {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/mpp/SourceSetMetadataLayout$KLIB;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/SourceSetMetadataLayout$METADATA : org/jetbrains/kotlin/gradle/plugin/mpp/SourceSetMetadataLayout {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/mpp/SourceSetMetadataLayout$METADATA;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/TransformedMetadataLibraryRecord {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/TransformedMetadataLibraryRecord;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/plugin/mpp/TransformedMetadataLibraryRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/TransformedMetadataLibraryRecord;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFile ()Ljava/lang/String;
	public final fun getModuleId ()Ljava/lang/String;
	public final fun getSourceSetName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/apple/XCFrameworkTask : org/gradle/api/DefaultTask, org/jetbrains/kotlin/gradle/plugin/diagnostics/UsesKotlinToolingDiagnostics {
	public final fun assemble ()V
	public final fun from ([Lorg/jetbrains/kotlin/gradle/plugin/mpp/Framework;)V
	public final fun fromFrameworkDescriptors (Ljava/lang/Iterable;)V
	public final fun fromFrameworkDescriptors ([Lorg/jetbrains/kotlin/gradle/tasks/FrameworkDescriptor;)V
	public final fun getBaseName ()Lorg/gradle/api/provider/Provider;
	public final fun getBuildType ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;
	protected final fun getFatFrameworksDir ()Ljava/io/File;
	public final fun getInputFrameworkFiles ()Ljava/util/Collection;
	public final fun getOutputDir ()Ljava/io/File;
	public fun reportDiagnostic (Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;)V
	public final fun setBaseName (Lorg/gradle/api/provider/Provider;)V
	public final fun setBuildType (Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)V
	public final fun setOutputDir (Ljava/io/File;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/mpp/apple/swiftexport/SwiftExportAdvancedConfiguration {
	public abstract fun getSettings ()Lorg/gradle/api/provider/MapProperty;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/apple/swiftexport/SwiftExportExtension : org/jetbrains/kotlin/gradle/plugin/mpp/apple/swiftexport/SwiftExportedModuleMetadata {
	public fun <init> (Lorg/gradle/api/model/ObjectFactory;Lorg/gradle/api/provider/ProviderFactory;Lorg/gradle/api/artifacts/dsl/DependencyHandler;)V
	public final fun configure (Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun configure$default (Lorg/jetbrains/kotlin/gradle/plugin/mpp/apple/swiftexport/SwiftExportExtension;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public final fun export (Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V
	public final fun export (Ljava/lang/Object;Lorg/gradle/api/Action;)V
	public final fun export (Lorg/gradle/api/Action;)V
	public static synthetic fun export$default (Lorg/jetbrains/kotlin/gradle/plugin/mpp/apple/swiftexport/SwiftExportExtension;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public final fun linkTask (Lkotlin/jvm/functions/Function1;)V
	public final fun linkTask (Lorg/gradle/api/Action;)V
	public static synthetic fun linkTask$default (Lorg/jetbrains/kotlin/gradle/plugin/mpp/apple/swiftexport/SwiftExportExtension;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/mpp/apple/swiftexport/SwiftExportedModuleMetadata {
	public abstract fun getFlattenPackage ()Lorg/gradle/api/provider/Property;
	public abstract fun getModuleName ()Lorg/gradle/api/provider/Property;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/mpp/apple/swiftexport/SwiftExportedModuleVersionMetadata : org/jetbrains/kotlin/gradle/plugin/mpp/apple/swiftexport/SwiftExportedModuleMetadata {
	public abstract fun getModuleVersion ()Lorg/gradle/api/artifacts/ModuleVersionIdentifier;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/mpp/compilationImpl/KotlinCompilationConfigurationsContainer {
	public abstract fun getApiConfiguration ()Lorg/gradle/api/artifacts/Configuration;
	public abstract fun getCompileDependencyConfiguration ()Lorg/gradle/api/artifacts/Configuration;
	public abstract fun getCompileOnlyConfiguration ()Lorg/gradle/api/artifacts/Configuration;
	public abstract fun getDeprecatedCompileConfiguration ()Lorg/gradle/api/artifacts/Configuration;
	public abstract fun getDeprecatedRuntimeConfiguration ()Lorg/gradle/api/artifacts/Configuration;
	public abstract fun getHostSpecificMetadataConfiguration ()Lorg/gradle/api/artifacts/Configuration;
	public abstract fun getImplementationConfiguration ()Lorg/gradle/api/artifacts/Configuration;
	public abstract fun getPluginConfiguration ()Lorg/gradle/api/artifacts/Configuration;
	public abstract fun getResourcesConfiguration ()Lorg/gradle/api/artifacts/Configuration;
	public abstract fun getRuntimeDependencyConfiguration ()Lorg/gradle/api/artifacts/Configuration;
	public abstract fun getRuntimeOnlyConfiguration ()Lorg/gradle/api/artifacts/Configuration;
}

public class org/jetbrains/kotlin/gradle/plugin/mpp/external/DecoratedExternalKotlinCompilation$Delegate {
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/external/DecoratedExternalKotlinTarget$Delegate {
}

public abstract class org/jetbrains/kotlin/gradle/plugin/mpp/internal/ProjectStructureMetadataTransformAction : org/gradle/api/artifacts/transform/TransformAction {
	public fun <init> ()V
	public abstract fun getArchiveOperations ()Lorg/gradle/api/file/ArchiveOperations;
	public abstract fun getFileSystemOperations ()Lorg/gradle/api/file/FileSystemOperations;
	public abstract fun getInputArtifact ()Lorg/gradle/api/provider/Provider;
	public fun transform (Lorg/gradle/api/artifacts/transform/TransformOutputs;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/pm20/util/KotlinExtensionUtilsDeprecatedKt {
	public static final fun getTargets (Lorg/jetbrains/kotlin/gradle/dsl/KotlinProjectExtension;)Ljava/lang/Iterable;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/resources/KotlinTargetResourcesPublication$Companion {
	public static final field EXTENSION_NAME Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/resources/KotlinTargetResourcesPublication$ResourceRoot {
	public fun <init> (Lorg/gradle/api/provider/Provider;Ljava/util/List;Ljava/util/List;)V
	public final fun component1 ()Lorg/gradle/api/provider/Provider;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/util/List;
	public final fun copy (Lorg/gradle/api/provider/Provider;Ljava/util/List;Ljava/util/List;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/resources/KotlinTargetResourcesPublication$ResourceRoot;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/plugin/mpp/resources/KotlinTargetResourcesPublication$ResourceRoot;Lorg/gradle/api/provider/Provider;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/resources/KotlinTargetResourcesPublication$ResourceRoot;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExcludes ()Ljava/util/List;
	public final fun getIncludes ()Ljava/util/List;
	public final fun getResourcesBaseDirectory ()Lorg/gradle/api/provider/Provider;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/resources/resolve/KotlinTargetResourcesResolutionStrategy : java/lang/Enum {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/mpp/resources/resolve/KotlinTargetResourcesResolutionStrategy$Companion;
	public static final field ResourcesConfiguration Lorg/jetbrains/kotlin/gradle/plugin/mpp/resources/resolve/KotlinTargetResourcesResolutionStrategy;
	public static final field VariantReselection Lorg/jetbrains/kotlin/gradle/plugin/mpp/resources/resolve/KotlinTargetResourcesResolutionStrategy;
	public final fun getPropertyName ()Ljava/lang/String;
	public final fun resourceArchives (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;)Lorg/gradle/api/file/FileCollection;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/resources/resolve/KotlinTargetResourcesResolutionStrategy;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/plugin/mpp/resources/resolve/KotlinTargetResourcesResolutionStrategy;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/resources/resolve/KotlinTargetResourcesResolutionStrategy$Companion {
	public final fun fromProperty (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/resources/resolve/KotlinTargetResourcesResolutionStrategy;
}

public class org/jetbrains/kotlin/gradle/plugin/performance/KotlinPerformancePlugin : org/gradle/api/Plugin {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/performance/KotlinPerformancePlugin$Companion;
	public static final field EXTENSION_NAME Ljava/lang/String;
	public static final field TASK_GROUP Ljava/lang/String;
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/performance/KotlinPerformancePlugin$Companion {
}

public class org/jetbrains/kotlin/gradle/plugin/performance/PerformanceExtension {
	public fun <init> (Lorg/gradle/api/Project;)V
	public final fun binary (Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBinary;)V
	public final fun binary (Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBinary;Ljava/lang/String;)V
	public static synthetic fun binary$default (Lorg/jetbrains/kotlin/gradle/plugin/performance/PerformanceExtension;Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBinary;Ljava/lang/String;ILjava/lang/Object;)V
	public final fun getBinaryNamesForReport ()Ljava/util/Map;
	public final fun getIncludeAssociatedTasks ()Z
	public final fun getMetrics ()Ljava/util/List;
	public final fun getTrackedBinaries ()Ljava/util/List;
	public final fun getVersion ()Ljava/lang/String;
	public final fun setIncludeAssociatedTasks (Z)V
	public final fun setMetrics (Ljava/util/List;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/performance/TaskTime {
	public fun <init> (J)V
	public final fun getDuration ()Ljava/lang/Double;
	public final fun getStartTime ()J
	public final fun setDuration (Ljava/lang/Double;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/performance/TaskTimerListener : org/gradle/api/execution/TaskExecutionListener {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/performance/TaskTimerListener$Companion;
	public fun <init> (Lorg/gradle/api/Project;)V
	public fun afterExecute (Lorg/gradle/api/Task;Lorg/gradle/api/tasks/TaskState;)V
	public fun beforeExecute (Lorg/gradle/api/Task;)V
	public final fun getTasksTimes ()Ljava/util/concurrent/ConcurrentHashMap;
	public final fun getTime (Ljava/lang/String;)D
}

public final class org/jetbrains/kotlin/gradle/plugin/performance/TaskTimerListener$Companion {
}

public final class org/jetbrains/kotlin/gradle/plugin/performance/TrackableMetric : java/lang/Enum {
	public static final field CODE_SIZE Lorg/jetbrains/kotlin/gradle/plugin/performance/TrackableMetric;
	public static final field COMPILE_TIME Lorg/jetbrains/kotlin/gradle/plugin/performance/TrackableMetric;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/performance/TrackableMetric;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/plugin/performance/TrackableMetric;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/sources/AbstractKotlinSourceSet : org/jetbrains/kotlin/gradle/plugin/sources/InternalKotlinSourceSet {
	public fun <init> ()V
	public fun addCustomSourceFilesExtensions (Ljava/util/List;)V
	protected fun afterDependsOnAdded (Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet;)V
	public final fun dependsOn (Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet;)V
	public fun getCompilations ()Lorg/jetbrains/kotlin/gradle/utils/MutableObservableSet;
	public synthetic fun getDependsOn ()Ljava/util/Set;
	public final fun getDependsOn ()Lorg/jetbrains/kotlin/gradle/utils/ObservableSet;
	public final fun getDependsOnClosure ()Lorg/jetbrains/kotlin/gradle/utils/ObservableSet;
	public final fun getWithDependsOnClosure ()Lorg/jetbrains/kotlin/gradle/utils/ObservableSet;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/sources/DefaultKotlinSourceSet : org/jetbrains/kotlin/gradle/plugin/sources/AbstractKotlinSourceSet {
	public fun <init> (Lorg/gradle/api/Project;Ljava/lang/String;)V
	public fun addCustomSourceFilesExtensions (Ljava/util/List;)V
	protected fun afterDependsOnAdded (Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet;)V
	public fun dependencies (Lkotlin/jvm/functions/Function1;)V
	public fun dependencies (Lorg/gradle/api/Action;)V
	public final fun getAdditionalVisibleSourceSets ()Ljava/util/List;
	public fun getApiConfigurationName ()Ljava/lang/String;
	public fun getApiMetadataConfigurationName ()Ljava/lang/String;
	public fun getCompileOnlyConfigurationName ()Ljava/lang/String;
	public fun getCompileOnlyMetadataConfigurationName ()Ljava/lang/String;
	public fun getCustomSourceFilesExtensions ()Ljava/lang/Iterable;
	public final fun getDependenciesTransformation (Ljava/lang/String;)Ljava/lang/Iterable;
	public final fun getDisplayName ()Ljava/lang/String;
	public synthetic fun getExtras ()Lorg/jetbrains/kotlin/tooling/core/Extras;
	public fun getExtras ()Lorg/jetbrains/kotlin/tooling/core/MutableExtras;
	public fun getImplementationConfigurationName ()Ljava/lang/String;
	public fun getImplementationMetadataConfigurationName ()Ljava/lang/String;
	public final fun getIntransitiveMetadataConfigurationName ()Ljava/lang/String;
	public fun getKotlin ()Lorg/gradle/api/file/SourceDirectorySet;
	public fun getLanguageSettings ()Lorg/jetbrains/kotlin/gradle/plugin/LanguageSettingsBuilder;
	public fun getName ()Ljava/lang/String;
	public final fun getProject ()Lorg/gradle/api/Project;
	public fun getResources ()Lorg/gradle/api/file/SourceDirectorySet;
	public fun getRuntimeOnlyConfigurationName ()Ljava/lang/String;
	public fun getRuntimeOnlyMetadataConfigurationName ()Ljava/lang/String;
	public fun kotlin (Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/file/SourceDirectorySet;
	public fun kotlin (Lorg/gradle/api/Action;)Lorg/gradle/api/file/SourceDirectorySet;
	public fun languageSettings (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/gradle/plugin/LanguageSettingsBuilder;
	public fun languageSettings (Lorg/gradle/api/Action;)Lorg/jetbrains/kotlin/gradle/plugin/LanguageSettingsBuilder;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/sources/DefaultKotlinSourceSet$MetadataDependencyTransformation {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinProjectStructureMetadata;Ljava/util/Set;Ljava/util/Map;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinProjectStructureMetadata;
	public final fun component5 ()Ljava/util/Set;
	public final fun component6 ()Ljava/util/Map;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinProjectStructureMetadata;Ljava/util/Set;Ljava/util/Map;)Lorg/jetbrains/kotlin/gradle/plugin/sources/DefaultKotlinSourceSet$MetadataDependencyTransformation;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/plugin/sources/DefaultKotlinSourceSet$MetadataDependencyTransformation;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinProjectStructureMetadata;Ljava/util/Set;Ljava/util/Map;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/plugin/sources/DefaultKotlinSourceSet$MetadataDependencyTransformation;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAllVisibleSourceSets ()Ljava/util/Set;
	public final fun getGroupId ()Ljava/lang/String;
	public final fun getModuleName ()Ljava/lang/String;
	public final fun getProjectPath ()Ljava/lang/String;
	public final fun getProjectStructureMetadata ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinProjectStructureMetadata;
	public final fun getUseFilesForSourceSets ()Ljava/util/Map;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/sources/DefaultKotlinSourceSetKt {
	public static final field METADATA_CONFIGURATION_NAME_SUFFIX Ljava/lang/String;
	public static final fun findSourceSetsDependingOn (Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformExtension;Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet;)Ljava/util/Set;
	public static final fun getDependsOnClosure (Ljava/lang/Iterable;)Ljava/util/Set;
	public static final fun getWithDependsOnClosure (Ljava/lang/Iterable;)Ljava/util/Set;
}

public final class org/jetbrains/kotlin/gradle/plugin/sources/SourceSetsVisibilityInferenceKt {
	public static final fun getSourceSetsFromAssociatedCompilations (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;)Ljava/util/Map;
	public static final fun getVisibleSourceSetsFromAssociateCompilations (Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet;)Ljava/util/List;
}

public abstract class org/jetbrains/kotlin/gradle/plugin/sources/android/KotlinAndroidSourceSetInfo {
	public abstract fun getAndroidSourceSetName ()Ljava/lang/String;
	public abstract fun getAndroidVariantNames ()Ljava/util/Set;
	public abstract fun getKotlinSourceSetName ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/sources/android/KotlinAndroidSourceSetInfoKt {
	public static final fun findAndroidSourceSet (Lorg/gradle/api/Project;Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet;)Lcom/android/build/gradle/api/AndroidSourceSet;
	public static final fun findKotlinSourceSet (Lorg/gradle/api/Project;Lcom/android/build/gradle/api/AndroidSourceSet;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet;
	public static final fun findKotlinSourceSet (Lorg/gradle/api/Project;Lcom/android/builder/model/SourceProvider;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet;
	public static final fun getAndroidSourceSetInfo (Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet;)Lorg/jetbrains/kotlin/gradle/plugin/sources/android/KotlinAndroidSourceSetInfo;
	public static final fun getAndroidSourceSetInfoOrNull (Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet;)Lorg/jetbrains/kotlin/gradle/plugin/sources/android/KotlinAndroidSourceSetInfo;
}

public final class org/jetbrains/kotlin/gradle/plugin/sources/android/configurator/Agp7AddKotlinSourcesToAndroidSourceSetConfigurator : org/jetbrains/kotlin/gradle/plugin/sources/android/configurator/KotlinAndroidSourceSetConfigurator {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/plugin/sources/android/configurator/Agp7AddKotlinSourcesToAndroidSourceSetConfigurator;
	public fun configure (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinAndroidTarget;Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet;Lcom/android/build/gradle/api/AndroidSourceSet;)V
	public fun configureWithVariant (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinAndroidTarget;Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet;Lcom/android/build/gradle/api/BaseVariant;)V
}

public abstract class org/jetbrains/kotlin/gradle/plugin/statistics/BuildFusService : java/lang/AutoCloseable, org/gradle/api/services/BuildService, org/gradle/tooling/events/OperationCompletionListener {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/statistics/BuildFusService$Companion;
	public fun <init> ()V
	public fun close ()V
	public fun onFinish (Lorg/gradle/tooling/events/FinishEvent;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/statistics/BuildFusService$Companion {
	public final fun registerIfAbsent (Lorg/gradle/api/Project;Ljava/lang/String;Lorg/gradle/api/provider/Provider;)Lorg/gradle/api/provider/Provider;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/statistics/BuildFusService$Parameters : org/gradle/api/services/BuildServiceParameters {
	public abstract fun getBuildId ()Lorg/gradle/api/provider/Property;
	public abstract fun getBuildStatisticsConfiguration ()Lorg/gradle/api/provider/Property;
	public abstract fun getConfigurationMetrics ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getGeneralConfigurationMetrics ()Lorg/gradle/api/provider/Property;
	public abstract fun getUseBuildFinishFlowAction ()Lorg/gradle/api/provider/Property;
}

public final class org/jetbrains/kotlin/gradle/plugin/statistics/DaemonReuseCounter : org/jetbrains/kotlin/gradle/plugin/statistics/IDaemonReuseCounterMXBean {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/statistics/DaemonReuseCounter$Companion;
	public static final field JMX_BEAN_NAME Ljava/lang/String;
	public fun getOrdinal ()J
	public fun incrementAndGetOrdinal ()J
}

public final class org/jetbrains/kotlin/gradle/plugin/statistics/DaemonReuseCounter$Companion {
	public final fun getOrdinal ()J
	public final fun incrementAndGetOrdinal ()J
}

public final class org/jetbrains/kotlin/gradle/plugin/statistics/GradleFileReportService : org/jetbrains/kotlin/build/report/statistics/file/ReadableFileReportService {
	public fun <init> (Ljava/io/File;Ljava/lang/String;Z)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/statistics/IDaemonReuseCounterMXBean {
	public abstract fun getOrdinal ()J
	public abstract fun incrementAndGetOrdinal ()J
}

public final class org/jetbrains/kotlin/gradle/plugin/statistics/KotlinBuildStatsConfiguration : java/io/Serializable {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/statistics/KotlinBuildStatsConfiguration$Companion;
	public fun <init> (Lorg/gradle/api/Project;)V
	public fun <init> (ZLjava/io/File;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/statistics/KotlinBuildStatsConfiguration$Companion {
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/statistics/KotlinBuildStatsMXBean {
	public abstract fun reportBoolean (Ljava/lang/String;ZLjava/lang/String;Ljava/lang/Long;)Z
	public abstract fun reportNumber (Ljava/lang/String;JLjava/lang/String;Ljava/lang/Long;)Z
	public abstract fun reportString (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;)Z
}

public final class org/jetbrains/kotlin/gradle/plugin/statistics/MetricContainer : java/io/Serializable {
	public fun <init> ()V
	public final fun addToConsumer (Lorg/jetbrains/kotlin/statistics/metrics/StatisticsValuesConsumer;)V
	public final fun put (Lorg/jetbrains/kotlin/statistics/metrics/BooleanMetrics;Z)Ljava/lang/Boolean;
	public final fun put (Lorg/jetbrains/kotlin/statistics/metrics/NumericalMetrics;J)Ljava/lang/Long;
	public final fun put (Lorg/jetbrains/kotlin/statistics/metrics/StringMetrics;Ljava/lang/String;)Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/statistics/NonSynchronizedMetricsContainer : java/io/Serializable, org/jetbrains/kotlin/statistics/metrics/StatisticsValuesConsumer {
	public fun <init> ()V
	public fun report (Lorg/jetbrains/kotlin/statistics/metrics/BooleanMetrics;ZLjava/lang/String;Ljava/lang/Long;)Z
	public fun report (Lorg/jetbrains/kotlin/statistics/metrics/NumericalMetrics;JLjava/lang/String;Ljava/lang/Long;)Z
	public fun report (Lorg/jetbrains/kotlin/statistics/metrics/StringMetrics;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;)Z
	public final fun sendToConsumer (Lorg/jetbrains/kotlin/statistics/metrics/StatisticsValuesConsumer;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/statistics/NonSynchronizedMetricsContainer$MetricDescriptor : java/lang/Comparable {
	public fun <init> (Ljava/lang/Comparable;Ljava/lang/String;)V
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun compareTo (Lorg/jetbrains/kotlin/gradle/plugin/statistics/NonSynchronizedMetricsContainer$MetricDescriptor;)I
	public final fun component1 ()Ljava/lang/Comparable;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/Comparable;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/statistics/NonSynchronizedMetricsContainer$MetricDescriptor;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/plugin/statistics/NonSynchronizedMetricsContainer$MetricDescriptor;Ljava/lang/Comparable;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/plugin/statistics/NonSynchronizedMetricsContainer$MetricDescriptor;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/Comparable;
	public final fun getSubprojectName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/statistics/plugins/ObservablePlugins : java/lang/Enum {
	public static final field ATOMICFU_PLUGIN Lorg/jetbrains/kotlin/gradle/plugin/statistics/plugins/ObservablePlugins;
	public static final field BINARY_COMPATIBILITY_VALIDATOR_PLUGIN Lorg/jetbrains/kotlin/gradle/plugin/statistics/plugins/ObservablePlugins;
	public static final field COCOAPODS_PLUGIN Lorg/jetbrains/kotlin/gradle/plugin/statistics/plugins/ObservablePlugins;
	public static final field DOKKA_JAVADOC_PLUGIN Lorg/jetbrains/kotlin/gradle/plugin/statistics/plugins/ObservablePlugins;
	public static final field DOKKA_PLUGIN Lorg/jetbrains/kotlin/gradle/plugin/statistics/plugins/ObservablePlugins;
	public static final field KOTLIN_JS_PLUGIN Lorg/jetbrains/kotlin/gradle/plugin/statistics/plugins/ObservablePlugins;
	public static final field KOVER_PLUGIN Lorg/jetbrains/kotlin/gradle/plugin/statistics/plugins/ObservablePlugins;
	public static final field SERIALIZATION_PLUGIN Lorg/jetbrains/kotlin/gradle/plugin/statistics/plugins/ObservablePlugins;
	public final fun getMetric ()Lorg/jetbrains/kotlin/statistics/metrics/BooleanMetrics;
	public final fun getTitle ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/statistics/plugins/ObservablePlugins;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/plugin/statistics/plugins/ObservablePlugins;
}

public abstract class org/jetbrains/kotlin/gradle/report/BuildMetricsService : java/lang/AutoCloseable, org/gradle/api/services/BuildService, org/gradle/tooling/events/OperationCompletionListener {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/report/BuildMetricsService$Companion;
	public fun <init> ()V
	public fun addTask (Ljava/lang/String;Ljava/lang/Class;Lorg/jetbrains/kotlin/build/report/metrics/BuildMetricsReporter;)V
	public fun addTransformMetrics (Ljava/lang/String;Ljava/lang/Class;ZJJLorg/jetbrains/kotlin/build/report/metrics/BuildMetrics;Ljava/lang/String;)V
	public fun close ()V
	public fun onFinish (Lorg/gradle/tooling/events/FinishEvent;)V
}

public final class org/jetbrains/kotlin/gradle/report/BuildMetricsService$Companion {
	public final fun registerIfAbsent (Lorg/gradle/api/Project;)Lorg/gradle/api/provider/Provider;
}

public abstract interface class org/jetbrains/kotlin/gradle/report/BuildMetricsService$Parameters : org/gradle/api/services/BuildServiceParameters {
	public abstract fun getBuildConfigurationTags ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getHttpParameters ()Lorg/gradle/api/provider/Property;
	public abstract fun getKotlinVersion ()Lorg/gradle/api/provider/Property;
	public abstract fun getLabel ()Lorg/gradle/api/provider/Property;
	public abstract fun getProjectDir ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getProjectName ()Lorg/gradle/api/provider/Property;
	public abstract fun getReportingSettings ()Lorg/gradle/api/provider/Property;
	public abstract fun getStartParameters ()Lorg/gradle/api/provider/Property;
}

public final class org/jetbrains/kotlin/gradle/report/BuildReportMode : java/lang/Enum, java/io/Serializable {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/report/BuildReportMode$Companion;
	public static final field NONE Lorg/jetbrains/kotlin/gradle/report/BuildReportMode;
	public static final field SIMPLE Lorg/jetbrains/kotlin/gradle/report/BuildReportMode;
	public static final field VERBOSE Lorg/jetbrains/kotlin/gradle/report/BuildReportMode;
	public static final field serialVersionUID J
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/report/BuildReportMode;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/report/BuildReportMode;
}

public final class org/jetbrains/kotlin/gradle/report/BuildReportMode$Companion {
}

public final class org/jetbrains/kotlin/gradle/report/BuildReportParameters {
	public fun <init> (Lorg/jetbrains/kotlin/build/report/statistics/BuildStartParameters;Lorg/jetbrains/kotlin/gradle/report/ReportingSettings;Lorg/jetbrains/kotlin/build/report/statistics/HttpReportParameters;Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)V
	public final fun component1 ()Lorg/jetbrains/kotlin/build/report/statistics/BuildStartParameters;
	public final fun component2 ()Lorg/jetbrains/kotlin/gradle/report/ReportingSettings;
	public final fun component3 ()Lorg/jetbrains/kotlin/build/report/statistics/HttpReportParameters;
	public final fun component4 ()Ljava/io/File;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ljava/lang/String;
	public final fun component8 ()Ljava/util/Set;
	public final fun copy (Lorg/jetbrains/kotlin/build/report/statistics/BuildStartParameters;Lorg/jetbrains/kotlin/gradle/report/ReportingSettings;Lorg/jetbrains/kotlin/build/report/statistics/HttpReportParameters;Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)Lorg/jetbrains/kotlin/gradle/report/BuildReportParameters;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/report/BuildReportParameters;Lorg/jetbrains/kotlin/build/report/statistics/BuildStartParameters;Lorg/jetbrains/kotlin/gradle/report/ReportingSettings;Lorg/jetbrains/kotlin/build/report/statistics/HttpReportParameters;Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/report/BuildReportParameters;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAdditionalTags ()Ljava/util/Set;
	public final fun getHttpReportParameters ()Lorg/jetbrains/kotlin/build/report/statistics/HttpReportParameters;
	public final fun getKotlinVersion ()Ljava/lang/String;
	public final fun getLabel ()Ljava/lang/String;
	public final fun getProjectDir ()Ljava/io/File;
	public final fun getProjectName ()Ljava/lang/String;
	public final fun getReportingSettings ()Lorg/jetbrains/kotlin/gradle/report/ReportingSettings;
	public final fun getStartParameters ()Lorg/jetbrains/kotlin/build/report/statistics/BuildStartParameters;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/report/BuildReportType : java/lang/Enum, java/io/Serializable {
	public static final field BUILD_SCAN Lorg/jetbrains/kotlin/gradle/report/BuildReportType;
	public static final field Companion Lorg/jetbrains/kotlin/gradle/report/BuildReportType$Companion;
	public static final field FILE Lorg/jetbrains/kotlin/gradle/report/BuildReportType;
	public static final field HTTP Lorg/jetbrains/kotlin/gradle/report/BuildReportType;
	public static final field JSON Lorg/jetbrains/kotlin/gradle/report/BuildReportType;
	public static final field SINGLE_FILE Lorg/jetbrains/kotlin/gradle/report/BuildReportType;
	public static final field TRY_NEXT_CONSOLE Lorg/jetbrains/kotlin/gradle/report/BuildReportType;
	public static final field serialVersionUID J
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/report/BuildReportType;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/report/BuildReportType;
}

public final class org/jetbrains/kotlin/gradle/report/BuildReportType$Companion {
}

public final class org/jetbrains/kotlin/gradle/report/BuildReportsService {
	public static final field CUSTOM_VALUE_LENGTH_LIMIT I
	public static final field Companion Lorg/jetbrains/kotlin/gradle/report/BuildReportsService$Companion;
	public fun <init> ()V
	public final fun close (Ljava/util/Collection;Ljava/util/List;Lorg/jetbrains/kotlin/gradle/report/BuildReportParameters;)V
	public final fun onFinish (Lorg/gradle/tooling/events/task/TaskFinishEvent;Lorg/jetbrains/kotlin/gradle/report/data/BuildOperationRecord;Lorg/jetbrains/kotlin/gradle/report/BuildReportParameters;)V
}

public final class org/jetbrains/kotlin/gradle/report/BuildReportsService$Companion {
	public final fun getHostName ()Ljava/lang/String;
	public final fun getStartParameters (Lorg/gradle/api/Project;)Lorg/jetbrains/kotlin/build/report/statistics/BuildStartParameters;
}

public final class org/jetbrains/kotlin/gradle/report/BuildScanExtensionHolder : java/io/Serializable, org/jetbrains/kotlin/gradle/internal/report/BuildScanApi {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/report/BuildScanExtensionHolder$Companion;
	public fun <init> (Lcom/gradle/scan/plugin/BuildScanExtension;)V
	public fun buildFinished (Lkotlin/jvm/functions/Function0;)V
	public fun tag (Ljava/lang/String;)V
	public fun value (Ljava/lang/String;Ljava/lang/String;)V
}

public final class org/jetbrains/kotlin/gradle/report/BuildScanExtensionHolder$Companion {
}

public final class org/jetbrains/kotlin/gradle/report/BuildScanSettings : java/io/Serializable {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/report/BuildScanSettings$Companion;
	public static final field serialVersionUID J
	public fun <init> (ILjava/util/Set;)V
	public final fun component1 ()I
	public final fun component2 ()Ljava/util/Set;
	public final fun copy (ILjava/util/Set;)Lorg/jetbrains/kotlin/gradle/report/BuildScanSettings;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/report/BuildScanSettings;ILjava/util/Set;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/report/BuildScanSettings;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCustomValueLimit ()I
	public final fun getMetrics ()Ljava/util/Set;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/report/BuildScanSettings$Companion {
}

public final class org/jetbrains/kotlin/gradle/report/DevelocityPluginBuildScanWrapper : java/io/Serializable, org/jetbrains/kotlin/gradle/internal/report/BuildScanApi {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/report/DevelocityPluginBuildScanWrapper$Companion;
	public fun <init> (Lcom/gradle/develocity/agent/gradle/scan/BuildScanConfiguration;)V
	public fun buildFinished (Lkotlin/jvm/functions/Function0;)V
	public fun tag (Ljava/lang/String;)V
	public fun value (Ljava/lang/String;Ljava/lang/String;)V
}

public final class org/jetbrains/kotlin/gradle/report/DevelocityPluginBuildScanWrapper$Companion {
}

public final class org/jetbrains/kotlin/gradle/report/GradleBuildMetricsReporter : org/jetbrains/kotlin/build/report/metrics/BuildMetricsReporterImpl {
	public fun <init> ()V
}

public final class org/jetbrains/kotlin/gradle/report/GradleLoggerAdapter : org/jetbrains/kotlin/buildtools/api/KotlinLogger {
	public fun <init> (Lorg/gradle/api/logging/Logger;)V
	public fun debug (Ljava/lang/String;)V
	public fun error (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun info (Ljava/lang/String;)V
	public fun isDebugEnabled ()Z
	public fun lifecycle (Ljava/lang/String;)V
	public fun warn (Ljava/lang/String;Ljava/lang/Throwable;)V
}

public final class org/jetbrains/kotlin/gradle/report/ReportDataUtilKt {
	public static final fun collectCompilerArguments (Lorg/jetbrains/kotlin/gradle/report/data/BuildOperationRecord;)Ljava/util/List;
}

public final class org/jetbrains/kotlin/gradle/report/ReportingSettings : java/io/Serializable {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/report/ReportingSettings$Companion;
	public static final field serialVersionUID J
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Lorg/jetbrains/kotlin/gradle/report/BuildReportMode;Ljava/lang/String;Lorg/jetbrains/kotlin/build/report/FileReportSettings;Lorg/jetbrains/kotlin/build/report/HttpReportSettings;Lorg/jetbrains/kotlin/gradle/report/BuildScanSettings;Ljava/io/File;Ljava/io/File;ZZ)V
	public synthetic fun <init> (Ljava/util/List;Lorg/jetbrains/kotlin/gradle/report/BuildReportMode;Ljava/lang/String;Lorg/jetbrains/kotlin/build/report/FileReportSettings;Lorg/jetbrains/kotlin/build/report/HttpReportSettings;Lorg/jetbrains/kotlin/gradle/report/BuildScanSettings;Ljava/io/File;Ljava/io/File;ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component10 ()Z
	public final fun component2 ()Lorg/jetbrains/kotlin/gradle/report/BuildReportMode;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Lorg/jetbrains/kotlin/build/report/FileReportSettings;
	public final fun component5 ()Lorg/jetbrains/kotlin/build/report/HttpReportSettings;
	public final fun component6 ()Lorg/jetbrains/kotlin/gradle/report/BuildScanSettings;
	public final fun component7 ()Ljava/io/File;
	public final fun component8 ()Ljava/io/File;
	public final fun component9 ()Z
	public final fun copy (Ljava/util/List;Lorg/jetbrains/kotlin/gradle/report/BuildReportMode;Ljava/lang/String;Lorg/jetbrains/kotlin/build/report/FileReportSettings;Lorg/jetbrains/kotlin/build/report/HttpReportSettings;Lorg/jetbrains/kotlin/gradle/report/BuildScanSettings;Ljava/io/File;Ljava/io/File;ZZ)Lorg/jetbrains/kotlin/gradle/report/ReportingSettings;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/report/ReportingSettings;Ljava/util/List;Lorg/jetbrains/kotlin/gradle/report/BuildReportMode;Ljava/lang/String;Lorg/jetbrains/kotlin/build/report/FileReportSettings;Lorg/jetbrains/kotlin/build/report/HttpReportSettings;Lorg/jetbrains/kotlin/gradle/report/BuildScanSettings;Ljava/io/File;Ljava/io/File;ZZILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/report/ReportingSettings;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBuildReportLabel ()Ljava/lang/String;
	public final fun getBuildReportMode ()Lorg/jetbrains/kotlin/gradle/report/BuildReportMode;
	public final fun getBuildReportOutputs ()Ljava/util/List;
	public final fun getBuildScanReportSettings ()Lorg/jetbrains/kotlin/gradle/report/BuildScanSettings;
	public final fun getExperimentalTryNextConsoleOutput ()Z
	public final fun getFileReportSettings ()Lorg/jetbrains/kotlin/build/report/FileReportSettings;
	public final fun getHttpReportSettings ()Lorg/jetbrains/kotlin/build/report/HttpReportSettings;
	public final fun getIncludeCompilerArguments ()Z
	public final fun getJsonOutputDir ()Ljava/io/File;
	public final fun getSingleOutputFile ()Ljava/io/File;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/report/ReportingSettings$Companion {
}

public final class org/jetbrains/kotlin/gradle/report/TaskExecutionState : java/lang/Enum {
	public static final field FAILED Lorg/jetbrains/kotlin/gradle/report/TaskExecutionState;
	public static final field FROM_CACHE Lorg/jetbrains/kotlin/gradle/report/TaskExecutionState;
	public static final field SKIPPED Lorg/jetbrains/kotlin/gradle/report/TaskExecutionState;
	public static final field SUCCESS Lorg/jetbrains/kotlin/gradle/report/TaskExecutionState;
	public static final field UNKNOWN Lorg/jetbrains/kotlin/gradle/report/TaskExecutionState;
	public static final field UP_TO_DATE Lorg/jetbrains/kotlin/gradle/report/TaskExecutionState;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/report/TaskExecutionState;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/report/TaskExecutionState;
}

public final class org/jetbrains/kotlin/gradle/report/data/BuildExecutionData {
	public fun <init> (Lorg/jetbrains/kotlin/build/report/statistics/BuildStartParameters;Ljava/util/List;Ljava/util/Collection;)V
	public final fun component1 ()Lorg/jetbrains/kotlin/build/report/statistics/BuildStartParameters;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/util/Collection;
	public final fun copy (Lorg/jetbrains/kotlin/build/report/statistics/BuildStartParameters;Ljava/util/List;Ljava/util/Collection;)Lorg/jetbrains/kotlin/gradle/report/data/BuildExecutionData;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/report/data/BuildExecutionData;Lorg/jetbrains/kotlin/build/report/statistics/BuildStartParameters;Ljava/util/List;Ljava/util/Collection;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/report/data/BuildExecutionData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAggregatedMetrics ()Lorg/jetbrains/kotlin/build/report/metrics/BuildMetrics;
	public final fun getBuildOperationRecord ()Ljava/util/Collection;
	public final fun getFailureMessages ()Ljava/util/List;
	public final fun getStartParameters ()Lorg/jetbrains/kotlin/build/report/statistics/BuildStartParameters;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/kotlin/gradle/report/data/BuildOperationRecord {
	public abstract fun getBuildMetrics ()Lorg/jetbrains/kotlin/build/report/metrics/BuildMetrics;
	public abstract fun getClassFqName ()Ljava/lang/String;
	public abstract fun getDidWork ()Z
	public abstract fun getIcLogLines ()Ljava/util/List;
	public abstract fun getPath ()Ljava/lang/String;
	public abstract fun getSkipMessage ()Ljava/lang/String;
	public abstract fun getStartTimeMs ()J
	public abstract fun getTotalTimeMs ()J
	public abstract fun isFromKotlinPlugin ()Z
}

public final class org/jetbrains/kotlin/gradle/report/data/GradleCompileStatisticsData : org/jetbrains/kotlin/build/report/statistics/CompileStatisticsData {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JJLjava/util/Set;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/util/List;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/List;Ljava/lang/String;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JJLjava/util/Set;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/util/List;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;Ljava/lang/Boolean;Ljava/util/List;Ljava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getBuildTimesMetrics ()Ljava/util/Map;
	public fun getChanges ()Ljava/util/List;
	public fun getCompilerArguments ()Ljava/util/List;
	public fun getDurationMs ()J
	public fun getFinishTime ()J
	public fun getFromKotlinPlugin ()Ljava/lang/Boolean;
	public fun getGcCountMetrics ()Ljava/util/Map;
	public fun getGcTimeMetrics ()Ljava/util/Map;
	public fun getIcLogLines ()Ljava/util/List;
	public fun getKotlinLanguageVersion ()Ljava/lang/String;
	public fun getKotlinVersion ()Ljava/lang/String;
	public fun getLabel ()Ljava/lang/String;
	public fun getNonIncrementalAttributes ()Ljava/util/Set;
	public fun getPerformanceMetrics ()Ljava/util/Map;
	public fun getProjectName ()Ljava/lang/String;
	public fun getSkipMessage ()Ljava/lang/String;
	public fun getStartTimeMs ()J
	public fun getTags ()Ljava/util/Set;
	public fun getTaskName ()Ljava/lang/String;
	public fun getTaskResult ()Ljava/lang/String;
}

public class org/jetbrains/kotlin/gradle/scripting/ScriptingExtension {
	public fun <init> ()V
	public fun disableScriptDefinitionsFromClasspath (Z)V
	public fun scriptDefinition (Ljava/lang/String;)V
	public fun scriptDefinitions (Ljava/util/List;)V
	public fun scriptDefinitions ([Ljava/lang/String;)V
	public fun scriptDefinitionsClasspath (Ljava/util/List;)V
	public fun scriptDefinitionsClasspath ([Ljava/lang/String;)V
	public fun scriptResolverEnvironment (Ljava/util/List;)V
	public fun scriptResolverEnvironment ([Lkotlin/Pair;)V
}

public abstract interface annotation class org/jetbrains/kotlin/gradle/swiftexport/ExperimentalSwiftExportDsl : java/lang/annotation/Annotation {
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/AbstractEnv {
	public abstract fun getAllowInsecureProtocol ()Z
	public abstract fun getCleanableStore ()Lorg/jetbrains/kotlin/gradle/tasks/internal/CleanableStore;
	public abstract fun getDir ()Ljava/io/File;
	public abstract fun getDownload ()Z
	public abstract fun getDownloadBaseUrl ()Ljava/lang/String;
	public abstract fun getExecutable ()Ljava/lang/String;
	public abstract fun getIvyDependency ()Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/AbstractSettings : org/jetbrains/kotlin/gradle/internal/ConfigurationPhaseAware {
	public fun <init> ()V
	public final fun getCommand ()Ljava/lang/String;
	public final fun getDownload ()Z
	public final fun getDownloadBaseUrl ()Ljava/lang/String;
	public final fun getInstallationDir ()Ljava/io/File;
	public final fun getVersion ()Ljava/lang/String;
	public final fun setCommand (Ljava/lang/String;)V
	public final fun setDownload (Z)V
	public final fun setDownloadBaseUrl (Ljava/lang/String;)V
	public final fun setInstallationDir (Ljava/io/File;)V
	public final fun setVersion (Ljava/lang/String;)V
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/AbstractSetupTask : org/gradle/api/DefaultTask, org/jetbrains/kotlin/gradle/plugin/statistics/UsesBuildFusService {
	public static final field CACHE_VERSION Ljava/lang/String;
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/AbstractSetupTask$Companion;
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/EnvSpec;)V
	public final fun exec ()V
	public abstract fun extract (Ljava/io/File;)V
	public final fun getAllowInsecureProtocol ()Lorg/gradle/api/provider/Provider;
	protected abstract fun getArtifactModule ()Ljava/lang/String;
	protected abstract fun getArtifactName ()Ljava/lang/String;
	protected abstract fun getArtifactPattern ()Ljava/lang/String;
	public final fun getDestination ()Ljava/io/File;
	public final fun getDestinationHashFile ()Ljava/io/File;
	public final fun getDestinationHashFileProvider ()Lorg/gradle/api/file/RegularFileProperty;
	public final fun getDestinationProvider ()Lorg/gradle/api/file/RegularFileProperty;
	public final fun getDist ()Ljava/io/File;
	public final fun getDownloadBaseUrl ()Ljava/lang/String;
	public final fun getDownloadBaseUrlProvider ()Lorg/gradle/api/provider/Provider;
	protected final fun getEnv ()Lorg/gradle/api/provider/Provider;
	public final fun getIvyDependency ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/AbstractSetupTask$Companion {
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/EnvSpec {
	public fun <init> ()V
	public abstract fun getAllowInsecureProtocol ()Lorg/gradle/api/provider/Property;
	public abstract fun getCommand ()Lorg/gradle/api/provider/Property;
	public abstract fun getDownload ()Lorg/gradle/api/provider/Property;
	public abstract fun getDownloadBaseUrl ()Lorg/gradle/api/provider/Property;
	public abstract fun getExecutable ()Lorg/gradle/api/provider/Provider;
	public abstract fun getInstallationDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getVersion ()Lorg/gradle/api/provider/Property;
	protected abstract fun produceEnv ()Lorg/gradle/api/provider/Provider;
}

public final class org/jetbrains/kotlin/gradle/targets/js/JsAggregatingExecutionSource : org/jetbrains/kotlin/gradle/execution/KotlinAggregateExecutionSource {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/KotlinJsReportAggregatingTestRun;)V
	public fun getExecutionSources ()Ljava/lang/Iterable;
}

public final class org/jetbrains/kotlin/gradle/targets/js/JsCompilationExecutionSource : org/jetbrains/kotlin/gradle/plugin/CompilationExecutionSource {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;)V
	public synthetic fun getCompilation ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;
	public fun getCompilation ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;
}

public final class org/jetbrains/kotlin/gradle/targets/js/KotlinJsCompilerAttribute : java/lang/Enum, java/io/Serializable, org/gradle/api/Named {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/KotlinJsCompilerAttribute$Companion;
	public static final field both Lorg/jetbrains/kotlin/gradle/targets/js/KotlinJsCompilerAttribute;
	public static final field ir Lorg/jetbrains/kotlin/gradle/targets/js/KotlinJsCompilerAttribute;
	public static final field legacy Lorg/jetbrains/kotlin/gradle/targets/js/KotlinJsCompilerAttribute;
	public fun getName ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/KotlinJsCompilerAttribute;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/targets/js/KotlinJsCompilerAttribute;
}

public final class org/jetbrains/kotlin/gradle/targets/js/KotlinJsCompilerAttribute$Companion {
	public final fun getJsCompilerAttribute ()Lorg/gradle/api/attributes/Attribute;
	public final fun setupAttributesMatchingStrategy (Lorg/gradle/api/attributes/AttributesSchema;)V
}

public class org/jetbrains/kotlin/gradle/targets/js/KotlinJsPlatformTestRun : org/jetbrains/kotlin/gradle/testing/KotlinTaskTestRun, org/jetbrains/kotlin/gradle/plugin/CompilationExecutionSourceSupport {
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;)V
	public synthetic fun getExecutionSource ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinExecution$ExecutionSource;
	public final fun getExecutionSource ()Lorg/jetbrains/kotlin/gradle/targets/js/JsCompilationExecutionSource;
	public final fun setExecutionSource (Lorg/jetbrains/kotlin/gradle/targets/js/JsCompilationExecutionSource;)V
	public synthetic fun setExecutionSourceFrom (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationToRunnableFiles;)V
	public fun setExecutionSourceFrom (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;)V
}

public class org/jetbrains/kotlin/gradle/targets/js/KotlinJsPlugin : org/gradle/api/Plugin {
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/KotlinJsReportAggregatingTestRun : org/jetbrains/kotlin/gradle/testing/KotlinReportAggregatingTestRun, org/jetbrains/kotlin/gradle/plugin/CompilationExecutionSourceSupport, org/jetbrains/kotlin/gradle/plugin/KotlinTargetTestRun {
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsSubTargetContainerDsl;)V
	public fun configureAllExecutions (Lkotlin/jvm/functions/Function1;)V
	public fun filter (Lgroovy/lang/Closure;)V
	public fun getConfiguredExecutions ()Ljava/lang/Iterable;
	public synthetic fun getExecutionSource ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinExecution$ExecutionSource;
	public fun getExecutionSource ()Lorg/jetbrains/kotlin/gradle/targets/js/JsAggregatingExecutionSource;
	public synthetic fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun getTarget ()Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsSubTargetContainerDsl;
	public synthetic fun setExecutionSourceFrom (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationToRunnableFiles;)V
	public fun setExecutionSourceFrom (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;)V
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/KotlinJsTarget : org/jetbrains/kotlin/gradle/plugin/KotlinTarget, org/jetbrains/kotlin/gradle/plugin/mpp/InternalKotlinTarget {
	public fun <init> ()V
	public fun attributes (Lkotlin/jvm/functions/Function1;)V
	public fun attributes (Lorg/gradle/api/Action;)V
	public fun getDisambiguationClassifier ()Ljava/lang/String;
	public final fun getIrTarget ()Ljava/lang/Void;
	public fun getName ()Ljava/lang/String;
	public fun getSourceSets ()Lorg/gradle/api/NamedDomainObjectContainer;
	public fun get_preset ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTargetPreset;
	public fun jvmToolchain (I)V
	public fun jvmToolchain (Lorg/gradle/api/Action;)V
	public fun mavenPublication (Lkotlin/jvm/functions/Function1;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/KotlinWasmTargetAttribute : java/lang/Enum, java/io/Serializable, org/gradle/api/Named {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/KotlinWasmTargetAttribute$Companion;
	public static final field js Lorg/jetbrains/kotlin/gradle/targets/js/KotlinWasmTargetAttribute;
	public static final field wasi Lorg/jetbrains/kotlin/gradle/targets/js/KotlinWasmTargetAttribute;
	public fun getName ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/KotlinWasmTargetAttribute;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/targets/js/KotlinWasmTargetAttribute;
}

public final class org/jetbrains/kotlin/gradle/targets/js/KotlinWasmTargetAttribute$Companion {
	public final fun getWasmTargetAttribute ()Lorg/gradle/api/attributes/Attribute;
	public final fun setupAttributesMatchingStrategy (Lorg/gradle/api/attributes/AttributesSchema;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/KotlinWasmTargetType : java/lang/Enum {
	public static final field JS Lorg/jetbrains/kotlin/gradle/targets/js/KotlinWasmTargetType;
	public static final field WASI Lorg/jetbrains/kotlin/gradle/targets/js/KotlinWasmTargetType;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/KotlinWasmTargetType;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/targets/js/KotlinWasmTargetType;
}

public final class org/jetbrains/kotlin/gradle/targets/js/KotlinWasmTargetTypeKt {
	public static final fun toAttribute (Lorg/jetbrains/kotlin/gradle/targets/js/KotlinWasmTargetType;)Lorg/jetbrains/kotlin/gradle/targets/js/KotlinWasmTargetAttribute;
	public static final fun toCompilerTarget (Lorg/jetbrains/kotlin/gradle/targets/js/KotlinWasmTargetType;)Lorg/jetbrains/kotlin/platform/wasm/WasmTarget;
}

public final class org/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion : org/jetbrains/kotlin/gradle/targets/js/RequiredKotlinJsDependency {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public fun createDependency (Lorg/gradle/api/model/ObjectFactory;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency$Scope;)Lorg/gradle/api/artifacts/Dependency;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public final fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun setVersion (Ljava/lang/String;)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/NpmVersions : java/io/Serializable {
	public fun <init> ()V
	public final fun getCssLoader ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getKarma ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getKarmaChromeLauncher ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getKarmaFirefoxLauncher ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getKarmaIeLauncher ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getKarmaMocha ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getKarmaOperaLauncher ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getKarmaPhantomjsLauncher ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getKarmaSafariLauncher ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getKarmaSourcemapLoader ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getKarmaWebpack ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getKotlinWebHelpers ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getMiniCssExtractPlugin ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getMocha ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getSass ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getSassLoader ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getSourceMapLoader ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getSourceMapSupport ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getStyleLoader ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getToStringLoader ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getTypescript ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getWebpack ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getWebpackCli ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
	public final fun getWebpackDevServer ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmPackageVersion;
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/RequiredKotlinJsDependency : java/io/Serializable {
	public abstract fun createDependency (Lorg/gradle/api/model/ObjectFactory;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency$Scope;)Lorg/gradle/api/artifacts/Dependency;
}

public final class org/jetbrains/kotlin/gradle/targets/js/RequiredKotlinJsDependency$DefaultImpls {
	public static synthetic fun createDependency$default (Lorg/jetbrains/kotlin/gradle/targets/js/RequiredKotlinJsDependency;Lorg/gradle/api/model/ObjectFactory;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency$Scope;ILjava/lang/Object;)Lorg/gradle/api/artifacts/Dependency;
}

public final class org/jetbrains/kotlin/gradle/targets/js/StringsKt {
	public static final fun jsQuoted (Ljava/lang/String;)Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/UtilsKt {
	public static final field HTML Ljava/lang/String;
	public static final field JS Ljava/lang/String;
	public static final field JS_MAP Ljava/lang/String;
	public static final field META_JS Ljava/lang/String;
	public static final field MJS Ljava/lang/String;
	public static final field WASM Ljava/lang/String;
	public static final fun appendConfigsFromDir (Ljava/lang/Appendable;Ljava/io/File;)V
	public static final fun calculateDirHash (Lorg/gradle/internal/hash/FileHasher;Ljava/io/File;)Ljava/lang/String;
	public static final fun toHex ([B)Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenEnv : org/jetbrains/kotlin/gradle/targets/js/AbstractEnv {
	public fun <init> (ZLjava/lang/String;ZLjava/lang/String;Ljava/lang/String;Ljava/io/File;Lorg/jetbrains/kotlin/gradle/tasks/internal/CleanableStore;Z)V
	public final fun component1 ()Z
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Z
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/io/File;
	public final fun component7 ()Lorg/jetbrains/kotlin/gradle/tasks/internal/CleanableStore;
	public final fun component8 ()Z
	public final fun copy (ZLjava/lang/String;ZLjava/lang/String;Ljava/lang/String;Ljava/io/File;Lorg/jetbrains/kotlin/gradle/tasks/internal/CleanableStore;Z)Lorg/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenEnv;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenEnv;ZLjava/lang/String;ZLjava/lang/String;Ljava/lang/String;Ljava/io/File;Lorg/jetbrains/kotlin/gradle/tasks/internal/CleanableStore;ZILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenEnv;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAllowInsecureProtocol ()Z
	public fun getCleanableStore ()Lorg/jetbrains/kotlin/gradle/tasks/internal/CleanableStore;
	public fun getDir ()Ljava/io/File;
	public fun getDownload ()Z
	public fun getDownloadBaseUrl ()Ljava/lang/String;
	public fun getExecutable ()Ljava/lang/String;
	public final fun getExecutablePath ()Ljava/io/File;
	public fun getIvyDependency ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isWindows ()Z
	public fun toString ()Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenExec : org/gradle/api/tasks/AbstractExecTask {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenExec$Companion;
	public fun <init> ()V
	protected fun exec ()V
	public final fun getBinaryenArgs ()Ljava/util/List;
	public abstract fun getFs ()Lorg/gradle/api/file/FileSystemOperations;
	public final fun getInputFileProperty ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getOutputDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getOutputFileName ()Lorg/gradle/api/provider/Property;
	public final fun getOutputFileProperty ()Lorg/gradle/api/provider/Provider;
	public final fun setBinaryenArgs (Ljava/util/List;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenExec$Companion {
	public final fun create (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/tasks/TaskProvider;
	public static synthetic fun create$default (Lorg/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenExec$Companion;Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/tasks/TaskProvider;
	public final fun register (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/tasks/TaskProvider;
	public static synthetic fun register$default (Lorg/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenExec$Companion;Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/tasks/TaskProvider;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenRootEnvSpec : org/jetbrains/kotlin/gradle/targets/js/EnvSpec {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenRootEnvSpec$Companion;
	public static final field EXTENSION_NAME Ljava/lang/String;
	public fun <init> ()V
	public fun getExecutable ()Lorg/gradle/api/provider/Provider;
	protected final fun produceEnv ()Lorg/gradle/api/provider/Provider;
}

public final class org/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenRootEnvSpec$Companion {
}

public class org/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenRootExtension : org/jetbrains/kotlin/gradle/targets/js/AbstractSettings {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenRootExtension$Companion;
	public static final field EXTENSION_NAME Ljava/lang/String;
	public fun <init> (Lorg/gradle/api/Project;Lorg/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenRootEnvSpec;)V
	public synthetic fun finalizeConfiguration ()Ljava/lang/Object;
	protected fun finalizeConfiguration ()Lorg/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenEnv;
	public final fun getRootProject ()Lorg/gradle/api/Project;
	public final fun getSetupTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
}

public final class org/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenRootExtension$Companion {
}

public class org/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenRootPlugin : org/gradle/api/Plugin {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenRootPlugin$Companion;
	public static final field TASKS_GROUP_NAME Ljava/lang/String;
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenRootPlugin$Companion {
	public final fun apply (Lorg/gradle/api/Project;)Lorg/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenRootExtension;
	public final fun getKotlinBinaryenExtension (Lorg/gradle/api/Project;)Lorg/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenRootExtension;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenSetupTask : org/jetbrains/kotlin/gradle/targets/js/AbstractSetupTask {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenSetupTask$Companion;
	public static final field NAME Ljava/lang/String;
	public fun extract (Ljava/io/File;)V
	protected fun getArtifactModule ()Ljava/lang/String;
	protected fun getArtifactName ()Ljava/lang/String;
	protected fun getArtifactPattern ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/binaryen/BinaryenSetupTask$Companion {
}

public final class org/jetbrains/kotlin/gradle/targets/js/d8/D8Env : org/jetbrains/kotlin/gradle/targets/js/AbstractEnv {
	public fun <init> (ZLjava/lang/String;ZLjava/lang/String;Ljava/lang/String;Ljava/io/File;Lorg/jetbrains/kotlin/gradle/tasks/internal/CleanableStore;Z)V
	public final fun component1 ()Z
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Z
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/io/File;
	public final fun component7 ()Lorg/jetbrains/kotlin/gradle/tasks/internal/CleanableStore;
	public final fun component8 ()Z
	public final fun copy (ZLjava/lang/String;ZLjava/lang/String;Ljava/lang/String;Ljava/io/File;Lorg/jetbrains/kotlin/gradle/tasks/internal/CleanableStore;Z)Lorg/jetbrains/kotlin/gradle/targets/js/d8/D8Env;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/d8/D8Env;ZLjava/lang/String;ZLjava/lang/String;Ljava/lang/String;Ljava/io/File;Lorg/jetbrains/kotlin/gradle/tasks/internal/CleanableStore;ZILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/d8/D8Env;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAllowInsecureProtocol ()Z
	public fun getCleanableStore ()Lorg/jetbrains/kotlin/gradle/tasks/internal/CleanableStore;
	public fun getDir ()Ljava/io/File;
	public fun getDownload ()Z
	public fun getDownloadBaseUrl ()Ljava/lang/String;
	public fun getExecutable ()Ljava/lang/String;
	public final fun getExecutablePath ()Ljava/io/File;
	public fun getIvyDependency ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isWindows ()Z
	public fun toString ()Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/d8/D8EnvSpec : org/jetbrains/kotlin/gradle/targets/js/EnvSpec {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/d8/D8EnvSpec$Companion;
	public static final field EXTENSION_NAME Ljava/lang/String;
	public fun <init> ()V
	public final fun getD8SetupTaskProvider (Lorg/gradle/api/Project;)Lorg/gradle/api/tasks/TaskProvider;
	public abstract fun getEdition ()Lorg/gradle/api/provider/Property;
	public fun getExecutable ()Lorg/gradle/api/provider/Provider;
	public abstract fun getVersion ()Lorg/gradle/api/provider/Property;
	protected final fun produceEnv ()Lorg/gradle/api/provider/Provider;
}

public final class org/jetbrains/kotlin/gradle/targets/js/d8/D8EnvSpec$Companion {
}

public class org/jetbrains/kotlin/gradle/targets/js/d8/D8Exec : org/gradle/api/tasks/AbstractExecTask {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/d8/D8Exec$Companion;
	public fun <init> ()V
	protected fun exec ()V
	public final fun getD8Args ()Ljava/util/List;
	public final fun getInputFileProperty ()Lorg/gradle/api/file/RegularFileProperty;
	public final fun setD8Args (Ljava/util/List;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/d8/D8Exec$Companion {
	public final fun create (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/tasks/TaskProvider;
	public static synthetic fun create$default (Lorg/jetbrains/kotlin/gradle/targets/js/d8/D8Exec$Companion;Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/tasks/TaskProvider;
	public final fun register (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/tasks/TaskProvider;
	public static synthetic fun register$default (Lorg/jetbrains/kotlin/gradle/targets/js/d8/D8Exec$Companion;Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/tasks/TaskProvider;
}

public class org/jetbrains/kotlin/gradle/targets/js/d8/D8Plugin : org/gradle/api/Plugin {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/d8/D8Plugin$Companion;
	public static final field TASKS_GROUP_NAME Ljava/lang/String;
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/d8/D8Plugin$Companion {
}

public class org/jetbrains/kotlin/gradle/targets/js/d8/D8RootExtension : org/jetbrains/kotlin/gradle/targets/js/AbstractSettings {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/d8/D8RootExtension$Companion;
	public static final field EXTENSION_NAME Ljava/lang/String;
	public fun <init> (Lorg/gradle/api/Project;Lorg/jetbrains/kotlin/gradle/targets/js/d8/D8EnvSpec;)V
	public synthetic fun finalizeConfiguration ()Ljava/lang/Object;
	protected fun finalizeConfiguration ()Lorg/jetbrains/kotlin/gradle/targets/js/d8/D8Env;
	public final fun getEdition ()Lorg/gradle/api/provider/Property;
	public final fun getProject ()Lorg/gradle/api/Project;
	public final fun getSetupTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
}

public final class org/jetbrains/kotlin/gradle/targets/js/d8/D8RootExtension$Companion {
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/d8/D8SetupTask : org/jetbrains/kotlin/gradle/targets/js/AbstractSetupTask {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/d8/D8SetupTask$Companion;
	public static final field NAME Ljava/lang/String;
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/d8/D8EnvSpec;)V
	public fun extract (Ljava/io/File;)V
	protected fun getArtifactModule ()Ljava/lang/String;
	protected fun getArtifactName ()Ljava/lang/String;
	protected fun getArtifactPattern ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/d8/D8SetupTask$Companion {
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/dsl/Distribution {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/dsl/Distribution$Companion;
	public static final field DIST Ljava/lang/String;
	public abstract fun getDirectory ()Ljava/io/File;
	public abstract fun getDistributionName ()Lorg/gradle/api/provider/Property;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getOutputDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun setDirectory (Ljava/io/File;)V
	public abstract fun setName (Ljava/lang/String;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/dsl/Distribution$Companion {
	public static final field DIST Ljava/lang/String;
}

public abstract interface annotation class org/jetbrains/kotlin/gradle/targets/js/dsl/ExperimentalDceDsl : java/lang/annotation/Annotation {
}

public abstract interface annotation class org/jetbrains/kotlin/gradle/targets/js/dsl/ExperimentalDistributionDsl : java/lang/annotation/Annotation {
}

public abstract interface annotation class org/jetbrains/kotlin/gradle/targets/js/dsl/ExperimentalMainFunctionArgumentsDsl : java/lang/annotation/Annotation {
}

public abstract interface annotation class org/jetbrains/kotlin/gradle/targets/js/dsl/ExperimentalWasmDsl : java/lang/annotation/Annotation {
}

public final class org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsBinaryMode : java/lang/Enum {
	public static final field DEVELOPMENT Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsBinaryMode;
	public static final field PRODUCTION Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsBinaryMode;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsBinaryMode;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsBinaryMode;
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsBrowserDsl : org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsSubTargetDsl {
	public abstract fun commonWebpackConfig (Lorg/gradle/api/Action;)V
	public abstract fun dceTask (Lorg/gradle/api/Action;)V
	public abstract fun runTask (Lorg/gradle/api/Action;)V
	public abstract fun webpackTask (Lorg/gradle/api/Action;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsNodeDsl : org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsSubTargetDsl {
	public abstract fun passProcessArgvToMainFunction ()V
	public abstract fun runTask (Lorg/gradle/api/Action;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsSubTargetContainerDsl : org/jetbrains/kotlin/gradle/plugin/KotlinTarget {
	public abstract fun getBrowser ()Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsBrowserDsl;
	public abstract fun getNodejs ()Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsNodeDsl;
	public abstract fun getSubTargets ()Lorg/gradle/api/NamedDomainObjectContainer;
	public abstract fun isBrowserConfigured ()Z
	public abstract fun isNodejsConfigured ()Z
	public abstract fun whenBrowserConfigured (Lkotlin/jvm/functions/Function1;)V
	public abstract fun whenNodejsConfigured (Lkotlin/jvm/functions/Function1;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsSubTargetContainerDsl$DefaultImpls {
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsSubTargetContainerDsl;Lkotlin/jvm/functions/Function1;)V
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsSubTargetContainerDsl;Lorg/gradle/api/Action;)V
	public static fun getDisambiguationClassifier (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsSubTargetContainerDsl;)Ljava/lang/String;
	public static fun getName (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsSubTargetContainerDsl;)Ljava/lang/String;
	public static fun isBrowserConfigured (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsSubTargetContainerDsl;)Z
	public static fun isNodejsConfigured (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsSubTargetContainerDsl;)Z
	public static fun mavenPublication (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsSubTargetContainerDsl;Lkotlin/jvm/functions/Function1;)V
	public static fun whenBrowserConfigured (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsSubTargetContainerDsl;Lkotlin/jvm/functions/Function1;)V
	public static fun whenNodejsConfigured (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsSubTargetContainerDsl;Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsSubTargetDsl {
	public abstract fun distribution (Lorg/gradle/api/Action;)V
	public abstract fun getTestRuns ()Lorg/gradle/api/NamedDomainObjectContainer;
	public abstract fun testTask (Lorg/gradle/api/Action;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl : org/jetbrains/kotlin/gradle/dsl/HasConfigurableKotlinCompilerOptions, org/jetbrains/kotlin/gradle/plugin/KotlinTarget, org/jetbrains/kotlin/gradle/plugin/mpp/HasBinaries, org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinTargetWithNodeJsDsl {
	public abstract fun browser ()V
	public abstract fun browser (Lkotlin/jvm/functions/Function1;)V
	public abstract fun browser (Lorg/gradle/api/Action;)V
	public abstract fun generateTypeScriptDefinitions ()V
	public abstract fun getBinaries ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsBinaryContainer;
	public abstract fun getCompilations ()Lorg/gradle/api/NamedDomainObjectContainer;
	public abstract fun getModuleName ()Ljava/lang/String;
	public abstract fun getOutputModuleName ()Lorg/gradle/api/provider/Property;
	public abstract fun getTestRuns ()Lorg/gradle/api/NamedDomainObjectContainer;
	public abstract fun passAsArgumentToMainFunction (Ljava/lang/String;)V
	public abstract fun produceExecutable ()V
	public abstract fun setModuleName (Ljava/lang/String;)V
	public abstract fun useCommonJs ()V
	public abstract fun useEsModules ()V
}

public final class org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl$DefaultImpls {
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;Lkotlin/jvm/functions/Function1;)V
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;Lorg/gradle/api/Action;)V
	public static fun browser (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;)V
	public static fun browser (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;Lorg/gradle/api/Action;)V
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;Lkotlin/jvm/functions/Function1;)V
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;Lorg/gradle/api/Action;)V
	public static fun getDisambiguationClassifier (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;)Ljava/lang/String;
	public static fun getName (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;)Ljava/lang/String;
	public static fun mavenPublication (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;Lkotlin/jvm/functions/Function1;)V
	public static fun nodejs (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;)V
	public static fun nodejs (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;Lorg/gradle/api/Action;)V
	public static fun produceExecutable (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinTargetWithNodeJsDsl {
	public abstract fun nodejs ()V
	public abstract fun nodejs (Lkotlin/jvm/functions/Function1;)V
	public abstract fun nodejs (Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinTargetWithNodeJsDsl$DefaultImpls {
	public static fun nodejs (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinTargetWithNodeJsDsl;)V
	public static fun nodejs (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinTargetWithNodeJsDsl;Lorg/gradle/api/Action;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmD8Dsl : org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsSubTargetDsl {
	public abstract fun runTask (Lkotlin/jvm/functions/Function1;)V
	public abstract fun runTask (Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmD8Dsl$DefaultImpls {
	public static fun runTask (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmD8Dsl;Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmJsTargetDsl : org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl, org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmTargetDsl {
	public abstract fun d8 ()V
	public abstract fun d8 (Lkotlin/jvm/functions/Function1;)V
	public abstract fun d8 (Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmJsTargetDsl$DefaultImpls {
	public static fun applyBinaryen (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmJsTargetDsl;)V
	public static fun applyBinaryen (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmJsTargetDsl;Lorg/gradle/api/Action;)V
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmJsTargetDsl;Lkotlin/jvm/functions/Function1;)V
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmJsTargetDsl;Lorg/gradle/api/Action;)V
	public static fun browser (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmJsTargetDsl;)V
	public static fun browser (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmJsTargetDsl;Lorg/gradle/api/Action;)V
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmJsTargetDsl;Lkotlin/jvm/functions/Function1;)V
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmJsTargetDsl;Lorg/gradle/api/Action;)V
	public static fun d8 (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmJsTargetDsl;)V
	public static fun d8 (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmJsTargetDsl;Lorg/gradle/api/Action;)V
	public static fun getDisambiguationClassifier (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmJsTargetDsl;)Ljava/lang/String;
	public static fun getName (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmJsTargetDsl;)Ljava/lang/String;
	public static fun mavenPublication (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmJsTargetDsl;Lkotlin/jvm/functions/Function1;)V
	public static fun nodejs (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmJsTargetDsl;)V
	public static fun nodejs (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmJsTargetDsl;Lorg/gradle/api/Action;)V
	public static fun produceExecutable (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmJsTargetDsl;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmSubTargetContainerDsl : org/jetbrains/kotlin/gradle/plugin/KotlinTarget {
	public abstract fun getD8 ()Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmD8Dsl;
	public abstract fun getSubTargets ()Lorg/gradle/api/NamedDomainObjectContainer;
	public abstract fun isD8Configured ()Z
	public abstract fun whenD8Configured (Lkotlin/jvm/functions/Function1;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmSubTargetContainerDsl$DefaultImpls {
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmSubTargetContainerDsl;Lkotlin/jvm/functions/Function1;)V
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmSubTargetContainerDsl;Lorg/gradle/api/Action;)V
	public static fun getDisambiguationClassifier (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmSubTargetContainerDsl;)Ljava/lang/String;
	public static fun getName (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmSubTargetContainerDsl;)Ljava/lang/String;
	public static fun isD8Configured (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmSubTargetContainerDsl;)Z
	public static fun mavenPublication (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmSubTargetContainerDsl;Lkotlin/jvm/functions/Function1;)V
	public static fun whenD8Configured (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmSubTargetContainerDsl;Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmTargetDsl : org/jetbrains/kotlin/gradle/plugin/KotlinTarget, org/jetbrains/kotlin/gradle/plugin/mpp/HasBinaries {
	public abstract fun applyBinaryen ()V
	public abstract fun applyBinaryen (Lkotlin/jvm/functions/Function1;)V
	public abstract fun applyBinaryen (Lorg/gradle/api/Action;)V
	public abstract fun getBinaries ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsBinaryContainer;
	public abstract fun getCompilations ()Lorg/gradle/api/NamedDomainObjectContainer;
	public abstract fun getWasmTargetType ()Lorg/jetbrains/kotlin/gradle/targets/js/KotlinWasmTargetType;
}

public final class org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmTargetDsl$DefaultImpls {
	public static fun applyBinaryen (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmTargetDsl;)V
	public static fun applyBinaryen (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmTargetDsl;Lorg/gradle/api/Action;)V
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmTargetDsl;Lkotlin/jvm/functions/Function1;)V
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmTargetDsl;Lorg/gradle/api/Action;)V
	public static fun getDisambiguationClassifier (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmTargetDsl;)Ljava/lang/String;
	public static fun getName (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmTargetDsl;)Ljava/lang/String;
	public static fun mavenPublication (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmTargetDsl;Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmWasiTargetDsl : org/jetbrains/kotlin/gradle/plugin/mpp/HasBinaries, org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinTargetWithNodeJsDsl, org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmTargetDsl {
}

public final class org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmWasiTargetDsl$DefaultImpls {
	public static fun applyBinaryen (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmWasiTargetDsl;)V
	public static fun applyBinaryen (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmWasiTargetDsl;Lorg/gradle/api/Action;)V
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmWasiTargetDsl;Lkotlin/jvm/functions/Function1;)V
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmWasiTargetDsl;Lorg/gradle/api/Action;)V
	public static fun getDisambiguationClassifier (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmWasiTargetDsl;)Ljava/lang/String;
	public static fun getName (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmWasiTargetDsl;)Ljava/lang/String;
	public static fun mavenPublication (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmWasiTargetDsl;Lkotlin/jvm/functions/Function1;)V
	public static fun nodejs (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmWasiTargetDsl;)V
	public static fun nodejs (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmWasiTargetDsl;Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWebpackRulesContainer : org/gradle/api/ExtensiblePolymorphicDomainObjectContainer {
	public fun <init> (Lorg/gradle/api/ExtensiblePolymorphicDomainObjectContainer;Lorg/gradle/api/model/ObjectFactory;)V
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun add (Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackRule;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun addAllLater (Lorg/gradle/api/provider/Provider;)V
	public fun addLater (Lorg/gradle/api/provider/Provider;)V
	public fun addRule (Ljava/lang/String;Lgroovy/lang/Closure;)Lorg/gradle/api/Rule;
	public fun addRule (Ljava/lang/String;Lorg/gradle/api/Action;)Lorg/gradle/api/Rule;
	public fun addRule (Lorg/gradle/api/Rule;)Lorg/gradle/api/Rule;
	public fun all (Lgroovy/lang/Closure;)V
	public fun all (Lorg/gradle/api/Action;)V
	public fun clear ()V
	public synthetic fun configure (Lgroovy/lang/Closure;)Ljava/lang/Object;
	public fun configure (Lgroovy/lang/Closure;)Lorg/gradle/api/NamedDomainObjectContainer;
	public fun configureEach (Lorg/gradle/api/Action;)V
	public fun containerWithType (Ljava/lang/Class;)Lorg/gradle/api/NamedDomainObjectContainer;
	public final fun contains (Ljava/lang/Object;)Z
	public fun contains (Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackRule;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public synthetic fun create (Ljava/lang/String;)Ljava/lang/Object;
	public fun create (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackRule;
	public synthetic fun create (Ljava/lang/String;Lgroovy/lang/Closure;)Ljava/lang/Object;
	public fun create (Ljava/lang/String;Lgroovy/lang/Closure;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackRule;
	public synthetic fun create (Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
	public fun create (Ljava/lang/String;Ljava/lang/Class;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackRule;
	public synthetic fun create (Ljava/lang/String;Ljava/lang/Class;Lorg/gradle/api/Action;)Ljava/lang/Object;
	public fun create (Ljava/lang/String;Ljava/lang/Class;Lorg/gradle/api/Action;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackRule;
	public synthetic fun create (Ljava/lang/String;Lorg/gradle/api/Action;)Ljava/lang/Object;
	public fun create (Ljava/lang/String;Lorg/gradle/api/Action;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackRule;
	public synthetic fun findAll (Lgroovy/lang/Closure;)Ljava/util/Collection;
	public fun findAll (Lgroovy/lang/Closure;)Ljava/util/Set;
	public synthetic fun findByName (Ljava/lang/String;)Ljava/lang/Object;
	public fun findByName (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackRule;
	public fun getAsMap ()Ljava/util/SortedMap;
	public synthetic fun getAt (Ljava/lang/String;)Ljava/lang/Object;
	public fun getAt (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackRule;
	public synthetic fun getByName (Ljava/lang/String;)Ljava/lang/Object;
	public fun getByName (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackRule;
	public synthetic fun getByName (Ljava/lang/String;Lgroovy/lang/Closure;)Ljava/lang/Object;
	public fun getByName (Ljava/lang/String;Lgroovy/lang/Closure;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackRule;
	public synthetic fun getByName (Ljava/lang/String;Lorg/gradle/api/Action;)Ljava/lang/Object;
	public fun getByName (Ljava/lang/String;Lorg/gradle/api/Action;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackRule;
	public fun getCollectionSchema ()Lorg/gradle/api/NamedDomainObjectCollectionSchema;
	public fun getNamer ()Lorg/gradle/api/Namer;
	public fun getNames ()Ljava/util/SortedSet;
	public fun getRules ()Ljava/util/List;
	public fun getSize ()I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public synthetic fun matching (Lgroovy/lang/Closure;)Lorg/gradle/api/DomainObjectCollection;
	public synthetic fun matching (Lgroovy/lang/Closure;)Lorg/gradle/api/DomainObjectSet;
	public synthetic fun matching (Lgroovy/lang/Closure;)Lorg/gradle/api/NamedDomainObjectCollection;
	public fun matching (Lgroovy/lang/Closure;)Lorg/gradle/api/NamedDomainObjectSet;
	public synthetic fun matching (Lorg/gradle/api/specs/Spec;)Lorg/gradle/api/DomainObjectCollection;
	public synthetic fun matching (Lorg/gradle/api/specs/Spec;)Lorg/gradle/api/DomainObjectSet;
	public synthetic fun matching (Lorg/gradle/api/specs/Spec;)Lorg/gradle/api/NamedDomainObjectCollection;
	public fun matching (Lorg/gradle/api/specs/Spec;)Lorg/gradle/api/NamedDomainObjectSet;
	public synthetic fun maybeCreate (Ljava/lang/String;)Ljava/lang/Object;
	public fun maybeCreate (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackRule;
	public synthetic fun maybeCreate (Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
	public fun maybeCreate (Ljava/lang/String;Ljava/lang/Class;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackRule;
	public fun named (Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public fun named (Ljava/lang/String;Ljava/lang/Class;)Lorg/gradle/api/NamedDomainObjectProvider;
	public fun named (Ljava/lang/String;Ljava/lang/Class;Lorg/gradle/api/Action;)Lorg/gradle/api/NamedDomainObjectProvider;
	public fun named (Ljava/lang/String;Lorg/gradle/api/Action;)Lorg/gradle/api/NamedDomainObjectProvider;
	public synthetic fun named (Lorg/gradle/api/specs/Spec;)Lorg/gradle/api/NamedDomainObjectCollection;
	public fun named (Lorg/gradle/api/specs/Spec;)Lorg/gradle/api/NamedDomainObjectSet;
	public fun register (Ljava/lang/String;)Lorg/gradle/api/NamedDomainObjectProvider;
	public fun register (Ljava/lang/String;Ljava/lang/Class;)Lorg/gradle/api/NamedDomainObjectProvider;
	public fun register (Ljava/lang/String;Ljava/lang/Class;Lorg/gradle/api/Action;)Lorg/gradle/api/NamedDomainObjectProvider;
	public fun register (Ljava/lang/String;Lorg/gradle/api/Action;)Lorg/gradle/api/NamedDomainObjectProvider;
	public fun registerBinding (Ljava/lang/Class;Ljava/lang/Class;)V
	public fun registerFactory (Ljava/lang/Class;Lgroovy/lang/Closure;)V
	public fun registerFactory (Ljava/lang/Class;Lorg/gradle/api/NamedDomainObjectFactory;)V
	public final fun remove (Ljava/lang/Object;)Z
	public fun remove (Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackRule;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public final fun rule (Ljava/lang/Class;Ljava/lang/String;Lorg/gradle/api/Action;)V
	public static synthetic fun rule$default (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWebpackRulesContainer;Ljava/lang/Class;Ljava/lang/String;Lorg/gradle/api/Action;ILjava/lang/Object;)V
	public final fun size ()I
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
	public fun whenObjectAdded (Lgroovy/lang/Closure;)V
	public fun whenObjectAdded (Lorg/gradle/api/Action;)Lorg/gradle/api/Action;
	public fun whenObjectRemoved (Lgroovy/lang/Closure;)V
	public fun whenObjectRemoved (Lorg/gradle/api/Action;)Lorg/gradle/api/Action;
	public synthetic fun withType (Ljava/lang/Class;)Lorg/gradle/api/DomainObjectCollection;
	public synthetic fun withType (Ljava/lang/Class;)Lorg/gradle/api/DomainObjectSet;
	public synthetic fun withType (Ljava/lang/Class;)Lorg/gradle/api/NamedDomainObjectCollection;
	public fun withType (Ljava/lang/Class;)Lorg/gradle/api/NamedDomainObjectSet;
	public fun withType (Ljava/lang/Class;Lgroovy/lang/Closure;)Lorg/gradle/api/DomainObjectCollection;
	public fun withType (Ljava/lang/Class;Lorg/gradle/api/Action;)Lorg/gradle/api/DomainObjectCollection;
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/dsl/WebpackRulesDsl {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/dsl/WebpackRulesDsl$Companion;
	public abstract fun cssSupport (Lorg/gradle/api/Action;)V
	public abstract fun getRules ()Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWebpackRulesContainer;
	public abstract fun rules (Lorg/gradle/api/Action;)V
	public abstract fun scssSupport (Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/dsl/WebpackRulesDsl$Companion {
	public final fun webpackRulesContainer (Lorg/gradle/api/model/ObjectFactory;)Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWebpackRulesContainer;
}

public final class org/jetbrains/kotlin/gradle/targets/js/dsl/WebpackRulesDsl$DefaultImpls {
	public static fun cssSupport (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/WebpackRulesDsl;Lorg/gradle/api/Action;)V
	public static fun rules (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/WebpackRulesDsl;Lorg/gradle/api/Action;)V
	public static fun scssSupport (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/WebpackRulesDsl;Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/D8EnvironmentConfigurator : org/jetbrains/kotlin/gradle/targets/js/ir/JsEnvironmentConfigurator {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrSubTarget;)V
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/ir/DefaultIncrementalSyncTask : org/gradle/api/DefaultTask, org/jetbrains/kotlin/gradle/tasks/IncrementalSyncTask {
	public fun <init> ()V
	public final fun doCopy (Lorg/gradle/work/InputChanges;)V
	public fun getDestinationDir ()Ljava/io/File;
	public abstract fun getFs ()Lorg/gradle/api/file/FileSystemOperations;
	public abstract fun getObjectFactory ()Lorg/gradle/api/model/ObjectFactory;
}

public class org/jetbrains/kotlin/gradle/targets/js/ir/Executable : org/jetbrains/kotlin/gradle/targets/js/ir/JsIrBinary {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsBinaryMode;)V
	public fun getDistribution ()Lorg/jetbrains/kotlin/gradle/targets/js/dsl/Distribution;
	public final fun getExecuteTaskBaseName ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/ExecutableWasm : org/jetbrains/kotlin/gradle/targets/js/ir/Executable, org/jetbrains/kotlin/gradle/targets/js/ir/WasmBinary {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsBinaryMode;)V
	public final fun getMainOptimizedFile ()Lorg/gradle/api/provider/Provider;
	public fun getOptimizeTask ()Lorg/gradle/api/tasks/TaskProvider;
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/ir/JsBinary {
	public abstract fun getCompilation ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinJsCompilation;
	public abstract fun getDistribution ()Lorg/jetbrains/kotlin/gradle/targets/js/dsl/Distribution;
	public abstract fun getMode ()Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsBinaryMode;
	public abstract fun getName ()Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/ir/JsEnvironmentConfigurator : org/jetbrains/kotlin/gradle/targets/js/ir/SubTargetConfigurator {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrSubTarget;)V
	protected abstract fun configureBinaryRun (Lorg/jetbrains/kotlin/gradle/targets/js/ir/JsIrBinary;)Lorg/gradle/api/tasks/TaskProvider;
	public fun configureBuild (Lorg/gradle/api/Action;)V
	public fun configureRun (Lorg/gradle/api/Action;)V
	protected final fun getProject ()Lorg/gradle/api/Project;
	protected final fun getRunTaskConfigurations ()Lorg/gradle/api/DomainObjectSet;
	protected final fun getSubTarget ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrSubTarget;
	public fun setupBuild (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;)V
	public fun setupRun (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;)V
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/ir/JsIrBinary : org/jetbrains/kotlin/gradle/targets/js/ir/JsBinary {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/ir/JsIrBinary$Companion;
	public synthetic fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsBinaryMode;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun getCompilation ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinJsCompilation;
	public final fun getCompilation ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;
	public fun getDistribution ()Lorg/jetbrains/kotlin/gradle/targets/js/dsl/Distribution;
	public final fun getGenerateTs ()Z
	public final fun getLinkSyncTask ()Lorg/gradle/api/tasks/TaskProvider;
	public final fun getLinkSyncTaskName ()Ljava/lang/String;
	public final fun getLinkTask ()Lorg/gradle/api/tasks/TaskProvider;
	public final fun getLinkTaskName ()Ljava/lang/String;
	public final fun getMainFile ()Lorg/gradle/api/provider/Provider;
	public final fun getMainFileName ()Lorg/gradle/api/provider/Provider;
	public final fun getMainFileSyncPath ()Lorg/gradle/api/provider/Provider;
	public fun getMode ()Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsBinaryMode;
	public final fun getName ()Ljava/lang/String;
	public final fun getOutputDirBase ()Lorg/gradle/api/provider/Provider;
	public final fun getProject ()Lorg/gradle/api/Project;
	public final fun getTarget ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTarget;
	public final fun getValidateGeneratedTsTaskName ()Ljava/lang/String;
	public final fun setGenerateTs (Z)V
	protected fun syncInputConfigure (Lorg/jetbrains/kotlin/gradle/targets/js/ir/DefaultIncrementalSyncTask;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/JsIrBinary$Companion {
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/KlibTypeKt {
	public static final field KLIB_TYPE Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinBrowserJsIr : org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrNpmBasedSubTarget, org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsBrowserDsl {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinBrowserJsIr$Companion;
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTarget;)V
	public fun commonWebpackConfig (Lorg/gradle/api/Action;)V
	public fun configureDefaultTestFramework (Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinJsTest;)V
	public fun configureTestDependencies (Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinJsTest;Lorg/jetbrains/kotlin/gradle/targets/js/ir/JsIrBinary;)V
	public fun dceTask (Lorg/gradle/api/Action;)V
	public fun getTestTaskDescription ()Ljava/lang/String;
	public fun runTask (Lorg/gradle/api/Action;)V
	public fun webpackTask (Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinBrowserJsIr$Companion {
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinD8Ir : org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrSubTarget, org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmD8Dsl {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTarget;)V
	public fun configureDefaultTestFramework (Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinJsTest;)V
	public fun configureTestDependencies (Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinJsTest;Lorg/jetbrains/kotlin/gradle/targets/js/ir/JsIrBinary;)V
	public fun getTestTaskDescription ()Ljava/lang/String;
	public fun runTask (Lkotlin/jvm/functions/Function1;)V
	public fun runTask (Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinIrJsGeneratedTSValidationStrategy : java/lang/Enum {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinIrJsGeneratedTSValidationStrategy$Companion;
	public static final field ERROR Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinIrJsGeneratedTSValidationStrategy;
	public static final field IGNORE Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinIrJsGeneratedTSValidationStrategy;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinIrJsGeneratedTSValidationStrategy;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinIrJsGeneratedTSValidationStrategy;
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinIrJsGeneratedTSValidationStrategy$Companion {
	public final fun byArgument (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinIrJsGeneratedTSValidationStrategy;
}

public class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsBinaryContainer : org/gradle/api/DomainObjectSet {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsBinaryContainer$Companion;
	public fun <init> (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinTargetWithBinaries;Lorg/gradle/api/DomainObjectSet;)V
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun add (Lorg/jetbrains/kotlin/gradle/targets/js/ir/JsIrBinary;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun addAllLater (Lorg/gradle/api/provider/Provider;)V
	public fun addLater (Lorg/gradle/api/provider/Provider;)V
	public fun all (Lgroovy/lang/Closure;)V
	public fun all (Lorg/gradle/api/Action;)V
	public fun clear ()V
	public fun configureEach (Lorg/gradle/api/Action;)V
	public final fun contains (Ljava/lang/Object;)Z
	public fun contains (Lorg/jetbrains/kotlin/gradle/targets/js/ir/JsIrBinary;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public final fun executable ()Ljava/util/List;
	public final fun executable (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinJsCompilation;)Ljava/util/List;
	public final fun executable (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;)Ljava/util/List;
	public static synthetic fun executable$default (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsBinaryContainer;Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinJsCompilation;ILjava/lang/Object;)Ljava/util/List;
	public synthetic fun findAll (Lgroovy/lang/Closure;)Ljava/util/Collection;
	public fun findAll (Lgroovy/lang/Closure;)Ljava/util/Set;
	public final fun getProject ()Lorg/gradle/api/Project;
	public fun getSize ()I
	public final fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinTargetWithBinaries;
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public final fun library ()Ljava/util/List;
	public final fun library (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;)Ljava/util/List;
	public static synthetic fun library$default (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsBinaryContainer;Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;ILjava/lang/Object;)Ljava/util/List;
	public synthetic fun matching (Lgroovy/lang/Closure;)Lorg/gradle/api/DomainObjectCollection;
	public fun matching (Lgroovy/lang/Closure;)Lorg/gradle/api/DomainObjectSet;
	public synthetic fun matching (Lorg/gradle/api/specs/Spec;)Lorg/gradle/api/DomainObjectCollection;
	public fun matching (Lorg/gradle/api/specs/Spec;)Lorg/gradle/api/DomainObjectSet;
	public final fun remove (Ljava/lang/Object;)Z
	public fun remove (Lorg/jetbrains/kotlin/gradle/targets/js/ir/JsIrBinary;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public final fun size ()I
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
	public fun whenObjectAdded (Lgroovy/lang/Closure;)V
	public fun whenObjectAdded (Lorg/gradle/api/Action;)Lorg/gradle/api/Action;
	public fun whenObjectRemoved (Lgroovy/lang/Closure;)V
	public fun whenObjectRemoved (Lorg/gradle/api/Action;)Lorg/gradle/api/Action;
	public synthetic fun withType (Ljava/lang/Class;)Lorg/gradle/api/DomainObjectCollection;
	public fun withType (Ljava/lang/Class;)Lorg/gradle/api/DomainObjectSet;
	public fun withType (Ljava/lang/Class;Lgroovy/lang/Closure;)Lorg/gradle/api/DomainObjectCollection;
	public fun withType (Ljava/lang/Class;Lorg/gradle/api/Action;)Lorg/gradle/api/DomainObjectCollection;
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsBinaryContainer$Companion {
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsBinaryType : java/lang/Enum {
	public static final field EXECUTABLE Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsBinaryType;
	public static final field LIBRARY Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsBinaryType;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsBinaryType;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsBinaryType;
}

public class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinJsCompilation {
	public final fun getWasmTarget ()Lorg/jetbrains/kotlin/platform/wasm/WasmTarget;
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilationFactory : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinCompilationFactory {
	public synthetic fun create (Ljava/lang/String;)Ljava/lang/Object;
	public fun create (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;
	public fun defaultSourceSetName (Ljava/lang/String;)Ljava/lang/String;
	public fun getItemClass ()Ljava/lang/Class;
	public fun getProject ()Lorg/gradle/api/Project;
	public synthetic fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun getTarget ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTarget;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrLink : org/jetbrains/kotlin/gradle/tasks/Kotlin2JsCompile, org/jetbrains/kotlin/gradle/plugin/statistics/UsesBuildFusService {
	public fun <init> (Lorg/gradle/api/Project;Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;Lorg/gradle/api/model/ObjectFactory;Lorg/gradle/workers/WorkerExecutor;)V
	protected fun cleanOutputsAndLocalState (Ljava/lang/String;)V
	protected fun contributeAdditionalCompilerArguments (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$ContributeCompilerArgumentsContext;)V
	public final fun getIncrementalJsIr ()Z
	public final fun getIncrementalWasm ()Z
	public final fun getMode ()Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsBinaryMode;
	public final fun getOutputGranularity ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrOutputGranularity;
	public abstract fun getRootCacheDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public fun getSources ()Lorg/gradle/api/file/FileCollection;
	protected fun processArgsBeforeCompile (Lorg/jetbrains/kotlin/cli/common/arguments/K2JSCompilerArguments;)V
	public final fun setIncrementalJsIr (Z)V
	public final fun setIncrementalWasm (Z)V
	public final fun setMode (Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsBinaryMode;)V
	protected fun skipCondition ()Z
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrNpmBasedSubTarget : org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrSubTarget {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTarget;Ljava/lang/String;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrOutputGranularity : java/lang/Enum {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrOutputGranularity$Companion;
	public static final field PER_FILE Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrOutputGranularity;
	public static final field PER_MODULE Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrOutputGranularity;
	public static final field WHOLE_PROGRAM Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrOutputGranularity;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrOutputGranularity;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrOutputGranularity;
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrOutputGranularity$Companion {
	public final fun byArgument (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrOutputGranularity;
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrSingleTargetPreset : org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTargetPreset {
	public fun <init> (Lorg/gradle/api/Project;)V
	public synthetic fun createKotlinTargetConfigurator ()Lorg/jetbrains/kotlin/gradle/plugin/AbstractKotlinTargetConfigurator;
	public fun isMpp ()Z
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrSubTarget : org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsSubTargetDsl, org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrSubTargetWithBinary {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrSubTarget$Companion;
	public static final field DISTRIBUTION_TASK_NAME Ljava/lang/String;
	public static final field RUN_TASK_NAME Ljava/lang/String;
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTarget;Ljava/lang/String;)V
	public abstract fun configureDefaultTestFramework (Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinJsTest;)V
	public abstract fun configureTestDependencies (Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinJsTest;Lorg/jetbrains/kotlin/gradle/targets/js/ir/JsIrBinary;)V
	public fun distribution (Lorg/gradle/api/Action;)V
	public final fun getDisambiguationClassifier ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public final fun getProject ()Lorg/gradle/api/Project;
	public final fun getTarget ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTarget;
	public final fun getTestRuns ()Lorg/gradle/api/NamedDomainObjectContainer;
	public abstract fun getTestTaskDescription ()Ljava/lang/String;
	public fun processBinary ()V
	public fun testTask (Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrSubTarget$Companion {
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrSubTargetWithBinary : org/gradle/api/Named, org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsSubTargetDsl {
	public abstract fun processBinary ()V
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTarget : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinTargetWithBinaries, org/jetbrains/kotlin/gradle/plugin/KotlinTargetWithTests, org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsSubTargetContainerDsl, org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl, org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmJsTargetDsl, org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmSubTargetContainerDsl, org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmWasiTargetDsl {
	public fun <init> (Lorg/gradle/api/Project;Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;)V
	public fun applyBinaryen ()V
	public fun applyBinaryen (Lkotlin/jvm/functions/Function1;)V
	public fun applyBinaryen (Lorg/gradle/api/Action;)V
	public fun browser ()V
	public fun browser (Lkotlin/jvm/functions/Function1;)V
	public fun browser (Lorg/gradle/api/Action;)V
	public fun compilerOptions (Lkotlin/jvm/functions/Function1;)V
	public fun compilerOptions (Lorg/gradle/api/Action;)V
	protected fun createKotlinVariant (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;Ljava/util/Set;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinVariant;
	public fun d8 ()V
	public fun d8 (Lkotlin/jvm/functions/Function1;)V
	public fun d8 (Lorg/gradle/api/Action;)V
	public fun generateTypeScriptDefinitions ()V
	public synthetic fun getBinaries ()Lorg/gradle/api/DomainObjectSet;
	public fun getBinaries ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsBinaryContainer;
	public fun getBrowser ()Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsBrowserDsl;
	public synthetic fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions;
	public fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsCompilerOptions;
	public fun getD8 ()Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWasmD8Dsl;
	public fun getKotlinComponents ()Ljava/util/Set;
	public fun getModuleName ()Ljava/lang/String;
	public fun getNodejs ()Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsNodeDsl;
	public fun getSubTargets ()Lorg/gradle/api/NamedDomainObjectContainer;
	public fun getTestRuns ()Lorg/gradle/api/NamedDomainObjectContainer;
	public fun getWasmTargetType ()Lorg/jetbrains/kotlin/gradle/targets/js/KotlinWasmTargetType;
	public fun isBrowserConfigured ()Z
	public fun isD8Configured ()Z
	public fun isMpp ()Ljava/lang/Boolean;
	public fun isNodejsConfigured ()Z
	public fun nodejs ()V
	public fun nodejs (Lkotlin/jvm/functions/Function1;)V
	public fun nodejs (Lorg/gradle/api/Action;)V
	public fun passAsArgumentToMainFunction (Ljava/lang/String;)V
	public fun produceExecutable ()V
	public fun setModuleName (Ljava/lang/String;)V
	public fun useCommonJs ()V
	public fun useEsModules ()V
	public fun whenBrowserConfigured (Lkotlin/jvm/functions/Function1;)V
	public fun whenD8Configured (Lkotlin/jvm/functions/Function1;)V
	public fun whenNodejsConfigured (Lkotlin/jvm/functions/Function1;)V
}

public class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTargetConfigurator : org/jetbrains/kotlin/gradle/plugin/KotlinOnlyTargetConfigurator {
	public fun <init> ()V
	public synthetic fun configureTarget (Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;)V
	public fun configureTarget (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTarget;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTargetKt {
	public static final fun wasmDecamelizedDefaultNameOrNull (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTarget;)Ljava/lang/String;
}

public class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTargetPreset : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTargetPreset {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTargetPreset$Companion;
	public fun <init> (Lorg/gradle/api/Project;)V
	public synthetic fun createCompilationFactory (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTarget;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinCompilationFactory;
	public fun createCompilationFactory (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTarget;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinCompilationFactory;
	protected fun createKotlinTargetConfigurator ()Lorg/jetbrains/kotlin/gradle/plugin/AbstractKotlinTargetConfigurator;
	public fun getName ()Ljava/lang/String;
	protected fun getPlatformType ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;
	public synthetic fun instantiateTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTarget;
	protected fun instantiateTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTarget;
	public fun isMpp ()Z
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTargetPreset$Companion {
	public final fun getJS_PRESET_NAME ()Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinNodeJsIr : org/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrNpmBasedSubTarget, org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsNodeDsl {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTarget;)V
	public fun configureDefaultTestFramework (Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinJsTest;)V
	public fun configureTestDependencies (Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinJsTest;Lorg/jetbrains/kotlin/gradle/targets/js/ir/JsIrBinary;)V
	public fun getTestTaskDescription ()Ljava/lang/String;
	public fun passProcessArgvToMainFunction ()V
	public fun runTask (Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinWasmTargetPreset : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTargetPreset {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinWasmTargetPreset$Companion;
	public fun <init> (Lorg/gradle/api/Project;Lorg/jetbrains/kotlin/gradle/targets/js/KotlinWasmTargetType;)V
	public synthetic fun createCompilationFactory (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTarget;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinCompilationFactory;
	public fun createCompilationFactory (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTarget;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinCompilationFactory;
	public fun getName ()Ljava/lang/String;
	public synthetic fun instantiateTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTarget;
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/KotlinWasmTargetPreset$Companion {
}

public class org/jetbrains/kotlin/gradle/targets/js/ir/Library : org/jetbrains/kotlin/gradle/targets/js/ir/JsIrBinary {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsBinaryMode;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/LibraryConfigurator : org/jetbrains/kotlin/gradle/targets/js/ir/SubTargetConfigurator {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrSubTarget;)V
	public fun configureBuild (Lorg/gradle/api/Action;)V
	public fun configureRun (Lorg/gradle/api/Action;)V
	public fun setupBuild (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;)V
	public fun setupRun (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/LibraryWasm : org/jetbrains/kotlin/gradle/targets/js/ir/JsIrBinary, org/jetbrains/kotlin/gradle/targets/js/ir/WasmBinary {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsBinaryMode;)V
	public fun getOptimizeTask ()Lorg/gradle/api/tasks/TaskProvider;
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/NodeJsEnvironmentConfigurator : org/jetbrains/kotlin/gradle/targets/js/ir/JsEnvironmentConfigurator {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrSubTarget;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/OutputGranularityKt {
	public static final fun toCompilerArgument (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrOutputGranularity;)Ljava/lang/String;
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/ir/WasmBinary {
	public abstract fun getCompilation ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;
	public abstract fun getLinkTask ()Lorg/gradle/api/tasks/TaskProvider;
	public abstract fun getMode ()Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsBinaryMode;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getOptimizeTask ()Lorg/gradle/api/tasks/TaskProvider;
	public abstract fun getOutputDirBase ()Lorg/gradle/api/provider/Provider;
}

public final class org/jetbrains/kotlin/gradle/targets/js/ir/WebpackConfigurator : org/jetbrains/kotlin/gradle/targets/js/ir/SubTargetConfigurator {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrSubTarget;)V
	public fun configureBuild (Lorg/gradle/api/Action;)V
	public fun configureRun (Lorg/gradle/api/Action;)V
	public fun setupBuild (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;)V
	public fun setupRun (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsEnv : org/jetbrains/kotlin/gradle/targets/js/AbstractEnv {
	public fun <init> (ZLorg/jetbrains/kotlin/gradle/tasks/internal/CleanableStore;Ljava/io/File;Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
	public final fun component1 ()Z
	public final fun component10 ()Z
	public final fun component2 ()Lorg/jetbrains/kotlin/gradle/tasks/internal/CleanableStore;
	public final fun component3 ()Ljava/io/File;
	public final fun component4 ()Ljava/io/File;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ljava/lang/String;
	public final fun component8 ()Ljava/lang/String;
	public final fun component9 ()Ljava/lang/String;
	public final fun copy (ZLorg/jetbrains/kotlin/gradle/tasks/internal/CleanableStore;Ljava/io/File;Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsEnv;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsEnv;ZLorg/jetbrains/kotlin/gradle/tasks/internal/CleanableStore;Ljava/io/File;Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsEnv;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAllowInsecureProtocol ()Z
	public final fun getArchitectureName ()Ljava/lang/String;
	public fun getCleanableStore ()Lorg/jetbrains/kotlin/gradle/tasks/internal/CleanableStore;
	public fun getDir ()Ljava/io/File;
	public fun getDownload ()Z
	public fun getDownloadBaseUrl ()Ljava/lang/String;
	public fun getExecutable ()Ljava/lang/String;
	public fun getIvyDependency ()Ljava/lang/String;
	public final fun getNodeBinDir ()Ljava/io/File;
	public final fun getNodeExecutable ()Ljava/lang/String;
	public final fun getPlatformName ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isWindows ()Z
	public fun toString ()Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsEnvSpec : org/jetbrains/kotlin/gradle/targets/js/EnvSpec {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsEnvSpec$Companion;
	public static final field EXTENSION_NAME Ljava/lang/String;
	public fun <init> ()V
	public fun getExecutable ()Lorg/gradle/api/provider/Provider;
	public final fun getNodeJsSetupTaskProvider (Lorg/gradle/api/Project;)Lorg/gradle/api/tasks/TaskProvider;
	protected final fun produceEnv ()Lorg/gradle/api/provider/Provider;
}

public final class org/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsEnvSpec$Companion {
}

public class org/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsExec : org/gradle/api/tasks/AbstractExecTask, org/jetbrains/kotlin/gradle/targets/js/npm/RequiresNpmDependencies {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsExec$Companion;
	public field nodeJsRoot Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsRootExtension;
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;)V
	protected fun exec ()V
	public final fun getCompilation ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;
	public final fun getInputFileProperty ()Lorg/gradle/api/file/RegularFileProperty;
	public final fun getNodeArgs ()Ljava/util/List;
	public final fun getNodeJsRoot ()Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsRootExtension;
	public final fun getNpmProject ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmProject;
	public fun getRequiredNpmDependencies ()Ljava/util/Set;
	public final fun getSourceMapStackTraces ()Z
	public final fun setNodeArgs (Ljava/util/List;)V
	public final fun setNodeJsRoot (Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsRootExtension;)V
	public final fun setSourceMapStackTraces (Z)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsExec$Companion {
	public final synthetic fun create (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinJsCompilation;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/tasks/TaskProvider;
	public final fun create (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/tasks/TaskProvider;
	public static synthetic fun create$default (Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsExec$Companion;Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinJsCompilation;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/tasks/TaskProvider;
	public static synthetic fun create$default (Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsExec$Companion;Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/tasks/TaskProvider;
	public final fun register (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/tasks/TaskProvider;
	public static synthetic fun register$default (Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsExec$Companion;Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/gradle/api/tasks/TaskProvider;
}

public class org/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsPlugin : org/gradle/api/Plugin {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsPlugin$Companion;
	public static final field TASKS_GROUP_NAME Ljava/lang/String;
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsPlugin$Companion {
	public final fun apply (Lorg/gradle/api/Project;)Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsEnvSpec;
	public final fun getKotlinNodeJsEnvSpec (Lorg/gradle/api/Project;)Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsEnvSpec;
}

public class org/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsRootExtension {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsRootExtension$Companion;
	public static final field EXTENSION_NAME Ljava/lang/String;
	public field resolver Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinRootNpmResolver;
	public fun <init> (Lorg/gradle/api/Project;Lkotlin/jvm/functions/Function0;)V
	public final fun getCommand ()Ljava/lang/String;
	public final fun getDownload ()Z
	public final fun getDownloadBaseUrl ()Ljava/lang/String;
	public final fun getInstallationDir ()Ljava/io/File;
	public final fun getNodeCommand ()Ljava/lang/String;
	public final fun getNodeDownloadBaseUrl ()Ljava/lang/String;
	public final fun getNodeJsSetupTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public final fun getNodeModulesGradleCacheDirectory ()Lorg/gradle/api/provider/Provider;
	public final fun getNodeVersion ()Ljava/lang/String;
	public final fun getNpmCachesSetupTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public final fun getNpmInstallTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public final fun getPackageJsonUmbrellaTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public final fun getPackageManagerExtension ()Lorg/gradle/api/provider/Property;
	public final fun getProject ()Lorg/gradle/api/Project;
	public final fun getProjectPackagesDirectory ()Lorg/gradle/api/provider/Provider;
	public final fun getResolver ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinRootNpmResolver;
	public final fun getRootPackageDirectory ()Lorg/gradle/api/provider/Provider;
	public final fun getRootPackageJsonTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public final fun getRootProjectDir ()Ljava/io/File;
	public final fun getTaskRequirements ()Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/TasksRequirements;
	public final fun getVersion ()Ljava/lang/String;
	public final fun getVersions ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmVersions;
	public final fun requireConfigured ()Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsEnv;
	public final fun setCommand (Ljava/lang/String;)V
	public final fun setDownload (Z)V
	public final fun setDownloadBaseUrl (Ljava/lang/String;)V
	public final fun setInstallationDir (Ljava/io/File;)V
	public final fun setNodeCommand (Ljava/lang/String;)V
	public final fun setNodeDownloadBaseUrl (Ljava/lang/String;)V
	public final fun setNodeVersion (Ljava/lang/String;)V
	public final fun setResolver (Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinRootNpmResolver;)V
	public final fun setVersion (Ljava/lang/String;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsRootExtension$Companion {
}

public class org/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsRootPlugin : org/gradle/api/Plugin {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsRootPlugin$Companion;
	public static final field TASKS_GROUP_NAME Ljava/lang/String;
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsRootPlugin$Companion {
	public final fun apply (Lorg/gradle/api/Project;)Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsRootExtension;
	public final fun getKotlinNodeJsRootExtension (Lorg/gradle/api/Project;)Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsRootExtension;
	public final fun getKotlinNpmResolutionManager (Lorg/gradle/api/Project;)Lorg/gradle/api/provider/Provider;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsSetupTask : org/jetbrains/kotlin/gradle/targets/js/AbstractSetupTask {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsSetupTask$Companion;
	public static final field NAME Ljava/lang/String;
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsEnvSpec;)V
	public fun extract (Ljava/io/File;)V
	protected fun getArtifactModule ()Ljava/lang/String;
	protected fun getArtifactName ()Ljava/lang/String;
	protected fun getArtifactPattern ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsSetupTask$Companion {
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/nodejs/NpmApiExtension {
	public abstract fun getAdditionalInstallOutput ()Lorg/gradle/api/file/FileCollection;
	public abstract fun getEnvironment ()Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/PackageManagerEnvironment;
	public abstract fun getPackageManager ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmApiExecution;
	public abstract fun getPostInstallTasks ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getPreInstallTasks ()Lorg/gradle/api/provider/ListProperty;
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/nodejs/PackageManagerEnvironment : java/io/Serializable {
}

public final class org/jetbrains/kotlin/gradle/targets/js/nodejs/TasksRequirements : java/io/Serializable {
	public fun <init> ()V
	public final fun addTaskRequirements (Lorg/jetbrains/kotlin/gradle/targets/js/npm/RequiresNpmDependencies;)V
	public final fun getByTask ()Ljava/util/Map;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/npm/AbstractNodeModulesCache : java/lang/AutoCloseable, org/gradle/api/services/BuildService {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/npm/AbstractNodeModulesCache$Companion;
	public static final field STATE_FILE_NAME Ljava/lang/String;
	public field fileHasher Lorg/gradle/internal/hash/FileHasher;
	public fun <init> ()V
	public abstract fun buildImportedPackage (Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
	public fun close ()V
	public final fun get (Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/GradleNodeModule;
	public final fun getFileHasher ()Lorg/gradle/internal/hash/FileHasher;
	public abstract fun getType ()Ljava/lang/String;
	public final fun setFileHasher (Lorg/gradle/internal/hash/FileHasher;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/AbstractNodeModulesCache$Companion {
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/npm/AbstractNodeModulesCache$Parameters : org/gradle/api/services/BuildServiceParameters {
	public abstract fun getCacheDir ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getRootProjectDir ()Lorg/gradle/api/file/DirectoryProperty;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/AbstractNodeModulesCacheKt {
	public static final fun GradleNodeModule (Ljava/io/File;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/GradleNodeModule;
	public static final fun importedPackageDir (Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
	public static final fun makeNodeModule (Ljava/io/File;Lorg/jetbrains/kotlin/gradle/targets/js/npm/PackageJson;Lkotlin/jvm/functions/Function1;)Ljava/io/File;
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/npm/BaseNpmDependencyExtension {
	public abstract fun invoke (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency;
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/npm/DevNpmDependencyExtension : org/jetbrains/kotlin/gradle/targets/js/npm/BaseNpmDependencyExtension, org/jetbrains/kotlin/gradle/targets/js/npm/NpmDirectoryDependencyExtension {
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/GradleNodeModule : java/io/Serializable {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/io/File;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/GradleNodeModule;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/npm/GradleNodeModule;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/GradleNodeModule;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDependencies ()Ljava/util/Set;
	public final fun getName ()Ljava/lang/String;
	public final fun getPath ()Ljava/io/File;
	public final fun getSemver ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;
	public final fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/npm/GradleNodeModulesCache : org/jetbrains/kotlin/gradle/targets/js/npm/AbstractNodeModulesCache {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/npm/GradleNodeModulesCache$Companion;
	public fun <init> ()V
	public fun buildImportedPackage (Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
	public abstract fun getArchiveOperations ()Lorg/gradle/api/file/ArchiveOperations;
	public abstract fun getFs ()Lorg/gradle/api/file/FileSystemOperations;
	public fun getType ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/GradleNodeModulesCache$Companion {
	public final fun registerIfAbsent (Lorg/gradle/api/Project;Ljava/io/File;Lorg/gradle/api/provider/Provider;)Lorg/gradle/api/provider/Provider;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/npm/KotlinNpmResolutionManager : org/gradle/api/services/BuildService {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/npm/KotlinNpmResolutionManager$Companion;
	public fun <init> ()V
	public final fun getPackagesDir ()Lorg/gradle/api/file/DirectoryProperty;
	public final fun getResolution ()Lorg/gradle/api/provider/Property;
	public final fun getState ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/KotlinNpmResolutionManager$ResolutionState;
	public final fun setState (Lorg/jetbrains/kotlin/gradle/targets/js/npm/KotlinNpmResolutionManager$ResolutionState;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/KotlinNpmResolutionManager$Companion {
	public final fun registerIfAbsent (Lorg/gradle/api/Project;Lorg/gradle/api/provider/Provider;Lorg/gradle/api/provider/Provider;Lorg/gradle/api/provider/Provider;)Lorg/gradle/api/provider/Provider;
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/npm/KotlinNpmResolutionManager$Parameters : org/gradle/api/services/BuildServiceParameters {
	public abstract fun getGradleNodeModulesProvider ()Lorg/gradle/api/provider/Property;
	public abstract fun getPackagesDir ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getResolution ()Lorg/gradle/api/provider/Property;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/npm/KotlinNpmResolutionManager$ResolutionState {
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/KotlinNpmResolutionManager$ResolutionState$Configuring : org/jetbrains/kotlin/gradle/targets/js/npm/KotlinNpmResolutionManager$ResolutionState {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolved/KotlinRootNpmResolution;)V
	public final fun getResolution ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolved/KotlinRootNpmResolution;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/KotlinNpmResolutionManager$ResolutionState$Error : org/jetbrains/kotlin/gradle/targets/js/npm/KotlinNpmResolutionManager$ResolutionState {
	public fun <init> (Ljava/lang/Throwable;)V
	public final fun getWrappedException ()Ljava/lang/Throwable;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/KotlinNpmResolutionManager$ResolutionState$Installed : org/jetbrains/kotlin/gradle/targets/js/npm/KotlinNpmResolutionManager$ResolutionState {
	public fun <init> ()V
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/KotlinNpmResolutionManager$ResolutionState$Prepared : org/jetbrains/kotlin/gradle/targets/js/npm/KotlinNpmResolutionManager$ResolutionState {
	public fun <init> ()V
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/npm/LockCopyTask : org/gradle/api/DefaultTask {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/npm/LockCopyTask$Companion;
	public static final field KOTLIN_JS_STORE Ljava/lang/String;
	public static final field PACKAGE_LOCK Ljava/lang/String;
	public static final field PACKAGE_LOCK_MISMATCH_MESSAGE Ljava/lang/String;
	public static final field RESTORE_PACKAGE_LOCK_NAME Ljava/lang/String;
	public static final field STORE_PACKAGE_LOCK_NAME Ljava/lang/String;
	public static final field UPGRADE_PACKAGE_LOCK Ljava/lang/String;
	public static final field YARN_LOCK Ljava/lang/String;
	public fun <init> ()V
	public fun copy ()V
	public final fun getAdditionalInputFiles ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getFileName ()Lorg/gradle/api/provider/Property;
	public abstract fun getFs ()Lorg/gradle/api/file/FileSystemOperations;
	public abstract fun getInputFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getOutputDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public final fun getOutputFile ()Lorg/gradle/api/provider/Provider;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/LockCopyTask$Companion {
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/LockFileMismatchReport : java/lang/Enum {
	public static final field FAIL Lorg/jetbrains/kotlin/gradle/targets/js/npm/LockFileMismatchReport;
	public static final field NONE Lorg/jetbrains/kotlin/gradle/targets/js/npm/LockFileMismatchReport;
	public static final field WARNING Lorg/jetbrains/kotlin/gradle/targets/js/npm/LockFileMismatchReport;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/LockFileMismatchReport;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/targets/js/npm/LockFileMismatchReport;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/npm/LockStoreTask : org/jetbrains/kotlin/gradle/targets/js/npm/LockCopyTask {
	public fun <init> ()V
	public fun copy ()V
	public abstract fun getLockFileAutoReplace ()Lorg/gradle/api/provider/Property;
	public abstract fun getLockFileMismatchReport ()Lorg/gradle/api/provider/Property;
	public abstract fun getReportNewLockFile ()Lorg/gradle/api/provider/Property;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment : java/io/Serializable {
	public fun <init> (Lorg/gradle/api/provider/Provider;Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmApiExecution;)V
	public final fun component1 ()Lorg/gradle/api/provider/Provider;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmApiExecution;
	public final fun copy (Lorg/gradle/api/provider/Provider;Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmApiExecution;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;Lorg/gradle/api/provider/Provider;Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmApiExecution;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getNodeExecutable ()Ljava/lang/String;
	public final fun getPackageManager ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmApiExecution;
	public final fun getRootPackageDir ()Lorg/gradle/api/provider/Provider;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/Npm : org/jetbrains/kotlin/gradle/targets/js/npm/NpmApiExecution {
	public fun <init> ()V
	public final fun npmExec (Lorg/gradle/internal/service/ServiceRegistry;Lorg/gradle/api/logging/Logger;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmEnvironment;Ljava/io/File;Ljava/lang/String;Ljava/util/List;)V
	public synthetic fun prepareRootProject (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/PackageManagerEnvironment;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V
	public fun prepareRootProject (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmEnvironment;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V
	public fun preparedFiles (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;)Ljava/util/Collection;
	public synthetic fun resolveRootProject (Lorg/gradle/internal/service/ServiceRegistry;Lorg/gradle/api/logging/Logger;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/PackageManagerEnvironment;Ljava/util/List;)V
	public fun resolveRootProject (Lorg/gradle/internal/service/ServiceRegistry;Lorg/gradle/api/logging/Logger;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmEnvironment;Ljava/util/List;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/npm/NpmApiExecution : java/io/Serializable {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmApiExecution$Companion;
	public abstract fun prepareRootProject (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/PackageManagerEnvironment;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V
	public abstract fun preparedFiles (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;)Ljava/util/Collection;
	public abstract fun resolveRootProject (Lorg/gradle/internal/service/ServiceRegistry;Lorg/gradle/api/logging/Logger;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/PackageManagerEnvironment;Ljava/util/List;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmApiExecution$Companion {
	public final fun resolveOperationDescription (Ljava/lang/String;)Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency : org/gradle/api/artifacts/FileCollectionDependency, org/gradle/api/internal/artifacts/dependencies/SelfResolvingDependencyInternal {
	public fun <init> (Lorg/gradle/api/model/ObjectFactory;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency$Scope;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Lorg/gradle/api/model/ObjectFactory;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency$Scope;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun because (Ljava/lang/String;)V
	public final fun component1 ()Lorg/gradle/api/model/ObjectFactory;
	public final fun component2 ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency$Scope;
	public fun contentEquals (Lorg/gradle/api/artifacts/Dependency;)Z
	public fun copy ()Lorg/gradle/api/artifacts/Dependency;
	public final fun copy (Lorg/gradle/api/model/ObjectFactory;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency$Scope;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency;Lorg/gradle/api/model/ObjectFactory;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency$Scope;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency;
	public fun equals (Ljava/lang/Object;)Z
	public fun getBuildDependencies ()Lorg/gradle/api/tasks/TaskDependency;
	public fun getFiles ()Lorg/gradle/api/file/FileCollection;
	public fun getGroup ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public final fun getObjectFactory ()Lorg/gradle/api/model/ObjectFactory;
	public fun getReason ()Ljava/lang/String;
	public final fun getScope ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency$Scope;
	public fun getTargetComponentId ()Lorg/gradle/api/artifacts/component/ComponentIdentifier;
	public fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public fun resolve ()Ljava/util/Set;
	public fun resolve (Z)Ljava/util/Set;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency$Scope : java/lang/Enum {
	public static final field DEV Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency$Scope;
	public static final field NORMAL Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency$Scope;
	public static final field OPTIONAL Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency$Scope;
	public static final field PEER Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency$Scope;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency$Scope;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency$Scope;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmDependencyDeclaration : java/io/Serializable {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency$Scope;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency$Scope;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency$Scope;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependencyDeclaration;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependencyDeclaration;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency$Scope;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependencyDeclaration;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public final fun getScope ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency$Scope;
	public final fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmDependencyDeclarationKt {
	public static final fun uniqueRepresentation (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependencyDeclaration;)Ljava/lang/String;
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/npm/NpmDependencyExtension : org/jetbrains/kotlin/gradle/targets/js/npm/BaseNpmDependencyExtension, org/jetbrains/kotlin/gradle/targets/js/npm/NpmDependencyWithExternalsExtension, org/jetbrains/kotlin/gradle/targets/js/npm/NpmDirectoryDependencyExtension, org/jetbrains/kotlin/gradle/targets/js/npm/NpmDirectoryDependencyWithExternalsExtension {
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmDependencyKt {
	public static final field FILE_VERSION_PREFIX Ljava/lang/String;
	public static final fun isFileVersion (Ljava/lang/String;)Z
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/npm/NpmDependencyWithExternalsExtension : org/jetbrains/kotlin/gradle/targets/js/npm/BaseNpmDependencyExtension {
	public abstract fun invoke (Ljava/lang/String;Ljava/lang/String;Z)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency;
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/npm/NpmDirectoryDependencyExtension : org/jetbrains/kotlin/gradle/targets/js/npm/BaseNpmDependencyExtension {
	public abstract fun invoke (Ljava/io/File;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency;
	public abstract fun invoke (Ljava/lang/String;Ljava/io/File;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency;
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/npm/NpmDirectoryDependencyWithExternalsExtension : org/jetbrains/kotlin/gradle/targets/js/npm/NpmDirectoryDependencyExtension {
	public abstract fun invoke (Ljava/io/File;Z)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency;
	public abstract fun invoke (Ljava/lang/String;Ljava/io/File;Z)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmDependency;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmEnv {
	public fun <init> (Ljava/lang/String;ZZLorg/jetbrains/kotlin/gradle/targets/js/npm/LockFileMismatchReport;ZZLjava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/LockFileMismatchReport;
	public final fun component5 ()Z
	public final fun component6 ()Z
	public final fun component7 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;ZZLorg/jetbrains/kotlin/gradle/targets/js/npm/LockFileMismatchReport;ZZLjava/util/List;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmEnv;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmEnv;Ljava/lang/String;ZZLorg/jetbrains/kotlin/gradle/targets/js/npm/LockFileMismatchReport;ZZLjava/util/List;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmEnv;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExecutable ()Ljava/lang/String;
	public final fun getIgnoreScripts ()Z
	public final fun getOverrides ()Ljava/util/List;
	public final fun getPackageLockAutoReplace ()Z
	public final fun getPackageLockMismatchReport ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/LockFileMismatchReport;
	public final fun getReportNewPackageLock ()Z
	public final fun getStandalone ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmEnvironment : org/jetbrains/kotlin/gradle/targets/js/nodejs/PackageManagerEnvironment {
	public fun <init> (Ljava/lang/String;ZZLjava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;ZZLjava/util/List;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmEnvironment;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmEnvironment;Ljava/lang/String;ZZLjava/util/List;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmEnvironment;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExecutable ()Ljava/lang/String;
	public final fun getIgnoreScripts ()Z
	public final fun getOverrides ()Ljava/util/List;
	public final fun getStandalone ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public class org/jetbrains/kotlin/gradle/targets/js/npm/NpmExtension : org/jetbrains/kotlin/gradle/internal/ConfigurationPhaseAware, org/jetbrains/kotlin/gradle/targets/js/nodejs/NpmApiExtension {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmExtension$Companion;
	public static final field EXTENSION_NAME Ljava/lang/String;
	public fun <init> (Lorg/gradle/api/Project;Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsRootExtension;)V
	public synthetic fun finalizeConfiguration ()Ljava/lang/Object;
	protected fun finalizeConfiguration ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmEnv;
	public fun getAdditionalInstallOutput ()Lorg/gradle/api/file/FileCollection;
	public final fun getCommand ()Lorg/gradle/api/provider/Property;
	public synthetic fun getEnvironment ()Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/PackageManagerEnvironment;
	public fun getEnvironment ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmEnvironment;
	public final fun getIgnoreScripts ()Lorg/gradle/api/provider/Property;
	public final fun getLockFileDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public final fun getLockFileName ()Lorg/gradle/api/provider/Property;
	public final fun getNodeJsRoot ()Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsRootExtension;
	public final fun getOverrides ()Lorg/gradle/api/provider/ListProperty;
	public final fun getPackageLockAutoReplace ()Lorg/gradle/api/provider/Property;
	public final fun getPackageLockMismatchReport ()Lorg/gradle/api/provider/Property;
	public fun getPackageManager ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/Npm;
	public synthetic fun getPackageManager ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmApiExecution;
	public fun getPostInstallTasks ()Lorg/gradle/api/provider/ListProperty;
	public fun getPreInstallTasks ()Lorg/gradle/api/provider/ListProperty;
	public final fun getProject ()Lorg/gradle/api/Project;
	public final fun getReportNewPackageLock ()Lorg/gradle/api/provider/Property;
	public final fun getRestorePackageLockTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public final fun getStorePackageLockTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public final fun override (Ljava/lang/String;Ljava/lang/String;)V
	public final fun override (Ljava/lang/String;Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmExtension$Companion {
	public final fun get (Lorg/gradle/api/Project;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmExtension;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmImportedPackagesVersionResolver {
	public fun <init> (Ljava/util/Collection;Ljava/io/File;)V
	public final fun resolveAndUpdatePackages ()Ljava/util/List;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmOverride : java/io/Serializable {
	public fun <init> (Ljava/lang/String;)V
	public final fun exclude ([Ljava/lang/String;)V
	public final fun getExcludedVersions ()Ljava/util/List;
	public final fun getIncludedVersions ()Ljava/util/List;
	public final fun getPath ()Ljava/lang/String;
	public final fun include ([Ljava/lang/String;)V
	public final fun setExcludedVersions (Ljava/util/List;)V
	public final fun setIncludedVersions (Ljava/util/List;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmOverrideKt {
	public static final fun toVersionString (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmOverride;)Ljava/lang/String;
}

public class org/jetbrains/kotlin/gradle/targets/js/npm/NpmProject : java/io/Serializable {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmProject$Companion;
	public static final field DIST_FOLDER Ljava/lang/String;
	public static final field NODE_MODULES Ljava/lang/String;
	public static final field PACKAGE_JSON Ljava/lang/String;
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;)V
	public final fun getCompilation ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;
	public final fun getCompilationName ()Ljava/lang/String;
	public final fun getDir ()Lorg/gradle/api/provider/Provider;
	public final fun getDist ()Lorg/gradle/api/provider/Provider;
	public final fun getMain ()Lorg/gradle/api/provider/Provider;
	public final fun getName ()Lorg/gradle/api/provider/Provider;
	public final fun getNodeJs ()Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsEnvSpec;
	public final fun getNodeJsRoot ()Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsRootExtension;
	public final fun getNodeModulesDir ()Lorg/gradle/api/provider/Provider;
	public final fun getPackageJsonFile ()Lorg/gradle/api/provider/Provider;
	public final fun getPackageJsonTask ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/tasks/KotlinPackageJsonTask;
	public final fun getPackageJsonTaskName ()Ljava/lang/String;
	public final fun getPackageJsonTaskPath ()Ljava/lang/String;
	public final fun getProject ()Lorg/gradle/api/Project;
	public final fun getPublicPackageJsonTaskName ()Ljava/lang/String;
	public final fun getTarget ()Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsTargetDsl;
	public final fun require (Ljava/lang/String;)Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun useTool (Lorg/gradle/process/ExecSpec;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V
	public static synthetic fun useTool$default (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmProject;Lorg/gradle/process/ExecSpec;Ljava/lang/String;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmProject$Companion {
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmProjectKt {
	public static final fun getNpmProject (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinJsCompilation;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmProject;
	public static final fun getNpmProject (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmProject;
}

public class org/jetbrains/kotlin/gradle/targets/js/npm/NpmProjectModules : java/io/Serializable {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmProjectModules$Companion;
	public static final field INDEX_FILE_NAME Ljava/lang/String;
	public static final field JS_SUFFIX Ljava/lang/String;
	public fun <init> (Ljava/io/File;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;)V
	public synthetic fun <init> (Ljava/io/File;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun copy (Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmProjectModules;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmProjectModules;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmProjectModules;
	public final fun getDir ()Ljava/io/File;
	public final fun getIndexFileNames ()Ljava/util/Collection;
	public final fun getIndexFileSuffixes ()Ljava/util/Collection;
	public final fun getPackageJsonEntries ()Ljava/util/Collection;
	public final fun require (Ljava/lang/String;)Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmProjectModules$Companion {
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmRange {
	public fun <init> ()V
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;ZLorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;Z)V
	public synthetic fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;ZLorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;
	public final fun component2 ()Z
	public final fun component3 ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;
	public final fun component4 ()Z
	public final fun copy (Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;ZLorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;Z)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;ZLorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;ZILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEndInclusive ()Z
	public final fun getEndVersion ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;
	public final fun getStartInclusive ()Z
	public final fun getStartVersion ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmRangeKt {
	public static final fun hasIntersection (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;)Z
	public static final fun intersect (Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;
	public static final fun intersect (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;
	public static final fun invert (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;)Ljava/util/Set;
	public static final fun maxEnd (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;
	public static final fun maxStart (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;
	public static final fun minEnd (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;
	public static final fun minStart (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;
	public static final fun union (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;)Ljava/util/Set;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmRangeVisitor : com/github/gundy/semver4j/generated/grammar/NodeSemverExpressionBaseVisitor {
	public static final field AND Ljava/lang/String;
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRangeVisitor$Companion;
	public static final field EQ Ljava/lang/String;
	public static final field GT Ljava/lang/String;
	public static final field GTEQ Ljava/lang/String;
	public static final field LT Ljava/lang/String;
	public static final field LTEQ Ljava/lang/String;
	public static final field OR Ljava/lang/String;
	public static final field WILDCARD Ljava/lang/String;
	public fun <init> ()V
	public synthetic fun visitCaretRange (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$CaretRangeContext;)Ljava/lang/Object;
	public fun visitCaretRange (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$CaretRangeContext;)Ljava/util/Set;
	public synthetic fun visitEmptyRange (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$EmptyRangeContext;)Ljava/lang/Object;
	public fun visitEmptyRange (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$EmptyRangeContext;)Ljava/util/Set;
	public synthetic fun visitFullSemver (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$FullSemverContext;)Ljava/lang/Object;
	public fun visitFullSemver (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$FullSemverContext;)Ljava/util/Set;
	public synthetic fun visitFullySpecifiedSemver (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$FullySpecifiedSemverContext;)Ljava/lang/Object;
	public fun visitFullySpecifiedSemver (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$FullySpecifiedSemverContext;)Ljava/util/Set;
	public synthetic fun visitHyphenatedRangeOfFullySpecifiedVersions (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$HyphenatedRangeOfFullySpecifiedVersionsContext;)Ljava/lang/Object;
	public fun visitHyphenatedRangeOfFullySpecifiedVersions (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$HyphenatedRangeOfFullySpecifiedVersionsContext;)Ljava/util/Set;
	public synthetic fun visitLogicalAndOfSimpleExpressions (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$LogicalAndOfSimpleExpressionsContext;)Ljava/lang/Object;
	public fun visitLogicalAndOfSimpleExpressions (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$LogicalAndOfSimpleExpressionsContext;)Ljava/util/Set;
	public synthetic fun visitLogicalOrOfMultipleRanges (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$LogicalOrOfMultipleRangesContext;)Ljava/lang/Object;
	public fun visitLogicalOrOfMultipleRanges (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$LogicalOrOfMultipleRangesContext;)Ljava/util/Set;
	public synthetic fun visitOperator (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$OperatorContext;)Ljava/lang/Object;
	public fun visitOperator (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$OperatorContext;)Ljava/util/Set;
	public synthetic fun visitTildeRange (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$TildeRangeContext;)Ljava/lang/Object;
	public fun visitTildeRange (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$TildeRangeContext;)Ljava/util/Set;
	public synthetic fun visitWildcard (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$WildcardContext;)Ljava/lang/Object;
	public fun visitWildcard (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$WildcardContext;)Ljava/util/Set;
	public synthetic fun visitWildcardOperator (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$WildcardOperatorContext;)Ljava/lang/Object;
	public fun visitWildcardOperator (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$WildcardOperatorContext;)Ljava/util/Set;
	public synthetic fun visitWildcardRange (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$WildcardRangeContext;)Ljava/lang/Object;
	public fun visitWildcardRange (Lcom/github/gundy/semver4j/generated/grammar/NodeSemverExpressionParser$WildcardRangeContext;)Ljava/util/Set;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmRangeVisitor$Companion {
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmResolverPlugin : org/gradle/api/Plugin {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmResolverPlugin$Companion;
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmResolverPlugin$Companion {
	public final fun apply (Lorg/gradle/api/Project;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/NpmVersionsKt {
	public static final fun buildNpmVersion (Ljava/util/List;Ljava/util/List;Z)Ljava/lang/String;
	public static synthetic fun buildNpmVersion$default (Ljava/util/List;Ljava/util/List;ZILjava/lang/Object;)Ljava/lang/String;
	public static final fun includedRange (Ljava/lang/String;Z)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;
	public static final fun includedRange (Ljava/util/List;Z)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;
	public static synthetic fun includedRange$default (Ljava/lang/String;ZILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;
	public static synthetic fun includedRange$default (Ljava/util/List;ZILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmRange;
	public static final fun versionToNpmRanges (Ljava/lang/String;)Ljava/util/Set;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/PackageJson : java/io/Serializable {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/npm/PackageJson$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun customField (Ljava/lang/String;Ljava/lang/Number;)V
	public final fun customField (Ljava/lang/String;Ljava/lang/Object;)V
	public final fun customField (Ljava/lang/String;Z)V
	public final fun customField (Lkotlin/Pair;)V
	public final fun getBundledDependencies ()Ljava/util/List;
	public final fun getDependencies ()Ljava/util/Map;
	public final fun getDevDependencies ()Ljava/util/Map;
	public final fun getEmpty ()Z
	public final fun getMain ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getOptionalDependencies ()Ljava/util/Map;
	public final fun getOverrides ()Ljava/util/Map;
	public final fun getPeerDependencies ()Ljava/util/Map;
	public final fun getPrivate ()Ljava/lang/Boolean;
	public final fun getScopedName ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/PackageJson$ScopedName;
	public final fun getTypes ()Ljava/lang/String;
	public final fun getVersion ()Ljava/lang/String;
	public final fun getWorkspaces ()Ljava/util/Collection;
	public final fun saveTo (Ljava/io/File;)V
	public final fun setMain (Ljava/lang/String;)V
	public final fun setName (Ljava/lang/String;)V
	public final fun setOverrides (Ljava/util/Map;)V
	public final fun setPrivate (Ljava/lang/Boolean;)V
	public final fun setTypes (Ljava/lang/String;)V
	public final fun setVersion (Ljava/lang/String;)V
	public final fun setWorkspaces (Ljava/util/Collection;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/PackageJson$Companion {
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/PackageJson;
	public final fun scopedName (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/PackageJson$ScopedName;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/PackageJson$ScopedName {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/PackageJson$ScopedName;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/npm/PackageJson$ScopedName;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/PackageJson$ScopedName;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public final fun getScope ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/PackageJsonKt {
	public static final fun fromSrcPackageJson (Ljava/io/File;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/PackageJson;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/PackageJsonTypeAdapter : com/google/gson/TypeAdapterFactory {
	public fun <init> ()V
	public fun create (Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/npm/PeerNpmDependencyExtension : org/jetbrains/kotlin/gradle/targets/js/npm/BaseNpmDependencyExtension {
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/npm/PublicPackageJsonTask : org/gradle/api/DefaultTask, org/jetbrains/kotlin/gradle/targets/js/npm/UsesKotlinNpmResolutionManager {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/npm/PublicPackageJsonTask$Companion;
	public static final field NAME Ljava/lang/String;
	public fun <init> ()V
	public abstract fun getCompilationDisambiguatedName ()Lorg/gradle/api/provider/Property;
	public abstract fun getExtension ()Lorg/gradle/api/provider/Property;
	public final fun getExternalDependencies ()Ljava/util/Collection;
	public abstract fun getJsIrCompilation ()Lorg/gradle/api/provider/Property;
	public abstract fun getNpmProjectMain ()Lorg/gradle/api/provider/Property;
	public abstract fun getNpmProjectName ()Lorg/gradle/api/provider/Property;
	public final fun getPackageJsonFile ()Ljava/io/File;
	public abstract fun getPackageJsonHandlers ()Lorg/gradle/api/provider/ListProperty;
	public final fun getProjectVersion ()Ljava/lang/String;
	public final fun resolve ()V
	public final fun setPackageJsonFile (Ljava/io/File;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/PublicPackageJsonTask$Companion {
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/npm/RequiresNpmDependencies {
	public abstract fun getCompilation ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;
	public abstract fun getPath ()Ljava/lang/String;
	public abstract fun getRequiredNpmDependencies ()Ljava/util/Set;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/SemVer : java/lang/Comparable {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer$Companion;
	public fun <init> (Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun compareTo (Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;)I
	public final fun component1 ()Ljava/math/BigInteger;
	public final fun component2 ()Ljava/math/BigInteger;
	public final fun component3 ()Ljava/math/BigInteger;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun copy (Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBuild ()Ljava/lang/String;
	public final fun getMajor ()Ljava/math/BigInteger;
	public final fun getMinor ()Ljava/math/BigInteger;
	public final fun getPatch ()Ljava/math/BigInteger;
	public final fun getPreRelease ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun toDebugString ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/SemVer$Companion {
	public final fun from (Ljava/lang/String;Z)Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;
	public static synthetic fun from$default (Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer$Companion;Ljava/lang/String;ZILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;
	public final fun fromGradleRichVersion (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/SemverKt {
	public static final fun max (Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;
	public static final fun min (Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;
	public static final fun toSemVer (Lcom/github/gundy/semver4j/model/Version;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;
	public static final fun toVersion (Lorg/jetbrains/kotlin/gradle/targets/js/npm/SemVer;)Lcom/github/gundy/semver4j/model/Version;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/resolved/KotlinProjectNpmResolution : java/io/Serializable {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolved/KotlinProjectNpmResolution$Companion;
	public fun <init> (Ljava/util/Map;)V
	public final fun get (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinCompilationNpmResolution;
	public final fun getByCompilation ()Ljava/util/Map;
	public final fun getNpmProjects ()Ljava/util/Collection;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/resolved/KotlinProjectNpmResolution$Companion {
	public final fun empty ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolved/KotlinProjectNpmResolution;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/resolved/KotlinRootNpmResolution : java/io/Serializable {
	public fun <init> (Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V
	public final fun get (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolved/KotlinProjectNpmResolution;
	public final fun getProjects ()Ljava/util/Map;
	public final fun getRootProjectName ()Ljava/lang/String;
	public final fun getRootProjectVersion ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/resolved/PreparedKotlinCompilationNpmResolution : java/io/Serializable {
	public fun <init> (Lorg/gradle/api/provider/Provider;Ljava/util/Collection;Ljava/util/Collection;)V
	public final fun getExternalGradleDependencies ()Ljava/util/Collection;
	public final fun getExternalNpmDependencies ()Ljava/util/Collection;
	public final fun getNpmProjectDir ()Lorg/gradle/api/provider/Provider;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/resolver/CompositeDependency : java/io/Serializable {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Lorg/gradle/api/initialization/IncludedBuild;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/io/File;
	public final fun component4 ()Lorg/gradle/api/initialization/IncludedBuild;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Lorg/gradle/api/initialization/IncludedBuild;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/CompositeDependency;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/CompositeDependency;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Lorg/gradle/api/initialization/IncludedBuild;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/CompositeDependency;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDependencyName ()Ljava/lang/String;
	public final fun getDependencyVersion ()Ljava/lang/String;
	public final fun getIncludedBuild ()Lorg/gradle/api/initialization/IncludedBuild;
	public final fun getIncludedBuildDir ()Ljava/io/File;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/resolver/ExternalGradleDependency : java/io/Serializable {
	public fun <init> (Lorg/gradle/api/artifacts/ResolvedDependency;Lorg/gradle/api/artifacts/ResolvedArtifact;)V
	public final fun component1 ()Lorg/gradle/api/artifacts/ResolvedDependency;
	public final fun component2 ()Lorg/gradle/api/artifacts/ResolvedArtifact;
	public final fun copy (Lorg/gradle/api/artifacts/ResolvedDependency;Lorg/gradle/api/artifacts/ResolvedArtifact;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/ExternalGradleDependency;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/ExternalGradleDependency;Lorg/gradle/api/artifacts/ResolvedDependency;Lorg/gradle/api/artifacts/ResolvedArtifact;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/ExternalGradleDependency;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getArtifact ()Lorg/gradle/api/artifacts/ResolvedArtifact;
	public final fun getDependency ()Lorg/gradle/api/artifacts/ResolvedDependency;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/resolver/FileCollectionExternalGradleDependency : java/io/Serializable {
	public fun <init> (Ljava/util/Collection;Ljava/lang/String;)V
	public final fun component1 ()Ljava/util/Collection;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/util/Collection;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/FileCollectionExternalGradleDependency;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/FileCollectionExternalGradleDependency;Ljava/util/Collection;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/FileCollectionExternalGradleDependency;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDependencyVersion ()Ljava/lang/String;
	public final fun getFiles ()Ljava/util/Collection;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/resolver/FileExternalGradleDependency : java/io/Serializable {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/io/File;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/FileExternalGradleDependency;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/FileExternalGradleDependency;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/FileExternalGradleDependency;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDependencyName ()Ljava/lang/String;
	public final fun getDependencyVersion ()Ljava/lang/String;
	public final fun getFile ()Ljava/io/File;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/resolver/InternalDependency : java/io/Serializable {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/InternalDependency;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/InternalDependency;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/InternalDependency;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCompilationName ()Ljava/lang/String;
	public final fun getProjectName ()Ljava/lang/String;
	public final fun getProjectPath ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinCompilationNpmResolution : java/io/Serializable {
	public fun <init> (Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/TasksRequirements;)V
	public final fun close (Lorg/jetbrains/kotlin/gradle/targets/js/npm/KotlinNpmResolutionManager;Lorg/gradle/api/logging/Logger;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolved/PreparedKotlinCompilationNpmResolution;
	public final fun createPackageJson (Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolved/PreparedKotlinCompilationNpmResolution;Lorg/gradle/api/provider/Provider;Lorg/gradle/api/provider/ListProperty;)V
	public final fun createPreparedResolution (Lorg/jetbrains/kotlin/gradle/targets/js/npm/KotlinNpmResolutionManager;Lorg/gradle/api/logging/Logger;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolved/PreparedKotlinCompilationNpmResolution;
	public final fun getCompilationDisambiguatedName ()Ljava/lang/String;
	public final fun getExternalGradleDependencies ()Ljava/util/Collection;
	public final fun getExternalNpmDependencies ()Ljava/util/Collection;
	public final fun getFileCollectionDependencies ()Ljava/util/Collection;
	public final fun getInputs ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/PackageJsonProducerInputs;
	public final fun getInternalCompositeDependencies ()Ljava/util/Collection;
	public final fun getInternalDependencies ()Ljava/util/Collection;
	public final fun getNpmProjectName ()Ljava/lang/String;
	public final fun getNpmProjectVersion ()Ljava/lang/String;
	public final fun getProjectPath ()Ljava/lang/String;
	public final fun getResolutionOrPrepare (Lorg/jetbrains/kotlin/gradle/targets/js/npm/KotlinNpmResolutionManager;Lorg/gradle/api/logging/Logger;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolved/PreparedKotlinCompilationNpmResolution;
	public final fun getTasksRequirements ()Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/TasksRequirements;
	public final fun prepareWithDependencies (Lorg/jetbrains/kotlin/gradle/targets/js/npm/KotlinNpmResolutionManager;Lorg/gradle/api/logging/Logger;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolved/PreparedKotlinCompilationNpmResolution;
	public final fun setExternalGradleDependencies (Ljava/util/Collection;)V
	public final fun setExternalNpmDependencies (Ljava/util/Collection;)V
	public final fun setFileCollectionDependencies (Ljava/util/Collection;)V
	public final fun setInternalCompositeDependencies (Ljava/util/Collection;)V
	public final fun setInternalDependencies (Ljava/util/Collection;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinCompilationNpmResolver : java/io/Serializable {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinCompilationNpmResolver$Companion;
	public static final field PUBLIC_PACKAGE_JSON_ATTR_VALUE Ljava/lang/String;
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinProjectNpmResolver;Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;)V
	public final fun close ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinCompilationNpmResolution;
	public final fun getAggregatedConfiguration ()Lorg/gradle/api/artifacts/Configuration;
	public final fun getCompilation ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;
	public final fun getCompilationDisambiguatedName ()Ljava/lang/String;
	public final fun getCompilationNpmResolution ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinCompilationNpmResolution;
	public final fun getNpmProject ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmProject;
	public final fun getNpmVersion ()Ljava/lang/String;
	public final fun getPackageJsonTaskHolder ()Lorg/gradle/api/tasks/TaskProvider;
	public final fun getProject ()Lorg/gradle/api/Project;
	public final fun getProjectPath ()Ljava/lang/String;
	public final fun getProjectResolver ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinProjectNpmResolver;
	public final fun getPublicPackageJsonTaskHolder ()Lorg/gradle/api/tasks/TaskProvider;
	public final fun getRootResolver ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinRootNpmResolver;
	public final fun getTarget ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrTarget;
	public final fun setRootResolver (Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinRootNpmResolver;)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinCompilationNpmResolver$Companion {
	public final fun getPublicPackageJsonAttribute ()Lorg/gradle/api/attributes/Attribute;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinCompilationNpmResolver$ConfigurationVisitor {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinCompilationNpmResolver;)V
	public final fun toPackageJsonProducer ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinCompilationNpmResolution;
	public final fun visit (Lorg/gradle/api/artifacts/Configuration;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinProjectNpmResolver : java/io/Serializable {
	public fun <init> (Lorg/gradle/api/Project;Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinRootNpmResolver;)V
	public final fun close ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolved/KotlinProjectNpmResolution;
	public final fun get (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinCompilationNpmResolver;
	public final fun get (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;)Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinCompilationNpmResolver;
	public final fun getCompilationResolvers ()Ljava/util/Collection;
	public final fun getProjectPath ()Ljava/lang/String;
	public final fun getResolver ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinRootNpmResolver;
	public final fun setResolver (Lorg/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinRootNpmResolver;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinRootNpmResolver : java/io/Serializable {
	public final fun addProject (Lorg/gradle/api/Project;)V
	public final fun alreadyResolvedMessage (Ljava/lang/String;)Ljava/lang/String;
	public final fun getCompilations ()Ljava/util/Collection;
	public final fun getProjectPackagesDir ()Lorg/gradle/api/provider/Provider;
	public final fun getProjectResolvers ()Ljava/util/Map;
	public final fun getRootProjectDir ()Ljava/io/File;
	public final fun getRootProjectName ()Ljava/lang/String;
	public final fun getRootProjectVersion ()Ljava/lang/String;
	public final fun getTasksRequirements ()Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/TasksRequirements;
	public final fun getVersions ()Lorg/jetbrains/kotlin/gradle/targets/js/NpmVersions;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/resolver/KotlinRootNpmResolverKt {
	public static final field PACKAGE_JSON_UMBRELLA_TASK_NAME Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/resolver/PackageJsonProducerInputs {
	public fun <init> (Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;Ljava/util/Collection;)V
	public final fun getExternalDependencies ()Ljava/util/Collection;
	public final fun getExternalGradleDependencies ()Ljava/util/Collection;
	public final fun getFileCollectionDependencies ()Ljava/util/Collection;
	public final fun getInternalDependencies ()Ljava/util/Collection;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/npm/tasks/KotlinNpmCachesSetup : org/gradle/api/DefaultTask, org/jetbrains/kotlin/gradle/targets/js/npm/UsesGradleNodeModulesCache {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/npm/tasks/KotlinNpmCachesSetup$Companion;
	public static final field NAME Ljava/lang/String;
	public fun <init> ()V
	public fun getFileHasher ()Lorg/gradle/internal/hash/FileHasher;
	public final fun setup ()V
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/tasks/KotlinNpmCachesSetup$Companion {
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/npm/tasks/KotlinNpmInstallTask : org/gradle/api/DefaultTask, org/jetbrains/kotlin/gradle/targets/js/npm/UsesKotlinNpmResolutionManager {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/npm/tasks/KotlinNpmInstallTask$Companion;
	public static final field NAME Ljava/lang/String;
	public fun <init> ()V
	public final fun getAdditionalFiles ()Lorg/gradle/api/file/FileCollection;
	public final fun getArgs ()Ljava/util/List;
	public final fun getNodeModules ()Lorg/gradle/api/provider/Provider;
	public final fun getPackageJsonFiles ()Ljava/util/List;
	public final fun getPreparedFiles ()Ljava/util/Collection;
	public final fun getYarnLock ()Ljava/io/File;
	public final fun getYarnLockFile ()Lorg/gradle/api/provider/Provider;
	public final fun resolve ()V
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/tasks/KotlinNpmInstallTask$Companion {
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/npm/tasks/KotlinPackageJsonTask : org/gradle/api/DefaultTask, org/jetbrains/kotlin/gradle/targets/js/npm/UsesGradleNodeModulesCache, org/jetbrains/kotlin/gradle/targets/js/npm/UsesKotlinNpmResolutionManager {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/npm/tasks/KotlinPackageJsonTask$Companion;
	public fun <init> ()V
	public abstract fun getCompilationDisambiguatedName ()Lorg/gradle/api/provider/Property;
	public abstract fun getPackageJson ()Lorg/gradle/api/provider/Property;
	public abstract fun getPackageJsonHandlers ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getPackageJsonMain ()Lorg/gradle/api/provider/Property;
	public final fun resolve ()V
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/tasks/KotlinPackageJsonTask$Companion {
	public final fun create (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;)Lorg/gradle/api/tasks/TaskProvider;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/npm/tasks/RootPackageJsonTask : org/gradle/api/DefaultTask, org/jetbrains/kotlin/gradle/targets/js/npm/UsesKotlinNpmResolutionManager {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/npm/tasks/RootPackageJsonTask$Companion;
	public static final field NAME Ljava/lang/String;
	public fun <init> ()V
	public final fun getPackageJsonFiles ()Ljava/util/List;
	public final fun getRootPackageJson ()Ljava/io/File;
	public final fun getRootPackageJsonFile ()Lorg/gradle/api/provider/Provider;
	public final fun resolve ()V
}

public final class org/jetbrains/kotlin/gradle/targets/js/npm/tasks/RootPackageJsonTask$Companion {
}

public final class org/jetbrains/kotlin/gradle/targets/js/subtargets/DefaultDistribution : org/jetbrains/kotlin/gradle/targets/js/dsl/Distribution {
	public fun <init> (Lorg/gradle/api/Project;Lorg/gradle/api/provider/Property;Lorg/gradle/api/provider/Property;)V
	public fun getDirectory ()Ljava/io/File;
	public fun getDistributionName ()Lorg/gradle/api/provider/Property;
	public fun getName ()Ljava/lang/String;
	public fun getOutputDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public fun setDirectory (Ljava/io/File;)V
	public fun setName (Ljava/lang/String;)V
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/subtargets/KotlinBrowserJs : org/jetbrains/kotlin/gradle/targets/js/subtargets/KotlinJsSubTarget, org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsBrowserDsl {
	public fun <init> ()V
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/subtargets/KotlinJsSubTarget : org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsSubTargetDsl {
	public fun <init> ()V
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/subtargets/KotlinNodeJs : org/jetbrains/kotlin/gradle/targets/js/subtargets/KotlinJsSubTarget, org/jetbrains/kotlin/gradle/targets/js/dsl/KotlinJsNodeDsl {
	public fun <init> ()V
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/testing/KotlinJsTest : org/jetbrains/kotlin/gradle/tasks/KotlinTest, org/jetbrains/kotlin/gradle/targets/js/npm/RequiresNpmDependencies {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;)V
	public synthetic fun createTestExecutionSpec ()Lorg/gradle/api/internal/tasks/testing/TestExecutionSpec;
	protected fun createTestExecutionSpec ()Lorg/jetbrains/kotlin/gradle/internal/testing/TCServiceMessagesTestExecutionSpec;
	public final fun environment (Ljava/lang/String;Ljava/lang/String;)V
	public fun getCompilation ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;
	public final fun getCompilationId ()Ljava/lang/String;
	public final fun getDebug ()Z
	public final fun getEnvironment ()Ljava/util/Map;
	public final fun getInputFileProperty ()Lorg/gradle/api/file/RegularFileProperty;
	public final fun getNodeJsArgs ()Ljava/util/List;
	public fun getRequiredNpmDependencies ()Ljava/util/Set;
	public final fun getRuntimeClasspath ()Lorg/gradle/api/file/FileCollection;
	public final fun getTestFramework ()Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinJsTestFramework;
	public final fun getTestFrameworkSettings ()Ljava/lang/String;
	public final fun onTestFrameworkSet (Lorg/gradle/api/Action;)V
	public fun setCompilation (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;)V
	public final fun setDebug (Z)V
	public final fun setEnvironment (Ljava/util/Map;)V
	public final fun setTestFramework (Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinJsTestFramework;)V
	public final fun useKarma ()Lorg/jetbrains/kotlin/gradle/targets/js/testing/karma/KotlinKarma;
	public final fun useKarma (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/gradle/targets/js/testing/karma/KotlinKarma;
	public final fun useKarma (Lorg/gradle/api/Action;)V
	public final fun useMocha ()Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinJsTestFramework;
	public final fun useMocha (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinJsTestFramework;
	public final fun useMocha (Lorg/gradle/api/Action;)V
	public final fun useNodeJs ()Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinJsTestFramework;
	public final fun useNodeJs (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinJsTestFramework;
	public final fun useNodeJs (Lorg/gradle/api/Action;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/js/testing/KotlinJsTestFramework : org/jetbrains/kotlin/gradle/targets/js/npm/RequiresNpmDependencies {
	public abstract fun createTestExecutionSpec (Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinJsTest;Lorg/gradle/process/ProcessForkOptions;Ljava/util/List;Z)Lorg/jetbrains/kotlin/gradle/internal/testing/TCServiceMessagesTestExecutionSpec;
	public abstract fun getExecutable ()Lorg/gradle/api/provider/Provider;
	public abstract fun getSettingsState ()Ljava/lang/String;
	public abstract fun getWorkingDir ()Lorg/gradle/api/provider/Provider;
}

public final class org/jetbrains/kotlin/gradle/targets/js/testing/KotlinTestRunnerCliArgs {
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Ljava/util/Collection;Ljava/util/Collection;Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinTestRunnerCliArgs$IgnoredTestSuitesReporting;)V
	public synthetic fun <init> (Ljava/util/List;Ljava/util/Collection;Ljava/util/Collection;Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinTestRunnerCliArgs$IgnoredTestSuitesReporting;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/Collection;
	public final fun component3 ()Ljava/util/Collection;
	public final fun component4 ()Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinTestRunnerCliArgs$IgnoredTestSuitesReporting;
	public final fun copy (Ljava/util/List;Ljava/util/Collection;Ljava/util/Collection;Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinTestRunnerCliArgs$IgnoredTestSuitesReporting;)Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinTestRunnerCliArgs;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinTestRunnerCliArgs;Ljava/util/List;Ljava/util/Collection;Ljava/util/Collection;Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinTestRunnerCliArgs$IgnoredTestSuitesReporting;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinTestRunnerCliArgs;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExclude ()Ljava/util/Collection;
	public final fun getIgnoredTestSuites ()Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinTestRunnerCliArgs$IgnoredTestSuitesReporting;
	public final fun getInclude ()Ljava/util/Collection;
	public final fun getModuleNames ()Ljava/util/List;
	public fun hashCode ()I
	public final fun toList ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/testing/KotlinTestRunnerCliArgs$IgnoredTestSuitesReporting : java/lang/Enum {
	public static final field reportAllInnerTestsAsIgnored Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinTestRunnerCliArgs$IgnoredTestSuitesReporting;
	public static final field reportAsIgnoredTest Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinTestRunnerCliArgs$IgnoredTestSuitesReporting;
	public static final field skip Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinTestRunnerCliArgs$IgnoredTestSuitesReporting;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinTestRunnerCliArgs$IgnoredTestSuitesReporting;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinTestRunnerCliArgs$IgnoredTestSuitesReporting;
}

public final class org/jetbrains/kotlin/gradle/targets/js/testing/karma/CustomLauncher {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/testing/karma/CustomLauncher;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/testing/karma/CustomLauncher;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/testing/karma/CustomLauncher;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBase ()Ljava/lang/String;
	public final fun getDebug ()Ljava/lang/Boolean;
	public final fun getFlags ()Ljava/util/List;
	public fun hashCode ()I
	public final fun setBase (Ljava/lang/String;)V
	public final fun setDebug (Ljava/lang/Boolean;)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/testing/karma/KarmaClient {
	public fun <init> ()V
	public fun <init> (Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lorg/jetbrains/kotlin/gradle/targets/js/testing/karma/KarmaClient;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/testing/karma/KarmaClient;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/testing/karma/KarmaClient;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getArgs ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/testing/karma/KarmaConfig {
	public fun <init> ()V
	public fun <init> (ZZLjava/lang/String;Ljava/util/List;Ljava/util/List;Lorg/jetbrains/kotlin/gradle/targets/js/testing/karma/KarmaClient;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;ZZLjava/util/List;Ljava/util/Map;Ljava/util/Map;)V
	public synthetic fun <init> (ZZLjava/lang/String;Ljava/util/List;Ljava/util/List;Lorg/jetbrains/kotlin/gradle/targets/js/testing/karma/KarmaClient;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;ZZLjava/util/List;Ljava/util/Map;Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component10 ()Ljava/lang/String;
	public final fun component11 ()Z
	public final fun component12 ()Z
	public final fun component13 ()Ljava/util/List;
	public final fun component14 ()Ljava/util/Map;
	public final fun component15 ()Ljava/util/Map;
	public final fun component2 ()Z
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ljava/util/List;
	public final fun component6 ()Lorg/jetbrains/kotlin/gradle/targets/js/testing/karma/KarmaClient;
	public final fun component7 ()Ljava/util/List;
	public final fun component8 ()Ljava/util/Map;
	public final fun component9 ()Ljava/lang/String;
	public final fun copy (ZZLjava/lang/String;Ljava/util/List;Ljava/util/List;Lorg/jetbrains/kotlin/gradle/targets/js/testing/karma/KarmaClient;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;ZZLjava/util/List;Ljava/util/Map;Ljava/util/Map;)Lorg/jetbrains/kotlin/gradle/targets/js/testing/karma/KarmaConfig;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/testing/karma/KarmaConfig;ZZLjava/lang/String;Ljava/util/List;Ljava/util/List;Lorg/jetbrains/kotlin/gradle/targets/js/testing/karma/KarmaClient;Ljava/util/List;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;ZZLjava/util/List;Ljava/util/Map;Ljava/util/Map;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/testing/karma/KarmaConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAutoWatch ()Z
	public final fun getBasePath ()Ljava/lang/String;
	public final fun getBrowsers ()Ljava/util/List;
	public final fun getClient ()Lorg/jetbrains/kotlin/gradle/targets/js/testing/karma/KarmaClient;
	public final fun getCustomContextFile ()Ljava/lang/String;
	public final fun getCustomDebugFile ()Ljava/lang/String;
	public final fun getCustomLaunchers ()Ljava/util/Map;
	public final fun getFailOnEmptyTestSuite ()Z
	public final fun getFailOnFailingTestSuite ()Z
	public final fun getFiles ()Ljava/util/List;
	public final fun getFrameworks ()Ljava/util/List;
	public final fun getPreprocessors ()Ljava/util/Map;
	public final fun getProxies ()Ljava/util/Map;
	public final fun getReporters ()Ljava/util/List;
	public final fun getSingleRun ()Z
	public fun hashCode ()I
	public final fun setAutoWatch (Z)V
	public final fun setBasePath (Ljava/lang/String;)V
	public final fun setCustomContextFile (Ljava/lang/String;)V
	public final fun setCustomDebugFile (Ljava/lang/String;)V
	public final fun setSingleRun (Z)V
	public fun toString ()Ljava/lang/String;
}

public class org/jetbrains/kotlin/gradle/targets/js/testing/karma/KarmaConsoleProcessor {
	public fun <init> (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
	public final fun process (Lorg/jetbrains/kotlin/gradle/internal/LogType;Ljava/lang/String;)Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/testing/karma/KarmaConsoleRejector : org/jetbrains/kotlin/gradle/targets/js/testing/karma/KarmaConsoleProcessor {
	public fun <init> (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/testing/karma/KarmaStackTraceProcessorKt {
	public static final fun processKarmaStackTrace (Ljava/lang/String;)Ljava/lang/String;
	public static final fun processWebpackName (Ljava/lang/String;)Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/testing/karma/KotlinKarma : org/jetbrains/kotlin/gradle/targets/js/testing/KotlinJsTestFramework {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;Lkotlin/jvm/functions/Function0;Ljava/lang/String;)V
	public fun createTestExecutionSpec (Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinJsTest;Lorg/gradle/process/ProcessForkOptions;Ljava/util/List;Z)Lorg/jetbrains/kotlin/gradle/internal/testing/TCServiceMessagesTestExecutionSpec;
	public fun getCompilation ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;
	public fun getExecutable ()Lorg/gradle/api/provider/Provider;
	public fun getPath ()Ljava/lang/String;
	public fun getRequiredNpmDependencies ()Ljava/util/Set;
	public fun getSettingsState ()Ljava/lang/String;
	public final fun getWebpackConfig ()Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig;
	public fun getWorkingDir ()Lorg/gradle/api/provider/Provider;
	public final fun useChrome ()V
	public final fun useChromeCanary ()V
	public final fun useChromeCanaryHeadless ()V
	public final fun useChromeHeadless ()V
	public final fun useChromeHeadlessNoSandbox ()V
	public final fun useChromium ()V
	public final fun useChromiumHeadless ()V
	public final fun useConfigDirectory (Ljava/io/File;)V
	public final fun useConfigDirectory (Ljava/lang/String;)V
	public final fun useDebuggableChrome ()V
	public final fun useFirefox ()V
	public final fun useFirefoxAurora ()V
	public final fun useFirefoxAuroraHeadless ()V
	public final fun useFirefoxDeveloper ()V
	public final fun useFirefoxDeveloperHeadless ()V
	public final fun useFirefoxHeadless ()V
	public final fun useFirefoxNightly ()V
	public final fun useFirefoxNightlyHeadless ()V
	public final fun useIe ()V
	public final fun useOpera ()V
	public final fun usePhantomJS ()V
	public final fun useSafari ()V
	public final fun useSourceMapSupport ()V
}

public final class org/jetbrains/kotlin/gradle/targets/js/testing/mocha/KotlinMocha : org/jetbrains/kotlin/gradle/targets/js/testing/KotlinJsTestFramework {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/testing/mocha/KotlinMocha$Companion;
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;Ljava/lang/String;)V
	public fun createTestExecutionSpec (Lorg/jetbrains/kotlin/gradle/targets/js/testing/KotlinJsTest;Lorg/gradle/process/ProcessForkOptions;Ljava/util/List;Z)Lorg/jetbrains/kotlin/gradle/internal/testing/TCServiceMessagesTestExecutionSpec;
	public fun getCompilation ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;
	public fun getExecutable ()Lorg/gradle/api/provider/Provider;
	public fun getPath ()Ljava/lang/String;
	public fun getRequiredNpmDependencies ()Ljava/util/Set;
	public fun getSettingsState ()Ljava/lang/String;
	public final fun getTimeout ()Ljava/lang/String;
	public fun getWorkingDir ()Lorg/gradle/api/provider/Provider;
	public final fun setTimeout (Ljava/lang/String;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/testing/mocha/KotlinMocha$Companion {
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/typescript/TypeScriptValidationTask : org/gradle/api/DefaultTask, org/jetbrains/kotlin/gradle/targets/js/npm/RequiresNpmDependencies {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/typescript/TypeScriptValidationTask$Companion;
	public static final field NAME Ljava/lang/String;
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;)V
	public fun getCompilation ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;
	public abstract fun getInputDir ()Lorg/gradle/api/file/DirectoryProperty;
	protected final fun getNodeJs ()Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsRootExtension;
	public fun getRequiredNpmDependencies ()Ljava/util/Set;
	public abstract fun getValidationStrategy ()Lorg/gradle/api/provider/Property;
	public final fun run ()V
}

public final class org/jetbrains/kotlin/gradle/targets/js/typescript/TypeScriptValidationTask$Companion {
}

public final class org/jetbrains/kotlin/gradle/targets/js/webpack/InfrastructureLogged {
	public fun <init> (Z)V
	public final fun getValue ()Z
	public final fun setValue (Z)V
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpack : org/gradle/api/DefaultTask, org/jetbrains/kotlin/gradle/report/UsesBuildMetricsService, org/jetbrains/kotlin/gradle/targets/js/dsl/WebpackRulesDsl, org/jetbrains/kotlin/gradle/targets/js/npm/RequiresNpmDependencies {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;Lorg/gradle/api/model/ObjectFactory;)V
	public fun cssSupport (Lorg/gradle/api/Action;)V
	public final fun doExecute ()V
	public final fun getArgs ()Ljava/util/List;
	public final fun getBin ()Ljava/lang/String;
	public final fun getCompilation ()Lorg/jetbrains/kotlin/gradle/targets/js/ir/KotlinJsIrCompilation;
	public final fun getCompilationId ()Ljava/lang/String;
	public fun getConfigDirectory ()Ljava/io/File;
	public fun getConfigFile ()Lorg/gradle/api/provider/Provider;
	public final fun getDebug ()Z
	public final fun getDestinationDirectory ()Ljava/io/File;
	public final fun getDevServer ()Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer;
	public final fun getDevServerProperty ()Lorg/gradle/api/provider/Property;
	public final fun getDevtool ()Ljava/lang/String;
	public final fun getEntry ()Lorg/gradle/api/provider/Provider;
	public abstract fun getEntryModuleName ()Lorg/gradle/api/provider/Property;
	public abstract fun getEsModules ()Lorg/gradle/api/provider/Property;
	public fun getExecHandleFactory ()Lorg/gradle/process/internal/ExecHandleFactory;
	public final fun getGenerateConfigOnly ()Z
	public final fun getInputFiles ()Lorg/gradle/api/file/FileTree;
	public abstract fun getInputFilesDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public final fun getMainOutputFile ()Lorg/gradle/api/provider/Provider;
	public abstract fun getMainOutputFileName ()Lorg/gradle/api/provider/Property;
	public final fun getMode ()Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Mode;
	public final fun getNodeArgs ()Ljava/util/List;
	public final fun getNpmProjectDir ()Lorg/gradle/api/provider/Provider;
	public final fun getOutput ()Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackOutput;
	public abstract fun getOutputDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public fun getOutputFile ()Ljava/io/File;
	public final fun getOutputFileName ()Ljava/lang/String;
	public fun getRequiredNpmDependencies ()Ljava/util/Set;
	public fun getRules ()Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWebpackRulesContainer;
	public final fun getSourceMaps ()Z
	public final fun getWatchOptions ()Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$WatchOptions;
	public fun rules (Lorg/gradle/api/Action;)V
	public fun scssSupport (Lorg/gradle/api/Action;)V
	public final fun setArgs (Ljava/util/List;)V
	public final fun setBin (Ljava/lang/String;)V
	public final fun setDebug (Z)V
	public final fun setDestinationDirectory (Ljava/io/File;)V
	public final fun setDevServer (Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer;)V
	public final fun setDevtool (Ljava/lang/String;)V
	public final fun setGenerateConfigOnly (Z)V
	public final fun setMode (Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Mode;)V
	public final fun setNodeArgs (Ljava/util/List;)V
	public final fun setOutputFileName (Ljava/lang/String;)V
	public final fun setSourceMaps (Z)V
	public final fun setWatchOptions (Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$WatchOptions;)V
	public final fun webpackConfigApplier (Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig : org/jetbrains/kotlin/gradle/targets/js/dsl/WebpackRulesDsl {
	public fun <init> (Lorg/gradle/api/provider/Provider;Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Mode;Ljava/io/File;Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackOutput;Ljava/io/File;Ljava/lang/String;Ljava/io/File;Ljava/io/File;Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer;Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$WatchOptions;Ljava/util/Set;Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWebpackRulesContainer;Ljava/lang/String;ZLorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Optimization;ZZZZ)V
	public synthetic fun <init> (Lorg/gradle/api/provider/Provider;Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Mode;Ljava/io/File;Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackOutput;Ljava/io/File;Ljava/lang/String;Ljava/io/File;Ljava/io/File;Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer;Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$WatchOptions;Ljava/util/Set;Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWebpackRulesContainer;Ljava/lang/String;ZLorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Optimization;ZZZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun appendTo (Ljava/lang/Appendable;)V
	public final fun component1 ()Lorg/gradle/api/provider/Provider;
	public final fun component10 ()Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$WatchOptions;
	public final fun component11 ()Ljava/util/Set;
	public final fun component12 ()Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWebpackRulesContainer;
	public final fun component13 ()Ljava/lang/String;
	public final fun component14 ()Z
	public final fun component15 ()Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Optimization;
	public final fun component16 ()Z
	public final fun component17 ()Z
	public final fun component18 ()Z
	public final fun component19 ()Z
	public final fun component2 ()Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Mode;
	public final fun component3 ()Ljava/io/File;
	public final fun component4 ()Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackOutput;
	public final fun component5 ()Ljava/io/File;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ljava/io/File;
	public final fun component8 ()Ljava/io/File;
	public final fun component9 ()Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer;
	public final fun copy (Lorg/gradle/api/provider/Provider;Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Mode;Ljava/io/File;Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackOutput;Ljava/io/File;Ljava/lang/String;Ljava/io/File;Ljava/io/File;Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer;Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$WatchOptions;Ljava/util/Set;Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWebpackRulesContainer;Ljava/lang/String;ZLorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Optimization;ZZZZ)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig;Lorg/gradle/api/provider/Provider;Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Mode;Ljava/io/File;Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackOutput;Ljava/io/File;Ljava/lang/String;Ljava/io/File;Ljava/io/File;Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer;Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$WatchOptions;Ljava/util/Set;Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWebpackRulesContainer;Ljava/lang/String;ZLorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Optimization;ZZZZILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig;
	public fun cssSupport (Lorg/gradle/api/Action;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getConfigDirectory ()Ljava/io/File;
	public final fun getDevServer ()Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer;
	public final fun getDevtool ()Ljava/lang/String;
	public final fun getEntry ()Ljava/io/File;
	public final fun getEntryInput ()Ljava/lang/String;
	public final fun getExperiments ()Ljava/util/Set;
	public final fun getExport ()Z
	public final fun getMode ()Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Mode;
	public final fun getNpmProjectDir ()Lorg/gradle/api/provider/Provider;
	public final fun getOptimization ()Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Optimization;
	public final fun getOutput ()Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackOutput;
	public final fun getOutputFileName ()Ljava/lang/String;
	public final fun getOutputPath ()Ljava/io/File;
	public final fun getOutputPathInput ()Ljava/lang/String;
	public final fun getProgressReporter ()Z
	public final fun getReportEvaluatedConfigFile ()Ljava/io/File;
	public final fun getRequiredDependencies (Lorg/jetbrains/kotlin/gradle/targets/js/NpmVersions;)Ljava/util/Set;
	public final fun getResolveFromModulesFirst ()Z
	public fun getRules ()Lorg/jetbrains/kotlin/gradle/targets/js/dsl/KotlinWebpackRulesContainer;
	public final fun getShowProgress ()Z
	public final fun getSourceMaps ()Z
	public final fun getWatchOptions ()Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$WatchOptions;
	public fun hashCode ()I
	public fun rules (Lorg/gradle/api/Action;)V
	public final fun save (Ljava/io/File;)V
	public fun scssSupport (Lorg/gradle/api/Action;)V
	public final fun setConfigDirectory (Ljava/io/File;)V
	public final fun setDevServer (Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer;)V
	public final fun setDevtool (Ljava/lang/String;)V
	public final fun setEntry (Ljava/io/File;)V
	public final fun setExperiments (Ljava/util/Set;)V
	public final fun setExport (Z)V
	public final fun setMode (Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Mode;)V
	public final fun setOptimization (Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Optimization;)V
	public final fun setOutput (Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackOutput;)V
	public final fun setOutputFileName (Ljava/lang/String;)V
	public final fun setOutputPath (Ljava/io/File;)V
	public final fun setProgressReporter (Z)V
	public final fun setReportEvaluatedConfigFile (Ljava/io/File;)V
	public final fun setResolveFromModulesFirst (Z)V
	public final fun setShowProgress (Z)V
	public final fun setSourceMaps (Z)V
	public final fun setWatchOptions (Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$WatchOptions;)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer : java/io/Serializable {
	public fun <init> ()V
	public fun <init> (Ljava/lang/Object;Ljava/lang/Integer;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer$Client;)V
	public synthetic fun <init> (Ljava/lang/Object;Ljava/lang/Integer;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer$Client;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun component2 ()Ljava/lang/Integer;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()Ljava/util/List;
	public final fun component5 ()Ljava/util/List;
	public final fun component6 ()Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer$Client;
	public final fun copy (Ljava/lang/Object;Ljava/lang/Integer;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer$Client;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer;Ljava/lang/Object;Ljava/lang/Integer;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer$Client;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getClient ()Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer$Client;
	public final fun getContentBase ()Ljava/util/List;
	public final fun getOpen ()Ljava/lang/Object;
	public final fun getPort ()Ljava/lang/Integer;
	public final fun getProxy ()Ljava/util/List;
	public final fun getStatic ()Ljava/util/List;
	public fun hashCode ()I
	public final fun setClient (Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer$Client;)V
	public final fun setContentBase (Ljava/util/List;)V
	public final fun setOpen (Ljava/lang/Object;)V
	public final fun setPort (Ljava/lang/Integer;)V
	public final fun setProxy (Ljava/util/List;)V
	public final fun setStatic (Ljava/util/List;)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer$Client : java/io/Serializable {
	public fun <init> (Ljava/lang/Object;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun copy (Ljava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer$Client;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer$Client;Ljava/lang/Object;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer$Client;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getOverlay ()Ljava/lang/Object;
	public fun hashCode ()I
	public final fun setOverlay (Ljava/lang/Object;)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer$Client$Overlay : java/io/Serializable {
	public fun <init> (ZZ)V
	public final fun component1 ()Z
	public final fun component2 ()Z
	public final fun copy (ZZ)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer$Client$Overlay;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer$Client$Overlay;ZZILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer$Client$Overlay;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getErrors ()Z
	public final fun getWarnings ()Z
	public fun hashCode ()I
	public final fun setErrors (Z)V
	public final fun setWarnings (Z)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer$Proxy : java/io/Serializable {
	public fun <init> (Ljava/util/List;Ljava/lang/String;Ljava/util/Map;Ljava/lang/Boolean;Ljava/lang/Boolean;)V
	public synthetic fun <init> (Ljava/util/List;Ljava/lang/String;Ljava/util/Map;Ljava/lang/Boolean;Ljava/lang/Boolean;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/util/Map;
	public final fun component4 ()Ljava/lang/Boolean;
	public final fun component5 ()Ljava/lang/Boolean;
	public final fun copy (Ljava/util/List;Ljava/lang/String;Ljava/util/Map;Ljava/lang/Boolean;Ljava/lang/Boolean;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer$Proxy;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer$Proxy;Ljava/util/List;Ljava/lang/String;Ljava/util/Map;Ljava/lang/Boolean;Ljava/lang/Boolean;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$DevServer$Proxy;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChangeOrigin ()Ljava/lang/Boolean;
	public final fun getContext ()Ljava/util/List;
	public final fun getPathRewrite ()Ljava/util/Map;
	public final fun getSecure ()Ljava/lang/Boolean;
	public final fun getTarget ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Mode : java/lang/Enum {
	public static final field DEVELOPMENT Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Mode;
	public static final field PRODUCTION Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Mode;
	public final fun getCode ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Mode;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Mode;
}

public final class org/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Optimization : java/io/Serializable {
	public fun <init> (Ljava/lang/Object;Ljava/lang/Object;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun component2 ()Ljava/lang/Object;
	public final fun copy (Ljava/lang/Object;Ljava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Optimization;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Optimization;Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$Optimization;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getRuntimeChunk ()Ljava/lang/Object;
	public final fun getSplitChunks ()Ljava/lang/Object;
	public fun hashCode ()I
	public final fun setRuntimeChunk (Ljava/lang/Object;)V
	public final fun setSplitChunks (Ljava/lang/Object;)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$WatchOptions : java/io/Serializable {
	public fun <init> ()V
	public fun <init> (Ljava/lang/Integer;Ljava/lang/Object;)V
	public synthetic fun <init> (Ljava/lang/Integer;Ljava/lang/Object;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/Integer;
	public final fun component2 ()Ljava/lang/Object;
	public final fun copy (Ljava/lang/Integer;Ljava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$WatchOptions;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$WatchOptions;Ljava/lang/Integer;Ljava/lang/Object;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackConfig$WatchOptions;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAggregateTimeout ()Ljava/lang/Integer;
	public final fun getIgnored ()Ljava/lang/Object;
	public fun hashCode ()I
	public final fun setAggregateTimeout (Ljava/lang/Integer;)V
	public final fun setIgnored (Ljava/lang/Object;)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackCssMode {
	public static final field EXTRACT Ljava/lang/String;
	public static final field IMPORT Ljava/lang/String;
	public static final field INLINE Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackCssMode;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackCssRule : org/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackRule {
	public fun <init> (Ljava/lang/String;)V
	public fun dependencies (Lorg/jetbrains/kotlin/gradle/targets/js/NpmVersions;)Ljava/util/Collection;
	public abstract fun getMode ()Lorg/gradle/api/provider/Property;
	protected fun loaders ()Ljava/util/List;
	public fun validate ()Z
}

public final class org/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackOutput {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackOutput;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackOutput;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackOutput;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGlobalObject ()Ljava/lang/String;
	public final fun getLibrary ()Ljava/lang/String;
	public final fun getLibraryTarget ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun setGlobalObject (Ljava/lang/String;)V
	public final fun setLibrary (Ljava/lang/String;)V
	public final fun setLibraryTarget (Ljava/lang/String;)V
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackOutput$Target {
	public static final field AMD Ljava/lang/String;
	public static final field AMD_REQUIRE Ljava/lang/String;
	public static final field ASSIGN Ljava/lang/String;
	public static final field COMMONJS Ljava/lang/String;
	public static final field COMMONJS2 Ljava/lang/String;
	public static final field COMMONJS_MODULE Ljava/lang/String;
	public static final field GLOBAL Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackOutput$Target;
	public static final field JSONP Ljava/lang/String;
	public static final field SELF Ljava/lang/String;
	public static final field SYSTEM Ljava/lang/String;
	public static final field THIS Ljava/lang/String;
	public static final field UMD Ljava/lang/String;
	public static final field UMD2 Ljava/lang/String;
	public static final field VAR Ljava/lang/String;
	public static final field WINDOW Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackRule : org/gradle/api/Named {
	public fun <init> (Ljava/lang/String;)V
	public fun dependencies (Lorg/jetbrains/kotlin/gradle/targets/js/NpmVersions;)Ljava/util/Collection;
	public fun equals (Ljava/lang/Object;)Z
	protected fun getDescription ()Ljava/lang/String;
	public abstract fun getEnabled ()Lorg/gradle/api/provider/Property;
	public abstract fun getExclude ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getInclude ()Lorg/gradle/api/provider/ListProperty;
	public fun getName ()Ljava/lang/String;
	public abstract fun getTest ()Lorg/gradle/api/provider/Property;
	public fun hashCode ()I
	protected final fun json (Ljava/lang/Object;)Ljava/lang/String;
	protected abstract fun loaders ()Ljava/util/List;
	public fun validate ()Z
}

public final class org/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackRule$Loader {
	public fun <init> (Ljava/lang/String;Ljava/util/Map;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/Map;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/Map;
	public final fun component3 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/Map;Ljava/util/List;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackRule$Loader;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackRule$Loader;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackRule$Loader;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLoader ()Ljava/lang/String;
	public final fun getOptions ()Ljava/util/Map;
	public final fun getPrerequisites ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackScssRule : org/jetbrains/kotlin/gradle/targets/js/webpack/KotlinWebpackCssRule {
	public fun <init> (Ljava/lang/String;)V
	public fun dependencies (Lorg/jetbrains/kotlin/gradle/targets/js/NpmVersions;)Ljava/util/Collection;
	protected fun loaders ()Ljava/util/List;
}

public final class org/jetbrains/kotlin/gradle/targets/js/webpack/WebpackDevtool {
	public static final field CHEAP_MODULE_SOURCE_MAP Ljava/lang/String;
	public static final field CHEAP_SOURCE_MAP Ljava/lang/String;
	public static final field EVAL Ljava/lang/String;
	public static final field EVAL_CHEAP_MODULE_SOURCE_MAP Ljava/lang/String;
	public static final field EVAL_CHEAP_SOURCE_MAP Ljava/lang/String;
	public static final field EVAL_NOSOURCES_CHEAP_MODULE_SOURCE_MAP Ljava/lang/String;
	public static final field EVAL_NOSOURCES_CHEAP_SOURCE_MAP Ljava/lang/String;
	public static final field EVAL_NOSOURCES_SOURCE_MAP Ljava/lang/String;
	public static final field EVAL_SOURCE_MAP Ljava/lang/String;
	public static final field HIDDEN_CHEAP_MODULE_SOURCE_MAP Ljava/lang/String;
	public static final field HIDDEN_CHEAP_SOURCE_MAP Ljava/lang/String;
	public static final field HIDDEN_NOSOURCES_CHEAP_MODULE_SOURCE_MAP Ljava/lang/String;
	public static final field HIDDEN_NOSOURCES_CHEAP_SOURCE_MAP Ljava/lang/String;
	public static final field HIDDEN_NOSOURCES_SOURCE_MAP Ljava/lang/String;
	public static final field HIDDEN_SOURCE_MAP Ljava/lang/String;
	public static final field INLINE_CHEAP_MODULE_SOURCE_MAP Ljava/lang/String;
	public static final field INLINE_CHEAP_SOURCE_MAP Ljava/lang/String;
	public static final field INLINE_NOSOURCES_CHEAP_MODULE_SOURCE_MAP Ljava/lang/String;
	public static final field INLINE_NOSOURCES_CHEAP_SOURCE_MAP Ljava/lang/String;
	public static final field INLINE_NOSOURCES_SOURCE_MAP Ljava/lang/String;
	public static final field INLINE_SOURCE_MAP Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/targets/js/webpack/WebpackDevtool;
	public static final field NOSOURCES_CHEAP_MODULE_SOURCE_MAP Ljava/lang/String;
	public static final field NOSOURCES_CHEAP_SOURCE_MAP Ljava/lang/String;
	public static final field NOSOURCES_SOURCE_MAP Ljava/lang/String;
	public static final field SOURCE_MAP Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/webpack/WebpackLogClient : org/jetbrains/kotlin/gradle/internal/TeamCityMessageCommonClient {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/webpack/WebpackLogClient$Companion;
	public fun <init> (Lorg/jetbrains/kotlin/gradle/internal/LogType;Lorg/gradle/api/logging/Logger;Lorg/jetbrains/kotlin/gradle/targets/js/webpack/InfrastructureLogged;)V
	public fun regularText (Ljava/lang/String;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/webpack/WebpackLogClient$Companion {
}

public final class org/jetbrains/kotlin/gradle/targets/js/yarn/LockCopyTaskKt {
	public static final fun fromLockFileMismatchReport (Lorg/jetbrains/kotlin/gradle/targets/js/npm/LockFileMismatchReport;)Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnLockMismatchReport;
}

public final class org/jetbrains/kotlin/gradle/targets/js/yarn/Yarn : org/jetbrains/kotlin/gradle/targets/js/npm/NpmApiExecution {
	public fun <init> ()V
	public synthetic fun prepareRootProject (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/PackageManagerEnvironment;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V
	public fun prepareRootProject (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnEnvironment;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V
	public fun preparedFiles (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;)Ljava/util/Collection;
	public synthetic fun resolveRootProject (Lorg/gradle/internal/service/ServiceRegistry;Lorg/gradle/api/logging/Logger;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/PackageManagerEnvironment;Ljava/util/List;)V
	public fun resolveRootProject (Lorg/gradle/internal/service/ServiceRegistry;Lorg/gradle/api/logging/Logger;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnEnvironment;Ljava/util/List;)V
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/yarn/YarnBasics : org/jetbrains/kotlin/gradle/targets/js/npm/NpmApiExecution {
	public fun <init> ()V
	public final fun yarnExec (Lorg/gradle/internal/service/ServiceRegistry;Lorg/gradle/api/logging/Logger;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnEnvironment;Ljava/io/File;Ljava/lang/String;Ljava/util/List;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/yarn/YarnEnv : org/jetbrains/kotlin/gradle/targets/js/AbstractEnv {
	public fun <init> (ZLjava/lang/String;ZLorg/jetbrains/kotlin/gradle/tasks/internal/CleanableStore;Ljava/io/File;Ljava/lang/String;Ljava/lang/String;ZLorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnLockMismatchReport;ZZLjava/util/List;)V
	public final fun component1 ()Z
	public final fun component10 ()Z
	public final fun component11 ()Z
	public final fun component12 ()Ljava/util/List;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Z
	public final fun component4 ()Lorg/jetbrains/kotlin/gradle/tasks/internal/CleanableStore;
	public final fun component5 ()Ljava/io/File;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ljava/lang/String;
	public final fun component8 ()Z
	public final fun component9 ()Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnLockMismatchReport;
	public final fun copy (ZLjava/lang/String;ZLorg/jetbrains/kotlin/gradle/tasks/internal/CleanableStore;Ljava/io/File;Ljava/lang/String;Ljava/lang/String;ZLorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnLockMismatchReport;ZZLjava/util/List;)Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnEnv;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnEnv;ZLjava/lang/String;ZLorg/jetbrains/kotlin/gradle/tasks/internal/CleanableStore;Ljava/io/File;Ljava/lang/String;Ljava/lang/String;ZLorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnLockMismatchReport;ZZLjava/util/List;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnEnv;
	public fun equals (Ljava/lang/Object;)Z
	public fun getAllowInsecureProtocol ()Z
	public fun getCleanableStore ()Lorg/jetbrains/kotlin/gradle/tasks/internal/CleanableStore;
	public fun getDir ()Ljava/io/File;
	public fun getDownload ()Z
	public fun getDownloadBaseUrl ()Ljava/lang/String;
	public fun getExecutable ()Ljava/lang/String;
	public final fun getIgnoreScripts ()Z
	public fun getIvyDependency ()Ljava/lang/String;
	public final fun getReportNewYarnLock ()Z
	public final fun getStandalone ()Z
	public final fun getYarnLockAutoReplace ()Z
	public final fun getYarnLockMismatchReport ()Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnLockMismatchReport;
	public final fun getYarnResolutions ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/yarn/YarnEnvironment : org/jetbrains/kotlin/gradle/targets/js/nodejs/PackageManagerEnvironment {
	public fun <init> (Ljava/lang/String;ZZLjava/util/List;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;ZZLjava/util/List;)Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnEnvironment;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnEnvironment;Ljava/lang/String;ZZLjava/util/List;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnEnvironment;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExecutable ()Ljava/lang/String;
	public final fun getIgnoreScripts ()Z
	public final fun getStandalone ()Z
	public final fun getYarnResolutions ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/yarn/YarnLockCopyTask : org/jetbrains/kotlin/gradle/targets/js/npm/LockCopyTask {
	public fun <init> ()V
}

public final class org/jetbrains/kotlin/gradle/targets/js/yarn/YarnLockMismatchReport : java/lang/Enum {
	public static final field FAIL Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnLockMismatchReport;
	public static final field NONE Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnLockMismatchReport;
	public static final field WARNING Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnLockMismatchReport;
	public final fun toLockFileMismatchReport ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/LockFileMismatchReport;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnLockMismatchReport;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnLockMismatchReport;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/yarn/YarnLockStoreTask : org/jetbrains/kotlin/gradle/targets/js/npm/LockStoreTask {
	public fun <init> ()V
	public final fun getReportNewYarnLock ()Lorg/gradle/api/provider/Provider;
	public final fun getYarnLockAutoReplace ()Lorg/gradle/api/provider/Provider;
	public final fun getYarnLockMismatchReport ()Lorg/gradle/api/provider/Provider;
}

public class org/jetbrains/kotlin/gradle/targets/js/yarn/YarnPlugin : org/gradle/api/Plugin {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnPlugin$Companion;
	public static final field RESTORE_YARN_LOCK_NAME Ljava/lang/String;
	public static final field STORE_YARN_LOCK_NAME Ljava/lang/String;
	public static final field UPGRADE_YARN_LOCK Ljava/lang/String;
	public static final field YARN_LOCK_MISMATCH_MESSAGE Ljava/lang/String;
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/yarn/YarnPlugin$Companion {
	public final fun apply (Lorg/gradle/api/Project;)Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnRootExtension;
}

public final class org/jetbrains/kotlin/gradle/targets/js/yarn/YarnResolution : java/io/Serializable {
	public fun <init> (Ljava/lang/String;)V
	public final fun exclude ([Ljava/lang/String;)V
	public final fun getExcludedVersions ()Ljava/util/List;
	public final fun getIncludedVersions ()Ljava/util/List;
	public final fun getPath ()Ljava/lang/String;
	public final fun include ([Ljava/lang/String;)V
	public final fun setExcludedVersions (Ljava/util/List;)V
	public final fun setIncludedVersions (Ljava/util/List;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/yarn/YarnResolutionsKt {
	public static final fun toVersionString (Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnResolution;)Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/yarn/YarnRootEnvSpec : org/jetbrains/kotlin/gradle/targets/js/EnvSpec {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnRootEnvSpec$Companion;
	public static final field YARN Ljava/lang/String;
	public fun <init> ()V
	public fun getExecutable ()Lorg/gradle/api/provider/Provider;
	public abstract fun getIgnoreScripts ()Lorg/gradle/api/provider/Property;
	public abstract fun getReportNewYarnLock ()Lorg/gradle/api/provider/Property;
	public abstract fun getResolutions ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getYarnLockAutoReplace ()Lorg/gradle/api/provider/Property;
	public abstract fun getYarnLockMismatchReport ()Lorg/gradle/api/provider/Property;
	protected final fun produceEnv ()Lorg/gradle/api/provider/Provider;
}

public final class org/jetbrains/kotlin/gradle/targets/js/yarn/YarnRootEnvSpec$Companion {
}

public class org/jetbrains/kotlin/gradle/targets/js/yarn/YarnRootExtension : org/jetbrains/kotlin/gradle/targets/js/AbstractSettings, org/jetbrains/kotlin/gradle/targets/js/nodejs/NpmApiExtension {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnRootExtension$Companion;
	public static final field YARN Ljava/lang/String;
	public fun <init> (Lorg/gradle/api/Project;Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsRootExtension;Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnRootEnvSpec;)V
	public synthetic fun finalizeConfiguration ()Ljava/lang/Object;
	protected fun finalizeConfiguration ()Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnEnv;
	public fun getAdditionalInstallOutput ()Lorg/gradle/api/file/FileCollection;
	public synthetic fun getEnvironment ()Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/PackageManagerEnvironment;
	public fun getEnvironment ()Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnEnvironment;
	public final fun getIgnoreScripts ()Z
	public final fun getLockFileDirectory ()Ljava/io/File;
	public final fun getLockFileName ()Ljava/lang/String;
	public final fun getNodeJsRoot ()Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/NodeJsRootExtension;
	public synthetic fun getPackageManager ()Lorg/jetbrains/kotlin/gradle/targets/js/npm/NpmApiExecution;
	public fun getPackageManager ()Lorg/jetbrains/kotlin/gradle/targets/js/yarn/Yarn;
	public fun getPostInstallTasks ()Lorg/gradle/api/provider/ListProperty;
	public fun getPreInstallTasks ()Lorg/gradle/api/provider/ListProperty;
	public final fun getProject ()Lorg/gradle/api/Project;
	public final fun getReportNewYarnLock ()Z
	public final fun getResolutions ()Ljava/util/List;
	public final fun getRestoreYarnLockTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public final fun getStoreYarnLockTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public final fun getYarnLockAutoReplace ()Z
	public final fun getYarnLockMismatchReport ()Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnLockMismatchReport;
	public final fun getYarnSetupTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public final fun resolution (Ljava/lang/String;Ljava/lang/String;)V
	public final fun resolution (Ljava/lang/String;Lorg/gradle/api/Action;)V
	public final fun setIgnoreScripts (Z)V
	public final fun setLockFileDirectory (Ljava/io/File;)V
	public final fun setLockFileName (Ljava/lang/String;)V
	public final fun setReportNewYarnLock (Z)V
	public final fun setResolutions (Ljava/util/List;)V
	public final fun setYarnLockAutoReplace (Z)V
	public final fun setYarnLockMismatchReport (Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnLockMismatchReport;)V
}

public final class org/jetbrains/kotlin/gradle/targets/js/yarn/YarnRootExtension$Companion {
	public final fun get (Lorg/gradle/api/Project;)Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnRootExtension;
}

public final class org/jetbrains/kotlin/gradle/targets/js/yarn/YarnRootExtensionKt {
	public static final fun getYarn (Lorg/gradle/api/Project;)Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnRootExtension;
}

public abstract class org/jetbrains/kotlin/gradle/targets/js/yarn/YarnSetupTask : org/jetbrains/kotlin/gradle/targets/js/AbstractSetupTask {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnSetupTask$Companion;
	public static final field NAME Ljava/lang/String;
	public fun <init> (Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnRootEnvSpec;)V
	public fun extract (Ljava/io/File;)V
	protected fun getArtifactModule ()Ljava/lang/String;
	protected fun getArtifactName ()Ljava/lang/String;
	protected fun getArtifactPattern ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/js/yarn/YarnSetupTask$Companion {
}

public final class org/jetbrains/kotlin/gradle/targets/js/yarn/YarnWorkspaces : org/jetbrains/kotlin/gradle/targets/js/yarn/YarnBasics {
	public fun <init> ()V
	public synthetic fun prepareRootProject (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/PackageManagerEnvironment;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V
	public fun prepareRootProject (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnEnvironment;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V
	public fun preparedFiles (Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;)Ljava/util/Collection;
	public synthetic fun resolveRootProject (Lorg/gradle/internal/service/ServiceRegistry;Lorg/gradle/api/logging/Logger;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;Lorg/jetbrains/kotlin/gradle/targets/js/nodejs/PackageManagerEnvironment;Ljava/util/List;)V
	public fun resolveRootProject (Lorg/gradle/internal/service/ServiceRegistry;Lorg/gradle/api/logging/Logger;Lorg/jetbrains/kotlin/gradle/targets/js/npm/NodeJsEnvironment;Lorg/jetbrains/kotlin/gradle/targets/js/yarn/YarnEnvironment;Ljava/util/List;)V
}

public abstract class org/jetbrains/kotlin/gradle/targets/jvm/KotlinJvmTarget : org/jetbrains/kotlin/gradle/plugin/mpp/KotlinOnlyTarget, org/jetbrains/kotlin/gradle/dsl/HasConfigurableKotlinCompilerOptions, org/jetbrains/kotlin/gradle/plugin/KotlinTargetWithTests {
	public fun <init> (Lorg/gradle/api/Project;)V
	public fun compilerOptions (Lkotlin/jvm/functions/Function1;)V
	public fun compilerOptions (Lorg/gradle/api/Action;)V
	public synthetic fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions;
	public fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmCompilerOptions;
	public fun getTestRuns ()Lorg/gradle/api/NamedDomainObjectContainer;
	public final fun getWithJavaEnabled ()Z
	public final fun mainRun (Lkotlin/jvm/functions/Function1;)V
	public final fun withJava ()V
}

public class org/jetbrains/kotlin/gradle/targets/jvm/KotlinJvmTargetConfigurator : org/jetbrains/kotlin/gradle/plugin/KotlinOnlyTargetConfigurator {
	public fun <init> ()V
}

public class org/jetbrains/kotlin/gradle/targets/jvm/KotlinJvmTestRun : org/jetbrains/kotlin/gradle/testing/KotlinTaskTestRun, org/jetbrains/kotlin/gradle/plugin/ClasspathTestRunSourceSupport, org/jetbrains/kotlin/gradle/plugin/CompilationExecutionSourceSupport {
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/targets/jvm/KotlinJvmTarget;)V
	public final fun getExecutionSource ()Lorg/jetbrains/kotlin/gradle/plugin/JvmClasspathTestRunSource;
	public synthetic fun getExecutionSource ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinExecution$ExecutionSource;
	public synthetic fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public fun getTarget ()Lorg/jetbrains/kotlin/gradle/targets/jvm/KotlinJvmTarget;
	public final fun setExecutionSourceFrom (Ljava/lang/Iterable;Ljava/lang/Iterable;)V
	public fun setExecutionSourceFrom (Lorg/gradle/api/file/FileCollection;Lorg/gradle/api/file/FileCollection;)V
	public synthetic fun setExecutionSourceFrom (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationToRunnableFiles;)V
	public fun setExecutionSourceFrom (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinJvmCompilation;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/jvm/tasks/KotlinJvmRunDsl {
	public abstract fun args (Ljava/lang/Iterable;)V
	public abstract fun args ([Ljava/lang/Object;)V
	public abstract fun classpath (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;)V
	public abstract fun classpath ([Ljava/lang/Object;)V
	public abstract fun getMainClass ()Lorg/gradle/api/provider/Property;
	public abstract fun setArgs (Ljava/lang/Iterable;)V
	public abstract fun setClasspath (Lorg/gradle/api/file/FileCollection;)V
}

public abstract class org/jetbrains/kotlin/gradle/targets/jvm/tasks/KotlinJvmTest : org/gradle/api/tasks/testing/Test {
	public fun <init> ()V
	protected fun createTestExecuter ()Lorg/gradle/api/internal/tasks/testing/TestExecuter;
	public final fun getTargetName ()Ljava/lang/String;
	public final fun setTargetName (Ljava/lang/String;)V
}

public final class org/jetbrains/kotlin/gradle/targets/jvm/tasks/KotlinJvmTest$Executor : org/gradle/api/internal/tasks/testing/TestExecuter {
	public fun <init> (Lorg/gradle/api/internal/tasks/testing/TestExecuter;Ljava/lang/String;)V
	public fun execute (Lorg/gradle/api/internal/tasks/testing/JvmTestExecutionSpec;Lorg/gradle/api/internal/tasks/testing/TestResultProcessor;)V
	public synthetic fun execute (Lorg/gradle/api/internal/tasks/testing/TestExecutionSpec;Lorg/gradle/api/internal/tasks/testing/TestResultProcessor;)V
	public fun stopNow ()V
}

public final class org/jetbrains/kotlin/gradle/targets/metadata/KotlinMetadataTargetConfigurator : org/jetbrains/kotlin/gradle/plugin/KotlinOnlyTargetConfigurator {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/metadata/KotlinMetadataTargetConfigurator$Companion;
	public fun <init> ()V
	public synthetic fun configureTarget (Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;)V
	public fun configureTarget (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinMetadataTarget;)V
}

public final class org/jetbrains/kotlin/gradle/targets/metadata/KotlinMetadataTargetConfigurator$Companion {
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/AbstractKotlinNativeTestRun : org/jetbrains/kotlin/gradle/testing/KotlinTaskTestRun, org/jetbrains/kotlin/gradle/targets/native/KotlinNativeBinaryTestRun {
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTarget;)V
	public synthetic fun getExecutionSource ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinExecution$ExecutionSource;
	public final fun getExecutionSource ()Lorg/jetbrains/kotlin/gradle/targets/native/NativeBinaryTestRunSource;
	public fun setExecutionSourceFrom (Lorg/jetbrains/kotlin/gradle/plugin/mpp/TestExecutable;)V
}

public class org/jetbrains/kotlin/gradle/targets/native/DefaultHostTestRun : org/jetbrains/kotlin/gradle/targets/native/AbstractKotlinNativeTestRun, org/jetbrains/kotlin/gradle/targets/native/KotlinNativeHostTestRun {
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTarget;)V
}

public class org/jetbrains/kotlin/gradle/targets/native/DefaultSimulatorTestRun : org/jetbrains/kotlin/gradle/targets/native/AbstractKotlinNativeTestRun, org/jetbrains/kotlin/gradle/targets/native/KotlinNativeSimulatorTestRun {
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTarget;)V
	public fun getDeviceId ()Ljava/lang/String;
	public fun setDeviceId (Ljava/lang/String;)V
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/KonanPropertiesBuildService : org/gradle/api/services/BuildService {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/native/KonanPropertiesBuildService$Companion;
	public fun <init> ()V
}

public final class org/jetbrains/kotlin/gradle/targets/native/KonanPropertiesBuildService$Companion {
	public final fun registerIfAbsent (Lorg/gradle/api/Project;)Lorg/gradle/api/provider/Provider;
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/native/KotlinNativeBinaryTestRun : org/jetbrains/kotlin/gradle/plugin/KotlinTargetTestRun {
	public abstract fun setExecutionSourceFrom (Lorg/jetbrains/kotlin/gradle/plugin/mpp/TestExecutable;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/native/KotlinNativeHostTestRun : org/jetbrains/kotlin/gradle/targets/native/KotlinNativeBinaryTestRun {
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/native/KotlinNativeSimulatorTestRun : org/jetbrains/kotlin/gradle/targets/native/KotlinNativeBinaryTestRun {
	public abstract fun getDeviceId ()Ljava/lang/String;
	public abstract fun setDeviceId (Ljava/lang/String;)V
}

public final class org/jetbrains/kotlin/gradle/targets/native/NativeBinaryTestRunSource : org/jetbrains/kotlin/gradle/plugin/CompilationExecutionSource {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/plugin/mpp/TestExecutable;)V
	public final fun getBinary ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/TestExecutable;
	public synthetic fun getCompilation ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;
	public fun getCompilation ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeCompilation;
}

public final class org/jetbrains/kotlin/gradle/targets/native/NativeCompilerOptions : org/jetbrains/kotlin/gradle/plugin/HasCompilerOptions {
	public fun <init> (Lorg/gradle/api/Project;)V
	public fun configure (Lkotlin/jvm/functions/Function1;)V
	public fun configure (Lorg/gradle/api/Action;)V
	public synthetic fun getOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions;
	public fun getOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinNativeCompilerOptions;
}

public final class org/jetbrains/kotlin/gradle/targets/native/cocoapods/CocoapodsPluginDiagnostics$DeprecatedPropertiesUsed : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/targets/native/cocoapods/CocoapodsPluginDiagnostics$DeprecatedPropertiesUsed;
	public final fun invoke (Ljava/util/List;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/targets/native/cocoapods/CocoapodsPluginDiagnostics$EmbedAndSignUsedWithPodDependencies : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/targets/native/cocoapods/CocoapodsPluginDiagnostics$EmbedAndSignUsedWithPodDependencies;
	public final fun invoke ()Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/targets/native/cocoapods/CocoapodsPluginDiagnostics$InteropBindingSelfDependency : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/targets/native/cocoapods/CocoapodsPluginDiagnostics$InteropBindingSelfDependency;
	public final fun invoke (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/targets/native/cocoapods/CocoapodsPluginDiagnostics$InteropBindingUnknownDependency : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/targets/native/cocoapods/CocoapodsPluginDiagnostics$InteropBindingUnknownDependency;
	public final fun invoke (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/targets/native/cocoapods/CocoapodsPluginDiagnostics$LinkOnlyUsedWithStaticFramework : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/targets/native/cocoapods/CocoapodsPluginDiagnostics$LinkOnlyUsedWithStaticFramework;
	public final fun invoke (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public final class org/jetbrains/kotlin/gradle/targets/native/cocoapods/CocoapodsPluginDiagnostics$UnsupportedOs : org/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnosticFactory {
	public static final field INSTANCE Lorg/jetbrains/kotlin/gradle/targets/native/cocoapods/CocoapodsPluginDiagnostics$UnsupportedOs;
	public final fun invoke ()Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/cocoapods/KotlinArtifactsPodspecExtension {
	public fun <init> ()V
	public final fun attribute (Ljava/lang/String;Ljava/lang/String;)V
	public final fun rawStatement (Ljava/lang/String;)V
}

public final class org/jetbrains/kotlin/gradle/targets/native/cocoapods/MissingCocoapodsMessage : org/jetbrains/kotlin/gradle/targets/native/cocoapods/MissingInfoMessage {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency;)V
	public synthetic fun getMissingInfo ()Ljava/lang/Object;
	public fun getMissingInfo ()Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency;
	public fun getMissingMessage ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/kotlin/gradle/targets/native/cocoapods/MissingInfoMessage {
	public abstract fun getMissingInfo ()Ljava/lang/Object;
	public abstract fun getMissingMessage ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/targets/native/cocoapods/MissingSpecReposMessage : org/jetbrains/kotlin/gradle/targets/native/cocoapods/MissingInfoMessage {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$SpecRepos;)V
	public synthetic fun getMissingInfo ()Ljava/lang/Object;
	public fun getMissingInfo ()Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$SpecRepos;
	public fun getMissingMessage ()Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/tasks/AbstractPodInstallTask : org/jetbrains/kotlin/gradle/targets/native/tasks/CocoapodsTask {
	public fun <init> ()V
	public fun doPodInstall ()V
	public abstract fun getPodExecutablePath ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getPodfile ()Lorg/gradle/api/provider/Property;
	protected final fun getWorkingDir ()Lorg/gradle/api/provider/Provider;
	public abstract fun handleError (Lorg/jetbrains/kotlin/gradle/utils/RunProcessResult;)Ljava/lang/String;
}

public class org/jetbrains/kotlin/gradle/targets/native/tasks/CocoapodsTask : org/gradle/api/DefaultTask {
	public fun <init> ()V
}

public final class org/jetbrains/kotlin/gradle/targets/native/tasks/CocoapodsTaskKt {
	public static final fun getSchemeName (Lorg/jetbrains/kotlin/gradle/plugin/cocoapods/CocoapodsExtension$CocoapodsDependency;)Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/tasks/GenerateArtifactPodspecTask : org/gradle/api/DefaultTask {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/native/tasks/GenerateArtifactPodspecTask$Companion;
	public fun <init> ()V
	public final fun generate ()V
	public abstract fun getArtifactType ()Lorg/gradle/api/provider/Property;
	public abstract fun getAttributes ()Lorg/gradle/api/provider/MapProperty;
	public abstract fun getDependencies ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getDestinationDir ()Lorg/gradle/api/file/DirectoryProperty;
	public final fun getOutputFile ()Lorg/gradle/api/provider/Provider;
	public abstract fun getRawStatements ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getSpecName ()Lorg/gradle/api/provider/Property;
	public abstract fun getSpecVersion ()Lorg/gradle/api/provider/Property;
}

public final class org/jetbrains/kotlin/gradle/targets/native/tasks/GenerateArtifactPodspecTask$ArtifactType : java/lang/Enum {
	public static final field DynamicLibrary Lorg/jetbrains/kotlin/gradle/targets/native/tasks/GenerateArtifactPodspecTask$ArtifactType;
	public static final field FatFramework Lorg/jetbrains/kotlin/gradle/targets/native/tasks/GenerateArtifactPodspecTask$ArtifactType;
	public static final field Framework Lorg/jetbrains/kotlin/gradle/targets/native/tasks/GenerateArtifactPodspecTask$ArtifactType;
	public static final field StaticLibrary Lorg/jetbrains/kotlin/gradle/targets/native/tasks/GenerateArtifactPodspecTask$ArtifactType;
	public static final field XCFramework Lorg/jetbrains/kotlin/gradle/targets/native/tasks/GenerateArtifactPodspecTask$ArtifactType;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/native/tasks/GenerateArtifactPodspecTask$ArtifactType;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/targets/native/tasks/GenerateArtifactPodspecTask$ArtifactType;
}

public final class org/jetbrains/kotlin/gradle/targets/native/tasks/GenerateArtifactPodspecTask$Companion {
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/tasks/KotlinNativeHostTest : org/jetbrains/kotlin/gradle/targets/native/tasks/KotlinNativeTest {
	public fun <init> ()V
	protected fun getTestCommand ()Lorg/jetbrains/kotlin/gradle/targets/native/tasks/KotlinNativeTest$TestCommand;
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/tasks/KotlinNativeSimulatorTest : org/jetbrains/kotlin/gradle/targets/native/tasks/KotlinNativeTest {
	public fun <init> ()V
	public synthetic fun createTestExecutionSpec ()Lorg/gradle/api/internal/tasks/testing/TestExecutionSpec;
	protected fun createTestExecutionSpec ()Lorg/jetbrains/kotlin/gradle/internal/testing/TCServiceMessagesTestExecutionSpec;
	public final fun getDebugMode ()Z
	public abstract fun getDevice ()Lorg/gradle/api/provider/Property;
	public final fun getDeviceId ()Ljava/lang/String;
	public abstract fun getStandalone ()Lorg/gradle/api/provider/Property;
	protected fun getTestCommand ()Lorg/jetbrains/kotlin/gradle/targets/native/tasks/KotlinNativeTest$TestCommand;
	public final fun setDebugMode (Z)V
	public final fun setDeviceId (Ljava/lang/String;)V
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/tasks/KotlinNativeTest : org/jetbrains/kotlin/gradle/tasks/KotlinTest {
	public fun <init> ()V
	public synthetic fun createTestExecutionSpec ()Lorg/gradle/api/internal/tasks/testing/TestExecutionSpec;
	protected fun createTestExecutionSpec ()Lorg/jetbrains/kotlin/gradle/internal/testing/TCServiceMessagesTestExecutionSpec;
	public final fun environment (Ljava/lang/String;Ljava/lang/Object;)V
	public final fun environment (Ljava/lang/String;Ljava/lang/Object;Z)V
	public static synthetic fun environment$default (Lorg/jetbrains/kotlin/gradle/targets/native/tasks/KotlinNativeTest;Ljava/lang/String;Ljava/lang/Object;ZILjava/lang/Object;)V
	public final fun executable (Lgroovy/lang/Closure;)V
	public final fun executable (Ljava/io/File;)V
	public final fun executable (Ljava/lang/String;)V
	public final fun executable (Lkotlin/jvm/functions/Function0;)V
	public final fun executable (Lorg/gradle/api/Task;Lkotlin/jvm/functions/Function0;)V
	public final fun executable (Lorg/gradle/api/provider/Provider;)V
	public final fun getArgs ()Ljava/util/List;
	public final fun getEnvironment ()Ljava/util/Map;
	public final fun getExecutable ()Ljava/io/File;
	public final fun getExecutableProperty ()Lorg/gradle/api/provider/Property;
	public abstract fun getProviderFactory ()Lorg/gradle/api/provider/ProviderFactory;
	protected abstract fun getTestCommand ()Lorg/jetbrains/kotlin/gradle/targets/native/tasks/KotlinNativeTest$TestCommand;
	public final fun getTrackedEnvironment ()Ljava/util/Map;
	public final fun getWorkingDir ()Ljava/lang/String;
	public final fun setArgs (Ljava/util/List;)V
	public final fun setEnvironment (Ljava/util/Map;)V
	public final fun setExecutable (Ljava/io/File;)V
	public final fun setWorkingDir (Ljava/lang/String;)V
	public final fun trackEnvironment (Ljava/lang/String;)V
	public final fun trackEnvironment (Ljava/lang/String;Z)V
	public static synthetic fun trackEnvironment$default (Lorg/jetbrains/kotlin/gradle/targets/native/tasks/KotlinNativeTest;Ljava/lang/String;ZILjava/lang/Object;)V
}

protected abstract class org/jetbrains/kotlin/gradle/targets/native/tasks/KotlinNativeTest$TestCommand {
	public fun <init> ()V
	public abstract fun cliArgs (Ljava/lang/String;ZLjava/util/Set;Ljava/util/Set;Ljava/util/List;)Ljava/util/List;
	public abstract fun getExecutable ()Ljava/lang/String;
	protected final fun testArgs (Ljava/lang/String;ZLjava/util/Set;Ljava/util/Set;Ljava/util/List;)Ljava/util/List;
}

public class org/jetbrains/kotlin/gradle/targets/native/tasks/NativePerformanceReport : org/gradle/api/DefaultTask {
	public field binary Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBinary;
	public field settings Lorg/jetbrains/kotlin/gradle/plugin/performance/PerformanceExtension;
	public field timeListener Lorg/jetbrains/kotlin/gradle/plugin/performance/TaskTimerListener;
	public fun <init> ()V
	public final fun generate ()V
	public final fun getBinary ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBinary;
	public final fun getOutputFile ()Ljava/io/File;
	public final fun getReportDirectory ()Ljava/io/File;
	public final fun getSettings ()Lorg/jetbrains/kotlin/gradle/plugin/performance/PerformanceExtension;
	public final fun getTimeListener ()Lorg/jetbrains/kotlin/gradle/plugin/performance/TaskTimerListener;
	public final fun setBinary (Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBinary;)V
	public final fun setSettings (Lorg/jetbrains/kotlin/gradle/plugin/performance/PerformanceExtension;)V
	public final fun setTimeListener (Lorg/jetbrains/kotlin/gradle/plugin/performance/TaskTimerListener;)V
}

public final class org/jetbrains/kotlin/gradle/targets/native/tasks/PodBuildSettingsProperties {
	public static final field BUILD_DIR Ljava/lang/String;
	public static final field CONFIGURATION Ljava/lang/String;
	public static final field CONFIGURATION_BUILD_DIR Ljava/lang/String;
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/native/tasks/PodBuildSettingsProperties$Companion;
	public static final field FRAMEWORK_SEARCH_PATHS Ljava/lang/String;
	public static final field HEADER_SEARCH_PATHS Ljava/lang/String;
	public static final field OTHER_CFLAGS Ljava/lang/String;
	public static final field PODS_TARGET_SRCROOT Ljava/lang/String;
	public static final field PUBLIC_HEADERS_FOLDER_PATH Ljava/lang/String;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/targets/native/tasks/PodBuildSettingsProperties;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/targets/native/tasks/PodBuildSettingsProperties;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/targets/native/tasks/PodBuildSettingsProperties;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getConfigurationBuildDir ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
	public final fun writeSettings (Ljava/io/File;)V
}

public final class org/jetbrains/kotlin/gradle/targets/native/tasks/PodBuildSettingsProperties$Companion {
	public final fun readSettingsFromReader (Ljava/io/Reader;)Lorg/jetbrains/kotlin/gradle/targets/native/tasks/PodBuildSettingsProperties;
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/tasks/PodBuildTask : org/jetbrains/kotlin/gradle/targets/native/tasks/CocoapodsTask {
	public fun <init> (Lorg/gradle/api/provider/ProviderFactory;Lorg/gradle/api/file/ProjectLayout;Lorg/gradle/api/model/ObjectFactory;)V
	public final fun buildDependencies ()V
	public abstract fun getBuildSettingsFile ()Lorg/gradle/api/file/RegularFileProperty;
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/tasks/PodGenTask : org/jetbrains/kotlin/gradle/targets/native/tasks/CocoapodsTask, org/jetbrains/kotlin/gradle/plugin/mpp/apple/UsesXcodeVersion {
	public fun <init> (Lorg/gradle/api/file/ProjectLayout;)V
	public final fun generate ()V
	public final fun getPodfile ()Lorg/gradle/api/provider/Provider;
	public fun getXcodeVersion ()Lorg/jetbrains/kotlin/konan/target/XcodeVersion;
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/tasks/PodInstallSyntheticTask : org/jetbrains/kotlin/gradle/targets/native/tasks/AbstractPodInstallTask {
	public fun <init> ()V
	public fun doPodInstall ()V
	public abstract fun getFamily ()Lorg/gradle/api/provider/Property;
	public abstract fun getPodName ()Lorg/gradle/api/provider/Property;
	public fun handleError (Lorg/jetbrains/kotlin/gradle/utils/RunProcessResult;)Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/tasks/PodInstallTask : org/jetbrains/kotlin/gradle/targets/native/tasks/AbstractPodInstallTask {
	public fun <init> ()V
	public abstract fun getFrameworkName ()Lorg/gradle/api/provider/Property;
	public abstract fun getPods ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getPodspec ()Lorg/gradle/api/provider/Property;
	public abstract fun getSpecRepos ()Lorg/gradle/api/provider/Property;
	public abstract fun getUseStaticFramework ()Lorg/gradle/api/provider/Property;
	public fun handleError (Lorg/jetbrains/kotlin/gradle/utils/RunProcessResult;)Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/tasks/PodSetupBuildTask : org/jetbrains/kotlin/gradle/targets/native/tasks/CocoapodsTask {
	public fun <init> (Lorg/gradle/api/file/ProjectLayout;)V
	public final fun getBuildSettingsFile ()Lorg/gradle/api/provider/Provider;
	public abstract fun getFrameworkName ()Lorg/gradle/api/provider/Property;
	public abstract fun getPod ()Lorg/gradle/api/provider/Property;
	public final fun setupBuild ()V
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinArtifactConfigImpl : org/jetbrains/kotlin/gradle/dsl/KotlinArtifactConfig {
	public fun <init> (Ljava/lang/String;)V
	public fun addModule (Ljava/lang/Object;)V
	public fun getArtifactName ()Ljava/lang/String;
	public fun getModules ()Ljava/util/Set;
	public fun setModules ([Ljava/lang/Object;)V
	protected fun validate ()V
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinArtifactsExtensionImpl : org/jetbrains/kotlin/gradle/dsl/KotlinArtifactsExtension {
	public final field EmbedBitcodeMode Lorg/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinArtifactsExtensionImpl$BitcodeEmbeddingModeDsl;
	public fun <init> (Lorg/gradle/api/Project;)V
	public final fun getAndroidArm32 ()Lorg/jetbrains/kotlin/konan/target/KonanTarget$ANDROID_ARM32;
	public final fun getAndroidArm64 ()Lorg/jetbrains/kotlin/konan/target/KonanTarget$ANDROID_ARM64;
	public final fun getAndroidX64 ()Lorg/jetbrains/kotlin/konan/target/KonanTarget$ANDROID_X64;
	public final fun getAndroidX86 ()Lorg/jetbrains/kotlin/konan/target/KonanTarget$ANDROID_X86;
	public fun getArtifactConfigs ()Lorg/gradle/api/DomainObjectSet;
	public fun getArtifacts ()Lorg/gradle/api/NamedDomainObjectSet;
	public final fun getDEBUG ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;
	public final fun getIosArm64 ()Lorg/jetbrains/kotlin/konan/target/KonanTarget$IOS_ARM64;
	public final fun getIosSimulatorArm64 ()Lorg/jetbrains/kotlin/konan/target/KonanTarget$IOS_SIMULATOR_ARM64;
	public final fun getIosX64 ()Lorg/jetbrains/kotlin/konan/target/KonanTarget$IOS_X64;
	public final fun getLinuxArm32Hfp ()Lorg/jetbrains/kotlin/konan/target/KonanTarget$LINUX_ARM32_HFP;
	public final fun getLinuxArm64 ()Lorg/jetbrains/kotlin/konan/target/KonanTarget$LINUX_ARM64;
	public final fun getLinuxX64 ()Lorg/jetbrains/kotlin/konan/target/KonanTarget$LINUX_X64;
	public final fun getMacosArm64 ()Lorg/jetbrains/kotlin/konan/target/KonanTarget$MACOS_ARM64;
	public final fun getMacosX64 ()Lorg/jetbrains/kotlin/konan/target/KonanTarget$MACOS_X64;
	public final fun getMingwX64 ()Lorg/jetbrains/kotlin/konan/target/KonanTarget$MINGW_X64;
	public synthetic fun getNative ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinNativeArtifactDSL;
	public fun getNative ()Lorg/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeArtifactDSLImpl;
	public final fun getRELEASE ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;
	public final fun getTvosArm64 ()Lorg/jetbrains/kotlin/konan/target/KonanTarget$TVOS_ARM64;
	public final fun getTvosSimulatorArm64 ()Lorg/jetbrains/kotlin/konan/target/KonanTarget$TVOS_SIMULATOR_ARM64;
	public final fun getTvosX64 ()Lorg/jetbrains/kotlin/konan/target/KonanTarget$TVOS_X64;
	public final fun getWatchosArm32 ()Lorg/jetbrains/kotlin/konan/target/KonanTarget$WATCHOS_ARM32;
	public final fun getWatchosArm64 ()Lorg/jetbrains/kotlin/konan/target/KonanTarget$WATCHOS_ARM64;
	public final fun getWatchosDeviceArm64 ()Lorg/jetbrains/kotlin/konan/target/KonanTarget$WATCHOS_DEVICE_ARM64;
	public final fun getWatchosSimulatorArm64 ()Lorg/jetbrains/kotlin/konan/target/KonanTarget$WATCHOS_SIMULATOR_ARM64;
	public final fun getWatchosX64 ()Lorg/jetbrains/kotlin/konan/target/KonanTarget$WATCHOS_X64;
}

public final class org/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinArtifactsExtensionImpl$BitcodeEmbeddingModeDsl {
	public fun <init> ()V
	public final fun getBITCODE ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
	public final fun getDISABLE ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
	public final fun getMARKER ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
}

public final class org/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinArtifactsExtensionKt {
	public static final fun getKotlinArtifactsExtension (Lorg/gradle/api/Project;)Lorg/jetbrains/kotlin/gradle/dsl/KotlinArtifactsExtension;
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeArtifactConfigImpl : org/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinArtifactConfigImpl, org/jetbrains/kotlin/gradle/dsl/KotlinNativeArtifactConfig {
	public fun <init> (Ljava/lang/String;)V
	public fun binaryOption (Ljava/lang/String;Ljava/lang/String;)V
	public fun getLinkerOptions ()Ljava/util/List;
	public fun getModes ()Ljava/util/Set;
	public fun isStatic ()Z
	public fun kotlinOptions (Lorg/gradle/api/Action;)V
	public fun modes ([Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)V
	public fun setLinkerOptions (Ljava/util/List;)V
	public fun setModes (Ljava/util/Set;)V
	public fun setStatic (Z)V
	public fun toolOptions (Lorg/gradle/api/Action;)V
	protected fun validate ()V
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeArtifactDSLImpl : org/jetbrains/kotlin/gradle/dsl/KotlinNativeArtifactDSL {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeArtifactDSLImpl$Companion;
	public fun <init> (Lorg/gradle/api/Project;)V
	public fun FatFramework (Ljava/lang/String;Lorg/gradle/api/Action;)V
	public fun FatFramework (Lorg/gradle/api/Action;)V
	public fun Framework (Ljava/lang/String;Lorg/gradle/api/Action;)V
	public fun Framework (Lorg/gradle/api/Action;)V
	public fun Library (Ljava/lang/String;Lorg/gradle/api/Action;)V
	public fun Library (Lorg/gradle/api/Action;)V
	public fun XCFramework (Ljava/lang/String;Lorg/gradle/api/Action;)V
	public fun XCFramework (Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeArtifactDSLImpl$Companion {
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeFatFrameworkConfigImpl : org/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeArtifactConfigImpl, org/jetbrains/kotlin/gradle/dsl/KotlinNativeFatFrameworkConfig {
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun createArtifact (Lorg/gradle/api/plugins/ExtensionAware;)Lorg/jetbrains/kotlin/gradle/dsl/KotlinArtifact;
	public fun createArtifact (Lorg/gradle/api/plugins/ExtensionAware;)Lorg/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeFatFrameworkImpl;
	public fun getEmbedBitcode ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
	public fun getTargets ()Ljava/util/Set;
	public fun setEmbedBitcode (Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;)V
	public fun setTargets (Ljava/util/Set;)V
	public fun targets ([Lorg/jetbrains/kotlin/konan/target/KonanTarget;)V
	protected fun validate ()V
}

public final class org/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeFatFrameworkImpl : org/gradle/api/plugins/ExtensionAware, org/jetbrains/kotlin/gradle/dsl/KotlinNativeFatFramework {
	public fun <init> (Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;ZLjava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Ljava/util/Map;Ljava/util/Set;Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;Lorg/gradle/api/plugins/ExtensionAware;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;ZLjava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Ljava/util/Map;Ljava/util/Set;Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;Lorg/gradle/api/plugins/ExtensionAware;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getArtifactName ()Ljava/lang/String;
	public fun getBinaryOptions ()Ljava/util/Map;
	public fun getEmbedBitcode ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
	public fun getExtensions ()Lorg/gradle/api/plugins/ExtensionContainer;
	public fun getKotlinOptionsFn ()Lkotlin/jvm/functions/Function1;
	public fun getLinkerOptions ()Ljava/util/List;
	public fun getModes ()Ljava/util/Set;
	public fun getModules ()Ljava/util/Set;
	public fun getName ()Ljava/lang/String;
	public fun getOutDir ()Ljava/lang/String;
	public fun getTargets ()Ljava/util/Set;
	public fun getTaskName ()Ljava/lang/String;
	public fun getToolOptionsConfigure ()Lkotlin/jvm/functions/Function1;
	public fun isStatic ()Z
	public fun registerAssembleTask (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeFrameworkConfigImpl : org/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeArtifactConfigImpl, org/jetbrains/kotlin/gradle/dsl/KotlinNativeFrameworkConfig {
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun createArtifact (Lorg/gradle/api/plugins/ExtensionAware;)Lorg/jetbrains/kotlin/gradle/dsl/KotlinArtifact;
	public fun createArtifact (Lorg/gradle/api/plugins/ExtensionAware;)Lorg/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeFrameworkImpl;
	protected fun validate ()V
}

public final class org/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeFrameworkImpl : org/gradle/api/plugins/ExtensionAware, org/jetbrains/kotlin/gradle/dsl/KotlinNativeFramework {
	public fun <init> (Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;ZLjava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Ljava/util/Map;Lorg/jetbrains/kotlin/konan/target/KonanTarget;Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;Lorg/gradle/api/plugins/ExtensionAware;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;ZLjava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Ljava/util/Map;Lorg/jetbrains/kotlin/konan/target/KonanTarget;Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;Lorg/gradle/api/plugins/ExtensionAware;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getArtifactName ()Ljava/lang/String;
	public fun getBinaryOptions ()Ljava/util/Map;
	public fun getEmbedBitcode ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
	public fun getExtensions ()Lorg/gradle/api/plugins/ExtensionContainer;
	public fun getKotlinOptionsFn ()Lkotlin/jvm/functions/Function1;
	public fun getLinkerOptions ()Ljava/util/List;
	public fun getModes ()Ljava/util/Set;
	public fun getModules ()Ljava/util/Set;
	public fun getName ()Ljava/lang/String;
	public fun getOutDir ()Ljava/lang/String;
	public fun getTarget ()Lorg/jetbrains/kotlin/konan/target/KonanTarget;
	public fun getTaskName ()Ljava/lang/String;
	public fun getToolOptionsConfigure ()Lkotlin/jvm/functions/Function1;
	public fun isStatic ()Z
	public fun registerAssembleTask (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeLibraryConfigImpl : org/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeArtifactConfigImpl, org/jetbrains/kotlin/gradle/dsl/KotlinNativeLibraryConfig {
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun createArtifact (Lorg/gradle/api/plugins/ExtensionAware;)Lorg/jetbrains/kotlin/gradle/dsl/KotlinArtifact;
	public fun createArtifact (Lorg/gradle/api/plugins/ExtensionAware;)Lorg/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeLibraryImpl;
	protected fun validate ()V
}

public final class org/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeLibraryImpl : org/gradle/api/plugins/ExtensionAware, org/jetbrains/kotlin/gradle/dsl/KotlinNativeLibrary {
	public fun <init> (Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;ZLjava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Ljava/util/Map;Lorg/jetbrains/kotlin/konan/target/KonanTarget;Lorg/gradle/api/plugins/ExtensionAware;)V
	public fun getArtifactName ()Ljava/lang/String;
	public fun getBinaryOptions ()Ljava/util/Map;
	public fun getExtensions ()Lorg/gradle/api/plugins/ExtensionContainer;
	public fun getKotlinOptionsFn ()Lkotlin/jvm/functions/Function1;
	public fun getLinkerOptions ()Ljava/util/List;
	public fun getModes ()Ljava/util/Set;
	public fun getModules ()Ljava/util/Set;
	public fun getName ()Ljava/lang/String;
	public fun getOutDir ()Ljava/lang/String;
	public fun getTarget ()Lorg/jetbrains/kotlin/konan/target/KonanTarget;
	public fun getTaskName ()Ljava/lang/String;
	public fun getToolOptionsConfigure ()Lkotlin/jvm/functions/Function1;
	public fun isStatic ()Z
	public fun registerAssembleTask (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeLinkArtifactTask : org/gradle/api/DefaultTask, org/jetbrains/kotlin/gradle/internal/UsesClassLoadersCachingBuildService, org/jetbrains/kotlin/gradle/plugin/statistics/UsesBuildFusService, org/jetbrains/kotlin/gradle/report/UsesBuildMetricsService, org/jetbrains/kotlin/gradle/targets/native/UsesKonanPropertiesBuildService, org/jetbrains/kotlin/gradle/targets/native/toolchain/UsesKotlinNativeBundleBuildService, org/jetbrains/kotlin/gradle/tasks/KotlinToolTask {
	public fun <init> (Lorg/jetbrains/kotlin/konan/target/KonanTarget;Lorg/jetbrains/kotlin/konan/target/CompilerOutputKind;Lorg/gradle/api/model/ObjectFactory;Lorg/gradle/api/file/ProjectLayout;)V
	public final fun getAllWarningsAsErrors ()Z
	public abstract fun getBaseName ()Lorg/gradle/api/provider/Property;
	public abstract fun getBinaryOptions ()Lorg/gradle/api/provider/MapProperty;
	public abstract fun getDebuggable ()Lorg/gradle/api/provider/Property;
	public abstract fun getDestinationDir ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getEmbedBitcode ()Lorg/gradle/api/provider/Property;
	public abstract fun getEntryPoint ()Lorg/gradle/api/provider/Property;
	public abstract fun getExportLibraries ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public final fun getFreeCompilerArgs ()Ljava/util/List;
	public abstract fun getIncludeLibraries ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public final fun getKonanDataDir ()Lorg/gradle/api/provider/Provider;
	public final fun getKonanHome ()Lorg/gradle/api/provider/Provider;
	public final fun getKonanTarget ()Lorg/jetbrains/kotlin/konan/target/KonanTarget;
	public final fun getKotlinOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonToolOptions;
	public abstract fun getLibraries ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getLinkerOptions ()Lorg/gradle/api/provider/ListProperty;
	public final fun getMetrics ()Lorg/gradle/api/provider/Property;
	public abstract fun getOptimized ()Lorg/gradle/api/provider/Property;
	public final fun getOutputFile ()Lorg/gradle/api/provider/Provider;
	public final fun getOutputKind ()Lorg/jetbrains/kotlin/konan/target/CompilerOutputKind;
	public abstract fun getProcessTests ()Lorg/gradle/api/provider/Property;
	public abstract fun getStaticFramework ()Lorg/gradle/api/provider/Property;
	public final fun getSuppressWarnings ()Z
	public fun getToolOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerToolOptions;
	public final fun getVerbose ()Z
	public final fun kotlinOptions (Lkotlin/jvm/functions/Function1;)V
	public final fun kotlinOptions (Lorg/gradle/api/Action;)V
	public final fun link ()V
	public fun toolOptions (Lkotlin/jvm/functions/Function1;)V
	public fun toolOptions (Lorg/gradle/api/Action;)V
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeXCFrameworkConfigImpl : org/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeArtifactConfigImpl, org/jetbrains/kotlin/gradle/dsl/KotlinNativeXCFrameworkConfig {
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun createArtifact (Lorg/gradle/api/plugins/ExtensionAware;)Lorg/jetbrains/kotlin/gradle/dsl/KotlinArtifact;
	public fun createArtifact (Lorg/gradle/api/plugins/ExtensionAware;)Lorg/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeXCFrameworkImpl;
	public fun getEmbedBitcode ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
	public fun getTargets ()Ljava/util/Set;
	public fun setEmbedBitcode (Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;)V
	public fun setTargets (Ljava/util/Set;)V
	public fun targets ([Lorg/jetbrains/kotlin/konan/target/KonanTarget;)V
	protected fun validate ()V
}

public final class org/jetbrains/kotlin/gradle/targets/native/tasks/artifact/KotlinNativeXCFrameworkImpl : org/gradle/api/plugins/ExtensionAware, org/jetbrains/kotlin/gradle/dsl/KotlinNativeXCFramework {
	public fun <init> (Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;ZLjava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Ljava/util/Map;Ljava/util/Set;Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;Lorg/gradle/api/plugins/ExtensionAware;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;ZLjava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Ljava/util/Map;Ljava/util/Set;Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;Lorg/gradle/api/plugins/ExtensionAware;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getArtifactName ()Ljava/lang/String;
	public fun getBinaryOptions ()Ljava/util/Map;
	public fun getEmbedBitcode ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
	public fun getExtensions ()Lorg/gradle/api/plugins/ExtensionContainer;
	public fun getKotlinOptionsFn ()Lkotlin/jvm/functions/Function1;
	public fun getLinkerOptions ()Ljava/util/List;
	public fun getModes ()Ljava/util/Set;
	public fun getModules ()Ljava/util/Set;
	public fun getName ()Ljava/lang/String;
	public fun getOutDir ()Ljava/lang/String;
	public fun getTargets ()Ljava/util/Set;
	public fun getTaskName ()Ljava/lang/String;
	public fun getToolOptionsConfigure ()Lkotlin/jvm/functions/Function1;
	public fun isStatic ()Z
	public fun registerAssembleTask (Lorg/gradle/api/Project;)V
}

public abstract class org/jetbrains/kotlin/gradle/targets/native/toolchain/UnzipTransformationAction : org/gradle/api/artifacts/transform/TransformAction {
	public fun <init> ()V
	public abstract fun getArchiveOperations ()Lorg/gradle/api/file/ArchiveOperations;
	public abstract fun getFileSystemOperations ()Lorg/gradle/api/file/FileSystemOperations;
	public abstract fun getInputArtifact ()Lorg/gradle/api/provider/Provider;
	public fun transform (Lorg/gradle/api/artifacts/transform/TransformOutputs;)V
}

public abstract class org/jetbrains/kotlin/gradle/tasks/AbstractKotlinCompile : org/jetbrains/kotlin/gradle/tasks/AbstractKotlinCompileTool, org/jetbrains/kotlin/compilerRunner/UsesCompilerSystemPropertiesService, org/jetbrains/kotlin/gradle/incremental/UsesIncrementalModuleInfoBuildService, org/jetbrains/kotlin/gradle/internal/UsesClassLoadersCachingBuildService, org/jetbrains/kotlin/gradle/plugin/UsesBuildFinishedListenerService, org/jetbrains/kotlin/gradle/plugin/UsesVariantImplementationFactories, org/jetbrains/kotlin/gradle/plugin/diagnostics/UsesKotlinToolingDiagnostics, org/jetbrains/kotlin/gradle/plugin/internal/UsesBuildIdProviderService, org/jetbrains/kotlin/gradle/plugin/statistics/UsesBuildFusService, org/jetbrains/kotlin/gradle/report/UsesBuildMetricsService, org/jetbrains/kotlin/gradle/tasks/BaseKotlinCompile, org/jetbrains/kotlin/gradle/tasks/CompileUsingKotlinDaemonWithNormalization {
	public fun <init> (Lorg/gradle/api/model/ObjectFactory;Lorg/gradle/workers/WorkerExecutor;)V
	protected fun cleanOutputsAndLocalState (Ljava/lang/String;)V
	public final fun execute (Lorg/gradle/work/InputChanges;)V
	public final fun getAbiSnapshotFile ()Lorg/gradle/api/provider/Provider;
	public final fun getAbiSnapshotRelativePath ()Lorg/gradle/api/provider/Property;
	protected final fun getChangedFiles (Lorg/gradle/work/InputChanges;Ljava/util/List;)Lorg/jetbrains/kotlin/buildtools/api/SourcesChanges;
	protected final fun getChangedFiles (Lorg/gradle/work/InputChanges;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/buildtools/api/SourcesChanges;
	public static synthetic fun getChangedFiles$default (Lorg/jetbrains/kotlin/gradle/tasks/AbstractKotlinCompile;Lorg/gradle/work/InputChanges;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/kotlin/buildtools/api/SourcesChanges;
	public abstract fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions;
	public abstract fun getExplicitApiMode ()Lorg/gradle/api/provider/Property;
	protected final fun getGradleCompileTaskProvider ()Lorg/gradle/api/provider/Provider;
	public final fun getIncremental ()Z
	protected fun getIncrementalProps ()Ljava/util/List;
	protected final fun getMultiModuleICSettings ()Lorg/jetbrains/kotlin/daemon/common/MultiModuleICSettings;
	public fun getNormalizedKotlinDaemonJvmArguments ()Lorg/gradle/api/provider/Provider;
	protected fun makeIncrementalCompilationFeatures ()Lorg/jetbrains/kotlin/incremental/IncrementalCompilationFeatures;
	public fun reportDiagnostic (Lorg/jetbrains/kotlin/gradle/plugin/diagnostics/ToolingDiagnostic;)V
	public final fun setIncremental (Z)V
	protected fun skipCondition ()Z
}

public abstract class org/jetbrains/kotlin/gradle/tasks/AbstractKotlinCompileTool : org/gradle/api/DefaultTask, org/jetbrains/kotlin/gradle/internal/CompilerArgumentAware, org/jetbrains/kotlin/gradle/internal/tasks/TaskWithLocalState, org/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer, org/jetbrains/kotlin/gradle/tasks/KotlinCompileTool {
	public fun <init> (Lorg/gradle/api/model/ObjectFactory;)V
	public fun createCompilerArgs ()Lorg/jetbrains/kotlin/cli/common/arguments/CommonToolArguments;
	public final fun disallowSourceChanges ()V
	public final fun exclude (Lgroovy/lang/Closure;)Lorg/gradle/api/tasks/util/PatternFilterable;
	public final fun exclude (Ljava/lang/Iterable;)Lorg/gradle/api/tasks/util/PatternFilterable;
	public final fun exclude (Lorg/gradle/api/specs/Spec;)Lorg/gradle/api/tasks/util/PatternFilterable;
	public final fun exclude ([Ljava/lang/String;)Lorg/gradle/api/tasks/util/PatternFilterable;
	public fun getDefaultSerializedCompilerArguments ()Ljava/util/List;
	public final fun getExcludes ()Ljava/util/Set;
	public final fun getIncludes ()Ljava/util/Set;
	public final fun getMetrics ()Lorg/gradle/api/provider/Property;
	public fun getSerializedCompilerArguments ()Ljava/util/List;
	public fun getSerializedCompilerArgumentsIgnoreClasspathIssues ()Ljava/util/List;
	protected final fun getSourceFileFilter ()Lorg/gradle/api/tasks/util/PatternSet;
	public fun getSources ()Lorg/gradle/api/file/FileCollection;
	public final fun include (Lgroovy/lang/Closure;)Lorg/gradle/api/tasks/util/PatternFilterable;
	public final fun include (Ljava/lang/Iterable;)Lorg/gradle/api/tasks/util/PatternFilterable;
	public final fun include (Lorg/gradle/api/specs/Spec;)Lorg/gradle/api/tasks/util/PatternFilterable;
	public final fun include ([Ljava/lang/String;)Lorg/gradle/api/tasks/util/PatternFilterable;
	public final fun setExcludes (Ljava/lang/Iterable;)Lorg/gradle/api/tasks/util/PatternFilterable;
	public final fun setIncludes (Ljava/lang/Iterable;)Lorg/gradle/api/tasks/util/PatternFilterable;
	public fun setSource ([Ljava/lang/Object;)V
	public fun setupCompilerArgs (Lorg/jetbrains/kotlin/cli/common/arguments/CommonToolArguments;ZZ)V
	public fun source ([Ljava/lang/Object;)V
	protected final fun validateCompilerClasspath ()V
}

public abstract class org/jetbrains/kotlin/gradle/tasks/AbstractKotlinNativeCompile : org/jetbrains/kotlin/gradle/tasks/AbstractKotlinCompileTool, org/jetbrains/kotlin/gradle/internal/tasks/ProducesKlib {
	public fun <init> (Lorg/gradle/api/model/ObjectFactory;)V
	public abstract fun getAdditionalCompilerOptions ()Lorg/gradle/api/provider/Provider;
	public final fun getArtifactVersion ()Ljava/lang/String;
	public abstract fun getBaseName ()Ljava/lang/String;
	public fun getCompilerPluginClasspath ()Lorg/gradle/api/file/FileCollection;
	public final fun getCompilerPluginCommandLine ()Ljava/util/List;
	public final fun getCompilerPluginOptions ()Lorg/jetbrains/kotlin/gradle/tasks/CompilerPluginOptions;
	public abstract fun getDebuggable ()Z
	public fun getKlibDirectory ()Lorg/gradle/api/provider/Provider;
	public fun getKlibFile ()Lorg/gradle/api/provider/Provider;
	public final fun getKotlinNativeVersion ()Ljava/lang/String;
	public abstract fun getKotlinOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonToolOptions;
	public final fun getKotlinPluginData ()Lorg/gradle/api/provider/Provider;
	public final fun getLanguageSettings ()Lorg/jetbrains/kotlin/project/model/LanguageSettings;
	public fun getLibraries ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getOptimized ()Z
	public fun getOutputFile ()Lorg/gradle/api/provider/Provider;
	public abstract fun getOutputKind ()Lorg/jetbrains/kotlin/konan/target/CompilerOutputKind;
	public fun getProduceUnpackagedKlib ()Lorg/gradle/api/provider/Property;
	public final fun getProgressiveMode ()Z
	public final fun getTarget ()Ljava/lang/String;
	public fun setCompilerPluginClasspath (Lorg/gradle/api/file/FileCollection;)V
	public final fun setKotlinPluginData (Lorg/gradle/api/provider/Provider;)V
}

public abstract class org/jetbrains/kotlin/gradle/tasks/CInteropProcess : org/gradle/api/DefaultTask, org/jetbrains/kotlin/gradle/internal/UsesClassLoadersCachingBuildService, org/jetbrains/kotlin/gradle/internal/tasks/ProducesKlib, org/jetbrains/kotlin/gradle/report/UsesBuildMetricsService, org/jetbrains/kotlin/gradle/targets/native/UsesKonanPropertiesBuildService, org/jetbrains/kotlin/gradle/targets/native/toolchain/UsesKotlinNativeBundleBuildService {
	public final fun getAllHeadersDirs ()Ljava/util/Set;
	public final fun getBaseKlibName ()Ljava/lang/String;
	public final fun getCompilerOpts ()Ljava/util/List;
	public final fun getDefFile ()Ljava/io/File;
	public abstract fun getDefinitionFile ()Lorg/gradle/api/file/RegularFileProperty;
	public final fun getDestinationDir ()Lorg/gradle/api/provider/Provider;
	public abstract fun getDestinationDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public final fun getExtraOpts ()Ljava/util/List;
	public final fun getHeaderFilterDirs ()Ljava/util/Set;
	public final fun getHeaders ()Lorg/gradle/api/file/FileCollection;
	public final fun getInteropName ()Ljava/lang/String;
	public fun getKlibDirectory ()Lorg/gradle/api/provider/Provider;
	public fun getKlibFile ()Lorg/gradle/api/provider/Provider;
	public fun getKlibOutput ()Lorg/gradle/api/provider/Provider;
	public final fun getKonanDataDir ()Lorg/gradle/api/provider/Provider;
	public final fun getKonanHome ()Lorg/gradle/api/provider/Provider;
	public final fun getKonanTarget ()Lorg/jetbrains/kotlin/konan/target/KonanTarget;
	public final fun getKonanVersion ()Ljava/lang/String;
	public final fun getLibraries ()Lorg/gradle/api/file/FileCollection;
	public final fun getLibraryVersion ()Ljava/lang/String;
	public final fun getLinkerOpts ()Ljava/util/List;
	public final fun getMetrics ()Lorg/gradle/api/provider/Property;
	public final fun getModuleName ()Ljava/lang/String;
	public final fun getOutputFile ()Ljava/io/File;
	public final fun getOutputFileName ()Ljava/lang/String;
	public final fun getOutputFileProvider ()Lorg/gradle/api/provider/Provider;
	public final fun getPackageName ()Ljava/lang/String;
	public fun getProduceUnpackagedKlib ()Lorg/gradle/api/provider/Property;
	public abstract fun getProviderFactory ()Lorg/gradle/api/provider/ProviderFactory;
	public final fun getSettings ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/DefaultCInteropSettings;
	public final fun processInterop ()V
	public final fun setDestinationDir (Lorg/gradle/api/provider/Provider;)V
}

public class org/jetbrains/kotlin/gradle/tasks/CleanDataTask : org/gradle/api/DefaultTask {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/tasks/CleanDataTask$Companion;
	public static final field NAME_SUFFIX Ljava/lang/String;
	public field cleanableStoreProvider Lorg/gradle/api/provider/Provider;
	public fun <init> ()V
	public final fun exec ()V
	public final fun getCleanableStoreProvider ()Lorg/gradle/api/provider/Provider;
	public final fun getTimeToLiveInDays ()J
	public final fun setCleanableStoreProvider (Lorg/gradle/api/provider/Provider;)V
	public final fun setTimeToLiveInDays (J)V
}

public final class org/jetbrains/kotlin/gradle/tasks/CleanDataTask$Companion {
}

public final class org/jetbrains/kotlin/gradle/tasks/CompilerPluginOptions : org/jetbrains/kotlin/gradle/plugin/CompilerPluginConfig {
	public fun <init> ()V
	public fun <init> (Lorg/jetbrains/kotlin/gradle/plugin/CompilerPluginConfig;)V
	public final fun addPluginArgument (Lorg/jetbrains/kotlin/gradle/tasks/CompilerPluginOptions;)V
	public final fun getArguments ()Ljava/util/List;
	public final fun plus (Lorg/jetbrains/kotlin/gradle/plugin/CompilerPluginConfig;)Lorg/jetbrains/kotlin/gradle/tasks/CompilerPluginOptions;
}

public abstract class org/jetbrains/kotlin/gradle/tasks/DefFileTask : org/gradle/api/DefaultTask {
	public fun <init> ()V
	public final fun generate ()V
	public abstract fun getDefFile ()Lorg/gradle/api/file/RegularFileProperty;
	public final fun getOutputFile ()Ljava/io/File;
	public abstract fun getPod ()Lorg/gradle/api/provider/Property;
}

public abstract class org/jetbrains/kotlin/gradle/tasks/DummyFrameworkTask : org/gradle/api/DefaultTask {
	public fun <init> (Lorg/gradle/api/model/ObjectFactory;Lorg/gradle/api/file/ProjectLayout;)V
	public final fun create ()V
	public final fun getDestinationDir ()Ljava/io/File;
	public abstract fun getFrameworkName ()Lorg/gradle/api/provider/Property;
	public final fun getOutputDsym ()Lorg/gradle/api/file/DirectoryProperty;
	public final fun getOutputFramework ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getUseStaticFramework ()Lorg/gradle/api/provider/Property;
}

public class org/jetbrains/kotlin/gradle/tasks/FatFrameworkTask : org/gradle/api/DefaultTask {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/tasks/FatFrameworkTask$Companion;
	protected final fun createFatFramework ()V
	public final fun from (Ljava/lang/Iterable;)V
	public final fun from ([Lorg/jetbrains/kotlin/gradle/plugin/mpp/Framework;)V
	public final fun fromFrameworkDescriptors (Ljava/lang/Iterable;)V
	protected final fun getArchToFrameworkProvider ()Lorg/gradle/api/provider/MapProperty;
	public final fun getBaseName ()Ljava/lang/String;
	public final fun getDestinationDir ()Ljava/io/File;
	public final fun getDestinationDirProperty ()Lorg/gradle/api/file/DirectoryProperty;
	public final fun getFatFramework ()Ljava/io/File;
	public final fun getFatFrameworkName ()Ljava/lang/String;
	public final fun getFrameworks ()Ljava/util/Collection;
	protected final fun getInputDsymFiles ()Ljava/lang/Iterable;
	protected final fun getInputFrameworkFiles ()Ljava/lang/Iterable;
	public final fun setBaseName (Ljava/lang/String;)V
	public final fun setDestinationDir (Ljava/io/File;)V
}

protected final class org/jetbrains/kotlin/gradle/tasks/FatFrameworkTask$AppleArchitecture : java/lang/Enum {
	public static final field ARM32 Lorg/jetbrains/kotlin/gradle/tasks/FatFrameworkTask$AppleArchitecture;
	public static final field ARM64 Lorg/jetbrains/kotlin/gradle/tasks/FatFrameworkTask$AppleArchitecture;
	public static final field ARM64_32 Lorg/jetbrains/kotlin/gradle/tasks/FatFrameworkTask$AppleArchitecture;
	public static final field X64 Lorg/jetbrains/kotlin/gradle/tasks/FatFrameworkTask$AppleArchitecture;
	public static final field X86 Lorg/jetbrains/kotlin/gradle/tasks/FatFrameworkTask$AppleArchitecture;
	public final fun getClangMacro ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/tasks/FatFrameworkTask$AppleArchitecture;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/tasks/FatFrameworkTask$AppleArchitecture;
}

public final class org/jetbrains/kotlin/gradle/tasks/FatFrameworkTask$Companion {
	public final fun isSupportedTarget (Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeTarget;)Z
}

public final class org/jetbrains/kotlin/gradle/tasks/FrameworkDescriptor : java/io/Serializable {
	public fun <init> (Ljava/io/File;ZLorg/jetbrains/kotlin/konan/target/KonanTarget;)V
	public fun <init> (Lorg/jetbrains/kotlin/gradle/plugin/mpp/Framework;)V
	public final fun getFile ()Ljava/io/File;
	public final fun getFiles ()Lorg/jetbrains/kotlin/gradle/tasks/FrameworkLayout;
	public final fun getName ()Ljava/lang/String;
	public final fun getTarget ()Lorg/jetbrains/kotlin/konan/target/KonanTarget;
	public final fun isStatic ()Z
}

public final class org/jetbrains/kotlin/gradle/tasks/FrameworkDsymLayout {
	public fun <init> (Ljava/io/File;)V
	public final fun exists ()Z
	public final fun getBinary ()Ljava/io/File;
	public final fun getBinaryDir ()Ljava/io/File;
	public final fun getInfoPlist ()Ljava/io/File;
	public final fun getRootDir ()Ljava/io/File;
	public final fun mkdirs ()V
}

public final class org/jetbrains/kotlin/gradle/tasks/FrameworkLayout {
	public fun <init> (Ljava/io/File;Z)V
	public final fun exists ()Z
	public final fun getBinary ()Ljava/io/File;
	public final fun getDSYM ()Lorg/jetbrains/kotlin/gradle/tasks/FrameworkDsymLayout;
	public final fun getHeader ()Ljava/io/File;
	public final fun getHeaderDir ()Ljava/io/File;
	public final fun getInfoPlist ()Ljava/io/File;
	public final fun getModuleFile ()Ljava/io/File;
	public final fun getModulesDir ()Ljava/io/File;
	public final fun getRootDir ()Ljava/io/File;
	public final fun isMacosFramework ()Z
	public final fun mkdirs ()V
}

public abstract class org/jetbrains/kotlin/gradle/tasks/GradleCompileTaskProvider {
	public fun <init> (Lorg/gradle/api/model/ObjectFactory;Lorg/gradle/api/file/ProjectLayout;Lorg/gradle/api/Task;Lorg/gradle/api/Project;Lorg/gradle/api/provider/Provider;)V
	public final fun getBuildDir ()Lorg/gradle/api/file/DirectoryProperty;
	public final fun getBuildModulesInfo ()Lorg/gradle/api/provider/Provider;
	public final fun getErrorsFiles ()Lorg/gradle/api/provider/SetProperty;
	public final fun getLogger ()Lorg/gradle/api/provider/Provider;
	public final fun getPath ()Lorg/gradle/api/provider/Provider;
	public final fun getProjectDir ()Lorg/gradle/api/provider/Provider;
	public final fun getProjectName ()Lorg/gradle/api/provider/Provider;
	public final fun getSessionsDir ()Lorg/gradle/api/provider/Provider;
}

public abstract class org/jetbrains/kotlin/gradle/tasks/Kotlin2JsCompile : org/jetbrains/kotlin/gradle/tasks/AbstractKotlinCompile, org/jetbrains/kotlin/gradle/dsl/KotlinJsCompile, org/jetbrains/kotlin/gradle/internal/tasks/ProducesKlib, org/jetbrains/kotlin/gradle/targets/js/internal/UsesLibraryFilterCachingService, org/jetbrains/kotlin/gradle/tasks/K2MultiplatformCompilationTask {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsCompilerOptions;Lorg/gradle/api/model/ObjectFactory;Lorg/gradle/workers/WorkerExecutor;)V
	public synthetic fun callCompilerAsync$kotlin_gradle_plugin_common (Lorg/jetbrains/kotlin/cli/common/arguments/CommonCompilerArguments;Lorg/gradle/work/InputChanges;Lorg/jetbrains/kotlin/gradle/tasks/TaskOutputsBackup;)V
	public fun compilerOptions (Lkotlin/jvm/functions/Function1;)V
	public fun compilerOptions (Lorg/gradle/api/Action;)V
	protected fun contributeAdditionalCompilerArguments (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$ContributeCompilerArgumentsContext;)V
	public synthetic fun createCompilerArguments (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$CreateCompilerArgumentsContext;)Lorg/jetbrains/kotlin/cli/common/arguments/CommonToolArguments;
	public fun createCompilerArguments (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$CreateCompilerArgumentsContext;)Lorg/jetbrains/kotlin/cli/common/arguments/K2JSCompilerArguments;
	public synthetic fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions;
	public final fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsCompilerOptions;
	protected fun getIncrementalProps ()Ljava/util/List;
	public fun getKlibDirectory ()Lorg/gradle/api/provider/Provider;
	public fun getKlibFile ()Lorg/gradle/api/provider/Provider;
	public fun getKlibOutput ()Lorg/gradle/api/provider/Provider;
	public synthetic fun getKotlinOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions;
	public fun getKotlinOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;
	public abstract fun getLibraries ()Lorg/gradle/api/file/ConfigurableFileCollection;
	protected final fun getLibraryFilter ()Lkotlin/jvm/functions/Function1;
	public abstract fun getModuleName ()Lorg/gradle/api/provider/Property;
	public fun getMultiplatformStructure ()Lorg/jetbrains/kotlin/gradle/tasks/K2MultiplatformStructure;
	public final synthetic fun getOutputFileProperty ()Lorg/gradle/api/provider/Property;
	public fun getProduceUnpackagedKlib ()Lorg/gradle/api/provider/Property;
	public fun kotlinOptions (Lkotlin/jvm/functions/Function1;)V
	public fun kotlinOptions (Lorg/gradle/api/Action;)V
	protected fun processArgsBeforeCompile (Lorg/jetbrains/kotlin/cli/common/arguments/K2JSCompilerArguments;)V
	public synthetic fun setupCompilerArgs (Lorg/jetbrains/kotlin/cli/common/arguments/CommonToolArguments;ZZ)V
	public fun setupCompilerArgs (Lorg/jetbrains/kotlin/cli/common/arguments/K2JSCompilerArguments;ZZ)V
}

public abstract class org/jetbrains/kotlin/gradle/tasks/KotlinCompile : org/jetbrains/kotlin/gradle/tasks/AbstractKotlinCompile, org/jetbrains/kotlin/gradle/dsl/KotlinJvmCompile, org/jetbrains/kotlin/gradle/tasks/K2MultiplatformCompilationTask {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmCompilerOptions;Lorg/gradle/workers/WorkerExecutor;Lorg/gradle/api/model/ObjectFactory;)V
	public synthetic fun callCompilerAsync$kotlin_gradle_plugin_common (Lorg/jetbrains/kotlin/cli/common/arguments/CommonCompilerArguments;Lorg/gradle/work/InputChanges;Lorg/jetbrains/kotlin/gradle/tasks/TaskOutputsBackup;)V
	public fun compilerOptions (Lkotlin/jvm/functions/Function1;)V
	public fun compilerOptions (Lorg/gradle/api/Action;)V
	public synthetic fun createCompilerArguments (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$CreateCompilerArgumentsContext;)Lorg/jetbrains/kotlin/cli/common/arguments/CommonToolArguments;
	public fun createCompilerArguments (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$CreateCompilerArgumentsContext;)Lorg/jetbrains/kotlin/cli/common/arguments/K2JVMCompilerArguments;
	public abstract fun getClasspathSnapshotProperties ()Lorg/jetbrains/kotlin/gradle/tasks/KotlinCompile$ClasspathSnapshotProperties;
	public synthetic fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions;
	public final fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmCompilerOptions;
	public final fun getDisableMultiModuleIC ()Z
	protected fun getIncrementalProps ()Ljava/util/List;
	public final fun getJavaPackagePrefix ()Ljava/lang/String;
	public fun getJavaSources ()Lorg/gradle/api/file/FileCollection;
	public fun getKotlinJavaToolchain ()Lorg/jetbrains/kotlin/gradle/tasks/KotlinJavaToolchain;
	public final fun getKotlinJavaToolchainProvider ()Lorg/gradle/api/provider/Provider;
	public synthetic fun getKotlinOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions;
	public final fun getKotlinOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;
	public abstract fun getLibraries ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getModuleName ()Lorg/gradle/api/provider/Property;
	public fun getMultiplatformStructure ()Lorg/jetbrains/kotlin/gradle/tasks/K2MultiplatformStructure;
	public fun getParentKotlinOptions ()Lorg/gradle/api/provider/Property;
	public final fun getUsePreciseJavaTracking ()Z
	public fun kotlinOptions (Lkotlin/jvm/functions/Function1;)V
	public fun kotlinOptions (Lorg/gradle/api/Action;)V
	protected fun makeIncrementalCompilationFeatures ()Lorg/jetbrains/kotlin/incremental/IncrementalCompilationFeatures;
	protected final fun overrideArgsUsingTaskModuleNameWithWarning (Lorg/jetbrains/kotlin/cli/common/arguments/K2JVMCompilerArguments;)V
	public final fun setJavaPackagePrefix (Ljava/lang/String;)V
	public fun setSource ([Ljava/lang/Object;)V
	public final fun setUsePreciseJavaTracking (Z)V
	public synthetic fun setupCompilerArgs (Lorg/jetbrains/kotlin/cli/common/arguments/CommonToolArguments;ZZ)V
	public fun setupCompilerArgs (Lorg/jetbrains/kotlin/cli/common/arguments/K2JVMCompilerArguments;ZZ)V
	protected fun skipCondition ()Z
	public fun source ([Ljava/lang/Object;)V
}

public abstract class org/jetbrains/kotlin/gradle/tasks/KotlinCompile$ClasspathSnapshotProperties {
	public fun <init> ()V
	public abstract fun getClasspath ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getClasspathSnapshot ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getClasspathSnapshotDir ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getUseClasspathSnapshot ()Lorg/gradle/api/provider/Property;
}

public abstract class org/jetbrains/kotlin/gradle/tasks/KotlinCompileCommon : org/jetbrains/kotlin/gradle/tasks/AbstractKotlinCompile, org/jetbrains/kotlin/gradle/dsl/KotlinCommonCompile, org/jetbrains/kotlin/gradle/tasks/KotlinCompilationTask {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformCommonCompilerOptions;Lorg/gradle/workers/WorkerExecutor;Lorg/gradle/api/model/ObjectFactory;)V
	public synthetic fun callCompilerAsync$kotlin_gradle_plugin_common (Lorg/jetbrains/kotlin/cli/common/arguments/CommonCompilerArguments;Lorg/gradle/work/InputChanges;Lorg/jetbrains/kotlin/gradle/tasks/TaskOutputsBackup;)V
	public fun compilerOptions (Lkotlin/jvm/functions/Function1;)V
	public fun compilerOptions (Lorg/gradle/api/Action;)V
	public synthetic fun createCompilerArguments (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$CreateCompilerArgumentsContext;)Lorg/jetbrains/kotlin/cli/common/arguments/CommonToolArguments;
	public fun createCompilerArguments (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$CreateCompilerArgumentsContext;)Lorg/jetbrains/kotlin/cli/common/arguments/K2MetadataCompilerArguments;
	public synthetic fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions;
	public fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformCommonCompilerOptions;
	public synthetic fun getKotlinOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions;
	public fun getKotlinOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformCommonOptions;
	public fun kotlinOptions (Lkotlin/jvm/functions/Function1;)V
	public fun kotlinOptions (Lorg/gradle/api/Action;)V
	public synthetic fun setupCompilerArgs (Lorg/jetbrains/kotlin/cli/common/arguments/CommonToolArguments;ZZ)V
	public fun setupCompilerArgs (Lorg/jetbrains/kotlin/cli/common/arguments/K2MetadataCompilerArguments;ZZ)V
}

public final class org/jetbrains/kotlin/gradle/tasks/KotlinCompilerPluginData$InputsOutputsState {
	public fun <init> (Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;)V
	public final fun component1 ()Ljava/util/Map;
	public final fun component2 ()Ljava/util/Set;
	public final fun component3 ()Ljava/util/Set;
	public final fun copy (Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;)Lorg/jetbrains/kotlin/gradle/tasks/KotlinCompilerPluginData$InputsOutputsState;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/tasks/KotlinCompilerPluginData$InputsOutputsState;Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/tasks/KotlinCompilerPluginData$InputsOutputsState;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getInputFiles ()Ljava/util/Set;
	public final fun getInputs ()Ljava/util/Map;
	public final fun getOutputFiles ()Ljava/util/Set;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/tasks/KotlinNativeCompile : org/jetbrains/kotlin/gradle/tasks/AbstractKotlinNativeCompile, org/jetbrains/kotlin/gradle/dsl/KotlinNativeCompileTask, org/jetbrains/kotlin/gradle/internal/UsesClassLoadersCachingBuildService, org/jetbrains/kotlin/gradle/plugin/statistics/UsesBuildFusService, org/jetbrains/kotlin/gradle/report/UsesBuildMetricsService, org/jetbrains/kotlin/gradle/targets/native/UsesKonanPropertiesBuildService, org/jetbrains/kotlin/gradle/targets/native/toolchain/UsesKotlinNativeBundleBuildService, org/jetbrains/kotlin/gradle/tasks/K2MultiplatformCompilationTask {
	public final fun compile ()V
	public fun compilerOptions (Lkotlin/jvm/functions/Function1;)V
	public fun compilerOptions (Lorg/gradle/api/Action;)V
	public synthetic fun createCompilerArguments (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$CreateCompilerArgumentsContext;)Lorg/jetbrains/kotlin/cli/common/arguments/CommonToolArguments;
	public fun createCompilerArguments (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$CreateCompilerArgumentsContext;)Lorg/jetbrains/kotlin/cli/common/arguments/K2NativeCompilerArguments;
	public fun getAdditionalCompilerOptions ()Lorg/gradle/api/provider/Provider;
	public final fun getApiVersion ()Ljava/lang/String;
	public fun getBaseName ()Ljava/lang/String;
	public final fun getCommonSources ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public synthetic fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions;
	public fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinNativeCompilerOptions;
	public fun getDebuggable ()Z
	public final fun getEnabledLanguageFeatures ()Ljava/util/Set;
	public fun getKlibOutput ()Lorg/gradle/api/provider/Provider;
	public final fun getKonanDataDir ()Lorg/gradle/api/provider/Provider;
	public final fun getKonanHome ()Lorg/gradle/api/provider/Provider;
	public fun getKotlinOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions;
	public synthetic fun getKotlinOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonToolOptions;
	public final fun getLanguageVersion ()Ljava/lang/String;
	public final fun getModuleName ()Ljava/lang/String;
	public fun getMultiplatformStructure ()Lorg/jetbrains/kotlin/gradle/tasks/K2MultiplatformStructure;
	public final fun getOptInAnnotationsInUse ()Ljava/util/Set;
	public fun getOptimized ()Z
	public fun getOutputKind ()Lorg/jetbrains/kotlin/konan/target/CompilerOutputKind;
	public final fun getShortModuleName ()Ljava/lang/String;
	public fun kotlinOptions (Lkotlin/jvm/functions/Function1;)V
	public fun kotlinOptions (Lorg/gradle/api/Action;)V
	public synthetic fun setupCompilerArgs (Lorg/jetbrains/kotlin/cli/common/arguments/CommonToolArguments;ZZ)V
	public fun setupCompilerArgs (Lorg/jetbrains/kotlin/cli/common/arguments/K2NativeCompilerArguments;ZZ)V
}

public abstract class org/jetbrains/kotlin/gradle/tasks/KotlinNativeLink : org/jetbrains/kotlin/gradle/tasks/AbstractKotlinCompileTool, org/jetbrains/kotlin/gradle/internal/UsesClassLoadersCachingBuildService, org/jetbrains/kotlin/gradle/plugin/statistics/UsesBuildFusService, org/jetbrains/kotlin/gradle/report/UsesBuildMetricsService, org/jetbrains/kotlin/gradle/targets/native/UsesKonanPropertiesBuildService, org/jetbrains/kotlin/gradle/targets/native/toolchain/UsesKotlinNativeBundleBuildService, org/jetbrains/kotlin/gradle/tasks/KotlinToolTask {
	public fun <init> (Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBinary;Lorg/gradle/api/model/ObjectFactory;)V
	public final fun compile ()V
	public synthetic fun createCompilerArguments (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$CreateCompilerArgumentsContext;)Lorg/jetbrains/kotlin/cli/common/arguments/CommonToolArguments;
	public fun createCompilerArguments (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerArgumentsProducer$CreateCompilerArgumentsContext;)Lorg/jetbrains/kotlin/cli/common/arguments/K2NativeCompilerArguments;
	public final fun getAdditionalCompilerOptions ()Lorg/gradle/api/provider/Provider;
	public final fun getApiFiles ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public final fun getBaseName ()Ljava/lang/String;
	public final fun getBinary ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBinary;
	public final fun getBinaryOptions ()Ljava/util/Map;
	public final fun getCompilation ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/KotlinNativeCompilation;
	public fun getCompilerPluginClasspath ()Lorg/gradle/api/file/FileCollection;
	public final fun getCompilerPluginOptions ()Lorg/jetbrains/kotlin/gradle/tasks/CompilerPluginOptions;
	public final fun getDebuggable ()Z
	public fun getDestinationDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public final fun getEmbedBitcode ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
	public final fun getEmbedBitcodeMode ()Lorg/gradle/api/provider/Provider;
	public final fun getEntryPoint ()Ljava/lang/String;
	public final fun getExportLibraries ()Lorg/gradle/api/file/FileCollection;
	protected final fun getFriendModule ()Lorg/gradle/api/file/FileCollection;
	public final fun getKonanDataDir ()Lorg/gradle/api/provider/Provider;
	public final fun getKonanHome ()Lorg/gradle/api/provider/Provider;
	public final fun getKotlinOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonToolOptions;
	public final fun getKotlinPluginData ()Lorg/gradle/api/provider/Provider;
	public final fun getLanguageSettings ()Lorg/jetbrains/kotlin/project/model/LanguageSettings;
	public fun getLibraries ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public final fun getLinkerOpts ()Ljava/util/List;
	public final fun getOptimized ()Z
	public fun getOutputFile ()Lorg/gradle/api/provider/Provider;
	public final fun getOutputKind ()Lorg/jetbrains/kotlin/konan/target/CompilerOutputKind;
	public final fun getProcessTests ()Z
	public final fun getTarget ()Ljava/lang/String;
	public final fun getToolOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerToolOptions;
	public final fun isStaticFramework ()Z
	public final fun kotlinOptions (Lkotlin/jvm/functions/Function1;)V
	public final fun kotlinOptions (Lorg/gradle/api/Action;)V
	public fun setCompilerPluginClasspath (Lorg/gradle/api/file/FileCollection;)V
	public final fun setKotlinPluginData (Lorg/gradle/api/provider/Provider;)V
	public fun toolOptions (Lkotlin/jvm/functions/Function1;)V
	public fun toolOptions (Lorg/gradle/api/Action;)V
}

public abstract class org/jetbrains/kotlin/gradle/tasks/KotlinTest : org/gradle/api/tasks/testing/AbstractTestTask {
	public fun <init> ()V
	public final fun addRunListener (Lorg/jetbrains/kotlin/gradle/internal/testing/KotlinTestRunnerListener;)V
	public synthetic fun createTestExecuter ()Lorg/gradle/api/internal/tasks/testing/TestExecuter;
	protected fun createTestExecuter ()Lorg/jetbrains/kotlin/gradle/internal/testing/TCServiceMessagesTestExecutor;
	public final fun getExcludePatterns ()Ljava/util/Set;
	public final fun getExcludes ()Ljava/util/Set;
	public fun getExecHandleFactory ()Lorg/gradle/process/internal/ExecHandleFactory;
	public fun getFileResolver ()Lorg/gradle/api/internal/file/FileResolver;
	protected final fun getFilterExt ()Lorg/gradle/api/internal/tasks/testing/filter/DefaultTestFilter;
	public final fun getIgnoreRunFailures ()Z
	public final fun getIncludePatterns ()Ljava/util/Set;
	public final fun getTargetName ()Ljava/lang/String;
	public final fun setExcludes (Ljava/util/Set;)V
	public final fun setIgnoreRunFailures (Z)V
	public final fun setTargetName (Ljava/lang/String;)V
}

public abstract class org/jetbrains/kotlin/gradle/tasks/PodspecTask : org/gradle/api/DefaultTask {
	public fun <init> (Lorg/gradle/api/file/ProjectLayout;)V
	public final fun generate ()V
	public final fun getOutputFile ()Ljava/io/File;
	public abstract fun getPods ()Lorg/gradle/api/provider/ListProperty;
}

public final class org/jetbrains/kotlin/gradle/tasks/TasksKt {
	public static final field KOTLIN_BUILD_DIR_NAME Ljava/lang/String;
	public static final field USING_JS_INCREMENTAL_COMPILATION_MESSAGE Ljava/lang/String;
	public static final field USING_JVM_INCREMENTAL_COMPILATION_MESSAGE Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/tasks/TasksUtilsKt {
	public static final fun throwExceptionIfCompilationFailed (Lorg/jetbrains/kotlin/cli/common/ExitCode;Lorg/jetbrains/kotlin/gradle/tasks/KotlinCompilerExecutionStrategy;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/testing/KotlinAggregatingTestRun : org/jetbrains/kotlin/gradle/execution/KotlinAggregatingExecution, org/jetbrains/kotlin/gradle/plugin/KotlinTestRun {
	public abstract fun filter (Lkotlin/jvm/functions/Function1;)V
}

public final class org/jetbrains/kotlin/gradle/testing/KotlinAggregatingTestRun$DefaultImpls {
	public static fun configureAllExecutions (Lorg/jetbrains/kotlin/gradle/testing/KotlinAggregatingTestRun;Lorg/gradle/api/Action;)V
	public static fun filter (Lorg/jetbrains/kotlin/gradle/testing/KotlinAggregatingTestRun;Lkotlin/jvm/functions/Function1;)V
}

public abstract class org/jetbrains/kotlin/gradle/testing/KotlinReportAggregatingTestRun : org/jetbrains/kotlin/gradle/plugin/ExecutionTaskHolder, org/jetbrains/kotlin/gradle/testing/KotlinAggregatingTestRun {
	public field executionTask Lorg/gradle/api/tasks/TaskProvider;
	public fun <init> (Ljava/lang/String;)V
	public fun configureAllExecutions (Lorg/gradle/api/Action;)V
	public fun filter (Lkotlin/jvm/functions/Function1;)V
	public fun getExecutionTask ()Lorg/gradle/api/tasks/TaskProvider;
	public fun getName ()Ljava/lang/String;
	public final fun getTestRunName ()Ljava/lang/String;
	public fun setExecutionTask (Lorg/gradle/api/tasks/TaskProvider;)V
}

public abstract class org/jetbrains/kotlin/gradle/testing/KotlinTaskTestRun : org/jetbrains/kotlin/gradle/plugin/ExecutionTaskHolder, org/jetbrains/kotlin/gradle/plugin/KotlinTargetTestRun {
	public fun <init> (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;)V
	public fun filter (Lgroovy/lang/Closure;)V
	public fun filter (Lkotlin/jvm/functions/Function1;)V
	public fun getExecutionTask ()Lorg/gradle/api/tasks/TaskProvider;
	public fun getName ()Ljava/lang/String;
	public fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
}

public final class org/jetbrains/kotlin/gradle/testing/KotlinTestFailure : org/gradle/internal/serialize/PlaceholderException {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun fillInStackTrace ()Ljava/lang/Throwable;
	public final fun getActual ()Ljava/lang/String;
	public final fun getExpected ()Ljava/lang/String;
	public fun getStackTrace ()[Ljava/lang/StackTraceElement;
	public fun printStackTrace (Ljava/io/PrintWriter;)V
	public fun toString ()Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/gradle/tooling/BuildKotlinToolingMetadataTask : org/gradle/api/DefaultTask {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/tooling/BuildKotlinToolingMetadataTask$Companion;
	public static final field defaultTaskName Ljava/lang/String;
	public fun <init> ()V
	protected abstract fun buildKotlinToolingMetadata ()Lorg/jetbrains/kotlin/tooling/KotlinToolingMetadata;
	public abstract fun getOutputDirectory ()Ljava/io/File;
	public final fun getOutputFile ()Ljava/io/File;
}

public final class org/jetbrains/kotlin/gradle/tooling/BuildKotlinToolingMetadataTask$Companion {
}

public abstract class org/jetbrains/kotlin/gradle/tooling/BuildKotlinToolingMetadataTask$FromKotlinExtension : org/jetbrains/kotlin/gradle/tooling/BuildKotlinToolingMetadataTask {
	public fun <init> (Lorg/gradle/api/file/ProjectLayout;)V
	protected fun buildKotlinToolingMetadata ()Lorg/jetbrains/kotlin/tooling/KotlinToolingMetadata;
	public fun getOutputDirectory ()Ljava/io/File;
}

public final class org/jetbrains/kotlin/gradle/utils/CollectionsUtilsKt {
	public static final fun mergeWith (Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;
	public static final fun toSetOrEmpty (Ljava/lang/Object;)Ljava/util/Set;
}

public abstract class org/jetbrains/kotlin/gradle/utils/CommandFallback {
}

public final class org/jetbrains/kotlin/gradle/utils/CommandFallback$Action : org/jetbrains/kotlin/gradle/utils/CommandFallback {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/utils/CommandFallback$Action;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/utils/CommandFallback$Action;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/utils/CommandFallback$Action;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFallback ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/utils/CommandFallback$Error : org/jetbrains/kotlin/gradle/utils/CommandFallback {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/utils/CommandFallback$Error;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/utils/CommandFallback$Error;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/utils/CommandFallback$Error;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getError ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/utils/ComponentIdentifiersKt {
	public static final fun getCompositeProjectComponentArtifactMetadata ()Ljava/lang/Class;
	public static final fun is (Ljava/lang/Object;Ljava/lang/Class;)Z
}

public final class org/jetbrains/kotlin/gradle/utils/ConfigurationCacheKt {
	public static final fun notCompatibleWithConfigurationCacheCompat (Lorg/gradle/api/Task;Ljava/lang/String;)V
}

public final class org/jetbrains/kotlin/gradle/utils/ConfigurationsKt {
	public static final field API Ljava/lang/String;
	public static final field COMPILE Ljava/lang/String;
	public static final field COMPILE_ONLY Ljava/lang/String;
	public static final field IMPLEMENTATION Ljava/lang/String;
	public static final field RUNTIME Ljava/lang/String;
	public static final field RUNTIME_ONLY Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/utils/DelegatesKt {
	public static final fun property (Lkotlin/jvm/functions/Function0;)Lorg/jetbrains/kotlin/gradle/utils/PropertyDelegate;
}

public final class org/jetbrains/kotlin/gradle/utils/FileUtilsKt {
	public static final fun contentEquals (Ljava/io/File;Ljava/io/File;)Z
}

public final class org/jetbrains/kotlin/gradle/utils/GradleConfigurationUtilsKt {
	public static final fun addExtendsFromRelation (Lorg/gradle/api/Project;Ljava/lang/String;Ljava/lang/String;Z)V
	public static synthetic fun addExtendsFromRelation$default (Lorg/gradle/api/Project;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)V
	public static final fun extendsFrom (Lorg/gradle/api/NamedDomainObjectProvider;Lorg/gradle/api/NamedDomainObjectProvider;)V
}

public final class org/jetbrains/kotlin/gradle/utils/IsolatedKotlinClasspathClassCastException : java/lang/ClassCastException {
	public fun <init> ()V
}

public abstract interface class org/jetbrains/kotlin/gradle/utils/MutableObservableSet : java/util/Set, kotlin/jvm/internal/markers/KMutableSet, org/jetbrains/kotlin/gradle/utils/ObservableSet {
}

public final class org/jetbrains/kotlin/gradle/utils/NativeCompilerDownloader {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/utils/NativeCompilerDownloader$Companion;
	public fun <init> (Lorg/gradle/api/Project;)V
	public final fun downloadIfNeeded ()V
	public final fun getCompilerDirectory ()Ljava/io/File;
	public final fun getProject ()Lorg/gradle/api/Project;
}

public final class org/jetbrains/kotlin/gradle/utils/NativeCompilerDownloader$Companion {
	public final fun getDEFAULT_KONAN_VERSION ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/kotlin/gradle/utils/ObservableSet : java/util/Set, kotlin/jvm/internal/markers/KMappedMarker {
	public abstract fun forAll (Lkotlin/jvm/functions/Function1;)V
	public abstract fun whenObjectAdded (Lkotlin/jvm/functions/Function1;)V
}

public final class org/jetbrains/kotlin/gradle/utils/PathsKt {
	public static final fun topRealPath (Lorg/gradle/util/Path;)Lorg/gradle/util/Path;
}

public final class org/jetbrains/kotlin/gradle/utils/PropertyDelegate {
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public final fun setValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public final class org/jetbrains/kotlin/gradle/utils/ProviderApiUtilsKt$sam$i$java_util_concurrent_Callable$0 : java/util/concurrent/Callable {
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final synthetic fun call ()Ljava/lang/Object;
}

public final class org/jetbrains/kotlin/gradle/utils/ResourceUtilsKt {
	public static final fun loadPropertyFromResources (Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public static final fun probeRemoteFileLength (Lorg/gradle/api/Project;Ljava/lang/String;I)Ljava/lang/Long;
	public static synthetic fun probeRemoteFileLength$default (Lorg/gradle/api/Project;Ljava/lang/String;IILjava/lang/Object;)Ljava/lang/Long;
}

public final class org/jetbrains/kotlin/gradle/utils/RunProcessResult {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;ILjava/lang/Process;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()I
	public final fun component4 ()Ljava/lang/Process;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;ILjava/lang/Process;)Lorg/jetbrains/kotlin/gradle/utils/RunProcessResult;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/gradle/utils/RunProcessResult;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Process;ILjava/lang/Object;)Lorg/jetbrains/kotlin/gradle/utils/RunProcessResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getProcess ()Ljava/lang/Process;
	public final fun getRetCode ()I
	public final fun getStdErr ()Ljava/lang/String;
	public final fun getStdOut ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

