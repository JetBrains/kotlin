// CHECK:
//   Mangled name: A
//   Public signature: /A|null[0]
class A : Java1<Int> {
  // CHECK:
  //   Mangled name: A#<init>(){}
  //   Public signature: /A.<init>|-5645683436151566731[0]
  //   Public signature debug description: <init>(){}
  constructor() /* primary */

  // CHECK JVM_IR:
  //   Mangled name: A#getA(){}kotlin.Int?
  //   Public signature: /A.getA|-2991999835697688393[0]
  //   Public signature debug description: getA(){}kotlin.Int?
  /* fake */ override fun getA(): Int?

  // CHECK JVM_IR:
  //   Mangled name: A#getC(){}kotlin.Int?
  //   Public signature: /A.getC|8339573902616759640[0]
  //   Public signature debug description: getC(){}kotlin.Int?
  /* fake */ override fun getC(): Int?

  // CHECK JVM_IR:
  //   Mangled name: A#isB(){}kotlin.Int?
  //   Public signature: /A.isB|-4960904876510630794[0]
  //   Public signature debug description: isB(){}kotlin.Int?
  /* fake */ override fun isB(): Int?

  // CHECK:
  //   Mangled name: A#setA(kotlin.Int?){}
  //   Public signature: /A.setA|-6561801173903795151[0]
  //   Public signature debug description: setA(kotlin.Int?){}
  /* fake */ override fun setA(t: Int?): Unit

  // CHECK:
  //   Mangled name: A#setB(kotlin.Int?){}
  //   Public signature: /A.setB|-7434782247201183710[0]
  //   Public signature debug description: setB(kotlin.Int?){}
  /* fake */ override fun setB(t: Int?): Unit

  // CHECK:
  //   Mangled name: A#setD(kotlin.Int?){}
  //   Public signature: /A.setD|-1444420329574284908[0]
  //   Public signature debug description: setD(kotlin.Int?){}
  /* fake */ override fun setD(t: Int?): Unit

}

// CHECK:
//   Mangled name: B
//   Public signature: /B|null[0]
class B : Java1<Boolean> {
  // CHECK:
  //   Mangled name: B#<init>(){}
  //   Public signature: /B.<init>|-5645683436151566731[0]
  //   Public signature debug description: <init>(){}
  constructor() /* primary */

  // CHECK JVM_IR:
  //   Mangled name: B#getA(){}kotlin.Boolean?
  //   Public signature: /B.getA|3042874557493959442[0]
  //   Public signature debug description: getA(){}kotlin.Boolean?
  /* fake */ override fun getA(): Boolean?

  // CHECK JVM_IR:
  //   Mangled name: B#getC(){}kotlin.Boolean?
  //   Public signature: /B.getC|3608726689606025132[0]
  //   Public signature debug description: getC(){}kotlin.Boolean?
  /* fake */ override fun getC(): Boolean?

  // CHECK JVM_IR:
  //   Mangled name: B#isB(){}kotlin.Boolean?
  //   Public signature: /B.isB|-2795468224882103615[0]
  //   Public signature debug description: isB(){}kotlin.Boolean?
  /* fake */ override fun isB(): Boolean?

  // CHECK:
  //   Mangled name: B#setA(kotlin.Boolean?){}
  //   Public signature: /B.setA|8864412912978974963[0]
  //   Public signature debug description: setA(kotlin.Boolean?){}
  /* fake */ override fun setA(t: Boolean?): Unit

  // CHECK:
  //   Mangled name: B#setB(kotlin.Boolean?){}
  //   Public signature: /B.setB|-7434327397602973691[0]
  //   Public signature debug description: setB(kotlin.Boolean?){}
  /* fake */ override fun setB(t: Boolean?): Unit

  // CHECK:
  //   Mangled name: B#setD(kotlin.Boolean?){}
  //   Public signature: /B.setD|7882482744342981754[0]
  //   Public signature debug description: setD(kotlin.Boolean?){}
  /* fake */ override fun setD(t: Boolean?): Unit

}

// CHECK:
//   Mangled name: #test(A;B){}
//   Public signature: /test|-2533013708701322011[0]
//   Public signature debug description: test(A;B){}
fun test(a: A, b: B): Unit
