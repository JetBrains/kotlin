@Anno(color = Color.InvalidFieldName)
@java.lang.annotation.Retention(value = java.lang.annotation.RetentionPolicy.RUNTIME)
/**
 * public final annotation class Anno : kotlin/Annotation {
 *
 *   // signature: <init>(LColor;)V
 *   public constructor(color: Color)
 *
 *   // getter: color()LColor;
 *   public final val color: Color
 *     public final get
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
public abstract @interface Anno {

    public abstract Color color();
}

////////////////////


/**
 * public final enum class Color : kotlin/Enum<Color> {
 *
 *   // signature: <init>(Ljava/lang/String;I)V
 *   private constructor()
 *
 *   BLACK,
 *
 *   WHI-TE,
 *
 *   // module name: main
 *
 *   // has Enum.entries
 * }
 */
@kotlin.Metadata()
public enum Color {
    /*public static final*/ BLACK /* = new Color() */;

    Color() {
    }

    @org.jetbrains.annotations.NotNull()
    public static kotlin.enums.EnumEntries<Color> getEntries() {
        return null;
    }
}
