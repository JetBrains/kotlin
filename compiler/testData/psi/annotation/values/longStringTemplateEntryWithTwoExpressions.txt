KtFile: longStringTemplateEntryWithTwoExpressions.kt
  PACKAGE_DIRECTIVE
    <empty list>
  IMPORT_LIST
    <empty list>
  PROPERTY
    PsiComment(EOL_COMMENT)('// COMPILATION_ERRORS')
    PsiWhiteSpace('\n')
    MODIFIER_LIST
      PsiElement(const)('const')
    PsiWhiteSpace(' ')
    PsiElement(val)('val')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('CONSTANT')
    PsiWhiteSpace(' ')
    PsiElement(EQ)('=')
    PsiWhiteSpace(' ')
    INTEGER_CONSTANT
      PsiElement(INTEGER_LITERAL)('0')
  PsiWhiteSpace('\n\n')
  FUN
    MODIFIER_LIST
      ANNOTATION_ENTRY
        PsiElement(AT)('@')
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('InvalidAnno')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            STRING_TEMPLATE
              PsiElement(OPEN_QUOTE)('"')
              LONG_STRING_TEMPLATE_ENTRY
                PsiElement(LONG_TEMPLATE_ENTRY_START)('${')
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('CONSTANT')
                PsiErrorElement:Expecting '}'
                  <empty list>
                PsiWhiteSpace(' ')
                PsiElement(BAD_CHARACTER)('$')
                LAMBDA_EXPRESSION
                  FUNCTION_LITERAL
                    PsiElement(LBRACE)('{')
                    BLOCK
                      <empty list>
                    PsiElement(RBRACE)('}')
                PsiElement(LONG_TEMPLATE_ENTRY_END)('}')
              PsiElement(CLOSING_QUOTE)('"')
          PsiElement(RPAR)(')')
    PsiWhiteSpace('\n')
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('test')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      PROPERTY
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('a')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        INTEGER_CONSTANT
          PsiElement(INTEGER_LITERAL)('1')
      PsiWhiteSpace('\n    ')
      PROPERTY
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('b')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        STRING_TEMPLATE
          PsiElement(OPEN_QUOTE)('"')
          LONG_STRING_TEMPLATE_ENTRY
            PsiElement(LONG_TEMPLATE_ENTRY_START)('${')
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('a')
            PsiErrorElement:Expecting '}'
              <empty list>
            PsiWhiteSpace(' ')
            PsiElement(BAD_CHARACTER)('$')
            LAMBDA_EXPRESSION
              FUNCTION_LITERAL
                PsiElement(LBRACE)('{')
                BLOCK
                  <empty list>
                PsiElement(RBRACE)('}')
            PsiElement(LONG_TEMPLATE_ENTRY_END)('}')
          PsiElement(CLOSING_QUOTE)('"')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')