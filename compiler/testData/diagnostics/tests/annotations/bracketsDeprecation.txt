package

internal val block: ([Ann()] kotlin.String) -> [Ann()] kotlin.String
internal val y: kotlin.Array<kotlin.String?>
internal fun bar(/*0*/ block: () -> kotlin.Int): kotlin.Int
internal fun bar2(): kotlin.Array<Q>

Ann() Ann() internal final class A {
    Ann() public constructor A(/*0*/ Ann() prop: kotlin.Int)
    Ann() internal final val prop: kotlin.Int
    Ann() internal final val x: kotlin.Int = 1
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    Ann() internal final fun foo(/*0*/ Ann() x: kotlin.Int): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    internal final fun x(): [Ann()] kotlin.String
}

internal final annotation class Ann : kotlin.Annotation {
    public constructor Ann(/*0*/ arg: kotlin.Int = ...)
    internal final val arg: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

internal interface B {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

internal interface D : B {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

Ann() internal final class MyClass {
    public constructor MyClass()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

kotlin.data() internal final class Q {
    public constructor Q(/*0*/ x: kotlin.Int, /*1*/ y: kotlin.Int)
    internal final val x: kotlin.Int
    internal final val y: kotlin.Int
    internal final /*synthesized*/ fun component1(): kotlin.Int
    internal final /*synthesized*/ fun component2(): kotlin.Int
    public final /*synthesized*/ fun copy(/*0*/ x: kotlin.Int = ..., /*1*/ y: kotlin.Int = ...): Q
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
