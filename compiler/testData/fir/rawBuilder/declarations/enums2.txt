FILE: enums2.kt
    public? final? interface Some {
    }
    public? final? object O1 : Some {
        public? constructor(): super<kotlin.Any>()

    }
    public? final? object O2 : Some {
        public? constructor(): super<kotlin.Any>()

    }
    public? final? enum class SomeEnum {
        public? constructor(x: Some): super<kotlin.Enum>()

        public? final? property x(val): Some
            public? get(): Some

        public? final enum entry FIRST : SomeEnum {
            public? constructor(): super<SomeEnum>()

            public? open? override function check(y: Some): Boolean {
                STUB
            }

        }

        public? final enum entry SECOND : SomeEnum {
            public? constructor(): super<SomeEnum>()

            public? open? override function check(y: Some): Boolean {
                STUB
            }

        }

        public? abstract function check(y: Some): Boolean

    }
