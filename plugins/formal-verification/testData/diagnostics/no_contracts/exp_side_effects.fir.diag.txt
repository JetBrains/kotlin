/exp_side_effects.kt:(27,34): info: Generated Viper text for get_foo:
field class_Foo$member_x: Ref

method class_Foo$constructor$fun_take$T_Int$return$T_class_global$class_Foo(local$x: Ref)
  returns (ret: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$T_class_global$class_Foo())


method global$fun_get_foo$fun_take$$return$T_class_global$class_Foo()
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$T_class_global$class_Foo())
{
  ret$0 := class_Foo$constructor$fun_take$T_Int$return$T_class_global$class_Foo(dom$RuntimeType$intToRef(0))
  goto label$ret$0
  label label$ret$0
}

/exp_side_effects.kt:(55,66): info: Generated Viper text for side_effect:
method global$fun_side_effect$fun_take$$return$T_Int() returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$intType())
{
  ret$0 := dom$RuntimeType$intToRef(0)
  goto label$ret$0
  label label$ret$0
}

/exp_side_effects.kt:(83,87): info: Generated Viper text for test:
field class_Foo$member_x: Ref

method global$fun_get_foo$fun_take$$return$T_class_global$class_Foo()
  returns (ret: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$T_class_global$class_Foo())


method global$fun_side_effect$fun_take$$return$T_Int() returns (ret: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$intType())


method global$fun_test$fun_take$$return$T_Unit() returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
{
  var anonymous$0: Ref
  var anonymous$1: Ref
  var local0$y: Ref
  var anonymous$2: Ref
  var anonymous$3: Ref
  var anonymous$4: Ref
  ret$0 := dom$RuntimeType$unitValue()
  anonymous$0 := global$fun_get_foo$fun_take$$return$T_class_global$class_Foo()
  anonymous$1 := global$fun_side_effect$fun_take$$return$T_Int()
  inhale acc(anonymous$0.class_Foo$member_x, write)
  anonymous$0.class_Foo$member_x := anonymous$1
  exhale acc(anonymous$0.class_Foo$member_x, write)
  anonymous$3 := global$fun_get_foo$fun_take$$return$T_class_global$class_Foo()
  inhale acc(anonymous$3.class_Foo$member_x, write)
  anonymous$2 := anonymous$3.class_Foo$member_x
  exhale acc(anonymous$3.class_Foo$member_x, write)
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(anonymous$2), dom$RuntimeType$intType())
  anonymous$4 := global$fun_side_effect$fun_take$$return$T_Int()
  local0$y := special$plusInts(anonymous$2, anonymous$4)
  label label$ret$0
}
