//
// Source
// ------------------------------------------

import androidx.compose.runtime.Composable
import androidx.compose.runtime.NonRestartableComposable
import androidx.compose.runtime.ReadOnlyComposable


val test = @Composable { x: Int ->
    A(x)
}

//
// Transformed IR
// ------------------------------------------

val test: Function3<Int, Composer, Int, Unit> = ComposableSingletons%TestKt.lambda%-302707801
internal object ComposableSingletons%TestKt {
  val lambda%-302707801: Function3<Int, Composer, Int, Unit> = composableLambdaInstance(<>, false) { x: Int, %composer: Composer?, %changed: Int ->
    sourceInformation(%composer, "invalid source info at 1: 'CN(x)6@192L4:Test.kt'")
    val %dirty = %changed
    if (%changed and 0b0110 == 0) {
      %dirty = %dirty or if (%composer.changed(x)) 0b0100 else 0b0010
    }
    if (%composer.shouldExecute(%dirty and 0b00010011 != 0b00010010, %dirty and 0b0001)) {
      if (isTraceInProgress()) {
        traceEventStart(<>, %dirty, -1, <>)
      }
      A(x, 0, %composer, 0b1110 and %dirty, 0b0010)
      if (isTraceInProgress()) {
        traceEventEnd()
      }
    } else {
      %composer.skipToGroupEnd()
    }
  }
}
