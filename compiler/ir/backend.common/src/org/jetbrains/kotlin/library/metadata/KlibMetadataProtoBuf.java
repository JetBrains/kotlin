// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: compiler/ir/backend.common/src/KlibMetadataProtoBuf.proto

package org.jetbrains.kotlin.library.metadata;

public final class KlibMetadataProtoBuf {
  private KlibMetadataProtoBuf() {}
  public static void registerAllExtensions(
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite registry) {
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.packageFqName);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.classAnnotation);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.classUniqId);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.classFile);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.constructorAnnotation);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.constructorUniqId);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.functionAnnotation);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.functionFile);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.functionUniqId);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.propertyAnnotation);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.propertyGetterAnnotation);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.propertySetterAnnotation);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.compileTimeValue);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.propertyFile);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.propertyUniqId);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.enumEntryAnnotation);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.enumEntryOrdinal);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.enumEntryUniqId);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.parameterAnnotation);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.valueParamUniqId);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.typeAnnotation);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.typeParameterAnnotation);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.typeParamUniqId);
    registry.add(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.packageFragmentFiles);
  }
  public interface HeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.library.metadata.Header)
      org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional int32 flags = 1;</code>
     *
     * <pre>
     *preRelease
     * </pre>
     */
    boolean hasFlags();
    /**
     * <code>optional int32 flags = 1;</code>
     *
     * <pre>
     *preRelease
     * </pre>
     */
    int getFlags();

    /**
     * <code>optional int32 js_code_binary_version = 2 [default = 1];</code>
     *
     * <pre>
     * (patch &lt;&lt; 16) + (minor &lt;&lt; 8) + major
     * </pre>
     */
    boolean hasJsCodeBinaryVersion();
    /**
     * <code>optional int32 js_code_binary_version = 2 [default = 1];</code>
     *
     * <pre>
     * (patch &lt;&lt; 16) + (minor &lt;&lt; 8) + major
     * </pre>
     */
    int getJsCodeBinaryVersion();

    /**
     * <code>optional string package_fq_name = 3;</code>
     */
    boolean hasPackageFqName();
    /**
     * <code>optional string package_fq_name = 3;</code>
     */
    java.lang.String getPackageFqName();
    /**
     * <code>optional string package_fq_name = 3;</code>
     */
    org.jetbrains.kotlin.protobuf.ByteString
        getPackageFqNameBytes();

    /**
     * <code>optional .org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
     */
    boolean hasStrings();
    /**
     * <code>optional .org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
     */
    org.jetbrains.kotlin.metadata.ProtoBuf.StringTable getStrings();

    /**
     * <code>optional .org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
     */
    boolean hasQualifiedNames();
    /**
     * <code>optional .org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
     */
    org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable getQualifiedNames();

    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     *
     * <pre>
     * Annotations on the whole module
     * </pre>
     */
    java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> 
        getAnnotationList();
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     *
     * <pre>
     * Annotations on the whole module
     * </pre>
     */
    org.jetbrains.kotlin.metadata.ProtoBuf.Annotation getAnnotation(int index);
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     *
     * <pre>
     * Annotations on the whole module
     * </pre>
     */
    int getAnnotationCount();
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.library.metadata.Header}
   */
  public static final class Header extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.library.metadata.Header)
      HeaderOrBuilder {
    // Use Header.newBuilder() to construct.
    private Header(org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Header(boolean noInit) { this.unknownFields = org.jetbrains.kotlin.protobuf.ByteString.EMPTY;}

    private static final Header defaultInstance;
    public static Header getDefaultInstance() {
      return defaultInstance;
    }

    public Header getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final org.jetbrains.kotlin.protobuf.ByteString unknownFields;
    private Header(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      org.jetbrains.kotlin.protobuf.ByteString.Output unknownFieldsOutput =
          org.jetbrains.kotlin.protobuf.ByteString.newOutput();
      org.jetbrains.kotlin.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          org.jetbrains.kotlin.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput, 1);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              flags_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              jsCodeBinaryVersion_ = input.readInt32();
              break;
            }
            case 26: {
              org.jetbrains.kotlin.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              packageFqName_ = bs;
              break;
            }
            case 34: {
              org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = strings_.toBuilder();
              }
              strings_ = input.readMessage(org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(strings_);
                strings_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = qualifiedNames_.toBuilder();
              }
              qualifiedNames_ = input.readMessage(org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(qualifiedNames_);
                qualifiedNames_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                annotation_ = new java.util.ArrayList<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>();
                mutable_bitField0_ |= 0x00000020;
              }
              annotation_.add(input.readMessage(org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          annotation_ = java.util.Collections.unmodifiableList(annotation_);
        }
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static org.jetbrains.kotlin.protobuf.Parser<Header> PARSER =
        new org.jetbrains.kotlin.protobuf.AbstractParser<Header>() {
      public Header parsePartialFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
        return new Header(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public org.jetbrains.kotlin.protobuf.Parser<Header> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FLAGS_FIELD_NUMBER = 1;
    private int flags_;
    /**
     * <code>optional int32 flags = 1;</code>
     *
     * <pre>
     *preRelease
     * </pre>
     */
    public boolean hasFlags() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 flags = 1;</code>
     *
     * <pre>
     *preRelease
     * </pre>
     */
    public int getFlags() {
      return flags_;
    }

    public static final int JS_CODE_BINARY_VERSION_FIELD_NUMBER = 2;
    private int jsCodeBinaryVersion_;
    /**
     * <code>optional int32 js_code_binary_version = 2 [default = 1];</code>
     *
     * <pre>
     * (patch &lt;&lt; 16) + (minor &lt;&lt; 8) + major
     * </pre>
     */
    public boolean hasJsCodeBinaryVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 js_code_binary_version = 2 [default = 1];</code>
     *
     * <pre>
     * (patch &lt;&lt; 16) + (minor &lt;&lt; 8) + major
     * </pre>
     */
    public int getJsCodeBinaryVersion() {
      return jsCodeBinaryVersion_;
    }

    public static final int PACKAGE_FQ_NAME_FIELD_NUMBER = 3;
    private java.lang.Object packageFqName_;
    /**
     * <code>optional string package_fq_name = 3;</code>
     */
    public boolean hasPackageFqName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string package_fq_name = 3;</code>
     */
    public java.lang.String getPackageFqName() {
      java.lang.Object ref = packageFqName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        org.jetbrains.kotlin.protobuf.ByteString bs = 
            (org.jetbrains.kotlin.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          packageFqName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string package_fq_name = 3;</code>
     */
    public org.jetbrains.kotlin.protobuf.ByteString
        getPackageFqNameBytes() {
      java.lang.Object ref = packageFqName_;
      if (ref instanceof java.lang.String) {
        org.jetbrains.kotlin.protobuf.ByteString b = 
            org.jetbrains.kotlin.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        packageFqName_ = b;
        return b;
      } else {
        return (org.jetbrains.kotlin.protobuf.ByteString) ref;
      }
    }

    public static final int STRINGS_FIELD_NUMBER = 4;
    private org.jetbrains.kotlin.metadata.ProtoBuf.StringTable strings_;
    /**
     * <code>optional .org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
     */
    public boolean hasStrings() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
     */
    public org.jetbrains.kotlin.metadata.ProtoBuf.StringTable getStrings() {
      return strings_;
    }

    public static final int QUALIFIED_NAMES_FIELD_NUMBER = 5;
    private org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable qualifiedNames_;
    /**
     * <code>optional .org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
     */
    public boolean hasQualifiedNames() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
     */
    public org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable getQualifiedNames() {
      return qualifiedNames_;
    }

    public static final int ANNOTATION_FIELD_NUMBER = 6;
    private java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> annotation_;
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     *
     * <pre>
     * Annotations on the whole module
     * </pre>
     */
    public java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> getAnnotationList() {
      return annotation_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     *
     * <pre>
     * Annotations on the whole module
     * </pre>
     */
    public java.util.List<? extends org.jetbrains.kotlin.metadata.ProtoBuf.AnnotationOrBuilder> 
        getAnnotationOrBuilderList() {
      return annotation_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     *
     * <pre>
     * Annotations on the whole module
     * </pre>
     */
    public int getAnnotationCount() {
      return annotation_.size();
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     *
     * <pre>
     * Annotations on the whole module
     * </pre>
     */
    public org.jetbrains.kotlin.metadata.ProtoBuf.Annotation getAnnotation(int index) {
      return annotation_.get(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     *
     * <pre>
     * Annotations on the whole module
     * </pre>
     */
    public org.jetbrains.kotlin.metadata.ProtoBuf.AnnotationOrBuilder getAnnotationOrBuilder(
        int index) {
      return annotation_.get(index);
    }

    private void initFields() {
      flags_ = 0;
      jsCodeBinaryVersion_ = 1;
      packageFqName_ = "";
      strings_ = org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.getDefaultInstance();
      qualifiedNames_ = org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.getDefaultInstance();
      annotation_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasQualifiedNames()) {
        if (!getQualifiedNames().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getAnnotationCount(); i++) {
        if (!getAnnotation(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(org.jetbrains.kotlin.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, flags_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, jsCodeBinaryVersion_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getPackageFqNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, strings_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, qualifiedNames_);
      }
      for (int i = 0; i < annotation_.size(); i++) {
        output.writeMessage(6, annotation_.get(i));
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeInt32Size(1, flags_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeInt32Size(2, jsCodeBinaryVersion_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeBytesSize(3, getPackageFqNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeMessageSize(4, strings_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeMessageSize(5, qualifiedNames_);
      }
      for (int i = 0; i < annotation_.size(); i++) {
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeMessageSize(6, annotation_.get(i));
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header parseFrom(byte[] data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header parseFrom(
        byte[] data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header parseFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header parseDelimitedFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code org.jetbrains.kotlin.library.metadata.Header}
     */
    public static final class Builder extends
        org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
          org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.library.metadata.Header)
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.HeaderOrBuilder {
      // Construct using org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        flags_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        jsCodeBinaryVersion_ = 1;
        bitField0_ = (bitField0_ & ~0x00000002);
        packageFqName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        strings_ = org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        qualifiedNames_ = org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000010);
        annotation_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header getDefaultInstanceForType() {
        return org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header.getDefaultInstance();
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header build() {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header buildPartial() {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header result = new org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.flags_ = flags_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.jsCodeBinaryVersion_ = jsCodeBinaryVersion_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.packageFqName_ = packageFqName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.strings_ = strings_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.qualifiedNames_ = qualifiedNames_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          annotation_ = java.util.Collections.unmodifiableList(annotation_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.annotation_ = annotation_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header other) {
        if (other == org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header.getDefaultInstance()) return this;
        if (other.hasFlags()) {
          setFlags(other.getFlags());
        }
        if (other.hasJsCodeBinaryVersion()) {
          setJsCodeBinaryVersion(other.getJsCodeBinaryVersion());
        }
        if (other.hasPackageFqName()) {
          bitField0_ |= 0x00000004;
          packageFqName_ = other.packageFqName_;
          
        }
        if (other.hasStrings()) {
          mergeStrings(other.getStrings());
        }
        if (other.hasQualifiedNames()) {
          mergeQualifiedNames(other.getQualifiedNames());
        }
        if (!other.annotation_.isEmpty()) {
          if (annotation_.isEmpty()) {
            annotation_ = other.annotation_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureAnnotationIsMutable();
            annotation_.addAll(other.annotation_);
          }
          
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (hasQualifiedNames()) {
          if (!getQualifiedNames().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getAnnotationCount(); i++) {
          if (!getAnnotation(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Header) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int flags_ ;
      /**
       * <code>optional int32 flags = 1;</code>
       *
       * <pre>
       *preRelease
       * </pre>
       */
      public boolean hasFlags() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 flags = 1;</code>
       *
       * <pre>
       *preRelease
       * </pre>
       */
      public int getFlags() {
        return flags_;
      }
      /**
       * <code>optional int32 flags = 1;</code>
       *
       * <pre>
       *preRelease
       * </pre>
       */
      public Builder setFlags(int value) {
        bitField0_ |= 0x00000001;
        flags_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 flags = 1;</code>
       *
       * <pre>
       *preRelease
       * </pre>
       */
      public Builder clearFlags() {
        bitField0_ = (bitField0_ & ~0x00000001);
        flags_ = 0;
        
        return this;
      }

      private int jsCodeBinaryVersion_ = 1;
      /**
       * <code>optional int32 js_code_binary_version = 2 [default = 1];</code>
       *
       * <pre>
       * (patch &lt;&lt; 16) + (minor &lt;&lt; 8) + major
       * </pre>
       */
      public boolean hasJsCodeBinaryVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 js_code_binary_version = 2 [default = 1];</code>
       *
       * <pre>
       * (patch &lt;&lt; 16) + (minor &lt;&lt; 8) + major
       * </pre>
       */
      public int getJsCodeBinaryVersion() {
        return jsCodeBinaryVersion_;
      }
      /**
       * <code>optional int32 js_code_binary_version = 2 [default = 1];</code>
       *
       * <pre>
       * (patch &lt;&lt; 16) + (minor &lt;&lt; 8) + major
       * </pre>
       */
      public Builder setJsCodeBinaryVersion(int value) {
        bitField0_ |= 0x00000002;
        jsCodeBinaryVersion_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 js_code_binary_version = 2 [default = 1];</code>
       *
       * <pre>
       * (patch &lt;&lt; 16) + (minor &lt;&lt; 8) + major
       * </pre>
       */
      public Builder clearJsCodeBinaryVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        jsCodeBinaryVersion_ = 1;
        
        return this;
      }

      private java.lang.Object packageFqName_ = "";
      /**
       * <code>optional string package_fq_name = 3;</code>
       */
      public boolean hasPackageFqName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string package_fq_name = 3;</code>
       */
      public java.lang.String getPackageFqName() {
        java.lang.Object ref = packageFqName_;
        if (!(ref instanceof java.lang.String)) {
          org.jetbrains.kotlin.protobuf.ByteString bs =
              (org.jetbrains.kotlin.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            packageFqName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string package_fq_name = 3;</code>
       */
      public org.jetbrains.kotlin.protobuf.ByteString
          getPackageFqNameBytes() {
        java.lang.Object ref = packageFqName_;
        if (ref instanceof String) {
          org.jetbrains.kotlin.protobuf.ByteString b = 
              org.jetbrains.kotlin.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          packageFqName_ = b;
          return b;
        } else {
          return (org.jetbrains.kotlin.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string package_fq_name = 3;</code>
       */
      public Builder setPackageFqName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        packageFqName_ = value;
        
        return this;
      }
      /**
       * <code>optional string package_fq_name = 3;</code>
       */
      public Builder clearPackageFqName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        packageFqName_ = getDefaultInstance().getPackageFqName();
        
        return this;
      }
      /**
       * <code>optional string package_fq_name = 3;</code>
       */
      public Builder setPackageFqNameBytes(
          org.jetbrains.kotlin.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        packageFqName_ = value;
        
        return this;
      }

      private org.jetbrains.kotlin.metadata.ProtoBuf.StringTable strings_ = org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.getDefaultInstance();
      /**
       * <code>optional .org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
       */
      public boolean hasStrings() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
       */
      public org.jetbrains.kotlin.metadata.ProtoBuf.StringTable getStrings() {
        return strings_;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
       */
      public Builder setStrings(org.jetbrains.kotlin.metadata.ProtoBuf.StringTable value) {
        if (value == null) {
          throw new NullPointerException();
        }
        strings_ = value;

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
       */
      public Builder setStrings(
          org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.Builder builderForValue) {
        strings_ = builderForValue.build();

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
       */
      public Builder mergeStrings(org.jetbrains.kotlin.metadata.ProtoBuf.StringTable value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            strings_ != org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.getDefaultInstance()) {
          strings_ =
            org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.newBuilder(strings_).mergeFrom(value).buildPartial();
        } else {
          strings_ = value;
        }

        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
       */
      public Builder clearStrings() {
        strings_ = org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      private org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable qualifiedNames_ = org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.getDefaultInstance();
      /**
       * <code>optional .org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
       */
      public boolean hasQualifiedNames() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
       */
      public org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable getQualifiedNames() {
        return qualifiedNames_;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
       */
      public Builder setQualifiedNames(org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable value) {
        if (value == null) {
          throw new NullPointerException();
        }
        qualifiedNames_ = value;

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
       */
      public Builder setQualifiedNames(
          org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.Builder builderForValue) {
        qualifiedNames_ = builderForValue.build();

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
       */
      public Builder mergeQualifiedNames(org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable value) {
        if (((bitField0_ & 0x00000010) == 0x00000010) &&
            qualifiedNames_ != org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.getDefaultInstance()) {
          qualifiedNames_ =
            org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.newBuilder(qualifiedNames_).mergeFrom(value).buildPartial();
        } else {
          qualifiedNames_ = value;
        }

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
       */
      public Builder clearQualifiedNames() {
        qualifiedNames_ = org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      private java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> annotation_ =
        java.util.Collections.emptyList();
      private void ensureAnnotationIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          annotation_ = new java.util.ArrayList<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>(annotation_);
          bitField0_ |= 0x00000020;
         }
      }

      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       *
       * <pre>
       * Annotations on the whole module
       * </pre>
       */
      public java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> getAnnotationList() {
        return java.util.Collections.unmodifiableList(annotation_);
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       *
       * <pre>
       * Annotations on the whole module
       * </pre>
       */
      public int getAnnotationCount() {
        return annotation_.size();
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       *
       * <pre>
       * Annotations on the whole module
       * </pre>
       */
      public org.jetbrains.kotlin.metadata.ProtoBuf.Annotation getAnnotation(int index) {
        return annotation_.get(index);
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       *
       * <pre>
       * Annotations on the whole module
       * </pre>
       */
      public Builder setAnnotation(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.Annotation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAnnotationIsMutable();
        annotation_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       *
       * <pre>
       * Annotations on the whole module
       * </pre>
       */
      public Builder setAnnotation(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.Builder builderForValue) {
        ensureAnnotationIsMutable();
        annotation_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       *
       * <pre>
       * Annotations on the whole module
       * </pre>
       */
      public Builder addAnnotation(org.jetbrains.kotlin.metadata.ProtoBuf.Annotation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAnnotationIsMutable();
        annotation_.add(value);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       *
       * <pre>
       * Annotations on the whole module
       * </pre>
       */
      public Builder addAnnotation(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.Annotation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAnnotationIsMutable();
        annotation_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       *
       * <pre>
       * Annotations on the whole module
       * </pre>
       */
      public Builder addAnnotation(
          org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.Builder builderForValue) {
        ensureAnnotationIsMutable();
        annotation_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       *
       * <pre>
       * Annotations on the whole module
       * </pre>
       */
      public Builder addAnnotation(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.Builder builderForValue) {
        ensureAnnotationIsMutable();
        annotation_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       *
       * <pre>
       * Annotations on the whole module
       * </pre>
       */
      public Builder addAllAnnotation(
          java.lang.Iterable<? extends org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> values) {
        ensureAnnotationIsMutable();
        org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
            values, annotation_);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       *
       * <pre>
       * Annotations on the whole module
       * </pre>
       */
      public Builder clearAnnotation() {
        annotation_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       *
       * <pre>
       * Annotations on the whole module
       * </pre>
       */
      public Builder removeAnnotation(int index) {
        ensureAnnotationIsMutable();
        annotation_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.library.metadata.Header)
    }

    static {
      defaultInstance = new Header(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.library.metadata.Header)
  }

  public interface FileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.library.metadata.File)
      org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * If absent, id is the index of the file in the Files.file list
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * If absent, id is the index of the file in the Files.file list
     * </pre>
     */
    int getId();

    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> 
        getAnnotationList();
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    org.jetbrains.kotlin.metadata.ProtoBuf.Annotation getAnnotation(int index);
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    int getAnnotationCount();
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.library.metadata.File}
   */
  public static final class File extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.library.metadata.File)
      FileOrBuilder {
    // Use File.newBuilder() to construct.
    private File(org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private File(boolean noInit) { this.unknownFields = org.jetbrains.kotlin.protobuf.ByteString.EMPTY;}

    private static final File defaultInstance;
    public static File getDefaultInstance() {
      return defaultInstance;
    }

    public File getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final org.jetbrains.kotlin.protobuf.ByteString unknownFields;
    private File(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      org.jetbrains.kotlin.protobuf.ByteString.Output unknownFieldsOutput =
          org.jetbrains.kotlin.protobuf.ByteString.newOutput();
      org.jetbrains.kotlin.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          org.jetbrains.kotlin.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput, 1);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                annotation_ = new java.util.ArrayList<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>();
                mutable_bitField0_ |= 0x00000002;
              }
              annotation_.add(input.readMessage(org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          annotation_ = java.util.Collections.unmodifiableList(annotation_);
        }
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static org.jetbrains.kotlin.protobuf.Parser<File> PARSER =
        new org.jetbrains.kotlin.protobuf.AbstractParser<File>() {
      public File parsePartialFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
        return new File(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public org.jetbrains.kotlin.protobuf.Parser<File> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * If absent, id is the index of the file in the Files.file list
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * If absent, id is the index of the file in the Files.file list
     * </pre>
     */
    public int getId() {
      return id_;
    }

    public static final int ANNOTATION_FIELD_NUMBER = 2;
    private java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> annotation_;
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    public java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> getAnnotationList() {
      return annotation_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    public java.util.List<? extends org.jetbrains.kotlin.metadata.ProtoBuf.AnnotationOrBuilder> 
        getAnnotationOrBuilderList() {
      return annotation_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    public int getAnnotationCount() {
      return annotation_.size();
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    public org.jetbrains.kotlin.metadata.ProtoBuf.Annotation getAnnotation(int index) {
      return annotation_.get(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    public org.jetbrains.kotlin.metadata.ProtoBuf.AnnotationOrBuilder getAnnotationOrBuilder(
        int index) {
      return annotation_.get(index);
    }

    private void initFields() {
      id_ = 0;
      annotation_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getAnnotationCount(); i++) {
        if (!getAnnotation(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(org.jetbrains.kotlin.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      for (int i = 0; i < annotation_.size(); i++) {
        output.writeMessage(2, annotation_.get(i));
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      for (int i = 0; i < annotation_.size(); i++) {
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeMessageSize(2, annotation_.get(i));
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File parseFrom(byte[] data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File parseFrom(
        byte[] data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File parseFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File parseDelimitedFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code org.jetbrains.kotlin.library.metadata.File}
     */
    public static final class Builder extends
        org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
          org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.library.metadata.File)
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.FileOrBuilder {
      // Construct using org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        annotation_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File getDefaultInstanceForType() {
        return org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File.getDefaultInstance();
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File build() {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File buildPartial() {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File result = new org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          annotation_ = java.util.Collections.unmodifiableList(annotation_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.annotation_ = annotation_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File other) {
        if (other == org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (!other.annotation_.isEmpty()) {
          if (annotation_.isEmpty()) {
            annotation_ = other.annotation_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureAnnotationIsMutable();
            annotation_.addAll(other.annotation_);
          }
          
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getAnnotationCount(); i++) {
          if (!getAnnotation(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * If absent, id is the index of the file in the Files.file list
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * If absent, id is the index of the file in the Files.file list
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * If absent, id is the index of the file in the Files.file list
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 id = 1;</code>
       *
       * <pre>
       * If absent, id is the index of the file in the Files.file list
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      private java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> annotation_ =
        java.util.Collections.emptyList();
      private void ensureAnnotationIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          annotation_ = new java.util.ArrayList<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>(annotation_);
          bitField0_ |= 0x00000002;
         }
      }

      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      public java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> getAnnotationList() {
        return java.util.Collections.unmodifiableList(annotation_);
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      public int getAnnotationCount() {
        return annotation_.size();
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      public org.jetbrains.kotlin.metadata.ProtoBuf.Annotation getAnnotation(int index) {
        return annotation_.get(index);
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      public Builder setAnnotation(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.Annotation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAnnotationIsMutable();
        annotation_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      public Builder setAnnotation(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.Builder builderForValue) {
        ensureAnnotationIsMutable();
        annotation_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      public Builder addAnnotation(org.jetbrains.kotlin.metadata.ProtoBuf.Annotation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAnnotationIsMutable();
        annotation_.add(value);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      public Builder addAnnotation(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.Annotation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAnnotationIsMutable();
        annotation_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      public Builder addAnnotation(
          org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.Builder builderForValue) {
        ensureAnnotationIsMutable();
        annotation_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      public Builder addAnnotation(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.Builder builderForValue) {
        ensureAnnotationIsMutable();
        annotation_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      public Builder addAllAnnotation(
          java.lang.Iterable<? extends org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> values) {
        ensureAnnotationIsMutable();
        org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
            values, annotation_);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      public Builder clearAnnotation() {
        annotation_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      public Builder removeAnnotation(int index) {
        ensureAnnotationIsMutable();
        annotation_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.library.metadata.File)
    }

    static {
      defaultInstance = new File(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.library.metadata.File)
  }

  public interface FilesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.library.metadata.Files)
      org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .org.jetbrains.kotlin.library.metadata.File file = 1;</code>
     */
    java.util.List<org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File> 
        getFileList();
    /**
     * <code>repeated .org.jetbrains.kotlin.library.metadata.File file = 1;</code>
     */
    org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File getFile(int index);
    /**
     * <code>repeated .org.jetbrains.kotlin.library.metadata.File file = 1;</code>
     */
    int getFileCount();
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.library.metadata.Files}
   */
  public static final class Files extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.library.metadata.Files)
      FilesOrBuilder {
    // Use Files.newBuilder() to construct.
    private Files(org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Files(boolean noInit) { this.unknownFields = org.jetbrains.kotlin.protobuf.ByteString.EMPTY;}

    private static final Files defaultInstance;
    public static Files getDefaultInstance() {
      return defaultInstance;
    }

    public Files getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final org.jetbrains.kotlin.protobuf.ByteString unknownFields;
    private Files(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      org.jetbrains.kotlin.protobuf.ByteString.Output unknownFieldsOutput =
          org.jetbrains.kotlin.protobuf.ByteString.newOutput();
      org.jetbrains.kotlin.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          org.jetbrains.kotlin.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput, 1);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                file_ = new java.util.ArrayList<org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File>();
                mutable_bitField0_ |= 0x00000001;
              }
              file_.add(input.readMessage(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          file_ = java.util.Collections.unmodifiableList(file_);
        }
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static org.jetbrains.kotlin.protobuf.Parser<Files> PARSER =
        new org.jetbrains.kotlin.protobuf.AbstractParser<Files>() {
      public Files parsePartialFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
        return new Files(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public org.jetbrains.kotlin.protobuf.Parser<Files> getParserForType() {
      return PARSER;
    }

    public static final int FILE_FIELD_NUMBER = 1;
    private java.util.List<org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File> file_;
    /**
     * <code>repeated .org.jetbrains.kotlin.library.metadata.File file = 1;</code>
     */
    public java.util.List<org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File> getFileList() {
      return file_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.library.metadata.File file = 1;</code>
     */
    public java.util.List<? extends org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.FileOrBuilder> 
        getFileOrBuilderList() {
      return file_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.library.metadata.File file = 1;</code>
     */
    public int getFileCount() {
      return file_.size();
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.library.metadata.File file = 1;</code>
     */
    public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File getFile(int index) {
      return file_.get(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.library.metadata.File file = 1;</code>
     */
    public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.FileOrBuilder getFileOrBuilder(
        int index) {
      return file_.get(index);
    }

    private void initFields() {
      file_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getFileCount(); i++) {
        if (!getFile(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(org.jetbrains.kotlin.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < file_.size(); i++) {
        output.writeMessage(1, file_.get(i));
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < file_.size(); i++) {
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeMessageSize(1, file_.get(i));
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files parseFrom(byte[] data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files parseFrom(
        byte[] data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files parseFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files parseDelimitedFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code org.jetbrains.kotlin.library.metadata.Files}
     */
    public static final class Builder extends
        org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
          org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.library.metadata.Files)
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.FilesOrBuilder {
      // Construct using org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        file_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files getDefaultInstanceForType() {
        return org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files.getDefaultInstance();
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files build() {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files buildPartial() {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files result = new org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          file_ = java.util.Collections.unmodifiableList(file_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.file_ = file_;
        return result;
      }

      public Builder mergeFrom(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files other) {
        if (other == org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files.getDefaultInstance()) return this;
        if (!other.file_.isEmpty()) {
          if (file_.isEmpty()) {
            file_ = other.file_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFileIsMutable();
            file_.addAll(other.file_);
          }
          
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getFileCount(); i++) {
          if (!getFile(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File> file_ =
        java.util.Collections.emptyList();
      private void ensureFileIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          file_ = new java.util.ArrayList<org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File>(file_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .org.jetbrains.kotlin.library.metadata.File file = 1;</code>
       */
      public java.util.List<org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File> getFileList() {
        return java.util.Collections.unmodifiableList(file_);
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.library.metadata.File file = 1;</code>
       */
      public int getFileCount() {
        return file_.size();
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.library.metadata.File file = 1;</code>
       */
      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File getFile(int index) {
        return file_.get(index);
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.library.metadata.File file = 1;</code>
       */
      public Builder setFile(
          int index, org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFileIsMutable();
        file_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.library.metadata.File file = 1;</code>
       */
      public Builder setFile(
          int index, org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File.Builder builderForValue) {
        ensureFileIsMutable();
        file_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.library.metadata.File file = 1;</code>
       */
      public Builder addFile(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFileIsMutable();
        file_.add(value);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.library.metadata.File file = 1;</code>
       */
      public Builder addFile(
          int index, org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFileIsMutable();
        file_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.library.metadata.File file = 1;</code>
       */
      public Builder addFile(
          org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File.Builder builderForValue) {
        ensureFileIsMutable();
        file_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.library.metadata.File file = 1;</code>
       */
      public Builder addFile(
          int index, org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File.Builder builderForValue) {
        ensureFileIsMutable();
        file_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.library.metadata.File file = 1;</code>
       */
      public Builder addAllFile(
          java.lang.Iterable<? extends org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.File> values) {
        ensureFileIsMutable();
        org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
            values, file_);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.library.metadata.File file = 1;</code>
       */
      public Builder clearFile() {
        file_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.library.metadata.File file = 1;</code>
       */
      public Builder removeFile(int index) {
        ensureFileIsMutable();
        file_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.library.metadata.Files)
    }

    static {
      defaultInstance = new Files(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.library.metadata.Files)
  }

  public interface DescriptorUniqIdOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.library.metadata.DescriptorUniqId)
      org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int64 index = 1;</code>
     */
    boolean hasIndex();
    /**
     * <code>required int64 index = 1;</code>
     */
    long getIndex();
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.library.metadata.DescriptorUniqId}
   */
  public static final class DescriptorUniqId extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.library.metadata.DescriptorUniqId)
      DescriptorUniqIdOrBuilder {
    // Use DescriptorUniqId.newBuilder() to construct.
    private DescriptorUniqId(org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DescriptorUniqId(boolean noInit) { this.unknownFields = org.jetbrains.kotlin.protobuf.ByteString.EMPTY;}

    private static final DescriptorUniqId defaultInstance;
    public static DescriptorUniqId getDefaultInstance() {
      return defaultInstance;
    }

    public DescriptorUniqId getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final org.jetbrains.kotlin.protobuf.ByteString unknownFields;
    private DescriptorUniqId(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      org.jetbrains.kotlin.protobuf.ByteString.Output unknownFieldsOutput =
          org.jetbrains.kotlin.protobuf.ByteString.newOutput();
      org.jetbrains.kotlin.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          org.jetbrains.kotlin.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput, 1);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              index_ = input.readInt64();
              break;
            }
          }
        }
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static org.jetbrains.kotlin.protobuf.Parser<DescriptorUniqId> PARSER =
        new org.jetbrains.kotlin.protobuf.AbstractParser<DescriptorUniqId>() {
      public DescriptorUniqId parsePartialFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
        return new DescriptorUniqId(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public org.jetbrains.kotlin.protobuf.Parser<DescriptorUniqId> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int INDEX_FIELD_NUMBER = 1;
    private long index_;
    /**
     * <code>required int64 index = 1;</code>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 index = 1;</code>
     */
    public long getIndex() {
      return index_;
    }

    private void initFields() {
      index_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(org.jetbrains.kotlin.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, index_);
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeInt64Size(1, index_);
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId parseFrom(byte[] data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId parseFrom(
        byte[] data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId parseFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId parseDelimitedFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code org.jetbrains.kotlin.library.metadata.DescriptorUniqId}
     */
    public static final class Builder extends
        org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
          org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.library.metadata.DescriptorUniqId)
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqIdOrBuilder {
      // Construct using org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        index_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId getDefaultInstanceForType() {
        return org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.getDefaultInstance();
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId build() {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId buildPartial() {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId result = new org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.index_ = index_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId other) {
        if (other == org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.getDefaultInstance()) return this;
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasIndex()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long index_ ;
      /**
       * <code>required int64 index = 1;</code>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 index = 1;</code>
       */
      public long getIndex() {
        return index_;
      }
      /**
       * <code>required int64 index = 1;</code>
       */
      public Builder setIndex(long value) {
        bitField0_ |= 0x00000001;
        index_ = value;
        
        return this;
      }
      /**
       * <code>required int64 index = 1;</code>
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0L;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.library.metadata.DescriptorUniqId)
    }

    static {
      defaultInstance = new DescriptorUniqId(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.library.metadata.DescriptorUniqId)
  }

  public interface ClassesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.library.metadata.Classes)
      org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated int32 class_name = 1 [packed = true];</code>
     *
     * <pre>
     * id in StringTable
     * </pre>
     */
    java.util.List<java.lang.Integer> getClassNameList();
    /**
     * <code>repeated int32 class_name = 1 [packed = true];</code>
     *
     * <pre>
     * id in StringTable
     * </pre>
     */
    int getClassNameCount();
    /**
     * <code>repeated int32 class_name = 1 [packed = true];</code>
     *
     * <pre>
     * id in StringTable
     * </pre>
     */
    int getClassName(int index);
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.library.metadata.Classes}
   */
  public static final class Classes extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.library.metadata.Classes)
      ClassesOrBuilder {
    // Use Classes.newBuilder() to construct.
    private Classes(org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Classes(boolean noInit) { this.unknownFields = org.jetbrains.kotlin.protobuf.ByteString.EMPTY;}

    private static final Classes defaultInstance;
    public static Classes getDefaultInstance() {
      return defaultInstance;
    }

    public Classes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final org.jetbrains.kotlin.protobuf.ByteString unknownFields;
    private Classes(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      org.jetbrains.kotlin.protobuf.ByteString.Output unknownFieldsOutput =
          org.jetbrains.kotlin.protobuf.ByteString.newOutput();
      org.jetbrains.kotlin.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          org.jetbrains.kotlin.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput, 1);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                className_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              className_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                className_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                className_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          className_ = java.util.Collections.unmodifiableList(className_);
        }
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static org.jetbrains.kotlin.protobuf.Parser<Classes> PARSER =
        new org.jetbrains.kotlin.protobuf.AbstractParser<Classes>() {
      public Classes parsePartialFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
        return new Classes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public org.jetbrains.kotlin.protobuf.Parser<Classes> getParserForType() {
      return PARSER;
    }

    public static final int CLASS_NAME_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> className_;
    /**
     * <code>repeated int32 class_name = 1 [packed = true];</code>
     *
     * <pre>
     * id in StringTable
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getClassNameList() {
      return className_;
    }
    /**
     * <code>repeated int32 class_name = 1 [packed = true];</code>
     *
     * <pre>
     * id in StringTable
     * </pre>
     */
    public int getClassNameCount() {
      return className_.size();
    }
    /**
     * <code>repeated int32 class_name = 1 [packed = true];</code>
     *
     * <pre>
     * id in StringTable
     * </pre>
     */
    public int getClassName(int index) {
      return className_.get(index);
    }
    private int classNameMemoizedSerializedSize = -1;

    private void initFields() {
      className_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(org.jetbrains.kotlin.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getClassNameList().size() > 0) {
        output.writeRawVarint32(10);
        output.writeRawVarint32(classNameMemoizedSerializedSize);
      }
      for (int i = 0; i < className_.size(); i++) {
        output.writeInt32NoTag(className_.get(i));
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < className_.size(); i++) {
          dataSize += org.jetbrains.kotlin.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(className_.get(i));
        }
        size += dataSize;
        if (!getClassNameList().isEmpty()) {
          size += 1;
          size += org.jetbrains.kotlin.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        classNameMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes parseFrom(byte[] data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes parseFrom(
        byte[] data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes parseFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes parseDelimitedFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code org.jetbrains.kotlin.library.metadata.Classes}
     */
    public static final class Builder extends
        org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
          org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.library.metadata.Classes)
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.ClassesOrBuilder {
      // Construct using org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        className_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes getDefaultInstanceForType() {
        return org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes.getDefaultInstance();
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes build() {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes buildPartial() {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes result = new org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          className_ = java.util.Collections.unmodifiableList(className_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.className_ = className_;
        return result;
      }

      public Builder mergeFrom(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes other) {
        if (other == org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes.getDefaultInstance()) return this;
        if (!other.className_.isEmpty()) {
          if (className_.isEmpty()) {
            className_ = other.className_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureClassNameIsMutable();
            className_.addAll(other.className_);
          }
          
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Classes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> className_ = java.util.Collections.emptyList();
      private void ensureClassNameIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          className_ = new java.util.ArrayList<java.lang.Integer>(className_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 class_name = 1 [packed = true];</code>
       *
       * <pre>
       * id in StringTable
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getClassNameList() {
        return java.util.Collections.unmodifiableList(className_);
      }
      /**
       * <code>repeated int32 class_name = 1 [packed = true];</code>
       *
       * <pre>
       * id in StringTable
       * </pre>
       */
      public int getClassNameCount() {
        return className_.size();
      }
      /**
       * <code>repeated int32 class_name = 1 [packed = true];</code>
       *
       * <pre>
       * id in StringTable
       * </pre>
       */
      public int getClassName(int index) {
        return className_.get(index);
      }
      /**
       * <code>repeated int32 class_name = 1 [packed = true];</code>
       *
       * <pre>
       * id in StringTable
       * </pre>
       */
      public Builder setClassName(
          int index, int value) {
        ensureClassNameIsMutable();
        className_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated int32 class_name = 1 [packed = true];</code>
       *
       * <pre>
       * id in StringTable
       * </pre>
       */
      public Builder addClassName(int value) {
        ensureClassNameIsMutable();
        className_.add(value);
        
        return this;
      }
      /**
       * <code>repeated int32 class_name = 1 [packed = true];</code>
       *
       * <pre>
       * id in StringTable
       * </pre>
       */
      public Builder addAllClassName(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureClassNameIsMutable();
        org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
            values, className_);
        
        return this;
      }
      /**
       * <code>repeated int32 class_name = 1 [packed = true];</code>
       *
       * <pre>
       * id in StringTable
       * </pre>
       */
      public Builder clearClassName() {
        className_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.library.metadata.Classes)
    }

    static {
      defaultInstance = new Classes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.library.metadata.Classes)
  }

  public interface LibraryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.library.metadata.Library)
      org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment> 
        getPackageFragmentList();
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment getPackageFragment(int index);
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    int getPackageFragmentCount();

    /**
     * <code>repeated string imported_module = 3;</code>
     */
    org.jetbrains.kotlin.protobuf.ProtocolStringList
        getImportedModuleList();
    /**
     * <code>repeated string imported_module = 3;</code>
     */
    int getImportedModuleCount();
    /**
     * <code>repeated string imported_module = 3;</code>
     */
    java.lang.String getImportedModule(int index);
    /**
     * <code>repeated string imported_module = 3;</code>
     */
    org.jetbrains.kotlin.protobuf.ByteString
        getImportedModuleBytes(int index);
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.library.metadata.Library}
   */
  public static final class Library extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.library.metadata.Library)
      LibraryOrBuilder {
    // Use Library.newBuilder() to construct.
    private Library(org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Library(boolean noInit) { this.unknownFields = org.jetbrains.kotlin.protobuf.ByteString.EMPTY;}

    private static final Library defaultInstance;
    public static Library getDefaultInstance() {
      return defaultInstance;
    }

    public Library getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final org.jetbrains.kotlin.protobuf.ByteString unknownFields;
    private Library(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      org.jetbrains.kotlin.protobuf.ByteString.Output unknownFieldsOutput =
          org.jetbrains.kotlin.protobuf.ByteString.newOutput();
      org.jetbrains.kotlin.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          org.jetbrains.kotlin.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput, 1);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                packageFragment_ = new java.util.ArrayList<org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment>();
                mutable_bitField0_ |= 0x00000001;
              }
              packageFragment_.add(input.readMessage(org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              org.jetbrains.kotlin.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                importedModule_ = new org.jetbrains.kotlin.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              importedModule_.add(bs);
              break;
            }
          }
        }
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          packageFragment_ = java.util.Collections.unmodifiableList(packageFragment_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          importedModule_ = importedModule_.getUnmodifiableView();
        }
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static org.jetbrains.kotlin.protobuf.Parser<Library> PARSER =
        new org.jetbrains.kotlin.protobuf.AbstractParser<Library>() {
      public Library parsePartialFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
        return new Library(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public org.jetbrains.kotlin.protobuf.Parser<Library> getParserForType() {
      return PARSER;
    }

    public static final int PACKAGE_FRAGMENT_FIELD_NUMBER = 2;
    private java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment> packageFragment_;
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    public java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment> getPackageFragmentList() {
      return packageFragment_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    public java.util.List<? extends org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragmentOrBuilder> 
        getPackageFragmentOrBuilderList() {
      return packageFragment_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    public int getPackageFragmentCount() {
      return packageFragment_.size();
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    public org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment getPackageFragment(int index) {
      return packageFragment_.get(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    public org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragmentOrBuilder getPackageFragmentOrBuilder(
        int index) {
      return packageFragment_.get(index);
    }

    public static final int IMPORTED_MODULE_FIELD_NUMBER = 3;
    private org.jetbrains.kotlin.protobuf.LazyStringList importedModule_;
    /**
     * <code>repeated string imported_module = 3;</code>
     */
    public org.jetbrains.kotlin.protobuf.ProtocolStringList
        getImportedModuleList() {
      return importedModule_;
    }
    /**
     * <code>repeated string imported_module = 3;</code>
     */
    public int getImportedModuleCount() {
      return importedModule_.size();
    }
    /**
     * <code>repeated string imported_module = 3;</code>
     */
    public java.lang.String getImportedModule(int index) {
      return importedModule_.get(index);
    }
    /**
     * <code>repeated string imported_module = 3;</code>
     */
    public org.jetbrains.kotlin.protobuf.ByteString
        getImportedModuleBytes(int index) {
      return importedModule_.getByteString(index);
    }

    private void initFields() {
      packageFragment_ = java.util.Collections.emptyList();
      importedModule_ = org.jetbrains.kotlin.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getPackageFragmentCount(); i++) {
        if (!getPackageFragment(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(org.jetbrains.kotlin.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < packageFragment_.size(); i++) {
        output.writeMessage(2, packageFragment_.get(i));
      }
      for (int i = 0; i < importedModule_.size(); i++) {
        output.writeBytes(3, importedModule_.getByteString(i));
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < packageFragment_.size(); i++) {
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeMessageSize(2, packageFragment_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < importedModule_.size(); i++) {
          dataSize += org.jetbrains.kotlin.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(importedModule_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getImportedModuleList().size();
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library parseFrom(byte[] data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library parseFrom(
        byte[] data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library parseFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library parseDelimitedFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code org.jetbrains.kotlin.library.metadata.Library}
     */
    public static final class Builder extends
        org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
          org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.library.metadata.Library)
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LibraryOrBuilder {
      // Construct using org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packageFragment_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        importedModule_ = org.jetbrains.kotlin.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library getDefaultInstanceForType() {
        return org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library.getDefaultInstance();
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library build() {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library buildPartial() {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library result = new org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          packageFragment_ = java.util.Collections.unmodifiableList(packageFragment_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.packageFragment_ = packageFragment_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          importedModule_ = importedModule_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.importedModule_ = importedModule_;
        return result;
      }

      public Builder mergeFrom(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library other) {
        if (other == org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library.getDefaultInstance()) return this;
        if (!other.packageFragment_.isEmpty()) {
          if (packageFragment_.isEmpty()) {
            packageFragment_ = other.packageFragment_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePackageFragmentIsMutable();
            packageFragment_.addAll(other.packageFragment_);
          }
          
        }
        if (!other.importedModule_.isEmpty()) {
          if (importedModule_.isEmpty()) {
            importedModule_ = other.importedModule_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureImportedModuleIsMutable();
            importedModule_.addAll(other.importedModule_);
          }
          
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getPackageFragmentCount(); i++) {
          if (!getPackageFragment(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Library) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment> packageFragment_ =
        java.util.Collections.emptyList();
      private void ensurePackageFragmentIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          packageFragment_ = new java.util.ArrayList<org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment>(packageFragment_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      public java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment> getPackageFragmentList() {
        return java.util.Collections.unmodifiableList(packageFragment_);
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      public int getPackageFragmentCount() {
        return packageFragment_.size();
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      public org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment getPackageFragment(int index) {
        return packageFragment_.get(index);
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      public Builder setPackageFragment(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePackageFragmentIsMutable();
        packageFragment_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      public Builder setPackageFragment(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment.Builder builderForValue) {
        ensurePackageFragmentIsMutable();
        packageFragment_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      public Builder addPackageFragment(org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePackageFragmentIsMutable();
        packageFragment_.add(value);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      public Builder addPackageFragment(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePackageFragmentIsMutable();
        packageFragment_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      public Builder addPackageFragment(
          org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment.Builder builderForValue) {
        ensurePackageFragmentIsMutable();
        packageFragment_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      public Builder addPackageFragment(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment.Builder builderForValue) {
        ensurePackageFragmentIsMutable();
        packageFragment_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      public Builder addAllPackageFragment(
          java.lang.Iterable<? extends org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment> values) {
        ensurePackageFragmentIsMutable();
        org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
            values, packageFragment_);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      public Builder clearPackageFragment() {
        packageFragment_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      public Builder removePackageFragment(int index) {
        ensurePackageFragmentIsMutable();
        packageFragment_.remove(index);

        return this;
      }

      private org.jetbrains.kotlin.protobuf.LazyStringList importedModule_ = org.jetbrains.kotlin.protobuf.LazyStringArrayList.EMPTY;
      private void ensureImportedModuleIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          importedModule_ = new org.jetbrains.kotlin.protobuf.LazyStringArrayList(importedModule_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string imported_module = 3;</code>
       */
      public org.jetbrains.kotlin.protobuf.ProtocolStringList
          getImportedModuleList() {
        return importedModule_.getUnmodifiableView();
      }
      /**
       * <code>repeated string imported_module = 3;</code>
       */
      public int getImportedModuleCount() {
        return importedModule_.size();
      }
      /**
       * <code>repeated string imported_module = 3;</code>
       */
      public java.lang.String getImportedModule(int index) {
        return importedModule_.get(index);
      }
      /**
       * <code>repeated string imported_module = 3;</code>
       */
      public org.jetbrains.kotlin.protobuf.ByteString
          getImportedModuleBytes(int index) {
        return importedModule_.getByteString(index);
      }
      /**
       * <code>repeated string imported_module = 3;</code>
       */
      public Builder setImportedModule(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureImportedModuleIsMutable();
        importedModule_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated string imported_module = 3;</code>
       */
      public Builder addImportedModule(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureImportedModuleIsMutable();
        importedModule_.add(value);
        
        return this;
      }
      /**
       * <code>repeated string imported_module = 3;</code>
       */
      public Builder addAllImportedModule(
          java.lang.Iterable<java.lang.String> values) {
        ensureImportedModuleIsMutable();
        org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
            values, importedModule_);
        
        return this;
      }
      /**
       * <code>repeated string imported_module = 3;</code>
       */
      public Builder clearImportedModule() {
        importedModule_ = org.jetbrains.kotlin.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        
        return this;
      }
      /**
       * <code>repeated string imported_module = 3;</code>
       */
      public Builder addImportedModuleBytes(
          org.jetbrains.kotlin.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureImportedModuleIsMutable();
        importedModule_.add(value);
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.library.metadata.Library)
    }

    static {
      defaultInstance = new Library(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.library.metadata.Library)
  }

  public interface LinkDataPackageFragmentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.library.metadata.LinkDataPackageFragment)
      org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required string fq_name = 1;</code>
     *
     * <pre>
     * Make if an index?
     * </pre>
     */
    boolean hasFqName();
    /**
     * <code>required string fq_name = 1;</code>
     *
     * <pre>
     * Make if an index?
     * </pre>
     */
    java.lang.String getFqName();
    /**
     * <code>required string fq_name = 1;</code>
     *
     * <pre>
     * Make if an index?
     * </pre>
     */
    org.jetbrains.kotlin.protobuf.ByteString
        getFqNameBytes();

    /**
     * <code>required .org.jetbrains.kotlin.metadata.Package package = 4;</code>
     */
    boolean hasPackage();
    /**
     * <code>required .org.jetbrains.kotlin.metadata.Package package = 4;</code>
     */
    org.jetbrains.kotlin.metadata.ProtoBuf.Package getPackage();

    /**
     * <code>required .org.jetbrains.kotlin.library.metadata.LinkDataClasses classes = 5;</code>
     */
    boolean hasClasses();
    /**
     * <code>required .org.jetbrains.kotlin.library.metadata.LinkDataClasses classes = 5;</code>
     */
    org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses getClasses();

    /**
     * <code>required bool is_empty = 6;</code>
     */
    boolean hasIsEmpty();
    /**
     * <code>required bool is_empty = 6;</code>
     */
    boolean getIsEmpty();

    /**
     * <code>required .org.jetbrains.kotlin.metadata.QualifiedNameTable name_table = 2;</code>
     *
     * <pre>
     * To construct name resolver
     * </pre>
     */
    boolean hasNameTable();
    /**
     * <code>required .org.jetbrains.kotlin.metadata.QualifiedNameTable name_table = 2;</code>
     *
     * <pre>
     * To construct name resolver
     * </pre>
     */
    org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable getNameTable();

    /**
     * <code>required .org.jetbrains.kotlin.metadata.StringTable string_table = 3;</code>
     */
    boolean hasStringTable();
    /**
     * <code>required .org.jetbrains.kotlin.metadata.StringTable string_table = 3;</code>
     */
    org.jetbrains.kotlin.metadata.ProtoBuf.StringTable getStringTable();
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.library.metadata.LinkDataPackageFragment}
   */
  public static final class LinkDataPackageFragment extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.library.metadata.LinkDataPackageFragment)
      LinkDataPackageFragmentOrBuilder {
    // Use LinkDataPackageFragment.newBuilder() to construct.
    private LinkDataPackageFragment(org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LinkDataPackageFragment(boolean noInit) { this.unknownFields = org.jetbrains.kotlin.protobuf.ByteString.EMPTY;}

    private static final LinkDataPackageFragment defaultInstance;
    public static LinkDataPackageFragment getDefaultInstance() {
      return defaultInstance;
    }

    public LinkDataPackageFragment getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final org.jetbrains.kotlin.protobuf.ByteString unknownFields;
    private LinkDataPackageFragment(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      org.jetbrains.kotlin.protobuf.ByteString.Output unknownFieldsOutput =
          org.jetbrains.kotlin.protobuf.ByteString.newOutput();
      org.jetbrains.kotlin.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          org.jetbrains.kotlin.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput, 1);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.jetbrains.kotlin.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              fqName_ = bs;
              break;
            }
            case 18: {
              org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = nameTable_.toBuilder();
              }
              nameTable_ = input.readMessage(org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nameTable_);
                nameTable_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 26: {
              org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = stringTable_.toBuilder();
              }
              stringTable_ = input.readMessage(org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(stringTable_);
                stringTable_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 34: {
              org.jetbrains.kotlin.metadata.ProtoBuf.Package.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = package_.toBuilder();
              }
              package_ = input.readMessage(org.jetbrains.kotlin.metadata.ProtoBuf.Package.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(package_);
                package_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 42: {
              org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = classes_.toBuilder();
              }
              classes_ = input.readMessage(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(classes_);
                classes_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              isEmpty_ = input.readBool();
              break;
            }
          }
        }
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static org.jetbrains.kotlin.protobuf.Parser<LinkDataPackageFragment> PARSER =
        new org.jetbrains.kotlin.protobuf.AbstractParser<LinkDataPackageFragment>() {
      public LinkDataPackageFragment parsePartialFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
        return new LinkDataPackageFragment(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public org.jetbrains.kotlin.protobuf.Parser<LinkDataPackageFragment> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FQ_NAME_FIELD_NUMBER = 1;
    private java.lang.Object fqName_;
    /**
     * <code>required string fq_name = 1;</code>
     *
     * <pre>
     * Make if an index?
     * </pre>
     */
    public boolean hasFqName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string fq_name = 1;</code>
     *
     * <pre>
     * Make if an index?
     * </pre>
     */
    public java.lang.String getFqName() {
      java.lang.Object ref = fqName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        org.jetbrains.kotlin.protobuf.ByteString bs = 
            (org.jetbrains.kotlin.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fqName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string fq_name = 1;</code>
     *
     * <pre>
     * Make if an index?
     * </pre>
     */
    public org.jetbrains.kotlin.protobuf.ByteString
        getFqNameBytes() {
      java.lang.Object ref = fqName_;
      if (ref instanceof java.lang.String) {
        org.jetbrains.kotlin.protobuf.ByteString b = 
            org.jetbrains.kotlin.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fqName_ = b;
        return b;
      } else {
        return (org.jetbrains.kotlin.protobuf.ByteString) ref;
      }
    }

    public static final int PACKAGE_FIELD_NUMBER = 4;
    private org.jetbrains.kotlin.metadata.ProtoBuf.Package package_;
    /**
     * <code>required .org.jetbrains.kotlin.metadata.Package package = 4;</code>
     */
    public boolean hasPackage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .org.jetbrains.kotlin.metadata.Package package = 4;</code>
     */
    public org.jetbrains.kotlin.metadata.ProtoBuf.Package getPackage() {
      return package_;
    }

    public static final int CLASSES_FIELD_NUMBER = 5;
    private org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses classes_;
    /**
     * <code>required .org.jetbrains.kotlin.library.metadata.LinkDataClasses classes = 5;</code>
     */
    public boolean hasClasses() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .org.jetbrains.kotlin.library.metadata.LinkDataClasses classes = 5;</code>
     */
    public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses getClasses() {
      return classes_;
    }

    public static final int IS_EMPTY_FIELD_NUMBER = 6;
    private boolean isEmpty_;
    /**
     * <code>required bool is_empty = 6;</code>
     */
    public boolean hasIsEmpty() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bool is_empty = 6;</code>
     */
    public boolean getIsEmpty() {
      return isEmpty_;
    }

    public static final int NAME_TABLE_FIELD_NUMBER = 2;
    private org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable nameTable_;
    /**
     * <code>required .org.jetbrains.kotlin.metadata.QualifiedNameTable name_table = 2;</code>
     *
     * <pre>
     * To construct name resolver
     * </pre>
     */
    public boolean hasNameTable() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .org.jetbrains.kotlin.metadata.QualifiedNameTable name_table = 2;</code>
     *
     * <pre>
     * To construct name resolver
     * </pre>
     */
    public org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable getNameTable() {
      return nameTable_;
    }

    public static final int STRING_TABLE_FIELD_NUMBER = 3;
    private org.jetbrains.kotlin.metadata.ProtoBuf.StringTable stringTable_;
    /**
     * <code>required .org.jetbrains.kotlin.metadata.StringTable string_table = 3;</code>
     */
    public boolean hasStringTable() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required .org.jetbrains.kotlin.metadata.StringTable string_table = 3;</code>
     */
    public org.jetbrains.kotlin.metadata.ProtoBuf.StringTable getStringTable() {
      return stringTable_;
    }

    private void initFields() {
      fqName_ = "";
      package_ = org.jetbrains.kotlin.metadata.ProtoBuf.Package.getDefaultInstance();
      classes_ = org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses.getDefaultInstance();
      isEmpty_ = false;
      nameTable_ = org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.getDefaultInstance();
      stringTable_ = org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFqName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPackage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClasses()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsEmpty()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNameTable()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStringTable()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPackage().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getClasses().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getNameTable().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(org.jetbrains.kotlin.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getFqNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(2, nameTable_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(3, stringTable_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(4, package_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(5, classes_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(6, isEmpty_);
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeBytesSize(1, getFqNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeMessageSize(2, nameTable_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeMessageSize(3, stringTable_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeMessageSize(4, package_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeMessageSize(5, classes_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeBoolSize(6, isEmpty_);
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment parseFrom(byte[] data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment parseFrom(
        byte[] data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment parseFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment parseDelimitedFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code org.jetbrains.kotlin.library.metadata.LinkDataPackageFragment}
     */
    public static final class Builder extends
        org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
          org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.library.metadata.LinkDataPackageFragment)
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragmentOrBuilder {
      // Construct using org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fqName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        package_ = org.jetbrains.kotlin.metadata.ProtoBuf.Package.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000002);
        classes_ = org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000004);
        isEmpty_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        nameTable_ = org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000010);
        stringTable_ = org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment getDefaultInstanceForType() {
        return org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment.getDefaultInstance();
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment build() {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment buildPartial() {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment result = new org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fqName_ = fqName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.package_ = package_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.classes_ = classes_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.isEmpty_ = isEmpty_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.nameTable_ = nameTable_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.stringTable_ = stringTable_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment other) {
        if (other == org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment.getDefaultInstance()) return this;
        if (other.hasFqName()) {
          bitField0_ |= 0x00000001;
          fqName_ = other.fqName_;
          
        }
        if (other.hasPackage()) {
          mergePackage(other.getPackage());
        }
        if (other.hasClasses()) {
          mergeClasses(other.getClasses());
        }
        if (other.hasIsEmpty()) {
          setIsEmpty(other.getIsEmpty());
        }
        if (other.hasNameTable()) {
          mergeNameTable(other.getNameTable());
        }
        if (other.hasStringTable()) {
          mergeStringTable(other.getStringTable());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFqName()) {
          
          return false;
        }
        if (!hasPackage()) {
          
          return false;
        }
        if (!hasClasses()) {
          
          return false;
        }
        if (!hasIsEmpty()) {
          
          return false;
        }
        if (!hasNameTable()) {
          
          return false;
        }
        if (!hasStringTable()) {
          
          return false;
        }
        if (!getPackage().isInitialized()) {
          
          return false;
        }
        if (!getClasses().isInitialized()) {
          
          return false;
        }
        if (!getNameTable().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataPackageFragment) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object fqName_ = "";
      /**
       * <code>required string fq_name = 1;</code>
       *
       * <pre>
       * Make if an index?
       * </pre>
       */
      public boolean hasFqName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string fq_name = 1;</code>
       *
       * <pre>
       * Make if an index?
       * </pre>
       */
      public java.lang.String getFqName() {
        java.lang.Object ref = fqName_;
        if (!(ref instanceof java.lang.String)) {
          org.jetbrains.kotlin.protobuf.ByteString bs =
              (org.jetbrains.kotlin.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fqName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string fq_name = 1;</code>
       *
       * <pre>
       * Make if an index?
       * </pre>
       */
      public org.jetbrains.kotlin.protobuf.ByteString
          getFqNameBytes() {
        java.lang.Object ref = fqName_;
        if (ref instanceof String) {
          org.jetbrains.kotlin.protobuf.ByteString b = 
              org.jetbrains.kotlin.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fqName_ = b;
          return b;
        } else {
          return (org.jetbrains.kotlin.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string fq_name = 1;</code>
       *
       * <pre>
       * Make if an index?
       * </pre>
       */
      public Builder setFqName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        fqName_ = value;
        
        return this;
      }
      /**
       * <code>required string fq_name = 1;</code>
       *
       * <pre>
       * Make if an index?
       * </pre>
       */
      public Builder clearFqName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fqName_ = getDefaultInstance().getFqName();
        
        return this;
      }
      /**
       * <code>required string fq_name = 1;</code>
       *
       * <pre>
       * Make if an index?
       * </pre>
       */
      public Builder setFqNameBytes(
          org.jetbrains.kotlin.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        fqName_ = value;
        
        return this;
      }

      private org.jetbrains.kotlin.metadata.ProtoBuf.Package package_ = org.jetbrains.kotlin.metadata.ProtoBuf.Package.getDefaultInstance();
      /**
       * <code>required .org.jetbrains.kotlin.metadata.Package package = 4;</code>
       */
      public boolean hasPackage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .org.jetbrains.kotlin.metadata.Package package = 4;</code>
       */
      public org.jetbrains.kotlin.metadata.ProtoBuf.Package getPackage() {
        return package_;
      }
      /**
       * <code>required .org.jetbrains.kotlin.metadata.Package package = 4;</code>
       */
      public Builder setPackage(org.jetbrains.kotlin.metadata.ProtoBuf.Package value) {
        if (value == null) {
          throw new NullPointerException();
        }
        package_ = value;

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .org.jetbrains.kotlin.metadata.Package package = 4;</code>
       */
      public Builder setPackage(
          org.jetbrains.kotlin.metadata.ProtoBuf.Package.Builder builderForValue) {
        package_ = builderForValue.build();

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .org.jetbrains.kotlin.metadata.Package package = 4;</code>
       */
      public Builder mergePackage(org.jetbrains.kotlin.metadata.ProtoBuf.Package value) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            package_ != org.jetbrains.kotlin.metadata.ProtoBuf.Package.getDefaultInstance()) {
          package_ =
            org.jetbrains.kotlin.metadata.ProtoBuf.Package.newBuilder(package_).mergeFrom(value).buildPartial();
        } else {
          package_ = value;
        }

        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .org.jetbrains.kotlin.metadata.Package package = 4;</code>
       */
      public Builder clearPackage() {
        package_ = org.jetbrains.kotlin.metadata.ProtoBuf.Package.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      private org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses classes_ = org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses.getDefaultInstance();
      /**
       * <code>required .org.jetbrains.kotlin.library.metadata.LinkDataClasses classes = 5;</code>
       */
      public boolean hasClasses() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .org.jetbrains.kotlin.library.metadata.LinkDataClasses classes = 5;</code>
       */
      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses getClasses() {
        return classes_;
      }
      /**
       * <code>required .org.jetbrains.kotlin.library.metadata.LinkDataClasses classes = 5;</code>
       */
      public Builder setClasses(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses value) {
        if (value == null) {
          throw new NullPointerException();
        }
        classes_ = value;

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .org.jetbrains.kotlin.library.metadata.LinkDataClasses classes = 5;</code>
       */
      public Builder setClasses(
          org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses.Builder builderForValue) {
        classes_ = builderForValue.build();

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .org.jetbrains.kotlin.library.metadata.LinkDataClasses classes = 5;</code>
       */
      public Builder mergeClasses(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses value) {
        if (((bitField0_ & 0x00000004) == 0x00000004) &&
            classes_ != org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses.getDefaultInstance()) {
          classes_ =
            org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses.newBuilder(classes_).mergeFrom(value).buildPartial();
        } else {
          classes_ = value;
        }

        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .org.jetbrains.kotlin.library.metadata.LinkDataClasses classes = 5;</code>
       */
      public Builder clearClasses() {
        classes_ = org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      private boolean isEmpty_ ;
      /**
       * <code>required bool is_empty = 6;</code>
       */
      public boolean hasIsEmpty() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bool is_empty = 6;</code>
       */
      public boolean getIsEmpty() {
        return isEmpty_;
      }
      /**
       * <code>required bool is_empty = 6;</code>
       */
      public Builder setIsEmpty(boolean value) {
        bitField0_ |= 0x00000008;
        isEmpty_ = value;
        
        return this;
      }
      /**
       * <code>required bool is_empty = 6;</code>
       */
      public Builder clearIsEmpty() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isEmpty_ = false;
        
        return this;
      }

      private org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable nameTable_ = org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.getDefaultInstance();
      /**
       * <code>required .org.jetbrains.kotlin.metadata.QualifiedNameTable name_table = 2;</code>
       *
       * <pre>
       * To construct name resolver
       * </pre>
       */
      public boolean hasNameTable() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required .org.jetbrains.kotlin.metadata.QualifiedNameTable name_table = 2;</code>
       *
       * <pre>
       * To construct name resolver
       * </pre>
       */
      public org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable getNameTable() {
        return nameTable_;
      }
      /**
       * <code>required .org.jetbrains.kotlin.metadata.QualifiedNameTable name_table = 2;</code>
       *
       * <pre>
       * To construct name resolver
       * </pre>
       */
      public Builder setNameTable(org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable value) {
        if (value == null) {
          throw new NullPointerException();
        }
        nameTable_ = value;

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .org.jetbrains.kotlin.metadata.QualifiedNameTable name_table = 2;</code>
       *
       * <pre>
       * To construct name resolver
       * </pre>
       */
      public Builder setNameTable(
          org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.Builder builderForValue) {
        nameTable_ = builderForValue.build();

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .org.jetbrains.kotlin.metadata.QualifiedNameTable name_table = 2;</code>
       *
       * <pre>
       * To construct name resolver
       * </pre>
       */
      public Builder mergeNameTable(org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable value) {
        if (((bitField0_ & 0x00000010) == 0x00000010) &&
            nameTable_ != org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.getDefaultInstance()) {
          nameTable_ =
            org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.newBuilder(nameTable_).mergeFrom(value).buildPartial();
        } else {
          nameTable_ = value;
        }

        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .org.jetbrains.kotlin.metadata.QualifiedNameTable name_table = 2;</code>
       *
       * <pre>
       * To construct name resolver
       * </pre>
       */
      public Builder clearNameTable() {
        nameTable_ = org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      private org.jetbrains.kotlin.metadata.ProtoBuf.StringTable stringTable_ = org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.getDefaultInstance();
      /**
       * <code>required .org.jetbrains.kotlin.metadata.StringTable string_table = 3;</code>
       */
      public boolean hasStringTable() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required .org.jetbrains.kotlin.metadata.StringTable string_table = 3;</code>
       */
      public org.jetbrains.kotlin.metadata.ProtoBuf.StringTable getStringTable() {
        return stringTable_;
      }
      /**
       * <code>required .org.jetbrains.kotlin.metadata.StringTable string_table = 3;</code>
       */
      public Builder setStringTable(org.jetbrains.kotlin.metadata.ProtoBuf.StringTable value) {
        if (value == null) {
          throw new NullPointerException();
        }
        stringTable_ = value;

        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .org.jetbrains.kotlin.metadata.StringTable string_table = 3;</code>
       */
      public Builder setStringTable(
          org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.Builder builderForValue) {
        stringTable_ = builderForValue.build();

        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .org.jetbrains.kotlin.metadata.StringTable string_table = 3;</code>
       */
      public Builder mergeStringTable(org.jetbrains.kotlin.metadata.ProtoBuf.StringTable value) {
        if (((bitField0_ & 0x00000020) == 0x00000020) &&
            stringTable_ != org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.getDefaultInstance()) {
          stringTable_ =
            org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.newBuilder(stringTable_).mergeFrom(value).buildPartial();
        } else {
          stringTable_ = value;
        }

        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .org.jetbrains.kotlin.metadata.StringTable string_table = 3;</code>
       */
      public Builder clearStringTable() {
        stringTable_ = org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.library.metadata.LinkDataPackageFragment)
    }

    static {
      defaultInstance = new LinkDataPackageFragment(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.library.metadata.LinkDataPackageFragment)
  }

  public interface LinkDataClassesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.library.metadata.LinkDataClasses)
      org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated int32 class_name = 1;</code>
     *
     * <pre>
     * Index in the QualifiedNameIndex table.
     * </pre>
     */
    java.util.List<java.lang.Integer> getClassNameList();
    /**
     * <code>repeated int32 class_name = 1;</code>
     *
     * <pre>
     * Index in the QualifiedNameIndex table.
     * </pre>
     */
    int getClassNameCount();
    /**
     * <code>repeated int32 class_name = 1;</code>
     *
     * <pre>
     * Index in the QualifiedNameIndex table.
     * </pre>
     */
    int getClassName(int index);

    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Class classes = 2;</code>
     */
    java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Class> 
        getClassesList();
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Class classes = 2;</code>
     */
    org.jetbrains.kotlin.metadata.ProtoBuf.Class getClasses(int index);
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Class classes = 2;</code>
     */
    int getClassesCount();
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.library.metadata.LinkDataClasses}
   */
  public static final class LinkDataClasses extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.library.metadata.LinkDataClasses)
      LinkDataClassesOrBuilder {
    // Use LinkDataClasses.newBuilder() to construct.
    private LinkDataClasses(org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LinkDataClasses(boolean noInit) { this.unknownFields = org.jetbrains.kotlin.protobuf.ByteString.EMPTY;}

    private static final LinkDataClasses defaultInstance;
    public static LinkDataClasses getDefaultInstance() {
      return defaultInstance;
    }

    public LinkDataClasses getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final org.jetbrains.kotlin.protobuf.ByteString unknownFields;
    private LinkDataClasses(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      org.jetbrains.kotlin.protobuf.ByteString.Output unknownFieldsOutput =
          org.jetbrains.kotlin.protobuf.ByteString.newOutput();
      org.jetbrains.kotlin.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          org.jetbrains.kotlin.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput, 1);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                className_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              className_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                className_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                className_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                classes_ = new java.util.ArrayList<org.jetbrains.kotlin.metadata.ProtoBuf.Class>();
                mutable_bitField0_ |= 0x00000002;
              }
              classes_.add(input.readMessage(org.jetbrains.kotlin.metadata.ProtoBuf.Class.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          className_ = java.util.Collections.unmodifiableList(className_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          classes_ = java.util.Collections.unmodifiableList(classes_);
        }
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static org.jetbrains.kotlin.protobuf.Parser<LinkDataClasses> PARSER =
        new org.jetbrains.kotlin.protobuf.AbstractParser<LinkDataClasses>() {
      public LinkDataClasses parsePartialFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
        return new LinkDataClasses(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public org.jetbrains.kotlin.protobuf.Parser<LinkDataClasses> getParserForType() {
      return PARSER;
    }

    public static final int CLASS_NAME_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> className_;
    /**
     * <code>repeated int32 class_name = 1;</code>
     *
     * <pre>
     * Index in the QualifiedNameIndex table.
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getClassNameList() {
      return className_;
    }
    /**
     * <code>repeated int32 class_name = 1;</code>
     *
     * <pre>
     * Index in the QualifiedNameIndex table.
     * </pre>
     */
    public int getClassNameCount() {
      return className_.size();
    }
    /**
     * <code>repeated int32 class_name = 1;</code>
     *
     * <pre>
     * Index in the QualifiedNameIndex table.
     * </pre>
     */
    public int getClassName(int index) {
      return className_.get(index);
    }

    public static final int CLASSES_FIELD_NUMBER = 2;
    private java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Class> classes_;
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Class classes = 2;</code>
     */
    public java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Class> getClassesList() {
      return classes_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Class classes = 2;</code>
     */
    public java.util.List<? extends org.jetbrains.kotlin.metadata.ProtoBuf.ClassOrBuilder> 
        getClassesOrBuilderList() {
      return classes_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Class classes = 2;</code>
     */
    public int getClassesCount() {
      return classes_.size();
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Class classes = 2;</code>
     */
    public org.jetbrains.kotlin.metadata.ProtoBuf.Class getClasses(int index) {
      return classes_.get(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Class classes = 2;</code>
     */
    public org.jetbrains.kotlin.metadata.ProtoBuf.ClassOrBuilder getClassesOrBuilder(
        int index) {
      return classes_.get(index);
    }

    private void initFields() {
      className_ = java.util.Collections.emptyList();
      classes_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getClassesCount(); i++) {
        if (!getClasses(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(org.jetbrains.kotlin.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < className_.size(); i++) {
        output.writeInt32(1, className_.get(i));
      }
      for (int i = 0; i < classes_.size(); i++) {
        output.writeMessage(2, classes_.get(i));
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < className_.size(); i++) {
          dataSize += org.jetbrains.kotlin.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(className_.get(i));
        }
        size += dataSize;
        size += 1 * getClassNameList().size();
      }
      for (int i = 0; i < classes_.size(); i++) {
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeMessageSize(2, classes_.get(i));
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses parseFrom(byte[] data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses parseFrom(
        byte[] data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses parseFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses parseDelimitedFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code org.jetbrains.kotlin.library.metadata.LinkDataClasses}
     */
    public static final class Builder extends
        org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
          org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.library.metadata.LinkDataClasses)
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClassesOrBuilder {
      // Construct using org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        className_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        classes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses getDefaultInstanceForType() {
        return org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses.getDefaultInstance();
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses build() {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses buildPartial() {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses result = new org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          className_ = java.util.Collections.unmodifiableList(className_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.className_ = className_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          classes_ = java.util.Collections.unmodifiableList(classes_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.classes_ = classes_;
        return result;
      }

      public Builder mergeFrom(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses other) {
        if (other == org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses.getDefaultInstance()) return this;
        if (!other.className_.isEmpty()) {
          if (className_.isEmpty()) {
            className_ = other.className_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureClassNameIsMutable();
            className_.addAll(other.className_);
          }
          
        }
        if (!other.classes_.isEmpty()) {
          if (classes_.isEmpty()) {
            classes_ = other.classes_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureClassesIsMutable();
            classes_.addAll(other.classes_);
          }
          
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getClassesCount(); i++) {
          if (!getClasses(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataClasses) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> className_ = java.util.Collections.emptyList();
      private void ensureClassNameIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          className_ = new java.util.ArrayList<java.lang.Integer>(className_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 class_name = 1;</code>
       *
       * <pre>
       * Index in the QualifiedNameIndex table.
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getClassNameList() {
        return java.util.Collections.unmodifiableList(className_);
      }
      /**
       * <code>repeated int32 class_name = 1;</code>
       *
       * <pre>
       * Index in the QualifiedNameIndex table.
       * </pre>
       */
      public int getClassNameCount() {
        return className_.size();
      }
      /**
       * <code>repeated int32 class_name = 1;</code>
       *
       * <pre>
       * Index in the QualifiedNameIndex table.
       * </pre>
       */
      public int getClassName(int index) {
        return className_.get(index);
      }
      /**
       * <code>repeated int32 class_name = 1;</code>
       *
       * <pre>
       * Index in the QualifiedNameIndex table.
       * </pre>
       */
      public Builder setClassName(
          int index, int value) {
        ensureClassNameIsMutable();
        className_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated int32 class_name = 1;</code>
       *
       * <pre>
       * Index in the QualifiedNameIndex table.
       * </pre>
       */
      public Builder addClassName(int value) {
        ensureClassNameIsMutable();
        className_.add(value);
        
        return this;
      }
      /**
       * <code>repeated int32 class_name = 1;</code>
       *
       * <pre>
       * Index in the QualifiedNameIndex table.
       * </pre>
       */
      public Builder addAllClassName(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureClassNameIsMutable();
        org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
            values, className_);
        
        return this;
      }
      /**
       * <code>repeated int32 class_name = 1;</code>
       *
       * <pre>
       * Index in the QualifiedNameIndex table.
       * </pre>
       */
      public Builder clearClassName() {
        className_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        
        return this;
      }

      private java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Class> classes_ =
        java.util.Collections.emptyList();
      private void ensureClassesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          classes_ = new java.util.ArrayList<org.jetbrains.kotlin.metadata.ProtoBuf.Class>(classes_);
          bitField0_ |= 0x00000002;
         }
      }

      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Class classes = 2;</code>
       */
      public java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Class> getClassesList() {
        return java.util.Collections.unmodifiableList(classes_);
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Class classes = 2;</code>
       */
      public int getClassesCount() {
        return classes_.size();
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Class classes = 2;</code>
       */
      public org.jetbrains.kotlin.metadata.ProtoBuf.Class getClasses(int index) {
        return classes_.get(index);
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Class classes = 2;</code>
       */
      public Builder setClasses(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.Class value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureClassesIsMutable();
        classes_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Class classes = 2;</code>
       */
      public Builder setClasses(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.Class.Builder builderForValue) {
        ensureClassesIsMutable();
        classes_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Class classes = 2;</code>
       */
      public Builder addClasses(org.jetbrains.kotlin.metadata.ProtoBuf.Class value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureClassesIsMutable();
        classes_.add(value);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Class classes = 2;</code>
       */
      public Builder addClasses(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.Class value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureClassesIsMutable();
        classes_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Class classes = 2;</code>
       */
      public Builder addClasses(
          org.jetbrains.kotlin.metadata.ProtoBuf.Class.Builder builderForValue) {
        ensureClassesIsMutable();
        classes_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Class classes = 2;</code>
       */
      public Builder addClasses(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.Class.Builder builderForValue) {
        ensureClassesIsMutable();
        classes_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Class classes = 2;</code>
       */
      public Builder addAllClasses(
          java.lang.Iterable<? extends org.jetbrains.kotlin.metadata.ProtoBuf.Class> values) {
        ensureClassesIsMutable();
        org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
            values, classes_);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Class classes = 2;</code>
       */
      public Builder clearClasses() {
        classes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);

        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Class classes = 2;</code>
       */
      public Builder removeClasses(int index) {
        ensureClassesIsMutable();
        classes_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.library.metadata.LinkDataClasses)
    }

    static {
      defaultInstance = new LinkDataClasses(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.library.metadata.LinkDataClasses)
  }

  public interface LinkDataLibraryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.library.metadata.LinkDataLibrary)
      org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required string module_name = 1;</code>
     */
    boolean hasModuleName();
    /**
     * <code>required string module_name = 1;</code>
     */
    java.lang.String getModuleName();
    /**
     * <code>required string module_name = 1;</code>
     */
    org.jetbrains.kotlin.protobuf.ByteString
        getModuleNameBytes();

    /**
     * <code>repeated string package_fragment_name = 2;</code>
     */
    org.jetbrains.kotlin.protobuf.ProtocolStringList
        getPackageFragmentNameList();
    /**
     * <code>repeated string package_fragment_name = 2;</code>
     */
    int getPackageFragmentNameCount();
    /**
     * <code>repeated string package_fragment_name = 2;</code>
     */
    java.lang.String getPackageFragmentName(int index);
    /**
     * <code>repeated string package_fragment_name = 2;</code>
     */
    org.jetbrains.kotlin.protobuf.ByteString
        getPackageFragmentNameBytes(int index);

    /**
     * <code>repeated string empty_package = 3;</code>
     */
    org.jetbrains.kotlin.protobuf.ProtocolStringList
        getEmptyPackageList();
    /**
     * <code>repeated string empty_package = 3;</code>
     */
    int getEmptyPackageCount();
    /**
     * <code>repeated string empty_package = 3;</code>
     */
    java.lang.String getEmptyPackage(int index);
    /**
     * <code>repeated string empty_package = 3;</code>
     */
    org.jetbrains.kotlin.protobuf.ByteString
        getEmptyPackageBytes(int index);

    /**
     * <code>repeated string file = 4;</code>
     */
    org.jetbrains.kotlin.protobuf.ProtocolStringList
        getFileList();
    /**
     * <code>repeated string file = 4;</code>
     */
    int getFileCount();
    /**
     * <code>repeated string file = 4;</code>
     */
    java.lang.String getFile(int index);
    /**
     * <code>repeated string file = 4;</code>
     */
    org.jetbrains.kotlin.protobuf.ByteString
        getFileBytes(int index);
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.library.metadata.LinkDataLibrary}
   */
  public static final class LinkDataLibrary extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.library.metadata.LinkDataLibrary)
      LinkDataLibraryOrBuilder {
    // Use LinkDataLibrary.newBuilder() to construct.
    private LinkDataLibrary(org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LinkDataLibrary(boolean noInit) { this.unknownFields = org.jetbrains.kotlin.protobuf.ByteString.EMPTY;}

    private static final LinkDataLibrary defaultInstance;
    public static LinkDataLibrary getDefaultInstance() {
      return defaultInstance;
    }

    public LinkDataLibrary getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final org.jetbrains.kotlin.protobuf.ByteString unknownFields;
    private LinkDataLibrary(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      org.jetbrains.kotlin.protobuf.ByteString.Output unknownFieldsOutput =
          org.jetbrains.kotlin.protobuf.ByteString.newOutput();
      org.jetbrains.kotlin.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          org.jetbrains.kotlin.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput, 1);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.jetbrains.kotlin.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              moduleName_ = bs;
              break;
            }
            case 18: {
              org.jetbrains.kotlin.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                packageFragmentName_ = new org.jetbrains.kotlin.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              packageFragmentName_.add(bs);
              break;
            }
            case 26: {
              org.jetbrains.kotlin.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                emptyPackage_ = new org.jetbrains.kotlin.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              emptyPackage_.add(bs);
              break;
            }
            case 34: {
              org.jetbrains.kotlin.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                file_ = new org.jetbrains.kotlin.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              file_.add(bs);
              break;
            }
          }
        }
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          packageFragmentName_ = packageFragmentName_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          emptyPackage_ = emptyPackage_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          file_ = file_.getUnmodifiableView();
        }
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static org.jetbrains.kotlin.protobuf.Parser<LinkDataLibrary> PARSER =
        new org.jetbrains.kotlin.protobuf.AbstractParser<LinkDataLibrary>() {
      public LinkDataLibrary parsePartialFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
        return new LinkDataLibrary(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public org.jetbrains.kotlin.protobuf.Parser<LinkDataLibrary> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MODULE_NAME_FIELD_NUMBER = 1;
    private java.lang.Object moduleName_;
    /**
     * <code>required string module_name = 1;</code>
     */
    public boolean hasModuleName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string module_name = 1;</code>
     */
    public java.lang.String getModuleName() {
      java.lang.Object ref = moduleName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        org.jetbrains.kotlin.protobuf.ByteString bs = 
            (org.jetbrains.kotlin.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          moduleName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string module_name = 1;</code>
     */
    public org.jetbrains.kotlin.protobuf.ByteString
        getModuleNameBytes() {
      java.lang.Object ref = moduleName_;
      if (ref instanceof java.lang.String) {
        org.jetbrains.kotlin.protobuf.ByteString b = 
            org.jetbrains.kotlin.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        moduleName_ = b;
        return b;
      } else {
        return (org.jetbrains.kotlin.protobuf.ByteString) ref;
      }
    }

    public static final int PACKAGE_FRAGMENT_NAME_FIELD_NUMBER = 2;
    private org.jetbrains.kotlin.protobuf.LazyStringList packageFragmentName_;
    /**
     * <code>repeated string package_fragment_name = 2;</code>
     */
    public org.jetbrains.kotlin.protobuf.ProtocolStringList
        getPackageFragmentNameList() {
      return packageFragmentName_;
    }
    /**
     * <code>repeated string package_fragment_name = 2;</code>
     */
    public int getPackageFragmentNameCount() {
      return packageFragmentName_.size();
    }
    /**
     * <code>repeated string package_fragment_name = 2;</code>
     */
    public java.lang.String getPackageFragmentName(int index) {
      return packageFragmentName_.get(index);
    }
    /**
     * <code>repeated string package_fragment_name = 2;</code>
     */
    public org.jetbrains.kotlin.protobuf.ByteString
        getPackageFragmentNameBytes(int index) {
      return packageFragmentName_.getByteString(index);
    }

    public static final int EMPTY_PACKAGE_FIELD_NUMBER = 3;
    private org.jetbrains.kotlin.protobuf.LazyStringList emptyPackage_;
    /**
     * <code>repeated string empty_package = 3;</code>
     */
    public org.jetbrains.kotlin.protobuf.ProtocolStringList
        getEmptyPackageList() {
      return emptyPackage_;
    }
    /**
     * <code>repeated string empty_package = 3;</code>
     */
    public int getEmptyPackageCount() {
      return emptyPackage_.size();
    }
    /**
     * <code>repeated string empty_package = 3;</code>
     */
    public java.lang.String getEmptyPackage(int index) {
      return emptyPackage_.get(index);
    }
    /**
     * <code>repeated string empty_package = 3;</code>
     */
    public org.jetbrains.kotlin.protobuf.ByteString
        getEmptyPackageBytes(int index) {
      return emptyPackage_.getByteString(index);
    }

    public static final int FILE_FIELD_NUMBER = 4;
    private org.jetbrains.kotlin.protobuf.LazyStringList file_;
    /**
     * <code>repeated string file = 4;</code>
     */
    public org.jetbrains.kotlin.protobuf.ProtocolStringList
        getFileList() {
      return file_;
    }
    /**
     * <code>repeated string file = 4;</code>
     */
    public int getFileCount() {
      return file_.size();
    }
    /**
     * <code>repeated string file = 4;</code>
     */
    public java.lang.String getFile(int index) {
      return file_.get(index);
    }
    /**
     * <code>repeated string file = 4;</code>
     */
    public org.jetbrains.kotlin.protobuf.ByteString
        getFileBytes(int index) {
      return file_.getByteString(index);
    }

    private void initFields() {
      moduleName_ = "";
      packageFragmentName_ = org.jetbrains.kotlin.protobuf.LazyStringArrayList.EMPTY;
      emptyPackage_ = org.jetbrains.kotlin.protobuf.LazyStringArrayList.EMPTY;
      file_ = org.jetbrains.kotlin.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasModuleName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(org.jetbrains.kotlin.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getModuleNameBytes());
      }
      for (int i = 0; i < packageFragmentName_.size(); i++) {
        output.writeBytes(2, packageFragmentName_.getByteString(i));
      }
      for (int i = 0; i < emptyPackage_.size(); i++) {
        output.writeBytes(3, emptyPackage_.getByteString(i));
      }
      for (int i = 0; i < file_.size(); i++) {
        output.writeBytes(4, file_.getByteString(i));
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeBytesSize(1, getModuleNameBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < packageFragmentName_.size(); i++) {
          dataSize += org.jetbrains.kotlin.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(packageFragmentName_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getPackageFragmentNameList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < emptyPackage_.size(); i++) {
          dataSize += org.jetbrains.kotlin.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(emptyPackage_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getEmptyPackageList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < file_.size(); i++) {
          dataSize += org.jetbrains.kotlin.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(file_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getFileList().size();
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary parseFrom(byte[] data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary parseFrom(
        byte[] data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary parseFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary parseDelimitedFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code org.jetbrains.kotlin.library.metadata.LinkDataLibrary}
     */
    public static final class Builder extends
        org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
          org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.library.metadata.LinkDataLibrary)
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibraryOrBuilder {
      // Construct using org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        moduleName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        packageFragmentName_ = org.jetbrains.kotlin.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        emptyPackage_ = org.jetbrains.kotlin.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        file_ = org.jetbrains.kotlin.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary getDefaultInstanceForType() {
        return org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary.getDefaultInstance();
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary build() {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary buildPartial() {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary result = new org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.moduleName_ = moduleName_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          packageFragmentName_ = packageFragmentName_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.packageFragmentName_ = packageFragmentName_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          emptyPackage_ = emptyPackage_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.emptyPackage_ = emptyPackage_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          file_ = file_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.file_ = file_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary other) {
        if (other == org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary.getDefaultInstance()) return this;
        if (other.hasModuleName()) {
          bitField0_ |= 0x00000001;
          moduleName_ = other.moduleName_;
          
        }
        if (!other.packageFragmentName_.isEmpty()) {
          if (packageFragmentName_.isEmpty()) {
            packageFragmentName_ = other.packageFragmentName_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePackageFragmentNameIsMutable();
            packageFragmentName_.addAll(other.packageFragmentName_);
          }
          
        }
        if (!other.emptyPackage_.isEmpty()) {
          if (emptyPackage_.isEmpty()) {
            emptyPackage_ = other.emptyPackage_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureEmptyPackageIsMutable();
            emptyPackage_.addAll(other.emptyPackage_);
          }
          
        }
        if (!other.file_.isEmpty()) {
          if (file_.isEmpty()) {
            file_ = other.file_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureFileIsMutable();
            file_.addAll(other.file_);
          }
          
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        if (!hasModuleName()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.LinkDataLibrary) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object moduleName_ = "";
      /**
       * <code>required string module_name = 1;</code>
       */
      public boolean hasModuleName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string module_name = 1;</code>
       */
      public java.lang.String getModuleName() {
        java.lang.Object ref = moduleName_;
        if (!(ref instanceof java.lang.String)) {
          org.jetbrains.kotlin.protobuf.ByteString bs =
              (org.jetbrains.kotlin.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            moduleName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string module_name = 1;</code>
       */
      public org.jetbrains.kotlin.protobuf.ByteString
          getModuleNameBytes() {
        java.lang.Object ref = moduleName_;
        if (ref instanceof String) {
          org.jetbrains.kotlin.protobuf.ByteString b = 
              org.jetbrains.kotlin.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          moduleName_ = b;
          return b;
        } else {
          return (org.jetbrains.kotlin.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string module_name = 1;</code>
       */
      public Builder setModuleName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        moduleName_ = value;
        
        return this;
      }
      /**
       * <code>required string module_name = 1;</code>
       */
      public Builder clearModuleName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        moduleName_ = getDefaultInstance().getModuleName();
        
        return this;
      }
      /**
       * <code>required string module_name = 1;</code>
       */
      public Builder setModuleNameBytes(
          org.jetbrains.kotlin.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        moduleName_ = value;
        
        return this;
      }

      private org.jetbrains.kotlin.protobuf.LazyStringList packageFragmentName_ = org.jetbrains.kotlin.protobuf.LazyStringArrayList.EMPTY;
      private void ensurePackageFragmentNameIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          packageFragmentName_ = new org.jetbrains.kotlin.protobuf.LazyStringArrayList(packageFragmentName_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string package_fragment_name = 2;</code>
       */
      public org.jetbrains.kotlin.protobuf.ProtocolStringList
          getPackageFragmentNameList() {
        return packageFragmentName_.getUnmodifiableView();
      }
      /**
       * <code>repeated string package_fragment_name = 2;</code>
       */
      public int getPackageFragmentNameCount() {
        return packageFragmentName_.size();
      }
      /**
       * <code>repeated string package_fragment_name = 2;</code>
       */
      public java.lang.String getPackageFragmentName(int index) {
        return packageFragmentName_.get(index);
      }
      /**
       * <code>repeated string package_fragment_name = 2;</code>
       */
      public org.jetbrains.kotlin.protobuf.ByteString
          getPackageFragmentNameBytes(int index) {
        return packageFragmentName_.getByteString(index);
      }
      /**
       * <code>repeated string package_fragment_name = 2;</code>
       */
      public Builder setPackageFragmentName(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePackageFragmentNameIsMutable();
        packageFragmentName_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated string package_fragment_name = 2;</code>
       */
      public Builder addPackageFragmentName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePackageFragmentNameIsMutable();
        packageFragmentName_.add(value);
        
        return this;
      }
      /**
       * <code>repeated string package_fragment_name = 2;</code>
       */
      public Builder addAllPackageFragmentName(
          java.lang.Iterable<java.lang.String> values) {
        ensurePackageFragmentNameIsMutable();
        org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
            values, packageFragmentName_);
        
        return this;
      }
      /**
       * <code>repeated string package_fragment_name = 2;</code>
       */
      public Builder clearPackageFragmentName() {
        packageFragmentName_ = org.jetbrains.kotlin.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        
        return this;
      }
      /**
       * <code>repeated string package_fragment_name = 2;</code>
       */
      public Builder addPackageFragmentNameBytes(
          org.jetbrains.kotlin.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePackageFragmentNameIsMutable();
        packageFragmentName_.add(value);
        
        return this;
      }

      private org.jetbrains.kotlin.protobuf.LazyStringList emptyPackage_ = org.jetbrains.kotlin.protobuf.LazyStringArrayList.EMPTY;
      private void ensureEmptyPackageIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          emptyPackage_ = new org.jetbrains.kotlin.protobuf.LazyStringArrayList(emptyPackage_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string empty_package = 3;</code>
       */
      public org.jetbrains.kotlin.protobuf.ProtocolStringList
          getEmptyPackageList() {
        return emptyPackage_.getUnmodifiableView();
      }
      /**
       * <code>repeated string empty_package = 3;</code>
       */
      public int getEmptyPackageCount() {
        return emptyPackage_.size();
      }
      /**
       * <code>repeated string empty_package = 3;</code>
       */
      public java.lang.String getEmptyPackage(int index) {
        return emptyPackage_.get(index);
      }
      /**
       * <code>repeated string empty_package = 3;</code>
       */
      public org.jetbrains.kotlin.protobuf.ByteString
          getEmptyPackageBytes(int index) {
        return emptyPackage_.getByteString(index);
      }
      /**
       * <code>repeated string empty_package = 3;</code>
       */
      public Builder setEmptyPackage(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureEmptyPackageIsMutable();
        emptyPackage_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated string empty_package = 3;</code>
       */
      public Builder addEmptyPackage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureEmptyPackageIsMutable();
        emptyPackage_.add(value);
        
        return this;
      }
      /**
       * <code>repeated string empty_package = 3;</code>
       */
      public Builder addAllEmptyPackage(
          java.lang.Iterable<java.lang.String> values) {
        ensureEmptyPackageIsMutable();
        org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
            values, emptyPackage_);
        
        return this;
      }
      /**
       * <code>repeated string empty_package = 3;</code>
       */
      public Builder clearEmptyPackage() {
        emptyPackage_ = org.jetbrains.kotlin.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        
        return this;
      }
      /**
       * <code>repeated string empty_package = 3;</code>
       */
      public Builder addEmptyPackageBytes(
          org.jetbrains.kotlin.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureEmptyPackageIsMutable();
        emptyPackage_.add(value);
        
        return this;
      }

      private org.jetbrains.kotlin.protobuf.LazyStringList file_ = org.jetbrains.kotlin.protobuf.LazyStringArrayList.EMPTY;
      private void ensureFileIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          file_ = new org.jetbrains.kotlin.protobuf.LazyStringArrayList(file_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string file = 4;</code>
       */
      public org.jetbrains.kotlin.protobuf.ProtocolStringList
          getFileList() {
        return file_.getUnmodifiableView();
      }
      /**
       * <code>repeated string file = 4;</code>
       */
      public int getFileCount() {
        return file_.size();
      }
      /**
       * <code>repeated string file = 4;</code>
       */
      public java.lang.String getFile(int index) {
        return file_.get(index);
      }
      /**
       * <code>repeated string file = 4;</code>
       */
      public org.jetbrains.kotlin.protobuf.ByteString
          getFileBytes(int index) {
        return file_.getByteString(index);
      }
      /**
       * <code>repeated string file = 4;</code>
       */
      public Builder setFile(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFileIsMutable();
        file_.set(index, value);
        
        return this;
      }
      /**
       * <code>repeated string file = 4;</code>
       */
      public Builder addFile(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFileIsMutable();
        file_.add(value);
        
        return this;
      }
      /**
       * <code>repeated string file = 4;</code>
       */
      public Builder addAllFile(
          java.lang.Iterable<java.lang.String> values) {
        ensureFileIsMutable();
        org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
            values, file_);
        
        return this;
      }
      /**
       * <code>repeated string file = 4;</code>
       */
      public Builder clearFile() {
        file_ = org.jetbrains.kotlin.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        
        return this;
      }
      /**
       * <code>repeated string file = 4;</code>
       */
      public Builder addFileBytes(
          org.jetbrains.kotlin.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFileIsMutable();
        file_.add(value);
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.library.metadata.LinkDataLibrary)
    }

    static {
      defaultInstance = new LinkDataLibrary(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.library.metadata.LinkDataLibrary)
  }

  public static final int PACKAGE_FQ_NAME_FIELD_NUMBER = 171;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Package { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Package,
      java.lang.Integer> packageFqName = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Package.getDefaultInstance(),
        0,
        null,
        null,
        171,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.INT32,
        java.lang.Integer.class);
  public static final int CLASS_ANNOTATION_FIELD_NUMBER = 170;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Class { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Class,
      java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>> classAnnotation = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Class.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.getDefaultInstance(),
        null,
        170,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        false,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class);
  public static final int CLASS_UNIQ_ID_FIELD_NUMBER = 171;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Class { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Class,
      org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId> classUniqId = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Class.getDefaultInstance(),
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.getDefaultInstance(),
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.getDefaultInstance(),
        null,
        171,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.class);
  public static final int CLASS_FILE_FIELD_NUMBER = 176;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Class { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Class,
      java.lang.Integer> classFile = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Class.getDefaultInstance(),
        0,
        null,
        null,
        176,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.INT32,
        java.lang.Integer.class);
  public static final int CONSTRUCTOR_ANNOTATION_FIELD_NUMBER = 170;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Constructor { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Constructor,
      java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>> constructorAnnotation = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Constructor.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.getDefaultInstance(),
        null,
        170,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        false,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class);
  public static final int CONSTRUCTOR_UNIQ_ID_FIELD_NUMBER = 172;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Constructor { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Constructor,
      org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId> constructorUniqId = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Constructor.getDefaultInstance(),
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.getDefaultInstance(),
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.getDefaultInstance(),
        null,
        172,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.class);
  public static final int FUNCTION_ANNOTATION_FIELD_NUMBER = 170;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Function { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Function,
      java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>> functionAnnotation = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Function.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.getDefaultInstance(),
        null,
        170,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        false,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class);
  public static final int FUNCTION_FILE_FIELD_NUMBER = 172;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Function { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Function,
      java.lang.Integer> functionFile = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Function.getDefaultInstance(),
        0,
        null,
        null,
        172,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.INT32,
        java.lang.Integer.class);
  public static final int FUNCTION_UNIQ_ID_FIELD_NUMBER = 173;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Function { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Function,
      org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId> functionUniqId = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Function.getDefaultInstance(),
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.getDefaultInstance(),
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.getDefaultInstance(),
        null,
        173,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.class);
  public static final int PROPERTY_ANNOTATION_FIELD_NUMBER = 170;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Property { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Property,
      java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>> propertyAnnotation = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Property.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.getDefaultInstance(),
        null,
        170,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        false,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class);
  public static final int PROPERTY_GETTER_ANNOTATION_FIELD_NUMBER = 177;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Property { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Property,
      java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>> propertyGetterAnnotation = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Property.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.getDefaultInstance(),
        null,
        177,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        false,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class);
  public static final int PROPERTY_SETTER_ANNOTATION_FIELD_NUMBER = 178;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Property { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Property,
      java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>> propertySetterAnnotation = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Property.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.getDefaultInstance(),
        null,
        178,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        false,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class);
  public static final int COMPILE_TIME_VALUE_FIELD_NUMBER = 173;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Property { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Property,
      org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.Argument.Value> compileTimeValue = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Property.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.Argument.Value.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.Argument.Value.getDefaultInstance(),
        null,
        173,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.Argument.Value.class);
  public static final int PROPERTY_FILE_FIELD_NUMBER = 176;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Property { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Property,
      java.lang.Integer> propertyFile = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Property.getDefaultInstance(),
        0,
        null,
        null,
        176,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.INT32,
        java.lang.Integer.class);
  public static final int PROPERTY_UNIQ_ID_FIELD_NUMBER = 179;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Property { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Property,
      org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId> propertyUniqId = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Property.getDefaultInstance(),
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.getDefaultInstance(),
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.getDefaultInstance(),
        null,
        179,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.class);
  public static final int ENUM_ENTRY_ANNOTATION_FIELD_NUMBER = 170;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.EnumEntry { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.EnumEntry,
      java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>> enumEntryAnnotation = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.EnumEntry.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.getDefaultInstance(),
        null,
        170,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        false,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class);
  public static final int ENUM_ENTRY_ORDINAL_FIELD_NUMBER = 171;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.EnumEntry { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.EnumEntry,
      java.lang.Integer> enumEntryOrdinal = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.EnumEntry.getDefaultInstance(),
        0,
        null,
        null,
        171,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.INT32,
        java.lang.Integer.class);
  public static final int ENUM_ENTRY_UNIQ_ID_FIELD_NUMBER = 172;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.EnumEntry { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.EnumEntry,
      org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId> enumEntryUniqId = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.EnumEntry.getDefaultInstance(),
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.getDefaultInstance(),
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.getDefaultInstance(),
        null,
        172,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.class);
  public static final int PARAMETER_ANNOTATION_FIELD_NUMBER = 170;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.ValueParameter { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.ValueParameter,
      java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>> parameterAnnotation = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.ValueParameter.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.getDefaultInstance(),
        null,
        170,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        false,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class);
  public static final int VALUE_PARAM_UNIQ_ID_FIELD_NUMBER = 171;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.ValueParameter { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.ValueParameter,
      org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId> valueParamUniqId = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.ValueParameter.getDefaultInstance(),
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.getDefaultInstance(),
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.getDefaultInstance(),
        null,
        171,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.class);
  public static final int TYPE_ANNOTATION_FIELD_NUMBER = 170;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Type { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Type,
      java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>> typeAnnotation = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Type.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.getDefaultInstance(),
        null,
        170,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        false,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class);
  public static final int TYPE_PARAMETER_ANNOTATION_FIELD_NUMBER = 170;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.TypeParameter { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.TypeParameter,
      java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>> typeParameterAnnotation = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.TypeParameter.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.getDefaultInstance(),
        null,
        170,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        false,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class);
  public static final int TYPE_PARAM_UNIQ_ID_FIELD_NUMBER = 171;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.TypeParameter { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.TypeParameter,
      org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId> typeParamUniqId = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.TypeParameter.getDefaultInstance(),
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.getDefaultInstance(),
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.getDefaultInstance(),
        null,
        171,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.DescriptorUniqId.class);
  public static final int PACKAGE_FRAGMENT_FILES_FIELD_NUMBER = 170;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.PackageFragment { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment,
      org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files> packageFragmentFiles = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment.getDefaultInstance(),
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files.getDefaultInstance(),
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files.getDefaultInstance(),
        null,
        170,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        org.jetbrains.kotlin.library.metadata.KlibMetadataProtoBuf.Files.class);

  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}