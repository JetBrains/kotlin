package

package a {
    public fun IEntity(/*0*/ f: b.ObserverSupport<a.IEntity>): kotlin.Unit

    public interface IEntity {
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}

package b {

    public final class ObserverSupport</*0*/ T : a.IEntity> {
        public constructor ObserverSupport</*0*/ T : a.IEntity>()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}
