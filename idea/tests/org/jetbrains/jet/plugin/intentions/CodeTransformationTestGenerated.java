/*
 * Copyright 2010-2014 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jetbrains.jet.plugin.intentions;

import junit.framework.Assert;
import junit.framework.Test;
import junit.framework.TestSuite;

import java.io.File;
import java.util.regex.Pattern;
import org.jetbrains.jet.JetTestUtils;
import org.jetbrains.jet.test.InnerTestClasses;
import org.jetbrains.jet.test.TestMetadata;

import org.jetbrains.jet.plugin.intentions.AbstractCodeTransformationTest;

/** This class is generated by {@link org.jetbrains.jet.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("idea/testData/intentions/getToArrayAccess")
public class CodeTransformationTestGenerated extends AbstractCodeTransformationTest {
    public void testAllFilesPresentInGetToArrayAccess() throws Exception {
        JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.TestsPackage", new File("idea/testData/intentions/getToArrayAccess"), Pattern.compile("^(.+)\\.kt$"), true);
    }
    
    @TestMetadata("applicable1.kt")
    public void testApplicable1() throws Exception {
        doTestGetToArrayAccess("idea/testData/intentions/getToArrayAccess/applicable1.kt");
    }
    
    @TestMetadata("applicable2.kt")
    public void testApplicable2() throws Exception {
        doTestGetToArrayAccess("idea/testData/intentions/getToArrayAccess/applicable2.kt");
    }
    
    @TestMetadata("applicable3.kt")
    public void testApplicable3() throws Exception {
        doTestGetToArrayAccess("idea/testData/intentions/getToArrayAccess/applicable3.kt");
    }
    
    @TestMetadata("applicable4.kt")
    public void testApplicable4() throws Exception {
        doTestGetToArrayAccess("idea/testData/intentions/getToArrayAccess/applicable4.kt");
    }
    
    @TestMetadata("applicable5.kt")
    public void testApplicable5() throws Exception {
        doTestGetToArrayAccess("idea/testData/intentions/getToArrayAccess/applicable5.kt");
    }
    
    @TestMetadata("applicable6.kt")
    public void testApplicable6() throws Exception {
        doTestGetToArrayAccess("idea/testData/intentions/getToArrayAccess/applicable6.kt");
    }
    
    @TestMetadata("applicable7.kt")
    public void testApplicable7() throws Exception {
        doTestGetToArrayAccess("idea/testData/intentions/getToArrayAccess/applicable7.kt");
    }
    
    @TestMetadata("inapplicable1.kt")
    public void testInapplicable1() throws Exception {
        doTestGetToArrayAccess("idea/testData/intentions/getToArrayAccess/inapplicable1.kt");
    }
    
    @TestMetadata("inapplicable2.kt")
    public void testInapplicable2() throws Exception {
        doTestGetToArrayAccess("idea/testData/intentions/getToArrayAccess/inapplicable2.kt");
    }
    
    @TestMetadata("inapplicable3.kt")
    public void testInapplicable3() throws Exception {
        doTestGetToArrayAccess("idea/testData/intentions/getToArrayAccess/inapplicable3.kt");
    }
    
    @TestMetadata("inapplicable4.kt")
    public void testInapplicable4() throws Exception {
        doTestGetToArrayAccess("idea/testData/intentions/getToArrayAccess/inapplicable4.kt");
    }
    
}
