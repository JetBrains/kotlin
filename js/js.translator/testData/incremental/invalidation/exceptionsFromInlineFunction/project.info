MODULES: lib1, lib2, main

STEP 0:
    language: -IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, lib2, main
    dirty js modules: lib1, lib2, main
    dirty js files:   lib1/l1, lib2/l2, main/m, main/m.export, main
STEP 1:
    language: -IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, lib2, main
    dirty js modules: lib1, lib2
    dirty js files:   lib1/l1, lib2/l2
STEP 2:
    language: -IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, lib2, main
    dirty js modules: lib2
    dirty js files:   lib2/l2
STEP 3:
    language: -IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, lib2, main
    dirty js modules: lib1, lib2
    dirty js files:   lib1/l1, lib2/l2
STEP 4:
    language: -IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, lib2, main
    dirty js modules: lib2
    dirty js files:   lib2/l2
STEP 5..6:
    language: -IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, lib2, main
    dirty js modules: lib1, lib2
    dirty js files:   lib1/l1, lib2/l2
STEP 7:
    language: -IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, lib2, main
    dirty js modules: lib2
    dirty js files:   lib2/l2
STEP 8:
    language: -IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, lib2, main
    dirty js modules: lib1, lib2
    dirty js files:   lib1/l1, lib2/l2
