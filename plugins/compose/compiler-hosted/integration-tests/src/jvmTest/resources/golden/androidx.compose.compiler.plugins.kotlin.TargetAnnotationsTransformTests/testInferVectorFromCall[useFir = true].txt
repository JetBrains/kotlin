//
// Source
// ------------------------------------------

import androidx.compose.runtime.Composable

@Composable
fun Test() {
    Circle()
}

//
// Transformed IR
// ------------------------------------------

@Composable
@ComposableTarget(applier = "Vector")
@FunctionKeyMeta(key = -1794342280, startOffset = 81, endOffset = 124)
fun Test(%composer: Composer?, %changed: Int) {
  %composer = %composer.startRestartGroup(<>)
  sourceInformation(%composer, "C(Test)<Circle...>:Test.kt")
  if (%composer.shouldExecute(%changed != 0, %changed and 0b0001)) {
    if (isTraceInProgress()) {
      traceEventStart(<>, %changed, -1, <>)
    }
    Circle(%composer, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    %composer.skipToGroupEnd()
  }
  %composer.endRestartGroup()?.updateScope { %composer: Composer?, %force: Int ->
    Test(%composer, updateChangedFlags(%changed or 0b0001))
  }
}
