public final annotation class Default : R|kotlin/Annotation| {
    public constructor(): R|test/Default|

}

@R|kotlin/annotation/Target|(allowedTargets = <implicitArrayOf>(kotlin/annotation/AnnotationTarget.PROPERTY_SETTER, kotlin/annotation/AnnotationTarget.PROPERTY_GETTER, kotlin/annotation/AnnotationTarget.FUNCTION)) public final annotation class Function : R|kotlin/Annotation| {
    public constructor(): R|test/Function|

}

public final data class MyRecord : R|kotlin/Any| {
    public final operator fun component1(): R|kotlin/String|

    public final fun copy(@R|test/Default|() x: R|kotlin/String| = STUB): R|test/MyRecord|

    public open operator fun equals(other: R|kotlin/Any?|): R|kotlin/Boolean|

    public open fun hashCode(): R|kotlin/Int|

    public open fun toString(): R|kotlin/String|

    @PROPERTY:R|test/Default|() @PROPERTY:R|test/Prop|() field:@FIELD:R|test/Default|() @FIELD:R|test/Prop|() public final val x: R|kotlin/String|
        @R|test/Default|() @R|test/Function|() public get(): R|kotlin/String|

    public constructor(@R|test/Default|() x: R|kotlin/String|): R|test/MyRecord|

}

public final object O : R|kotlin/Any| {
    @PROPERTY:R|test/Default|() @PROPERTY:R|test/Prop|() field:@FIELD:R|test/Default|() @FIELD:R|test/Prop|() public final val x: R|kotlin/Int|
        @R|test/Default|() @R|test/Function|() public get(): R|kotlin/Int|

    @PROPERTY:R|test/Default|() @PROPERTY:R|test/Prop|() field:@FIELD:R|test/Default|() @FIELD:R|test/Prop|() public final var y: R|kotlin/Int|
        @R|test/Default|() @R|test/Function|() public get(): R|kotlin/Int|
        public set(@R|test/Default|() param: R|kotlin/Int|): R|kotlin/Unit|

    private constructor(): R|test/O|

}

@R|kotlin/annotation/Target|(allowedTargets = <implicitArrayOf>(kotlin/annotation/AnnotationTarget.FIELD, kotlin/annotation/AnnotationTarget.PROPERTY)) public final annotation class Prop : R|kotlin/Annotation| {
    public constructor(): R|test/Prop|

}
