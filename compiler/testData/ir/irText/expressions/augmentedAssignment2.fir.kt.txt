val p: A
  field = A()
  get

class A {
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

}

operator fun A.divAssign(s: String) {
}

operator fun A.minusAssign(s: String) {
}

operator fun A.plusAssign(s: String) {
}

operator fun A.remAssign(s: String) {
}

fun testProperty() {
  <get-p>().plusAssign(s = "+=")
  <get-p>().minusAssign(s = "-=")
  <get-p>().timesAssign(s = "*=")
  <get-p>().divAssign(s = "/=")
  <get-p>().remAssign(s = "%=")
}

fun testVariable() {
  val a: A = A()
  a.plusAssign(s = "+=")
  a.minusAssign(s = "-=")
  a.timesAssign(s = "*=")
  a.divAssign(s = "/=")
  a.remAssign(s = "*=")
}

operator fun A.timesAssign(s: String) {
}

