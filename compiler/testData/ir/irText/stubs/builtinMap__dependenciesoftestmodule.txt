MODULE_FRAGMENT name:<dependencies of test-module>
  EXTERNAL_PACKAGE_FRAGMENT fqName:java.util
    CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:LinkedHashMap modality:OPEN visibility:public flags:
      $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
      superClasses:
        CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:HashMap modality:OPEN visibility:public flags:
        CLASS IR_EXTERNAL_DECLARATION_STUB INTERFACE name:MutableMap modality:ABSTRACT visibility:public flags:
      TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any!]
      TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance: upperBounds:[kotlin.Any!]
      CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public <> () returnType:java.util.LinkedHashMap<K, V> flags:
      CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public <> (p0:(kotlin.collections.MutableMap<out K!, out V!>..kotlin.collections.Map<out K!, V!>?)) returnType:java.util.LinkedHashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:(kotlin.collections.MutableMap<out K!, out V!>..kotlin.collections.Map<out K!, V!>?) flags:
      CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public <> (p0:kotlin.Int) returnType:java.util.LinkedHashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
      CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public <> (p0:kotlin.Int, p1:kotlin.Float) returnType:java.util.LinkedHashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Float flags:
      CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public <> (p0:kotlin.Int, p1:kotlin.Float, p2:kotlin.Boolean) returnType:java.util.LinkedHashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Float flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:kotlin.Boolean flags:
      FUN FAKE_OVERRIDE name:readObject visibility:invisible_fake modality:OPEN <> ($this:java.util.HashMap<K!, V!>, p0:java.io.ObjectInputStream!) returnType:Unit flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:readObject visibility:private modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:java.io.ObjectInputStream!) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.io.ObjectInputStream! flags:
      FUN FAKE_OVERRIDE name:writeObject visibility:invisible_fake modality:OPEN <> ($this:java.util.HashMap<K!, V!>, p0:java.io.ObjectOutputStream!) returnType:Unit flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:writeObject visibility:private modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:java.io.ObjectOutputStream!) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.io.ObjectOutputStream! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:linkNodeLast visibility:private modality:OPEN <> ($this:java.util.LinkedHashMap<K, V>, p0:java.util.LinkedHashMap.Entry<K!, V!>!) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.LinkedHashMap.Entry<K!, V!>! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:transferLinks visibility:private modality:OPEN <> ($this:java.util.LinkedHashMap<K, V>, p0:java.util.LinkedHashMap.Entry<K!, V!>!, p1:java.util.LinkedHashMap.Entry<K!, V!>!) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.LinkedHashMap.Entry<K!, V!>! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.LinkedHashMap.Entry<K!, V!>! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:removeEldestEntry visibility:protected/*protected and package*/ modality:OPEN <> ($this:java.util.LinkedHashMap<K, V>, p0:kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>! flags:
      FUN FAKE_OVERRIDE name:clone visibility:public modality:OPEN <> ($this:java.util.HashMap<K!, V!>) returnType:Any flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:clone visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>) returnType:Any flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
      FUN FAKE_OVERRIDE name:compute visibility:public modality:OPEN <> ($this:java.util.HashMap<K!, V!>, p0:K, p1:java.util.function.BiFunction<in K, in V?, out V?>) returnType:V? flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:compute visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:K, p1:java.util.function.BiFunction<in K, in V?, out V?>) returnType:V? flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:compute visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:java.util.function.BiFunction<in K, in V?, out V?>) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.function.BiFunction<in K, in V?, out V?> flags:
      FUN FAKE_OVERRIDE name:computeIfAbsent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:java.util.function.Function<in K, out V>) returnType:V flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:computeIfAbsent visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:K, p1:java.util.function.Function<in K, out V>) returnType:V flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:computeIfAbsent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:java.util.function.Function<in K, out V>) returnType:V flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.function.Function<in K, out V> flags:
      FUN FAKE_OVERRIDE name:computeIfPresent visibility:public modality:OPEN <> ($this:java.util.HashMap<K!, V!>, p0:K, p1:java.util.function.BiFunction<in K, in V, out V?>) returnType:V? flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:computeIfPresent visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:K, p1:java.util.function.BiFunction<in K, in V, out V?>) returnType:V? flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:computeIfPresent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:java.util.function.BiFunction<in K, in V, out V?>) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.function.BiFunction<in K, in V, out V?> flags:
      FUN FAKE_OVERRIDE name:containsKey visibility:public modality:OPEN <> ($this:java.util.HashMap<K!, V!>, key:K) returnType:Boolean flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:containsKey visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, key:K) returnType:Boolean flags:
          FUN FAKE_OVERRIDE name:containsKey visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>, key:K) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K flags:
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K!, V!>, other:kotlin.Any?) returnType:Boolean flags:
        overridden:
          FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K!, V!>, other:kotlin.Any?) returnType:Boolean flags:
          FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K!, V!>) returnType:Int flags:
        overridden:
          FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K!, V!>) returnType:Int flags:
          FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K!, V!> flags:
      FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:OPEN <> ($this:java.util.HashMap<K!, V!>) returnType:Boolean flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:isEmpty visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>) returnType:Boolean flags:
          FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
      FUN FAKE_OVERRIDE name:merge visibility:public modality:OPEN <> ($this:java.util.HashMap<K!, V!>, p0:K, p1:V, p2:java.util.function.BiFunction<in V, in V, out V?>) returnType:V? flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:merge visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:K, p1:V, p2:java.util.function.BiFunction<in V, in V, out V?>) returnType:V? flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:merge visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:V, p2:java.util.function.BiFunction<in V, in V, out V?>) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:V flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:java.util.function.BiFunction<in V, in V, out V?> flags:
      FUN FAKE_OVERRIDE name:put visibility:public modality:OPEN <> ($this:java.util.HashMap<K!, V!>, key:K, value:V) returnType:V? flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:put visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, key:K, value:V) returnType:V? flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:put visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>, key:K, value:V) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:value index:1 type:V flags:
      FUN FAKE_OVERRIDE name:putAll visibility:public modality:OPEN <> ($this:java.util.HashMap<K!, V!>, from:kotlin.collections.Map<out K, V>) returnType:Unit flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:putAll visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, from:kotlin.collections.Map<out K, V>) returnType:Unit flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:putAll visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>, from:kotlin.collections.Map<out K, V>) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:from index:0 type:kotlin.collections.Map<out K, V> flags:
      FUN FAKE_OVERRIDE name:putIfAbsent visibility:public modality:OPEN <> ($this:java.util.HashMap<K!, V!>, p0:K, p1:V) returnType:V? flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:putIfAbsent visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:K, p1:V) returnType:V? flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:putIfAbsent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:V) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:V flags:
      FUN FAKE_OVERRIDE name:remove visibility:public modality:OPEN <> ($this:java.util.HashMap<K!, V!>, key:K) returnType:V? flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, key:K) returnType:V? flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>, key:K) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K flags:
      FUN FAKE_OVERRIDE name:remove visibility:public modality:OPEN <> ($this:java.util.HashMap<K!, V!>, key:K, value:V) returnType:Boolean flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, key:K, value:V) returnType:Boolean flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, key:K, value:V) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:value index:1 type:V flags:
      FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN <> ($this:java.util.HashMap<K!, V!>, p0:K, p1:V) returnType:V? flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:replace visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:K, p1:V) returnType:V? flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:replace visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:V) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:V flags:
      FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN <> ($this:java.util.HashMap<K!, V!>, p0:K, p1:V, p2:V) returnType:Boolean flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:replace visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:K, p1:V, p2:V) returnType:Boolean flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:replace visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:V, p2:V) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:V flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:V flags:
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K!, V!>) returnType:String flags:
        overridden:
          FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K!, V!>) returnType:String flags:
          FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K!, V!> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:size type:kotlin.Int visibility:public modality:OPEN flags:val
        FUN FAKE_OVERRIDE name:<get-size> visibility:public modality:OPEN <> ($this:java.util.HashMap<K!, V!>) returnType:Int flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:<get-size> visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>) returnType:Int flags:
            FUN FAKE_OVERRIDE name:<get-size> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>) returnType:Int flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:clear visibility:public modality:OPEN <> ($this:java.util.LinkedHashMap<K, V>) returnType:Unit flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:clear visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>) returnType:Unit flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:clear visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:containsValue visibility:public modality:OPEN <> ($this:java.util.LinkedHashMap<K, V>, value:V) returnType:Boolean flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:containsValue visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, value:V) returnType:Boolean flags:
          FUN FAKE_OVERRIDE name:containsValue visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>, value:V) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:value index:0 type:V flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:forEach visibility:public modality:OPEN <> ($this:java.util.LinkedHashMap<K, V>, p0:java.util.function.BiConsumer<in K, in V>) returnType:Unit flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:forEach visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:java.util.function.BiConsumer<in K, in V>) returnType:Unit flags:
          FUN FAKE_OVERRIDE name:forEach visibility:public modality:OPEN <> ($this:kotlin.collections.Map<K, V>, p0:java.util.function.BiConsumer<in K, in V>) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.BiConsumer<in K, in V> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:get visibility:public modality:OPEN <> ($this:java.util.LinkedHashMap<K, V>, key:K) returnType:V? flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:get visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, key:K) returnType:V? flags:
          FUN FAKE_OVERRIDE name:get visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>, key:K) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:getOrDefault visibility:public modality:OPEN <> ($this:java.util.LinkedHashMap<K, V>, key:K, defaultValue:V) returnType:V flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:getOrDefault visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, key:K, defaultValue:V) returnType:V flags:
          FUN FAKE_OVERRIDE name:getOrDefault visibility:public modality:OPEN <> ($this:kotlin.collections.Map<K, V>, key:K, defaultValue:V) returnType:V flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:defaultValue index:1 type:V flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:replaceAll visibility:public modality:OPEN <> ($this:java.util.LinkedHashMap<K, V>, p0:java.util.function.BiFunction<in K, in V, out V>) returnType:Unit flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:replaceAll visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:java.util.function.BiFunction<in K, in V, out V>) returnType:Unit flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:replaceAll visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:java.util.function.BiFunction<in K, in V, out V>) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.BiFunction<in K, in V, out V> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:entries type:kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<K, V>> visibility:public modality:OPEN flags:val
        FUN IR_EXTERNAL_DECLARATION_STUB name:<get-entries> visibility:public modality:OPEN <> ($this:java.util.LinkedHashMap<K, V>) returnType:(kotlin.collections.MutableSet<(kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?)>..kotlin.collections.Set<(kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?)>?) flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:<get-entries> visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>) returnType:(kotlin.collections.MutableSet<(kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?)>..kotlin.collections.Set<(kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?)>?) flags:
            FUN IR_EXTERNAL_DECLARATION_STUB name:<get-entries> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>) returnType:MutableSet<MutableEntry<K, V>> flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:keys type:kotlin.collections.MutableSet<K> visibility:public modality:OPEN flags:val
        FUN IR_EXTERNAL_DECLARATION_STUB name:<get-keys> visibility:public modality:OPEN <> ($this:java.util.LinkedHashMap<K, V>) returnType:(kotlin.collections.MutableSet<(K..K?)>..kotlin.collections.Set<(K..K?)>?) flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:<get-keys> visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>) returnType:(kotlin.collections.MutableSet<(K..K?)>..kotlin.collections.Set<(K..K?)>?) flags:
            FUN IR_EXTERNAL_DECLARATION_STUB name:<get-keys> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>) returnType:MutableSet<K> flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:values type:kotlin.collections.MutableCollection<V> visibility:public modality:OPEN flags:val
        FUN IR_EXTERNAL_DECLARATION_STUB name:<get-values> visibility:public modality:OPEN <> ($this:java.util.LinkedHashMap<K, V>) returnType:(kotlin.collections.MutableCollection<(V..V?)>..kotlin.collections.Collection<(V..V?)>?) flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:<get-values> visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>) returnType:(kotlin.collections.MutableCollection<(V..V?)>..kotlin.collections.Collection<(V..V?)>?) flags:
            FUN IR_EXTERNAL_DECLARATION_STUB name:<get-values> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>) returnType:MutableCollection<V> flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:LinkedHashIterator modality:ABSTRACT visibility:public/*package*/ flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedHashIterator flags:
        superClasses:
          CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:Any modality:OPEN visibility:public flags:
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public/*package*/ <> ($this:java.util.LinkedHashMap<K, V>) returnType:java.util.LinkedHashMap<K, V>.LinkedHashIterator flags:
          $outer: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedHashIterator) returnType:Unit flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedHashIterator flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:hasNext visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedHashIterator) returnType:Boolean flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedHashIterator flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:nextNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedHashIterator) returnType:(java.util.LinkedHashMap.Entry<(K..K?), (V..V?)>..java.util.LinkedHashMap.Entry<(K..K?), (V..V?)>?) flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedHashIterator flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:LinkedEntryIterator modality:FINAL visibility:public/*package*/ flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedEntryIterator flags:
        superClasses:
          CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:LinkedHashIterator modality:ABSTRACT visibility:public/*package*/ flags:
          UNBOUND: interface MutableIterator<out T> : kotlin.collections.Iterator<T>
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public/*package*/ <> ($this:java.util.LinkedHashMap<K, V>) returnType:java.util.LinkedHashMap<K, V>.LinkedEntryIterator flags:
          $outer: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:next visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedEntryIterator) returnType:(kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?) flags:
          overridden:
            UNBOUND: fun next(): T
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedEntryIterator flags:
        FUN FAKE_OVERRIDE name:hasNext visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K!, V!>.LinkedHashIterator) returnType:Boolean flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:hasNext visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedHashIterator) returnType:Boolean flags:
            UNBOUND: fun hasNext(): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K!, V!>.LinkedHashIterator flags:
        FUN FAKE_OVERRIDE name:remove visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K!, V!>.LinkedHashIterator) returnType:Unit flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedHashIterator) returnType:Unit flags:
            UNBOUND: fun remove(): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K!, V!>.LinkedHashIterator flags:
        FUN FAKE_OVERRIDE name:forEachRemaining visibility:public modality:OPEN <> ($this:kotlin.collections.Iterator<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>, p0:java.util.function.Consumer<in kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:Unit flags:
          overridden:
            UNBOUND: fun forEachRemaining(p0: java.util.function.Consumer<in T>): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Iterator<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Consumer<in kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
            UNBOUND: fun equals(other: kotlin.Any?): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
          overridden:
            FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
            UNBOUND: fun hashCode(): kotlin.Int
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
          overridden:
            FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
            UNBOUND: fun toString(): kotlin.String
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:nextNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.LinkedHashMap<K!, V!>.LinkedHashIterator) returnType:(java.util.LinkedHashMap.Entry<(K..K?), (V..V?)>..java.util.LinkedHashMap.Entry<(K..K?), (V..V?)>?) flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:nextNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedHashIterator) returnType:(java.util.LinkedHashMap.Entry<(K..K?), (V..V?)>..java.util.LinkedHashMap.Entry<(K..K?), (V..V?)>?) flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K!, V!>.LinkedHashIterator flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:LinkedEntrySet modality:FINAL visibility:public/*package*/ flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedEntrySet flags:
        superClasses:
          UNBOUND: class AbstractSet<E : kotlin.Any!> : java.util.AbstractCollection<E!>, kotlin.collections.MutableSet<E!>
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public/*package*/ <> ($this:java.util.LinkedHashMap<K, V>) returnType:java.util.LinkedHashMap<K, V>.LinkedEntrySet flags:
          $outer: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:clear visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedEntrySet) returnType:Unit flags:
          overridden:
            UNBOUND: fun clear(): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedEntrySet flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:contains visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedEntrySet, element:kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!) returnType:Boolean flags:
          overridden:
            UNBOUND: fun contains(element: E!): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedEntrySet flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:element index:0 type:kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:forEach visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedEntrySet, p0:java.util.function.Consumer<in kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>!) returnType:Unit flags:
          overridden:
            UNBOUND: fun forEach(p0: java.util.function.Consumer<in E!>!): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedEntrySet flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Consumer<in kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:iterator visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedEntrySet) returnType:MutableIterator<(kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?)> flags:
          overridden:
            UNBOUND: fun iterator(): kotlin.collections.MutableIterator<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedEntrySet flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedEntrySet, element:kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!) returnType:Boolean flags:
          overridden:
            UNBOUND: fun remove(element: E!): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedEntrySet flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:element index:0 type:kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:spliterator visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedEntrySet) returnType:Spliterator<(kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?)> flags:
          overridden:
            UNBOUND: fun spliterator(): java.util.Spliterator<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedEntrySet flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:size type:kotlin.Int visibility:public modality:FINAL flags:val
          FUN IR_EXTERNAL_DECLARATION_STUB name:<get-size> visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedEntrySet) returnType:Int flags:
            overridden:
              UNBOUND: fun <get-size>(): kotlin.Int
            $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedEntrySet flags:
        FUN FAKE_OVERRIDE name:toArray visibility:public modality:OPEN <T> ($this:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>, p0:kotlin.Array<(out) T!>!) returnType:(kotlin.Array<(T..T?)>..kotlin.Array<out (T..T?)>?) flags:
          overridden:
            UNBOUND: fun <T : kotlin.Any!> toArray(p0: kotlin.Array<(out) T!>!): kotlin.Array<(out) T!>!
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:T index:0 variance: upperBounds:[kotlin.Any!]
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Array<(out) T!>! flags:
        FUN FAKE_OVERRIDE name:add visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>, element:kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!) returnType:Boolean flags:
          overridden:
            UNBOUND: fun add(element: E!): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:element index:0 type:kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>! flags:
        FUN FAKE_OVERRIDE name:addAll visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>, elements:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun addAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:containsAll visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>, elements:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun containsAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:java.util.AbstractSet<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            UNBOUND: fun equals(other: kotlin.Any?): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractSet<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:java.util.AbstractSet<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:Int flags:
          overridden:
            UNBOUND: fun hashCode(): kotlin.Int
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractSet<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun isEmpty(): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:parallelStream visibility:public modality:OPEN <> ($this:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:Stream<(kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?)> flags:
          overridden:
            UNBOUND: fun parallelStream(): java.util.stream.Stream<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:removeAll visibility:public modality:OPEN <> ($this:java.util.AbstractSet<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>, elements:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun removeAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractSet<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:removeIf visibility:public modality:OPEN <> ($this:kotlin.collections.MutableCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>, p0:java.util.function.Predicate<in kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun removeIf(p0: java.util.function.Predicate<in E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Predicate<in kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:retainAll visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>, elements:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun retainAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:stream visibility:public modality:OPEN <> ($this:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:Stream<(kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?)> flags:
          overridden:
            UNBOUND: fun stream(): java.util.stream.Stream<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:toArray visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:(kotlin.Array<(kotlin.Any..kotlin.Any?)>..kotlin.Array<out (kotlin.Any..kotlin.Any?)>?) flags:
          overridden:
            UNBOUND: fun toArray(): kotlin.Array<(out) kotlin.Any!>!
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:String flags:
          overridden:
            UNBOUND: fun toString(): kotlin.String
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:MAX_ARRAY_SIZE type:kotlin.Int visibility:invisible_fake modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:MAX_ARRAY_SIZE type:kotlin.Int visibility:invisible_fake flags:final
        FUN FAKE_OVERRIDE name:finishToArray visibility:invisible_fake modality:OPEN <T> (p0:kotlin.Array<(out) T!>!, p1:kotlin.collections.(Mutable)Iterator<*>!) returnType:(kotlin.Array<(T..T?)>..kotlin.Array<out (T..T?)>?) flags:
          overridden:
            UNBOUND: fun <T : kotlin.Any!> finishToArray(p0: kotlin.Array<(out) T!>!, p1: kotlin.collections.(Mutable)Iterator<*>!): kotlin.Array<(out) T!>!
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:T index:0 variance: upperBounds:[kotlin.Any!]
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Array<(out) T!>! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.collections.(Mutable)Iterator<*>! flags:
        FUN FAKE_OVERRIDE name:hugeCapacity visibility:invisible_fake modality:OPEN <> (p0:kotlin.Int) returnType:Int flags:
          overridden:
            UNBOUND: fun hugeCapacity(p0: kotlin.Int): kotlin.Int
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:LinkedKeyIterator modality:FINAL visibility:public/*package*/ flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedKeyIterator flags:
        superClasses:
          CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:LinkedHashIterator modality:ABSTRACT visibility:public/*package*/ flags:
          UNBOUND: interface MutableIterator<out T> : kotlin.collections.Iterator<T>
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public/*package*/ <> ($this:java.util.LinkedHashMap<K, V>) returnType:java.util.LinkedHashMap<K, V>.LinkedKeyIterator flags:
          $outer: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:next visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedKeyIterator) returnType:(K..K?) flags:
          overridden:
            UNBOUND: fun next(): T
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedKeyIterator flags:
        FUN FAKE_OVERRIDE name:hasNext visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K!, V!>.LinkedHashIterator) returnType:Boolean flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:hasNext visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedHashIterator) returnType:Boolean flags:
            UNBOUND: fun hasNext(): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K!, V!>.LinkedHashIterator flags:
        FUN FAKE_OVERRIDE name:remove visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K!, V!>.LinkedHashIterator) returnType:Unit flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedHashIterator) returnType:Unit flags:
            UNBOUND: fun remove(): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K!, V!>.LinkedHashIterator flags:
        FUN FAKE_OVERRIDE name:forEachRemaining visibility:public modality:OPEN <> ($this:kotlin.collections.Iterator<K!>, p0:java.util.function.Consumer<in K!>) returnType:Unit flags:
          overridden:
            UNBOUND: fun forEachRemaining(p0: java.util.function.Consumer<in T>): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Iterator<K!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Consumer<in K!> flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
            UNBOUND: fun equals(other: kotlin.Any?): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
          overridden:
            FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
            UNBOUND: fun hashCode(): kotlin.Int
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
          overridden:
            FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
            UNBOUND: fun toString(): kotlin.String
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:nextNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.LinkedHashMap<K!, V!>.LinkedHashIterator) returnType:(java.util.LinkedHashMap.Entry<(K..K?), (V..V?)>..java.util.LinkedHashMap.Entry<(K..K?), (V..V?)>?) flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:nextNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedHashIterator) returnType:(java.util.LinkedHashMap.Entry<(K..K?), (V..V?)>..java.util.LinkedHashMap.Entry<(K..K?), (V..V?)>?) flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K!, V!>.LinkedHashIterator flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:LinkedKeySet modality:FINAL visibility:public/*package*/ flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedKeySet flags:
        superClasses:
          UNBOUND: class AbstractSet<E : kotlin.Any!> : java.util.AbstractCollection<E!>, kotlin.collections.MutableSet<E!>
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public/*package*/ <> ($this:java.util.LinkedHashMap<K, V>) returnType:java.util.LinkedHashMap<K, V>.LinkedKeySet flags:
          $outer: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:clear visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedKeySet) returnType:Unit flags:
          overridden:
            UNBOUND: fun clear(): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedKeySet flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:contains visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedKeySet, element:K!) returnType:Boolean flags:
          overridden:
            UNBOUND: fun contains(element: E!): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedKeySet flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:element index:0 type:K! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:forEach visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedKeySet, p0:java.util.function.Consumer<in K!>!) returnType:Unit flags:
          overridden:
            UNBOUND: fun forEach(p0: java.util.function.Consumer<in E!>!): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedKeySet flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Consumer<in K!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:iterator visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedKeySet) returnType:MutableIterator<(K..K?)> flags:
          overridden:
            UNBOUND: fun iterator(): kotlin.collections.MutableIterator<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedKeySet flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedKeySet, element:K!) returnType:Boolean flags:
          overridden:
            UNBOUND: fun remove(element: E!): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedKeySet flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:element index:0 type:K! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:spliterator visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedKeySet) returnType:Spliterator<(K..K?)> flags:
          overridden:
            UNBOUND: fun spliterator(): java.util.Spliterator<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedKeySet flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:size type:kotlin.Int visibility:public modality:FINAL flags:val
          FUN IR_EXTERNAL_DECLARATION_STUB name:<get-size> visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedKeySet) returnType:Int flags:
            overridden:
              UNBOUND: fun <get-size>(): kotlin.Int
            $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedKeySet flags:
        FUN FAKE_OVERRIDE name:toArray visibility:public modality:OPEN <T> ($this:java.util.AbstractCollection<K!>, p0:kotlin.Array<(out) T!>!) returnType:(kotlin.Array<(T..T?)>..kotlin.Array<out (T..T?)>?) flags:
          overridden:
            UNBOUND: fun <T : kotlin.Any!> toArray(p0: kotlin.Array<(out) T!>!): kotlin.Array<(out) T!>!
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:T index:0 variance: upperBounds:[kotlin.Any!]
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<K!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Array<(out) T!>! flags:
        FUN FAKE_OVERRIDE name:add visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<K!>, element:K!) returnType:Boolean flags:
          overridden:
            UNBOUND: fun add(element: E!): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<K!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:element index:0 type:K! flags:
        FUN FAKE_OVERRIDE name:addAll visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<K!>, elements:kotlin.collections.Collection<K!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun addAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<K!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<K!> flags:
        FUN FAKE_OVERRIDE name:containsAll visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<K!>, elements:kotlin.collections.Collection<K!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun containsAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<K!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<K!> flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:java.util.AbstractSet<K!>, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            UNBOUND: fun equals(other: kotlin.Any?): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractSet<K!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:java.util.AbstractSet<K!>) returnType:Int flags:
          overridden:
            UNBOUND: fun hashCode(): kotlin.Int
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractSet<K!> flags:
        FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<K!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun isEmpty(): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<K!> flags:
        FUN FAKE_OVERRIDE name:parallelStream visibility:public modality:OPEN <> ($this:kotlin.collections.Collection<K!>) returnType:Stream<(K..K?)> flags:
          overridden:
            UNBOUND: fun parallelStream(): java.util.stream.Stream<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Collection<K!> flags:
        FUN FAKE_OVERRIDE name:removeAll visibility:public modality:OPEN <> ($this:java.util.AbstractSet<K!>, elements:kotlin.collections.Collection<K!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun removeAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractSet<K!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<K!> flags:
        FUN FAKE_OVERRIDE name:removeIf visibility:public modality:OPEN <> ($this:kotlin.collections.MutableCollection<K!>, p0:java.util.function.Predicate<in K!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun removeIf(p0: java.util.function.Predicate<in E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableCollection<K!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Predicate<in K!> flags:
        FUN FAKE_OVERRIDE name:retainAll visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<K!>, elements:kotlin.collections.Collection<K!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun retainAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<K!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<K!> flags:
        FUN FAKE_OVERRIDE name:stream visibility:public modality:OPEN <> ($this:kotlin.collections.Collection<K!>) returnType:Stream<(K..K?)> flags:
          overridden:
            UNBOUND: fun stream(): java.util.stream.Stream<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Collection<K!> flags:
        FUN FAKE_OVERRIDE name:toArray visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<K!>) returnType:(kotlin.Array<(kotlin.Any..kotlin.Any?)>..kotlin.Array<out (kotlin.Any..kotlin.Any?)>?) flags:
          overridden:
            UNBOUND: fun toArray(): kotlin.Array<(out) kotlin.Any!>!
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<K!> flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<K!>) returnType:String flags:
          overridden:
            UNBOUND: fun toString(): kotlin.String
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<K!> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:MAX_ARRAY_SIZE type:kotlin.Int visibility:invisible_fake modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:MAX_ARRAY_SIZE type:kotlin.Int visibility:invisible_fake flags:final
        FUN FAKE_OVERRIDE name:finishToArray visibility:invisible_fake modality:OPEN <T> (p0:kotlin.Array<(out) T!>!, p1:kotlin.collections.(Mutable)Iterator<*>!) returnType:(kotlin.Array<(T..T?)>..kotlin.Array<out (T..T?)>?) flags:
          overridden:
            UNBOUND: fun <T : kotlin.Any!> finishToArray(p0: kotlin.Array<(out) T!>!, p1: kotlin.collections.(Mutable)Iterator<*>!): kotlin.Array<(out) T!>!
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:T index:0 variance: upperBounds:[kotlin.Any!]
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Array<(out) T!>! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.collections.(Mutable)Iterator<*>! flags:
        FUN FAKE_OVERRIDE name:hugeCapacity visibility:invisible_fake modality:OPEN <> (p0:kotlin.Int) returnType:Int flags:
          overridden:
            UNBOUND: fun hugeCapacity(p0: kotlin.Int): kotlin.Int
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:LinkedValueIterator modality:FINAL visibility:public/*package*/ flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedValueIterator flags:
        superClasses:
          CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:LinkedHashIterator modality:ABSTRACT visibility:public/*package*/ flags:
          UNBOUND: interface MutableIterator<out T> : kotlin.collections.Iterator<T>
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public/*package*/ <> ($this:java.util.LinkedHashMap<K, V>) returnType:java.util.LinkedHashMap<K, V>.LinkedValueIterator flags:
          $outer: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:next visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedValueIterator) returnType:(V..V?) flags:
          overridden:
            UNBOUND: fun next(): T
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedValueIterator flags:
        FUN FAKE_OVERRIDE name:hasNext visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K!, V!>.LinkedHashIterator) returnType:Boolean flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:hasNext visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedHashIterator) returnType:Boolean flags:
            UNBOUND: fun hasNext(): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K!, V!>.LinkedHashIterator flags:
        FUN FAKE_OVERRIDE name:remove visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K!, V!>.LinkedHashIterator) returnType:Unit flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedHashIterator) returnType:Unit flags:
            UNBOUND: fun remove(): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K!, V!>.LinkedHashIterator flags:
        FUN FAKE_OVERRIDE name:forEachRemaining visibility:public modality:OPEN <> ($this:kotlin.collections.Iterator<V!>, p0:java.util.function.Consumer<in V!>) returnType:Unit flags:
          overridden:
            UNBOUND: fun forEachRemaining(p0: java.util.function.Consumer<in T>): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Iterator<V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Consumer<in V!> flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
            UNBOUND: fun equals(other: kotlin.Any?): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
          overridden:
            FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
            UNBOUND: fun hashCode(): kotlin.Int
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
          overridden:
            FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
            UNBOUND: fun toString(): kotlin.String
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:nextNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.LinkedHashMap<K!, V!>.LinkedHashIterator) returnType:(java.util.LinkedHashMap.Entry<(K..K?), (V..V?)>..java.util.LinkedHashMap.Entry<(K..K?), (V..V?)>?) flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:nextNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedHashIterator) returnType:(java.util.LinkedHashMap.Entry<(K..K?), (V..V?)>..java.util.LinkedHashMap.Entry<(K..K?), (V..V?)>?) flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K!, V!>.LinkedHashIterator flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:LinkedValues modality:FINAL visibility:public/*package*/ flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedValues flags:
        superClasses:
          UNBOUND: class AbstractCollection<E : kotlin.Any!> : kotlin.collections.MutableCollection<E!>
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public/*package*/ <> ($this:java.util.LinkedHashMap<K, V>) returnType:java.util.LinkedHashMap<K, V>.LinkedValues flags:
          $outer: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:clear visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedValues) returnType:Unit flags:
          overridden:
            UNBOUND: fun clear(): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedValues flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:contains visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedValues, element:V!) returnType:Boolean flags:
          overridden:
            UNBOUND: fun contains(element: E!): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedValues flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:element index:0 type:V! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:forEach visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedValues, p0:java.util.function.Consumer<in V!>!) returnType:Unit flags:
          overridden:
            UNBOUND: fun forEach(p0: java.util.function.Consumer<in E!>!): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedValues flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Consumer<in V!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:iterator visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedValues) returnType:MutableIterator<(V..V?)> flags:
          overridden:
            UNBOUND: fun iterator(): kotlin.collections.MutableIterator<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedValues flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:spliterator visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedValues) returnType:Spliterator<(V..V?)> flags:
          overridden:
            UNBOUND: fun spliterator(): java.util.Spliterator<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedValues flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:size type:kotlin.Int visibility:public modality:FINAL flags:val
          FUN IR_EXTERNAL_DECLARATION_STUB name:<get-size> visibility:public modality:FINAL <> ($this:java.util.LinkedHashMap<K, V>.LinkedValues) returnType:Int flags:
            overridden:
              UNBOUND: fun <get-size>(): kotlin.Int
            $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V>.LinkedValues flags:
        FUN FAKE_OVERRIDE name:toArray visibility:public modality:OPEN <T> ($this:java.util.AbstractCollection<V!>, p0:kotlin.Array<(out) T!>!) returnType:(kotlin.Array<(T..T?)>..kotlin.Array<out (T..T?)>?) flags:
          overridden:
            UNBOUND: fun <T : kotlin.Any!> toArray(p0: kotlin.Array<(out) T!>!): kotlin.Array<(out) T!>!
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:T index:0 variance: upperBounds:[kotlin.Any!]
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Array<(out) T!>! flags:
        FUN FAKE_OVERRIDE name:add visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<V!>, element:V!) returnType:Boolean flags:
          overridden:
            UNBOUND: fun add(element: E!): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:element index:0 type:V! flags:
        FUN FAKE_OVERRIDE name:addAll visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<V!>, elements:kotlin.collections.Collection<V!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun addAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<V!> flags:
        FUN FAKE_OVERRIDE name:containsAll visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<V!>, elements:kotlin.collections.Collection<V!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun containsAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<V!> flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            UNBOUND: fun equals(other: kotlin.Any?): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
          overridden:
            UNBOUND: fun hashCode(): kotlin.Int
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<V!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun isEmpty(): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<V!> flags:
        FUN FAKE_OVERRIDE name:parallelStream visibility:public modality:OPEN <> ($this:kotlin.collections.Collection<V!>) returnType:Stream<(V..V?)> flags:
          overridden:
            UNBOUND: fun parallelStream(): java.util.stream.Stream<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Collection<V!> flags:
        FUN FAKE_OVERRIDE name:remove visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<V!>, element:V!) returnType:Boolean flags:
          overridden:
            UNBOUND: fun remove(element: E!): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:element index:0 type:V! flags:
        FUN FAKE_OVERRIDE name:removeAll visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<V!>, elements:kotlin.collections.Collection<V!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun removeAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<V!> flags:
        FUN FAKE_OVERRIDE name:removeIf visibility:public modality:OPEN <> ($this:kotlin.collections.MutableCollection<V!>, p0:java.util.function.Predicate<in V!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun removeIf(p0: java.util.function.Predicate<in E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableCollection<V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Predicate<in V!> flags:
        FUN FAKE_OVERRIDE name:retainAll visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<V!>, elements:kotlin.collections.Collection<V!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun retainAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<V!> flags:
        FUN FAKE_OVERRIDE name:stream visibility:public modality:OPEN <> ($this:kotlin.collections.Collection<V!>) returnType:Stream<(V..V?)> flags:
          overridden:
            UNBOUND: fun stream(): java.util.stream.Stream<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Collection<V!> flags:
        FUN FAKE_OVERRIDE name:toArray visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<V!>) returnType:(kotlin.Array<(kotlin.Any..kotlin.Any?)>..kotlin.Array<out (kotlin.Any..kotlin.Any?)>?) flags:
          overridden:
            UNBOUND: fun toArray(): kotlin.Array<(out) kotlin.Any!>!
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<V!> flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<V!>) returnType:String flags:
          overridden:
            UNBOUND: fun toString(): kotlin.String
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<V!> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:MAX_ARRAY_SIZE type:kotlin.Int visibility:invisible_fake modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:MAX_ARRAY_SIZE type:kotlin.Int visibility:invisible_fake flags:final
        FUN FAKE_OVERRIDE name:finishToArray visibility:invisible_fake modality:OPEN <T> (p0:kotlin.Array<(out) T!>!, p1:kotlin.collections.(Mutable)Iterator<*>!) returnType:(kotlin.Array<(T..T?)>..kotlin.Array<out (T..T?)>?) flags:
          overridden:
            UNBOUND: fun <T : kotlin.Any!> finishToArray(p0: kotlin.Array<(out) T!>!, p1: kotlin.collections.(Mutable)Iterator<*>!): kotlin.Array<(out) T!>!
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:T index:0 variance: upperBounds:[kotlin.Any!]
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Array<(out) T!>! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.collections.(Mutable)Iterator<*>! flags:
        FUN FAKE_OVERRIDE name:hugeCapacity visibility:invisible_fake modality:OPEN <> (p0:kotlin.Int) returnType:Int flags:
          overridden:
            UNBOUND: fun hugeCapacity(p0: kotlin.Int): kotlin.Int
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
      FUN FAKE_OVERRIDE name:capacity visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K!, V!>) returnType:Int flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:capacity visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K, V>) returnType:Int flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
      FUN FAKE_OVERRIDE name:getNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K!, V!>, p0:kotlin.Int, p1:kotlin.Any!) returnType:(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?) flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:getNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K, V>, p0:kotlin.Int, p1:kotlin.Any!) returnType:(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?) flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Any! flags:
      FUN FAKE_OVERRIDE name:loadFactor visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K!, V!>) returnType:Float flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:loadFactor visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K, V>) returnType:Float flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
      FUN FAKE_OVERRIDE name:putMapEntries visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K!, V!>, p0:(kotlin.collections.MutableMap<out K!, out V!>..kotlin.collections.Map<out K!, V!>?), p1:kotlin.Boolean) returnType:Unit flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:putMapEntries visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K, V>, p0:(kotlin.collections.MutableMap<out K!, out V!>..kotlin.collections.Map<out K!, V!>?), p1:kotlin.Boolean) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:(kotlin.collections.MutableMap<out K!, out V!>..kotlin.collections.Map<out K!, V!>?) flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Boolean flags:
      FUN FAKE_OVERRIDE name:putVal visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K!, V!>, p0:kotlin.Int, p1:K!, p2:V!, p3:kotlin.Boolean, p4:kotlin.Boolean) returnType:(V..V?) flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:putVal visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K, V>, p0:kotlin.Int, p1:K!, p2:V!, p3:kotlin.Boolean, p4:kotlin.Boolean) returnType:(V..V?) flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:K! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:V! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p3 index:3 type:kotlin.Boolean flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p4 index:4 type:kotlin.Boolean flags:
      FUN FAKE_OVERRIDE name:removeNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K!, V!>, p0:kotlin.Int, p1:kotlin.Any!, p2:kotlin.Any!, p3:kotlin.Boolean, p4:kotlin.Boolean) returnType:(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?) flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:removeNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K, V>, p0:kotlin.Int, p1:kotlin.Any!, p2:kotlin.Any!, p3:kotlin.Boolean, p4:kotlin.Boolean) returnType:(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?) flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Any! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:kotlin.Any! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p3 index:3 type:kotlin.Boolean flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p4 index:4 type:kotlin.Boolean flags:
      FUN FAKE_OVERRIDE name:resize visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K!, V!>) returnType:(kotlin.Array<(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?)>..kotlin.Array<out (java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?)>?) flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:resize visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K, V>) returnType:(kotlin.Array<(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?)>..kotlin.Array<out (java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?)>?) flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
      FUN FAKE_OVERRIDE name:treeifyBin visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K!, V!>, p0:kotlin.Array<(out) java.util.HashMap.Node<K!, V!>!>!, p1:kotlin.Int) returnType:Unit flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:treeifyBin visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K, V>, p0:kotlin.Array<(out) java.util.HashMap.Node<K!, V!>!>!, p1:kotlin.Int) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Array<(out) java.util.HashMap.Node<K!, V!>!>! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Int flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:loadFactor type:kotlin.Float visibility:public/*package*/ modality:FINAL flags:val
        FIELD IR_EXTERNAL_DECLARATION_STUB name:loadFactor type:kotlin.Float visibility:public/*package*/ flags:final
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:entrySet type:kotlin.collections.(Mutable)Set<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>! visibility:public/*package*/ modality:FINAL flags:var
        FIELD IR_EXTERNAL_DECLARATION_STUB name:entrySet type:kotlin.collections.(Mutable)Set<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>! visibility:public/*package*/ flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:keySet type:kotlin.collections.(Mutable)Set<K!>! visibility:public/*package*/ modality:FINAL flags:var
        FIELD IR_EXTERNAL_DECLARATION_STUB name:keySet type:kotlin.collections.(Mutable)Set<K!>! visibility:public/*package*/ flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:modCount type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
        FIELD IR_EXTERNAL_DECLARATION_STUB name:modCount type:kotlin.Int visibility:public/*package*/ flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:size type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
        FIELD IR_EXTERNAL_DECLARATION_STUB name:size type:kotlin.Int visibility:public/*package*/ flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:table type:kotlin.Array<(out) java.util.HashMap.Node<K!, V!>!>! visibility:public/*package*/ modality:FINAL flags:var
        FIELD IR_EXTERNAL_DECLARATION_STUB name:table type:kotlin.Array<(out) java.util.HashMap.Node<K!, V!>!>! visibility:public/*package*/ flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:threshold type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
        FIELD IR_EXTERNAL_DECLARATION_STUB name:threshold type:kotlin.Int visibility:public/*package*/ flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:values type:kotlin.collections.(Mutable)Collection<V!>! visibility:public/*package*/ modality:FINAL flags:var
        FIELD IR_EXTERNAL_DECLARATION_STUB name:values type:kotlin.collections.(Mutable)Collection<V!>! visibility:public/*package*/ flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:accessOrder type:kotlin.Boolean visibility:public/*package*/ modality:FINAL flags:val
        FIELD IR_EXTERNAL_DECLARATION_STUB name:accessOrder type:kotlin.Boolean visibility:public/*package*/ flags:final
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:head type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
        FIELD IR_EXTERNAL_DECLARATION_STUB name:head type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:tail type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
        FIELD IR_EXTERNAL_DECLARATION_STUB name:tail type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:Entry modality:OPEN visibility:public/*package*/ flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap.Entry<K, V> flags:
        superClasses:
          CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:Node modality:OPEN visibility:public/*package*/ flags:
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any!]
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance: upperBounds:[kotlin.Any!]
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public/*package*/ <> (p0:kotlin.Int, p1:K!, p2:V!, p3:java.util.HashMap.Node<K!, V!>!) returnType:java.util.LinkedHashMap.Entry<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:K! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:V! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p3 index:3 type:java.util.HashMap.Node<K!, V!>! flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K!, V!>, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:equals visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K, V>, other:kotlin.Any?) returnType:Boolean flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.Node<K!, V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K!, V!>) returnType:Int flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:hashCode visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K, V>) returnType:Int flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.Node<K!, V!> flags:
        FUN FAKE_OVERRIDE name:setValue visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K!, V!>, newValue:V!) returnType:(V..V?) flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:setValue visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K, V>, newValue:V!) returnType:(V..V?) flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.Node<K!, V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:newValue index:0 type:V! flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K!, V!>) returnType:String flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:toString visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K, V>) returnType:String flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.Node<K!, V!> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:key type:K! visibility:public modality:FINAL flags:val
          FUN FAKE_OVERRIDE name:<get-key> visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K!, V!>) returnType:(K..K?) flags:
            overridden:
              FUN IR_EXTERNAL_DECLARATION_STUB name:<get-key> visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K, V>) returnType:(K..K?) flags:
            $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.Node<K!, V!> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:value type:V! visibility:public modality:FINAL flags:val
          FUN FAKE_OVERRIDE name:<get-value> visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K!, V!>) returnType:(V..V?) flags:
            overridden:
              FUN IR_EXTERNAL_DECLARATION_STUB name:<get-value> visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K, V>) returnType:(V..V?) flags:
            $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.Node<K!, V!> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:hash type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:hash type:kotlin.Int visibility:public/*package*/ flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:key type:K! visibility:public/*package*/ modality:FINAL flags:val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:key type:K! visibility:public/*package*/ flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:value type:V! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:value type:V! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:after type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:after type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:before type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:before type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:afterNodeAccess visibility:public/*package*/ modality:OPEN <> ($this:java.util.LinkedHashMap<K, V>, p0:java.util.HashMap.Node<K!, V!>!) returnType:Unit flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:afterNodeAccess visibility:public/*package*/ modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:java.util.HashMap.Node<K!, V!>!) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.HashMap.Node<K!, V!>! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:afterNodeInsertion visibility:public/*package*/ modality:OPEN <> ($this:java.util.LinkedHashMap<K, V>, p0:kotlin.Boolean) returnType:Unit flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:afterNodeInsertion visibility:public/*package*/ modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:kotlin.Boolean) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Boolean flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:afterNodeRemoval visibility:public/*package*/ modality:OPEN <> ($this:java.util.LinkedHashMap<K, V>, p0:java.util.HashMap.Node<K!, V!>!) returnType:Unit flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:afterNodeRemoval visibility:public/*package*/ modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:java.util.HashMap.Node<K!, V!>!) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.HashMap.Node<K!, V!>! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:internalWriteEntries visibility:public/*package*/ modality:OPEN <> ($this:java.util.LinkedHashMap<K, V>, p0:java.io.ObjectOutputStream!) returnType:Unit flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:internalWriteEntries visibility:public/*package*/ modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:java.io.ObjectOutputStream!) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.io.ObjectOutputStream! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:newNode visibility:public/*package*/ modality:OPEN <> ($this:java.util.LinkedHashMap<K, V>, p0:kotlin.Int, p1:K!, p2:V!, p3:java.util.HashMap.Node<K!, V!>!) returnType:(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?) flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:newNode visibility:public/*package*/ modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:kotlin.Int, p1:K!, p2:V!, p3:java.util.HashMap.Node<K!, V!>!) returnType:(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?) flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:K! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:V! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p3 index:3 type:java.util.HashMap.Node<K!, V!>! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:newTreeNode visibility:public/*package*/ modality:OPEN <> ($this:java.util.LinkedHashMap<K, V>, p0:kotlin.Int, p1:K!, p2:V!, p3:java.util.HashMap.Node<K!, V!>!) returnType:(java.util.HashMap.TreeNode<(K..K?), (V..V?)>..java.util.HashMap.TreeNode<(K..K?), (V..V?)>?) flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:newTreeNode visibility:public/*package*/ modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:kotlin.Int, p1:K!, p2:V!, p3:java.util.HashMap.Node<K!, V!>!) returnType:(java.util.HashMap.TreeNode<(K..K?), (V..V?)>..java.util.HashMap.TreeNode<(K..K?), (V..V?)>?) flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:K! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:V! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p3 index:3 type:java.util.HashMap.Node<K!, V!>! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:reinitialize visibility:public/*package*/ modality:OPEN <> ($this:java.util.LinkedHashMap<K, V>) returnType:Unit flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:reinitialize visibility:public/*package*/ modality:OPEN <> ($this:java.util.HashMap<K, V>) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:replacementNode visibility:public/*package*/ modality:OPEN <> ($this:java.util.LinkedHashMap<K, V>, p0:java.util.HashMap.Node<K!, V!>!, p1:java.util.HashMap.Node<K!, V!>!) returnType:(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?) flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:replacementNode visibility:public/*package*/ modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:java.util.HashMap.Node<K!, V!>!, p1:java.util.HashMap.Node<K!, V!>!) returnType:(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?) flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.HashMap.Node<K!, V!>! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.HashMap.Node<K!, V!>! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:replacementTreeNode visibility:public/*package*/ modality:OPEN <> ($this:java.util.LinkedHashMap<K, V>, p0:java.util.HashMap.Node<K!, V!>!, p1:java.util.HashMap.Node<K!, V!>!) returnType:(java.util.HashMap.TreeNode<(K..K?), (V..V?)>..java.util.HashMap.TreeNode<(K..K?), (V..V?)>?) flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:replacementTreeNode visibility:public/*package*/ modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:java.util.HashMap.Node<K!, V!>!, p1:java.util.HashMap.Node<K!, V!>!) returnType:(java.util.HashMap.TreeNode<(K..K?), (V..V?)>..java.util.HashMap.TreeNode<(K..K?), (V..V?)>?) flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.LinkedHashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.HashMap.Node<K!, V!>! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.HashMap.Node<K!, V!>! flags:
      FUN FAKE_OVERRIDE name:eq visibility:invisible_fake modality:OPEN <> (p0:kotlin.Any!, p1:kotlin.Any!) returnType:Boolean flags:
        overridden:
          FUN FAKE_OVERRIDE name:eq visibility:invisible_fake modality:OPEN <> (p0:kotlin.Any!, p1:kotlin.Any!) returnType:Boolean flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Any! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Any! flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:serialVersionUID type:kotlin.Long visibility:private modality:FINAL flags:const,val
        FIELD IR_EXTERNAL_DECLARATION_STUB name:serialVersionUID type:kotlin.Long visibility:private flags:final
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:DEFAULT_INITIAL_CAPACITY type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:const,val
        FIELD IR_EXTERNAL_DECLARATION_STUB name:DEFAULT_INITIAL_CAPACITY type:kotlin.Int visibility:public/*package*/ flags:final
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:DEFAULT_LOAD_FACTOR type:kotlin.Float visibility:public/*package*/ modality:FINAL flags:const,val
        FIELD IR_EXTERNAL_DECLARATION_STUB name:DEFAULT_LOAD_FACTOR type:kotlin.Float visibility:public/*package*/ flags:final
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:MAXIMUM_CAPACITY type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:const,val
        FIELD IR_EXTERNAL_DECLARATION_STUB name:MAXIMUM_CAPACITY type:kotlin.Int visibility:public/*package*/ flags:final
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:MIN_TREEIFY_CAPACITY type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:const,val
        FIELD IR_EXTERNAL_DECLARATION_STUB name:MIN_TREEIFY_CAPACITY type:kotlin.Int visibility:public/*package*/ flags:final
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:TREEIFY_THRESHOLD type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:const,val
        FIELD IR_EXTERNAL_DECLARATION_STUB name:TREEIFY_THRESHOLD type:kotlin.Int visibility:public/*package*/ flags:final
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:UNTREEIFY_THRESHOLD type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:const,val
        FIELD IR_EXTERNAL_DECLARATION_STUB name:UNTREEIFY_THRESHOLD type:kotlin.Int visibility:public/*package*/ flags:final
      FUN FAKE_OVERRIDE name:hash visibility:public/*package*/ modality:FINAL <> (p0:kotlin.Any!) returnType:Int flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:hash visibility:public/*package*/ modality:FINAL <> (p0:kotlin.Any!) returnType:Int flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Any! flags:
      FUN FAKE_OVERRIDE name:tableSizeFor visibility:public/*package*/ modality:FINAL <> (p0:kotlin.Int) returnType:Int flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:tableSizeFor visibility:public/*package*/ modality:FINAL <> (p0:kotlin.Int) returnType:Int flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
      FUN FAKE_OVERRIDE name:comparableClassFor visibility:public/*package*/ modality:OPEN <> (p0:kotlin.Any!) returnType:(java.lang.Class<*>..java.lang.Class<*>?) flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:comparableClassFor visibility:public/*package*/ modality:OPEN <> (p0:kotlin.Any!) returnType:(java.lang.Class<*>..java.lang.Class<*>?) flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Any! flags:
      FUN FAKE_OVERRIDE name:compareComparables visibility:public/*package*/ modality:OPEN <> (p0:java.lang.Class<*>!, p1:kotlin.Any!, p2:kotlin.Any!) returnType:Int flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:compareComparables visibility:public/*package*/ modality:OPEN <> (p0:java.lang.Class<*>!, p1:kotlin.Any!, p2:kotlin.Any!) returnType:Int flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.lang.Class<*>! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Any! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:kotlin.Any! flags:
    CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:HashMap modality:OPEN visibility:public flags:
      $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
      superClasses:
        CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:AbstractMap modality:ABSTRACT visibility:public flags:
        UNBOUND: interface Cloneable
        UNBOUND: interface Serializable
        CLASS IR_EXTERNAL_DECLARATION_STUB INTERFACE name:MutableMap modality:ABSTRACT visibility:public flags:
      TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any!]
      TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance: upperBounds:[kotlin.Any!]
      CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public <> () returnType:java.util.HashMap<K, V> flags:
      CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public <> (p0:(kotlin.collections.MutableMap<out K!, out V!>..kotlin.collections.Map<out K!, V!>?)) returnType:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:(kotlin.collections.MutableMap<out K!, out V!>..kotlin.collections.Map<out K!, V!>?) flags:
      CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public <> (p0:kotlin.Int) returnType:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
      CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public <> (p0:kotlin.Int, p1:kotlin.Float) returnType:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Float flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:readObject visibility:private modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:java.io.ObjectInputStream!) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.io.ObjectInputStream! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:writeObject visibility:private modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:java.io.ObjectOutputStream!) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.io.ObjectOutputStream! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:clear visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>) returnType:Unit flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:clear visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>) returnType:Unit flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:clear visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:clone visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>) returnType:Any flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:clone visibility:protected/*protected and package*/ modality:OPEN <> ($this:java.util.AbstractMap<K, V>) returnType:(kotlin.Any..kotlin.Any?) flags:
          UNBOUND: fun clone(): kotlin.Any
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:compute visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:K, p1:java.util.function.BiFunction<in K, in V?, out V?>) returnType:V? flags:
        overridden:
          FUN FAKE_OVERRIDE name:compute visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K!, V!>, p0:K!, p1:java.util.function.BiFunction<in K!, in V?, out V?>) returnType:V? flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:compute visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:java.util.function.BiFunction<in K, in V?, out V?>) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.function.BiFunction<in K, in V?, out V?> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:computeIfAbsent visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:K, p1:java.util.function.Function<in K, out V>) returnType:V flags:
        overridden:
          FUN FAKE_OVERRIDE name:computeIfAbsent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K!, V!>, p0:K!, p1:java.util.function.Function<in K!, out V!>) returnType:(V..V?) flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:computeIfAbsent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:java.util.function.Function<in K, out V>) returnType:V flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.function.Function<in K, out V> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:computeIfPresent visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:K, p1:java.util.function.BiFunction<in K, in V, out V?>) returnType:V? flags:
        overridden:
          FUN FAKE_OVERRIDE name:computeIfPresent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K!, V!>, p0:K!, p1:java.util.function.BiFunction<in K!, in V, out V?>) returnType:V? flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:computeIfPresent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:java.util.function.BiFunction<in K, in V, out V?>) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.function.BiFunction<in K, in V, out V?> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:containsKey visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, key:K) returnType:Boolean flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:containsKey visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>, key:K!) returnType:Boolean flags:
          FUN FAKE_OVERRIDE name:containsKey visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>, key:K) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:containsValue visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, value:V) returnType:Boolean flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:containsValue visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>, value:V!) returnType:Boolean flags:
          FUN FAKE_OVERRIDE name:containsValue visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>, value:V) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:value index:0 type:V flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:forEach visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:java.util.function.BiConsumer<in K, in V>) returnType:Unit flags:
        overridden:
          FUN FAKE_OVERRIDE name:forEach visibility:public modality:OPEN <> ($this:kotlin.collections.Map<K!, V!>, p0:java.util.function.BiConsumer<in K!, in V!>) returnType:Unit flags:
          FUN FAKE_OVERRIDE name:forEach visibility:public modality:OPEN <> ($this:kotlin.collections.Map<K, V>, p0:java.util.function.BiConsumer<in K, in V>) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.BiConsumer<in K, in V> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:get visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, key:K) returnType:V? flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:get visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>, key:K!) returnType:V? flags:
          FUN FAKE_OVERRIDE name:get visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>, key:K) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:getOrDefault visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, key:K, defaultValue:V) returnType:V flags:
        overridden:
          FUN FAKE_OVERRIDE name:getOrDefault visibility:public modality:OPEN <> ($this:kotlin.collections.Map<K!, V!>, key:K!, defaultValue:V!) returnType:(V..V?) flags:
          FUN FAKE_OVERRIDE name:getOrDefault visibility:public modality:OPEN <> ($this:kotlin.collections.Map<K, V>, key:K, defaultValue:V) returnType:V flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:defaultValue index:1 type:V flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:isEmpty visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>) returnType:Boolean flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:isEmpty visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>) returnType:Boolean flags:
          FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:merge visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:K, p1:V, p2:java.util.function.BiFunction<in V, in V, out V?>) returnType:V? flags:
        overridden:
          FUN FAKE_OVERRIDE name:merge visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K!, V!>, p0:K!, p1:V, p2:java.util.function.BiFunction<in V, in V, out V?>) returnType:V? flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:merge visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:V, p2:java.util.function.BiFunction<in V, in V, out V?>) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:V flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:java.util.function.BiFunction<in V, in V, out V?> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:put visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, key:K, value:V) returnType:V? flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:put visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>, key:K!, value:V!) returnType:V? flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:put visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>, key:K, value:V) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:value index:1 type:V flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:putAll visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, from:kotlin.collections.Map<out K, V>) returnType:Unit flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:putAll visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>, from:kotlin.collections.Map<out K!, V!>) returnType:Unit flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:putAll visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>, from:kotlin.collections.Map<out K, V>) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:from index:0 type:kotlin.collections.Map<out K, V> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:putIfAbsent visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:K, p1:V) returnType:V? flags:
        overridden:
          FUN FAKE_OVERRIDE name:putIfAbsent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K!, V!>, p0:K!, p1:V!) returnType:V? flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:putIfAbsent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:V) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:V flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, key:K) returnType:V? flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>, key:K!) returnType:V? flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>, key:K) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, key:K, value:V) returnType:Boolean flags:
        overridden:
          FUN FAKE_OVERRIDE name:remove visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K!, V!>, key:K!, value:V!) returnType:Boolean flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, key:K, value:V) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:value index:1 type:V flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:replace visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:K, p1:V) returnType:V? flags:
        overridden:
          FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K!, V!>, p0:K!, p1:V!) returnType:V? flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:replace visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:V) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:V flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:replace visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:K, p1:V, p2:V) returnType:Boolean flags:
        overridden:
          FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K!, V!>, p0:K!, p1:V!, p2:V!) returnType:Boolean flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:replace visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:V, p2:V) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:V flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:V flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:replaceAll visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:java.util.function.BiFunction<in K, in V, out V>) returnType:Unit flags:
        overridden:
          FUN FAKE_OVERRIDE name:replaceAll visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K!, V!>, p0:java.util.function.BiFunction<in K!, in V!, out V!>) returnType:Unit flags:
          FUN IR_EXTERNAL_DECLARATION_STUB name:replaceAll visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:java.util.function.BiFunction<in K, in V, out V>) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.BiFunction<in K, in V, out V> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:entries type:kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<K, V>> visibility:public modality:OPEN flags:val
        FUN IR_EXTERNAL_DECLARATION_STUB name:<get-entries> visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>) returnType:(kotlin.collections.MutableSet<(kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?)>..kotlin.collections.Set<(kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?)>?) flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:<get-entries> visibility:public modality:ABSTRACT <> ($this:java.util.AbstractMap<K, V>) returnType:(kotlin.collections.MutableSet<(kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?)>..kotlin.collections.Set<(kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?)>?) flags:
            FUN IR_EXTERNAL_DECLARATION_STUB name:<get-entries> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>) returnType:MutableSet<MutableEntry<K, V>> flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:keys type:kotlin.collections.MutableSet<K> visibility:public modality:OPEN flags:val
        FUN IR_EXTERNAL_DECLARATION_STUB name:<get-keys> visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>) returnType:(kotlin.collections.MutableSet<(K..K?)>..kotlin.collections.Set<(K..K?)>?) flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:<get-keys> visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>) returnType:(kotlin.collections.MutableSet<(K..K?)>..kotlin.collections.Set<(K..K?)>?) flags:
            FUN IR_EXTERNAL_DECLARATION_STUB name:<get-keys> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>) returnType:MutableSet<K> flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:size type:kotlin.Int visibility:public modality:OPEN flags:val
        FUN IR_EXTERNAL_DECLARATION_STUB name:<get-size> visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>) returnType:Int flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:<get-size> visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>) returnType:Int flags:
            FUN FAKE_OVERRIDE name:<get-size> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>) returnType:Int flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:values type:kotlin.collections.MutableCollection<V> visibility:public modality:OPEN flags:val
        FUN IR_EXTERNAL_DECLARATION_STUB name:<get-values> visibility:public modality:OPEN <> ($this:java.util.HashMap<K, V>) returnType:(kotlin.collections.MutableCollection<(V..V?)>..kotlin.collections.Collection<(V..V?)>?) flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:<get-values> visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>) returnType:(kotlin.collections.MutableCollection<(V..V?)>..kotlin.collections.Collection<(V..V?)>?) flags:
            FUN IR_EXTERNAL_DECLARATION_STUB name:<get-values> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>) returnType:MutableCollection<V> flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K!, V!>, other:kotlin.Any?) returnType:Boolean flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:equals visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>, other:kotlin.Any?) returnType:Boolean flags:
          UNBOUND: fun equals(other: kotlin.Any?): kotlin.Boolean
          UNBOUND: fun equals(other: kotlin.Any?): kotlin.Boolean
          FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K!, V!>) returnType:Int flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:hashCode visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>) returnType:Int flags:
          UNBOUND: fun hashCode(): kotlin.Int
          UNBOUND: fun hashCode(): kotlin.Int
          FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K!, V!> flags:
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K!, V!>) returnType:String flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:toString visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>) returnType:String flags:
          UNBOUND: fun toString(): kotlin.String
          UNBOUND: fun toString(): kotlin.String
          FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K!, V!> flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:HashIterator modality:ABSTRACT visibility:public/*package*/ flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.HashIterator flags:
        superClasses:
          CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:Any modality:OPEN visibility:public flags:
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public/*package*/ <> ($this:java.util.HashMap<K, V>) returnType:java.util.HashMap<K, V>.HashIterator flags:
          $outer: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.HashIterator) returnType:Unit flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.HashIterator flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:hasNext visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.HashIterator) returnType:Boolean flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.HashIterator flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:nextNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K, V>.HashIterator) returnType:(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?) flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.HashIterator flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:index type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:index type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:EntrySpliterator modality:FINAL visibility:public/*package*/ flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.EntrySpliterator<K, V> flags:
        superClasses:
          CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:HashMapSpliterator modality:OPEN visibility:public/*package*/ flags:
          UNBOUND: interface Spliterator<T : kotlin.Any!>
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any!]
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance: upperBounds:[kotlin.Any!]
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public/*package*/ <> (p0:java.util.HashMap<K!, V!>!, p1:kotlin.Int, p2:kotlin.Int, p3:kotlin.Int, p4:kotlin.Int) returnType:java.util.HashMap.EntrySpliterator<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.HashMap<K!, V!>! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Int flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:kotlin.Int flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p3 index:3 type:kotlin.Int flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p4 index:4 type:kotlin.Int flags:
        FUN FAKE_OVERRIDE name:estimateSize visibility:public modality:FINAL <> ($this:java.util.HashMap.HashMapSpliterator<K!, V!>) returnType:Long flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:estimateSize visibility:public modality:FINAL <> ($this:java.util.HashMap.HashMapSpliterator<K, V>) returnType:Long flags:
            UNBOUND: fun estimateSize(): kotlin.Long
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.HashMapSpliterator<K!, V!> flags:
        FUN FAKE_OVERRIDE name:getComparator visibility:public modality:OPEN <> ($this:java.util.Spliterator<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:(java.util.Comparator<in (kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?)>..java.util.Comparator<in (kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?)>?) flags:
          overridden:
            UNBOUND: fun getComparator(): java.util.Comparator<in T!>!
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.Spliterator<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:getExactSizeIfKnown visibility:public modality:OPEN <> ($this:java.util.Spliterator<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:Long flags:
          overridden:
            UNBOUND: fun getExactSizeIfKnown(): kotlin.Long
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.Spliterator<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:hasCharacteristics visibility:public modality:OPEN <> ($this:java.util.Spliterator<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>, p0:kotlin.Int) returnType:Boolean flags:
          overridden:
            UNBOUND: fun hasCharacteristics(p0: kotlin.Int): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.Spliterator<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:characteristics visibility:public modality:OPEN <> ($this:java.util.HashMap.EntrySpliterator<K, V>) returnType:Int flags:
          overridden:
            UNBOUND: fun characteristics(): kotlin.Int
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.EntrySpliterator<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:forEachRemaining visibility:public modality:OPEN <> ($this:java.util.HashMap.EntrySpliterator<K, V>, p0:java.util.function.Consumer<in kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>!) returnType:Unit flags:
          overridden:
            UNBOUND: fun forEachRemaining(p0: java.util.function.Consumer<in T!>!): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.EntrySpliterator<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Consumer<in kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:tryAdvance visibility:public modality:OPEN <> ($this:java.util.HashMap.EntrySpliterator<K, V>, p0:java.util.function.Consumer<in kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>!) returnType:Boolean flags:
          overridden:
            UNBOUND: fun tryAdvance(p0: java.util.function.Consumer<in T!>!): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.EntrySpliterator<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Consumer<in kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:trySplit visibility:public modality:OPEN <> ($this:java.util.HashMap.EntrySpliterator<K, V>) returnType:(java.util.HashMap.EntrySpliterator<(K..K?), (V..V?)>..java.util.HashMap.EntrySpliterator<(K..K?), (V..V?)>?) flags:
          overridden:
            UNBOUND: fun trySplit(): java.util.Spliterator<T!>!
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.EntrySpliterator<K, V> flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
            UNBOUND: fun equals(other: kotlin.Any?): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
          overridden:
            FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
            UNBOUND: fun hashCode(): kotlin.Int
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
          overridden:
            FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
            UNBOUND: fun toString(): kotlin.String
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:getFence visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap.HashMapSpliterator<K!, V!>) returnType:Int flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:getFence visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap.HashMapSpliterator<K, V>) returnType:Int flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.HashMapSpliterator<K!, V!> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:map type:java.util.HashMap<K!, V!>! visibility:public/*package*/ modality:FINAL flags:val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:map type:java.util.HashMap<K!, V!>! visibility:public/*package*/ flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:est type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:est type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:fence type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:fence type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:index type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:index type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:CONCURRENT type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:CONCURRENT type:kotlin.Int visibility:public flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:DISTINCT type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:DISTINCT type:kotlin.Int visibility:public flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:IMMUTABLE type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:IMMUTABLE type:kotlin.Int visibility:public flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:NONNULL type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:NONNULL type:kotlin.Int visibility:public flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:ORDERED type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:ORDERED type:kotlin.Int visibility:public flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:SIZED type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:SIZED type:kotlin.Int visibility:public flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:SORTED type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:SORTED type:kotlin.Int visibility:public flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:SUBSIZED type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:SUBSIZED type:kotlin.Int visibility:public flags:final
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:KeySpliterator modality:FINAL visibility:public/*package*/ flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.KeySpliterator<K, V> flags:
        superClasses:
          CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:HashMapSpliterator modality:OPEN visibility:public/*package*/ flags:
          UNBOUND: interface Spliterator<T : kotlin.Any!>
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any!]
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance: upperBounds:[kotlin.Any!]
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public/*package*/ <> (p0:java.util.HashMap<K!, V!>!, p1:kotlin.Int, p2:kotlin.Int, p3:kotlin.Int, p4:kotlin.Int) returnType:java.util.HashMap.KeySpliterator<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.HashMap<K!, V!>! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Int flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:kotlin.Int flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p3 index:3 type:kotlin.Int flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p4 index:4 type:kotlin.Int flags:
        FUN FAKE_OVERRIDE name:estimateSize visibility:public modality:FINAL <> ($this:java.util.HashMap.HashMapSpliterator<K!, V!>) returnType:Long flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:estimateSize visibility:public modality:FINAL <> ($this:java.util.HashMap.HashMapSpliterator<K, V>) returnType:Long flags:
            UNBOUND: fun estimateSize(): kotlin.Long
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.HashMapSpliterator<K!, V!> flags:
        FUN FAKE_OVERRIDE name:getComparator visibility:public modality:OPEN <> ($this:java.util.Spliterator<K!>) returnType:(java.util.Comparator<in (K..K?)>..java.util.Comparator<in (K..K?)>?) flags:
          overridden:
            UNBOUND: fun getComparator(): java.util.Comparator<in T!>!
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.Spliterator<K!> flags:
        FUN FAKE_OVERRIDE name:getExactSizeIfKnown visibility:public modality:OPEN <> ($this:java.util.Spliterator<K!>) returnType:Long flags:
          overridden:
            UNBOUND: fun getExactSizeIfKnown(): kotlin.Long
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.Spliterator<K!> flags:
        FUN FAKE_OVERRIDE name:hasCharacteristics visibility:public modality:OPEN <> ($this:java.util.Spliterator<K!>, p0:kotlin.Int) returnType:Boolean flags:
          overridden:
            UNBOUND: fun hasCharacteristics(p0: kotlin.Int): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.Spliterator<K!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:characteristics visibility:public modality:OPEN <> ($this:java.util.HashMap.KeySpliterator<K, V>) returnType:Int flags:
          overridden:
            UNBOUND: fun characteristics(): kotlin.Int
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.KeySpliterator<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:forEachRemaining visibility:public modality:OPEN <> ($this:java.util.HashMap.KeySpliterator<K, V>, p0:java.util.function.Consumer<in K!>!) returnType:Unit flags:
          overridden:
            UNBOUND: fun forEachRemaining(p0: java.util.function.Consumer<in T!>!): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.KeySpliterator<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Consumer<in K!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:tryAdvance visibility:public modality:OPEN <> ($this:java.util.HashMap.KeySpliterator<K, V>, p0:java.util.function.Consumer<in K!>!) returnType:Boolean flags:
          overridden:
            UNBOUND: fun tryAdvance(p0: java.util.function.Consumer<in T!>!): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.KeySpliterator<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Consumer<in K!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:trySplit visibility:public modality:OPEN <> ($this:java.util.HashMap.KeySpliterator<K, V>) returnType:(java.util.HashMap.KeySpliterator<(K..K?), (V..V?)>..java.util.HashMap.KeySpliterator<(K..K?), (V..V?)>?) flags:
          overridden:
            UNBOUND: fun trySplit(): java.util.Spliterator<T!>!
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.KeySpliterator<K, V> flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
            UNBOUND: fun equals(other: kotlin.Any?): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
          overridden:
            FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
            UNBOUND: fun hashCode(): kotlin.Int
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
          overridden:
            FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
            UNBOUND: fun toString(): kotlin.String
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:getFence visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap.HashMapSpliterator<K!, V!>) returnType:Int flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:getFence visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap.HashMapSpliterator<K, V>) returnType:Int flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.HashMapSpliterator<K!, V!> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:map type:java.util.HashMap<K!, V!>! visibility:public/*package*/ modality:FINAL flags:val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:map type:java.util.HashMap<K!, V!>! visibility:public/*package*/ flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:est type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:est type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:fence type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:fence type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:index type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:index type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:CONCURRENT type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:CONCURRENT type:kotlin.Int visibility:public flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:DISTINCT type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:DISTINCT type:kotlin.Int visibility:public flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:IMMUTABLE type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:IMMUTABLE type:kotlin.Int visibility:public flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:NONNULL type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:NONNULL type:kotlin.Int visibility:public flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:ORDERED type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:ORDERED type:kotlin.Int visibility:public flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:SIZED type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:SIZED type:kotlin.Int visibility:public flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:SORTED type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:SORTED type:kotlin.Int visibility:public flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:SUBSIZED type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:SUBSIZED type:kotlin.Int visibility:public flags:final
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:TreeNode modality:FINAL visibility:public/*package*/ flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.TreeNode<K, V> flags:
        superClasses:
          CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:Entry modality:OPEN visibility:public/*package*/ flags:
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any!]
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance: upperBounds:[kotlin.Any!]
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public/*package*/ <> (p0:kotlin.Int, p1:K!, p2:V!, p3:java.util.HashMap.Node<K!, V!>!) returnType:java.util.HashMap.TreeNode<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:K! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:V! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p3 index:3 type:java.util.HashMap.Node<K!, V!>! flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K!, V!>, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            FUN FAKE_OVERRIDE name:equals visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K!, V!>, other:kotlin.Any?) returnType:Boolean flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.Node<K!, V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K!, V!>) returnType:Int flags:
          overridden:
            FUN FAKE_OVERRIDE name:hashCode visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K!, V!>) returnType:Int flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.Node<K!, V!> flags:
        FUN FAKE_OVERRIDE name:setValue visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K!, V!>, newValue:V!) returnType:(V..V?) flags:
          overridden:
            FUN FAKE_OVERRIDE name:setValue visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K!, V!>, newValue:V!) returnType:(V..V?) flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.Node<K!, V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:newValue index:0 type:V! flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K!, V!>) returnType:String flags:
          overridden:
            FUN FAKE_OVERRIDE name:toString visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K!, V!>) returnType:String flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.Node<K!, V!> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:key type:K! visibility:public modality:FINAL flags:val
          FUN FAKE_OVERRIDE name:<get-key> visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K!, V!>) returnType:(K..K?) flags:
            overridden:
              FUN FAKE_OVERRIDE name:<get-key> visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K!, V!>) returnType:(K..K?) flags:
            $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.Node<K!, V!> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:value type:V! visibility:public modality:FINAL flags:val
          FUN FAKE_OVERRIDE name:<get-value> visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K!, V!>) returnType:(V..V?) flags:
            overridden:
              FUN FAKE_OVERRIDE name:<get-value> visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K!, V!>) returnType:(V..V?) flags:
            $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.Node<K!, V!> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:find visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap.TreeNode<K, V>, p0:kotlin.Int, p1:kotlin.Any!, p2:java.lang.Class<*>!) returnType:(java.util.HashMap.TreeNode<(K..K?), (V..V?)>..java.util.HashMap.TreeNode<(K..K?), (V..V?)>?) flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.TreeNode<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Any! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:java.lang.Class<*>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:getTreeNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap.TreeNode<K, V>, p0:kotlin.Int, p1:kotlin.Any!) returnType:(java.util.HashMap.TreeNode<(K..K?), (V..V?)>..java.util.HashMap.TreeNode<(K..K?), (V..V?)>?) flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.TreeNode<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Any! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:putTreeVal visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap.TreeNode<K, V>, p0:java.util.HashMap<K!, V!>!, p1:kotlin.Array<(out) java.util.HashMap.Node<K!, V!>!>!, p2:kotlin.Int, p3:K!, p4:V!) returnType:(java.util.HashMap.TreeNode<(K..K?), (V..V?)>..java.util.HashMap.TreeNode<(K..K?), (V..V?)>?) flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.TreeNode<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.HashMap<K!, V!>! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Array<(out) java.util.HashMap.Node<K!, V!>!>! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:kotlin.Int flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p3 index:3 type:K! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p4 index:4 type:V! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:removeTreeNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap.TreeNode<K, V>, p0:java.util.HashMap<K!, V!>!, p1:kotlin.Array<(out) java.util.HashMap.Node<K!, V!>!>!, p2:kotlin.Boolean) returnType:Unit flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.TreeNode<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.HashMap<K!, V!>! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Array<(out) java.util.HashMap.Node<K!, V!>!>! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:kotlin.Boolean flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:root visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap.TreeNode<K, V>) returnType:(java.util.HashMap.TreeNode<(K..K?), (V..V?)>..java.util.HashMap.TreeNode<(K..K?), (V..V?)>?) flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.TreeNode<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:split visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap.TreeNode<K, V>, p0:java.util.HashMap<K!, V!>!, p1:kotlin.Array<(out) java.util.HashMap.Node<K!, V!>!>!, p2:kotlin.Int, p3:kotlin.Int) returnType:Unit flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.TreeNode<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.HashMap<K!, V!>! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Array<(out) java.util.HashMap.Node<K!, V!>!>! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:kotlin.Int flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p3 index:3 type:kotlin.Int flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:treeify visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap.TreeNode<K, V>, p0:kotlin.Array<(out) java.util.HashMap.Node<K!, V!>!>!) returnType:Unit flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.TreeNode<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Array<(out) java.util.HashMap.Node<K!, V!>!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:untreeify visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap.TreeNode<K, V>, p0:java.util.HashMap<K!, V!>!) returnType:(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?) flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.TreeNode<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.HashMap<K!, V!>! flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:hash type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:hash type:kotlin.Int visibility:public/*package*/ flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:key type:K! visibility:public/*package*/ modality:FINAL flags:val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:key type:K! visibility:public/*package*/ flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:after type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:after type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:before type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:before type:java.util.LinkedHashMap.Entry<K!, V!>! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:value type:V! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:value type:V! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:left type:java.util.HashMap.TreeNode<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:left type:java.util.HashMap.TreeNode<K!, V!>! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:parent type:java.util.HashMap.TreeNode<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:parent type:java.util.HashMap.TreeNode<K!, V!>! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:prev type:java.util.HashMap.TreeNode<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:prev type:java.util.HashMap.TreeNode<K!, V!>! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:red type:kotlin.Boolean visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:red type:kotlin.Boolean visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:right type:java.util.HashMap.TreeNode<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:right type:java.util.HashMap.TreeNode<K!, V!>! visibility:public/*package*/ flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:balanceDeletion visibility:public/*package*/ modality:OPEN <K, V> (p0:java.util.HashMap.TreeNode<K!, V!>!, p1:java.util.HashMap.TreeNode<K!, V!>!) returnType:(java.util.HashMap.TreeNode<(K..K?), (V..V?)>..java.util.HashMap.TreeNode<(K..K?), (V..V?)>?) flags:
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any!]
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance: upperBounds:[kotlin.Any!]
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.HashMap.TreeNode<K!, V!>! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.HashMap.TreeNode<K!, V!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:balanceInsertion visibility:public/*package*/ modality:OPEN <K, V> (p0:java.util.HashMap.TreeNode<K!, V!>!, p1:java.util.HashMap.TreeNode<K!, V!>!) returnType:(java.util.HashMap.TreeNode<(K..K?), (V..V?)>..java.util.HashMap.TreeNode<(K..K?), (V..V?)>?) flags:
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any!]
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance: upperBounds:[kotlin.Any!]
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.HashMap.TreeNode<K!, V!>! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.HashMap.TreeNode<K!, V!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:checkInvariants visibility:public/*package*/ modality:OPEN <K, V> (p0:java.util.HashMap.TreeNode<K!, V!>!) returnType:Boolean flags:
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any!]
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance: upperBounds:[kotlin.Any!]
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.HashMap.TreeNode<K!, V!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:moveRootToFront visibility:public/*package*/ modality:OPEN <K, V> (p0:kotlin.Array<(out) java.util.HashMap.Node<K!, V!>!>!, p1:java.util.HashMap.TreeNode<K!, V!>!) returnType:Unit flags:
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any!]
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance: upperBounds:[kotlin.Any!]
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Array<(out) java.util.HashMap.Node<K!, V!>!>! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.HashMap.TreeNode<K!, V!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:rotateLeft visibility:public/*package*/ modality:OPEN <K, V> (p0:java.util.HashMap.TreeNode<K!, V!>!, p1:java.util.HashMap.TreeNode<K!, V!>!) returnType:(java.util.HashMap.TreeNode<(K..K?), (V..V?)>..java.util.HashMap.TreeNode<(K..K?), (V..V?)>?) flags:
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any!]
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance: upperBounds:[kotlin.Any!]
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.HashMap.TreeNode<K!, V!>! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.HashMap.TreeNode<K!, V!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:rotateRight visibility:public/*package*/ modality:OPEN <K, V> (p0:java.util.HashMap.TreeNode<K!, V!>!, p1:java.util.HashMap.TreeNode<K!, V!>!) returnType:(java.util.HashMap.TreeNode<(K..K?), (V..V?)>..java.util.HashMap.TreeNode<(K..K?), (V..V?)>?) flags:
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any!]
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance: upperBounds:[kotlin.Any!]
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.HashMap.TreeNode<K!, V!>! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.HashMap.TreeNode<K!, V!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:tieBreakOrder visibility:public/*package*/ modality:OPEN <> (p0:kotlin.Any!, p1:kotlin.Any!) returnType:Int flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Any! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Any! flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:ValueSpliterator modality:FINAL visibility:public/*package*/ flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.ValueSpliterator<K, V> flags:
        superClasses:
          CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:HashMapSpliterator modality:OPEN visibility:public/*package*/ flags:
          UNBOUND: interface Spliterator<T : kotlin.Any!>
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any!]
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance: upperBounds:[kotlin.Any!]
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public/*package*/ <> (p0:java.util.HashMap<K!, V!>!, p1:kotlin.Int, p2:kotlin.Int, p3:kotlin.Int, p4:kotlin.Int) returnType:java.util.HashMap.ValueSpliterator<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.HashMap<K!, V!>! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Int flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:kotlin.Int flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p3 index:3 type:kotlin.Int flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p4 index:4 type:kotlin.Int flags:
        FUN FAKE_OVERRIDE name:estimateSize visibility:public modality:FINAL <> ($this:java.util.HashMap.HashMapSpliterator<K!, V!>) returnType:Long flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:estimateSize visibility:public modality:FINAL <> ($this:java.util.HashMap.HashMapSpliterator<K, V>) returnType:Long flags:
            UNBOUND: fun estimateSize(): kotlin.Long
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.HashMapSpliterator<K!, V!> flags:
        FUN FAKE_OVERRIDE name:getComparator visibility:public modality:OPEN <> ($this:java.util.Spliterator<V!>) returnType:(java.util.Comparator<in (V..V?)>..java.util.Comparator<in (V..V?)>?) flags:
          overridden:
            UNBOUND: fun getComparator(): java.util.Comparator<in T!>!
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.Spliterator<V!> flags:
        FUN FAKE_OVERRIDE name:getExactSizeIfKnown visibility:public modality:OPEN <> ($this:java.util.Spliterator<V!>) returnType:Long flags:
          overridden:
            UNBOUND: fun getExactSizeIfKnown(): kotlin.Long
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.Spliterator<V!> flags:
        FUN FAKE_OVERRIDE name:hasCharacteristics visibility:public modality:OPEN <> ($this:java.util.Spliterator<V!>, p0:kotlin.Int) returnType:Boolean flags:
          overridden:
            UNBOUND: fun hasCharacteristics(p0: kotlin.Int): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.Spliterator<V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:characteristics visibility:public modality:OPEN <> ($this:java.util.HashMap.ValueSpliterator<K, V>) returnType:Int flags:
          overridden:
            UNBOUND: fun characteristics(): kotlin.Int
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.ValueSpliterator<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:forEachRemaining visibility:public modality:OPEN <> ($this:java.util.HashMap.ValueSpliterator<K, V>, p0:java.util.function.Consumer<in V!>!) returnType:Unit flags:
          overridden:
            UNBOUND: fun forEachRemaining(p0: java.util.function.Consumer<in T!>!): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.ValueSpliterator<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Consumer<in V!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:tryAdvance visibility:public modality:OPEN <> ($this:java.util.HashMap.ValueSpliterator<K, V>, p0:java.util.function.Consumer<in V!>!) returnType:Boolean flags:
          overridden:
            UNBOUND: fun tryAdvance(p0: java.util.function.Consumer<in T!>!): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.ValueSpliterator<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Consumer<in V!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:trySplit visibility:public modality:OPEN <> ($this:java.util.HashMap.ValueSpliterator<K, V>) returnType:(java.util.HashMap.ValueSpliterator<(K..K?), (V..V?)>..java.util.HashMap.ValueSpliterator<(K..K?), (V..V?)>?) flags:
          overridden:
            UNBOUND: fun trySplit(): java.util.Spliterator<T!>!
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.ValueSpliterator<K, V> flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
            UNBOUND: fun equals(other: kotlin.Any?): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
          overridden:
            FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
            UNBOUND: fun hashCode(): kotlin.Int
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
          overridden:
            FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
            UNBOUND: fun toString(): kotlin.String
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:getFence visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap.HashMapSpliterator<K!, V!>) returnType:Int flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:getFence visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap.HashMapSpliterator<K, V>) returnType:Int flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.HashMapSpliterator<K!, V!> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:map type:java.util.HashMap<K!, V!>! visibility:public/*package*/ modality:FINAL flags:val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:map type:java.util.HashMap<K!, V!>! visibility:public/*package*/ flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:est type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:est type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:fence type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:fence type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:index type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:index type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:CONCURRENT type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:CONCURRENT type:kotlin.Int visibility:public flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:DISTINCT type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:DISTINCT type:kotlin.Int visibility:public flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:IMMUTABLE type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:IMMUTABLE type:kotlin.Int visibility:public flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:NONNULL type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:NONNULL type:kotlin.Int visibility:public flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:ORDERED type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:ORDERED type:kotlin.Int visibility:public flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:SIZED type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:SIZED type:kotlin.Int visibility:public flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:SORTED type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:SORTED type:kotlin.Int visibility:public flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:SUBSIZED type:kotlin.Int visibility:public modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:SUBSIZED type:kotlin.Int visibility:public flags:final
      FUN IR_EXTERNAL_DECLARATION_STUB name:capacity visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K, V>) returnType:Int flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:getNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K, V>, p0:kotlin.Int, p1:kotlin.Any!) returnType:(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?) flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Any! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:loadFactor visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K, V>) returnType:Float flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:putMapEntries visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K, V>, p0:(kotlin.collections.MutableMap<out K!, out V!>..kotlin.collections.Map<out K!, V!>?), p1:kotlin.Boolean) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:(kotlin.collections.MutableMap<out K!, out V!>..kotlin.collections.Map<out K!, V!>?) flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Boolean flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:putVal visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K, V>, p0:kotlin.Int, p1:K!, p2:V!, p3:kotlin.Boolean, p4:kotlin.Boolean) returnType:(V..V?) flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:K! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:V! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p3 index:3 type:kotlin.Boolean flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p4 index:4 type:kotlin.Boolean flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:removeNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K, V>, p0:kotlin.Int, p1:kotlin.Any!, p2:kotlin.Any!, p3:kotlin.Boolean, p4:kotlin.Boolean) returnType:(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?) flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Any! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:kotlin.Any! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p3 index:3 type:kotlin.Boolean flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p4 index:4 type:kotlin.Boolean flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:resize visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K, V>) returnType:(kotlin.Array<(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?)>..kotlin.Array<out (java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?)>?) flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:treeifyBin visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K, V>, p0:kotlin.Array<(out) java.util.HashMap.Node<K!, V!>!>!, p1:kotlin.Int) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Array<(out) java.util.HashMap.Node<K!, V!>!>! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Int flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:EntryIterator modality:FINAL visibility:public/*package*/ flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.EntryIterator flags:
        superClasses:
          CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:HashIterator modality:ABSTRACT visibility:public/*package*/ flags:
          UNBOUND: interface MutableIterator<out T> : kotlin.collections.Iterator<T>
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public/*package*/ <> ($this:java.util.HashMap<K, V>) returnType:java.util.HashMap<K, V>.EntryIterator flags:
          $outer: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:next visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.EntryIterator) returnType:(kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?) flags:
          overridden:
            UNBOUND: fun next(): T
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.EntryIterator flags:
        FUN FAKE_OVERRIDE name:hasNext visibility:public modality:FINAL <> ($this:java.util.HashMap<K!, V!>.HashIterator) returnType:Boolean flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:hasNext visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.HashIterator) returnType:Boolean flags:
            UNBOUND: fun hasNext(): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!>.HashIterator flags:
        FUN FAKE_OVERRIDE name:remove visibility:public modality:FINAL <> ($this:java.util.HashMap<K!, V!>.HashIterator) returnType:Unit flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.HashIterator) returnType:Unit flags:
            UNBOUND: fun remove(): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!>.HashIterator flags:
        FUN FAKE_OVERRIDE name:forEachRemaining visibility:public modality:OPEN <> ($this:kotlin.collections.Iterator<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>, p0:java.util.function.Consumer<in kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:Unit flags:
          overridden:
            UNBOUND: fun forEachRemaining(p0: java.util.function.Consumer<in T>): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Iterator<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Consumer<in kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
            UNBOUND: fun equals(other: kotlin.Any?): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
          overridden:
            FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
            UNBOUND: fun hashCode(): kotlin.Int
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
          overridden:
            FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
            UNBOUND: fun toString(): kotlin.String
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:nextNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K!, V!>.HashIterator) returnType:(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?) flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:nextNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K, V>.HashIterator) returnType:(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?) flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!>.HashIterator flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:index type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:index type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:EntrySet modality:FINAL visibility:public/*package*/ flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.EntrySet flags:
        superClasses:
          UNBOUND: class AbstractSet<E : kotlin.Any!> : java.util.AbstractCollection<E!>, kotlin.collections.MutableSet<E!>
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public/*package*/ <> ($this:java.util.HashMap<K, V>) returnType:java.util.HashMap<K, V>.EntrySet flags:
          $outer: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:clear visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.EntrySet) returnType:Unit flags:
          overridden:
            UNBOUND: fun clear(): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.EntrySet flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:contains visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.EntrySet, element:kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!) returnType:Boolean flags:
          overridden:
            UNBOUND: fun contains(element: E!): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.EntrySet flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:element index:0 type:kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:forEach visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.EntrySet, p0:java.util.function.Consumer<in kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>!) returnType:Unit flags:
          overridden:
            UNBOUND: fun forEach(p0: java.util.function.Consumer<in E!>!): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.EntrySet flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Consumer<in kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:iterator visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.EntrySet) returnType:MutableIterator<(kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?)> flags:
          overridden:
            UNBOUND: fun iterator(): kotlin.collections.MutableIterator<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.EntrySet flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.EntrySet, element:kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!) returnType:Boolean flags:
          overridden:
            UNBOUND: fun remove(element: E!): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.EntrySet flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:element index:0 type:kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:spliterator visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.EntrySet) returnType:Spliterator<(kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?)> flags:
          overridden:
            UNBOUND: fun spliterator(): java.util.Spliterator<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.EntrySet flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:size type:kotlin.Int visibility:public modality:FINAL flags:val
          FUN IR_EXTERNAL_DECLARATION_STUB name:<get-size> visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.EntrySet) returnType:Int flags:
            overridden:
              UNBOUND: fun <get-size>(): kotlin.Int
            $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.EntrySet flags:
        FUN FAKE_OVERRIDE name:toArray visibility:public modality:OPEN <T> ($this:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>, p0:kotlin.Array<(out) T!>!) returnType:(kotlin.Array<(T..T?)>..kotlin.Array<out (T..T?)>?) flags:
          overridden:
            UNBOUND: fun <T : kotlin.Any!> toArray(p0: kotlin.Array<(out) T!>!): kotlin.Array<(out) T!>!
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:T index:0 variance: upperBounds:[kotlin.Any!]
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Array<(out) T!>! flags:
        FUN FAKE_OVERRIDE name:add visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>, element:kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!) returnType:Boolean flags:
          overridden:
            UNBOUND: fun add(element: E!): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:element index:0 type:kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>! flags:
        FUN FAKE_OVERRIDE name:addAll visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>, elements:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun addAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:containsAll visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>, elements:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun containsAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:java.util.AbstractSet<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            UNBOUND: fun equals(other: kotlin.Any?): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractSet<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:java.util.AbstractSet<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:Int flags:
          overridden:
            UNBOUND: fun hashCode(): kotlin.Int
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractSet<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun isEmpty(): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:parallelStream visibility:public modality:OPEN <> ($this:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:Stream<(kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?)> flags:
          overridden:
            UNBOUND: fun parallelStream(): java.util.stream.Stream<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:removeAll visibility:public modality:OPEN <> ($this:java.util.AbstractSet<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>, elements:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun removeAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractSet<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:removeIf visibility:public modality:OPEN <> ($this:kotlin.collections.MutableCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>, p0:java.util.function.Predicate<in kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun removeIf(p0: java.util.function.Predicate<in E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Predicate<in kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:retainAll visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>, elements:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun retainAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:stream visibility:public modality:OPEN <> ($this:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:Stream<(kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?)> flags:
          overridden:
            UNBOUND: fun stream(): java.util.stream.Stream<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Collection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:toArray visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:(kotlin.Array<(kotlin.Any..kotlin.Any?)>..kotlin.Array<out (kotlin.Any..kotlin.Any?)>?) flags:
          overridden:
            UNBOUND: fun toArray(): kotlin.Array<(out) kotlin.Any!>!
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>) returnType:String flags:
          overridden:
            UNBOUND: fun toString(): kotlin.String
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:MAX_ARRAY_SIZE type:kotlin.Int visibility:invisible_fake modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:MAX_ARRAY_SIZE type:kotlin.Int visibility:invisible_fake flags:final
        FUN FAKE_OVERRIDE name:finishToArray visibility:invisible_fake modality:OPEN <T> (p0:kotlin.Array<(out) T!>!, p1:kotlin.collections.(Mutable)Iterator<*>!) returnType:(kotlin.Array<(T..T?)>..kotlin.Array<out (T..T?)>?) flags:
          overridden:
            UNBOUND: fun <T : kotlin.Any!> finishToArray(p0: kotlin.Array<(out) T!>!, p1: kotlin.collections.(Mutable)Iterator<*>!): kotlin.Array<(out) T!>!
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:T index:0 variance: upperBounds:[kotlin.Any!]
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Array<(out) T!>! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.collections.(Mutable)Iterator<*>! flags:
        FUN FAKE_OVERRIDE name:hugeCapacity visibility:invisible_fake modality:OPEN <> (p0:kotlin.Int) returnType:Int flags:
          overridden:
            UNBOUND: fun hugeCapacity(p0: kotlin.Int): kotlin.Int
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:KeyIterator modality:FINAL visibility:public/*package*/ flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.KeyIterator flags:
        superClasses:
          CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:HashIterator modality:ABSTRACT visibility:public/*package*/ flags:
          UNBOUND: interface MutableIterator<out T> : kotlin.collections.Iterator<T>
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public/*package*/ <> ($this:java.util.HashMap<K, V>) returnType:java.util.HashMap<K, V>.KeyIterator flags:
          $outer: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:next visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.KeyIterator) returnType:(K..K?) flags:
          overridden:
            UNBOUND: fun next(): T
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.KeyIterator flags:
        FUN FAKE_OVERRIDE name:hasNext visibility:public modality:FINAL <> ($this:java.util.HashMap<K!, V!>.HashIterator) returnType:Boolean flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:hasNext visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.HashIterator) returnType:Boolean flags:
            UNBOUND: fun hasNext(): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!>.HashIterator flags:
        FUN FAKE_OVERRIDE name:remove visibility:public modality:FINAL <> ($this:java.util.HashMap<K!, V!>.HashIterator) returnType:Unit flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.HashIterator) returnType:Unit flags:
            UNBOUND: fun remove(): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!>.HashIterator flags:
        FUN FAKE_OVERRIDE name:forEachRemaining visibility:public modality:OPEN <> ($this:kotlin.collections.Iterator<K!>, p0:java.util.function.Consumer<in K!>) returnType:Unit flags:
          overridden:
            UNBOUND: fun forEachRemaining(p0: java.util.function.Consumer<in T>): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Iterator<K!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Consumer<in K!> flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
            UNBOUND: fun equals(other: kotlin.Any?): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
          overridden:
            FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
            UNBOUND: fun hashCode(): kotlin.Int
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
          overridden:
            FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
            UNBOUND: fun toString(): kotlin.String
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:nextNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K!, V!>.HashIterator) returnType:(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?) flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:nextNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K, V>.HashIterator) returnType:(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?) flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!>.HashIterator flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:index type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:index type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:KeySet modality:FINAL visibility:public/*package*/ flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.KeySet flags:
        superClasses:
          UNBOUND: class AbstractSet<E : kotlin.Any!> : java.util.AbstractCollection<E!>, kotlin.collections.MutableSet<E!>
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public/*package*/ <> ($this:java.util.HashMap<K, V>) returnType:java.util.HashMap<K, V>.KeySet flags:
          $outer: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:clear visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.KeySet) returnType:Unit flags:
          overridden:
            UNBOUND: fun clear(): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.KeySet flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:contains visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.KeySet, element:K!) returnType:Boolean flags:
          overridden:
            UNBOUND: fun contains(element: E!): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.KeySet flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:element index:0 type:K! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:forEach visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.KeySet, p0:java.util.function.Consumer<in K!>!) returnType:Unit flags:
          overridden:
            UNBOUND: fun forEach(p0: java.util.function.Consumer<in E!>!): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.KeySet flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Consumer<in K!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:iterator visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.KeySet) returnType:MutableIterator<(K..K?)> flags:
          overridden:
            UNBOUND: fun iterator(): kotlin.collections.MutableIterator<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.KeySet flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.KeySet, element:K!) returnType:Boolean flags:
          overridden:
            UNBOUND: fun remove(element: E!): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.KeySet flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:element index:0 type:K! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:spliterator visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.KeySet) returnType:Spliterator<(K..K?)> flags:
          overridden:
            UNBOUND: fun spliterator(): java.util.Spliterator<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.KeySet flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:size type:kotlin.Int visibility:public modality:FINAL flags:val
          FUN IR_EXTERNAL_DECLARATION_STUB name:<get-size> visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.KeySet) returnType:Int flags:
            overridden:
              UNBOUND: fun <get-size>(): kotlin.Int
            $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.KeySet flags:
        FUN FAKE_OVERRIDE name:toArray visibility:public modality:OPEN <T> ($this:java.util.AbstractCollection<K!>, p0:kotlin.Array<(out) T!>!) returnType:(kotlin.Array<(T..T?)>..kotlin.Array<out (T..T?)>?) flags:
          overridden:
            UNBOUND: fun <T : kotlin.Any!> toArray(p0: kotlin.Array<(out) T!>!): kotlin.Array<(out) T!>!
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:T index:0 variance: upperBounds:[kotlin.Any!]
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<K!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Array<(out) T!>! flags:
        FUN FAKE_OVERRIDE name:add visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<K!>, element:K!) returnType:Boolean flags:
          overridden:
            UNBOUND: fun add(element: E!): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<K!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:element index:0 type:K! flags:
        FUN FAKE_OVERRIDE name:addAll visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<K!>, elements:kotlin.collections.Collection<K!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun addAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<K!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<K!> flags:
        FUN FAKE_OVERRIDE name:containsAll visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<K!>, elements:kotlin.collections.Collection<K!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun containsAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<K!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<K!> flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:java.util.AbstractSet<K!>, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            UNBOUND: fun equals(other: kotlin.Any?): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractSet<K!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:java.util.AbstractSet<K!>) returnType:Int flags:
          overridden:
            UNBOUND: fun hashCode(): kotlin.Int
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractSet<K!> flags:
        FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<K!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun isEmpty(): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<K!> flags:
        FUN FAKE_OVERRIDE name:parallelStream visibility:public modality:OPEN <> ($this:kotlin.collections.Collection<K!>) returnType:Stream<(K..K?)> flags:
          overridden:
            UNBOUND: fun parallelStream(): java.util.stream.Stream<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Collection<K!> flags:
        FUN FAKE_OVERRIDE name:removeAll visibility:public modality:OPEN <> ($this:java.util.AbstractSet<K!>, elements:kotlin.collections.Collection<K!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun removeAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractSet<K!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<K!> flags:
        FUN FAKE_OVERRIDE name:removeIf visibility:public modality:OPEN <> ($this:kotlin.collections.MutableCollection<K!>, p0:java.util.function.Predicate<in K!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun removeIf(p0: java.util.function.Predicate<in E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableCollection<K!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Predicate<in K!> flags:
        FUN FAKE_OVERRIDE name:retainAll visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<K!>, elements:kotlin.collections.Collection<K!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun retainAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<K!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<K!> flags:
        FUN FAKE_OVERRIDE name:stream visibility:public modality:OPEN <> ($this:kotlin.collections.Collection<K!>) returnType:Stream<(K..K?)> flags:
          overridden:
            UNBOUND: fun stream(): java.util.stream.Stream<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Collection<K!> flags:
        FUN FAKE_OVERRIDE name:toArray visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<K!>) returnType:(kotlin.Array<(kotlin.Any..kotlin.Any?)>..kotlin.Array<out (kotlin.Any..kotlin.Any?)>?) flags:
          overridden:
            UNBOUND: fun toArray(): kotlin.Array<(out) kotlin.Any!>!
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<K!> flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<K!>) returnType:String flags:
          overridden:
            UNBOUND: fun toString(): kotlin.String
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<K!> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:MAX_ARRAY_SIZE type:kotlin.Int visibility:invisible_fake modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:MAX_ARRAY_SIZE type:kotlin.Int visibility:invisible_fake flags:final
        FUN FAKE_OVERRIDE name:finishToArray visibility:invisible_fake modality:OPEN <T> (p0:kotlin.Array<(out) T!>!, p1:kotlin.collections.(Mutable)Iterator<*>!) returnType:(kotlin.Array<(T..T?)>..kotlin.Array<out (T..T?)>?) flags:
          overridden:
            UNBOUND: fun <T : kotlin.Any!> finishToArray(p0: kotlin.Array<(out) T!>!, p1: kotlin.collections.(Mutable)Iterator<*>!): kotlin.Array<(out) T!>!
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:T index:0 variance: upperBounds:[kotlin.Any!]
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Array<(out) T!>! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.collections.(Mutable)Iterator<*>! flags:
        FUN FAKE_OVERRIDE name:hugeCapacity visibility:invisible_fake modality:OPEN <> (p0:kotlin.Int) returnType:Int flags:
          overridden:
            UNBOUND: fun hugeCapacity(p0: kotlin.Int): kotlin.Int
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:ValueIterator modality:FINAL visibility:public/*package*/ flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.ValueIterator flags:
        superClasses:
          CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:HashIterator modality:ABSTRACT visibility:public/*package*/ flags:
          UNBOUND: interface MutableIterator<out T> : kotlin.collections.Iterator<T>
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public/*package*/ <> ($this:java.util.HashMap<K, V>) returnType:java.util.HashMap<K, V>.ValueIterator flags:
          $outer: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:next visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.ValueIterator) returnType:(V..V?) flags:
          overridden:
            UNBOUND: fun next(): T
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.ValueIterator flags:
        FUN FAKE_OVERRIDE name:hasNext visibility:public modality:FINAL <> ($this:java.util.HashMap<K!, V!>.HashIterator) returnType:Boolean flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:hasNext visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.HashIterator) returnType:Boolean flags:
            UNBOUND: fun hasNext(): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!>.HashIterator flags:
        FUN FAKE_OVERRIDE name:remove visibility:public modality:FINAL <> ($this:java.util.HashMap<K!, V!>.HashIterator) returnType:Unit flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.HashIterator) returnType:Unit flags:
            UNBOUND: fun remove(): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!>.HashIterator flags:
        FUN FAKE_OVERRIDE name:forEachRemaining visibility:public modality:OPEN <> ($this:kotlin.collections.Iterator<V!>, p0:java.util.function.Consumer<in V!>) returnType:Unit flags:
          overridden:
            UNBOUND: fun forEachRemaining(p0: java.util.function.Consumer<in T>): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Iterator<V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Consumer<in V!> flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
            UNBOUND: fun equals(other: kotlin.Any?): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
          overridden:
            FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
            UNBOUND: fun hashCode(): kotlin.Int
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
          overridden:
            FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
            UNBOUND: fun toString(): kotlin.String
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:nextNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K!, V!>.HashIterator) returnType:(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?) flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:nextNode visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap<K, V>.HashIterator) returnType:(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?) flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K!, V!>.HashIterator flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:index type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:index type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:Values modality:FINAL visibility:public/*package*/ flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.Values flags:
        superClasses:
          UNBOUND: class AbstractCollection<E : kotlin.Any!> : kotlin.collections.MutableCollection<E!>
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public/*package*/ <> ($this:java.util.HashMap<K, V>) returnType:java.util.HashMap<K, V>.Values flags:
          $outer: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:clear visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.Values) returnType:Unit flags:
          overridden:
            UNBOUND: fun clear(): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.Values flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:contains visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.Values, element:V!) returnType:Boolean flags:
          overridden:
            UNBOUND: fun contains(element: E!): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.Values flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:element index:0 type:V! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:forEach visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.Values, p0:java.util.function.Consumer<in V!>!) returnType:Unit flags:
          overridden:
            UNBOUND: fun forEach(p0: java.util.function.Consumer<in E!>!): kotlin.Unit
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.Values flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Consumer<in V!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:iterator visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.Values) returnType:MutableIterator<(V..V?)> flags:
          overridden:
            UNBOUND: fun iterator(): kotlin.collections.MutableIterator<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.Values flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:spliterator visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.Values) returnType:Spliterator<(V..V?)> flags:
          overridden:
            UNBOUND: fun spliterator(): java.util.Spliterator<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.Values flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:size type:kotlin.Int visibility:public modality:FINAL flags:val
          FUN IR_EXTERNAL_DECLARATION_STUB name:<get-size> visibility:public modality:FINAL <> ($this:java.util.HashMap<K, V>.Values) returnType:Int flags:
            overridden:
              UNBOUND: fun <get-size>(): kotlin.Int
            $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V>.Values flags:
        FUN FAKE_OVERRIDE name:toArray visibility:public modality:OPEN <T> ($this:java.util.AbstractCollection<V!>, p0:kotlin.Array<(out) T!>!) returnType:(kotlin.Array<(T..T?)>..kotlin.Array<out (T..T?)>?) flags:
          overridden:
            UNBOUND: fun <T : kotlin.Any!> toArray(p0: kotlin.Array<(out) T!>!): kotlin.Array<(out) T!>!
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:T index:0 variance: upperBounds:[kotlin.Any!]
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Array<(out) T!>! flags:
        FUN FAKE_OVERRIDE name:add visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<V!>, element:V!) returnType:Boolean flags:
          overridden:
            UNBOUND: fun add(element: E!): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:element index:0 type:V! flags:
        FUN FAKE_OVERRIDE name:addAll visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<V!>, elements:kotlin.collections.Collection<V!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun addAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<V!> flags:
        FUN FAKE_OVERRIDE name:containsAll visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<V!>, elements:kotlin.collections.Collection<V!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun containsAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<V!> flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            UNBOUND: fun equals(other: kotlin.Any?): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
          overridden:
            UNBOUND: fun hashCode(): kotlin.Int
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<V!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun isEmpty(): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<V!> flags:
        FUN FAKE_OVERRIDE name:parallelStream visibility:public modality:OPEN <> ($this:kotlin.collections.Collection<V!>) returnType:Stream<(V..V?)> flags:
          overridden:
            UNBOUND: fun parallelStream(): java.util.stream.Stream<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Collection<V!> flags:
        FUN FAKE_OVERRIDE name:remove visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<V!>, element:V!) returnType:Boolean flags:
          overridden:
            UNBOUND: fun remove(element: E!): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:element index:0 type:V! flags:
        FUN FAKE_OVERRIDE name:removeAll visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<V!>, elements:kotlin.collections.Collection<V!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun removeAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<V!> flags:
        FUN FAKE_OVERRIDE name:removeIf visibility:public modality:OPEN <> ($this:kotlin.collections.MutableCollection<V!>, p0:java.util.function.Predicate<in V!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun removeIf(p0: java.util.function.Predicate<in E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableCollection<V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.Predicate<in V!> flags:
        FUN FAKE_OVERRIDE name:retainAll visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<V!>, elements:kotlin.collections.Collection<V!>) returnType:Boolean flags:
          overridden:
            UNBOUND: fun retainAll(elements: kotlin.collections.Collection<E!>): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<V!> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:elements index:0 type:kotlin.collections.Collection<V!> flags:
        FUN FAKE_OVERRIDE name:stream visibility:public modality:OPEN <> ($this:kotlin.collections.Collection<V!>) returnType:Stream<(V..V?)> flags:
          overridden:
            UNBOUND: fun stream(): java.util.stream.Stream<E!>
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Collection<V!> flags:
        FUN FAKE_OVERRIDE name:toArray visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<V!>) returnType:(kotlin.Array<(kotlin.Any..kotlin.Any?)>..kotlin.Array<out (kotlin.Any..kotlin.Any?)>?) flags:
          overridden:
            UNBOUND: fun toArray(): kotlin.Array<(out) kotlin.Any!>!
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<V!> flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:java.util.AbstractCollection<V!>) returnType:String flags:
          overridden:
            UNBOUND: fun toString(): kotlin.String
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractCollection<V!> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:MAX_ARRAY_SIZE type:kotlin.Int visibility:invisible_fake modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:MAX_ARRAY_SIZE type:kotlin.Int visibility:invisible_fake flags:final
        FUN FAKE_OVERRIDE name:finishToArray visibility:invisible_fake modality:OPEN <T> (p0:kotlin.Array<(out) T!>!, p1:kotlin.collections.(Mutable)Iterator<*>!) returnType:(kotlin.Array<(T..T?)>..kotlin.Array<out (T..T?)>?) flags:
          overridden:
            UNBOUND: fun <T : kotlin.Any!> finishToArray(p0: kotlin.Array<(out) T!>!, p1: kotlin.collections.(Mutable)Iterator<*>!): kotlin.Array<(out) T!>!
          TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:T index:0 variance: upperBounds:[kotlin.Any!]
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Array<(out) T!>! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.collections.(Mutable)Iterator<*>! flags:
        FUN FAKE_OVERRIDE name:hugeCapacity visibility:invisible_fake modality:OPEN <> (p0:kotlin.Int) returnType:Int flags:
          overridden:
            UNBOUND: fun hugeCapacity(p0: kotlin.Int): kotlin.Int
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:keySet type:kotlin.collections.(Mutable)Set<K!>! visibility:public/*package*/ modality:FINAL flags:var
        FIELD IR_EXTERNAL_DECLARATION_STUB name:keySet type:kotlin.collections.(Mutable)Set<K!>! visibility:public/*package*/ flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:values type:kotlin.collections.(Mutable)Collection<V!>! visibility:public/*package*/ modality:FINAL flags:var
        FIELD IR_EXTERNAL_DECLARATION_STUB name:values type:kotlin.collections.(Mutable)Collection<V!>! visibility:public/*package*/ flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:loadFactor type:kotlin.Float visibility:public/*package*/ modality:FINAL flags:val
        FIELD IR_EXTERNAL_DECLARATION_STUB name:loadFactor type:kotlin.Float visibility:public/*package*/ flags:final
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:entrySet type:kotlin.collections.(Mutable)Set<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>! visibility:public/*package*/ modality:FINAL flags:var
        FIELD IR_EXTERNAL_DECLARATION_STUB name:entrySet type:kotlin.collections.(Mutable)Set<kotlin.collections.(Mutable)Map.(Mutable)Entry<K!, V!>!>! visibility:public/*package*/ flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:modCount type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
        FIELD IR_EXTERNAL_DECLARATION_STUB name:modCount type:kotlin.Int visibility:public/*package*/ flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:size type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
        FIELD IR_EXTERNAL_DECLARATION_STUB name:size type:kotlin.Int visibility:public/*package*/ flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:table type:kotlin.Array<(out) java.util.HashMap.Node<K!, V!>!>! visibility:public/*package*/ modality:FINAL flags:var
        FIELD IR_EXTERNAL_DECLARATION_STUB name:table type:kotlin.Array<(out) java.util.HashMap.Node<K!, V!>!>! visibility:public/*package*/ flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:threshold type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
        FIELD IR_EXTERNAL_DECLARATION_STUB name:threshold type:kotlin.Int visibility:public/*package*/ flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:HashMapSpliterator modality:OPEN visibility:public/*package*/ flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.HashMapSpliterator<K, V> flags:
        superClasses:
          CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:Any modality:OPEN visibility:public flags:
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any!]
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance: upperBounds:[kotlin.Any!]
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public/*package*/ <> (p0:java.util.HashMap<K!, V!>!, p1:kotlin.Int, p2:kotlin.Int, p3:kotlin.Int, p4:kotlin.Int) returnType:java.util.HashMap.HashMapSpliterator<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.HashMap<K!, V!>! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Int flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:kotlin.Int flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p3 index:3 type:kotlin.Int flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p4 index:4 type:kotlin.Int flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:estimateSize visibility:public modality:FINAL <> ($this:java.util.HashMap.HashMapSpliterator<K, V>) returnType:Long flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.HashMapSpliterator<K, V> flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:getFence visibility:public/*package*/ modality:FINAL <> ($this:java.util.HashMap.HashMapSpliterator<K, V>) returnType:Int flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.HashMapSpliterator<K, V> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:map type:java.util.HashMap<K!, V!>! visibility:public/*package*/ modality:FINAL flags:val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:map type:java.util.HashMap<K!, V!>! visibility:public/*package*/ flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:current type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:est type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:est type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:expectedModCount type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:fence type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:fence type:kotlin.Int visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:index type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:index type:kotlin.Int visibility:public/*package*/ flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:Node modality:OPEN visibility:public/*package*/ flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.Node<K, V> flags:
        superClasses:
          CLASS IR_EXTERNAL_DECLARATION_STUB INTERFACE name:MutableEntry modality:ABSTRACT visibility:public flags:
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any!]
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance: upperBounds:[kotlin.Any!]
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public/*package*/ <> (p0:kotlin.Int, p1:K!, p2:V!, p3:java.util.HashMap.Node<K!, V!>!) returnType:java.util.HashMap.Node<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:K! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:V! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p3 index:3 type:java.util.HashMap.Node<K!, V!>! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:equals visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K, V>, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.Node<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:hashCode visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K, V>) returnType:Int flags:
          overridden:
            FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.Node<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:setValue visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K, V>, newValue:V!) returnType:(V..V?) flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:setValue visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap.MutableEntry<K, V>, newValue:V) returnType:V flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.Node<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:newValue index:0 type:V! flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:toString visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K, V>) returnType:String flags:
          overridden:
            FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.Node<K, V> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:key type:K! visibility:public modality:FINAL flags:val
          FUN IR_EXTERNAL_DECLARATION_STUB name:<get-key> visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K, V>) returnType:(K..K?) flags:
            overridden:
              FUN FAKE_OVERRIDE name:<get-key> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map.Entry<K, V>) returnType:K flags:
            $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.Node<K, V> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:value type:V! visibility:public modality:FINAL flags:val
          FUN IR_EXTERNAL_DECLARATION_STUB name:<get-value> visibility:public modality:FINAL <> ($this:java.util.HashMap.Node<K, V>) returnType:(V..V?) flags:
            overridden:
              FUN FAKE_OVERRIDE name:<get-value> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map.Entry<K, V>) returnType:V flags:
            $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap.Node<K, V> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:hash type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:hash type:kotlin.Int visibility:public/*package*/ flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:key type:K! visibility:public/*package*/ modality:FINAL flags:val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:key type:K! visibility:public/*package*/ flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:next type:java.util.HashMap.Node<K!, V!>! visibility:public/*package*/ flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:value type:V! visibility:public/*package*/ modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:value type:V! visibility:public/*package*/ flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:afterNodeAccess visibility:public/*package*/ modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:java.util.HashMap.Node<K!, V!>!) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.HashMap.Node<K!, V!>! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:afterNodeInsertion visibility:public/*package*/ modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:kotlin.Boolean) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Boolean flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:afterNodeRemoval visibility:public/*package*/ modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:java.util.HashMap.Node<K!, V!>!) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.HashMap.Node<K!, V!>! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:internalWriteEntries visibility:public/*package*/ modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:java.io.ObjectOutputStream!) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.io.ObjectOutputStream! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:newNode visibility:public/*package*/ modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:kotlin.Int, p1:K!, p2:V!, p3:java.util.HashMap.Node<K!, V!>!) returnType:(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?) flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:K! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:V! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p3 index:3 type:java.util.HashMap.Node<K!, V!>! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:newTreeNode visibility:public/*package*/ modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:kotlin.Int, p1:K!, p2:V!, p3:java.util.HashMap.Node<K!, V!>!) returnType:(java.util.HashMap.TreeNode<(K..K?), (V..V?)>..java.util.HashMap.TreeNode<(K..K?), (V..V?)>?) flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:K! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:V! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p3 index:3 type:java.util.HashMap.Node<K!, V!>! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:reinitialize visibility:public/*package*/ modality:OPEN <> ($this:java.util.HashMap<K, V>) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:replacementNode visibility:public/*package*/ modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:java.util.HashMap.Node<K!, V!>!, p1:java.util.HashMap.Node<K!, V!>!) returnType:(java.util.HashMap.Node<(K..K?), (V..V?)>..java.util.HashMap.Node<(K..K?), (V..V?)>?) flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.HashMap.Node<K!, V!>! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.HashMap.Node<K!, V!>! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:replacementTreeNode visibility:public/*package*/ modality:OPEN <> ($this:java.util.HashMap<K, V>, p0:java.util.HashMap.Node<K!, V!>!, p1:java.util.HashMap.Node<K!, V!>!) returnType:(java.util.HashMap.TreeNode<(K..K?), (V..V?)>..java.util.HashMap.TreeNode<(K..K?), (V..V?)>?) flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.HashMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.HashMap.Node<K!, V!>! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.HashMap.Node<K!, V!>! flags:
      FUN FAKE_OVERRIDE name:eq visibility:invisible_fake modality:OPEN <> (p0:kotlin.Any!, p1:kotlin.Any!) returnType:Boolean flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:eq visibility:private modality:OPEN <> (p0:kotlin.Any!, p1:kotlin.Any!) returnType:Boolean flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Any! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Any! flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:serialVersionUID type:kotlin.Long visibility:private modality:FINAL flags:const,val
        FIELD IR_EXTERNAL_DECLARATION_STUB name:serialVersionUID type:kotlin.Long visibility:private flags:final
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:DEFAULT_INITIAL_CAPACITY type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:const,val
        FIELD IR_EXTERNAL_DECLARATION_STUB name:DEFAULT_INITIAL_CAPACITY type:kotlin.Int visibility:public/*package*/ flags:final
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:DEFAULT_LOAD_FACTOR type:kotlin.Float visibility:public/*package*/ modality:FINAL flags:const,val
        FIELD IR_EXTERNAL_DECLARATION_STUB name:DEFAULT_LOAD_FACTOR type:kotlin.Float visibility:public/*package*/ flags:final
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:MAXIMUM_CAPACITY type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:const,val
        FIELD IR_EXTERNAL_DECLARATION_STUB name:MAXIMUM_CAPACITY type:kotlin.Int visibility:public/*package*/ flags:final
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:MIN_TREEIFY_CAPACITY type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:const,val
        FIELD IR_EXTERNAL_DECLARATION_STUB name:MIN_TREEIFY_CAPACITY type:kotlin.Int visibility:public/*package*/ flags:final
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:TREEIFY_THRESHOLD type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:const,val
        FIELD IR_EXTERNAL_DECLARATION_STUB name:TREEIFY_THRESHOLD type:kotlin.Int visibility:public/*package*/ flags:final
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:UNTREEIFY_THRESHOLD type:kotlin.Int visibility:public/*package*/ modality:FINAL flags:const,val
        FIELD IR_EXTERNAL_DECLARATION_STUB name:UNTREEIFY_THRESHOLD type:kotlin.Int visibility:public/*package*/ flags:final
      FUN IR_EXTERNAL_DECLARATION_STUB name:hash visibility:public/*package*/ modality:FINAL <> (p0:kotlin.Any!) returnType:Int flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Any! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:tableSizeFor visibility:public/*package*/ modality:FINAL <> (p0:kotlin.Int) returnType:Int flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Int flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:comparableClassFor visibility:public/*package*/ modality:OPEN <> (p0:kotlin.Any!) returnType:(java.lang.Class<*>..java.lang.Class<*>?) flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Any! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:compareComparables visibility:public/*package*/ modality:OPEN <> (p0:java.lang.Class<*>!, p1:kotlin.Any!, p2:kotlin.Any!) returnType:Int flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.lang.Class<*>! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Any! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:kotlin.Any! flags:
    CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:AbstractMap modality:ABSTRACT visibility:public flags:
      $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K, V> flags:
      superClasses:
        CLASS IR_EXTERNAL_DECLARATION_STUB INTERFACE name:MutableMap modality:ABSTRACT visibility:public flags:
      TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any!]
      TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance: upperBounds:[kotlin.Any!]
      CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:protected/*protected and package*/ <> () returnType:java.util.AbstractMap<K, V> flags:
      FUN FAKE_OVERRIDE name:getOrDefault visibility:public modality:OPEN <> ($this:kotlin.collections.Map<K!, V!>, key:K!, defaultValue:V!) returnType:(V..V?) flags:
        overridden:
          FUN FAKE_OVERRIDE name:getOrDefault visibility:public modality:OPEN <> ($this:kotlin.collections.Map<K, V>, key:K, defaultValue:V) returnType:V flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:defaultValue index:1 type:V! flags:
      FUN FAKE_OVERRIDE name:remove visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K!, V!>, key:K!, value:V!) returnType:Boolean flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, key:K, value:V) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:value index:1 type:V! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:clone visibility:protected/*protected and package*/ modality:OPEN <> ($this:java.util.AbstractMap<K, V>) returnType:(kotlin.Any..kotlin.Any?) flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K, V> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:entries type:kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<K!, V!>> visibility:public modality:ABSTRACT flags:val
        FUN IR_EXTERNAL_DECLARATION_STUB name:<get-entries> visibility:public modality:ABSTRACT <> ($this:java.util.AbstractMap<K, V>) returnType:(kotlin.collections.MutableSet<(kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?)>..kotlin.collections.Set<(kotlin.collections.MutableMap.MutableEntry<(K..K?), (V..V?)>..kotlin.collections.Map.Entry<(K..K?), (V..V?)>?)>?) flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:<get-entries> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>) returnType:MutableSet<MutableEntry<K, V>> flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K, V> flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:SimpleEntry modality:OPEN visibility:public flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap.SimpleEntry<K, V> flags:
        superClasses:
          CLASS IR_EXTERNAL_DECLARATION_STUB INTERFACE name:MutableEntry modality:ABSTRACT visibility:public flags:
          UNBOUND: interface Serializable
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any!]
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance: upperBounds:[kotlin.Any!]
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public <> (p0:(kotlin.collections.MutableMap.MutableEntry<out K!, out V!>..kotlin.collections.Map.Entry<K!, V!>?)) returnType:java.util.AbstractMap.SimpleEntry<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:(kotlin.collections.MutableMap.MutableEntry<out K!, out V!>..kotlin.collections.Map.Entry<K!, V!>?) flags:
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public <> (p0:K!, p1:V!) returnType:java.util.AbstractMap.SimpleEntry<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:V! flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:key type:K! visibility:private modality:FINAL flags:val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:key type:K! visibility:private flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:value type:V! visibility:private modality:FINAL flags:var
          FIELD IR_EXTERNAL_DECLARATION_STUB name:value type:V! visibility:private flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:setValue visibility:public modality:OPEN <> ($this:java.util.AbstractMap.SimpleEntry<K, V>, newValue:V!) returnType:(V..V?) flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:setValue visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap.MutableEntry<K, V>, newValue:V) returnType:V flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap.SimpleEntry<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:newValue index:0 type:V! flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:key type:K! visibility:public modality:OPEN flags:val
          FUN IR_EXTERNAL_DECLARATION_STUB name:<get-key> visibility:public modality:OPEN <> ($this:java.util.AbstractMap.SimpleEntry<K, V>) returnType:(K..K?) flags:
            overridden:
              FUN FAKE_OVERRIDE name:<get-key> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map.Entry<K, V>) returnType:K flags:
            $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap.SimpleEntry<K, V> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:value type:V! visibility:public modality:OPEN flags:val
          FUN IR_EXTERNAL_DECLARATION_STUB name:<get-value> visibility:public modality:OPEN <> ($this:java.util.AbstractMap.SimpleEntry<K, V>) returnType:(V..V?) flags:
            overridden:
              FUN FAKE_OVERRIDE name:<get-value> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map.Entry<K, V>) returnType:V flags:
            $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap.SimpleEntry<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:equals visibility:public modality:OPEN <> ($this:java.util.AbstractMap.SimpleEntry<K, V>, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
            UNBOUND: fun equals(other: kotlin.Any?): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap.SimpleEntry<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:hashCode visibility:public modality:OPEN <> ($this:java.util.AbstractMap.SimpleEntry<K, V>) returnType:Int flags:
          overridden:
            FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
            UNBOUND: fun hashCode(): kotlin.Int
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap.SimpleEntry<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:toString visibility:public modality:OPEN <> ($this:java.util.AbstractMap.SimpleEntry<K, V>) returnType:String flags:
          overridden:
            FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
            UNBOUND: fun toString(): kotlin.String
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap.SimpleEntry<K, V> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:serialVersionUID type:kotlin.Long visibility:private modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:serialVersionUID type:kotlin.Long visibility:private flags:final
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:SimpleImmutableEntry modality:OPEN visibility:public flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap.SimpleImmutableEntry<K, V> flags:
        superClasses:
          CLASS IR_EXTERNAL_DECLARATION_STUB INTERFACE name:MutableEntry modality:ABSTRACT visibility:public flags:
          UNBOUND: interface Serializable
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any!]
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance: upperBounds:[kotlin.Any!]
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public <> (p0:(kotlin.collections.MutableMap.MutableEntry<out K!, out V!>..kotlin.collections.Map.Entry<K!, V!>?)) returnType:java.util.AbstractMap.SimpleImmutableEntry<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:(kotlin.collections.MutableMap.MutableEntry<out K!, out V!>..kotlin.collections.Map.Entry<K!, V!>?) flags:
        CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public <> (p0:K!, p1:V!) returnType:java.util.AbstractMap.SimpleImmutableEntry<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K! flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:V! flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:key type:K! visibility:private modality:FINAL flags:val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:key type:K! visibility:private flags:final
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:value type:V! visibility:private modality:FINAL flags:val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:value type:V! visibility:private flags:final
        FUN IR_EXTERNAL_DECLARATION_STUB name:setValue visibility:public modality:OPEN <> ($this:java.util.AbstractMap.SimpleImmutableEntry<K, V>, newValue:V!) returnType:(V..V?) flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:setValue visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap.MutableEntry<K, V>, newValue:V) returnType:V flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap.SimpleImmutableEntry<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:newValue index:0 type:V! flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:key type:K! visibility:public modality:OPEN flags:val
          FUN IR_EXTERNAL_DECLARATION_STUB name:<get-key> visibility:public modality:OPEN <> ($this:java.util.AbstractMap.SimpleImmutableEntry<K, V>) returnType:(K..K?) flags:
            overridden:
              FUN FAKE_OVERRIDE name:<get-key> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map.Entry<K, V>) returnType:K flags:
            $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap.SimpleImmutableEntry<K, V> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:value type:V! visibility:public modality:OPEN flags:val
          FUN IR_EXTERNAL_DECLARATION_STUB name:<get-value> visibility:public modality:OPEN <> ($this:java.util.AbstractMap.SimpleImmutableEntry<K, V>) returnType:(V..V?) flags:
            overridden:
              FUN FAKE_OVERRIDE name:<get-value> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map.Entry<K, V>) returnType:V flags:
            $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap.SimpleImmutableEntry<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:equals visibility:public modality:OPEN <> ($this:java.util.AbstractMap.SimpleImmutableEntry<K, V>, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
            UNBOUND: fun equals(other: kotlin.Any?): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap.SimpleImmutableEntry<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:hashCode visibility:public modality:OPEN <> ($this:java.util.AbstractMap.SimpleImmutableEntry<K, V>) returnType:Int flags:
          overridden:
            FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
            UNBOUND: fun hashCode(): kotlin.Int
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap.SimpleImmutableEntry<K, V> flags:
        FUN IR_EXTERNAL_DECLARATION_STUB name:toString visibility:public modality:OPEN <> ($this:java.util.AbstractMap.SimpleImmutableEntry<K, V>) returnType:String flags:
          overridden:
            FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
            UNBOUND: fun toString(): kotlin.String
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap.SimpleImmutableEntry<K, V> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:serialVersionUID type:kotlin.Long visibility:private modality:FINAL flags:const,val
          FIELD IR_EXTERNAL_DECLARATION_STUB name:serialVersionUID type:kotlin.Long visibility:private flags:final
      FUN FAKE_OVERRIDE name:compute visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K!, V!>, p0:K!, p1:java.util.function.BiFunction<in K!, in V?, out V?>) returnType:V? flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:compute visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:java.util.function.BiFunction<in K, in V?, out V?>) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.function.BiFunction<in K!, in V?, out V?> flags:
      FUN FAKE_OVERRIDE name:computeIfAbsent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K!, V!>, p0:K!, p1:java.util.function.Function<in K!, out V!>) returnType:(V..V?) flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:computeIfAbsent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:java.util.function.Function<in K, out V>) returnType:V flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.function.Function<in K!, out V!> flags:
      FUN FAKE_OVERRIDE name:computeIfPresent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K!, V!>, p0:K!, p1:java.util.function.BiFunction<in K!, in V, out V?>) returnType:V? flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:computeIfPresent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:java.util.function.BiFunction<in K, in V, out V?>) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.function.BiFunction<in K!, in V, out V?> flags:
      FUN FAKE_OVERRIDE name:forEach visibility:public modality:OPEN <> ($this:kotlin.collections.Map<K!, V!>, p0:java.util.function.BiConsumer<in K!, in V!>) returnType:Unit flags:
        overridden:
          FUN FAKE_OVERRIDE name:forEach visibility:public modality:OPEN <> ($this:kotlin.collections.Map<K, V>, p0:java.util.function.BiConsumer<in K, in V>) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.BiConsumer<in K!, in V!> flags:
      FUN FAKE_OVERRIDE name:merge visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K!, V!>, p0:K!, p1:V, p2:java.util.function.BiFunction<in V, in V, out V?>) returnType:V? flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:merge visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:V, p2:java.util.function.BiFunction<in V, in V, out V?>) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:V flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:java.util.function.BiFunction<in V, in V, out V?> flags:
      FUN FAKE_OVERRIDE name:putIfAbsent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K!, V!>, p0:K!, p1:V!) returnType:V? flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:putIfAbsent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:V) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:V! flags:
      FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K!, V!>, p0:K!, p1:V!) returnType:V? flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:replace visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:V) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:V! flags:
      FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K!, V!>, p0:K!, p1:V!, p2:V!) returnType:Boolean flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:replace visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:V, p2:V) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:V! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:V! flags:
      FUN FAKE_OVERRIDE name:replaceAll visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K!, V!>, p0:java.util.function.BiFunction<in K!, in V!, out V!>) returnType:Unit flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:replaceAll visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:java.util.function.BiFunction<in K, in V, out V>) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K!, V!> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.BiFunction<in K!, in V!, out V!> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:clear visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>) returnType:Unit flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:clear visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K, V> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:containsKey visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>, key:K!) returnType:Boolean flags:
        overridden:
          FUN FAKE_OVERRIDE name:containsKey visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>, key:K) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:containsValue visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>, value:V!) returnType:Boolean flags:
        overridden:
          FUN FAKE_OVERRIDE name:containsValue visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>, value:V) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:value index:0 type:V! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:equals visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>, other:kotlin.Any?) returnType:Boolean flags:
        overridden:
          FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:get visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>, key:K!) returnType:V? flags:
        overridden:
          FUN FAKE_OVERRIDE name:get visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>, key:K) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:hashCode visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>) returnType:Int flags:
        overridden:
          FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K, V> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:isEmpty visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>) returnType:Boolean flags:
        overridden:
          FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K, V> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:put visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>, key:K!, value:V!) returnType:V? flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:put visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>, key:K, value:V) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:value index:1 type:V! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:putAll visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>, from:kotlin.collections.Map<out K!, V!>) returnType:Unit flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:putAll visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>, from:kotlin.collections.Map<out K, V>) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:from index:0 type:kotlin.collections.Map<out K!, V!> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>, key:K!) returnType:V? flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>, key:K) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K! flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:toString visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>) returnType:String flags:
        overridden:
          FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K, V> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:keys type:kotlin.collections.MutableSet<K!> visibility:public modality:OPEN flags:val
        FUN IR_EXTERNAL_DECLARATION_STUB name:<get-keys> visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>) returnType:(kotlin.collections.MutableSet<(K..K?)>..kotlin.collections.Set<(K..K?)>?) flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:<get-keys> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>) returnType:MutableSet<K> flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K, V> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:size type:kotlin.Int visibility:public modality:OPEN flags:val
        FUN IR_EXTERNAL_DECLARATION_STUB name:<get-size> visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>) returnType:Int flags:
          overridden:
            FUN FAKE_OVERRIDE name:<get-size> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>) returnType:Int flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K, V> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:values type:kotlin.collections.MutableCollection<V!> visibility:public modality:OPEN flags:val
        FUN IR_EXTERNAL_DECLARATION_STUB name:<get-values> visibility:public modality:OPEN <> ($this:java.util.AbstractMap<K, V>) returnType:(kotlin.collections.MutableCollection<(V..V?)>..kotlin.collections.Collection<(V..V?)>?) flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:<get-values> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>) returnType:MutableCollection<V> flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:java.util.AbstractMap<K, V> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:keySet type:kotlin.collections.(Mutable)Set<K!>! visibility:public/*package*/ modality:FINAL flags:var
        FIELD IR_EXTERNAL_DECLARATION_STUB name:keySet type:kotlin.collections.(Mutable)Set<K!>! visibility:public/*package*/ flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:values type:kotlin.collections.(Mutable)Collection<V!>! visibility:public/*package*/ modality:FINAL flags:var
        FIELD IR_EXTERNAL_DECLARATION_STUB name:values type:kotlin.collections.(Mutable)Collection<V!>! visibility:public/*package*/ flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:eq visibility:private modality:OPEN <> (p0:kotlin.Any!, p1:kotlin.Any!) returnType:Boolean flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:kotlin.Any! flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:kotlin.Any! flags:
  EXTERNAL_PACKAGE_FRAGMENT fqName:kotlin.collections
    CLASS IR_EXTERNAL_DECLARATION_STUB INTERFACE name:Map modality:ABSTRACT visibility:public flags:
      $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map<K, V> flags:
      superClasses:
        UNBOUND: class Any
      TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any?]
      TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance:out upperBounds:[kotlin.Any?]
      FUN IR_EXTERNAL_DECLARATION_STUB name:getOrDefault visibility:public modality:OPEN <> ($this:kotlin.collections.Map<K, V>, key:K, defaultValue:@kotlin.UnsafeVariance V) returnType:V flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:defaultValue index:1 type:@kotlin.UnsafeVariance V flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:containsKey visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>, key:K) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:containsValue visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>, value:@kotlin.UnsafeVariance V) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:value index:0 type:@kotlin.UnsafeVariance V flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:isEmpty visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map<K, V> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:get visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>, key:K) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:entries type:kotlin.collections.Set<kotlin.collections.Map.Entry<K, V>> visibility:public modality:ABSTRACT flags:val
        FUN IR_EXTERNAL_DECLARATION_STUB name:<get-entries> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>) returnType:Set<Entry<K, V>> flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map<K, V> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:keys type:kotlin.collections.Set<K> visibility:public modality:ABSTRACT flags:val
        FUN IR_EXTERNAL_DECLARATION_STUB name:<get-keys> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>) returnType:Set<K> flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map<K, V> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:size type:kotlin.Int visibility:public modality:ABSTRACT flags:val
        FUN IR_EXTERNAL_DECLARATION_STUB name:<get-size> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>) returnType:Int flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map<K, V> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:values type:kotlin.collections.Collection<V> visibility:public modality:ABSTRACT flags:val
        FUN IR_EXTERNAL_DECLARATION_STUB name:<get-values> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>) returnType:Collection<V> flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map<K, V> flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB INTERFACE name:Entry modality:ABSTRACT visibility:public flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map.Entry<K, V> flags:
        superClasses:
          UNBOUND: class Any
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance:out upperBounds:[kotlin.Any?]
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance:out upperBounds:[kotlin.Any?]
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:key type:K visibility:public modality:ABSTRACT flags:val
          FUN IR_EXTERNAL_DECLARATION_STUB name:<get-key> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map.Entry<K, V>) returnType:K flags:
            $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map.Entry<K, V> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:value type:V visibility:public modality:ABSTRACT flags:val
          FUN IR_EXTERNAL_DECLARATION_STUB name:<get-value> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map.Entry<K, V>) returnType:V flags:
            $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map.Entry<K, V> flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            UNBOUND: operator fun equals(other: kotlin.Any?): kotlin.Boolean
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
          overridden:
            UNBOUND: fun hashCode(): kotlin.Int
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
          overridden:
            UNBOUND: fun toString(): kotlin.String
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:forEach visibility:public modality:OPEN <> ($this:kotlin.collections.Map<K, V>, p0:java.util.function.BiConsumer<in K, in V>) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.BiConsumer<in K, in V> flags:
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
        overridden:
          UNBOUND: operator fun equals(other: kotlin.Any?): kotlin.Boolean
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
        overridden:
          UNBOUND: fun hashCode(): kotlin.Int
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
        overridden:
          UNBOUND: fun toString(): kotlin.String
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
    CLASS IR_EXTERNAL_DECLARATION_STUB INTERFACE name:MutableMap modality:ABSTRACT visibility:public flags:
      $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K, V> flags:
      superClasses:
        CLASS IR_EXTERNAL_DECLARATION_STUB INTERFACE name:Map modality:ABSTRACT visibility:public flags:
      TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any?]
      TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance: upperBounds:[kotlin.Any?]
      FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, key:K, value:V) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:value index:1 type:V flags:
      FUN FAKE_OVERRIDE name:getOrDefault visibility:public modality:OPEN <> ($this:kotlin.collections.Map<K, V>, key:K, defaultValue:V) returnType:V flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:getOrDefault visibility:public modality:OPEN <> ($this:kotlin.collections.Map<K, V>, key:K, defaultValue:@kotlin.UnsafeVariance V) returnType:V flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:defaultValue index:1 type:V flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:clear visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K, V> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:put visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>, key:K, value:V) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:value index:1 type:V flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:putAll visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>, from:kotlin.collections.Map<out K, V>) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:from index:0 type:kotlin.collections.Map<out K, V> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:remove visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>, key:K) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K flags:
      FUN FAKE_OVERRIDE name:containsKey visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>, key:K) returnType:Boolean flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:containsKey visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>, key:K) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K flags:
      FUN FAKE_OVERRIDE name:containsValue visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>, value:V) returnType:Boolean flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:containsValue visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>, value:@kotlin.UnsafeVariance V) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:value index:0 type:V flags:
      FUN FAKE_OVERRIDE name:get visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>, key:K) returnType:V? flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:get visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>, key:K) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:key index:0 type:K flags:
      FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>) returnType:Boolean flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:isEmpty visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map<K, V> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:size type:kotlin.Int visibility:public modality:ABSTRACT flags:val
        FUN FAKE_OVERRIDE name:<get-size> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>) returnType:Int flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:<get-size> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>) returnType:Int flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map<K, V> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:entries type:kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<K, V>> visibility:public modality:ABSTRACT flags:val
        FUN IR_EXTERNAL_DECLARATION_STUB name:<get-entries> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>) returnType:MutableSet<MutableEntry<K, V>> flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:<get-entries> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>) returnType:Set<Entry<K, V>> flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K, V> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:keys type:kotlin.collections.MutableSet<K> visibility:public modality:ABSTRACT flags:val
        FUN IR_EXTERNAL_DECLARATION_STUB name:<get-keys> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>) returnType:MutableSet<K> flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:<get-keys> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>) returnType:Set<K> flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K, V> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:values type:kotlin.collections.MutableCollection<V> visibility:public modality:ABSTRACT flags:val
        FUN IR_EXTERNAL_DECLARATION_STUB name:<get-values> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<K, V>) returnType:MutableCollection<V> flags:
          overridden:
            FUN IR_EXTERNAL_DECLARATION_STUB name:<get-values> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map<K, V>) returnType:Collection<V> flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K, V> flags:
      CLASS IR_EXTERNAL_DECLARATION_STUB INTERFACE name:MutableEntry modality:ABSTRACT visibility:public flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap.MutableEntry<K, V> flags:
        superClasses:
          CLASS IR_EXTERNAL_DECLARATION_STUB INTERFACE name:Entry modality:ABSTRACT visibility:public flags:
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any?]
        TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance: upperBounds:[kotlin.Any?]
        FUN IR_EXTERNAL_DECLARATION_STUB name:setValue visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap.MutableEntry<K, V>, newValue:V) returnType:V flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap.MutableEntry<K, V> flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:newValue index:0 type:V flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:key type:K visibility:public modality:ABSTRACT flags:val
          FUN FAKE_OVERRIDE name:<get-key> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map.Entry<K, V>) returnType:K flags:
            overridden:
              FUN IR_EXTERNAL_DECLARATION_STUB name:<get-key> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map.Entry<K, V>) returnType:K flags:
            $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map.Entry<K, V> flags:
        PROPERTY IR_EXTERNAL_DECLARATION_STUB name:value type:V visibility:public modality:ABSTRACT flags:val
          FUN FAKE_OVERRIDE name:<get-value> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map.Entry<K, V>) returnType:V flags:
            overridden:
              FUN IR_EXTERNAL_DECLARATION_STUB name:<get-value> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.Map.Entry<K, V>) returnType:V flags:
            $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map.Entry<K, V> flags:
        FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
          overridden:
            FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
          VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
        FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
          overridden:
            FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
          overridden:
            FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:compute visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:java.util.function.BiFunction<in K, in V?, out V?>) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.function.BiFunction<in K, in V?, out V?> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:computeIfAbsent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:java.util.function.Function<in K, out V>) returnType:V flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.function.Function<in K, out V> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:computeIfPresent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:java.util.function.BiFunction<in K, in V, out V?>) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:java.util.function.BiFunction<in K, in V, out V?> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:merge visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:V, p2:java.util.function.BiFunction<in V, in V, out V?>) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:V flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:java.util.function.BiFunction<in V, in V, out V?> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:putIfAbsent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:V) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:V flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:replace visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:V) returnType:V? flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:V flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:replace visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:K, p1:V, p2:V) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:K flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p1 index:1 type:V flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p2 index:2 type:V flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:replaceAll visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<K, V>, p0:java.util.function.BiFunction<in K, in V, out V>) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.MutableMap<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.BiFunction<in K, in V, out V> flags:
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
        overridden:
          FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
      FUN FAKE_OVERRIDE name:forEach visibility:public modality:OPEN <> ($this:kotlin.collections.Map<K, V>, p0:java.util.function.BiConsumer<in K, in V>) returnType:Unit flags:
        overridden:
          FUN IR_EXTERNAL_DECLARATION_STUB name:forEach visibility:public modality:OPEN <> ($this:kotlin.collections.Map<K, V>, p0:java.util.function.BiConsumer<in K, in V>) returnType:Unit flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.collections.Map<K, V> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:p0 index:0 type:java.util.function.BiConsumer<in K, in V> flags:
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
        overridden:
          FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
        overridden:
          FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Any flags:
  EXTERNAL_PACKAGE_FRAGMENT fqName:kotlin.collections
    FUN IR_EXTERNAL_DECLARATION_STUB name:mapOf visibility:public modality:FINAL <K, V> (pair:kotlin.Pair<K, V>) returnType:Map<K, V> flags:
      TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:K index:0 variance: upperBounds:[kotlin.Any?]
      TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:V index:1 variance: upperBounds:[kotlin.Any?]
      VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:pair index:0 type:kotlin.Pair<K, V> flags:
  EXTERNAL_PACKAGE_FRAGMENT fqName:kotlin
    CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:Pair modality:FINAL visibility:public flags:data
      $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Pair<A, B> flags:
      superClasses:
        UNBOUND: interface Serializable
      TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:A index:0 variance:out upperBounds:[kotlin.Any?]
      TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:B index:1 variance:out upperBounds:[kotlin.Any?]
      CONSTRUCTOR IR_EXTERNAL_DECLARATION_STUB visibility:public <> (first:A, second:B) returnType:kotlin.Pair<A, B> flags:primary
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:first index:0 type:A flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:second index:1 type:B flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:copy visibility:public modality:FINAL <> ($this:kotlin.Pair<A, B>, first:A, second:B) returnType:Pair<A, B> flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Pair<A, B> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:first index:0 type:A flags:
          EXPRESSION_BODY
            ERROR_EXPR 'Stub expression for default value of first' type=A
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:second index:1 type:B flags:
          EXPRESSION_BODY
            ERROR_EXPR 'Stub expression for default value of second' type=B
      FUN IR_EXTERNAL_DECLARATION_STUB name:component1 visibility:public modality:FINAL <> ($this:kotlin.Pair<A, B>) returnType:A flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Pair<A, B> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:component2 visibility:public modality:FINAL <> ($this:kotlin.Pair<A, B>) returnType:B flags:
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Pair<A, B> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:first type:A visibility:public modality:FINAL flags:val
        FUN IR_EXTERNAL_DECLARATION_STUB name:<get-first> visibility:public modality:FINAL <> ($this:kotlin.Pair<A, B>) returnType:A flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Pair<A, B> flags:
      PROPERTY IR_EXTERNAL_DECLARATION_STUB name:second type:B visibility:public modality:FINAL flags:val
        FUN IR_EXTERNAL_DECLARATION_STUB name:<get-second> visibility:public modality:FINAL <> ($this:kotlin.Pair<A, B>) returnType:B flags:
          $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Pair<A, B> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:equals visibility:public modality:OPEN <> ($this:kotlin.Pair<A, B>, other:kotlin.Any?) returnType:Boolean flags:
        overridden:
          UNBOUND: fun equals(other: kotlin.Any?): kotlin.Boolean
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Pair<A, B> flags:
        VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:other index:0 type:kotlin.Any? flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Pair<A, B>) returnType:Int flags:
        overridden:
          UNBOUND: fun hashCode(): kotlin.Int
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Pair<A, B> flags:
      FUN IR_EXTERNAL_DECLARATION_STUB name:toString visibility:public modality:OPEN <> ($this:kotlin.Pair<A, B>) returnType:String flags:
        overridden:
          UNBOUND: fun toString(): kotlin.String
        $this: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:kotlin.Pair<A, B> flags:
    FUN IR_EXTERNAL_DECLARATION_STUB name:apply visibility:public modality:FINAL <T> ($receiver:T, block:T.() -> kotlin.Unit) returnType:T flags:inline
      TYPE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:T index:0 variance: upperBounds:[kotlin.Any?]
      $receiver: VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:<this> type:T flags:
      VALUE_PARAMETER IR_EXTERNAL_DECLARATION_STUB name:block index:0 type:T.() -> kotlin.Unit flags:
