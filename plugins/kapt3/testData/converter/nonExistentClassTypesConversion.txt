import java.util.Calendar;
import kotlin.reflect.KClass;

@kotlin.Metadata()
@java.lang.annotation.Retention(value = java.lang.annotation.RetentionPolicy.RUNTIME)
public abstract @interface Anno {

    public abstract java.lang.Class<?> a();

    public abstract java.lang.Class<?>[] b();

    public abstract java.lang.Class<?>[] c();

    public abstract java.lang.Class<?>[] d();
}

////////////////////


import java.util.Calendar;
import kotlin.reflect.KClass;

@kotlin.Suppress(names = {"UNRESOLVED_REFERENCE", "ANNOTATION_PARAMETER_MUST_BE_CONST", "NON_CONST_VAL_USED_IN_CONSTANT_EXPRESSION", "UNSUPPORTED_FEATURE"})
@kotlin.Metadata()
@Anno(a = Blah.class, b = {NoFoo1.class, NoBar1.class}, c = {NoFoo2.class, String.class}, d = {Boolean.class, NoBar3.class})
public final class Test {

    public Test() {
        super();
    }
}

////////////////////

package error;

public final class NonExistentClass {
}
