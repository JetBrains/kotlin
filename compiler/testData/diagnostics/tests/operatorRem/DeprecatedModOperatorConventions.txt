package

public fun takeInt(/*0*/ x: kotlin.Int): kotlin.Unit
public fun test(): kotlin.Unit
public operator fun Sample.mod(/*0*/ x: kotlin.Int): kotlin.Unit
public operator fun Sample.rem(/*0*/ x: kotlin.Int): kotlin.Unit

public final class IntAndUnit {
    public constructor IntAndUnit()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final operator fun mod(/*0*/ x: kotlin.Int): kotlin.Int
    public final operator fun rem(/*0*/ x: kotlin.Int): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class OldAndNew {
    public constructor OldAndNew()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final operator fun mod(/*0*/ x: kotlin.Int): kotlin.Unit
    public final operator fun rem(/*0*/ x: kotlin.Int): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class OnlyNew {
    public constructor OnlyNew()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final operator fun rem(/*0*/ x: kotlin.Int): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class OnlyOld {
    public constructor OnlyOld()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final operator fun mod(/*0*/ x: kotlin.Int): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class Sample {
    public constructor Sample()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
