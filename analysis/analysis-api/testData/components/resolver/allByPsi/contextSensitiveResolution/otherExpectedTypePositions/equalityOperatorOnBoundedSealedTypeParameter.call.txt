KtFile: 'equalityOperatorOnBoundedSealedTypeParameter.kt'
  null

KtPackageDirective(0,0): ''
  null

KtImportList(0,0): ''
  null

KtClass(78,190): 'sealed class MySealed {'
  null

KtDeclarationModifierList(78,84): 'sealed'
  null

KtClassBody(100,190): '{'
  null

KtObjectDeclaration(106,135): 'data object X : MySealed() {}'
  null

KtDeclarationModifierList(106,110): 'data'
  null

KtSuperTypeList(122,132): 'MySealed()'
  null

KtSuperTypeCallEntry(122,132): 'MySealed()'
  KaSuccessCallInfo:
    call = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MySealed
          symbol = <constructor>(): MySealed
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(122,130): 'MySealed'
  KaSuccessCallInfo:
    call = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MySealed
          symbol = <constructor>(): MySealed
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(122,130): 'MySealed'
  null

KtUserType(122,130): 'MySealed'
  null

KtNameReferenceExpression(122,130): 'MySealed'
  null

KtValueArgumentList(130,132): '()'
  null

KtClassBody(133,135): '{}'
  null

KtObjectDeclaration(140,156): 'data object Y {}'
  null

KtDeclarationModifierList(140,144): 'data'
  null

KtClassBody(154,156): '{}'
  null

KtClass(162,188): 'class Derived : MySealed()'
  null

KtSuperTypeList(178,188): 'MySealed()'
  null

KtSuperTypeCallEntry(178,188): 'MySealed()'
  KaSuccessCallInfo:
    call = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MySealed
          symbol = <constructor>(): MySealed
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(178,186): 'MySealed'
  KaSuccessCallInfo:
    call = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MySealed
          symbol = <constructor>(): MySealed
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(178,186): 'MySealed'
  null

KtUserType(178,186): 'MySealed'
  null

KtNameReferenceExpression(178,186): 'MySealed'
  null

KtValueArgumentList(186,188): '()'
  null

KtNamedFunction(192,220): 'fun <X> id(x: X): X = TODO()'
  null

KtTypeParameterList(196,199): '<X>'
  null

KtTypeParameter(197,198): 'X'
  null

KtParameterList(202,208): '(x: X)'
  null

KtParameter(203,207): 'x: X'
  null

KtTypeReference(206,207): 'X'
  null

KtUserType(206,207): 'X'
  null

KtNameReferenceExpression(206,207): 'X'
  null

KtTypeReference(210,211): 'X'
  null

KtUserType(210,211): 'X'
  null

KtNameReferenceExpression(210,211): 'X'
  null

KtCallExpression(214,220): 'TODO()'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Nothing
          symbol = kotlin/TODO(): kotlin.Nothing
          valueParameters = []
          contextParameters = []
          callableId = kotlin/TODO
      typeArgumentsMapping = {}

KtNameReferenceExpression(214,218): 'TODO'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Nothing
          symbol = kotlin/TODO(): kotlin.Nothing
          valueParameters = []
          contextParameters = []
          callableId = kotlin/TODO
      typeArgumentsMapping = {}

KtValueArgumentList(218,220): '()'
  null

KtNamedFunction(222,1477): 'fun <T : MySealed> foo(a: T) {'
  null

KtTypeParameterList(226,240): '<T : MySealed>'
  null

KtTypeParameter(227,239): 'T : MySealed'
  null

KtTypeReference(231,239): 'MySealed'
  null

KtUserType(231,239): 'MySealed'
  null

KtNameReferenceExpression(231,239): 'MySealed'
  null

KtParameterList(244,250): '(a: T)'
  null

KtParameter(245,249): 'a: T'
  null

KtTypeReference(248,249): 'T'
  null

KtUserType(248,249): 'T'
  null

KtNameReferenceExpression(248,249): 'T'
  null

KtBlockExpression(251,1477): '{'
  null

KtProperty(257,275): 'val L = MySealed.X'
  null

KtDotQualifiedExpression(265,275): 'MySealed.X'
  null

KtNameReferenceExpression(265,273): 'MySealed'
  null

KtNameReferenceExpression(274,275): 'X'
  null

KtIfExpression(281,295): 'if (a == X) {}'
  null

KtContainerNode(285,291): 'a == X'
  null

KtBinaryExpression(285,291): 'a == X'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        X -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = a
          isSafeNavigation = false
          type = T
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(285,286): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(287,289): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        X -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = a
          isSafeNavigation = false
          type = T
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(290,291): 'X'
  null

KtContainerNodeForControlStructureBody(293,295): '{}'
  null

KtBlockExpression(293,295): '{}'
  null

KtIfExpression(300,314): 'if (a == Y) {}'
  null

KtContainerNode(304,310): 'a == Y'
  null

KtBinaryExpression(304,310): 'a == Y'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        Y -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = a
          isSafeNavigation = false
          type = T
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(304,305): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(306,308): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        Y -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = a
          isSafeNavigation = false
          type = T
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(309,310): 'Y'
  null

KtContainerNodeForControlStructureBody(312,314): '{}'
  null

KtBlockExpression(312,314): '{}'
  null

KtIfExpression(319,333): 'if (a != X) {}'
  null

KtContainerNode(323,329): 'a != X'
  null

KtBinaryExpression(323,329): 'a != X'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        X -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = a
          isSafeNavigation = false
          type = T
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(323,324): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(325,327): '!='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        X -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = a
          isSafeNavigation = false
          type = T
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(328,329): 'X'
  null

KtContainerNodeForControlStructureBody(331,333): '{}'
  null

KtBlockExpression(331,333): '{}'
  null

KtIfExpression(338,352): 'if (a != Y) {}'
  null

KtContainerNode(342,348): 'a != Y'
  null

KtBinaryExpression(342,348): 'a != Y'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        Y -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = a
          isSafeNavigation = false
          type = T
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(342,343): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(344,346): '!='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        Y -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = a
          isSafeNavigation = false
          type = T
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(347,348): 'Y'
  null

KtContainerNodeForControlStructureBody(350,352): '{}'
  null

KtBlockExpression(350,352): '{}'
  null

KtIfExpression(357,372): 'if (a === X) {}'
  null

KtContainerNode(361,368): 'a === X'
  null

KtBinaryExpression(361,368): 'a === X'
  null

KtNameReferenceExpression(361,362): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(363,366): '==='
  null

KtNameReferenceExpression(367,368): 'X'
  null

KtContainerNodeForControlStructureBody(370,372): '{}'
  null

KtBlockExpression(370,372): '{}'
  null

KtIfExpression(377,392): 'if (a === Y) {}'
  null

KtContainerNode(381,388): 'a === Y'
  null

KtBinaryExpression(381,388): 'a === Y'
  null

KtNameReferenceExpression(381,382): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(383,386): '==='
  null

KtNameReferenceExpression(387,388): 'Y'
  null

KtContainerNodeForControlStructureBody(390,392): '{}'
  null

KtBlockExpression(390,392): '{}'
  null

KtIfExpression(397,412): 'if (a !== X) {}'
  null

KtContainerNode(401,408): 'a !== X'
  null

KtBinaryExpression(401,408): 'a !== X'
  null

KtNameReferenceExpression(401,402): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(403,406): '!=='
  null

KtNameReferenceExpression(407,408): 'X'
  null

KtContainerNodeForControlStructureBody(410,412): '{}'
  null

KtBlockExpression(410,412): '{}'
  null

KtIfExpression(417,432): 'if (a !== Y) {}'
  null

KtContainerNode(421,428): 'a !== Y'
  null

KtBinaryExpression(421,428): 'a !== Y'
  null

KtNameReferenceExpression(421,422): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(423,426): '!=='
  null

KtNameReferenceExpression(427,428): 'Y'
  null

KtContainerNodeForControlStructureBody(430,432): '{}'
  null

KtBlockExpression(430,432): '{}'
  null

KtIfExpression(437,451): 'if (a == L) {}'
  null

KtContainerNode(441,447): 'a == L'
  null

KtBinaryExpression(441,447): 'a == L'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        L -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = a
          isSafeNavigation = false
          type = T
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(441,442): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(443,445): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        L -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = a
          isSafeNavigation = false
          type = T
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(446,447): 'L'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = L
          receiverType = null
          returnType = MySealed.X
          symbol = val L: MySealed.X
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtContainerNodeForControlStructureBody(449,451): '{}'
  null

KtBlockExpression(449,451): '{}'
  null

KtIfExpression(456,476): 'if (a is Derived) {}'
  null

KtContainerNode(460,472): 'a is Derived'
  null

KtIsExpression(460,472): 'a is Derived'
  null

KtNameReferenceExpression(460,461): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(462,464): 'is'
  null

KtTypeReference(465,472): 'Derived'
  null

KtUserType(465,472): 'Derived'
  null

KtNameReferenceExpression(465,472): 'Derived'
  null

KtContainerNodeForControlStructureBody(474,476): '{}'
  null

KtBlockExpression(474,476): '{}'
  null

KtIfExpression(481,505): 'if (id(a) is Derived) {}'
  null

KtContainerNode(485,501): 'id(a) is Derived'
  null

KtIsExpression(485,501): 'id(a) is Derived'
  null

KtCallExpression(485,490): 'id(a)'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        a -> (KaVariableSignature:
          name = x
          receiverType = null
          returnType = T
          symbol = x: X
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = T
          symbol = /id(x: X): X
          valueParameters = [
            KaVariableSignature:
              name = x
              receiverType = null
              returnType = T
              symbol = x: X
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /id
      typeArgumentsMapping = {
        X -> (T)
      }

KtNameReferenceExpression(485,487): 'id'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        a -> (KaVariableSignature:
          name = x
          receiverType = null
          returnType = T
          symbol = x: X
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = T
          symbol = /id(x: X): X
          valueParameters = [
            KaVariableSignature:
              name = x
              receiverType = null
              returnType = T
              symbol = x: X
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /id
      typeArgumentsMapping = {
        X -> (T)
      }

KtValueArgumentList(487,490): '(a)'
  null

KtValueArgument(488,489): 'a'
  null

KtNameReferenceExpression(488,489): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(491,493): 'is'
  null

KtTypeReference(494,501): 'Derived'
  null

KtUserType(494,501): 'Derived'
  null

KtNameReferenceExpression(494,501): 'Derived'
  null

KtContainerNodeForControlStructureBody(503,505): '{}'
  null

KtBlockExpression(503,505): '{}'
  null

KtIfExpression(681,695): 'if (X == a) {}'
  null

KtContainerNode(685,691): 'X == a'
  null

KtBinaryExpression(685,691): 'X == a'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        a -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = X
          isSafeNavigation = false
          type = ERROR CLASS: Unresolved name: X
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(685,686): 'X'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference 'X'.>

KtOperationReferenceExpression(687,689): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        a -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = X
          isSafeNavigation = false
          type = ERROR CLASS: Unresolved name: X
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(690,691): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtContainerNodeForControlStructureBody(693,695): '{}'
  null

KtBlockExpression(693,695): '{}'
  null

KtIfExpression(700,714): 'if (L == a) {}'
  null

KtContainerNode(704,710): 'L == a'
  null

KtBinaryExpression(704,710): 'L == a'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        a -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = L
          isSafeNavigation = false
          type = MySealed.X
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = /MySealed.X.equals(<dispatch receiver>: MySealed.X, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /MySealed.X.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(704,705): 'L'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = L
          receiverType = null
          returnType = MySealed.X
          symbol = val L: MySealed.X
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(706,708): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        a -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = L
          isSafeNavigation = false
          type = MySealed.X
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = /MySealed.X.equals(<dispatch receiver>: MySealed.X, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /MySealed.X.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(709,710): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtContainerNodeForControlStructureBody(712,714): '{}'
  null

KtBlockExpression(712,714): '{}'
  null

KtIfExpression(909,927): 'if (a == id(X)) {}'
  null

KtContainerNode(913,923): 'a == id(X)'
  null

KtBinaryExpression(913,923): 'a == id(X)'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        id(X) -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = a
          isSafeNavigation = false
          type = T
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(913,914): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(915,917): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        id(X) -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = a
          isSafeNavigation = false
          type = T
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtCallExpression(918,923): 'id(X)'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        X -> (KaVariableSignature:
          name = x
          receiverType = null
          returnType = kotlin.Any?
          symbol = x: X
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Any?
          symbol = /id(x: X): X
          valueParameters = [
            KaVariableSignature:
              name = x
              receiverType = null
              returnType = kotlin.Any?
              symbol = x: X
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /id
      typeArgumentsMapping = {
        X -> (kotlin.Any?)
      }

KtNameReferenceExpression(918,920): 'id'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        X -> (KaVariableSignature:
          name = x
          receiverType = null
          returnType = kotlin.Any?
          symbol = x: X
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Any?
          symbol = /id(x: X): X
          valueParameters = [
            KaVariableSignature:
              name = x
              receiverType = null
              returnType = kotlin.Any?
              symbol = x: X
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /id
      typeArgumentsMapping = {
        X -> (kotlin.Any?)
      }

KtValueArgumentList(920,923): '(X)'
  null

KtValueArgument(921,922): 'X'
  null

KtNameReferenceExpression(921,922): 'X'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference 'X'.>

KtContainerNodeForControlStructureBody(925,927): '{}'
  null

KtBlockExpression(925,927): '{}'
  null

KtIfExpression(932,950): 'if (a == id(L)) {}'
  null

KtContainerNode(936,946): 'a == id(L)'
  null

KtBinaryExpression(936,946): 'a == id(L)'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        id(L) -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = a
          isSafeNavigation = false
          type = T
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(936,937): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(938,940): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        id(L) -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = a
          isSafeNavigation = false
          type = T
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtCallExpression(941,946): 'id(L)'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        L -> (KaVariableSignature:
          name = x
          receiverType = null
          returnType = MySealed.X
          symbol = x: X
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MySealed.X
          symbol = /id(x: X): X
          valueParameters = [
            KaVariableSignature:
              name = x
              receiverType = null
              returnType = MySealed.X
              symbol = x: X
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /id
      typeArgumentsMapping = {
        X -> (MySealed.X)
      }

KtNameReferenceExpression(941,943): 'id'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        L -> (KaVariableSignature:
          name = x
          receiverType = null
          returnType = MySealed.X
          symbol = x: X
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MySealed.X
          symbol = /id(x: X): X
          valueParameters = [
            KaVariableSignature:
              name = x
              receiverType = null
              returnType = MySealed.X
              symbol = x: X
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /id
      typeArgumentsMapping = {
        X -> (MySealed.X)
      }

KtValueArgumentList(943,946): '(L)'
  null

KtValueArgument(944,945): 'L'
  null

KtNameReferenceExpression(944,945): 'L'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = L
          receiverType = null
          returnType = MySealed.X
          symbol = val L: MySealed.X
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtContainerNodeForControlStructureBody(948,950): '{}'
  null

KtBlockExpression(948,950): '{}'
  null

KtWhenExpression(956,1010): 'when {'
  null

KtWhenEntry(971,983): 'a == X -> {}'
  null

KtWhenConditionWithExpression(971,977): 'a == X'
  null

KtBinaryExpression(971,977): 'a == X'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        X -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = a
          isSafeNavigation = false
          type = T
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(971,972): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(973,975): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        X -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = a
          isSafeNavigation = false
          type = T
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(976,977): 'X'
  null

KtBlockExpression(981,983): '{}'
  null

KtWhenEntry(992,1004): 'a != Y -> {}'
  null

KtWhenConditionWithExpression(992,998): 'a != Y'
  null

KtBinaryExpression(992,998): 'a != Y'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        Y -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = a
          isSafeNavigation = false
          type = T
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(992,993): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(994,996): '!='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        Y -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = a
          isSafeNavigation = false
          type = T
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(997,998): 'Y'
  null

KtBlockExpression(1002,1004): '{}'
  null

KtWhenExpression(1016,1120): 'when {'
  null

KtWhenEntry(1031,1044): 'a === X -> {}'
  null

KtWhenConditionWithExpression(1031,1038): 'a === X'
  null

KtBinaryExpression(1031,1038): 'a === X'
  null

KtNameReferenceExpression(1031,1032): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(1033,1036): '==='
  null

KtNameReferenceExpression(1037,1038): 'X'
  null

KtBlockExpression(1042,1044): '{}'
  null

KtWhenEntry(1053,1065): 'a == L -> {}'
  null

KtWhenConditionWithExpression(1053,1059): 'a == L'
  null

KtBinaryExpression(1053,1059): 'a == L'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        L -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = a
          isSafeNavigation = false
          type = T
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1053,1054): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(1055,1057): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        L -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = a
          isSafeNavigation = false
          type = T
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Any.equals(<dispatch receiver>: kotlin.Any, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Any.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1058,1059): 'L'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = L
          receiverType = null
          returnType = MySealed.X
          symbol = val L: MySealed.X
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtBlockExpression(1063,1065): '{}'
  null

KtWhenEntry(1074,1092): 'a is Derived -> {}'
  null

KtWhenConditionWithExpression(1074,1086): 'a is Derived'
  null

KtIsExpression(1074,1086): 'a is Derived'
  null

KtNameReferenceExpression(1074,1075): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(1076,1078): 'is'
  null

KtTypeReference(1079,1086): 'Derived'
  null

KtUserType(1079,1086): 'Derived'
  null

KtNameReferenceExpression(1079,1086): 'Derived'
  null

KtBlockExpression(1090,1092): '{}'
  null

KtWhenEntry(1101,1114): 'a !== Y -> {}'
  null

KtWhenConditionWithExpression(1101,1108): 'a !== Y'
  null

KtBinaryExpression(1101,1108): 'a !== Y'
  null

KtNameReferenceExpression(1101,1102): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(1103,1106): '!=='
  null

KtNameReferenceExpression(1107,1108): 'Y'
  null

KtBlockExpression(1112,1114): '{}'
  null

KtWhenExpression(1125,1201): 'when (a) {'
  null

KtNameReferenceExpression(1131,1132): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtWhenEntry(1144,1151): 'X -> {}'
  null

KtWhenConditionWithExpression(1144,1145): 'X'
  null

KtNameReferenceExpression(1144,1145): 'X'
  null

KtBlockExpression(1149,1151): '{}'
  null

KtWhenEntry(1160,1170): 'Y, L -> {}'
  null

KtWhenConditionWithExpression(1160,1161): 'Y'
  null

KtNameReferenceExpression(1160,1161): 'Y'
  null

KtWhenConditionWithExpression(1163,1164): 'L'
  null

KtNameReferenceExpression(1163,1164): 'L'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = L
          receiverType = null
          returnType = MySealed.X
          symbol = val L: MySealed.X
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtBlockExpression(1168,1170): '{}'
  null

KtWhenEntry(1179,1195): 'is Derived -> {}'
  null

KtWhenConditionIsPattern(1179,1189): 'is Derived'
  null

KtTypeReference(1182,1189): 'Derived'
  null

KtUserType(1182,1189): 'Derived'
  null

KtNameReferenceExpression(1182,1189): 'Derived'
  null

KtBlockExpression(1193,1195): '{}'
  null

KtWhenExpression(1207,1291): 'when (val c = a) {'
  null

KtProperty(1213,1222): 'val c = a'
  null

KtNameReferenceExpression(1221,1222): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtWhenEntry(1234,1241): 'X -> {}'
  null

KtWhenConditionWithExpression(1234,1235): 'X'
  null

KtNameReferenceExpression(1234,1235): 'X'
  null

KtBlockExpression(1239,1241): '{}'
  null

KtWhenEntry(1250,1260): 'Y, L -> {}'
  null

KtWhenConditionWithExpression(1250,1251): 'Y'
  null

KtNameReferenceExpression(1250,1251): 'Y'
  null

KtWhenConditionWithExpression(1253,1254): 'L'
  null

KtNameReferenceExpression(1253,1254): 'L'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = L
          receiverType = null
          returnType = MySealed.X
          symbol = val L: MySealed.X
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtBlockExpression(1258,1260): '{}'
  null

KtWhenEntry(1269,1285): 'is Derived -> {}'
  null

KtWhenConditionIsPattern(1269,1279): 'is Derived'
  null

KtTypeReference(1272,1279): 'Derived'
  null

KtUserType(1272,1279): 'Derived'
  null

KtNameReferenceExpression(1272,1279): 'Derived'
  null

KtBlockExpression(1283,1285): '{}'
  null

KtWhenExpression(1297,1379): 'when (a) {'
  null

KtNameReferenceExpression(1303,1304): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtWhenEntry(1316,1327): 'id(X) -> {}'
  null

KtWhenConditionWithExpression(1316,1321): 'id(X)'
  null

KtCallExpression(1316,1321): 'id(X)'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        X -> (KaVariableSignature:
          name = x
          receiverType = null
          returnType = kotlin.Any?
          symbol = x: X
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Any?
          symbol = /id(x: X): X
          valueParameters = [
            KaVariableSignature:
              name = x
              receiverType = null
              returnType = kotlin.Any?
              symbol = x: X
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /id
      typeArgumentsMapping = {
        X -> (kotlin.Any?)
      }

KtNameReferenceExpression(1316,1318): 'id'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        X -> (KaVariableSignature:
          name = x
          receiverType = null
          returnType = kotlin.Any?
          symbol = x: X
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Any?
          symbol = /id(x: X): X
          valueParameters = [
            KaVariableSignature:
              name = x
              receiverType = null
              returnType = kotlin.Any?
              symbol = x: X
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /id
      typeArgumentsMapping = {
        X -> (kotlin.Any?)
      }

KtValueArgumentList(1318,1321): '(X)'
  null

KtValueArgument(1319,1320): 'X'
  null

KtNameReferenceExpression(1319,1320): 'X'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference 'X'.>

KtBlockExpression(1325,1327): '{}'
  null

KtWhenEntry(1336,1354): 'id(Y), id(L) -> {}'
  null

KtWhenConditionWithExpression(1336,1341): 'id(Y)'
  null

KtCallExpression(1336,1341): 'id(Y)'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        Y -> (KaVariableSignature:
          name = x
          receiverType = null
          returnType = kotlin.Any?
          symbol = x: X
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Any?
          symbol = /id(x: X): X
          valueParameters = [
            KaVariableSignature:
              name = x
              receiverType = null
              returnType = kotlin.Any?
              symbol = x: X
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /id
      typeArgumentsMapping = {
        X -> (kotlin.Any?)
      }

KtNameReferenceExpression(1336,1338): 'id'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        Y -> (KaVariableSignature:
          name = x
          receiverType = null
          returnType = kotlin.Any?
          symbol = x: X
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Any?
          symbol = /id(x: X): X
          valueParameters = [
            KaVariableSignature:
              name = x
              receiverType = null
              returnType = kotlin.Any?
              symbol = x: X
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /id
      typeArgumentsMapping = {
        X -> (kotlin.Any?)
      }

KtValueArgumentList(1338,1341): '(Y)'
  null

KtValueArgument(1339,1340): 'Y'
  null

KtNameReferenceExpression(1339,1340): 'Y'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference 'Y'.>

KtWhenConditionWithExpression(1343,1348): 'id(L)'
  null

KtCallExpression(1343,1348): 'id(L)'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        L -> (KaVariableSignature:
          name = x
          receiverType = null
          returnType = MySealed.X
          symbol = x: X
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MySealed.X
          symbol = /id(x: X): X
          valueParameters = [
            KaVariableSignature:
              name = x
              receiverType = null
              returnType = MySealed.X
              symbol = x: X
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /id
      typeArgumentsMapping = {
        X -> (MySealed.X)
      }

KtNameReferenceExpression(1343,1345): 'id'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        L -> (KaVariableSignature:
          name = x
          receiverType = null
          returnType = MySealed.X
          symbol = x: X
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MySealed.X
          symbol = /id(x: X): X
          valueParameters = [
            KaVariableSignature:
              name = x
              receiverType = null
              returnType = MySealed.X
              symbol = x: X
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /id
      typeArgumentsMapping = {
        X -> (MySealed.X)
      }

KtValueArgumentList(1345,1348): '(L)'
  null

KtValueArgument(1346,1347): 'L'
  null

KtNameReferenceExpression(1346,1347): 'L'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = L
          receiverType = null
          returnType = MySealed.X
          symbol = val L: MySealed.X
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtBlockExpression(1352,1354): '{}'
  null

KtWhenEntry(1363,1373): 'else -> {}'
  null

KtBlockExpression(1371,1373): '{}'
  null

KtWhenExpression(1385,1475): 'when (val c = a) {'
  null

KtProperty(1391,1400): 'val c = a'
  null

KtNameReferenceExpression(1399,1400): 'a'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = a
          receiverType = null
          returnType = T
          symbol = a: T
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtWhenEntry(1412,1423): 'id(X) -> {}'
  null

KtWhenConditionWithExpression(1412,1417): 'id(X)'
  null

KtCallExpression(1412,1417): 'id(X)'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        X -> (KaVariableSignature:
          name = x
          receiverType = null
          returnType = kotlin.Any?
          symbol = x: X
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Any?
          symbol = /id(x: X): X
          valueParameters = [
            KaVariableSignature:
              name = x
              receiverType = null
              returnType = kotlin.Any?
              symbol = x: X
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /id
      typeArgumentsMapping = {
        X -> (kotlin.Any?)
      }

KtNameReferenceExpression(1412,1414): 'id'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        X -> (KaVariableSignature:
          name = x
          receiverType = null
          returnType = kotlin.Any?
          symbol = x: X
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Any?
          symbol = /id(x: X): X
          valueParameters = [
            KaVariableSignature:
              name = x
              receiverType = null
              returnType = kotlin.Any?
              symbol = x: X
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /id
      typeArgumentsMapping = {
        X -> (kotlin.Any?)
      }

KtValueArgumentList(1414,1417): '(X)'
  null

KtValueArgument(1415,1416): 'X'
  null

KtNameReferenceExpression(1415,1416): 'X'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference 'X'.>

KtBlockExpression(1421,1423): '{}'
  null

KtWhenEntry(1432,1450): 'id(Y), id(L) -> {}'
  null

KtWhenConditionWithExpression(1432,1437): 'id(Y)'
  null

KtCallExpression(1432,1437): 'id(Y)'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        Y -> (KaVariableSignature:
          name = x
          receiverType = null
          returnType = kotlin.Any?
          symbol = x: X
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Any?
          symbol = /id(x: X): X
          valueParameters = [
            KaVariableSignature:
              name = x
              receiverType = null
              returnType = kotlin.Any?
              symbol = x: X
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /id
      typeArgumentsMapping = {
        X -> (kotlin.Any?)
      }

KtNameReferenceExpression(1432,1434): 'id'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        Y -> (KaVariableSignature:
          name = x
          receiverType = null
          returnType = kotlin.Any?
          symbol = x: X
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Any?
          symbol = /id(x: X): X
          valueParameters = [
            KaVariableSignature:
              name = x
              receiverType = null
              returnType = kotlin.Any?
              symbol = x: X
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /id
      typeArgumentsMapping = {
        X -> (kotlin.Any?)
      }

KtValueArgumentList(1434,1437): '(Y)'
  null

KtValueArgument(1435,1436): 'Y'
  null

KtNameReferenceExpression(1435,1436): 'Y'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference 'Y'.>

KtWhenConditionWithExpression(1439,1444): 'id(L)'
  null

KtCallExpression(1439,1444): 'id(L)'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        L -> (KaVariableSignature:
          name = x
          receiverType = null
          returnType = MySealed.X
          symbol = x: X
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MySealed.X
          symbol = /id(x: X): X
          valueParameters = [
            KaVariableSignature:
              name = x
              receiverType = null
              returnType = MySealed.X
              symbol = x: X
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /id
      typeArgumentsMapping = {
        X -> (MySealed.X)
      }

KtNameReferenceExpression(1439,1441): 'id'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        L -> (KaVariableSignature:
          name = x
          receiverType = null
          returnType = MySealed.X
          symbol = x: X
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MySealed.X
          symbol = /id(x: X): X
          valueParameters = [
            KaVariableSignature:
              name = x
              receiverType = null
              returnType = MySealed.X
              symbol = x: X
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /id
      typeArgumentsMapping = {
        X -> (MySealed.X)
      }

KtValueArgumentList(1441,1444): '(L)'
  null

KtValueArgument(1442,1443): 'L'
  null

KtNameReferenceExpression(1442,1443): 'L'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = L
          receiverType = null
          returnType = MySealed.X
          symbol = val L: MySealed.X
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtBlockExpression(1448,1450): '{}'
  null

KtWhenEntry(1459,1469): 'else -> {}'
  null

KtBlockExpression(1467,1469): '{}'
  null