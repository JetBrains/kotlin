FILE: kt41989.kt
    public abstract interface A : R|kotlin/Any| {
    }
    public abstract interface B : R|kotlin/Any| {
        public open fun R|A|.withBottomBorder(): R|A| {
            ^withBottomBorder this@R|/B.withBottomBorder|
        }

    }
    public abstract interface C : R|B| {
        public open val lineCellStyle: R|A.() -> kotlin/Unit|
            public get(): R|A.() -> kotlin/Unit| {
                ^ when () {
                    R|/cond|() ->  {
                        fun R|A|.<anonymous>(): R|kotlin/Unit| {
                            (this@R|/C|, this@R|special/anonymous|).R|/B.withBottomBorder|()
                        }

                    }
                    else ->  {
                        Null(null)
                    }
                }

            }

    }
    public final fun cond(): R|kotlin/Boolean| {
        ^cond Boolean(true)
    }
