// -- Module: <m1-common> --
package

public final expect class Foo {
    public constructor Foo()
    public expect final val foo: kotlin.String
    public final expect fun bar(/*0*/ x: kotlin.Int): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}


// -- Module: <m2-jvm> --
package

public final actual class Foo {
    public constructor Foo()
    public actual final val foo: kotlin.String = "JVM"
    public final actual fun bar(/*0*/ x: kotlin.Int): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}


// -- Module: <m3-js> --
package

public final actual class Foo {
    public constructor Foo()
    public actual final val foo: kotlin.String = "JS"
    public final actual fun bar(/*0*/ x: kotlin.Int): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
