KtFile: fullPositionBasedDestructuring.kt
  PACKAGE_DIRECTIVE
    <empty list>
  IMPORT_LIST
    <empty list>
  PsiComment(EOL_COMMENT)('// COMPILATION_ERRORS')
  PsiWhiteSpace('\n\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('declaration')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      DESTRUCTURING_DECLARATION
        PsiElement(LBRACKET)('[')
        DESTRUCTURING_DECLARATION_ENTRY
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          PsiElement(IDENTIFIER)('first')
        PsiElement(COMMA)(',')
        PsiWhiteSpace(' ')
        DESTRUCTURING_DECLARATION_ENTRY
          PsiElement(var)('var')
          PsiWhiteSpace(' ')
          PsiElement(IDENTIFIER)('second')
        PsiElement(COMMA)(',')
        PsiElement(RBRACKET)(']')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('x')
      PsiWhiteSpace('\n    ')
      DESTRUCTURING_DECLARATION
        PsiElement(LBRACKET)('[')
        DESTRUCTURING_DECLARATION_ENTRY
          PsiElement(var)('var')
          PsiWhiteSpace(' ')
          PsiElement(IDENTIFIER)('first')
        PsiElement(RBRACKET)(']')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('x')
      PsiWhiteSpace('\n    ')
      DESTRUCTURING_DECLARATION
        PsiElement(LBRACKET)('[')
        DESTRUCTURING_DECLARATION_ENTRY
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          PsiElement(IDENTIFIER)('first')
          PsiElement(COLON)(':')
          PsiWhiteSpace(' ')
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('String')
        PsiElement(RBRACKET)(']')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('x')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('loop')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      FOR
        PsiElement(for)('for')
        PsiWhiteSpace(' ')
        PsiElement(LPAR)('(')
        VALUE_PARAMETER
          DESTRUCTURING_DECLARATION
            PsiElement(LBRACKET)('[')
            DESTRUCTURING_DECLARATION_ENTRY
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              PsiElement(IDENTIFIER)('first')
            PsiElement(COMMA)(',')
            PsiWhiteSpace(' ')
            DESTRUCTURING_DECLARATION_ENTRY
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              PsiElement(IDENTIFIER)('second')
            PsiElement(COMMA)(',')
            PsiElement(RBRACKET)(']')
        PsiWhiteSpace(' ')
        PsiElement(in)('in')
        PsiWhiteSpace(' ')
        LOOP_RANGE
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('x')
        PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        BODY
          BLOCK
            PsiElement(LBRACE)('{')
            PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      FOR
        PsiElement(for)('for')
        PsiWhiteSpace(' ')
        PsiElement(LPAR)('(')
        VALUE_PARAMETER
          DESTRUCTURING_DECLARATION
            PsiElement(LBRACKET)('[')
            DESTRUCTURING_DECLARATION_ENTRY
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              PsiElement(IDENTIFIER)('first')
            PsiElement(RBRACKET)(']')
        PsiWhiteSpace(' ')
        PsiElement(in)('in')
        PsiWhiteSpace(' ')
        LOOP_RANGE
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('x')
        PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        BODY
          BLOCK
            PsiElement(LBRACE)('{')
            PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      FOR
        PsiElement(for)('for')
        PsiWhiteSpace(' ')
        PsiElement(LPAR)('(')
        VALUE_PARAMETER
          DESTRUCTURING_DECLARATION
            PsiElement(LBRACKET)('[')
            DESTRUCTURING_DECLARATION_ENTRY
              PsiElement(val)('val')
              PsiWhiteSpace(' ')
              PsiElement(IDENTIFIER)('first')
              PsiElement(COLON)(':')
              PsiWhiteSpace(' ')
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('String')
            PsiElement(RBRACKET)(']')
        PsiWhiteSpace(' ')
        PsiElement(in)('in')
        PsiWhiteSpace(' ')
        LOOP_RANGE
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('x')
        PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        BODY
          BLOCK
            PsiElement(LBRACE)('{')
            PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('lambda')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('foo')
        PsiWhiteSpace(' ')
        LAMBDA_ARGUMENT
          LAMBDA_EXPRESSION
            FUNCTION_LITERAL
              PsiElement(LBRACE)('{')
              PsiWhiteSpace(' ')
              VALUE_PARAMETER_LIST
                VALUE_PARAMETER
                  DESTRUCTURING_DECLARATION
                    PsiElement(LBRACKET)('[')
                    DESTRUCTURING_DECLARATION_ENTRY
                      PsiElement(val)('val')
                      PsiWhiteSpace(' ')
                      PsiElement(IDENTIFIER)('first')
                    PsiElement(COMMA)(',')
                    PsiWhiteSpace(' ')
                    DESTRUCTURING_DECLARATION_ENTRY
                      PsiElement(val)('val')
                      PsiWhiteSpace(' ')
                      PsiElement(IDENTIFIER)('second')
                    PsiElement(COMMA)(',')
                    PsiElement(RBRACKET)(']')
              PsiWhiteSpace(' ')
              PsiElement(ARROW)('->')
              PsiWhiteSpace(' ')
              BLOCK
                <empty list>
              PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('foo')
        PsiWhiteSpace(' ')
        LAMBDA_ARGUMENT
          LAMBDA_EXPRESSION
            FUNCTION_LITERAL
              PsiElement(LBRACE)('{')
              PsiWhiteSpace(' ')
              VALUE_PARAMETER_LIST
                VALUE_PARAMETER
                  DESTRUCTURING_DECLARATION
                    PsiElement(LBRACKET)('[')
                    DESTRUCTURING_DECLARATION_ENTRY
                      PsiElement(val)('val')
                      PsiWhiteSpace(' ')
                      PsiElement(IDENTIFIER)('first')
                    PsiElement(RBRACKET)(']')
              PsiWhiteSpace(' ')
              PsiElement(ARROW)('->')
              PsiWhiteSpace(' ')
              BLOCK
                <empty list>
              PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('foo')
        PsiWhiteSpace(' ')
        LAMBDA_ARGUMENT
          LAMBDA_EXPRESSION
            FUNCTION_LITERAL
              PsiElement(LBRACE)('{')
              PsiWhiteSpace(' ')
              VALUE_PARAMETER_LIST
                VALUE_PARAMETER
                  DESTRUCTURING_DECLARATION
                    PsiElement(LBRACKET)('[')
                    DESTRUCTURING_DECLARATION_ENTRY
                      PsiElement(val)('val')
                      PsiWhiteSpace(' ')
                      PsiElement(IDENTIFIER)('first')
                      PsiElement(COLON)(':')
                      PsiWhiteSpace(' ')
                      TYPE_REFERENCE
                        USER_TYPE
                          REFERENCE_EXPRESSION
                            PsiElement(IDENTIFIER)('String')
                    PsiElement(RBRACKET)(']')
              PsiWhiteSpace(' ')
              PsiElement(ARROW)('->')
              PsiWhiteSpace(' ')
              BLOCK
                <empty list>
              PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')