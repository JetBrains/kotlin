// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: js/js.config/src/js.proto
// Protobuf Java Version: 4.29.3

package org.jetbrains.kotlin.metadata.js;

public final class JsProtoBuf {
  private JsProtoBuf() {}
  public static void registerAllExtensions(
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite registry) {
    registry.add(org.jetbrains.kotlin.metadata.js.JsProtoBuf.packageFqName);
    registry.add(org.jetbrains.kotlin.metadata.js.JsProtoBuf.classAnnotation);
    registry.add(org.jetbrains.kotlin.metadata.js.JsProtoBuf.classContainingFileId);
    registry.add(org.jetbrains.kotlin.metadata.js.JsProtoBuf.constructorAnnotation);
    registry.add(org.jetbrains.kotlin.metadata.js.JsProtoBuf.functionAnnotation);
    registry.add(org.jetbrains.kotlin.metadata.js.JsProtoBuf.functionContainingFileId);
    registry.add(org.jetbrains.kotlin.metadata.js.JsProtoBuf.propertyAnnotation);
    registry.add(org.jetbrains.kotlin.metadata.js.JsProtoBuf.propertyGetterAnnotation);
    registry.add(org.jetbrains.kotlin.metadata.js.JsProtoBuf.propertySetterAnnotation);
    registry.add(org.jetbrains.kotlin.metadata.js.JsProtoBuf.compileTimeValue);
    registry.add(org.jetbrains.kotlin.metadata.js.JsProtoBuf.propertyContainingFileId);
    registry.add(org.jetbrains.kotlin.metadata.js.JsProtoBuf.enumEntryAnnotation);
    registry.add(org.jetbrains.kotlin.metadata.js.JsProtoBuf.parameterAnnotation);
    registry.add(org.jetbrains.kotlin.metadata.js.JsProtoBuf.typeAnnotation);
    registry.add(org.jetbrains.kotlin.metadata.js.JsProtoBuf.typeParameterAnnotation);
    registry.add(org.jetbrains.kotlin.metadata.js.JsProtoBuf.packageFragmentFiles);
  }
  public interface HeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.metadata.js.Header)
      org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *
     * preRelease
     * </pre>
     *
     * <code>int32 flags = 1;</code>
     * @return Whether the flags field is set.
     */
    boolean hasFlags();
    /**
     * <pre>
     *
     * preRelease
     * </pre>
     *
     * <code>int32 flags = 1;</code>
     * @return The flags.
     */
    int getFlags();

    /**
     * <pre>
     * (patch &lt;&lt; 16) + (minor &lt;&lt; 8) + major
     * </pre>
     *
     * <code>int32 js_code_binary_version = 2 [default = 1];</code>
     * @return Whether the jsCodeBinaryVersion field is set.
     */
    boolean hasJsCodeBinaryVersion();
    /**
     * <pre>
     * (patch &lt;&lt; 16) + (minor &lt;&lt; 8) + major
     * </pre>
     *
     * <code>int32 js_code_binary_version = 2 [default = 1];</code>
     * @return The jsCodeBinaryVersion.
     */
    int getJsCodeBinaryVersion();

    /**
     * <code>string package_fq_name = 3;</code>
     * @return Whether the packageFqName field is set.
     */
    boolean hasPackageFqName();
    /**
     * <code>string package_fq_name = 3;</code>
     * @return The packageFqName.
     */
    java.lang.String getPackageFqName();
    /**
     * <code>string package_fq_name = 3;</code>
     * @return The bytes for packageFqName.
     */
    org.jetbrains.kotlin.protobuf.ByteString
        getPackageFqNameBytes();

    /**
     * <code>.org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
     * @return Whether the strings field is set.
     */
    boolean hasStrings();
    /**
     * <code>.org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
     * @return The strings.
     */
    org.jetbrains.kotlin.metadata.ProtoBuf.StringTable getStrings();

    /**
     * <code>.org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
     * @return Whether the qualifiedNames field is set.
     */
    boolean hasQualifiedNames();
    /**
     * <code>.org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
     * @return The qualifiedNames.
     */
    org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable getQualifiedNames();

    /**
     * <pre>
     * Annotations on the whole module
     * </pre>
     *
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     */
    java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> 
        getAnnotationList();
    /**
     * <pre>
     * Annotations on the whole module
     * </pre>
     *
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     */
    org.jetbrains.kotlin.metadata.ProtoBuf.Annotation getAnnotation(int index);
    /**
     * <pre>
     * Annotations on the whole module
     * </pre>
     *
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     */
    int getAnnotationCount();
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.metadata.js.Header}
   */
  public  static final class Header extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite<
          Header, Header.Builder> implements
      // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.metadata.js.Header)
      HeaderOrBuilder {
    private Header() {
      jsCodeBinaryVersion_ = 1;
      packageFqName_ = "";
      annotation_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int FLAGS_FIELD_NUMBER = 1;
    private int flags_;
    /**
     * <pre>
     *
     * preRelease
     * </pre>
     *
     * <code>int32 flags = 1;</code>
     * @return Whether the flags field is set.
     */
    @java.lang.Override
    public boolean hasFlags() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *
     * preRelease
     * </pre>
     *
     * <code>int32 flags = 1;</code>
     * @return The flags.
     */
    @java.lang.Override
    public int getFlags() {
      return flags_;
    }
    /**
     * <pre>
     *
     * preRelease
     * </pre>
     *
     * <code>int32 flags = 1;</code>
     * @param value The flags to set.
     */
    private void setFlags(int value) {
      bitField0_ |= 0x00000001;
      flags_ = value;
    }
    /**
     * <pre>
     *
     * preRelease
     * </pre>
     *
     * <code>int32 flags = 1;</code>
     */
    private void clearFlags() {
      bitField0_ = (bitField0_ & ~0x00000001);
      flags_ = 0;
    }

    public static final int JS_CODE_BINARY_VERSION_FIELD_NUMBER = 2;
    private int jsCodeBinaryVersion_;
    /**
     * <pre>
     * (patch &lt;&lt; 16) + (minor &lt;&lt; 8) + major
     * </pre>
     *
     * <code>int32 js_code_binary_version = 2 [default = 1];</code>
     * @return Whether the jsCodeBinaryVersion field is set.
     */
    @java.lang.Override
    public boolean hasJsCodeBinaryVersion() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * (patch &lt;&lt; 16) + (minor &lt;&lt; 8) + major
     * </pre>
     *
     * <code>int32 js_code_binary_version = 2 [default = 1];</code>
     * @return The jsCodeBinaryVersion.
     */
    @java.lang.Override
    public int getJsCodeBinaryVersion() {
      return jsCodeBinaryVersion_;
    }
    /**
     * <pre>
     * (patch &lt;&lt; 16) + (minor &lt;&lt; 8) + major
     * </pre>
     *
     * <code>int32 js_code_binary_version = 2 [default = 1];</code>
     * @param value The jsCodeBinaryVersion to set.
     */
    private void setJsCodeBinaryVersion(int value) {
      bitField0_ |= 0x00000002;
      jsCodeBinaryVersion_ = value;
    }
    /**
     * <pre>
     * (patch &lt;&lt; 16) + (minor &lt;&lt; 8) + major
     * </pre>
     *
     * <code>int32 js_code_binary_version = 2 [default = 1];</code>
     */
    private void clearJsCodeBinaryVersion() {
      bitField0_ = (bitField0_ & ~0x00000002);
      jsCodeBinaryVersion_ = 1;
    }

    public static final int PACKAGE_FQ_NAME_FIELD_NUMBER = 3;
    private java.lang.String packageFqName_;
    /**
     * <code>string package_fq_name = 3;</code>
     * @return Whether the packageFqName field is set.
     */
    @java.lang.Override
    public boolean hasPackageFqName() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>string package_fq_name = 3;</code>
     * @return The packageFqName.
     */
    @java.lang.Override
    public java.lang.String getPackageFqName() {
      return packageFqName_;
    }
    /**
     * <code>string package_fq_name = 3;</code>
     * @return The bytes for packageFqName.
     */
    @java.lang.Override
    public org.jetbrains.kotlin.protobuf.ByteString
        getPackageFqNameBytes() {
      return org.jetbrains.kotlin.protobuf.ByteString.copyFromUtf8(packageFqName_);
    }
    /**
     * <code>string package_fq_name = 3;</code>
     * @param value The packageFqName to set.
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void setPackageFqName(
        java.lang.String value) {
      value.getClass();  // minimal bytecode null check
      bitField0_ |= 0x00000004;
      packageFqName_ = value;
    }
    /**
     * <code>string package_fq_name = 3;</code>
     */
    private void clearPackageFqName() {
      bitField0_ = (bitField0_ & ~0x00000004);
      packageFqName_ = getDefaultInstance().getPackageFqName();
    }
    /**
     * <code>string package_fq_name = 3;</code>
     * @param value The bytes for packageFqName to set.
     */
    private void setPackageFqNameBytes(
        org.jetbrains.kotlin.protobuf.ByteString value) {
      packageFqName_ = value.toStringUtf8();
      bitField0_ |= 0x00000004;
    }

    public static final int STRINGS_FIELD_NUMBER = 4;
    private org.jetbrains.kotlin.metadata.ProtoBuf.StringTable strings_;
    /**
     * <code>.org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
     */
    @java.lang.Override
    public boolean hasStrings() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>.org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.metadata.ProtoBuf.StringTable getStrings() {
      return strings_ == null ? org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.getDefaultInstance() : strings_;
    }
    /**
     * <code>.org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void setStrings(org.jetbrains.kotlin.metadata.ProtoBuf.StringTable value) {
      value.getClass();  // minimal bytecode null check
      strings_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <code>.org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
    private void mergeStrings(org.jetbrains.kotlin.metadata.ProtoBuf.StringTable value) {
      value.getClass();  // minimal bytecode null check
      if (strings_ != null &&
          strings_ != org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.getDefaultInstance()) {
        strings_ =
          org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.newBuilder(strings_).mergeFrom(value).buildPartial();
      } else {
        strings_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>.org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
     */
    private void clearStrings() {  strings_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int QUALIFIED_NAMES_FIELD_NUMBER = 5;
    private org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable qualifiedNames_;
    /**
     * <code>.org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
     */
    @java.lang.Override
    public boolean hasQualifiedNames() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>.org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable getQualifiedNames() {
      return qualifiedNames_ == null ? org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.getDefaultInstance() : qualifiedNames_;
    }
    /**
     * <code>.org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void setQualifiedNames(org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable value) {
      value.getClass();  // minimal bytecode null check
      qualifiedNames_ = value;
      bitField0_ |= 0x00000010;
      }
    /**
     * <code>.org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
    private void mergeQualifiedNames(org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable value) {
      value.getClass();  // minimal bytecode null check
      if (qualifiedNames_ != null &&
          qualifiedNames_ != org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.getDefaultInstance()) {
        qualifiedNames_ =
          org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.newBuilder(qualifiedNames_).mergeFrom(value).buildPartial();
      } else {
        qualifiedNames_ = value;
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <code>.org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
     */
    private void clearQualifiedNames() {  qualifiedNames_ = null;
      bitField0_ = (bitField0_ & ~0x00000010);
    }

    public static final int ANNOTATION_FIELD_NUMBER = 6;
    private org.jetbrains.kotlin.protobuf.Internal.ProtobufList<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> annotation_;
    /**
     * <pre>
     * Annotations on the whole module
     * </pre>
     *
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     */
    @java.lang.Override
    public java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> getAnnotationList() {
      return annotation_;
    }
    /**
     * <pre>
     * Annotations on the whole module
     * </pre>
     *
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     */
    public java.util.List<? extends org.jetbrains.kotlin.metadata.ProtoBuf.AnnotationOrBuilder> 
        getAnnotationOrBuilderList() {
      return annotation_;
    }
    /**
     * <pre>
     * Annotations on the whole module
     * </pre>
     *
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     */
    @java.lang.Override
    public int getAnnotationCount() {
      return annotation_.size();
    }
    /**
     * <pre>
     * Annotations on the whole module
     * </pre>
     *
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.metadata.ProtoBuf.Annotation getAnnotation(int index) {
      return annotation_.get(index);
    }
    /**
     * <pre>
     * Annotations on the whole module
     * </pre>
     *
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     */
    public org.jetbrains.kotlin.metadata.ProtoBuf.AnnotationOrBuilder getAnnotationOrBuilder(
        int index) {
      return annotation_.get(index);
    }
    private void ensureAnnotationIsMutable() {
      org.jetbrains.kotlin.protobuf.Internal.ProtobufList<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> tmp = annotation_;
      if (!tmp.isModifiable()) {
        annotation_ =
            org.jetbrains.kotlin.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * Annotations on the whole module
     * </pre>
     *
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void setAnnotation(
        int index, org.jetbrains.kotlin.metadata.ProtoBuf.Annotation value) {
      value.getClass();  // minimal bytecode null check
      ensureAnnotationIsMutable();
      annotation_.set(index, value);
    }
    /**
     * <pre>
     * Annotations on the whole module
     * </pre>
     *
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void addAnnotation(org.jetbrains.kotlin.metadata.ProtoBuf.Annotation value) {
      value.getClass();  // minimal bytecode null check
      ensureAnnotationIsMutable();
      annotation_.add(value);
    }
    /**
     * <pre>
     * Annotations on the whole module
     * </pre>
     *
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void addAnnotation(
        int index, org.jetbrains.kotlin.metadata.ProtoBuf.Annotation value) {
      value.getClass();  // minimal bytecode null check
      ensureAnnotationIsMutable();
      annotation_.add(index, value);
    }
    /**
     * <pre>
     * Annotations on the whole module
     * </pre>
     *
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     */
    private void addAllAnnotation(
        java.lang.Iterable<? extends org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> values) {
      ensureAnnotationIsMutable();
      org.jetbrains.kotlin.protobuf.AbstractMessageLite.addAll(
          values, annotation_);
    }
    /**
     * <pre>
     * Annotations on the whole module
     * </pre>
     *
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     */
    private void clearAnnotation() {
      annotation_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Annotations on the whole module
     * </pre>
     *
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
     */
    private void removeAnnotation(int index) {
      ensureAnnotationIsMutable();
      annotation_.remove(index);
    }

    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header parseFrom(
        java.nio.ByteBuffer data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header parseFrom(
        java.nio.ByteBuffer data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header parseFrom(byte[] data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header parseFrom(
        byte[] data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header parseFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header parseDelimitedFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code org.jetbrains.kotlin.metadata.js.Header}
     */
    public static final class Builder extends
        org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
          org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header, Builder> implements
        // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.metadata.js.Header)
        org.jetbrains.kotlin.metadata.js.JsProtoBuf.HeaderOrBuilder {
      // Construct using org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *
       * preRelease
       * </pre>
       *
       * <code>int32 flags = 1;</code>
       * @return Whether the flags field is set.
       */
      @java.lang.Override
      public boolean hasFlags() {
        return instance.hasFlags();
      }
      /**
       * <pre>
       *
       * preRelease
       * </pre>
       *
       * <code>int32 flags = 1;</code>
       * @return The flags.
       */
      @java.lang.Override
      public int getFlags() {
        return instance.getFlags();
      }
      /**
       * <pre>
       *
       * preRelease
       * </pre>
       *
       * <code>int32 flags = 1;</code>
       * @param value The flags to set.
       * @return This builder for chaining.
       */
      public Builder setFlags(int value) {
        copyOnWrite();
        instance.setFlags(value);
        return this;
      }
      /**
       * <pre>
       *
       * preRelease
       * </pre>
       *
       * <code>int32 flags = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFlags() {
        copyOnWrite();
        instance.clearFlags();
        return this;
      }

      /**
       * <pre>
       * (patch &lt;&lt; 16) + (minor &lt;&lt; 8) + major
       * </pre>
       *
       * <code>int32 js_code_binary_version = 2 [default = 1];</code>
       * @return Whether the jsCodeBinaryVersion field is set.
       */
      @java.lang.Override
      public boolean hasJsCodeBinaryVersion() {
        return instance.hasJsCodeBinaryVersion();
      }
      /**
       * <pre>
       * (patch &lt;&lt; 16) + (minor &lt;&lt; 8) + major
       * </pre>
       *
       * <code>int32 js_code_binary_version = 2 [default = 1];</code>
       * @return The jsCodeBinaryVersion.
       */
      @java.lang.Override
      public int getJsCodeBinaryVersion() {
        return instance.getJsCodeBinaryVersion();
      }
      /**
       * <pre>
       * (patch &lt;&lt; 16) + (minor &lt;&lt; 8) + major
       * </pre>
       *
       * <code>int32 js_code_binary_version = 2 [default = 1];</code>
       * @param value The jsCodeBinaryVersion to set.
       * @return This builder for chaining.
       */
      public Builder setJsCodeBinaryVersion(int value) {
        copyOnWrite();
        instance.setJsCodeBinaryVersion(value);
        return this;
      }
      /**
       * <pre>
       * (patch &lt;&lt; 16) + (minor &lt;&lt; 8) + major
       * </pre>
       *
       * <code>int32 js_code_binary_version = 2 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearJsCodeBinaryVersion() {
        copyOnWrite();
        instance.clearJsCodeBinaryVersion();
        return this;
      }

      /**
       * <code>string package_fq_name = 3;</code>
       * @return Whether the packageFqName field is set.
       */
      @java.lang.Override
      public boolean hasPackageFqName() {
        return instance.hasPackageFqName();
      }
      /**
       * <code>string package_fq_name = 3;</code>
       * @return The packageFqName.
       */
      @java.lang.Override
      public java.lang.String getPackageFqName() {
        return instance.getPackageFqName();
      }
      /**
       * <code>string package_fq_name = 3;</code>
       * @return The bytes for packageFqName.
       */
      @java.lang.Override
      public org.jetbrains.kotlin.protobuf.ByteString
          getPackageFqNameBytes() {
        return instance.getPackageFqNameBytes();
      }
      /**
       * <code>string package_fq_name = 3;</code>
       * @param value The packageFqName to set.
       * @return This builder for chaining.
       */
      public Builder setPackageFqName(
          java.lang.String value) {
        copyOnWrite();
        instance.setPackageFqName(value);
        return this;
      }
      /**
       * <code>string package_fq_name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPackageFqName() {
        copyOnWrite();
        instance.clearPackageFqName();
        return this;
      }
      /**
       * <code>string package_fq_name = 3;</code>
       * @param value The bytes for packageFqName to set.
       * @return This builder for chaining.
       */
      public Builder setPackageFqNameBytes(
          org.jetbrains.kotlin.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPackageFqNameBytes(value);
        return this;
      }

      /**
       * <code>.org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
       */
      @java.lang.Override
      public boolean hasStrings() {
        return instance.hasStrings();
      }
      /**
       * <code>.org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
       */
      @java.lang.Override
      public org.jetbrains.kotlin.metadata.ProtoBuf.StringTable getStrings() {
        return instance.getStrings();
      }
      /**
       * <code>.org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
       */
      public Builder setStrings(org.jetbrains.kotlin.metadata.ProtoBuf.StringTable value) {
        copyOnWrite();
        instance.setStrings(value);
        return this;
        }
      /**
       * <code>.org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
       */
      public Builder setStrings(
          org.jetbrains.kotlin.metadata.ProtoBuf.StringTable.Builder builderForValue) {
        copyOnWrite();
        instance.setStrings(builderForValue.build());
        return this;
      }
      /**
       * <code>.org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
       */
      public Builder mergeStrings(org.jetbrains.kotlin.metadata.ProtoBuf.StringTable value) {
        copyOnWrite();
        instance.mergeStrings(value);
        return this;
      }
      /**
       * <code>.org.jetbrains.kotlin.metadata.StringTable strings = 4;</code>
       */
      public Builder clearStrings() {  copyOnWrite();
        instance.clearStrings();
        return this;
      }

      /**
       * <code>.org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
       */
      @java.lang.Override
      public boolean hasQualifiedNames() {
        return instance.hasQualifiedNames();
      }
      /**
       * <code>.org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
       */
      @java.lang.Override
      public org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable getQualifiedNames() {
        return instance.getQualifiedNames();
      }
      /**
       * <code>.org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
       */
      public Builder setQualifiedNames(org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable value) {
        copyOnWrite();
        instance.setQualifiedNames(value);
        return this;
        }
      /**
       * <code>.org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
       */
      public Builder setQualifiedNames(
          org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable.Builder builderForValue) {
        copyOnWrite();
        instance.setQualifiedNames(builderForValue.build());
        return this;
      }
      /**
       * <code>.org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
       */
      public Builder mergeQualifiedNames(org.jetbrains.kotlin.metadata.ProtoBuf.QualifiedNameTable value) {
        copyOnWrite();
        instance.mergeQualifiedNames(value);
        return this;
      }
      /**
       * <code>.org.jetbrains.kotlin.metadata.QualifiedNameTable qualified_names = 5;</code>
       */
      public Builder clearQualifiedNames() {  copyOnWrite();
        instance.clearQualifiedNames();
        return this;
      }

      /**
       * <pre>
       * Annotations on the whole module
       * </pre>
       *
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       */
      @java.lang.Override
      public java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> getAnnotationList() {
        return java.util.Collections.unmodifiableList(
            instance.getAnnotationList());
      }
      /**
       * <pre>
       * Annotations on the whole module
       * </pre>
       *
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       */
      @java.lang.Override
      public int getAnnotationCount() {
        return instance.getAnnotationCount();
      }/**
       * <pre>
       * Annotations on the whole module
       * </pre>
       *
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       */
      @java.lang.Override
      public org.jetbrains.kotlin.metadata.ProtoBuf.Annotation getAnnotation(int index) {
        return instance.getAnnotation(index);
      }
      /**
       * <pre>
       * Annotations on the whole module
       * </pre>
       *
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       */
      public Builder setAnnotation(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.Annotation value) {
        copyOnWrite();
        instance.setAnnotation(index, value);
        return this;
      }
      /**
       * <pre>
       * Annotations on the whole module
       * </pre>
       *
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       */
      public Builder setAnnotation(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.Builder builderForValue) {
        copyOnWrite();
        instance.setAnnotation(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Annotations on the whole module
       * </pre>
       *
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       */
      public Builder addAnnotation(org.jetbrains.kotlin.metadata.ProtoBuf.Annotation value) {
        copyOnWrite();
        instance.addAnnotation(value);
        return this;
      }
      /**
       * <pre>
       * Annotations on the whole module
       * </pre>
       *
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       */
      public Builder addAnnotation(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.Annotation value) {
        copyOnWrite();
        instance.addAnnotation(index, value);
        return this;
      }
      /**
       * <pre>
       * Annotations on the whole module
       * </pre>
       *
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       */
      public Builder addAnnotation(
          org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.Builder builderForValue) {
        copyOnWrite();
        instance.addAnnotation(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Annotations on the whole module
       * </pre>
       *
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       */
      public Builder addAnnotation(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.Builder builderForValue) {
        copyOnWrite();
        instance.addAnnotation(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Annotations on the whole module
       * </pre>
       *
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       */
      public Builder addAllAnnotation(
          java.lang.Iterable<? extends org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> values) {
        copyOnWrite();
        instance.addAllAnnotation(values);
        return this;
      }
      /**
       * <pre>
       * Annotations on the whole module
       * </pre>
       *
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       */
      public Builder clearAnnotation() {
        copyOnWrite();
        instance.clearAnnotation();
        return this;
      }
      /**
       * <pre>
       * Annotations on the whole module
       * </pre>
       *
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 6;</code>
       */
      public Builder removeAnnotation(int index) {
        copyOnWrite();
        instance.removeAnnotation(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.metadata.js.Header)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        org.jetbrains.kotlin.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "flags_",
              "jsCodeBinaryVersion_",
              "packageFqName_",
              "strings_",
              "qualifiedNames_",
              "annotation_",
              org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class,
            };
            java.lang.String info =
                "\u0004\u0006\u0000\u0001\u0001\u0006\u0006\u0000\u0001\u0002\u0001\u1004\u0000\u0002" +
                "\u1004\u0001\u0003\u1008\u0002\u0004\u1009\u0003\u0005\u1409\u0004\u0006\u041b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          org.jetbrains.kotlin.protobuf.Parser<org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header> parser = PARSER;
          if (parser == null) {
            synchronized (org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.metadata.js.Header)
    private static final org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header DEFAULT_INSTANCE;
    static {
      Header defaultInstance = new Header();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Header.class, defaultInstance);
    }

    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Header getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile org.jetbrains.kotlin.protobuf.Parser<Header> PARSER;

    public static org.jetbrains.kotlin.protobuf.Parser<Header> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface FileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.metadata.js.File)
      org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * If absent, id is the index of the file in the Files.file list
     * </pre>
     *
     * <code>int32 id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <pre>
     * If absent, id is the index of the file in the Files.file list
     * </pre>
     *
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> 
        getAnnotationList();
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    org.jetbrains.kotlin.metadata.ProtoBuf.Annotation getAnnotation(int index);
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    int getAnnotationCount();
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.metadata.js.File}
   */
  public  static final class File extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite<
          File, File.Builder> implements
      // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.metadata.js.File)
      FileOrBuilder {
    private File() {
      annotation_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     * If absent, id is the index of the file in the Files.file list
     * </pre>
     *
     * <code>int32 id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * If absent, id is the index of the file in the Files.file list
     * </pre>
     *
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }
    /**
     * <pre>
     * If absent, id is the index of the file in the Files.file list
     * </pre>
     *
     * <code>int32 id = 1;</code>
     * @param value The id to set.
     */
    private void setId(int value) {
      bitField0_ |= 0x00000001;
      id_ = value;
    }
    /**
     * <pre>
     * If absent, id is the index of the file in the Files.file list
     * </pre>
     *
     * <code>int32 id = 1;</code>
     */
    private void clearId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      id_ = 0;
    }

    public static final int ANNOTATION_FIELD_NUMBER = 2;
    private org.jetbrains.kotlin.protobuf.Internal.ProtobufList<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> annotation_;
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    @java.lang.Override
    public java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> getAnnotationList() {
      return annotation_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    public java.util.List<? extends org.jetbrains.kotlin.metadata.ProtoBuf.AnnotationOrBuilder> 
        getAnnotationOrBuilderList() {
      return annotation_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    @java.lang.Override
    public int getAnnotationCount() {
      return annotation_.size();
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.metadata.ProtoBuf.Annotation getAnnotation(int index) {
      return annotation_.get(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    public org.jetbrains.kotlin.metadata.ProtoBuf.AnnotationOrBuilder getAnnotationOrBuilder(
        int index) {
      return annotation_.get(index);
    }
    private void ensureAnnotationIsMutable() {
      org.jetbrains.kotlin.protobuf.Internal.ProtobufList<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> tmp = annotation_;
      if (!tmp.isModifiable()) {
        annotation_ =
            org.jetbrains.kotlin.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void setAnnotation(
        int index, org.jetbrains.kotlin.metadata.ProtoBuf.Annotation value) {
      value.getClass();  // minimal bytecode null check
      ensureAnnotationIsMutable();
      annotation_.set(index, value);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void addAnnotation(org.jetbrains.kotlin.metadata.ProtoBuf.Annotation value) {
      value.getClass();  // minimal bytecode null check
      ensureAnnotationIsMutable();
      annotation_.add(value);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void addAnnotation(
        int index, org.jetbrains.kotlin.metadata.ProtoBuf.Annotation value) {
      value.getClass();  // minimal bytecode null check
      ensureAnnotationIsMutable();
      annotation_.add(index, value);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    private void addAllAnnotation(
        java.lang.Iterable<? extends org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> values) {
      ensureAnnotationIsMutable();
      org.jetbrains.kotlin.protobuf.AbstractMessageLite.addAll(
          values, annotation_);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    private void clearAnnotation() {
      annotation_ = emptyProtobufList();
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
     */
    private void removeAnnotation(int index) {
      ensureAnnotationIsMutable();
      annotation_.remove(index);
    }

    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.File parseFrom(
        java.nio.ByteBuffer data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.File parseFrom(
        java.nio.ByteBuffer data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.File parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.File parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.File parseFrom(byte[] data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.File parseFrom(
        byte[] data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.File parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.File parseFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.File parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.File parseDelimitedFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.File parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.File parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.jetbrains.kotlin.metadata.js.JsProtoBuf.File prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code org.jetbrains.kotlin.metadata.js.File}
     */
    public static final class Builder extends
        org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
          org.jetbrains.kotlin.metadata.js.JsProtoBuf.File, Builder> implements
        // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.metadata.js.File)
        org.jetbrains.kotlin.metadata.js.JsProtoBuf.FileOrBuilder {
      // Construct using org.jetbrains.kotlin.metadata.js.JsProtoBuf.File.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * If absent, id is the index of the file in the Files.file list
       * </pre>
       *
       * <code>int32 id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return instance.hasId();
      }
      /**
       * <pre>
       * If absent, id is the index of the file in the Files.file list
       * </pre>
       *
       * <code>int32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return instance.getId();
      }
      /**
       * <pre>
       * If absent, id is the index of the file in the Files.file list
       * </pre>
       *
       * <code>int32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <pre>
       * If absent, id is the index of the file in the Files.file list
       * </pre>
       *
       * <code>int32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }

      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      @java.lang.Override
      public java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> getAnnotationList() {
        return java.util.Collections.unmodifiableList(
            instance.getAnnotationList());
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      @java.lang.Override
      public int getAnnotationCount() {
        return instance.getAnnotationCount();
      }/**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      @java.lang.Override
      public org.jetbrains.kotlin.metadata.ProtoBuf.Annotation getAnnotation(int index) {
        return instance.getAnnotation(index);
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      public Builder setAnnotation(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.Annotation value) {
        copyOnWrite();
        instance.setAnnotation(index, value);
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      public Builder setAnnotation(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.Builder builderForValue) {
        copyOnWrite();
        instance.setAnnotation(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      public Builder addAnnotation(org.jetbrains.kotlin.metadata.ProtoBuf.Annotation value) {
        copyOnWrite();
        instance.addAnnotation(value);
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      public Builder addAnnotation(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.Annotation value) {
        copyOnWrite();
        instance.addAnnotation(index, value);
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      public Builder addAnnotation(
          org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.Builder builderForValue) {
        copyOnWrite();
        instance.addAnnotation(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      public Builder addAnnotation(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.Builder builderForValue) {
        copyOnWrite();
        instance.addAnnotation(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      public Builder addAllAnnotation(
          java.lang.Iterable<? extends org.jetbrains.kotlin.metadata.ProtoBuf.Annotation> values) {
        copyOnWrite();
        instance.addAllAnnotation(values);
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      public Builder clearAnnotation() {
        copyOnWrite();
        instance.clearAnnotation();
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.Annotation annotation = 2;</code>
       */
      public Builder removeAnnotation(int index) {
        copyOnWrite();
        instance.removeAnnotation(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.metadata.js.File)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        org.jetbrains.kotlin.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.jetbrains.kotlin.metadata.js.JsProtoBuf.File();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "id_",
              "annotation_",
              org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class,
            };
            java.lang.String info =
                "\u0004\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0001\u0001\u0001\u1004\u0000\u0002" +
                "\u041b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          org.jetbrains.kotlin.protobuf.Parser<org.jetbrains.kotlin.metadata.js.JsProtoBuf.File> parser = PARSER;
          if (parser == null) {
            synchronized (org.jetbrains.kotlin.metadata.js.JsProtoBuf.File.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.jetbrains.kotlin.metadata.js.JsProtoBuf.File>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.metadata.js.File)
    private static final org.jetbrains.kotlin.metadata.js.JsProtoBuf.File DEFAULT_INSTANCE;
    static {
      File defaultInstance = new File();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.registerDefaultInstance(
        File.class, defaultInstance);
    }

    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.File getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile org.jetbrains.kotlin.protobuf.Parser<File> PARSER;

    public static org.jetbrains.kotlin.protobuf.Parser<File> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface FilesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.metadata.js.Files)
      org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
     */
    java.util.List<org.jetbrains.kotlin.metadata.js.JsProtoBuf.File> 
        getFileList();
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
     */
    org.jetbrains.kotlin.metadata.js.JsProtoBuf.File getFile(int index);
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
     */
    int getFileCount();
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.metadata.js.Files}
   */
  public  static final class Files extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite<
          Files, Files.Builder> implements
      // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.metadata.js.Files)
      FilesOrBuilder {
    private Files() {
      file_ = emptyProtobufList();
    }
    public static final int FILE_FIELD_NUMBER = 1;
    private org.jetbrains.kotlin.protobuf.Internal.ProtobufList<org.jetbrains.kotlin.metadata.js.JsProtoBuf.File> file_;
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.jetbrains.kotlin.metadata.js.JsProtoBuf.File> getFileList() {
      return file_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
     */
    public java.util.List<? extends org.jetbrains.kotlin.metadata.js.JsProtoBuf.FileOrBuilder> 
        getFileOrBuilderList() {
      return file_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
     */
    @java.lang.Override
    public int getFileCount() {
      return file_.size();
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.metadata.js.JsProtoBuf.File getFile(int index) {
      return file_.get(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
     */
    public org.jetbrains.kotlin.metadata.js.JsProtoBuf.FileOrBuilder getFileOrBuilder(
        int index) {
      return file_.get(index);
    }
    private void ensureFileIsMutable() {
      org.jetbrains.kotlin.protobuf.Internal.ProtobufList<org.jetbrains.kotlin.metadata.js.JsProtoBuf.File> tmp = file_;
      if (!tmp.isModifiable()) {
        file_ =
            org.jetbrains.kotlin.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void setFile(
        int index, org.jetbrains.kotlin.metadata.js.JsProtoBuf.File value) {
      value.getClass();  // minimal bytecode null check
      ensureFileIsMutable();
      file_.set(index, value);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void addFile(org.jetbrains.kotlin.metadata.js.JsProtoBuf.File value) {
      value.getClass();  // minimal bytecode null check
      ensureFileIsMutable();
      file_.add(value);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void addFile(
        int index, org.jetbrains.kotlin.metadata.js.JsProtoBuf.File value) {
      value.getClass();  // minimal bytecode null check
      ensureFileIsMutable();
      file_.add(index, value);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
     */
    private void addAllFile(
        java.lang.Iterable<? extends org.jetbrains.kotlin.metadata.js.JsProtoBuf.File> values) {
      ensureFileIsMutable();
      org.jetbrains.kotlin.protobuf.AbstractMessageLite.addAll(
          values, file_);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
     */
    private void clearFile() {
      file_ = emptyProtobufList();
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
     */
    private void removeFile(int index) {
      ensureFileIsMutable();
      file_.remove(index);
    }

    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files parseFrom(
        java.nio.ByteBuffer data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files parseFrom(
        java.nio.ByteBuffer data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files parseFrom(byte[] data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files parseFrom(
        byte[] data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files parseFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files parseDelimitedFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code org.jetbrains.kotlin.metadata.js.Files}
     */
    public static final class Builder extends
        org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
          org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files, Builder> implements
        // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.metadata.js.Files)
        org.jetbrains.kotlin.metadata.js.JsProtoBuf.FilesOrBuilder {
      // Construct using org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
       */
      @java.lang.Override
      public java.util.List<org.jetbrains.kotlin.metadata.js.JsProtoBuf.File> getFileList() {
        return java.util.Collections.unmodifiableList(
            instance.getFileList());
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
       */
      @java.lang.Override
      public int getFileCount() {
        return instance.getFileCount();
      }/**
       * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
       */
      @java.lang.Override
      public org.jetbrains.kotlin.metadata.js.JsProtoBuf.File getFile(int index) {
        return instance.getFile(index);
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
       */
      public Builder setFile(
          int index, org.jetbrains.kotlin.metadata.js.JsProtoBuf.File value) {
        copyOnWrite();
        instance.setFile(index, value);
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
       */
      public Builder setFile(
          int index, org.jetbrains.kotlin.metadata.js.JsProtoBuf.File.Builder builderForValue) {
        copyOnWrite();
        instance.setFile(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
       */
      public Builder addFile(org.jetbrains.kotlin.metadata.js.JsProtoBuf.File value) {
        copyOnWrite();
        instance.addFile(value);
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
       */
      public Builder addFile(
          int index, org.jetbrains.kotlin.metadata.js.JsProtoBuf.File value) {
        copyOnWrite();
        instance.addFile(index, value);
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
       */
      public Builder addFile(
          org.jetbrains.kotlin.metadata.js.JsProtoBuf.File.Builder builderForValue) {
        copyOnWrite();
        instance.addFile(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
       */
      public Builder addFile(
          int index, org.jetbrains.kotlin.metadata.js.JsProtoBuf.File.Builder builderForValue) {
        copyOnWrite();
        instance.addFile(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
       */
      public Builder addAllFile(
          java.lang.Iterable<? extends org.jetbrains.kotlin.metadata.js.JsProtoBuf.File> values) {
        copyOnWrite();
        instance.addAllFile(values);
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
       */
      public Builder clearFile() {
        copyOnWrite();
        instance.clearFile();
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.js.File file = 1;</code>
       */
      public Builder removeFile(int index) {
        copyOnWrite();
        instance.removeFile(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.metadata.js.Files)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        org.jetbrains.kotlin.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "file_",
              org.jetbrains.kotlin.metadata.js.JsProtoBuf.File.class,
            };
            java.lang.String info =
                "\u0004\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0001\u0001\u0001\u041b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          org.jetbrains.kotlin.protobuf.Parser<org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files> parser = PARSER;
          if (parser == null) {
            synchronized (org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.metadata.js.Files)
    private static final org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files DEFAULT_INSTANCE;
    static {
      Files defaultInstance = new Files();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Files.class, defaultInstance);
    }

    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile org.jetbrains.kotlin.protobuf.Parser<Files> PARSER;

    public static org.jetbrains.kotlin.protobuf.Parser<Files> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ClassesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.metadata.js.Classes)
      org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * id in StringTable
     * </pre>
     *
     * <code>repeated int32 class_name = 1;</code>
     * @return A list containing the className.
     */
    java.util.List<java.lang.Integer> getClassNameList();
    /**
     * <pre>
     * id in StringTable
     * </pre>
     *
     * <code>repeated int32 class_name = 1;</code>
     * @return The count of className.
     */
    int getClassNameCount();
    /**
     * <pre>
     * id in StringTable
     * </pre>
     *
     * <code>repeated int32 class_name = 1;</code>
     * @param index The index of the element to return.
     * @return The className at the given index.
     */
    int getClassName(int index);
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.metadata.js.Classes}
   */
  public  static final class Classes extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite<
          Classes, Classes.Builder> implements
      // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.metadata.js.Classes)
      ClassesOrBuilder {
    private Classes() {
      className_ = emptyIntList();
    }
    public static final int CLASS_NAME_FIELD_NUMBER = 1;
    private org.jetbrains.kotlin.protobuf.Internal.IntList className_;
    /**
     * <pre>
     * id in StringTable
     * </pre>
     *
     * <code>repeated int32 class_name = 1;</code>
     * @return A list containing the className.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getClassNameList() {
      return className_;
    }
    /**
     * <pre>
     * id in StringTable
     * </pre>
     *
     * <code>repeated int32 class_name = 1;</code>
     * @return The count of className.
     */
    @java.lang.Override
    public int getClassNameCount() {
      return className_.size();
    }
    /**
     * <pre>
     * id in StringTable
     * </pre>
     *
     * <code>repeated int32 class_name = 1;</code>
     * @param index The index of the element to return.
     * @return The className at the given index.
     */
    @java.lang.Override
    public int getClassName(int index) {
      return className_.getInt(index);
    }
    private int classNameMemoizedSerializedSize = -1;
    private void ensureClassNameIsMutable() {
      org.jetbrains.kotlin.protobuf.Internal.IntList tmp = className_;
      if (!tmp.isModifiable()) {
        className_ =
            org.jetbrains.kotlin.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * id in StringTable
     * </pre>
     *
     * <code>repeated int32 class_name = 1;</code>
     * @param index The index to set the value at.
     * @param value The className to set.
     */
    private void setClassName(
        int index, int value) {
      ensureClassNameIsMutable();
      className_.setInt(index, value);
    }
    /**
     * <pre>
     * id in StringTable
     * </pre>
     *
     * <code>repeated int32 class_name = 1;</code>
     * @param value The className to add.
     */
    private void addClassName(int value) {
      ensureClassNameIsMutable();
      className_.addInt(value);
    }
    /**
     * <pre>
     * id in StringTable
     * </pre>
     *
     * <code>repeated int32 class_name = 1;</code>
     * @param values The className to add.
     */
    private void addAllClassName(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureClassNameIsMutable();
      org.jetbrains.kotlin.protobuf.AbstractMessageLite.addAll(
          values, className_);
    }
    /**
     * <pre>
     * id in StringTable
     * </pre>
     *
     * <code>repeated int32 class_name = 1;</code>
     */
    private void clearClassName() {
      className_ = emptyIntList();
    }

    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Classes parseFrom(
        java.nio.ByteBuffer data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Classes parseFrom(
        java.nio.ByteBuffer data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Classes parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Classes parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Classes parseFrom(byte[] data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Classes parseFrom(
        byte[] data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Classes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Classes parseFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Classes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Classes parseDelimitedFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Classes parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Classes parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.jetbrains.kotlin.metadata.js.JsProtoBuf.Classes prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code org.jetbrains.kotlin.metadata.js.Classes}
     */
    public static final class Builder extends
        org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
          org.jetbrains.kotlin.metadata.js.JsProtoBuf.Classes, Builder> implements
        // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.metadata.js.Classes)
        org.jetbrains.kotlin.metadata.js.JsProtoBuf.ClassesOrBuilder {
      // Construct using org.jetbrains.kotlin.metadata.js.JsProtoBuf.Classes.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * id in StringTable
       * </pre>
       *
       * <code>repeated int32 class_name = 1;</code>
       * @return A list containing the className.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getClassNameList() {
        return java.util.Collections.unmodifiableList(
            instance.getClassNameList());
      }
      /**
       * <pre>
       * id in StringTable
       * </pre>
       *
       * <code>repeated int32 class_name = 1;</code>
       * @return The count of className.
       */
      @java.lang.Override
      public int getClassNameCount() {
        return instance.getClassNameCount();
      }
      /**
       * <pre>
       * id in StringTable
       * </pre>
       *
       * <code>repeated int32 class_name = 1;</code>
       * @param index The index of the element to return.
       * @return The className at the given index.
       */
      @java.lang.Override
      public int getClassName(int index) {
        return instance.getClassName(index);
      }
      /**
       * <pre>
       * id in StringTable
       * </pre>
       *
       * <code>repeated int32 class_name = 1;</code>
       * @param value The className to set.
       * @return This builder for chaining.
       */
      public Builder setClassName(
          int index, int value) {
        copyOnWrite();
        instance.setClassName(index, value);
        return this;
      }
      /**
       * <pre>
       * id in StringTable
       * </pre>
       *
       * <code>repeated int32 class_name = 1;</code>
       * @param value The className to add.
       * @return This builder for chaining.
       */
      public Builder addClassName(int value) {
        copyOnWrite();
        instance.addClassName(value);
        return this;
      }
      /**
       * <pre>
       * id in StringTable
       * </pre>
       *
       * <code>repeated int32 class_name = 1;</code>
       * @param values The className to add.
       * @return This builder for chaining.
       */
      public Builder addAllClassName(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllClassName(values);
        return this;
      }
      /**
       * <pre>
       * id in StringTable
       * </pre>
       *
       * <code>repeated int32 class_name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearClassName() {
        copyOnWrite();
        instance.clearClassName();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.metadata.js.Classes)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        org.jetbrains.kotlin.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.jetbrains.kotlin.metadata.js.JsProtoBuf.Classes();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "className_",
            };
            java.lang.String info =
                "\u0004\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0001\u0000\u0001\'";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          org.jetbrains.kotlin.protobuf.Parser<org.jetbrains.kotlin.metadata.js.JsProtoBuf.Classes> parser = PARSER;
          if (parser == null) {
            synchronized (org.jetbrains.kotlin.metadata.js.JsProtoBuf.Classes.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.jetbrains.kotlin.metadata.js.JsProtoBuf.Classes>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.metadata.js.Classes)
    private static final org.jetbrains.kotlin.metadata.js.JsProtoBuf.Classes DEFAULT_INSTANCE;
    static {
      Classes defaultInstance = new Classes();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Classes.class, defaultInstance);
    }

    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Classes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile org.jetbrains.kotlin.protobuf.Parser<Classes> PARSER;

    public static org.jetbrains.kotlin.protobuf.Parser<Classes> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LibraryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.metadata.js.Library)
      org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.org.jetbrains.kotlin.metadata.js.Library.Kind kind = 1 [default = PLAIN];</code>
     * @return Whether the kind field is set.
     */
    boolean hasKind();
    /**
     * <code>.org.jetbrains.kotlin.metadata.js.Library.Kind kind = 1 [default = PLAIN];</code>
     * @return The kind.
     */
    org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library.Kind getKind();

    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment> 
        getPackageFragmentList();
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment getPackageFragment(int index);
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    int getPackageFragmentCount();

    /**
     * <code>repeated string imported_module = 3;</code>
     * @return A list containing the importedModule.
     */
    java.util.List<java.lang.String>
        getImportedModuleList();
    /**
     * <code>repeated string imported_module = 3;</code>
     * @return The count of importedModule.
     */
    int getImportedModuleCount();
    /**
     * <code>repeated string imported_module = 3;</code>
     * @param index The index of the element to return.
     * @return The importedModule at the given index.
     */
    java.lang.String getImportedModule(int index);
    /**
     * <code>repeated string imported_module = 3;</code>
     * @param index The index of the element to return.
     * @return The importedModule at the given index.
     */
    org.jetbrains.kotlin.protobuf.ByteString
        getImportedModuleBytes(int index);
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.metadata.js.Library}
   */
  public  static final class Library extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite<
          Library, Library.Builder> implements
      // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.metadata.js.Library)
      LibraryOrBuilder {
    private Library() {
      kind_ = 1;
      packageFragment_ = emptyProtobufList();
      importedModule_ = org.jetbrains.kotlin.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * Protobuf enum {@code org.jetbrains.kotlin.metadata.js.Library.Kind}
     */
    public enum Kind
        implements org.jetbrains.kotlin.protobuf.Internal.EnumLite {
      /**
       * <code>PLAIN = 1;</code>
       */
      PLAIN(1),
      /**
       * <code>AMD = 2;</code>
       */
      AMD(2),
      /**
       * <code>COMMON_JS = 3;</code>
       */
      COMMON_JS(3),
      /**
       * <code>UMD = 4;</code>
       */
      UMD(4),
      ;

      /**
       * <code>PLAIN = 1;</code>
       */
      public static final int PLAIN_VALUE = 1;
      /**
       * <code>AMD = 2;</code>
       */
      public static final int AMD_VALUE = 2;
      /**
       * <code>COMMON_JS = 3;</code>
       */
      public static final int COMMON_JS_VALUE = 3;
      /**
       * <code>UMD = 4;</code>
       */
      public static final int UMD_VALUE = 4;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Kind valueOf(int value) {
        return forNumber(value);
      }

      public static Kind forNumber(int value) {
        switch (value) {
          case 1: return PLAIN;
          case 2: return AMD;
          case 3: return COMMON_JS;
          case 4: return UMD;
          default: return null;
        }
      }

      public static org.jetbrains.kotlin.protobuf.Internal.EnumLiteMap<Kind>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final org.jetbrains.kotlin.protobuf.Internal.EnumLiteMap<
          Kind> internalValueMap =
            new org.jetbrains.kotlin.protobuf.Internal.EnumLiteMap<Kind>() {
              @java.lang.Override
              public Kind findValueByNumber(int number) {
                return Kind.forNumber(number);
              }
            };

      public static org.jetbrains.kotlin.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return KindVerifier.INSTANCE;
      }

      private static final class KindVerifier implements 
           org.jetbrains.kotlin.protobuf.Internal.EnumVerifier { 
              static final org.jetbrains.kotlin.protobuf.Internal.EnumVerifier           INSTANCE = new KindVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return Kind.forNumber(number) != null;
              }
            };

      private final int value;

      private Kind(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.jetbrains.kotlin.metadata.js.Library.Kind)
    }

    private int bitField0_;
    public static final int KIND_FIELD_NUMBER = 1;
    private int kind_;
    /**
     * <code>.org.jetbrains.kotlin.metadata.js.Library.Kind kind = 1 [default = PLAIN];</code>
     * @return Whether the kind field is set.
     */
    @java.lang.Override
    public boolean hasKind() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.org.jetbrains.kotlin.metadata.js.Library.Kind kind = 1 [default = PLAIN];</code>
     * @return The kind.
     */
    @java.lang.Override
    public org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library.Kind getKind() {
      org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library.Kind result = org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library.Kind.forNumber(kind_);
      return result == null ? org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library.Kind.PLAIN : result;
    }
    /**
     * <code>.org.jetbrains.kotlin.metadata.js.Library.Kind kind = 1 [default = PLAIN];</code>
     * @param value The kind to set.
     */
    private void setKind(org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library.Kind value) {
      kind_ = value.getNumber();
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>.org.jetbrains.kotlin.metadata.js.Library.Kind kind = 1 [default = PLAIN];</code>
     */
    private void clearKind() {
      bitField0_ = (bitField0_ & ~0x00000001);
      kind_ = 1;
    }

    public static final int PACKAGE_FRAGMENT_FIELD_NUMBER = 2;
    private org.jetbrains.kotlin.protobuf.Internal.ProtobufList<org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment> packageFragment_;
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    @java.lang.Override
    public java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment> getPackageFragmentList() {
      return packageFragment_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    public java.util.List<? extends org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragmentOrBuilder> 
        getPackageFragmentOrBuilderList() {
      return packageFragment_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    @java.lang.Override
    public int getPackageFragmentCount() {
      return packageFragment_.size();
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment getPackageFragment(int index) {
      return packageFragment_.get(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    public org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragmentOrBuilder getPackageFragmentOrBuilder(
        int index) {
      return packageFragment_.get(index);
    }
    private void ensurePackageFragmentIsMutable() {
      org.jetbrains.kotlin.protobuf.Internal.ProtobufList<org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment> tmp = packageFragment_;
      if (!tmp.isModifiable()) {
        packageFragment_ =
            org.jetbrains.kotlin.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void setPackageFragment(
        int index, org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment value) {
      value.getClass();  // minimal bytecode null check
      ensurePackageFragmentIsMutable();
      packageFragment_.set(index, value);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void addPackageFragment(org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment value) {
      value.getClass();  // minimal bytecode null check
      ensurePackageFragmentIsMutable();
      packageFragment_.add(value);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void addPackageFragment(
        int index, org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment value) {
      value.getClass();  // minimal bytecode null check
      ensurePackageFragmentIsMutable();
      packageFragment_.add(index, value);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    private void addAllPackageFragment(
        java.lang.Iterable<? extends org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment> values) {
      ensurePackageFragmentIsMutable();
      org.jetbrains.kotlin.protobuf.AbstractMessageLite.addAll(
          values, packageFragment_);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    private void clearPackageFragment() {
      packageFragment_ = emptyProtobufList();
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
     */
    private void removePackageFragment(int index) {
      ensurePackageFragmentIsMutable();
      packageFragment_.remove(index);
    }

    public static final int IMPORTED_MODULE_FIELD_NUMBER = 3;
    private org.jetbrains.kotlin.protobuf.Internal.ProtobufList<java.lang.String> importedModule_;
    /**
     * <code>repeated string imported_module = 3;</code>
     * @return A list containing the importedModule.
     */
    @java.lang.Override
    public java.util.List<java.lang.String> getImportedModuleList() {
      return importedModule_;
    }
    /**
     * <code>repeated string imported_module = 3;</code>
     * @return The count of importedModule.
     */
    @java.lang.Override
    public int getImportedModuleCount() {
      return importedModule_.size();
    }
    /**
     * <code>repeated string imported_module = 3;</code>
     * @param index The index of the element to return.
     * @return The importedModule at the given index.
     */
    @java.lang.Override
    public java.lang.String getImportedModule(int index) {
      return importedModule_.get(index);
    }
    /**
     * <code>repeated string imported_module = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the importedModule at the given index.
     */
    @java.lang.Override
    public org.jetbrains.kotlin.protobuf.ByteString
        getImportedModuleBytes(int index) {
      return org.jetbrains.kotlin.protobuf.ByteString.copyFromUtf8(
          importedModule_.get(index));
    }
    private void ensureImportedModuleIsMutable() {
      org.jetbrains.kotlin.protobuf.Internal.ProtobufList<java.lang.String> tmp =
          importedModule_;  if (!tmp.isModifiable()) {
        importedModule_ =
            org.jetbrains.kotlin.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <code>repeated string imported_module = 3;</code>
     * @param index The index to set the value at.
     * @param value The importedModule to set.
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void setImportedModule(
        int index, java.lang.String value) {
      value.getClass();  // minimal bytecode null check
      ensureImportedModuleIsMutable();
      importedModule_.set(index, value);
    }
    /**
     * <code>repeated string imported_module = 3;</code>
     * @param value The importedModule to add.
     */
    @java.lang.SuppressWarnings("ReturnValueIgnored")
    private void addImportedModule(
        java.lang.String value) {
      value.getClass();  // minimal bytecode null check
      ensureImportedModuleIsMutable();
      importedModule_.add(value);
    }
    /**
     * <code>repeated string imported_module = 3;</code>
     * @param values The importedModule to add.
     */
    private void addAllImportedModule(
        java.lang.Iterable<java.lang.String> values) {
      ensureImportedModuleIsMutable();
      org.jetbrains.kotlin.protobuf.AbstractMessageLite.addAll(
          values, importedModule_);
    }
    /**
     * <code>repeated string imported_module = 3;</code>
     */
    private void clearImportedModule() {
      importedModule_ = org.jetbrains.kotlin.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <code>repeated string imported_module = 3;</code>
     * @param value The bytes of the importedModule to add.
     */
    private void addImportedModuleBytes(
        org.jetbrains.kotlin.protobuf.ByteString value) {
      ensureImportedModuleIsMutable();
      importedModule_.add(value.toStringUtf8());
    }

    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library parseFrom(
        java.nio.ByteBuffer data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library parseFrom(
        java.nio.ByteBuffer data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library parseFrom(byte[] data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library parseFrom(
        byte[] data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library parseFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library parseDelimitedFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code org.jetbrains.kotlin.metadata.js.Library}
     */
    public static final class Builder extends
        org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
          org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library, Builder> implements
        // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.metadata.js.Library)
        org.jetbrains.kotlin.metadata.js.JsProtoBuf.LibraryOrBuilder {
      // Construct using org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.org.jetbrains.kotlin.metadata.js.Library.Kind kind = 1 [default = PLAIN];</code>
       * @return Whether the kind field is set.
       */
      @java.lang.Override
      public boolean hasKind() {
        return instance.hasKind();
      }
      /**
       * <code>.org.jetbrains.kotlin.metadata.js.Library.Kind kind = 1 [default = PLAIN];</code>
       * @return The kind.
       */
      @java.lang.Override
      public org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library.Kind getKind() {
        return instance.getKind();
      }
      /**
       * <code>.org.jetbrains.kotlin.metadata.js.Library.Kind kind = 1 [default = PLAIN];</code>
       * @param value The enum numeric value on the wire for kind to set.
       * @return This builder for chaining.
       */
      public Builder setKind(org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library.Kind value) {
        copyOnWrite();
        instance.setKind(value);
        return this;
      }
      /**
       * <code>.org.jetbrains.kotlin.metadata.js.Library.Kind kind = 1 [default = PLAIN];</code>
       * @return This builder for chaining.
       */
      public Builder clearKind() {
        copyOnWrite();
        instance.clearKind();
        return this;
      }

      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      @java.lang.Override
      public java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment> getPackageFragmentList() {
        return java.util.Collections.unmodifiableList(
            instance.getPackageFragmentList());
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      @java.lang.Override
      public int getPackageFragmentCount() {
        return instance.getPackageFragmentCount();
      }/**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      @java.lang.Override
      public org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment getPackageFragment(int index) {
        return instance.getPackageFragment(index);
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      public Builder setPackageFragment(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment value) {
        copyOnWrite();
        instance.setPackageFragment(index, value);
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      public Builder setPackageFragment(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment.Builder builderForValue) {
        copyOnWrite();
        instance.setPackageFragment(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      public Builder addPackageFragment(org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment value) {
        copyOnWrite();
        instance.addPackageFragment(value);
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      public Builder addPackageFragment(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment value) {
        copyOnWrite();
        instance.addPackageFragment(index, value);
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      public Builder addPackageFragment(
          org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment.Builder builderForValue) {
        copyOnWrite();
        instance.addPackageFragment(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      public Builder addPackageFragment(
          int index, org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment.Builder builderForValue) {
        copyOnWrite();
        instance.addPackageFragment(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      public Builder addAllPackageFragment(
          java.lang.Iterable<? extends org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment> values) {
        copyOnWrite();
        instance.addAllPackageFragment(values);
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      public Builder clearPackageFragment() {
        copyOnWrite();
        instance.clearPackageFragment();
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.metadata.PackageFragment package_fragment = 2;</code>
       */
      public Builder removePackageFragment(int index) {
        copyOnWrite();
        instance.removePackageFragment(index);
        return this;
      }

      /**
       * <code>repeated string imported_module = 3;</code>
       * @return A list containing the importedModule.
       */
      @java.lang.Override
      public java.util.List<java.lang.String>
          getImportedModuleList() {
        return java.util.Collections.unmodifiableList(
            instance.getImportedModuleList());
      }
      /**
       * <code>repeated string imported_module = 3;</code>
       * @return The count of importedModule.
       */
      @java.lang.Override
      public int getImportedModuleCount() {
        return instance.getImportedModuleCount();
      }
      /**
       * <code>repeated string imported_module = 3;</code>
       * @param index The index of the element to return.
       * @return The importedModule at the given index.
       */
      @java.lang.Override
      public java.lang.String getImportedModule(int index) {
        return instance.getImportedModule(index);
      }
      /**
       * <code>repeated string imported_module = 3;</code>
       * @param index The index of the value to return.
       * @return The bytes of the importedModule at the given index.
       */
      @java.lang.Override
      public org.jetbrains.kotlin.protobuf.ByteString
          getImportedModuleBytes(int index) {
        return instance.getImportedModuleBytes(index);
      }
      /**
       * <code>repeated string imported_module = 3;</code>
       * @param index The index to set the value at.
       * @param value The importedModule to set.
       * @return This builder for chaining.
       */
      public Builder setImportedModule(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setImportedModule(index, value);
        return this;
      }
      /**
       * <code>repeated string imported_module = 3;</code>
       * @param value The importedModule to add.
       * @return This builder for chaining.
       */
      public Builder addImportedModule(
          java.lang.String value) {
        copyOnWrite();
        instance.addImportedModule(value);
        return this;
      }
      /**
       * <code>repeated string imported_module = 3;</code>
       * @param values The importedModule to add.
       * @return This builder for chaining.
       */
      public Builder addAllImportedModule(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllImportedModule(values);
        return this;
      }
      /**
       * <code>repeated string imported_module = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearImportedModule() {
        copyOnWrite();
        instance.clearImportedModule();
        return this;
      }
      /**
       * <code>repeated string imported_module = 3;</code>
       * @param value The bytes of the importedModule to add.
       * @return This builder for chaining.
       */
      public Builder addImportedModuleBytes(
          org.jetbrains.kotlin.protobuf.ByteString value) {
        copyOnWrite();
        instance.addImportedModuleBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.metadata.js.Library)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        org.jetbrains.kotlin.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "kind_",
              org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library.Kind.internalGetVerifier(),
              "packageFragment_",
              org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment.class,
              "importedModule_",
            };
            java.lang.String info =
                "\u0004\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0002\u0001\u0001\u180c\u0000\u0002" +
                "\u041b\u0003\u001a";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          org.jetbrains.kotlin.protobuf.Parser<org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library> parser = PARSER;
          if (parser == null) {
            synchronized (org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.metadata.js.Library)
    private static final org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library DEFAULT_INSTANCE;
    static {
      Library defaultInstance = new Library();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Library.class, defaultInstance);
    }

    public static org.jetbrains.kotlin.metadata.js.JsProtoBuf.Library getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile org.jetbrains.kotlin.protobuf.Parser<Library> PARSER;

    public static org.jetbrains.kotlin.protobuf.Parser<Library> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public static final int PACKAGE_FQ_NAME_FIELD_NUMBER = 131;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Package { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Package,
      java.lang.Integer> packageFqName = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Package.getDefaultInstance(),
        0,
        null,
        null,
        131,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.INT32,
        java.lang.Integer.class);
  public static final int CLASS_ANNOTATION_FIELD_NUMBER = 130;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Class { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Class,
      java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>> classAnnotation = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Class.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.getDefaultInstance(),
        null,
        130,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        false,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class);
  public static final int CLASS_CONTAINING_FILE_ID_FIELD_NUMBER = 135;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Class { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Class,
      java.lang.Integer> classContainingFileId = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Class.getDefaultInstance(),
        0,
        null,
        null,
        135,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.INT32,
        java.lang.Integer.class);
  public static final int CONSTRUCTOR_ANNOTATION_FIELD_NUMBER = 130;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Constructor { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Constructor,
      java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>> constructorAnnotation = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Constructor.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.getDefaultInstance(),
        null,
        130,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        false,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class);
  public static final int FUNCTION_ANNOTATION_FIELD_NUMBER = 130;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Function { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Function,
      java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>> functionAnnotation = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Function.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.getDefaultInstance(),
        null,
        130,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        false,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class);
  public static final int FUNCTION_CONTAINING_FILE_ID_FIELD_NUMBER = 135;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Function { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Function,
      java.lang.Integer> functionContainingFileId = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Function.getDefaultInstance(),
        0,
        null,
        null,
        135,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.INT32,
        java.lang.Integer.class);
  public static final int PROPERTY_ANNOTATION_FIELD_NUMBER = 130;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Property { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Property,
      java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>> propertyAnnotation = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Property.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.getDefaultInstance(),
        null,
        130,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        false,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class);
  public static final int PROPERTY_GETTER_ANNOTATION_FIELD_NUMBER = 132;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Property { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Property,
      java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>> propertyGetterAnnotation = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Property.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.getDefaultInstance(),
        null,
        132,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        false,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class);
  public static final int PROPERTY_SETTER_ANNOTATION_FIELD_NUMBER = 133;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Property { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Property,
      java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>> propertySetterAnnotation = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Property.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.getDefaultInstance(),
        null,
        133,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        false,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class);
  public static final int COMPILE_TIME_VALUE_FIELD_NUMBER = 131;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Property { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Property,
      org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.Argument.Value> compileTimeValue = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Property.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.Argument.Value.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.Argument.Value.getDefaultInstance(),
        null,
        131,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.Argument.Value.class);
  public static final int PROPERTY_CONTAINING_FILE_ID_FIELD_NUMBER = 135;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Property { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Property,
      java.lang.Integer> propertyContainingFileId = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Property.getDefaultInstance(),
        0,
        null,
        null,
        135,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.INT32,
        java.lang.Integer.class);
  public static final int ENUM_ENTRY_ANNOTATION_FIELD_NUMBER = 130;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.EnumEntry { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.EnumEntry,
      java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>> enumEntryAnnotation = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.EnumEntry.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.getDefaultInstance(),
        null,
        130,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        false,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class);
  public static final int PARAMETER_ANNOTATION_FIELD_NUMBER = 130;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.ValueParameter { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.ValueParameter,
      java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>> parameterAnnotation = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.ValueParameter.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.getDefaultInstance(),
        null,
        130,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        false,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class);
  public static final int TYPE_ANNOTATION_FIELD_NUMBER = 130;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.Type { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.Type,
      java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>> typeAnnotation = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.Type.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.getDefaultInstance(),
        null,
        130,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        false,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class);
  public static final int TYPE_PARAMETER_ANNOTATION_FIELD_NUMBER = 130;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.TypeParameter { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.TypeParameter,
      java.util.List<org.jetbrains.kotlin.metadata.ProtoBuf.Annotation>> typeParameterAnnotation = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newRepeatedGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.TypeParameter.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.getDefaultInstance(),
        null,
        130,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        false,
        org.jetbrains.kotlin.metadata.ProtoBuf.Annotation.class);
  public static final int PACKAGE_FRAGMENT_FILES_FIELD_NUMBER = 130;
  /**
   * <code>extend .org.jetbrains.kotlin.metadata.PackageFragment { ... }</code>
   */
  public static final
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.GeneratedExtension<
      org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment,
      org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files> packageFragmentFiles = org.jetbrains.kotlin.protobuf.GeneratedMessageLite
          .newSingularGeneratedExtension(
        org.jetbrains.kotlin.metadata.ProtoBuf.PackageFragment.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files.getDefaultInstance(),
        org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files.getDefaultInstance(),
        null,
        130,
        org.jetbrains.kotlin.protobuf.WireFormat.FieldType.MESSAGE,
        org.jetbrains.kotlin.metadata.js.JsProtoBuf.Files.class);

  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}