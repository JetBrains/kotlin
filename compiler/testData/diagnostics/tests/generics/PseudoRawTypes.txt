package

package java {

    package java.awt {

        package java.awt.event {
        }
    }

    package java.beans {

        package java.beans.beancontext {
        }
    }

    package java.io {
    }

    package java.lang {

        package java.lang.annotation {
        }

        package java.lang.reflect {
        }
    }

    package java.net {
    }

    package java.nio {

        package java.nio.charset {
        }
    }

    package java.rmi {
    }

    package java.security {
    }

    package java.sql {
    }

    package java.util {

        public open class Collection {
            public constructor Collection()
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open fun foo(): kotlin.Unit
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }

        package java.util.concurrent {

            package java.util.concurrent.atomic {
            }

            package java.util.concurrent.locks {
            }
        }

        package java.util.regex {
        }
    }
}

package test {
    public fun foo(/*0*/ u: test.Usage): kotlin.Unit

    public open class Usage {
        public constructor Usage()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public/*package*/ open fun foo(/*0*/ c: kotlin.collections.(Mutable)Collection<*>!): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}
