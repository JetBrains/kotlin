/*
 * Copyright 2000-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license
 * that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.idea.editor;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TargetBackend;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("idea/testData/editor/enterHandler/multilineString")
@TestDataPath("$PROJECT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public class MultiLineStringIndentTestGenerated extends AbstractMultiLineStringIndentTest {
    public void testAllFilesPresentInMultilineString() throws Exception {
        KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/editor/enterHandler/multilineString"), Pattern.compile("^(.+)\\.kt$"), TargetBackend.ANY, true);
    }

    @TestMetadata("idea/testData/editor/enterHandler/multilineString/spaces")
    @TestDataPath("$PROJECT_ROOT")
    @RunWith(JUnit3RunnerWithInners.class)
    public static class Spaces extends AbstractMultiLineStringIndentTest {
        public void testAllFilesPresentInSpaces() throws Exception {
            KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/editor/enterHandler/multilineString/spaces"), Pattern.compile("^(.+)\\.kt$"), TargetBackend.ANY, true);
        }

        @TestMetadata("dontAddMarginCharWhenMultilineWithoutMargins.kt")
        public void testDontAddMarginCharWhenMultilineWithoutMargins() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/dontAddMarginCharWhenMultilineWithoutMargins.kt");
            doTest(fileName);
        }

        @TestMetadata("dontAddMarginWhenItIsUnused.kt")
        public void testDontAddMarginWhenItIsUnused() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/dontAddMarginWhenItIsUnused.kt");
            doTest(fileName);
        }

        @TestMetadata("dontAddMarginWhenItIsUnusedWithEmptyPrevious.kt")
        public void testDontAddMarginWhenItIsUnusedWithEmptyPrevious() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/dontAddMarginWhenItIsUnusedWithEmptyPrevious.kt");
            doTest(fileName);
        }

        @TestMetadata("dontAddTrimCallWhenAlreadyMultiline.kt")
        public void testDontAddTrimCallWhenAlreadyMultiline() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/dontAddTrimCallWhenAlreadyMultiline.kt");
            doTest(fileName);
        }

        @TestMetadata("dontAddTrimCallWhenAlreadyMultilineFirstLine.kt")
        public void testDontAddTrimCallWhenAlreadyMultilineFirstLine() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/dontAddTrimCallWhenAlreadyMultilineFirstLine.kt");
            doTest(fileName);
        }

        @TestMetadata("dontInsertTrimMargin1.kt")
        public void testDontInsertTrimMargin1() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/dontInsertTrimMargin1.kt");
            doTest(fileName);
        }

        @TestMetadata("dontInsertTrimMargin2.kt")
        public void testDontInsertTrimMargin2() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/dontInsertTrimMargin2.kt");
            doTest(fileName);
        }

        @TestMetadata("dontInsertTrimMargin3.kt")
        public void testDontInsertTrimMargin3() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/dontInsertTrimMargin3.kt");
            doTest(fileName);
        }

        @TestMetadata("dontInsertTrimMargin4.kt")
        public void testDontInsertTrimMargin4() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/dontInsertTrimMargin4.kt");
            doTest(fileName);
        }

        @TestMetadata("enterAfterOpenningBrace.kt")
        public void testEnterAfterOpenningBrace() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterAfterOpenningBrace.kt");
            doTest(fileName);
        }

        @TestMetadata("enterBeforeLongEntryOneLine.kt")
        public void testEnterBeforeLongEntryOneLine() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterBeforeLongEntryOneLine.kt");
            doTest(fileName);
        }

        @TestMetadata("enterBeforeMarginChar.kt")
        public void testEnterBeforeMarginChar() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterBeforeMarginChar.kt");
            doTest(fileName);
        }

        @TestMetadata("enterBeforeShortEntryOneLine.kt")
        public void testEnterBeforeShortEntryOneLine() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterBeforeShortEntryOneLine.kt");
            doTest(fileName);
        }

        @TestMetadata("enterInInfixMargin.kt")
        public void testEnterInInfixMargin() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterInInfixMargin.kt");
            doTest(fileName);
        }

        @TestMetadata("enterInInjectedFragment.kt")
        public void testEnterInInjectedFragment() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterInInjectedFragment.kt");
            doTest(fileName);
        }

        @TestMetadata("enterInLineWithMarginOnNotMargedLine.kt")
        public void testEnterInLineWithMarginOnNotMargedLine() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterInLineWithMarginOnNotMargedLine.kt");
            doTest(fileName);
        }

        @TestMetadata("enterInMethodCallMargin.kt")
        public void testEnterInMethodCallMargin() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterInMethodCallMargin.kt");
            doTest(fileName);
        }

        @TestMetadata("enterInOneLineAfterSpaces.kt")
        public void testEnterInOneLineAfterSpaces() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterInOneLineAfterSpaces.kt");
            doTest(fileName);
        }

        @TestMetadata("enterInTwoLinesNoMarginCall.kt")
        public void testEnterInTwoLinesNoMarginCall() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterInTwoLinesNoMarginCall.kt");
            doTest(fileName);
        }

        @TestMetadata("enterInsideBraces.kt")
        public void testEnterInsideBraces() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterInsideBraces.kt");
            doTest(fileName);
        }

        @TestMetadata("enterInsideBraces1.kt")
        public void testEnterInsideBraces1() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterInsideBraces1.kt");
            doTest(fileName);
        }

        @TestMetadata("enterInsideBraces2.kt")
        public void testEnterInsideBraces2() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterInsideBraces2.kt");
            doTest(fileName);
        }

        @TestMetadata("enterInsideTextMargin.kt")
        public void testEnterInsideTextMargin() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterInsideTextMargin.kt");
            doTest(fileName);
        }

        @TestMetadata("enterMLSimpleMargin.kt")
        public void testEnterMLSimpleMargin() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterMLSimpleMargin.kt");
            doTest(fileName);
        }

        @TestMetadata("enterMLStartOnSameLineMargin.kt")
        public void testEnterMLStartOnSameLineMargin() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterMLStartOnSameLineMargin.kt");
            doTest(fileName);
        }

        @TestMetadata("enterOnFirstLineWithPresentTrimMargin.kt")
        public void testEnterOnFirstLineWithPresentTrimMargin() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterOnFirstLineWithPresentTrimMargin.kt");
            doTest(fileName);
        }

        @TestMetadata("enterOnFirstLineWithPresentTrimMarginAndLine.kt")
        public void testEnterOnFirstLineWithPresentTrimMarginAndLine() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterOnFirstLineWithPresentTrimMarginAndLine.kt");
            doTest(fileName);
        }

        @TestMetadata("enterOnFirstNonEmptyLineWithPresentTrimMargin.kt")
        public void testEnterOnFirstNonEmptyLineWithPresentTrimMargin() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterOnFirstNonEmptyLineWithPresentTrimMargin.kt");
            doTest(fileName);
        }

        @TestMetadata("enterOnNewLine.kt")
        public void testEnterOnNewLine() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterOnNewLine.kt");
            doTest(fileName);
        }

        @TestMetadata("enterSimple.kt")
        public void testEnterSimple() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterSimple.kt");
            doTest(fileName);
        }

        @TestMetadata("enterWithTextMargin.kt")
        public void testEnterWithTextMargin() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterWithTextMargin.kt");
            doTest(fileName);
        }

        @TestMetadata("enterWithTextOnNewLineMargin.kt")
        public void testEnterWithTextOnNewLineMargin() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/enterWithTextOnNewLineMargin.kt");
            doTest(fileName);
        }

        @TestMetadata("insertCustomMargin.kt")
        public void testInsertCustomMargin() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/insertCustomMargin.kt");
            doTest(fileName);
        }

        @TestMetadata("insertCustomMarginInLineStart.kt")
        public void testInsertCustomMarginInLineStart() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/insertCustomMarginInLineStart.kt");
            doTest(fileName);
        }

        @TestMetadata("insertDefaultMargin.kt")
        public void testInsertDefaultMargin() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/insertDefaultMargin.kt");
            doTest(fileName);
        }

        @TestMetadata("noTrimIndentInAnnotations.kt")
        public void testNoTrimIndentInAnnotations() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/noTrimIndentInAnnotations.kt");
            doTest(fileName);
        }

        @TestMetadata("restoreIndentFromEmptyLine.kt")
        public void testRestoreIndentFromEmptyLine() throws Exception {
            String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/spaces/restoreIndentFromEmptyLine.kt");
            doTest(fileName);
        }
    }

    @TestMetadata("idea/testData/editor/enterHandler/multilineString/withTabs")
    @TestDataPath("$PROJECT_ROOT")
    @RunWith(JUnit3RunnerWithInners.class)
    public static class WithTabs extends AbstractMultiLineStringIndentTest {
        public void testAllFilesPresentInWithTabs() throws Exception {
            KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/editor/enterHandler/multilineString/withTabs"), Pattern.compile("^(.+)\\.kt$"), TargetBackend.ANY, true);
        }

        @TestMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs2")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class Tabs2 extends AbstractMultiLineStringIndentTest {
            public void testAllFilesPresentInTabs2() throws Exception {
                KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/editor/enterHandler/multilineString/withTabs/tabs2"), Pattern.compile("^(.+)\\.kt$"), TargetBackend.ANY, true);
            }

            @TestMetadata("dontInsertTrimMarginCall.kt")
            public void testDontInsertTrimMarginCall() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs2/dontInsertTrimMarginCall.kt");
                doTest(fileName);
            }

            @TestMetadata("enterInMethodCallMargin.kt")
            public void testEnterInMethodCallMargin() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs2/enterInMethodCallMargin.kt");
                doTest(fileName);
            }

            @TestMetadata("enterInTwoLinesNoMarginCall.kt")
            public void testEnterInTwoLinesNoMarginCall() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs2/enterInTwoLinesNoMarginCall.kt");
                doTest(fileName);
            }

            @TestMetadata("enterInsideBraces.kt")
            public void testEnterInsideBraces() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs2/enterInsideBraces.kt");
                doTest(fileName);
            }

            @TestMetadata("enterInsideText.kt")
            public void testEnterInsideText() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs2/enterInsideText.kt");
                doTest(fileName);
            }

            @TestMetadata("enterMLSimpleMargin.kt")
            public void testEnterMLSimpleMargin() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs2/enterMLSimpleMargin.kt");
                doTest(fileName);
            }

            @TestMetadata("enterMLStartOnSameLineMargin.kt")
            public void testEnterMLStartOnSameLineMargin() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs2/enterMLStartOnSameLineMargin.kt");
                doTest(fileName);
            }

            @TestMetadata("enterOnNewLineMargin.kt")
            public void testEnterOnNewLineMargin() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs2/enterOnNewLineMargin.kt");
                doTest(fileName);
            }

            @TestMetadata("enterSimpleMargin.kt")
            public void testEnterSimpleMargin() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs2/enterSimpleMargin.kt");
                doTest(fileName);
            }

            @TestMetadata("enterWithTextMargin.kt")
            public void testEnterWithTextMargin() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs2/enterWithTextMargin.kt");
                doTest(fileName);
            }

            @TestMetadata("enterWithTextOnNewLineMargin.kt")
            public void testEnterWithTextOnNewLineMargin() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs2/enterWithTextOnNewLineMargin.kt");
                doTest(fileName);
            }
        }

        @TestMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs4")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class Tabs4 extends AbstractMultiLineStringIndentTest {
            public void testAllFilesPresentInTabs4() throws Exception {
                KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/editor/enterHandler/multilineString/withTabs/tabs4"), Pattern.compile("^(.+)\\.kt$"), TargetBackend.ANY, true);
            }

            @TestMetadata("dontInsertTrimMarginCall.kt")
            public void testDontInsertTrimMarginCall() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs4/dontInsertTrimMarginCall.kt");
                doTest(fileName);
            }

            @TestMetadata("enterInMethodCallMargin.kt")
            public void testEnterInMethodCallMargin() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs4/enterInMethodCallMargin.kt");
                doTest(fileName);
            }

            @TestMetadata("enterInsideBraces.kt")
            public void testEnterInsideBraces() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs4/enterInsideBraces.kt");
                doTest(fileName);
            }

            @TestMetadata("enterInsideText.kt")
            public void testEnterInsideText() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs4/enterInsideText.kt");
                doTest(fileName);
            }

            @TestMetadata("enterMLSimpleMargin.kt")
            public void testEnterMLSimpleMargin() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs4/enterMLSimpleMargin.kt");
                doTest(fileName);
            }

            @TestMetadata("enterMLStartOnSameLineMargin.kt")
            public void testEnterMLStartOnSameLineMargin() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs4/enterMLStartOnSameLineMargin.kt");
                doTest(fileName);
            }

            @TestMetadata("enterOnNewLineMargin.kt")
            public void testEnterOnNewLineMargin() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs4/enterOnNewLineMargin.kt");
                doTest(fileName);
            }

            @TestMetadata("enterSimpleMargin.kt")
            public void testEnterSimpleMargin() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs4/enterSimpleMargin.kt");
                doTest(fileName);
            }

            @TestMetadata("enterWithTabsAfterMarginChar.kt")
            public void testEnterWithTabsAfterMarginChar() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs4/enterWithTabsAfterMarginChar.kt");
                doTest(fileName);
            }

            @TestMetadata("enterWithTextMargin.kt")
            public void testEnterWithTextMargin() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs4/enterWithTextMargin.kt");
                doTest(fileName);
            }

            @TestMetadata("enterWithTextOnNewLineMargin.kt")
            public void testEnterWithTextOnNewLineMargin() throws Exception {
                String fileName = KotlinTestUtils.navigationMetadata("idea/testData/editor/enterHandler/multilineString/withTabs/tabs4/enterWithTextOnNewLineMargin.kt");
                doTest(fileName);
            }
        }
    }
}
