/* MODULE name=<main> */

/* FILE package=<root> fileName=leakingPrivateExtensionValThroughReferenceInInternalInlineFun.kt */

private val String.privateVal: String
    /* TARGET declaration */ private fun String.<get-privateVal>(): String
internal inline fun internalInlineFunction(): KProperty1<String, String>
    /* RICH PROPERTY REFERENCE */
        /* LOCAL declaration @0 */ local fun <get-privateVal>(p0: String): String
            /* ACCESSOR use-site */ access$<get-privateVal>$tLeakingPrivateExtensionValThroughReferenceInInternalInlineFunKt($receiver = p0)
private inline fun privateInlineFunction(): KProperty1<String, String>
    /* RICH PROPERTY REFERENCE */
        /* LOCAL declaration @1 */ local fun <get-privateVal>(p0: String): String
            /* TARGET use-site */ <get-privateVal>(/* <this> = p0 */)
internal inline fun transitiveInlineFunction(): KProperty1<String, String>
    /* RICH PROPERTY REFERENCE */
        /* LOCAL declaration @2 */ local fun <get-privateVal>(p0: String): String
            /* ACCESSOR use-site */ access$<get-privateVal>$tLeakingPrivateExtensionValThroughReferenceInInternalInlineFunKt($receiver = p0)
public fun box(): String
    /* RICH PROPERTY REFERENCE */
        /* LOCAL declaration @3 */ local fun <get-privateVal>(p0: String): String
            /* ACCESSOR use-site */ access$<get-privateVal>$tLeakingPrivateExtensionValThroughReferenceInInternalInlineFunKt($receiver = p0)
    /* RICH PROPERTY REFERENCE */
        /* LOCAL declaration @4 */ local fun <get-privateVal>(p0: String): String
            /* ACCESSOR use-site */ access$<get-privateVal>$tLeakingPrivateExtensionValThroughReferenceInInternalInlineFunKt($receiver = p0)
/* ACCESSOR declaration */ internal fun access$<get-privateVal>$tLeakingPrivateExtensionValThroughReferenceInInternalInlineFunKt($receiver: String): String
    /* TARGET use-site */ <get-privateVal>(/* <this> = $receiver */)
