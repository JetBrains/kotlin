public final class MyClass {
    private static final int CONST

    public static final MyClass.Companion Companion

    public final void myClassFun()

    public void <init>()

    public static final class Companion {
        public final int getCONST()
    
        private void <init>()
    }

    public static final class NestedClass {
        private static final int CONSTA
    
        public static final MyClass.NestedClass.A A
    
        public final void nestedClassFun()
    
        public void <init>()
    
        public static final class A {
            public final int getCONSTA()
        
            private void <init>()
        }
    
        public static final class NestedNestedClass {
            public final void nestedNestedClassFun()
        
            public void <init>()
        }
    }

    public final class InnerClass {
        public final void innerClassFun()
    
        public void <init>()
    }

    public static abstract interface InnerInterface {
        public abstract void innerInterfaceFun()
    
        public abstract int innerInterfaceFunWithImpl()
    
        public static final class DefaultImpls {
            public static int innerInterfaceFunWithImpl(MyClass.InnerInterface $this)
        
            public void <init>()
        }
    }
}