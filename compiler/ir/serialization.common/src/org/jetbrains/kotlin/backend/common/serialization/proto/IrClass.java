// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: compiler/ir/serialization.common/src/KotlinIr.proto
// Protobuf Java Version: 4.29.3

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrClass}
 */
public final class IrClass extends
    org.jetbrains.kotlin.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrClass)
    IrClassOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    org.jetbrains.kotlin.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      org.jetbrains.kotlin.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      IrClass.class.getName());
  }
  // Use IrClass.newBuilder() to construct.
  private IrClass(org.jetbrains.kotlin.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private IrClass() {
    typeParameter_ = java.util.Collections.emptyList();
    declaration_ = java.util.Collections.emptyList();
    superType_ = emptyIntList();
    sealedSubclass_ = emptyLongList();
  }

  public static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.jetbrains.kotlin.backend.common.serialization.proto.KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrClass_descriptor;
  }

  @java.lang.Override
  protected org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.jetbrains.kotlin.backend.common.serialization.proto.KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrClass_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.jetbrains.kotlin.backend.common.serialization.proto.IrClass.class, org.jetbrains.kotlin.backend.common.serialization.proto.IrClass.Builder.class);
  }

  private int bitField0_;
  public static final int BASE_FIELD_NUMBER = 1;
  private org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base_;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
   * @return Whether the base field is set.
   */
  @java.lang.Override
  public boolean hasBase() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
   * @return The base.
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase getBase() {
    return base_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.getDefaultInstance() : base_;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBaseOrBuilder getBaseOrBuilder() {
    return base_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.getDefaultInstance() : base_;
  }

  public static final int NAME_FIELD_NUMBER = 2;
  private int name_ = 0;
  /**
   * <code>int32 name = 2 [features = { ... }</code>
   * @return Whether the name field is set.
   */
  @java.lang.Override
  public boolean hasName() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>int32 name = 2 [features = { ... }</code>
   * @return The name.
   */
  @java.lang.Override
  public int getName() {
    return name_;
  }

  public static final int THIS_RECEIVER_FIELD_NUMBER = 3;
  private org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter thisReceiver_;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
   * @return Whether the thisReceiver field is set.
   */
  @java.lang.Override
  public boolean hasThisReceiver() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
   * @return The thisReceiver.
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter getThisReceiver() {
    return thisReceiver_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.getDefaultInstance() : thisReceiver_;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameterOrBuilder getThisReceiverOrBuilder() {
    return thisReceiver_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.getDefaultInstance() : thisReceiver_;
  }

  public static final int TYPE_PARAMETER_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter> typeParameter_;
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
   */
  @java.lang.Override
  public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter> getTypeParameterList() {
    return typeParameter_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameterOrBuilder> 
      getTypeParameterOrBuilderList() {
    return typeParameter_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
   */
  @java.lang.Override
  public int getTypeParameterCount() {
    return typeParameter_.size();
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter getTypeParameter(int index) {
    return typeParameter_.get(index);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameterOrBuilder getTypeParameterOrBuilder(
      int index) {
    return typeParameter_.get(index);
  }

  public static final int DECLARATION_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration> declaration_;
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
   */
  @java.lang.Override
  public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration> getDeclarationList() {
    return declaration_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationOrBuilder> 
      getDeclarationOrBuilderList() {
    return declaration_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
   */
  @java.lang.Override
  public int getDeclarationCount() {
    return declaration_.size();
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration getDeclaration(int index) {
    return declaration_.get(index);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationOrBuilder getDeclarationOrBuilder(
      int index) {
    return declaration_.get(index);
  }

  public static final int SUPER_TYPE_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private org.jetbrains.kotlin.protobuf.Internal.IntList superType_ =
      emptyIntList();
  /**
   * <code>repeated int32 super_type = 6;</code>
   * @return A list containing the superType.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getSuperTypeList() {
    return superType_;
  }
  /**
   * <code>repeated int32 super_type = 6;</code>
   * @return The count of superType.
   */
  public int getSuperTypeCount() {
    return superType_.size();
  }
  /**
   * <code>repeated int32 super_type = 6;</code>
   * @param index The index of the element to return.
   * @return The superType at the given index.
   */
  public int getSuperType(int index) {
    return superType_.getInt(index);
  }
  private int superTypeMemoizedSerializedSize = -1;

  public static final int INLINE_CLASS_REPRESENTATION_FIELD_NUMBER = 7;
  private org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inlineClassRepresentation_;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
   * @return Whether the inlineClassRepresentation field is set.
   */
  @java.lang.Override
  public boolean hasInlineClassRepresentation() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
   * @return The inlineClassRepresentation.
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation getInlineClassRepresentation() {
    return inlineClassRepresentation_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.getDefaultInstance() : inlineClassRepresentation_;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentationOrBuilder getInlineClassRepresentationOrBuilder() {
    return inlineClassRepresentation_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.getDefaultInstance() : inlineClassRepresentation_;
  }

  public static final int MULTI_FIELD_VALUE_CLASS_REPRESENTATION_FIELD_NUMBER = 9;
  private org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multiFieldValueClassRepresentation_;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
   * @return Whether the multiFieldValueClassRepresentation field is set.
   */
  @java.lang.Override
  public boolean hasMultiFieldValueClassRepresentation() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
   * @return The multiFieldValueClassRepresentation.
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation getMultiFieldValueClassRepresentation() {
    return multiFieldValueClassRepresentation_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.getDefaultInstance() : multiFieldValueClassRepresentation_;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentationOrBuilder getMultiFieldValueClassRepresentationOrBuilder() {
    return multiFieldValueClassRepresentation_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.getDefaultInstance() : multiFieldValueClassRepresentation_;
  }

  public static final int SEALED_SUBCLASS_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private org.jetbrains.kotlin.protobuf.Internal.LongList sealedSubclass_ =
      emptyLongList();
  /**
   * <code>repeated int64 sealed_subclass = 8;</code>
   * @return A list containing the sealedSubclass.
   */
  @java.lang.Override
  public java.util.List<java.lang.Long>
      getSealedSubclassList() {
    return sealedSubclass_;
  }
  /**
   * <code>repeated int64 sealed_subclass = 8;</code>
   * @return The count of sealedSubclass.
   */
  public int getSealedSubclassCount() {
    return sealedSubclass_.size();
  }
  /**
   * <code>repeated int64 sealed_subclass = 8;</code>
   * @param index The index of the element to return.
   * @return The sealedSubclass at the given index.
   */
  public long getSealedSubclass(int index) {
    return sealedSubclass_.getLong(index);
  }
  private int sealedSubclassMemoizedSerializedSize = -1;

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasBase()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasName()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!getBase().isInitialized()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (hasThisReceiver()) {
      if (!getThisReceiver().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getTypeParameterCount(); i++) {
      if (!getTypeParameter(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getDeclarationCount(); i++) {
      if (!getDeclaration(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasInlineClassRepresentation()) {
      if (!getInlineClassRepresentation().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(org.jetbrains.kotlin.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getBase());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeInt32(2, name_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(3, getThisReceiver());
    }
    for (int i = 0; i < typeParameter_.size(); i++) {
      output.writeMessage(4, typeParameter_.get(i));
    }
    for (int i = 0; i < declaration_.size(); i++) {
      output.writeMessage(5, declaration_.get(i));
    }
    if (getSuperTypeList().size() > 0) {
      output.writeUInt32NoTag(50);
      output.writeUInt32NoTag(superTypeMemoizedSerializedSize);
    }
    for (int i = 0; i < superType_.size(); i++) {
      output.writeInt32NoTag(superType_.getInt(i));
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(7, getInlineClassRepresentation());
    }
    if (getSealedSubclassList().size() > 0) {
      output.writeUInt32NoTag(66);
      output.writeUInt32NoTag(sealedSubclassMemoizedSerializedSize);
    }
    for (int i = 0; i < sealedSubclass_.size(); i++) {
      output.writeInt64NoTag(sealedSubclass_.getLong(i));
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeMessage(9, getMultiFieldValueClassRepresentation());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(1, getBase());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeInt32Size(2, name_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(3, getThisReceiver());
    }
    for (int i = 0; i < typeParameter_.size(); i++) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(4, typeParameter_.get(i));
    }
    for (int i = 0; i < declaration_.size(); i++) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(5, declaration_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < superType_.size(); i++) {
        dataSize += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(superType_.getInt(i));
      }
      size += dataSize;
      if (!getSuperTypeList().isEmpty()) {
        size += 1;
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      superTypeMemoizedSerializedSize = dataSize;
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(7, getInlineClassRepresentation());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < sealedSubclass_.size(); i++) {
        dataSize += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeInt64SizeNoTag(sealedSubclass_.getLong(i));
      }
      size += dataSize;
      if (!getSealedSubclassList().isEmpty()) {
        size += 1;
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      sealedSubclassMemoizedSerializedSize = dataSize;
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(9, getMultiFieldValueClassRepresentation());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.jetbrains.kotlin.backend.common.serialization.proto.IrClass)) {
      return super.equals(obj);
    }
    org.jetbrains.kotlin.backend.common.serialization.proto.IrClass other = (org.jetbrains.kotlin.backend.common.serialization.proto.IrClass) obj;

    if (hasBase() != other.hasBase()) return false;
    if (hasBase()) {
      if (!getBase()
          .equals(other.getBase())) return false;
    }
    if (hasName() != other.hasName()) return false;
    if (hasName()) {
      if (getName()
          != other.getName()) return false;
    }
    if (hasThisReceiver() != other.hasThisReceiver()) return false;
    if (hasThisReceiver()) {
      if (!getThisReceiver()
          .equals(other.getThisReceiver())) return false;
    }
    if (!getTypeParameterList()
        .equals(other.getTypeParameterList())) return false;
    if (!getDeclarationList()
        .equals(other.getDeclarationList())) return false;
    if (!getSuperTypeList()
        .equals(other.getSuperTypeList())) return false;
    if (hasInlineClassRepresentation() != other.hasInlineClassRepresentation()) return false;
    if (hasInlineClassRepresentation()) {
      if (!getInlineClassRepresentation()
          .equals(other.getInlineClassRepresentation())) return false;
    }
    if (hasMultiFieldValueClassRepresentation() != other.hasMultiFieldValueClassRepresentation()) return false;
    if (hasMultiFieldValueClassRepresentation()) {
      if (!getMultiFieldValueClassRepresentation()
          .equals(other.getMultiFieldValueClassRepresentation())) return false;
    }
    if (!getSealedSubclassList()
        .equals(other.getSealedSubclassList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasBase()) {
      hash = (37 * hash) + BASE_FIELD_NUMBER;
      hash = (53 * hash) + getBase().hashCode();
    }
    if (hasName()) {
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName();
    }
    if (hasThisReceiver()) {
      hash = (37 * hash) + THIS_RECEIVER_FIELD_NUMBER;
      hash = (53 * hash) + getThisReceiver().hashCode();
    }
    if (getTypeParameterCount() > 0) {
      hash = (37 * hash) + TYPE_PARAMETER_FIELD_NUMBER;
      hash = (53 * hash) + getTypeParameterList().hashCode();
    }
    if (getDeclarationCount() > 0) {
      hash = (37 * hash) + DECLARATION_FIELD_NUMBER;
      hash = (53 * hash) + getDeclarationList().hashCode();
    }
    if (getSuperTypeCount() > 0) {
      hash = (37 * hash) + SUPER_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getSuperTypeList().hashCode();
    }
    if (hasInlineClassRepresentation()) {
      hash = (37 * hash) + INLINE_CLASS_REPRESENTATION_FIELD_NUMBER;
      hash = (53 * hash) + getInlineClassRepresentation().hashCode();
    }
    if (hasMultiFieldValueClassRepresentation()) {
      hash = (37 * hash) + MULTI_FIELD_VALUE_CLASS_REPRESENTATION_FIELD_NUMBER;
      hash = (53 * hash) + getMultiFieldValueClassRepresentation().hashCode();
    }
    if (getSealedSubclassCount() > 0) {
      hash = (37 * hash) + SEALED_SUBCLASS_FIELD_NUMBER;
      hash = (53 * hash) + getSealedSubclassList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseFrom(
      java.nio.ByteBuffer data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseFrom(
      java.nio.ByteBuffer data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseFrom(byte[] data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseFrom(
      byte[] data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseDelimitedFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.jetbrains.kotlin.backend.common.serialization.proto.IrClass prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      org.jetbrains.kotlin.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrClass}
   */
  public static final class Builder extends
      org.jetbrains.kotlin.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrClass)
      org.jetbrains.kotlin.backend.common.serialization.proto.IrClassOrBuilder {
    public static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.jetbrains.kotlin.backend.common.serialization.proto.KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrClass_descriptor;
    }

    @java.lang.Override
    protected org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.jetbrains.kotlin.backend.common.serialization.proto.KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrClass_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.jetbrains.kotlin.backend.common.serialization.proto.IrClass.class, org.jetbrains.kotlin.backend.common.serialization.proto.IrClass.Builder.class);
    }

    // Construct using org.jetbrains.kotlin.backend.common.serialization.proto.IrClass.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        org.jetbrains.kotlin.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (org.jetbrains.kotlin.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getBaseFieldBuilder();
        getThisReceiverFieldBuilder();
        getTypeParameterFieldBuilder();
        getDeclarationFieldBuilder();
        getInlineClassRepresentationFieldBuilder();
        getMultiFieldValueClassRepresentationFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      base_ = null;
      if (baseBuilder_ != null) {
        baseBuilder_.dispose();
        baseBuilder_ = null;
      }
      name_ = 0;
      thisReceiver_ = null;
      if (thisReceiverBuilder_ != null) {
        thisReceiverBuilder_.dispose();
        thisReceiverBuilder_ = null;
      }
      if (typeParameterBuilder_ == null) {
        typeParameter_ = java.util.Collections.emptyList();
      } else {
        typeParameter_ = null;
        typeParameterBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      if (declarationBuilder_ == null) {
        declaration_ = java.util.Collections.emptyList();
      } else {
        declaration_ = null;
        declarationBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      superType_ = emptyIntList();
      inlineClassRepresentation_ = null;
      if (inlineClassRepresentationBuilder_ != null) {
        inlineClassRepresentationBuilder_.dispose();
        inlineClassRepresentationBuilder_ = null;
      }
      multiFieldValueClassRepresentation_ = null;
      if (multiFieldValueClassRepresentationBuilder_ != null) {
        multiFieldValueClassRepresentationBuilder_.dispose();
        multiFieldValueClassRepresentationBuilder_ = null;
      }
      sealedSubclass_ = emptyLongList();
      return this;
    }

    @java.lang.Override
    public org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.jetbrains.kotlin.backend.common.serialization.proto.KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrClass_descriptor;
    }

    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrClass getDefaultInstanceForType() {
      return org.jetbrains.kotlin.backend.common.serialization.proto.IrClass.getDefaultInstance();
    }

    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrClass build() {
      org.jetbrains.kotlin.backend.common.serialization.proto.IrClass result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrClass buildPartial() {
      org.jetbrains.kotlin.backend.common.serialization.proto.IrClass result = new org.jetbrains.kotlin.backend.common.serialization.proto.IrClass(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(org.jetbrains.kotlin.backend.common.serialization.proto.IrClass result) {
      if (typeParameterBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          typeParameter_ = java.util.Collections.unmodifiableList(typeParameter_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.typeParameter_ = typeParameter_;
      } else {
        result.typeParameter_ = typeParameterBuilder_.build();
      }
      if (declarationBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          declaration_ = java.util.Collections.unmodifiableList(declaration_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.declaration_ = declaration_;
      } else {
        result.declaration_ = declarationBuilder_.build();
      }
    }

    private void buildPartial0(org.jetbrains.kotlin.backend.common.serialization.proto.IrClass result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.base_ = baseBuilder_ == null
            ? base_
            : baseBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.name_ = name_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.thisReceiver_ = thisReceiverBuilder_ == null
            ? thisReceiver_
            : thisReceiverBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        superType_.makeImmutable();
        result.superType_ = superType_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.inlineClassRepresentation_ = inlineClassRepresentationBuilder_ == null
            ? inlineClassRepresentation_
            : inlineClassRepresentationBuilder_.build();
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.multiFieldValueClassRepresentation_ = multiFieldValueClassRepresentationBuilder_ == null
            ? multiFieldValueClassRepresentation_
            : multiFieldValueClassRepresentationBuilder_.build();
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        sealedSubclass_.makeImmutable();
        result.sealedSubclass_ = sealedSubclass_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(org.jetbrains.kotlin.protobuf.Message other) {
      if (other instanceof org.jetbrains.kotlin.backend.common.serialization.proto.IrClass) {
        return mergeFrom((org.jetbrains.kotlin.backend.common.serialization.proto.IrClass)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.jetbrains.kotlin.backend.common.serialization.proto.IrClass other) {
      if (other == org.jetbrains.kotlin.backend.common.serialization.proto.IrClass.getDefaultInstance()) return this;
      if (other.hasBase()) {
        mergeBase(other.getBase());
      }
      if (other.hasName()) {
        setName(other.getName());
      }
      if (other.hasThisReceiver()) {
        mergeThisReceiver(other.getThisReceiver());
      }
      if (typeParameterBuilder_ == null) {
        if (!other.typeParameter_.isEmpty()) {
          if (typeParameter_.isEmpty()) {
            typeParameter_ = other.typeParameter_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTypeParameterIsMutable();
            typeParameter_.addAll(other.typeParameter_);
          }
          onChanged();
        }
      } else {
        if (!other.typeParameter_.isEmpty()) {
          if (typeParameterBuilder_.isEmpty()) {
            typeParameterBuilder_.dispose();
            typeParameterBuilder_ = null;
            typeParameter_ = other.typeParameter_;
            bitField0_ = (bitField0_ & ~0x00000008);
            typeParameterBuilder_ = 
              org.jetbrains.kotlin.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getTypeParameterFieldBuilder() : null;
          } else {
            typeParameterBuilder_.addAllMessages(other.typeParameter_);
          }
        }
      }
      if (declarationBuilder_ == null) {
        if (!other.declaration_.isEmpty()) {
          if (declaration_.isEmpty()) {
            declaration_ = other.declaration_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureDeclarationIsMutable();
            declaration_.addAll(other.declaration_);
          }
          onChanged();
        }
      } else {
        if (!other.declaration_.isEmpty()) {
          if (declarationBuilder_.isEmpty()) {
            declarationBuilder_.dispose();
            declarationBuilder_ = null;
            declaration_ = other.declaration_;
            bitField0_ = (bitField0_ & ~0x00000010);
            declarationBuilder_ = 
              org.jetbrains.kotlin.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getDeclarationFieldBuilder() : null;
          } else {
            declarationBuilder_.addAllMessages(other.declaration_);
          }
        }
      }
      if (!other.superType_.isEmpty()) {
        if (superType_.isEmpty()) {
          superType_ = other.superType_;
          superType_.makeImmutable();
          bitField0_ |= 0x00000020;
        } else {
          ensureSuperTypeIsMutable();
          superType_.addAll(other.superType_);
        }
        onChanged();
      }
      if (other.hasInlineClassRepresentation()) {
        mergeInlineClassRepresentation(other.getInlineClassRepresentation());
      }
      if (other.hasMultiFieldValueClassRepresentation()) {
        mergeMultiFieldValueClassRepresentation(other.getMultiFieldValueClassRepresentation());
      }
      if (!other.sealedSubclass_.isEmpty()) {
        if (sealedSubclass_.isEmpty()) {
          sealedSubclass_ = other.sealedSubclass_;
          sealedSubclass_.makeImmutable();
          bitField0_ |= 0x00000100;
        } else {
          ensureSealedSubclassIsMutable();
          sealedSubclass_.addAll(other.sealedSubclass_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      if (!hasBase()) {
        return false;
      }
      if (!hasName()) {
        return false;
      }
      if (!getBase().isInitialized()) {
        return false;
      }
      if (hasThisReceiver()) {
        if (!getThisReceiver().isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getTypeParameterCount(); i++) {
        if (!getTypeParameter(i).isInitialized()) {
          return false;
        }
      }
      for (int i = 0; i < getDeclarationCount(); i++) {
        if (!getDeclaration(i).isInitialized()) {
          return false;
        }
      }
      if (hasInlineClassRepresentation()) {
        if (!getInlineClassRepresentation().isInitialized()) {
          return false;
        }
      }
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getBaseFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              name_ = input.readInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              input.readMessage(
                  getThisReceiverFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter m =
                  input.readMessage(
                      org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.parser(),
                      extensionRegistry);
              if (typeParameterBuilder_ == null) {
                ensureTypeParameterIsMutable();
                typeParameter_.add(m);
              } else {
                typeParameterBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration m =
                  input.readMessage(
                      org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.parser(),
                      extensionRegistry);
              if (declarationBuilder_ == null) {
                ensureDeclarationIsMutable();
                declaration_.add(m);
              } else {
                declarationBuilder_.addMessage(m);
              }
              break;
            } // case 42
            case 48: {
              int v = input.readInt32();
              ensureSuperTypeIsMutable();
              superType_.addInt(v);
              break;
            } // case 48
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureSuperTypeIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                superType_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            } // case 50
            case 58: {
              input.readMessage(
                  getInlineClassRepresentationFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000040;
              break;
            } // case 58
            case 64: {
              long v = input.readInt64();
              ensureSealedSubclassIsMutable();
              sealedSubclass_.addLong(v);
              break;
            } // case 64
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureSealedSubclassIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                sealedSubclass_.addLong(input.readInt64());
              }
              input.popLimit(limit);
              break;
            } // case 66
            case 74: {
              input.readMessage(
                  getMultiFieldValueClassRepresentationFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000080;
              break;
            } // case 74
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base_;
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBaseOrBuilder> baseBuilder_;
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
     * @return Whether the base field is set.
     */
    public boolean hasBase() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
     * @return The base.
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase getBase() {
      if (baseBuilder_ == null) {
        return base_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.getDefaultInstance() : base_;
      } else {
        return baseBuilder_.getMessage();
      }
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
     */
    public Builder setBase(org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase value) {
      if (baseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        base_ = value;
      } else {
        baseBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
     */
    public Builder setBase(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.Builder builderForValue) {
      if (baseBuilder_ == null) {
        base_ = builderForValue.build();
      } else {
        baseBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
     */
    public Builder mergeBase(org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase value) {
      if (baseBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          base_ != null &&
          base_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.getDefaultInstance()) {
          getBaseBuilder().mergeFrom(value);
        } else {
          base_ = value;
        }
      } else {
        baseBuilder_.mergeFrom(value);
      }
      if (base_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
     */
    public Builder clearBase() {
      bitField0_ = (bitField0_ & ~0x00000001);
      base_ = null;
      if (baseBuilder_ != null) {
        baseBuilder_.dispose();
        baseBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.Builder getBaseBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getBaseFieldBuilder().getBuilder();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBaseOrBuilder getBaseOrBuilder() {
      if (baseBuilder_ != null) {
        return baseBuilder_.getMessageOrBuilder();
      } else {
        return base_ == null ?
            org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.getDefaultInstance() : base_;
      }
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBaseOrBuilder> 
        getBaseFieldBuilder() {
      if (baseBuilder_ == null) {
        baseBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBaseOrBuilder>(
                getBase(),
                getParentForChildren(),
                isClean());
        base_ = null;
      }
      return baseBuilder_;
    }

    private int name_ ;
    /**
     * <code>int32 name = 2 [features = { ... }</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>int32 name = 2 [features = { ... }</code>
     * @return The name.
     */
    @java.lang.Override
    public int getName() {
      return name_;
    }
    /**
     * <code>int32 name = 2 [features = { ... }</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(int value) {

      name_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>int32 name = 2 [features = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      bitField0_ = (bitField0_ & ~0x00000002);
      name_ = 0;
      onChanged();
      return this;
    }

    private org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter thisReceiver_;
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameterOrBuilder> thisReceiverBuilder_;
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
     * @return Whether the thisReceiver field is set.
     */
    public boolean hasThisReceiver() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
     * @return The thisReceiver.
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter getThisReceiver() {
      if (thisReceiverBuilder_ == null) {
        return thisReceiver_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.getDefaultInstance() : thisReceiver_;
      } else {
        return thisReceiverBuilder_.getMessage();
      }
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
     */
    public Builder setThisReceiver(org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
      if (thisReceiverBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        thisReceiver_ = value;
      } else {
        thisReceiverBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
     */
    public Builder setThisReceiver(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.Builder builderForValue) {
      if (thisReceiverBuilder_ == null) {
        thisReceiver_ = builderForValue.build();
      } else {
        thisReceiverBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
     */
    public Builder mergeThisReceiver(org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
      if (thisReceiverBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          thisReceiver_ != null &&
          thisReceiver_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.getDefaultInstance()) {
          getThisReceiverBuilder().mergeFrom(value);
        } else {
          thisReceiver_ = value;
        }
      } else {
        thisReceiverBuilder_.mergeFrom(value);
      }
      if (thisReceiver_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
     */
    public Builder clearThisReceiver() {
      bitField0_ = (bitField0_ & ~0x00000004);
      thisReceiver_ = null;
      if (thisReceiverBuilder_ != null) {
        thisReceiverBuilder_.dispose();
        thisReceiverBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.Builder getThisReceiverBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getThisReceiverFieldBuilder().getBuilder();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameterOrBuilder getThisReceiverOrBuilder() {
      if (thisReceiverBuilder_ != null) {
        return thisReceiverBuilder_.getMessageOrBuilder();
      } else {
        return thisReceiver_ == null ?
            org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.getDefaultInstance() : thisReceiver_;
      }
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter this_receiver = 3;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameterOrBuilder> 
        getThisReceiverFieldBuilder() {
      if (thisReceiverBuilder_ == null) {
        thisReceiverBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameterOrBuilder>(
                getThisReceiver(),
                getParentForChildren(),
                isClean());
        thisReceiver_ = null;
      }
      return thisReceiverBuilder_;
    }

    private java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter> typeParameter_ =
      java.util.Collections.emptyList();
    private void ensureTypeParameterIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        typeParameter_ = new java.util.ArrayList<org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter>(typeParameter_);
        bitField0_ |= 0x00000008;
       }
    }

    private org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameterOrBuilder> typeParameterBuilder_;

    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter> getTypeParameterList() {
      if (typeParameterBuilder_ == null) {
        return java.util.Collections.unmodifiableList(typeParameter_);
      } else {
        return typeParameterBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public int getTypeParameterCount() {
      if (typeParameterBuilder_ == null) {
        return typeParameter_.size();
      } else {
        return typeParameterBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter getTypeParameter(int index) {
      if (typeParameterBuilder_ == null) {
        return typeParameter_.get(index);
      } else {
        return typeParameterBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public Builder setTypeParameter(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter value) {
      if (typeParameterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTypeParameterIsMutable();
        typeParameter_.set(index, value);
        onChanged();
      } else {
        typeParameterBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public Builder setTypeParameter(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder builderForValue) {
      if (typeParameterBuilder_ == null) {
        ensureTypeParameterIsMutable();
        typeParameter_.set(index, builderForValue.build());
        onChanged();
      } else {
        typeParameterBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public Builder addTypeParameter(org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter value) {
      if (typeParameterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTypeParameterIsMutable();
        typeParameter_.add(value);
        onChanged();
      } else {
        typeParameterBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public Builder addTypeParameter(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter value) {
      if (typeParameterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTypeParameterIsMutable();
        typeParameter_.add(index, value);
        onChanged();
      } else {
        typeParameterBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public Builder addTypeParameter(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder builderForValue) {
      if (typeParameterBuilder_ == null) {
        ensureTypeParameterIsMutable();
        typeParameter_.add(builderForValue.build());
        onChanged();
      } else {
        typeParameterBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public Builder addTypeParameter(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder builderForValue) {
      if (typeParameterBuilder_ == null) {
        ensureTypeParameterIsMutable();
        typeParameter_.add(index, builderForValue.build());
        onChanged();
      } else {
        typeParameterBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public Builder addAllTypeParameter(
        java.lang.Iterable<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter> values) {
      if (typeParameterBuilder_ == null) {
        ensureTypeParameterIsMutable();
        org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
            values, typeParameter_);
        onChanged();
      } else {
        typeParameterBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public Builder clearTypeParameter() {
      if (typeParameterBuilder_ == null) {
        typeParameter_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        typeParameterBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public Builder removeTypeParameter(int index) {
      if (typeParameterBuilder_ == null) {
        ensureTypeParameterIsMutable();
        typeParameter_.remove(index);
        onChanged();
      } else {
        typeParameterBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder getTypeParameterBuilder(
        int index) {
      return getTypeParameterFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameterOrBuilder getTypeParameterOrBuilder(
        int index) {
      if (typeParameterBuilder_ == null) {
        return typeParameter_.get(index);  } else {
        return typeParameterBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public java.util.List<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameterOrBuilder> 
         getTypeParameterOrBuilderList() {
      if (typeParameterBuilder_ != null) {
        return typeParameterBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(typeParameter_);
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder addTypeParameterBuilder() {
      return getTypeParameterFieldBuilder().addBuilder(
          org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.getDefaultInstance());
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder addTypeParameterBuilder(
        int index) {
      return getTypeParameterFieldBuilder().addBuilder(
          index, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.getDefaultInstance());
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 4;</code>
     */
    public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder> 
         getTypeParameterBuilderList() {
      return getTypeParameterFieldBuilder().getBuilderList();
    }
    private org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameterOrBuilder> 
        getTypeParameterFieldBuilder() {
      if (typeParameterBuilder_ == null) {
        typeParameterBuilder_ = new org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
            org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameterOrBuilder>(
                typeParameter_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        typeParameter_ = null;
      }
      return typeParameterBuilder_;
    }

    private java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration> declaration_ =
      java.util.Collections.emptyList();
    private void ensureDeclarationIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        declaration_ = new java.util.ArrayList<org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration>(declaration_);
        bitField0_ |= 0x00000010;
       }
    }

    private org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationOrBuilder> declarationBuilder_;

    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration> getDeclarationList() {
      if (declarationBuilder_ == null) {
        return java.util.Collections.unmodifiableList(declaration_);
      } else {
        return declarationBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public int getDeclarationCount() {
      if (declarationBuilder_ == null) {
        return declaration_.size();
      } else {
        return declarationBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration getDeclaration(int index) {
      if (declarationBuilder_ == null) {
        return declaration_.get(index);
      } else {
        return declarationBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public Builder setDeclaration(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration value) {
      if (declarationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDeclarationIsMutable();
        declaration_.set(index, value);
        onChanged();
      } else {
        declarationBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public Builder setDeclaration(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.Builder builderForValue) {
      if (declarationBuilder_ == null) {
        ensureDeclarationIsMutable();
        declaration_.set(index, builderForValue.build());
        onChanged();
      } else {
        declarationBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public Builder addDeclaration(org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration value) {
      if (declarationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDeclarationIsMutable();
        declaration_.add(value);
        onChanged();
      } else {
        declarationBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public Builder addDeclaration(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration value) {
      if (declarationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDeclarationIsMutable();
        declaration_.add(index, value);
        onChanged();
      } else {
        declarationBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public Builder addDeclaration(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.Builder builderForValue) {
      if (declarationBuilder_ == null) {
        ensureDeclarationIsMutable();
        declaration_.add(builderForValue.build());
        onChanged();
      } else {
        declarationBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public Builder addDeclaration(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.Builder builderForValue) {
      if (declarationBuilder_ == null) {
        ensureDeclarationIsMutable();
        declaration_.add(index, builderForValue.build());
        onChanged();
      } else {
        declarationBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public Builder addAllDeclaration(
        java.lang.Iterable<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration> values) {
      if (declarationBuilder_ == null) {
        ensureDeclarationIsMutable();
        org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
            values, declaration_);
        onChanged();
      } else {
        declarationBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public Builder clearDeclaration() {
      if (declarationBuilder_ == null) {
        declaration_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        declarationBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public Builder removeDeclaration(int index) {
      if (declarationBuilder_ == null) {
        ensureDeclarationIsMutable();
        declaration_.remove(index);
        onChanged();
      } else {
        declarationBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.Builder getDeclarationBuilder(
        int index) {
      return getDeclarationFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationOrBuilder getDeclarationOrBuilder(
        int index) {
      if (declarationBuilder_ == null) {
        return declaration_.get(index);  } else {
        return declarationBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public java.util.List<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationOrBuilder> 
         getDeclarationOrBuilderList() {
      if (declarationBuilder_ != null) {
        return declarationBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(declaration_);
      }
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.Builder addDeclarationBuilder() {
      return getDeclarationFieldBuilder().addBuilder(
          org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.getDefaultInstance());
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.Builder addDeclarationBuilder(
        int index) {
      return getDeclarationFieldBuilder().addBuilder(
          index, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.getDefaultInstance());
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration declaration = 5;</code>
     */
    public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.Builder> 
         getDeclarationBuilderList() {
      return getDeclarationFieldBuilder().getBuilderList();
    }
    private org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationOrBuilder> 
        getDeclarationFieldBuilder() {
      if (declarationBuilder_ == null) {
        declarationBuilder_ = new org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
            org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclaration.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationOrBuilder>(
                declaration_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        declaration_ = null;
      }
      return declarationBuilder_;
    }

    private org.jetbrains.kotlin.protobuf.Internal.IntList superType_ = emptyIntList();
    private void ensureSuperTypeIsMutable() {
      if (!superType_.isModifiable()) {
        superType_ = makeMutableCopy(superType_);
      }
      bitField0_ |= 0x00000020;
    }
    /**
     * <code>repeated int32 super_type = 6;</code>
     * @return A list containing the superType.
     */
    public java.util.List<java.lang.Integer>
        getSuperTypeList() {
      superType_.makeImmutable();
      return superType_;
    }
    /**
     * <code>repeated int32 super_type = 6;</code>
     * @return The count of superType.
     */
    public int getSuperTypeCount() {
      return superType_.size();
    }
    /**
     * <code>repeated int32 super_type = 6;</code>
     * @param index The index of the element to return.
     * @return The superType at the given index.
     */
    public int getSuperType(int index) {
      return superType_.getInt(index);
    }
    /**
     * <code>repeated int32 super_type = 6;</code>
     * @param index The index to set the value at.
     * @param value The superType to set.
     * @return This builder for chaining.
     */
    public Builder setSuperType(
        int index, int value) {

      ensureSuperTypeIsMutable();
      superType_.setInt(index, value);
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 super_type = 6;</code>
     * @param value The superType to add.
     * @return This builder for chaining.
     */
    public Builder addSuperType(int value) {

      ensureSuperTypeIsMutable();
      superType_.addInt(value);
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 super_type = 6;</code>
     * @param values The superType to add.
     * @return This builder for chaining.
     */
    public Builder addAllSuperType(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureSuperTypeIsMutable();
      org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
          values, superType_);
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 super_type = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearSuperType() {
      superType_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }

    private org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inlineClassRepresentation_;
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation, org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentationOrBuilder> inlineClassRepresentationBuilder_;
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
     * @return Whether the inlineClassRepresentation field is set.
     */
    public boolean hasInlineClassRepresentation() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
     * @return The inlineClassRepresentation.
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation getInlineClassRepresentation() {
      if (inlineClassRepresentationBuilder_ == null) {
        return inlineClassRepresentation_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.getDefaultInstance() : inlineClassRepresentation_;
      } else {
        return inlineClassRepresentationBuilder_.getMessage();
      }
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
     */
    public Builder setInlineClassRepresentation(org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation value) {
      if (inlineClassRepresentationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        inlineClassRepresentation_ = value;
      } else {
        inlineClassRepresentationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
     */
    public Builder setInlineClassRepresentation(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.Builder builderForValue) {
      if (inlineClassRepresentationBuilder_ == null) {
        inlineClassRepresentation_ = builderForValue.build();
      } else {
        inlineClassRepresentationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
     */
    public Builder mergeInlineClassRepresentation(org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation value) {
      if (inlineClassRepresentationBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0) &&
          inlineClassRepresentation_ != null &&
          inlineClassRepresentation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.getDefaultInstance()) {
          getInlineClassRepresentationBuilder().mergeFrom(value);
        } else {
          inlineClassRepresentation_ = value;
        }
      } else {
        inlineClassRepresentationBuilder_.mergeFrom(value);
      }
      if (inlineClassRepresentation_ != null) {
        bitField0_ |= 0x00000040;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
     */
    public Builder clearInlineClassRepresentation() {
      bitField0_ = (bitField0_ & ~0x00000040);
      inlineClassRepresentation_ = null;
      if (inlineClassRepresentationBuilder_ != null) {
        inlineClassRepresentationBuilder_.dispose();
        inlineClassRepresentationBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.Builder getInlineClassRepresentationBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getInlineClassRepresentationFieldBuilder().getBuilder();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentationOrBuilder getInlineClassRepresentationOrBuilder() {
      if (inlineClassRepresentationBuilder_ != null) {
        return inlineClassRepresentationBuilder_.getMessageOrBuilder();
      } else {
        return inlineClassRepresentation_ == null ?
            org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.getDefaultInstance() : inlineClassRepresentation_;
      }
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation inline_class_representation = 7;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation, org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentationOrBuilder> 
        getInlineClassRepresentationFieldBuilder() {
      if (inlineClassRepresentationBuilder_ == null) {
        inlineClassRepresentationBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation, org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentation.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrInlineClassRepresentationOrBuilder>(
                getInlineClassRepresentation(),
                getParentForChildren(),
                isClean());
        inlineClassRepresentation_ = null;
      }
      return inlineClassRepresentationBuilder_;
    }

    private org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multiFieldValueClassRepresentation_;
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation, org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentationOrBuilder> multiFieldValueClassRepresentationBuilder_;
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
     * @return Whether the multiFieldValueClassRepresentation field is set.
     */
    public boolean hasMultiFieldValueClassRepresentation() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
     * @return The multiFieldValueClassRepresentation.
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation getMultiFieldValueClassRepresentation() {
      if (multiFieldValueClassRepresentationBuilder_ == null) {
        return multiFieldValueClassRepresentation_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.getDefaultInstance() : multiFieldValueClassRepresentation_;
      } else {
        return multiFieldValueClassRepresentationBuilder_.getMessage();
      }
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
     */
    public Builder setMultiFieldValueClassRepresentation(org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation value) {
      if (multiFieldValueClassRepresentationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        multiFieldValueClassRepresentation_ = value;
      } else {
        multiFieldValueClassRepresentationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
     */
    public Builder setMultiFieldValueClassRepresentation(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.Builder builderForValue) {
      if (multiFieldValueClassRepresentationBuilder_ == null) {
        multiFieldValueClassRepresentation_ = builderForValue.build();
      } else {
        multiFieldValueClassRepresentationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
     */
    public Builder mergeMultiFieldValueClassRepresentation(org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation value) {
      if (multiFieldValueClassRepresentationBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0) &&
          multiFieldValueClassRepresentation_ != null &&
          multiFieldValueClassRepresentation_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.getDefaultInstance()) {
          getMultiFieldValueClassRepresentationBuilder().mergeFrom(value);
        } else {
          multiFieldValueClassRepresentation_ = value;
        }
      } else {
        multiFieldValueClassRepresentationBuilder_.mergeFrom(value);
      }
      if (multiFieldValueClassRepresentation_ != null) {
        bitField0_ |= 0x00000080;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
     */
    public Builder clearMultiFieldValueClassRepresentation() {
      bitField0_ = (bitField0_ & ~0x00000080);
      multiFieldValueClassRepresentation_ = null;
      if (multiFieldValueClassRepresentationBuilder_ != null) {
        multiFieldValueClassRepresentationBuilder_.dispose();
        multiFieldValueClassRepresentationBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.Builder getMultiFieldValueClassRepresentationBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getMultiFieldValueClassRepresentationFieldBuilder().getBuilder();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentationOrBuilder getMultiFieldValueClassRepresentationOrBuilder() {
      if (multiFieldValueClassRepresentationBuilder_ != null) {
        return multiFieldValueClassRepresentationBuilder_.getMessageOrBuilder();
      } else {
        return multiFieldValueClassRepresentation_ == null ?
            org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.getDefaultInstance() : multiFieldValueClassRepresentation_;
      }
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation multi_field_value_class_representation = 9;</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation, org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentationOrBuilder> 
        getMultiFieldValueClassRepresentationFieldBuilder() {
      if (multiFieldValueClassRepresentationBuilder_ == null) {
        multiFieldValueClassRepresentationBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation, org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentation.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrMultiFieldValueClassRepresentationOrBuilder>(
                getMultiFieldValueClassRepresentation(),
                getParentForChildren(),
                isClean());
        multiFieldValueClassRepresentation_ = null;
      }
      return multiFieldValueClassRepresentationBuilder_;
    }

    private org.jetbrains.kotlin.protobuf.Internal.LongList sealedSubclass_ = emptyLongList();
    private void ensureSealedSubclassIsMutable() {
      if (!sealedSubclass_.isModifiable()) {
        sealedSubclass_ = makeMutableCopy(sealedSubclass_);
      }
      bitField0_ |= 0x00000100;
    }
    /**
     * <code>repeated int64 sealed_subclass = 8;</code>
     * @return A list containing the sealedSubclass.
     */
    public java.util.List<java.lang.Long>
        getSealedSubclassList() {
      sealedSubclass_.makeImmutable();
      return sealedSubclass_;
    }
    /**
     * <code>repeated int64 sealed_subclass = 8;</code>
     * @return The count of sealedSubclass.
     */
    public int getSealedSubclassCount() {
      return sealedSubclass_.size();
    }
    /**
     * <code>repeated int64 sealed_subclass = 8;</code>
     * @param index The index of the element to return.
     * @return The sealedSubclass at the given index.
     */
    public long getSealedSubclass(int index) {
      return sealedSubclass_.getLong(index);
    }
    /**
     * <code>repeated int64 sealed_subclass = 8;</code>
     * @param index The index to set the value at.
     * @param value The sealedSubclass to set.
     * @return This builder for chaining.
     */
    public Builder setSealedSubclass(
        int index, long value) {

      ensureSealedSubclassIsMutable();
      sealedSubclass_.setLong(index, value);
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 sealed_subclass = 8;</code>
     * @param value The sealedSubclass to add.
     * @return This builder for chaining.
     */
    public Builder addSealedSubclass(long value) {

      ensureSealedSubclassIsMutable();
      sealedSubclass_.addLong(value);
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 sealed_subclass = 8;</code>
     * @param values The sealedSubclass to add.
     * @return This builder for chaining.
     */
    public Builder addAllSealedSubclass(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureSealedSubclassIsMutable();
      org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
          values, sealedSubclass_);
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 sealed_subclass = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearSealedSubclass() {
      sealedSubclass_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrClass)
  }

  // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrClass)
  private static final org.jetbrains.kotlin.backend.common.serialization.proto.IrClass DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.jetbrains.kotlin.backend.common.serialization.proto.IrClass();
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrClass getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final org.jetbrains.kotlin.protobuf.Parser<IrClass>
      PARSER = new org.jetbrains.kotlin.protobuf.AbstractParser<IrClass>() {
    @java.lang.Override
    public IrClass parsePartialFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (org.jetbrains.kotlin.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static org.jetbrains.kotlin.protobuf.Parser<IrClass> parser() {
    return PARSER;
  }

  @java.lang.Override
  public org.jetbrains.kotlin.protobuf.Parser<IrClass> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrClass getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}
