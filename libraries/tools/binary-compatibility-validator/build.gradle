apply plugin: 'kotlin'

configurations {
    testArtifacts
}

dependencies {
    compile project(':kotlin-stdlib')
    compile 'org.ow2.asm:asm-debug-all:5.0.4'
    compile 'com.google.code.gson:gson:2.6.2'
    testCompile project(':kotlin-test:kotlin-test-junit')

    testArtifacts project(':kotlin-stdlib')
    testArtifacts project(':kotlin-stdlib-jre7')
    testArtifacts project(':kotlin-stdlib-jre8')
    testArtifacts project(':kotlin-reflect')
    // legacy
//    testArtifacts project(':kotlin-runtime')
    testArtifacts files(project(':kotlin-stdlib').tasks.originalStdlibJar)
}

sourceSets {
    test {
        java {
            srcDir "src/test/kotlin"
        }
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xdump-declarations-to', "${buildDir}/cases-declarations.json"]
    }
}

test {
    dependsOn cleanCompileTestKotlin
    dependsOn configurations.testArtifacts

    systemProperty 'overwrite.output', System.getProperty("overwrite.output", "false")
    systemProperty 'kotlinVersion', project.version
    jvmArgs '-ea'

    ignoreFailures = System.getenv("kotlin_build_ignore_test_failures") == 'yes'
    environment("PROJECT_CLASSES_DIRS", sourceSets.test.output.classesDirs.asPath)
    environment("PROJECT_BUILD_DIR", buildDir)

    workingDir = projectDir
}