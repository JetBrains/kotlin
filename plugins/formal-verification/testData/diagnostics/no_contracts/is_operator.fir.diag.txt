/is_operator.kt:(23,38): info: Generated Viper text for is_non_nullable:
method global$fun_is_non_nullable$fun_take$NT_Int$return$T_Boolean(local$x: Ref)
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$boolType())
{
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$x), dom$RuntimeType$nullable(dom$RuntimeType$intType()))
  ret$0 := dom$RuntimeType$boolToRef(dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$x),
    dom$RuntimeType$intType()))
  goto label$ret$0
  label label$ret$0
}

/is_operator.kt:(86,101): info: Generated Viper text for not_is_nullable:
method global$fun_not_is_nullable$fun_take$NT_Int$return$T_Boolean(local$x: Ref)
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$boolType())
{
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$x), dom$RuntimeType$nullable(dom$RuntimeType$intType()))
  ret$0 := special$notBool(dom$RuntimeType$boolToRef(dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$x),
    dom$RuntimeType$nothingType())))
  goto label$ret$0
  label label$ret$0
}

/is_operator.kt:(154,164): info: Generated Viper text for smart_cast:
method global$fun_smart_cast$fun_take$NT_Any$return$T_Int(local$x: Ref)
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$intType())
{
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$x), dom$RuntimeType$nullable(dom$RuntimeType$anyType()))
  if (dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$x), dom$RuntimeType$intType())) {
    ret$0 := local$x
    goto label$ret$0
  } else {
    ret$0 := dom$RuntimeType$intToRef(-1)
    goto label$ret$0
  }
  label label$ret$0
}
