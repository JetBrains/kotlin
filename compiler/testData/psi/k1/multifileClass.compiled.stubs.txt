MultifileClass.class:
  FILE[kind=MultifileClass[packageFqName=test, facadeFqName=test.MultifileClass, facadePartSimpleNames=[MultifileClass__MultifileClassKt, MultifileClass__SecondPartKt]]]
    facadeFqName: test.MultifileClass
    facadePartSimpleNames: [
      "MultifileClass__MultifileClassKt"
      "MultifileClass__SecondPartKt"
    ]
    PACKAGE_DIRECTIVE
      REFERENCE_EXPRESSION[referencedName=test]
    IMPORT_LIST
    PROPERTY[fqName=test.annotatedConstVal, hasBackingField=true, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=true, isVar=false, name=annotatedConstVal]
      constantInitializer: 42
      origin: MultiFileFacade(className=test/MultifileClass__MultifileClassKt, facadeClassName=test/MultifileClass)
      MODIFIER_LIST[public const]
        ANNOTATION_ENTRY[hasValueArguments=false, shortName=Deprecated]
          valueArguments: [ message -> "deprecated" ]
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Deprecated]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Int]
      REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
    PROPERTY[fqName=test.p1Val, hasBackingField=true, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=true, isVar=false, name=p1Val]
      origin: MultiFileFacade(className=test/MultifileClass__MultifileClassKt, facadeClassName=test/MultifileClass)
      MODIFIER_LIST[public]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Int]
    PROPERTY[fqName=test.p1Var, hasBackingField=true, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=true, isVar=true, name=p1Var]
      origin: MultiFileFacade(className=test/MultifileClass__MultifileClassKt, facadeClassName=test/MultifileClass)
      MODIFIER_LIST[public]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Int]
    PROPERTY[fqName=test.p1ExtVal, hasBackingField=false, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=true, isTopLevel=true, isVar=false, name=p1ExtVal]
      origin: MultiFileFacade(className=test/MultifileClass__MultifileClassKt, facadeClassName=test/MultifileClass)
      MODIFIER_LIST[public]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=String]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Int]
      PROPERTY_ACCESSOR[hasBody=true, hasNoExpressionBody=true, isGetter=true, mayHaveContract=false]
        MODIFIER_LIST[public final]
        VALUE_PARAMETER_LIST
    FUN[fqName=test.p1ExprFun, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=p1ExprFun]
      origin: MultiFileFacade(className=test/MultifileClass__MultifileClassKt, facadeClassName=test/MultifileClass)
      MODIFIER_LIST[public]
      VALUE_PARAMETER_LIST
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Int]
    FUN[fqName=test.p1Fun, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=p1Fun]
      origin: MultiFileFacade(className=test/MultifileClass__MultifileClassKt, facadeClassName=test/MultifileClass)
      MODIFIER_LIST[public]
      VALUE_PARAMETER_LIST
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Unit]
    FUN[fqName=test.p1FunWithParams, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=p1FunWithParams]
      origin: MultiFileFacade(className=test/MultifileClass__MultifileClassKt, facadeClassName=test/MultifileClass)
      MODIFIER_LIST[public]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=x]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=Int]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Int]
    FUN[fqName=test.p1ExtFun, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=true, isTopLevel=true, mayHaveContract=false, name=p1ExtFun]
      origin: MultiFileFacade(className=test/MultifileClass__MultifileClassKt, facadeClassName=test/MultifileClass)
      MODIFIER_LIST[public]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=String]
      VALUE_PARAMETER_LIST
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Unit]
    PROPERTY[fqName=test.p2Val, hasBackingField=true, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=true, isVar=false, name=p2Val]
      origin: MultiFileFacade(className=test/MultifileClass__SecondPartKt, facadeClassName=test/MultifileClass)
      MODIFIER_LIST[public]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Int]
    PROPERTY[fqName=test.p2ExtVal, hasBackingField=false, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=true, isTopLevel=true, isVar=false, name=p2ExtVal]
      origin: MultiFileFacade(className=test/MultifileClass__SecondPartKt, facadeClassName=test/MultifileClass)
      MODIFIER_LIST[public]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=String]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Int]
      PROPERTY_ACCESSOR[hasBody=true, hasNoExpressionBody=true, isGetter=true, mayHaveContract=false]
        MODIFIER_LIST[public final]
        VALUE_PARAMETER_LIST
    FUN[fqName=test.p2Fun, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=p2Fun]
      origin: MultiFileFacade(className=test/MultifileClass__SecondPartKt, facadeClassName=test/MultifileClass)
      MODIFIER_LIST[public]
      VALUE_PARAMETER_LIST
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Unit]
    FUN[fqName=test.p2ExtFun, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=true, isTopLevel=true, mayHaveContract=false, name=p2ExtFun]
      origin: MultiFileFacade(className=test/MultifileClass__SecondPartKt, facadeClassName=test/MultifileClass)
      MODIFIER_LIST[public]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=String]
      VALUE_PARAMETER_LIST
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Unit]


MultifileClass__MultifileClassKt.class:
  FILE[kind=Facade[packageFqName=test, facadeFqName=test.MultifileClass__MultifileClassKt]]
    facadeFqName: test.MultifileClass__MultifileClassKt
    partSimpleName: "MultifileClass__MultifileClassKt"
    PACKAGE_DIRECTIVE
      REFERENCE_EXPRESSION[referencedName=test]
    IMPORT_LIST
    PROPERTY[fqName=test.annotatedConstVal, hasBackingField=true, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=true, isVar=false, name=annotatedConstVal]
      origin: Facade(className=test/MultifileClass__MultifileClassKt, jvmClassName=null)
      MODIFIER_LIST[public const]
        ANNOTATION_ENTRY[hasValueArguments=false, shortName=Deprecated]
          valueArguments: [ message -> "deprecated" ]
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Deprecated]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Int]
    PROPERTY[fqName=test.p1Val, hasBackingField=true, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=true, isVar=false, name=p1Val]
      origin: Facade(className=test/MultifileClass__MultifileClassKt, jvmClassName=null)
      MODIFIER_LIST[public]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Int]
    PROPERTY[fqName=test.p1Var, hasBackingField=true, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=true, isVar=true, name=p1Var]
      origin: Facade(className=test/MultifileClass__MultifileClassKt, jvmClassName=null)
      MODIFIER_LIST[public]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Int]
    PROPERTY[fqName=test.p1ExtVal, hasBackingField=false, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=true, isTopLevel=true, isVar=false, name=p1ExtVal]
      origin: Facade(className=test/MultifileClass__MultifileClassKt, jvmClassName=null)
      MODIFIER_LIST[public]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=String]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Int]
      PROPERTY_ACCESSOR[hasBody=true, hasNoExpressionBody=true, isGetter=true, mayHaveContract=false]
        MODIFIER_LIST[public final]
        VALUE_PARAMETER_LIST
    FUN[fqName=test.p1ExprFun, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=p1ExprFun]
      origin: Facade(className=test/MultifileClass__MultifileClassKt, jvmClassName=null)
      MODIFIER_LIST[public]
      VALUE_PARAMETER_LIST
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Int]
    FUN[fqName=test.p1Fun, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=p1Fun]
      origin: Facade(className=test/MultifileClass__MultifileClassKt, jvmClassName=null)
      MODIFIER_LIST[public]
      VALUE_PARAMETER_LIST
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Unit]
    FUN[fqName=test.p1FunWithParams, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=p1FunWithParams]
      origin: Facade(className=test/MultifileClass__MultifileClassKt, jvmClassName=null)
      MODIFIER_LIST[public]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=x]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=Int]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Int]
    FUN[fqName=test.p1ExtFun, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=true, isTopLevel=true, mayHaveContract=false, name=p1ExtFun]
      origin: Facade(className=test/MultifileClass__MultifileClassKt, jvmClassName=null)
      MODIFIER_LIST[public]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=String]
      VALUE_PARAMETER_LIST
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Unit]


MultifileClass__SecondPartKt.class:
  FILE[kind=Facade[packageFqName=test, facadeFqName=test.MultifileClass__SecondPartKt]]
    facadeFqName: test.MultifileClass__SecondPartKt
    partSimpleName: "MultifileClass__SecondPartKt"
    PACKAGE_DIRECTIVE
      REFERENCE_EXPRESSION[referencedName=test]
    IMPORT_LIST
    PROPERTY[fqName=test.p2Val, hasBackingField=true, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=true, isVar=false, name=p2Val]
      origin: Facade(className=test/MultifileClass__SecondPartKt, jvmClassName=null)
      MODIFIER_LIST[public]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Int]
    PROPERTY[fqName=test.p2ExtVal, hasBackingField=false, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=true, isTopLevel=true, isVar=false, name=p2ExtVal]
      origin: Facade(className=test/MultifileClass__SecondPartKt, jvmClassName=null)
      MODIFIER_LIST[public]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=String]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Int]
      PROPERTY_ACCESSOR[hasBody=true, hasNoExpressionBody=true, isGetter=true, mayHaveContract=false]
        MODIFIER_LIST[public final]
        VALUE_PARAMETER_LIST
    FUN[fqName=test.p2Fun, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=p2Fun]
      origin: Facade(className=test/MultifileClass__SecondPartKt, jvmClassName=null)
      MODIFIER_LIST[public]
      VALUE_PARAMETER_LIST
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Unit]
    FUN[fqName=test.p2ExtFun, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=true, isTopLevel=true, mayHaveContract=false, name=p2ExtFun]
      origin: Facade(className=test/MultifileClass__SecondPartKt, jvmClassName=null)
      MODIFIER_LIST[public]
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=String]
      VALUE_PARAMETER_LIST
      TYPE_REFERENCE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Unit]
