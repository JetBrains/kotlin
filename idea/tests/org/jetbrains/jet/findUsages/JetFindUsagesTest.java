/*
 * Copyright 2010-2013 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jetbrains.jet.findUsages;

import junit.framework.Assert;
import junit.framework.Test;
import junit.framework.TestSuite;

import java.io.File;
import java.util.regex.Pattern;
import org.jetbrains.jet.JetTestUtils;
import org.jetbrains.jet.test.InnerTestClasses;
import org.jetbrains.jet.test.TestMetadata;

import org.jetbrains.jet.findUsages.AbstractJetFindUsagesTest;

/** This class is generated by {@link org.jetbrains.jet.generators.tests.GenerateTests}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("idea/testData/findUsages")
@InnerTestClasses({JetFindUsagesTest.FindClassUsages.class, JetFindUsagesTest.FindMethodUsages.class, JetFindUsagesTest.FindObjectUsages.class, JetFindUsagesTest.FindPropertyUsages.class, JetFindUsagesTest.FindWithFilteringImports.class, JetFindUsagesTest.UnresolvedAnnotation.class})
public class JetFindUsagesTest extends AbstractJetFindUsagesTest {
    public void testAllFilesPresentInFindUsages() throws Exception {
        JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/findUsages"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
    }
    
    @TestMetadata("idea/testData/findUsages/findClassUsages")
    public static class FindClassUsages extends AbstractJetFindUsagesTest {
        public void testAllFilesPresentInFindClassUsages() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/findUsages/findClassUsages"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
        }
        
        @TestMetadata("javaClassAllUsages.0.kt")
        public void testJavaClassAllUsages() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/javaClassAllUsages.0.kt");
        }
        
        @TestMetadata("javaClassConstructorUsages.0.kt")
        public void testJavaClassConstructorUsages() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/javaClassConstructorUsages.0.kt");
        }
        
        @TestMetadata("javaClassFunctionUsages1.0.kt")
        public void testJavaClassFunctionUsages1() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/javaClassFunctionUsages1.0.kt");
        }
        
        @TestMetadata("javaClassFunctionUsages2.0.kt")
        public void testJavaClassFunctionUsages2() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/javaClassFunctionUsages2.0.kt");
        }
        
        @TestMetadata("javaClassNonConstructorUsages.0.kt")
        public void testJavaClassNonConstructorUsages() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/javaClassNonConstructorUsages.0.kt");
        }
        
        @TestMetadata("javaClassPropertyUsages1.0.kt")
        public void testJavaClassPropertyUsages1() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/javaClassPropertyUsages1.0.kt");
        }
        
        @TestMetadata("javaClassPropertyUsages2.0.kt")
        public void testJavaClassPropertyUsages2() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/javaClassPropertyUsages2.0.kt");
        }
        
        @TestMetadata("javaDerivedClassUsages1.0.kt")
        public void testJavaDerivedClassUsages1() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/javaDerivedClassUsages1.0.kt");
        }
        
        @TestMetadata("javaDerivedClassUsages2.0.kt")
        public void testJavaDerivedClassUsages2() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/javaDerivedClassUsages2.0.kt");
        }
        
        @TestMetadata("javaDerivedInterfaceUsages1.0.kt")
        public void testJavaDerivedInterfaceUsages1() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/javaDerivedInterfaceUsages1.0.kt");
        }
        
        @TestMetadata("javaDerivedInterfaceUsages2.0.kt")
        public void testJavaDerivedInterfaceUsages2() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/javaDerivedInterfaceUsages2.0.kt");
        }
        
        @TestMetadata("kotlinClassAllUsages.0.kt")
        public void testKotlinClassAllUsages() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/kotlinClassAllUsages.0.kt");
        }
        
        @TestMetadata("kotlinClassAllUsages2.0.kt")
        public void testKotlinClassAllUsages2() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/kotlinClassAllUsages2.0.kt");
        }
        
        @TestMetadata("kotlinClassAllUsages3.0.kt")
        public void testKotlinClassAllUsages3() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/kotlinClassAllUsages3.0.kt");
        }
        
        @TestMetadata("kotlinClassAllUsagesNoImport.0.kt")
        public void testKotlinClassAllUsagesNoImport() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/kotlinClassAllUsagesNoImport.0.kt");
        }
        
        @TestMetadata("kotlinClassConstructorUsages.0.kt")
        public void testKotlinClassConstructorUsages() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/kotlinClassConstructorUsages.0.kt");
        }
        
        @TestMetadata("kotlinClassFunctionUsages1.0.kt")
        public void testKotlinClassFunctionUsages1() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/kotlinClassFunctionUsages1.0.kt");
        }
        
        @TestMetadata("kotlinClassFunctionUsages2.0.kt")
        public void testKotlinClassFunctionUsages2() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/kotlinClassFunctionUsages2.0.kt");
        }
        
        @TestMetadata("kotlinClassNonConstructorUsages.0.kt")
        public void testKotlinClassNonConstructorUsages() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/kotlinClassNonConstructorUsages.0.kt");
        }
        
        @TestMetadata("kotlinClassPropertyUsages1.0.kt")
        public void testKotlinClassPropertyUsages1() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/kotlinClassPropertyUsages1.0.kt");
        }
        
        @TestMetadata("kotlinClassPropertyUsages2.0.kt")
        public void testKotlinClassPropertyUsages2() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/kotlinClassPropertyUsages2.0.kt");
        }
        
        @TestMetadata("kotlinDerivedClassUsages1.0.kt")
        public void testKotlinDerivedClassUsages1() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/kotlinDerivedClassUsages1.0.kt");
        }
        
        @TestMetadata("kotlinDerivedClassUsages2.0.kt")
        public void testKotlinDerivedClassUsages2() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/kotlinDerivedClassUsages2.0.kt");
        }
        
        @TestMetadata("kotlinDerivedInterfaceUsages1.0.kt")
        public void testKotlinDerivedInterfaceUsages1() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/kotlinDerivedInterfaceUsages1.0.kt");
        }
        
        @TestMetadata("kotlinDerivedInterfaceUsages2.0.kt")
        public void testKotlinDerivedInterfaceUsages2() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/kotlinDerivedInterfaceUsages2.0.kt");
        }
        
        @TestMetadata("kotlinLocalClassUsages1.0.kt")
        public void testKotlinLocalClassUsages1() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/kotlinLocalClassUsages1.0.kt");
        }
        
        @TestMetadata("kotlinLocalClassUsages2.0.kt")
        public void testKotlinLocalClassUsages2() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/kotlinLocalClassUsages2.0.kt");
        }
        
        @TestMetadata("kotlinPrivateClassUsages.0.kt")
        public void testKotlinPrivateClassUsages() throws Exception {
            doTest("idea/testData/findUsages/findClassUsages/kotlinPrivateClassUsages.0.kt");
        }
        
    }
    
    @TestMetadata("idea/testData/findUsages/findMethodUsages")
    public static class FindMethodUsages extends AbstractJetFindUsagesTest {
        public void testAllFilesPresentInFindMethodUsages() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/findUsages/findMethodUsages"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
        }
        
        @TestMetadata("javaAndKotlinOverrides.0.kt")
        public void testJavaAndKotlinOverrides() throws Exception {
            doTest("idea/testData/findUsages/findMethodUsages/javaAndKotlinOverrides.0.kt");
        }
        
        @TestMetadata("javaMethodUsages.0.kt")
        public void testJavaMethodUsages() throws Exception {
            doTest("idea/testData/findUsages/findMethodUsages/javaMethodUsages.0.kt");
        }
        
        @TestMetadata("kotlinLocalMethodUsages1.0.kt")
        public void testKotlinLocalMethodUsages1() throws Exception {
            doTest("idea/testData/findUsages/findMethodUsages/kotlinLocalMethodUsages1.0.kt");
        }
        
        @TestMetadata("kotlinLocalMethodUsages2.0.kt")
        public void testKotlinLocalMethodUsages2() throws Exception {
            doTest("idea/testData/findUsages/findMethodUsages/kotlinLocalMethodUsages2.0.kt");
        }
        
        @TestMetadata("kotlinMethodUsages.0.kt")
        public void testKotlinMethodUsages() throws Exception {
            doTest("idea/testData/findUsages/findMethodUsages/kotlinMethodUsages.0.kt");
        }
        
        @TestMetadata("kotlinOverloadAndExtensionUsages.0.kt")
        public void testKotlinOverloadAndExtensionUsages() throws Exception {
            doTest("idea/testData/findUsages/findMethodUsages/kotlinOverloadAndExtensionUsages.0.kt");
        }
        
        @TestMetadata("kotlinPrivateMethodUsages.0.kt")
        public void testKotlinPrivateMethodUsages() throws Exception {
            doTest("idea/testData/findUsages/findMethodUsages/kotlinPrivateMethodUsages.0.kt");
        }
        
        @TestMetadata("kotlinTopLevelMethodUsages.0.kt")
        public void testKotlinTopLevelMethodUsages() throws Exception {
            doTest("idea/testData/findUsages/findMethodUsages/kotlinTopLevelMethodUsages.0.kt");
        }
        
        @TestMetadata("kotlinTopLevelMethodUsagesNoImport.0.kt")
        public void testKotlinTopLevelMethodUsagesNoImport() throws Exception {
            doTest("idea/testData/findUsages/findMethodUsages/kotlinTopLevelMethodUsagesNoImport.0.kt");
        }
        
    }
    
    @TestMetadata("idea/testData/findUsages/findObjectUsages")
    public static class FindObjectUsages extends AbstractJetFindUsagesTest {
        public void testAllFilesPresentInFindObjectUsages() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/findUsages/findObjectUsages"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
        }
        
        @TestMetadata("javaObjectUsages.0.kt")
        public void testJavaObjectUsages() throws Exception {
            doTest("idea/testData/findUsages/findObjectUsages/javaObjectUsages.0.kt");
        }
        
        @TestMetadata("kotlinLocalObjectUsages1.0.kt")
        public void testKotlinLocalObjectUsages1() throws Exception {
            doTest("idea/testData/findUsages/findObjectUsages/kotlinLocalObjectUsages1.0.kt");
        }
        
        @TestMetadata("kotlinLocalObjectUsages2.0.kt")
        public void testKotlinLocalObjectUsages2() throws Exception {
            doTest("idea/testData/findUsages/findObjectUsages/kotlinLocalObjectUsages2.0.kt");
        }
        
        @TestMetadata("kotlinObjectUsages.0.kt")
        public void testKotlinObjectUsages() throws Exception {
            doTest("idea/testData/findUsages/findObjectUsages/kotlinObjectUsages.0.kt");
        }
        
        @TestMetadata("kotlinPrivateObjectUsages.0.kt")
        public void testKotlinPrivateObjectUsages() throws Exception {
            doTest("idea/testData/findUsages/findObjectUsages/kotlinPrivateObjectUsages.0.kt");
        }
        
    }
    
    @TestMetadata("idea/testData/findUsages/findPropertyUsages")
    public static class FindPropertyUsages extends AbstractJetFindUsagesTest {
        public void testAllFilesPresentInFindPropertyUsages() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/findUsages/findPropertyUsages"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
        }
        
        @TestMetadata("javaPropertyUsages.0.kt")
        public void testJavaPropertyUsages() throws Exception {
            doTest("idea/testData/findUsages/findPropertyUsages/javaPropertyUsages.0.kt");
        }
        
        @TestMetadata("kotlinLocalPropertyUsages1.0.kt")
        public void testKotlinLocalPropertyUsages1() throws Exception {
            doTest("idea/testData/findUsages/findPropertyUsages/kotlinLocalPropertyUsages1.0.kt");
        }
        
        @TestMetadata("kotlinLocalPropertyUsages2.0.kt")
        public void testKotlinLocalPropertyUsages2() throws Exception {
            doTest("idea/testData/findUsages/findPropertyUsages/kotlinLocalPropertyUsages2.0.kt");
        }
        
        @TestMetadata("kotlinPrivatePropertyUsages.0.kt")
        public void testKotlinPrivatePropertyUsages() throws Exception {
            doTest("idea/testData/findUsages/findPropertyUsages/kotlinPrivatePropertyUsages.0.kt");
        }
        
        @TestMetadata("kotlinTopLevelPropertyUsages.0.kt")
        public void testKotlinTopLevelPropertyUsages() throws Exception {
            doTest("idea/testData/findUsages/findPropertyUsages/kotlinTopLevelPropertyUsages.0.kt");
        }
        
    }
    
    @TestMetadata("idea/testData/findUsages/findWithFilteringImports")
    public static class FindWithFilteringImports extends AbstractJetFindUsagesTest {
        public void testAllFilesPresentInFindWithFilteringImports() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/findUsages/findWithFilteringImports"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
        }
        
        @TestMetadata("findWithFilteringImports.0.kt")
        public void testFindWithFilteringImports() throws Exception {
            doTest("idea/testData/findUsages/findWithFilteringImports/findWithFilteringImports.0.kt");
        }
        
    }
    
    @TestMetadata("idea/testData/findUsages/unresolvedAnnotation")
    public static class UnresolvedAnnotation extends AbstractJetFindUsagesTest {
        public void testAllFilesPresentInUnresolvedAnnotation() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("idea/testData/findUsages/unresolvedAnnotation"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
        }
        
        @TestMetadata("unresolvedAnnotation.0.kt")
        public void testUnresolvedAnnotation() throws Exception {
            doTest("idea/testData/findUsages/unresolvedAnnotation/unresolvedAnnotation.0.kt");
        }
        
    }
    
    public static Test suite() {
        TestSuite suite = new TestSuite("JetFindUsagesTest");
        suite.addTestSuite(JetFindUsagesTest.class);
        suite.addTestSuite(FindClassUsages.class);
        suite.addTestSuite(FindMethodUsages.class);
        suite.addTestSuite(FindObjectUsages.class);
        suite.addTestSuite(FindPropertyUsages.class);
        suite.addTestSuite(FindWithFilteringImports.class);
        suite.addTestSuite(UnresolvedAnnotation.class);
        return suite;
    }
}
