KtFile: recovery.kt
  PACKAGE_DIRECTIVE
    <empty list>
  IMPORT_LIST
    <empty list>
  CLASS
    MODIFIER_LIST
      ANNOTATION
        PsiElement(AT)('@')
        PsiElement(LBRACKET)('[')
        PsiErrorElement:Expecting a list of annotations
          <empty list>
        PsiElement(RBRACKET)(']')
    PsiWhiteSpace('\n')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('A')
    PsiWhiteSpace(' ')
    CLASS_BODY
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      PROPERTY
        MODIFIER_LIST
          ANNOTATION
            PsiElement(AT)('@')
            PsiElement(LBRACKET)('[')
            PsiErrorElement:Expecting a list of annotations
              <empty list>
            PsiElement(RBRACKET)(']')
        PsiWhiteSpace(' ')
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('x')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        INTEGER_CONSTANT
          PsiElement(INTEGER_LITERAL)('1')
      PsiWhiteSpace('\n\n    ')
      FUN
        MODIFIER_LIST
          ANNOTATION
            PsiElement(AT)('@')
            PsiElement(LBRACKET)('[')
            PsiErrorElement:No '@' needed in annotation list
              PsiElement(AT)('@')
            ANNOTATION_ENTRY
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('q')
            PsiElement(RBRACKET)(']')
        PsiWhiteSpace('\n    ')
        PsiElement(fun)('fun')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('foo')
        VALUE_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        BLOCK
          PsiElement(LBRACE)('{')
          PsiWhiteSpace('\n        ')
          CLASS
            MODIFIER_LIST
              ANNOTATION
                PsiElement(AT)('@')
                PsiElement(LBRACKET)('[')
                PsiErrorElement:Expecting a list of annotations
                  <empty list>
                PsiElement(RBRACKET)(']')
            PsiWhiteSpace(' ')
            PsiElement(class)('class')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('A')
          PsiWhiteSpace('\n    ')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n    ')
      FUN
        MODIFIER_LIST
          ANNOTATION
            PsiElement(AT)('@')
            PsiElement(LBRACKET)('[')
            PsiErrorElement:No '@' needed in annotation list
              PsiElement(AT)('@')
            ANNOTATION_ENTRY
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('q1')
            PsiWhiteSpace(' ')
            PsiErrorElement:No '@' needed in annotation list
              PsiElement(AT)('@')
            PsiWhiteSpace(' ')
            PsiErrorElement:No '@' needed in annotation list
              PsiElement(AT)('@')
            ANNOTATION_ENTRY
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('q2')
            PsiElement(RBRACKET)(']')
        PsiWhiteSpace('\n    ')
        PsiElement(fun)('fun')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('foo2')
        VALUE_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        BLOCK
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n    ')
      FUN
        MODIFIER_LIST
          ANNOTATION
            PsiElement(AT)('@')
            PsiElement(LBRACKET)('[')
            PsiErrorElement:Expecting a list of annotations
              <empty list>
        PsiWhiteSpace('\n    ')
        PsiElement(fun)('fun')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('bar')
        VALUE_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        BLOCK
          PsiElement(LBRACE)('{')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
