public class org/jetbrains/kotlin/KtNodeType : com/intellij/psi/tree/IElementType {
	public fun <init> (Ljava/lang/String;Ljava/lang/Class;)V
	public fun createPsi (Lcom/intellij/lang/ASTNode;)Lorg/jetbrains/kotlin/psi/KtElement;
}

public class org/jetbrains/kotlin/KtNodeType$KtLeftBoundNodeType : org/jetbrains/kotlin/KtNodeType {
	public fun <init> (Ljava/lang/String;Ljava/lang/Class;)V
	public fun isLeftBound ()Z
}

public abstract interface class org/jetbrains/kotlin/KtNodeTypes {
	public static final field ANNOTATED_EXPRESSION Lcom/intellij/psi/tree/IElementType;
	public static final field ANNOTATION Lcom/intellij/psi/tree/IElementType;
	public static final field ANNOTATION_ENTRY Lcom/intellij/psi/tree/IElementType;
	public static final field ANNOTATION_TARGET Lcom/intellij/psi/tree/IElementType;
	public static final field ARRAY_ACCESS_EXPRESSION Lcom/intellij/psi/tree/IElementType;
	public static final field BACKING_FIELD Lcom/intellij/psi/tree/IElementType;
	public static final field BINARY_EXPRESSION Lcom/intellij/psi/tree/IElementType;
	public static final field BINARY_WITH_TYPE Lcom/intellij/psi/tree/IElementType;
	public static final field BLOCK Lcom/intellij/psi/tree/IElementType;
	public static final field BLOCK_CODE_FRAGMENT Lcom/intellij/psi/tree/IFileElementType;
	public static final field BODY Lcom/intellij/psi/tree/IElementType;
	public static final field BOOLEAN_CONSTANT Lcom/intellij/psi/tree/IElementType;
	public static final field BREAK Lcom/intellij/psi/tree/IElementType;
	public static final field CALLABLE_REFERENCE_EXPRESSION Lcom/intellij/psi/tree/IElementType;
	public static final field CALL_EXPRESSION Lcom/intellij/psi/tree/IElementType;
	public static final field CATCH Lcom/intellij/psi/tree/IElementType;
	public static final field CHARACTER_CONSTANT Lcom/intellij/psi/tree/IElementType;
	public static final field CLASS Lcom/intellij/psi/tree/IElementType;
	public static final field CLASS_BODY Lcom/intellij/psi/tree/IElementType;
	public static final field CLASS_INITIALIZER Lcom/intellij/psi/tree/IElementType;
	public static final field CLASS_LITERAL_EXPRESSION Lcom/intellij/psi/tree/IElementType;
	public static final field COLLECTION_LITERAL_EXPRESSION Lcom/intellij/psi/tree/IElementType;
	public static final field CONDITION Lcom/intellij/psi/tree/IElementType;
	public static final field CONSTRUCTOR_CALLEE Lcom/intellij/psi/tree/IElementType;
	public static final field CONSTRUCTOR_DELEGATION_CALL Lcom/intellij/psi/tree/IElementType;
	public static final field CONSTRUCTOR_DELEGATION_REFERENCE Lcom/intellij/psi/tree/IElementType;
	public static final field CONTEXT_RECEIVER Lcom/intellij/psi/tree/IElementType;
	public static final field CONTEXT_RECEIVER_LIST Lcom/intellij/psi/tree/IElementType;
	public static final field CONTINUE Lcom/intellij/psi/tree/IElementType;
	public static final field CONTRACT_EFFECT Lcom/intellij/psi/tree/IElementType;
	public static final field CONTRACT_EFFECT_LIST Lcom/intellij/psi/tree/IElementType;
	public static final field DELEGATED_SUPER_TYPE_ENTRY Lcom/intellij/psi/tree/IElementType;
	public static final field DESTRUCTURING_DECLARATION Lcom/intellij/psi/tree/IElementType;
	public static final field DESTRUCTURING_DECLARATION_ENTRY Lcom/intellij/psi/tree/IElementType;
	public static final field DOT_QUALIFIED_EXPRESSION Lcom/intellij/psi/tree/IElementType;
	public static final field DO_WHILE Lcom/intellij/psi/tree/IElementType;
	public static final field DYNAMIC_TYPE Lcom/intellij/psi/tree/IElementType;
	public static final field ELSE Lcom/intellij/psi/tree/IElementType;
	public static final field ENUM_ENTRY Lcom/intellij/psi/tree/IElementType;
	public static final field ENUM_ENTRY_SUPERCLASS_REFERENCE_EXPRESSION Lcom/intellij/psi/tree/IElementType;
	public static final field ESCAPE_STRING_TEMPLATE_ENTRY Lcom/intellij/psi/tree/IElementType;
	public static final field EXPRESSION_CODE_FRAGMENT Lcom/intellij/psi/tree/IFileElementType;
	public static final field FILE Lcom/intellij/psi/tree/IFileElementType;
	public static final field FILE_ANNOTATION_LIST Lcom/intellij/psi/tree/IElementType;
	public static final field FINALLY Lcom/intellij/psi/tree/IElementType;
	public static final field FLOAT_CONSTANT Lcom/intellij/psi/tree/IElementType;
	public static final field FOR Lcom/intellij/psi/tree/IElementType;
	public static final field FUN Lcom/intellij/psi/tree/IElementType;
	public static final field FUNCTION_LITERAL Lcom/intellij/psi/tree/IElementType;
	public static final field FUNCTION_TYPE Lcom/intellij/psi/tree/IElementType;
	public static final field FUNCTION_TYPE_RECEIVER Lcom/intellij/psi/tree/IElementType;
	public static final field IF Lcom/intellij/psi/tree/IElementType;
	public static final field IMPORT_ALIAS Lcom/intellij/psi/tree/IElementType;
	public static final field IMPORT_DIRECTIVE Lcom/intellij/psi/tree/IElementType;
	public static final field IMPORT_LIST Lcom/intellij/psi/tree/IElementType;
	public static final field INDICES Lcom/intellij/psi/tree/IElementType;
	public static final field INITIALIZER_LIST Lcom/intellij/psi/tree/IElementType;
	public static final field INTEGER_CONSTANT Lcom/intellij/psi/tree/IElementType;
	public static final field INTERSECTION_TYPE Lcom/intellij/psi/tree/IElementType;
	public static final field IS_EXPRESSION Lcom/intellij/psi/tree/IElementType;
	public static final field KT_FILE Lcom/intellij/psi/tree/IFileElementType;
	public static final field LABEL Lcom/intellij/psi/tree/IElementType;
	public static final field LABELED_EXPRESSION Lcom/intellij/psi/tree/IElementType;
	public static final field LABEL_QUALIFIER Lcom/intellij/psi/tree/IElementType;
	public static final field LAMBDA_ARGUMENT Lcom/intellij/psi/tree/IElementType;
	public static final field LAMBDA_EXPRESSION Lcom/intellij/psi/tree/IElementType;
	public static final field LITERAL_STRING_TEMPLATE_ENTRY Lcom/intellij/psi/tree/IElementType;
	public static final field LONG_STRING_TEMPLATE_ENTRY Lcom/intellij/psi/tree/IElementType;
	public static final field LOOP_RANGE Lcom/intellij/psi/tree/IElementType;
	public static final field MODIFIER_LIST Lcom/intellij/psi/tree/IElementType;
	public static final field NULL Lcom/intellij/psi/tree/IElementType;
	public static final field NULLABLE_TYPE Lcom/intellij/psi/tree/IElementType;
	public static final field OBJECT_DECLARATION Lcom/intellij/psi/tree/IElementType;
	public static final field OBJECT_LITERAL Lcom/intellij/psi/tree/IElementType;
	public static final field OPERATION_REFERENCE Lcom/intellij/psi/tree/IElementType;
	public static final field PACKAGE_DIRECTIVE Lcom/intellij/psi/tree/IElementType;
	public static final field PARENTHESIZED Lcom/intellij/psi/tree/IElementType;
	public static final field POSTFIX_EXPRESSION Lcom/intellij/psi/tree/IElementType;
	public static final field PREFIX_EXPRESSION Lcom/intellij/psi/tree/IElementType;
	public static final field PRIMARY_CONSTRUCTOR Lcom/intellij/psi/tree/IElementType;
	public static final field PROPERTY Lcom/intellij/psi/tree/IElementType;
	public static final field PROPERTY_ACCESSOR Lcom/intellij/psi/tree/IElementType;
	public static final field PROPERTY_DELEGATE Lcom/intellij/psi/tree/IElementType;
	public static final field REFERENCE_EXPRESSION Lcom/intellij/psi/tree/IElementType;
	public static final field RETURN Lcom/intellij/psi/tree/IElementType;
	public static final field SAFE_ACCESS_EXPRESSION Lcom/intellij/psi/tree/IElementType;
	public static final field SCRIPT Lcom/intellij/psi/tree/IElementType;
	public static final field SCRIPT_INITIALIZER Lcom/intellij/psi/tree/IElementType;
	public static final field SECONDARY_CONSTRUCTOR Lcom/intellij/psi/tree/IElementType;
	public static final field SHORT_STRING_TEMPLATE_ENTRY Lcom/intellij/psi/tree/IElementType;
	public static final field STRING_INTERPOLATION_PREFIX Lcom/intellij/psi/tree/IElementType;
	public static final field STRING_TEMPLATE Lcom/intellij/psi/tree/IElementType;
	public static final field SUPER_EXPRESSION Lcom/intellij/psi/tree/IElementType;
	public static final field SUPER_TYPE_CALL_ENTRY Lcom/intellij/psi/tree/IElementType;
	public static final field SUPER_TYPE_ENTRY Lcom/intellij/psi/tree/IElementType;
	public static final field SUPER_TYPE_LIST Lcom/intellij/psi/tree/IElementType;
	public static final field THEN Lcom/intellij/psi/tree/IElementType;
	public static final field THIS_EXPRESSION Lcom/intellij/psi/tree/IElementType;
	public static final field THROW Lcom/intellij/psi/tree/IElementType;
	public static final field TRY Lcom/intellij/psi/tree/IElementType;
	public static final field TYPEALIAS Lcom/intellij/psi/tree/IElementType;
	public static final field TYPE_ARGUMENT_LIST Lcom/intellij/psi/tree/IElementType;
	public static final field TYPE_CODE_FRAGMENT Lcom/intellij/psi/tree/IFileElementType;
	public static final field TYPE_CONSTRAINT Lcom/intellij/psi/tree/IElementType;
	public static final field TYPE_CONSTRAINT_LIST Lcom/intellij/psi/tree/IElementType;
	public static final field TYPE_PARAMETER Lcom/intellij/psi/tree/IElementType;
	public static final field TYPE_PARAMETER_LIST Lcom/intellij/psi/tree/IElementType;
	public static final field TYPE_PROJECTION Lcom/intellij/psi/tree/IElementType;
	public static final field TYPE_REFERENCE Lcom/intellij/psi/tree/IElementType;
	public static final field USER_TYPE Lcom/intellij/psi/tree/IElementType;
	public static final field VALUE_ARGUMENT Lcom/intellij/psi/tree/IElementType;
	public static final field VALUE_ARGUMENT_LIST Lcom/intellij/psi/tree/IElementType;
	public static final field VALUE_ARGUMENT_NAME Lcom/intellij/psi/tree/IElementType;
	public static final field VALUE_PARAMETER Lcom/intellij/psi/tree/IElementType;
	public static final field VALUE_PARAMETER_LIST Lcom/intellij/psi/tree/IElementType;
	public static final field WHEN Lcom/intellij/psi/tree/IElementType;
	public static final field WHEN_CONDITION_EXPRESSION Lcom/intellij/psi/tree/IElementType;
	public static final field WHEN_CONDITION_IN_RANGE Lcom/intellij/psi/tree/IElementType;
	public static final field WHEN_CONDITION_IS_PATTERN Lcom/intellij/psi/tree/IElementType;
	public static final field WHEN_ENTRY Lcom/intellij/psi/tree/IElementType;
	public static final field WHEN_ENTRY_GUARD Lcom/intellij/psi/tree/IElementType;
	public static final field WHILE Lcom/intellij/psi/tree/IElementType;
}

public class org/jetbrains/kotlin/diagnostics/PsiDiagnosticUtils {
	public fun <init> ()V
	public static fun atLocation (Lcom/intellij/lang/ASTNode;)Ljava/lang/String;
	public static fun atLocation (Lcom/intellij/psi/PsiElement;)Ljava/lang/String;
	public static fun atLocation (Lcom/intellij/psi/PsiFile;Lcom/intellij/openapi/util/TextRange;)Ljava/lang/String;
	public static fun atLocation (Lcom/intellij/psi/PsiFile;Lcom/intellij/openapi/util/TextRange;Lcom/intellij/openapi/editor/Document;)Ljava/lang/String;
	public static fun atLocation (Lorg/jetbrains/kotlin/psi/KtExpression;)Ljava/lang/String;
	public static fun offsetToLineAndColumn (Lcom/intellij/openapi/editor/Document;I)Lorg/jetbrains/kotlin/diagnostics/PsiDiagnosticUtils$LineAndColumn;
}

public final class org/jetbrains/kotlin/diagnostics/PsiDiagnosticUtils$LineAndColumn {
	public static final field NONE Lorg/jetbrains/kotlin/diagnostics/PsiDiagnosticUtils$LineAndColumn;
	public fun <init> (IILjava/lang/String;)V
	public fun getColumn ()I
	public fun getLine ()I
	public fun getLineContent ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/diagnostics/PsiDiagnosticUtils$LineAndColumnRange {
	public static final field NONE Lorg/jetbrains/kotlin/diagnostics/PsiDiagnosticUtils$LineAndColumnRange;
	public fun <init> (Lorg/jetbrains/kotlin/diagnostics/PsiDiagnosticUtils$LineAndColumn;Lorg/jetbrains/kotlin/diagnostics/PsiDiagnosticUtils$LineAndColumn;)V
	public fun getEnd ()Lorg/jetbrains/kotlin/diagnostics/PsiDiagnosticUtils$LineAndColumn;
	public fun getStart ()Lorg/jetbrains/kotlin/diagnostics/PsiDiagnosticUtils$LineAndColumn;
	public fun toString ()Ljava/lang/String;
}

public class org/jetbrains/kotlin/idea/KotlinFileType : com/intellij/openapi/fileTypes/LanguageFileType {
	public static final field DOT_DEFAULT_EXTENSION Ljava/lang/String;
	public static final field DOT_SCRIPT_EXTENSION Ljava/lang/String;
	public static final field EXTENSION Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/kotlin/idea/KotlinFileType;
	public static final field SCRIPT_EXTENSION Ljava/lang/String;
	public fun getDefaultExtension ()Ljava/lang/String;
	public fun getDescription ()Ljava/lang/String;
	public fun getIcon ()Ljavax/swing/Icon;
	public fun getName ()Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/idea/KotlinIconProviderService {
	public fun <init> ()V
	public abstract fun getBuiltInFileIcon ()Ljavax/swing/Icon;
	public abstract fun getFileIcon ()Ljavax/swing/Icon;
	public static fun getInstance ()Lorg/jetbrains/kotlin/idea/KotlinIconProviderService;
}

public class org/jetbrains/kotlin/idea/KotlinIconProviderService$CompilerKotlinFileIconProviderService : org/jetbrains/kotlin/idea/KotlinIconProviderService {
	public fun <init> ()V
	public fun getBuiltInFileIcon ()Ljavax/swing/Icon;
	public fun getFileIcon ()Ljavax/swing/Icon;
}

public class org/jetbrains/kotlin/idea/KotlinLanguage : com/intellij/lang/Language {
	public static final field INSTANCE Lorg/jetbrains/kotlin/idea/KotlinLanguage;
	public static final field NAME Ljava/lang/String;
	public fun getDisplayName ()Ljava/lang/String;
	public fun isCaseSensitive ()Z
}

public class org/jetbrains/kotlin/idea/KotlinModuleFileType : com/intellij/openapi/fileTypes/FileType {
	public static final field EXTENSION Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/kotlin/idea/KotlinModuleFileType;
	public fun getCharset (Lcom/intellij/openapi/vfs/VirtualFile;[B)Ljava/lang/String;
	public fun getDefaultExtension ()Ljava/lang/String;
	public fun getDescription ()Ljava/lang/String;
	public fun getIcon ()Ljavax/swing/Icon;
	public fun getName ()Ljava/lang/String;
	public fun isBinary ()Z
	public fun isReadOnly ()Z
}

public class org/jetbrains/kotlin/kdoc/lexer/KDocToken : org/jetbrains/kotlin/lexer/KtToken {
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;I)V
}

public abstract interface class org/jetbrains/kotlin/kdoc/lexer/KDocTokens {
	public static final field CODE_BLOCK_TEXT Lorg/jetbrains/kotlin/kdoc/lexer/KDocToken;
	public static final field CODE_BLOCK_TEXT_Id I
	public static final field CONTENT_TOKENS Lcom/intellij/psi/tree/TokenSet;
	public static final field END Lorg/jetbrains/kotlin/kdoc/lexer/KDocToken;
	public static final field END_Id I
	public static final field KDOC Lcom/intellij/psi/tree/ILazyParseableElementType;
	public static final field KDOC_HIGHLIGHT_TOKENS Lcom/intellij/psi/tree/TokenSet;
	public static final field KDOC_LPAR Lorg/jetbrains/kotlin/kdoc/lexer/KDocToken;
	public static final field KDOC_LPAR_Id I
	public static final field KDOC_RPAR Lorg/jetbrains/kotlin/kdoc/lexer/KDocToken;
	public static final field KDOC_RPAR_Id I
	public static final field LEADING_ASTERISK Lorg/jetbrains/kotlin/kdoc/lexer/KDocToken;
	public static final field LEADING_ASTERISK_Id I
	public static final field MARKDOWN_ESCAPED_CHAR Lorg/jetbrains/kotlin/kdoc/lexer/KDocToken;
	public static final field MARKDOWN_ESCAPED_CHAR_Id I
	public static final field MARKDOWN_INLINE_LINK Lorg/jetbrains/kotlin/kdoc/lexer/KDocToken;
	public static final field MARKDOWN_INLINE_LINK_Id I
	public static final field MARKDOWN_LINK Lcom/intellij/psi/tree/ILazyParseableElementType;
	public static final field START Lorg/jetbrains/kotlin/kdoc/lexer/KDocToken;
	public static final field START_Id I
	public static final field TAG_NAME Lorg/jetbrains/kotlin/kdoc/lexer/KDocToken;
	public static final field TAG_NAME_Id I
	public static final field TEXT Lorg/jetbrains/kotlin/kdoc/lexer/KDocToken;
	public static final field TEXT_Id I
}

public class org/jetbrains/kotlin/kdoc/parser/KDocElementType : com/intellij/psi/tree/IElementType {
	public fun <init> (Ljava/lang/String;Ljava/lang/Class;)V
	public fun createPsi (Lcom/intellij/lang/ASTNode;)Lcom/intellij/psi/PsiElement;
}

public class org/jetbrains/kotlin/kdoc/parser/KDocElementTypes {
	public static final field KDOC_NAME Lorg/jetbrains/kotlin/kdoc/parser/KDocElementType;
	public static final field KDOC_SECTION Lorg/jetbrains/kotlin/kdoc/parser/KDocElementType;
	public static final field KDOC_TAG Lorg/jetbrains/kotlin/kdoc/parser/KDocElementType;
	public fun <init> ()V
}

public final class org/jetbrains/kotlin/kdoc/parser/KDocKnownTag : java/lang/Enum {
	public static final field AUTHOR Lorg/jetbrains/kotlin/kdoc/parser/KDocKnownTag;
	public static final field CONSTRUCTOR Lorg/jetbrains/kotlin/kdoc/parser/KDocKnownTag;
	public static final field Companion Lorg/jetbrains/kotlin/kdoc/parser/KDocKnownTag$Companion;
	public static final field EXCEPTION Lorg/jetbrains/kotlin/kdoc/parser/KDocKnownTag;
	public static final field PARAM Lorg/jetbrains/kotlin/kdoc/parser/KDocKnownTag;
	public static final field PROPERTY Lorg/jetbrains/kotlin/kdoc/parser/KDocKnownTag;
	public static final field RECEIVER Lorg/jetbrains/kotlin/kdoc/parser/KDocKnownTag;
	public static final field RETURN Lorg/jetbrains/kotlin/kdoc/parser/KDocKnownTag;
	public static final field SAMPLE Lorg/jetbrains/kotlin/kdoc/parser/KDocKnownTag;
	public static final field SEE Lorg/jetbrains/kotlin/kdoc/parser/KDocKnownTag;
	public static final field SINCE Lorg/jetbrains/kotlin/kdoc/parser/KDocKnownTag;
	public static final field SUPPRESS Lorg/jetbrains/kotlin/kdoc/parser/KDocKnownTag;
	public static final field THROWS Lorg/jetbrains/kotlin/kdoc/parser/KDocKnownTag;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun isReferenceRequired ()Z
	public final fun isSectionStart ()Z
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/kdoc/parser/KDocKnownTag;
	public static fun values ()[Lorg/jetbrains/kotlin/kdoc/parser/KDocKnownTag;
}

public final class org/jetbrains/kotlin/kdoc/parser/KDocKnownTag$Companion {
	public final fun findByTagName (Ljava/lang/CharSequence;)Lorg/jetbrains/kotlin/kdoc/parser/KDocKnownTag;
}

public abstract interface class org/jetbrains/kotlin/kdoc/psi/api/KDoc : com/intellij/psi/PsiDocCommentBase, org/jetbrains/kotlin/kdoc/psi/api/KDocElement {
	public abstract fun findSectionByName (Ljava/lang/String;)Lorg/jetbrains/kotlin/kdoc/psi/impl/KDocSection;
	public abstract fun findSectionByTag (Lorg/jetbrains/kotlin/kdoc/parser/KDocKnownTag;)Lorg/jetbrains/kotlin/kdoc/psi/impl/KDocSection;
	public abstract fun findSectionByTag (Lorg/jetbrains/kotlin/kdoc/parser/KDocKnownTag;Ljava/lang/String;)Lorg/jetbrains/kotlin/kdoc/psi/impl/KDocSection;
	public abstract fun getAllSections ()Ljava/util/List;
	public abstract fun getDefaultSection ()Lorg/jetbrains/kotlin/kdoc/psi/impl/KDocSection;
	public abstract fun getOwner ()Lorg/jetbrains/kotlin/psi/KtDeclaration;
}

public abstract interface class org/jetbrains/kotlin/kdoc/psi/api/KDocElement : com/intellij/psi/PsiElement {
}

public abstract class org/jetbrains/kotlin/kdoc/psi/impl/KDocElementImpl : com/intellij/extapi/psi/ASTWrapperPsiElement, org/jetbrains/kotlin/kdoc/psi/api/KDocElement {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun getLanguage ()Lcom/intellij/lang/Language;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/kdoc/psi/impl/KDocLink : org/jetbrains/kotlin/psi/KtElementImpl {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public final fun getLinkText ()Ljava/lang/String;
	public final fun getLinkTextRange ()Lcom/intellij/openapi/util/TextRange;
	public final fun getTagIfSubject ()Lorg/jetbrains/kotlin/kdoc/psi/impl/KDocTag;
}

public final class org/jetbrains/kotlin/kdoc/psi/impl/KDocName : org/jetbrains/kotlin/psi/KtElementImpl {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public final fun getContainingDoc ()Lorg/jetbrains/kotlin/kdoc/psi/api/KDoc;
	public final fun getContainingSection ()Lorg/jetbrains/kotlin/kdoc/psi/impl/KDocSection;
	public final fun getNameText ()Ljava/lang/String;
	public final fun getNameTextRange ()Lcom/intellij/openapi/util/TextRange;
	public final fun getQualifiedName ()Ljava/util/List;
	public final fun getQualifiedNameAsFqName ()Lorg/jetbrains/kotlin/name/FqName;
	public final fun getQualifier ()Lorg/jetbrains/kotlin/kdoc/psi/impl/KDocName;
}

public final class org/jetbrains/kotlin/kdoc/psi/impl/KDocSection : org/jetbrains/kotlin/kdoc/psi/impl/KDocTag, com/intellij/psi/ContributedReferenceHost {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public final fun findTagByName (Ljava/lang/String;)Lorg/jetbrains/kotlin/kdoc/psi/impl/KDocTag;
	public final fun findTagsByName (Ljava/lang/String;)Ljava/util/List;
	public fun getContent ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getReference ()Lcom/intellij/psi/PsiReference;
	public fun getReferences ()[Lcom/intellij/psi/PsiReference;
	public fun getSubjectName ()Ljava/lang/String;
}

public class org/jetbrains/kotlin/kdoc/psi/impl/KDocTag : org/jetbrains/kotlin/kdoc/psi/impl/KDocElementImpl {
	public static final field Companion Lorg/jetbrains/kotlin/kdoc/psi/impl/KDocTag$Companion;
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun getContent ()Ljava/lang/String;
	public final fun getKnownTag ()Lorg/jetbrains/kotlin/kdoc/parser/KDocKnownTag;
	public fun getName ()Ljava/lang/String;
	public final fun getSubjectLink ()Lorg/jetbrains/kotlin/kdoc/psi/impl/KDocLink;
	public fun getSubjectName ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/kdoc/psi/impl/KDocTag$Companion {
	public final fun getIndentationWhiteSpaces ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/lang/BinaryOperationPrecedence : java/lang/Enum {
	public static final field ADDITIVE Lorg/jetbrains/kotlin/lang/BinaryOperationPrecedence;
	public static final field AS Lorg/jetbrains/kotlin/lang/BinaryOperationPrecedence;
	public static final field ASSIGNMENT Lorg/jetbrains/kotlin/lang/BinaryOperationPrecedence;
	public static final field COMPARISON Lorg/jetbrains/kotlin/lang/BinaryOperationPrecedence;
	public static final field CONJUNCTION Lorg/jetbrains/kotlin/lang/BinaryOperationPrecedence;
	public static final field Companion Lorg/jetbrains/kotlin/lang/BinaryOperationPrecedence$Companion;
	public static final field DISJUNCTION Lorg/jetbrains/kotlin/lang/BinaryOperationPrecedence;
	public static final field ELVIS Lorg/jetbrains/kotlin/lang/BinaryOperationPrecedence;
	public static final field EQUALITY Lorg/jetbrains/kotlin/lang/BinaryOperationPrecedence;
	public static final field INFIX Lorg/jetbrains/kotlin/lang/BinaryOperationPrecedence;
	public static final field IN_OR_IS Lorg/jetbrains/kotlin/lang/BinaryOperationPrecedence;
	public static final field MULTIPLICATIVE Lorg/jetbrains/kotlin/lang/BinaryOperationPrecedence;
	public static final field RANGE Lorg/jetbrains/kotlin/lang/BinaryOperationPrecedence;
	public static final field TOKEN_TO_BINARY_PRECEDENCE_MAP Ljava/util/Map;
	public static final field TOKEN_TO_BINARY_PRECEDENCE_MAP_WITH_SOFT_IDENTIFIERS Ljava/util/Map;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun getHigherPriority ()Lorg/jetbrains/kotlin/lang/BinaryOperationPrecedence;
	public final fun getTokenSet ()Lcom/intellij/psi/tree/TokenSet;
	public final fun getTokens ()[Lorg/jetbrains/kotlin/lexer/KtToken;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/lang/BinaryOperationPrecedence;
	public static fun values ()[Lorg/jetbrains/kotlin/lang/BinaryOperationPrecedence;
}

public final class org/jetbrains/kotlin/lang/BinaryOperationPrecedence$Companion {
}

public class org/jetbrains/kotlin/lexer/KtKeywordToken : org/jetbrains/kotlin/lexer/KtSingleValueToken {
	protected fun <init> (Ljava/lang/String;Ljava/lang/String;Z)V
	protected fun <init> (Ljava/lang/String;Ljava/lang/String;ZI)V
	public fun isSoft ()Z
	public static fun keyword (Ljava/lang/String;)Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static fun keyword (Ljava/lang/String;I)Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static fun keyword (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static fun keyword (Ljava/lang/String;Ljava/lang/String;I)Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static fun softKeyword (Ljava/lang/String;)Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static fun softKeyword (Ljava/lang/String;I)Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
}

public final class org/jetbrains/kotlin/lexer/KtModifierKeywordToken : org/jetbrains/kotlin/lexer/KtKeywordToken {
	public static fun keywordModifier (Ljava/lang/String;)Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static fun keywordModifier (Ljava/lang/String;I)Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static fun softKeywordModifier (Ljava/lang/String;)Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static fun softKeywordModifier (Ljava/lang/String;I)Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
}

public class org/jetbrains/kotlin/lexer/KtSingleValueToken : org/jetbrains/kotlin/lexer/KtToken {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;I)V
	public fun getValue ()Ljava/lang/String;
}

public class org/jetbrains/kotlin/lexer/KtToken : com/intellij/psi/tree/IElementType {
	public final field tokenId I
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;I)V
}

public abstract interface class org/jetbrains/kotlin/lexer/KtTokens {
	public static final field ABSTRACT_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field ABSTRACT_KEYWORD_Id I
	public static final field ACTUAL_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field ACTUAL_KEYWORD_Id I
	public static final field ALL_ASSIGNMENTS Lcom/intellij/psi/tree/TokenSet;
	public static final field ALL_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field ALL_KEYWORD_Id I
	public static final field AND Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field ANDAND Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field ANDAND_Id I
	public static final field AND_Id I
	public static final field ANNOTATION_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field ANNOTATION_KEYWORD_Id I
	public static final field ARROW Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field ARROW_Id I
	public static final field AS_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field AS_KEYWORD_Id I
	public static final field AS_SAFE Lorg/jetbrains/kotlin/lexer/KtToken;
	public static final field AS_SAFE_Id I
	public static final field AT Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field AT_Id I
	public static final field AUGMENTED_ASSIGNMENTS Lcom/intellij/psi/tree/TokenSet;
	public static final field BLOCK_COMMENT Lorg/jetbrains/kotlin/lexer/KtToken;
	public static final field BLOCK_COMMENT_Id I
	public static final field BREAK_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field BREAK_KEYWORD_Id I
	public static final field BY_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field BY_KEYWORD_Id I
	public static final field CATCH_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field CATCH_KEYWORD_Id I
	public static final field CHARACTER_LITERAL Lorg/jetbrains/kotlin/lexer/KtToken;
	public static final field CHARACTER_LITERAL_Id I
	public static final field CLASS_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field CLASS_KEYWORD_Id I
	public static final field CLOSING_QUOTE Lorg/jetbrains/kotlin/lexer/KtToken;
	public static final field CLOSING_QUOTE_Id I
	public static final field COLON Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field COLONCOLON Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field COLONCOLON_Id I
	public static final field COLON_Id I
	public static final field COMMA Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field COMMA_Id I
	public static final field COMMENTS Lcom/intellij/psi/tree/TokenSet;
	public static final field COMPANION_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field COMPANION_KEYWORD_Id I
	public static final field CONSTRUCTOR_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field CONSTRUCTOR_KEYWORD_Id I
	public static final field CONST_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field CONST_KEYWORD_Id I
	public static final field CONTEXT_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field CONTEXT_KEYWORD_Id I
	public static final field CONTINUE_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field CONTINUE_KEYWORD_Id I
	public static final field CONTRACT_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field CONTRACT_KEYWORD_Id I
	public static final field CROSSINLINE_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field CROSSINLINE_KEYWORD_Id I
	public static final field DANGLING_NEWLINE Lorg/jetbrains/kotlin/lexer/KtToken;
	public static final field DANGLING_NEWLINE_Id I
	public static final field DATA_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field DATA_KEYWORD_Id I
	public static final field DEFAULT_VISIBILITY_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field DELEGATE_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field DELEGATE_KEYWORD_Id I
	public static final field DIV Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field DIVEQ Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field DIVEQ_Id I
	public static final field DIV_Id I
	public static final field DOC_COMMENT Lcom/intellij/psi/tree/IElementType;
	public static final field DOT Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field DOT_Id I
	public static final field DOUBLE_ARROW Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field DOUBLE_ARROW_Id I
	public static final field DOUBLE_SEMICOLON Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field DOUBLE_SEMICOLON_Id I
	public static final field DO_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field DO_KEYWORD_Id I
	public static final field DYNAMIC_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field DYNAMIC_KEYWORD_Id I
	public static final field ELSE_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field ELSE_KEYWORD_Id I
	public static final field ELVIS Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field ELVIS_Id I
	public static final field ENUM_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field ENUM_KEYWORD_Id I
	public static final field EOF Lorg/jetbrains/kotlin/lexer/KtToken;
	public static final field EOF_Id I
	public static final field EOL_COMMENT Lorg/jetbrains/kotlin/lexer/KtToken;
	public static final field EOL_COMMENT_Id I
	public static final field EOL_OR_SEMICOLON Lorg/jetbrains/kotlin/lexer/KtToken;
	public static final field EOL_OR_SEMICOLON_Id I
	public static final field EQ Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field EQEQ Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field EQEQEQ Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field EQEQEQ_Id I
	public static final field EQEQ_Id I
	public static final field EQ_Id I
	public static final field ESCAPE_SEQUENCE Lorg/jetbrains/kotlin/lexer/KtToken;
	public static final field ESCAPE_SEQUENCE_Id I
	public static final field EXCL Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field EXCLEQ Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field EXCLEQEQEQ Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field EXCLEQEQEQ_Id I
	public static final field EXCLEQ_Id I
	public static final field EXCLEXCL Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field EXCLEXCL_Id I
	public static final field EXCL_Id I
	public static final field EXPECT_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field EXPECT_KEYWORD_Id I
	public static final field EXTERNAL_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field EXTERNAL_KEYWORD_Id I
	public static final field FALSE_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field FALSE_KEYWORD_Id I
	public static final field FIELD_IDENTIFIER Lorg/jetbrains/kotlin/lexer/KtToken;
	public static final field FIELD_IDENTIFIER_Id I
	public static final field FIELD_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field FIELD_KEYWORD_Id I
	public static final field FILE_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field FILE_KEYWORD_Id I
	public static final field FINALLY_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field FINALLY_KEYWORD_Id I
	public static final field FINAL_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field FINAL_KEYWORD_Id I
	public static final field FLOAT_LITERAL Lorg/jetbrains/kotlin/lexer/KtToken;
	public static final field FLOAT_LITERAL_Id I
	public static final field FOR_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field FOR_KEYWORD_Id I
	public static final field FUN_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field FUN_KEYWORD_Id I
	public static final field GET_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field GET_KEYWORD_Id I
	public static final field GT Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field GTEQ Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field GTEQ_Id I
	public static final field GT_Id I
	public static final field HASH Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field HASH_Id I
	public static final field IDENTIFIER Lorg/jetbrains/kotlin/lexer/KtToken;
	public static final field IDENTIFIER_Id I
	public static final field IF_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field IF_KEYWORD_Id I
	public static final field IMPORT_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field IMPORT_KEYWORD_Id I
	public static final field INCREMENT_AND_DECREMENT Lcom/intellij/psi/tree/TokenSet;
	public static final field INFIX_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field INFIX_KEYWORD_Id I
	public static final field INIT_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field INIT_KEYWORD_Id I
	public static final field INLINE_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field INLINE_KEYWORD_Id I
	public static final field INNER_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field INNER_KEYWORD_Id I
	public static final field INTEGER_LITERAL Lorg/jetbrains/kotlin/lexer/KtToken;
	public static final field INTEGER_LITERAL_Id I
	public static final field INTERFACE_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field INTERFACE_KEYWORD_Id I
	public static final field INTERNAL_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field INTERNAL_KEYWORD_Id I
	public static final field INTERPOLATION_PREFIX Lorg/jetbrains/kotlin/lexer/KtToken;
	public static final field INTERPOLATION_PREFIX_Id I
	public static final field INVALID_Id I
	public static final field IN_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field IN_KEYWORD_Id I
	public static final field IS_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field IS_KEYWORD_Id I
	public static final field KEYWORDS Lcom/intellij/psi/tree/TokenSet;
	public static final field LATEINIT_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field LATEINIT_KEYWORD_Id I
	public static final field LBRACE Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field LBRACE_Id I
	public static final field LBRACKET Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field LBRACKET_Id I
	public static final field LONG_TEMPLATE_ENTRY_END Lorg/jetbrains/kotlin/lexer/KtToken;
	public static final field LONG_TEMPLATE_ENTRY_END_Id I
	public static final field LONG_TEMPLATE_ENTRY_START Lorg/jetbrains/kotlin/lexer/KtToken;
	public static final field LONG_TEMPLATE_ENTRY_START_Id I
	public static final field LPAR Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field LPAR_Id I
	public static final field LT Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field LTEQ Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field LTEQ_Id I
	public static final field LT_Id I
	public static final field MINUS Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field MINUSEQ Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field MINUSEQ_Id I
	public static final field MINUSMINUS Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field MINUSMINUS_Id I
	public static final field MINUS_Id I
	public static final field MODALITY_MODIFIERS Lcom/intellij/psi/tree/TokenSet;
	public static final field MODIFIER_KEYWORDS Lcom/intellij/psi/tree/TokenSet;
	public static final field MODIFIER_KEYWORDS_ARRAY [Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field MUL Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field MULTEQ Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field MULTEQ_Id I
	public static final field MUL_Id I
	public static final field NOINLINE_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field NOINLINE_KEYWORD_Id I
	public static final field NOT_IN Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field NOT_IN_Id I
	public static final field NOT_IS Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field NOT_IS_Id I
	public static final field NULL_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field NULL_KEYWORD_Id I
	public static final field OBJECT_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field OBJECT_KEYWORD_Id I
	public static final field OPEN_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field OPEN_KEYWORD_Id I
	public static final field OPEN_QUOTE Lorg/jetbrains/kotlin/lexer/KtToken;
	public static final field OPEN_QUOTE_Id I
	public static final field OPERATIONS Lcom/intellij/psi/tree/TokenSet;
	public static final field OPERATOR_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field OPERATOR_KEYWORD_Id I
	public static final field OROR Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field OROR_Id I
	public static final field OUT_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field OUT_KEYWORD_Id I
	public static final field OVERRIDE_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field OVERRIDE_KEYWORD_Id I
	public static final field PACKAGE_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field PACKAGE_KEYWORD_Id I
	public static final field PARAM_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field PARAM_KEYWORD_Id I
	public static final field PERC Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field PERCEQ Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field PERCEQ_Id I
	public static final field PERC_Id I
	public static final field PLUS Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field PLUSEQ Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field PLUSEQ_Id I
	public static final field PLUSPLUS Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field PLUSPLUS_Id I
	public static final field PLUS_Id I
	public static final field PRIVATE_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field PRIVATE_KEYWORD_Id I
	public static final field PROPERTY_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field PROPERTY_KEYWORD_Id I
	public static final field PROTECTED_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field PROTECTED_KEYWORD_Id I
	public static final field PUBLIC_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field PUBLIC_KEYWORD_Id I
	public static final field QUALIFIED_ACCESS Lcom/intellij/psi/tree/TokenSet;
	public static final field QUEST Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field QUEST_Id I
	public static final field RANGE Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field RANGE_Id I
	public static final field RANGE_UNTIL Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field RANGE_UNTIL_Id I
	public static final field RBRACE Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field RBRACE_Id I
	public static final field RBRACKET Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field RBRACKET_Id I
	public static final field RECEIVER_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field RECEIVER_KEYWORD_Id I
	public static final field REGULAR_STRING_PART Lorg/jetbrains/kotlin/lexer/KtToken;
	public static final field REGULAR_STRING_PART_Id I
	public static final field REIFIED_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field REIFIED_KEYWORD_Id I
	public static final field RESERVED Lorg/jetbrains/kotlin/lexer/KtToken;
	public static final field RESERVED_Id I
	public static final field RESERVED_VALUE_PARAMETER_MODIFIER_KEYWORDS Lcom/intellij/psi/tree/TokenSet;
	public static final field RETURN_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field RETURN_KEYWORD_Id I
	public static final field RPAR Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field RPAR_Id I
	public static final field SAFE_ACCESS Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field SAFE_ACCESS_Id I
	public static final field SEALED_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field SEALED_KEYWORD_Id I
	public static final field SEMICOLON Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static final field SEMICOLON_Id I
	public static final field SETPARAM_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field SETPARAM_KEYWORD_Id I
	public static final field SET_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field SET_KEYWORD_Id I
	public static final field SHEBANG_COMMENT Lorg/jetbrains/kotlin/lexer/KtToken;
	public static final field SHEBANG_COMMENT_Id I
	public static final field SHORT_TEMPLATE_ENTRY_START Lorg/jetbrains/kotlin/lexer/KtToken;
	public static final field SHORT_TEMPLATE_ENTRY_START_Id I
	public static final field SOFT_KEYWORDS Lcom/intellij/psi/tree/TokenSet;
	public static final field STRINGS Lcom/intellij/psi/tree/TokenSet;
	public static final field SUPER_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field SUPER_KEYWORD_Id I
	public static final field SUSPEND_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field SUSPEND_KEYWORD_Id I
	public static final field TAILREC_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field TAILREC_KEYWORD_Id I
	public static final field THIS_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field THIS_KEYWORD_Id I
	public static final field THROW_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field THROW_KEYWORD_Id I
	public static final field TRUE_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field TRUE_KEYWORD_Id I
	public static final field TRY_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field TRY_KEYWORD_Id I
	public static final field TYPEOF_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field TYPEOF_KEYWORD_Id I
	public static final field TYPE_ALIAS_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field TYPE_ALIAS_KEYWORD_Id I
	public static final field TYPE_ARGUMENT_MODIFIER_KEYWORDS Lcom/intellij/psi/tree/TokenSet;
	public static final field TYPE_MODIFIER_KEYWORDS Lcom/intellij/psi/tree/TokenSet;
	public static final field VALUE_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field VALUE_KEYWORD_Id I
	public static final field VAL_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field VAL_KEYWORD_Id I
	public static final field VAL_VAR Lcom/intellij/psi/tree/TokenSet;
	public static final field VARARG_KEYWORD Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final field VARARG_KEYWORD_Id I
	public static final field VAR_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field VAR_KEYWORD_Id I
	public static final field VISIBILITY_MODIFIERS Lcom/intellij/psi/tree/TokenSet;
	public static final field WHEN_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field WHEN_KEYWORD_Id I
	public static final field WHERE_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field WHERE_KEYWORD_Id I
	public static final field WHILE_KEYWORD Lorg/jetbrains/kotlin/lexer/KtKeywordToken;
	public static final field WHILE_KEYWORD_Id I
	public static final field WHITESPACES Lcom/intellij/psi/tree/TokenSet;
	public static final field WHITE_SPACE Lcom/intellij/psi/tree/IElementType;
	public static final field WHITE_SPACE_OR_COMMENT_BIT_SET Lcom/intellij/psi/tree/TokenSet;
}

public final class org/jetbrains/kotlin/psi/BuilderByPattern {
	public fun <init> ()V
	public final fun appendChildRange (Lorg/jetbrains/kotlin/psi/psiUtil/PsiChildRange;)Lorg/jetbrains/kotlin/psi/BuilderByPattern;
	public final fun appendExpression (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/BuilderByPattern;
	public final fun appendExpressions (Ljava/lang/Iterable;Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/BuilderByPattern;
	public static synthetic fun appendExpressions$default (Lorg/jetbrains/kotlin/psi/BuilderByPattern;Ljava/lang/Iterable;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/BuilderByPattern;
	public final fun appendFixedText (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/BuilderByPattern;
	public final fun appendName (Lorg/jetbrains/kotlin/name/Name;)Lorg/jetbrains/kotlin/psi/BuilderByPattern;
	public final fun appendNonFormattedText (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/BuilderByPattern;
	public final fun appendTypeReference (Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/psi/BuilderByPattern;
	public final fun create (Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
}

public final class org/jetbrains/kotlin/psi/CreateByPatternKt {
	public static final fun buildByPattern (Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun buildDeclaration (Lorg/jetbrains/kotlin/psi/KtPsiFactory;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/psi/KtDeclaration;
	public static final fun buildDestructuringDeclaration (Lorg/jetbrains/kotlin/psi/KtPsiFactory;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/psi/KtDestructuringDeclaration;
	public static final fun buildExpression (Lorg/jetbrains/kotlin/psi/KtPsiFactory;ZLkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/psi/KtExpression;
	public static synthetic fun buildExpression$default (Lorg/jetbrains/kotlin/psi/KtPsiFactory;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtExpression;
	public static final fun buildValueArgumentList (Lorg/jetbrains/kotlin/psi/KtPsiFactory;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/psi/KtValueArgumentList;
	public static final fun createByPattern (Ljava/lang/String;[Ljava/lang/Object;ZLkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/psi/KtElement;
	public static synthetic fun createByPattern$default (Ljava/lang/String;[Ljava/lang/Object;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtElement;
	public static final fun createDeclarationByPattern (Lorg/jetbrains/kotlin/psi/KtPsiFactory;Ljava/lang/String;[Ljava/lang/Object;Z)Lorg/jetbrains/kotlin/psi/KtDeclaration;
	public static synthetic fun createDeclarationByPattern$default (Lorg/jetbrains/kotlin/psi/KtPsiFactory;Ljava/lang/String;[Ljava/lang/Object;ZILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtDeclaration;
	public static final fun createDestructuringDeclarationByPattern (Lorg/jetbrains/kotlin/psi/KtPsiFactory;Ljava/lang/String;[Ljava/lang/Object;Z)Lorg/jetbrains/kotlin/psi/KtDestructuringDeclaration;
	public static synthetic fun createDestructuringDeclarationByPattern$default (Lorg/jetbrains/kotlin/psi/KtPsiFactory;Ljava/lang/String;[Ljava/lang/Object;ZILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtDestructuringDeclaration;
	public static final fun createExpressionByPattern (Lorg/jetbrains/kotlin/psi/KtPsiFactory;Ljava/lang/String;[Ljava/lang/Object;Z)Lorg/jetbrains/kotlin/psi/KtExpression;
	public static synthetic fun createExpressionByPattern$default (Lorg/jetbrains/kotlin/psi/KtPsiFactory;Ljava/lang/String;[Ljava/lang/Object;ZILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtExpression;
	public static final fun createValueArgumentListByPattern (Lorg/jetbrains/kotlin/psi/KtPsiFactory;Ljava/lang/String;[Ljava/lang/Object;Z)Lorg/jetbrains/kotlin/psi/KtValueArgumentList;
	public static synthetic fun createValueArgumentListByPattern$default (Lorg/jetbrains/kotlin/psi/KtPsiFactory;Ljava/lang/String;[Ljava/lang/Object;ZILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtValueArgumentList;
	public static final fun getCREATE_BY_PATTERN_MAY_NOT_REFORMAT ()Z
	public static final fun setCREATE_BY_PATTERN_MAY_NOT_REFORMAT (Z)V
}

public final class org/jetbrains/kotlin/psi/EditCommaSeparatedListHelper {
	public static final field INSTANCE Lorg/jetbrains/kotlin/psi/EditCommaSeparatedListHelper;
	public final fun addItem (Lorg/jetbrains/kotlin/psi/KtElement;Ljava/util/List;Lorg/jetbrains/kotlin/psi/KtElement;)Lorg/jetbrains/kotlin/psi/KtElement;
	public final fun addItem (Lorg/jetbrains/kotlin/psi/KtElement;Ljava/util/List;Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/lexer/KtToken;)Lorg/jetbrains/kotlin/psi/KtElement;
	public static synthetic fun addItem$default (Lorg/jetbrains/kotlin/psi/EditCommaSeparatedListHelper;Lorg/jetbrains/kotlin/psi/KtElement;Ljava/util/List;Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/lexer/KtToken;ILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtElement;
	public final fun addItemAfter (Lorg/jetbrains/kotlin/psi/KtElement;Ljava/util/List;Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/psi/KtElement;)Lorg/jetbrains/kotlin/psi/KtElement;
	public final fun addItemAfter (Lorg/jetbrains/kotlin/psi/KtElement;Ljava/util/List;Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/lexer/KtToken;)Lorg/jetbrains/kotlin/psi/KtElement;
	public static synthetic fun addItemAfter$default (Lorg/jetbrains/kotlin/psi/EditCommaSeparatedListHelper;Lorg/jetbrains/kotlin/psi/KtElement;Ljava/util/List;Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/lexer/KtToken;ILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtElement;
	public final fun addItemBefore (Lorg/jetbrains/kotlin/psi/KtElement;Ljava/util/List;Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/psi/KtElement;)Lorg/jetbrains/kotlin/psi/KtElement;
	public final fun addItemBefore (Lorg/jetbrains/kotlin/psi/KtElement;Ljava/util/List;Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/lexer/KtToken;)Lorg/jetbrains/kotlin/psi/KtElement;
	public static synthetic fun addItemBefore$default (Lorg/jetbrains/kotlin/psi/EditCommaSeparatedListHelper;Lorg/jetbrains/kotlin/psi/KtElement;Ljava/util/List;Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/lexer/KtToken;ILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtElement;
	public final fun removeItem (Lorg/jetbrains/kotlin/psi/KtElement;)V
}

public abstract interface class org/jetbrains/kotlin/psi/FakeImplicitSpreadValueArgumentForCallableReference : org/jetbrains/kotlin/psi/ValueArgument {
	public abstract fun getExpression ()Lorg/jetbrains/kotlin/psi/ValueArgument;
}

public abstract interface class org/jetbrains/kotlin/psi/FakePositionalValueArgumentForCallableReference : org/jetbrains/kotlin/psi/ValueArgument {
	public abstract fun getIndex ()I
}

public abstract interface annotation class org/jetbrains/kotlin/psi/IfNotParsed : java/lang/annotation/Annotation {
}

public abstract interface class org/jetbrains/kotlin/psi/KotlinCodeFragmentImportModificationListener {
	public abstract fun onCodeFragmentImportsModification (Lorg/jetbrains/kotlin/psi/KtCodeFragment;)V
}

public abstract interface class org/jetbrains/kotlin/psi/KotlinDeclarationNavigationPolicy {
	public abstract fun getNavigationElement (Lorg/jetbrains/kotlin/psi/KtDeclaration;)Lorg/jetbrains/kotlin/psi/KtElement;
	public abstract fun getOriginalElement (Lorg/jetbrains/kotlin/psi/KtDeclaration;)Lorg/jetbrains/kotlin/psi/KtElement;
}

public class org/jetbrains/kotlin/psi/KotlinReferenceProvidersService {
	public static final field Companion Lorg/jetbrains/kotlin/psi/KotlinReferenceProvidersService$Companion;
	public fun <init> ()V
	public static final fun getInstance (Lcom/intellij/openapi/project/Project;)Lorg/jetbrains/kotlin/psi/KotlinReferenceProvidersService;
	public fun getReferences (Lcom/intellij/psi/PsiElement;)[Lcom/intellij/psi/PsiReference;
	public static final fun getReferencesFromProviders (Lcom/intellij/psi/PsiElement;)[Lcom/intellij/psi/PsiReference;
}

public final class org/jetbrains/kotlin/psi/KotlinReferenceProvidersService$Companion {
	public final fun getInstance (Lcom/intellij/openapi/project/Project;)Lorg/jetbrains/kotlin/psi/KotlinReferenceProvidersService;
	public final fun getReferencesFromProviders (Lcom/intellij/psi/PsiElement;)[Lcom/intellij/psi/PsiReference;
}

public final class org/jetbrains/kotlin/psi/KotlinStringLiteralTextEscaper : com/intellij/psi/LiteralTextEscaper {
	public fun <init> (Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)V
	public fun decode (Lcom/intellij/openapi/util/TextRange;Ljava/lang/StringBuilder;)Z
	public fun getOffsetInHost (ILcom/intellij/openapi/util/TextRange;)I
	public fun getRelevantTextRange ()Lcom/intellij/openapi/util/TextRange;
	public fun isOneLine ()Z
}

public abstract interface class org/jetbrains/kotlin/psi/KtAnnotated : org/jetbrains/kotlin/psi/KtElement {
	public abstract fun getAnnotationEntries ()Ljava/util/List;
	public abstract fun getAnnotations ()Ljava/util/List;
}

public class org/jetbrains/kotlin/psi/KtAnnotatedExpression : org/jetbrains/kotlin/psi/KtExpressionImpl, org/jetbrains/kotlin/psi/KtAnnotated, org/jetbrains/kotlin/psi/KtAnnotationsContainer {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getAnnotationEntries ()Ljava/util/List;
	public fun getAnnotations ()Ljava/util/List;
	public fun getBaseExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
}

public class org/jetbrains/kotlin/psi/KtAnnotation : org/jetbrains/kotlin/psi/KtElementImplStub {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getEntries ()Ljava/util/List;
	public fun getUseSiteTarget ()Lorg/jetbrains/kotlin/psi/KtAnnotationUseSiteTarget;
	public fun removeEntry (Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;)V
}

public class org/jetbrains/kotlin/psi/KtAnnotationEntry : org/jetbrains/kotlin/psi/KtElementImplStub, org/jetbrains/kotlin/psi/KtCallElement {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinAnnotationEntryStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getAtSymbol ()Lcom/intellij/psi/PsiElement;
	public fun getCalleeExpression ()Lorg/jetbrains/kotlin/psi/KtConstructorCalleeExpression;
	public synthetic fun getCalleeExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getLambdaArguments ()Ljava/util/List;
	public fun getPresentation ()Lcom/intellij/navigation/ItemPresentation;
	public fun getShortName ()Lorg/jetbrains/kotlin/name/Name;
	public fun getTypeArgumentList ()Lorg/jetbrains/kotlin/psi/KtTypeArgumentList;
	public fun getTypeArguments ()Ljava/util/List;
	public fun getTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun getUseSiteTarget ()Lorg/jetbrains/kotlin/psi/KtAnnotationUseSiteTarget;
	public fun getValueArgumentList ()Lorg/jetbrains/kotlin/psi/KtValueArgumentList;
	public fun getValueArguments ()Ljava/util/List;
}

public final class org/jetbrains/kotlin/psi/KtAnnotationUseSiteTarget : org/jetbrains/kotlin/psi/KtElementImplStub {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinAnnotationUseSiteTargetStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun getAnnotationUseSiteTarget ()Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationUseSiteTarget;
}

public abstract interface class org/jetbrains/kotlin/psi/KtAnnotationsContainer : org/jetbrains/kotlin/psi/KtElement {
	public abstract fun getAnnotationEntries ()Ljava/util/List;
	public abstract fun getAnnotations ()Ljava/util/List;
}

public abstract interface class org/jetbrains/kotlin/psi/KtAnonymousInitializer : org/jetbrains/kotlin/psi/KtDeclaration, org/jetbrains/kotlin/psi/KtStatementExpression {
	public abstract fun getBody ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public abstract fun getContainingDeclaration ()Lorg/jetbrains/kotlin/psi/KtDeclaration;
}

public class org/jetbrains/kotlin/psi/KtArrayAccessExpression : org/jetbrains/kotlin/psi/KtExpressionImpl, org/jetbrains/kotlin/psi/KtReferenceExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getArrayExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getBracketRanges ()Ljava/util/List;
	public fun getIndexExpressions ()Ljava/util/List;
	public fun getIndicesNode ()Lorg/jetbrains/kotlin/psi/KtContainerNode;
	public fun getLeftBracket ()Lcom/intellij/psi/PsiElement;
	public fun getRightBracket ()Lcom/intellij/psi/PsiElement;
	public fun getTrailingComma ()Lcom/intellij/psi/PsiElement;
}

public final class org/jetbrains/kotlin/psi/KtBackingField : org/jetbrains/kotlin/psi/KtDeclarationStub, org/jetbrains/kotlin/psi/KtDeclarationWithInitializer, org/jetbrains/kotlin/psi/KtDeclarationWithReturnType, org/jetbrains/kotlin/psi/KtModifierListOwner {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinBackingFieldStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun getEqualsToken ()Lcom/intellij/psi/PsiElement;
	public final fun getFieldKeyword ()Lcom/intellij/psi/PsiElement;
	public fun getInitializer ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public final fun getNamePlaceholder ()Lcom/intellij/psi/PsiElement;
	public final fun getReturnTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun getTextOffset ()I
	public fun getTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun hasInitializer ()Z
}

public class org/jetbrains/kotlin/psi/KtBinaryExpression : org/jetbrains/kotlin/psi/KtExpressionImpl, org/jetbrains/kotlin/psi/KtOperationExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getLeft ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getOperationReference ()Lorg/jetbrains/kotlin/psi/KtOperationReferenceExpression;
	public synthetic fun getOperationReference ()Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;
	public fun getOperationToken ()Lcom/intellij/psi/tree/IElementType;
	public fun getRight ()Lorg/jetbrains/kotlin/psi/KtExpression;
}

public class org/jetbrains/kotlin/psi/KtBinaryExpressionWithTypeRHS : org/jetbrains/kotlin/psi/KtExpressionImpl, org/jetbrains/kotlin/psi/KtOperationExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getLeft ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getOperationReference ()Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;
	public fun getRight ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
}

public final class org/jetbrains/kotlin/psi/KtBlockCodeFragment : org/jetbrains/kotlin/psi/KtCodeFragment {
	public fun <init> (Lcom/intellij/openapi/project/Project;Ljava/lang/String;Ljava/lang/CharSequence;Ljava/lang/String;Lcom/intellij/psi/PsiElement;)V
	public fun <init> (Lcom/intellij/psi/FileViewProvider;Ljava/lang/String;Lcom/intellij/psi/PsiElement;)V
	public fun getContentElement ()Lorg/jetbrains/kotlin/psi/KtBlockExpression;
	public synthetic fun getContentElement ()Lorg/jetbrains/kotlin/psi/KtElement;
}

public class org/jetbrains/kotlin/psi/KtBlockExpression : com/intellij/psi/impl/source/tree/LazyParseablePsiElement, org/jetbrains/kotlin/psi/KtElement, org/jetbrains/kotlin/psi/KtExpression, org/jetbrains/kotlin/psi/KtStatementExpression {
	public fun <init> (Ljava/lang/CharSequence;)V
	public final fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun acceptChildren (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)V
	public fun delete ()V
	public fun getChildren ()[Lcom/intellij/psi/PsiElement;
	public fun getContainingKtFile ()Lorg/jetbrains/kotlin/psi/KtFile;
	public fun getFirstStatement ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getLBrace ()Lcom/intellij/psi/PsiElement;
	public fun getLanguage ()Lcom/intellij/lang/Language;
	public fun getLastBracketRange ()Lcom/intellij/openapi/util/TextRange;
	public fun getParent ()Lcom/intellij/psi/PsiElement;
	public fun getPsiOrParent ()Lorg/jetbrains/kotlin/psi/KtElement;
	public fun getRBrace ()Lcom/intellij/psi/PsiElement;
	public fun getStatements ()Ljava/util/List;
	public fun shouldChangeModificationCount (Lcom/intellij/psi/PsiElement;)Z
	public fun toString ()Ljava/lang/String;
}

public class org/jetbrains/kotlin/psi/KtBlockStringTemplateEntry : org/jetbrains/kotlin/psi/KtStringTemplateEntryWithExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinBlockStringTemplateEntryStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getExpressions ()Ljava/util/List;
}

public class org/jetbrains/kotlin/psi/KtBreakExpression : org/jetbrains/kotlin/psi/KtExpressionWithLabel, org/jetbrains/kotlin/psi/KtStatementExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class org/jetbrains/kotlin/psi/KtCallElement : org/jetbrains/kotlin/psi/KtElement {
	public abstract fun getCalleeExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public abstract fun getLambdaArguments ()Ljava/util/List;
	public abstract fun getTypeArgumentList ()Lorg/jetbrains/kotlin/psi/KtTypeArgumentList;
	public abstract fun getTypeArguments ()Ljava/util/List;
	public abstract fun getValueArgumentList ()Lorg/jetbrains/kotlin/psi/KtValueArgumentList;
	public abstract fun getValueArguments ()Ljava/util/List;
}

public class org/jetbrains/kotlin/psi/KtCallExpression : org/jetbrains/kotlin/psi/KtExpressionImplStub, org/jetbrains/kotlin/psi/KtCallElement, org/jetbrains/kotlin/psi/KtReferenceExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getCalleeExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getLambdaArguments ()Ljava/util/List;
	public fun getTypeArgumentList ()Lorg/jetbrains/kotlin/psi/KtTypeArgumentList;
	public fun getTypeArguments ()Ljava/util/List;
	public fun getValueArgumentList ()Lorg/jetbrains/kotlin/psi/KtValueArgumentList;
	public fun getValueArguments ()Ljava/util/List;
}

public abstract interface class org/jetbrains/kotlin/psi/KtCallableDeclaration : org/jetbrains/kotlin/psi/KtDeclarationWithReturnType, org/jetbrains/kotlin/psi/KtNamedDeclaration, org/jetbrains/kotlin/psi/KtTypeParameterListOwner {
	public abstract fun getColon ()Lcom/intellij/psi/PsiElement;
	public fun getContextReceivers ()Ljava/util/List;
	public abstract fun getReceiverTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public abstract fun getTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public abstract fun getValueParameterList ()Lorg/jetbrains/kotlin/psi/KtParameterList;
	public abstract fun getValueParameters ()Ljava/util/List;
	public abstract fun setTypeReference (Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/psi/KtTypeReference;
}

public class org/jetbrains/kotlin/psi/KtCallableReferenceExpression : org/jetbrains/kotlin/psi/KtExpressionImpl, org/jetbrains/kotlin/psi/KtDoubleColonExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun findColonColon ()Lcom/intellij/psi/PsiElement;
	public fun getCallableReference ()Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;
}

public class org/jetbrains/kotlin/psi/KtCatchClause : org/jetbrains/kotlin/psi/KtElementImpl {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getCatchBody ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getCatchParameter ()Lorg/jetbrains/kotlin/psi/KtParameter;
	public fun getParameterList ()Lorg/jetbrains/kotlin/psi/KtParameterList;
}

public class org/jetbrains/kotlin/psi/KtClass : org/jetbrains/kotlin/psi/KtClassOrObject {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinClassStub;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinClassStub;Lcom/intellij/psi/stubs/IStubElementType;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun getClassKeyword ()Lcom/intellij/psi/PsiElement;
	public final fun getClassOrInterfaceKeyword ()Lcom/intellij/psi/PsiElement;
	public fun getCompanionObjects ()Ljava/util/List;
	public final fun getFunKeyword ()Lcom/intellij/psi/PsiElement;
	public final fun getProperties ()Ljava/util/List;
	public final fun isEnum ()Z
	public final fun isInline ()Z
	public final fun isInner ()Z
	public final fun isInterface ()Z
	public final fun isSealed ()Z
	public final fun isValue ()Z
}

public final class org/jetbrains/kotlin/psi/KtClassBody : org/jetbrains/kotlin/psi/KtElementImplStub, org/jetbrains/kotlin/psi/KtDeclarationContainer {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun getAllCompanionObjects ()Ljava/util/List;
	public final fun getAnonymousInitializers ()Ljava/util/List;
	public final fun getDanglingAnnotations ()Ljava/util/List;
	public final fun getDanglingModifierLists ()Ljava/util/List;
	public fun getDeclarations ()Ljava/util/List;
	public final fun getEnumEntries ()Ljava/util/List;
	public final fun getFunctions ()Ljava/util/List;
	public final fun getLBrace ()Lcom/intellij/psi/PsiElement;
	public fun getParent ()Lcom/intellij/psi/PsiElement;
	public final fun getProperties ()Ljava/util/List;
	public final fun getRBrace ()Lcom/intellij/psi/PsiElement;
}

public final class org/jetbrains/kotlin/psi/KtClassInitializer : org/jetbrains/kotlin/psi/KtDeclarationStub, org/jetbrains/kotlin/psi/KtAnonymousInitializer {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getBody ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getContainingDeclaration ()Lorg/jetbrains/kotlin/psi/KtClassOrObject;
	public synthetic fun getContainingDeclaration ()Lorg/jetbrains/kotlin/psi/KtDeclaration;
	public final fun getInitKeyword ()Lcom/intellij/psi/PsiElement;
	public final fun getOpenBraceNode ()Lcom/intellij/psi/PsiElement;
}

public final class org/jetbrains/kotlin/psi/KtClassKt {
	public static final fun createPrimaryConstructorIfAbsent (Lorg/jetbrains/kotlin/psi/KtClass;)Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;
	public static final fun createPrimaryConstructorParameterListIfAbsent (Lorg/jetbrains/kotlin/psi/KtClass;)Lorg/jetbrains/kotlin/psi/KtParameterList;
}

public abstract interface class org/jetbrains/kotlin/psi/KtClassLikeDeclaration : org/jetbrains/kotlin/psi/KtNamedDeclaration {
	public abstract fun getClassId ()Lorg/jetbrains/kotlin/name/ClassId;
}

public class org/jetbrains/kotlin/psi/KtClassLiteralExpression : org/jetbrains/kotlin/psi/KtElementImplStub, org/jetbrains/kotlin/psi/KtDoubleColonExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinClassLiteralExpressionStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun findColonColon ()Lcom/intellij/psi/PsiElement;
	public fun getReceiverExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
}

public abstract class org/jetbrains/kotlin/psi/KtClassOrObject : org/jetbrains/kotlin/psi/KtTypeParameterListOwnerStub, org/jetbrains/kotlin/psi/KtClassLikeDeclaration, org/jetbrains/kotlin/psi/KtDeclarationContainer, org/jetbrains/kotlin/psi/KtNamedDeclaration, org/jetbrains/kotlin/psi/KtPureClassOrObject {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinClassOrObjectStub;Lcom/intellij/psi/stubs/IStubElementType;)V
	public final fun addSuperTypeListEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeListEntry;)Lorg/jetbrains/kotlin/psi/KtSuperTypeListEntry;
	public fun delete ()V
	public final fun getAnonymousInitializers ()Ljava/util/List;
	public fun getBody ()Lorg/jetbrains/kotlin/psi/KtClassBody;
	public fun getClassId ()Lorg/jetbrains/kotlin/name/ClassId;
	public final fun getColon ()Lcom/intellij/psi/PsiElement;
	public fun getContextReceivers ()Ljava/util/List;
	public final fun getDeclarationKeyword ()Lcom/intellij/psi/PsiElement;
	public fun getDeclarations ()Ljava/util/List;
	public fun getPresentation ()Lcom/intellij/navigation/ItemPresentation;
	public fun getPrimaryConstructor ()Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;
	public fun getPrimaryConstructorModifierList ()Lorg/jetbrains/kotlin/psi/KtModifierList;
	public final fun getPrimaryConstructorParameterList ()Lorg/jetbrains/kotlin/psi/KtParameterList;
	public fun getPrimaryConstructorParameters ()Ljava/util/List;
	public fun getSecondaryConstructors ()Ljava/util/List;
	public final fun getSuperTypeList ()Lorg/jetbrains/kotlin/psi/KtSuperTypeList;
	public fun getSuperTypeListEntries ()Ljava/util/List;
	public fun hasExplicitPrimaryConstructor ()Z
	public fun hasPrimaryConstructor ()Z
	public final fun hasSecondaryConstructors ()Z
	public final fun isAnnotation ()Z
	public final fun isData ()Z
	public fun isEquivalentTo (Lcom/intellij/psi/PsiElement;)Z
	public fun isLocal ()Z
	public final fun isTopLevel ()Z
	public final fun removeSuperTypeListEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeListEntry;)V
	public fun subtreeChanged ()V
}

public final class org/jetbrains/kotlin/psi/KtClassOrObjectKt {
	public static final fun getAllConstructors (Lorg/jetbrains/kotlin/psi/KtClassOrObject;)Ljava/util/List;
	public static final fun getOrCreateBody (Lorg/jetbrains/kotlin/psi/KtClassOrObject;)Lorg/jetbrains/kotlin/psi/KtClassBody;
}

public abstract class org/jetbrains/kotlin/psi/KtCodeFragment : org/jetbrains/kotlin/psi/KtFile, org/jetbrains/kotlin/psi/KtCodeFragmentBase {
	public static final field Companion Lorg/jetbrains/kotlin/psi/KtCodeFragment$Companion;
	public static final field IMPORT_SEPARATOR Ljava/lang/String;
	public fun <init> (Lcom/intellij/openapi/project/Project;Ljava/lang/String;Ljava/lang/CharSequence;Ljava/lang/String;Lcom/intellij/psi/tree/IElementType;Lcom/intellij/psi/PsiElement;)V
	public fun <init> (Lcom/intellij/psi/FileViewProvider;Ljava/lang/String;Lcom/intellij/psi/tree/IElementType;Lcom/intellij/psi/PsiElement;)V
	public final fun addImport (Ljava/lang/String;)V
	public fun addImportsFromString (Ljava/lang/String;)V
	public synthetic fun clone ()Lcom/intellij/psi/impl/source/PsiFileImpl;
	public synthetic fun clone ()Ljava/lang/Object;
	public fun clone ()Lorg/jetbrains/kotlin/psi/KtCodeFragment;
	public fun forceResolveScope (Lcom/intellij/psi/search/GlobalSearchScope;)V
	public abstract fun getContentElement ()Lorg/jetbrains/kotlin/psi/KtElement;
	public fun getContext ()Lcom/intellij/psi/PsiElement;
	public final fun getContextContainingFile ()Lorg/jetbrains/kotlin/psi/KtFile;
	public fun getExceptionHandler ()Lcom/intellij/psi/JavaCodeFragment$ExceptionHandler;
	public fun getForcedResolveScope ()Lcom/intellij/psi/search/GlobalSearchScope;
	public fun getImportDirectives ()Ljava/util/List;
	public fun getImportList ()Lorg/jetbrains/kotlin/psi/KtImportList;
	protected fun getImportLists ()Ljava/util/List;
	public final fun getOriginalContext ()Lorg/jetbrains/kotlin/psi/KtElement;
	public fun getResolveScope ()Lcom/intellij/psi/search/GlobalSearchScope;
	public fun getSuperType ()Lcom/intellij/psi/PsiType;
	public fun getThisType ()Lcom/intellij/psi/PsiType;
	public synthetic fun getViewProvider ()Lcom/intellij/psi/FileViewProvider;
	public final fun getViewProvider ()Lcom/intellij/psi/SingleRootFileViewProvider;
	public fun getVisibilityChecker ()Lcom/intellij/psi/JavaCodeFragment$VisibilityChecker;
	public final fun importsAsImportList ()Lorg/jetbrains/kotlin/psi/KtImportList;
	public fun importsToString ()Ljava/lang/String;
	protected final fun init (Lcom/intellij/psi/tree/IElementType;Lcom/intellij/psi/tree/IElementType;)V
	public fun isPhysical ()Z
	public fun isValid ()Z
	public fun setExceptionHandler (Lcom/intellij/psi/JavaCodeFragment$ExceptionHandler;)V
	public fun setSuperType (Lcom/intellij/psi/PsiType;)V
	public fun setThisType (Lcom/intellij/psi/PsiType;)V
	public fun setVisibilityChecker (Lcom/intellij/psi/JavaCodeFragment$VisibilityChecker;)V
}

public final class org/jetbrains/kotlin/psi/KtCodeFragment$Companion {
	public final fun getFAKE_CONTEXT_FOR_JAVA_FILE ()Lcom/intellij/openapi/util/Key;
	public final fun getIMPORT_MODIFICATION ()Lcom/intellij/util/messages/Topic;
}

public abstract interface class org/jetbrains/kotlin/psi/KtCodeFragmentBase : com/intellij/psi/JavaCodeFragment {
	public fun importClass (Lcom/intellij/psi/PsiClass;)Z
}

public class org/jetbrains/kotlin/psi/KtCollectionLiteralExpression : org/jetbrains/kotlin/psi/KtElementImplStub, org/jetbrains/kotlin/psi/KtReferenceExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinCollectionLiteralExpressionStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getInnerExpressions ()Ljava/util/List;
	public fun getLeftBracket ()Lcom/intellij/psi/PsiElement;
	public fun getRightBracket ()Lcom/intellij/psi/PsiElement;
	public fun getTrailingComma ()Lcom/intellij/psi/PsiElement;
}

public class org/jetbrains/kotlin/psi/KtCommonFile : com/intellij/extapi/psi/PsiFileBase, com/intellij/psi/PsiNamedElement, org/jetbrains/kotlin/psi/KtAnnotated, org/jetbrains/kotlin/psi/KtDeclarationContainer, org/jetbrains/kotlin/psi/KtElement {
	public fun <init> (Lcom/intellij/psi/FileViewProvider;Z)V
	public fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun acceptChildren (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)V
	public fun clearCaches ()V
	public final fun findAliasByFqName (Lorg/jetbrains/kotlin/name/FqName;)Lorg/jetbrains/kotlin/psi/KtImportAlias;
	public final fun findChildByTypeOrClass (Lorg/jetbrains/kotlin/psi/stubs/elements/KtStubElementType;Ljava/lang/Class;)Lorg/jetbrains/kotlin/psi/KtElementImplStub;
	public final fun findChildrenByTypeOrClass (Lorg/jetbrains/kotlin/psi/stubs/elements/KtStubElementType;Ljava/lang/Class;)[Lorg/jetbrains/kotlin/psi/KtElementImplStub;
	public final fun findImportByAlias (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtImportDirective;
	public fun getAnnotationEntries ()Ljava/util/List;
	public fun getAnnotations ()Ljava/util/List;
	public fun getContainingKtFile ()Lorg/jetbrains/kotlin/psi/KtFile;
	public final fun getDanglingAnnotations ()Ljava/util/List;
	public final fun getDanglingModifierLists ()[Lorg/jetbrains/kotlin/psi/KtModifierList;
	public fun getDeclarations ()Ljava/util/List;
	public final fun getFileAnnotationList ()Lorg/jetbrains/kotlin/psi/KtFileAnnotationList;
	public fun getFileType ()Lcom/intellij/openapi/fileTypes/FileType;
	protected fun getGreenStub ()Lorg/jetbrains/kotlin/psi/stubs/KotlinFileStub;
	public fun getImportDirectives ()Ljava/util/List;
	public fun getImportList ()Lorg/jetbrains/kotlin/psi/KtImportList;
	protected fun getImportLists ()Ljava/util/List;
	public final fun getNameForGivenImportAlias (Lorg/jetbrains/kotlin/name/Name;)Lorg/jetbrains/kotlin/name/Name;
	public final fun getPackageDirective ()Lorg/jetbrains/kotlin/psi/KtPackageDirective;
	public final fun getPackageFqName ()Lorg/jetbrains/kotlin/name/FqName;
	public final fun getPackageFqNameByTree ()Lorg/jetbrains/kotlin/name/FqName;
	public fun getPsiOrParent ()Lorg/jetbrains/kotlin/psi/KtElement;
	public final fun getScript ()Lorg/jetbrains/kotlin/psi/KtScript;
	public synthetic fun getStub ()Lcom/intellij/psi/stubs/StubElement;
	public fun getStub ()Lorg/jetbrains/kotlin/psi/stubs/KotlinFileStub;
	public final fun getVirtualFilePath ()Ljava/lang/String;
	public final fun hasImportAlias ()Z
	public final fun hasTopLevelCallables ()Z
	public final fun isCompiled ()Z
	public final fun isScript ()Z
	public final fun isScriptByTree ()Z
	public fun setName (Ljava/lang/String;)Lcom/intellij/psi/PsiElement;
	public final fun setPackageFqName (Lorg/jetbrains/kotlin/name/FqName;)V
	public final fun shouldChangeModificationCount (Lcom/intellij/psi/PsiElement;)Z
	public fun toString ()Ljava/lang/String;
}

public class org/jetbrains/kotlin/psi/KtConstantExpression : org/jetbrains/kotlin/psi/KtElementImplStub, org/jetbrains/kotlin/psi/KtExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinConstantExpressionStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getText ()Ljava/lang/String;
	public fun replace (Lcom/intellij/psi/PsiElement;)Lcom/intellij/psi/PsiElement;
}

public abstract class org/jetbrains/kotlin/psi/KtConstructor : org/jetbrains/kotlin/psi/KtDeclarationStub, org/jetbrains/kotlin/psi/KtFunction {
	protected fun <init> (Lcom/intellij/lang/ASTNode;)V
	protected fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinConstructorStub;Lorg/jetbrains/kotlin/psi/stubs/elements/KtStubElementType;)V
	public fun getBodyExpression ()Lorg/jetbrains/kotlin/psi/KtBlockExpression;
	public synthetic fun getBodyExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getColon ()Lcom/intellij/psi/PsiElement;
	public fun getConstructorKeyword ()Lcom/intellij/psi/PsiElement;
	public abstract fun getContainingClassOrObject ()Lorg/jetbrains/kotlin/psi/KtClassOrObject;
	public synthetic fun getEqualsToken ()Lcom/intellij/psi/PsiElement;
	public fun getEqualsToken ()Ljava/lang/Void;
	public fun getFqName ()Ljava/lang/Void;
	public synthetic fun getFqName ()Lorg/jetbrains/kotlin/name/FqName;
	public fun getIdentifyingElement ()Lcom/intellij/psi/PsiElement;
	public fun getName ()Ljava/lang/String;
	public fun getNameAsName ()Lorg/jetbrains/kotlin/name/Name;
	public fun getNameAsSafeName ()Lorg/jetbrains/kotlin/name/Name;
	public synthetic fun getNameIdentifier ()Lcom/intellij/psi/PsiElement;
	public fun getNameIdentifier ()Ljava/lang/Void;
	public fun getPresentation ()Lcom/intellij/navigation/ItemPresentation;
	public fun getReceiverTypeReference ()Ljava/lang/Void;
	public synthetic fun getReceiverTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun getTextOffset ()I
	public fun getTypeConstraintList ()Ljava/lang/Void;
	public synthetic fun getTypeConstraintList ()Lorg/jetbrains/kotlin/psi/KtTypeConstraintList;
	public fun getTypeConstraints ()Ljava/util/List;
	public fun getTypeParameterList ()Ljava/lang/Void;
	public synthetic fun getTypeParameterList ()Lorg/jetbrains/kotlin/psi/KtTypeParameterList;
	public fun getTypeParameters ()Ljava/util/List;
	public fun getTypeReference ()Ljava/lang/Void;
	public synthetic fun getTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun getUseScope ()Lcom/intellij/psi/search/SearchScope;
	public fun getValueParameterList ()Lorg/jetbrains/kotlin/psi/KtParameterList;
	public fun getValueParameters ()Ljava/util/List;
	public fun hasBlockBody ()Z
	public fun hasBody ()Z
	public final fun hasConstructorKeyword ()Z
	public fun hasDeclaredReturnType ()Z
	public final fun isDelegatedCallToThis ()Z
	public final fun isExplicitDelegationCall ()Z
	public fun isLocal ()Z
	public fun mayHaveContract ()Z
	public fun setName (Ljava/lang/String;)Lcom/intellij/psi/PsiElement;
	public fun setTypeReference (Lorg/jetbrains/kotlin/psi/KtTypeReference;)Ljava/lang/Void;
	public synthetic fun setTypeReference (Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/psi/KtTypeReference;
}

public class org/jetbrains/kotlin/psi/KtConstructorCalleeExpression : org/jetbrains/kotlin/psi/KtExpressionImplStub {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getConstructorReferenceExpression ()Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;
	public fun getTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
}

public class org/jetbrains/kotlin/psi/KtConstructorDelegationCall : org/jetbrains/kotlin/psi/KtElementImpl, org/jetbrains/kotlin/psi/KtCallElement {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getCalleeExpression ()Lorg/jetbrains/kotlin/psi/KtConstructorDelegationReferenceExpression;
	public synthetic fun getCalleeExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getLambdaArguments ()Ljava/util/List;
	public fun getTypeArgumentList ()Lorg/jetbrains/kotlin/psi/KtTypeArgumentList;
	public fun getTypeArguments ()Ljava/util/List;
	public fun getValueArgumentList ()Lorg/jetbrains/kotlin/psi/KtValueArgumentList;
	public fun getValueArguments ()Ljava/util/List;
	public fun isCallToThis ()Z
	public fun isImplicit ()Z
}

public class org/jetbrains/kotlin/psi/KtConstructorDelegationReferenceExpression : org/jetbrains/kotlin/psi/KtExpressionImpl, org/jetbrains/kotlin/psi/KtReferenceExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun isThis ()Z
}

public class org/jetbrains/kotlin/psi/KtContainerNode : org/jetbrains/kotlin/psi/KtElementImpl {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	protected fun findChildByClass (Ljava/lang/Class;)Ljava/lang/Object;
	protected fun findChildByType (Lcom/intellij/psi/tree/IElementType;)Lcom/intellij/psi/PsiElement;
}

public final class org/jetbrains/kotlin/psi/KtContainerNodeForControlStructureBody : org/jetbrains/kotlin/psi/KtContainerNode {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public final fun getExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
}

public final class org/jetbrains/kotlin/psi/KtContextReceiver : org/jetbrains/kotlin/psi/KtElementImplStub {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinContextReceiverStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun getOwnerDeclaration ()Lorg/jetbrains/kotlin/psi/KtDeclaration;
	public final fun labelName ()Ljava/lang/String;
	public final fun labelNameAsName ()Lorg/jetbrains/kotlin/name/Name;
	public final fun name ()Ljava/lang/String;
	public final fun targetLabel ()Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;
	public final fun typeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
}

public final class org/jetbrains/kotlin/psi/KtContextReceiverList : org/jetbrains/kotlin/psi/KtElementImplStub {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun contextParameters ()Ljava/util/List;
	public final fun contextReceivers ()Ljava/util/List;
	public final fun getOwnerDeclaration ()Lorg/jetbrains/kotlin/psi/KtDeclaration;
	public final fun typeReferences ()Ljava/util/List;
}

public class org/jetbrains/kotlin/psi/KtContinueExpression : org/jetbrains/kotlin/psi/KtExpressionWithLabel, org/jetbrains/kotlin/psi/KtStatementExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/kotlin/psi/KtContractEffect : org/jetbrains/kotlin/psi/KtElementImplStub {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinContractEffectStub;)V
}

public final class org/jetbrains/kotlin/psi/KtContractEffectKt {
	public static final fun getExpression (Lorg/jetbrains/kotlin/psi/KtContractEffect;)Lorg/jetbrains/kotlin/psi/KtExpression;
}

public final class org/jetbrains/kotlin/psi/KtContractEffectList : org/jetbrains/kotlin/psi/KtElementImplStub {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
}

public final class org/jetbrains/kotlin/psi/KtContractEffectListKt {
	public static final fun getContractEffects (Lorg/jetbrains/kotlin/psi/KtContractEffectList;)Ljava/util/List;
}

public abstract interface class org/jetbrains/kotlin/psi/KtDeclaration : org/jetbrains/kotlin/psi/KtExpression, org/jetbrains/kotlin/psi/KtModifierListOwner {
	public static final field ARRAY_FACTORY Lcom/intellij/util/ArrayFactory;
	public static final field EMPTY_ARRAY [Lorg/jetbrains/kotlin/psi/KtDeclaration;
	public abstract fun getDocComment ()Lorg/jetbrains/kotlin/kdoc/psi/api/KDoc;
}

public abstract interface class org/jetbrains/kotlin/psi/KtDeclarationContainer {
	public abstract fun getDeclarations ()Ljava/util/List;
}

public abstract class org/jetbrains/kotlin/psi/KtDeclarationImpl : org/jetbrains/kotlin/psi/KtExpressionImpl, org/jetbrains/kotlin/psi/KtDeclaration {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun addAnnotationEntry (Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;)Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;
	public fun addModifier (Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)V
	public fun getAnnotationEntries ()Ljava/util/List;
	public fun getAnnotations ()Ljava/util/List;
	public fun getDocComment ()Lorg/jetbrains/kotlin/kdoc/psi/api/KDoc;
	public fun getModifierList ()Lorg/jetbrains/kotlin/psi/KtModifierList;
	public fun hasModifier (Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)Z
	public fun removeModifier (Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)V
}

public class org/jetbrains/kotlin/psi/KtDeclarationModifierList : org/jetbrains/kotlin/psi/KtModifierList {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinModifierListStub;)V
}

public abstract class org/jetbrains/kotlin/psi/KtDeclarationStub : org/jetbrains/kotlin/psi/KtModifierListOwnerStub, org/jetbrains/kotlin/psi/KtDeclaration {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lcom/intellij/psi/stubs/StubElement;Lcom/intellij/psi/stubs/IStubElementType;)V
	public fun getDocComment ()Lorg/jetbrains/kotlin/kdoc/psi/api/KDoc;
	public fun getModificationStamp ()J
	public fun getNavigationElement ()Lcom/intellij/psi/PsiElement;
	public fun getOriginalElement ()Lcom/intellij/psi/PsiElement;
	public fun getParent ()Lcom/intellij/psi/PsiElement;
	public fun subtreeChanged ()V
}

public abstract interface class org/jetbrains/kotlin/psi/KtDeclarationWithBody : org/jetbrains/kotlin/psi/KtDeclaration {
	public fun getBodyBlockExpression ()Lorg/jetbrains/kotlin/psi/KtBlockExpression;
	public abstract fun getBodyExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getContractDescription ()Lorg/jetbrains/kotlin/psi/KtContractEffectList;
	public abstract fun getEqualsToken ()Lcom/intellij/psi/PsiElement;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getValueParameters ()Ljava/util/List;
	public abstract fun hasBlockBody ()Z
	public abstract fun hasBody ()Z
	public fun hasContractEffectList ()Z
	public abstract fun hasDeclaredReturnType ()Z
	public fun mayHaveContract ()Z
}

public abstract interface class org/jetbrains/kotlin/psi/KtDeclarationWithInitializer : org/jetbrains/kotlin/psi/KtDeclaration {
	public abstract fun getInitializer ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public abstract fun hasInitializer ()Z
}

public abstract interface class org/jetbrains/kotlin/psi/KtDeclarationWithReturnType : org/jetbrains/kotlin/psi/KtDeclaration {
	public abstract fun getTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
}

public class org/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry : org/jetbrains/kotlin/psi/KtSuperTypeListEntry {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getByKeywordNode ()Lcom/intellij/lang/ASTNode;
	public fun getDelegateExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
}

public class org/jetbrains/kotlin/psi/KtDestructuringDeclaration : org/jetbrains/kotlin/psi/KtDeclarationImpl, org/jetbrains/kotlin/psi/KtDeclarationWithInitializer, org/jetbrains/kotlin/psi/KtDeclarationWithReturnType, org/jetbrains/kotlin/psi/KtValVarKeywordOwner {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getEntries ()Ljava/util/List;
	public fun getInitializer ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getLPar ()Lcom/intellij/psi/PsiElement;
	public fun getRPar ()Lcom/intellij/psi/PsiElement;
	public fun getTrailingComma ()Lcom/intellij/psi/PsiElement;
	public fun getTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun getValOrVarKeyword ()Lcom/intellij/psi/PsiElement;
	public fun hasInitializer ()Z
	public fun hasSquareBrackets ()Z
	public fun isFullForm ()Z
	public fun isVar ()Z
}

public class org/jetbrains/kotlin/psi/KtDestructuringDeclarationEntry : org/jetbrains/kotlin/psi/KtVariableDeclaration {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getColon ()Lcom/intellij/psi/PsiElement;
	public fun getFqName ()Lorg/jetbrains/kotlin/name/FqName;
	public synthetic fun getInitializer ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getInitializer ()Lorg/jetbrains/kotlin/psi/KtNameReferenceExpression;
	public synthetic fun getName ()Ljava/lang/String;
	public synthetic fun getNameAsName ()Lorg/jetbrains/kotlin/name/Name;
	public synthetic fun getNameAsSafeName ()Lorg/jetbrains/kotlin/name/Name;
	public synthetic fun getNameIdentifier ()Lcom/intellij/psi/PsiElement;
	public fun getOwnValOrVarKeyword ()Lcom/intellij/psi/PsiElement;
	public fun getReceiverTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public synthetic fun getTextOffset ()I
	public fun getTypeConstraintList ()Lorg/jetbrains/kotlin/psi/KtTypeConstraintList;
	public fun getTypeConstraints ()Ljava/util/List;
	public fun getTypeParameterList ()Lorg/jetbrains/kotlin/psi/KtTypeParameterList;
	public fun getTypeParameters ()Ljava/util/List;
	public fun getTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun getUseScope ()Lcom/intellij/psi/search/SearchScope;
	public fun getValOrVarKeyword ()Lcom/intellij/psi/PsiElement;
	public fun getValueParameterList ()Lorg/jetbrains/kotlin/psi/KtParameterList;
	public fun getValueParameters ()Ljava/util/List;
	public fun hasInitializer ()Z
	public fun isVar ()Z
	public synthetic fun setName (Ljava/lang/String;)Lcom/intellij/psi/PsiElement;
	public fun setTypeReference (Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/psi/KtTypeReference;
}

public class org/jetbrains/kotlin/psi/KtDoWhileExpression : org/jetbrains/kotlin/psi/KtWhileExpressionBase {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getWhileKeyword ()Lcom/intellij/psi/PsiElement;
}

public final class org/jetbrains/kotlin/psi/KtDotQualifiedExpression : org/jetbrains/kotlin/psi/KtExpressionImplStub, org/jetbrains/kotlin/psi/KtQualifiedExpression {
	public static final field Companion Lorg/jetbrains/kotlin/psi/KtDotQualifiedExpression$Companion;
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getReceiverExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getReceiverExpressionOrNull ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getSelectorExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
}

public final class org/jetbrains/kotlin/psi/KtDotQualifiedExpression$Companion {
}

public abstract interface class org/jetbrains/kotlin/psi/KtDoubleColonExpression : org/jetbrains/kotlin/psi/KtExpression {
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun findColonColon ()Lcom/intellij/psi/PsiElement;
	public fun getDoubleColonTokenReference ()Lcom/intellij/psi/PsiElement;
	public fun getHasQuestionMarks ()Z
	public fun getLhs ()Lcom/intellij/psi/PsiElement;
	public fun getReceiverExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun isEmptyLHS ()Z
	public fun setReceiverExpression (Lorg/jetbrains/kotlin/psi/KtExpression;)V
}

public class org/jetbrains/kotlin/psi/KtDynamicType : org/jetbrains/kotlin/psi/KtElementImplStub, org/jetbrains/kotlin/psi/KtTypeElement {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getTypeArgumentsAsTypes ()Ljava/util/List;
}

public abstract interface class org/jetbrains/kotlin/psi/KtElement : com/intellij/psi/NavigatablePsiElement, org/jetbrains/kotlin/psi/KtPureElement {
	public abstract fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun acceptChildren (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)V
	public abstract fun getReference ()Lcom/intellij/psi/PsiReference;
}

public class org/jetbrains/kotlin/psi/KtElementImpl : com/intellij/extapi/psi/ASTWrapperPsiElement, org/jetbrains/kotlin/psi/KtElement {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public final fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun acceptChildren (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)V
	public fun delete ()V
	public fun getContainingKtFile ()Lorg/jetbrains/kotlin/psi/KtFile;
	public fun getLanguage ()Lcom/intellij/lang/Language;
	public fun getParent ()Lcom/intellij/psi/PsiElement;
	public fun getPsiOrParent ()Lorg/jetbrains/kotlin/psi/KtElement;
	public fun getReference ()Lcom/intellij/psi/PsiReference;
	public fun getReferences ()[Lcom/intellij/psi/PsiReference;
	public fun toString ()Ljava/lang/String;
}

public class org/jetbrains/kotlin/psi/KtElementImplStub : com/intellij/extapi/psi/StubBasedPsiElementBase, com/intellij/psi/StubBasedPsiElement, org/jetbrains/kotlin/psi/KtElement {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lcom/intellij/psi/stubs/StubElement;Lcom/intellij/psi/stubs/IStubElementType;)V
	public final fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun acceptChildren (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)V
	public fun delete ()V
	public fun getContainingKtFile ()Lorg/jetbrains/kotlin/psi/KtFile;
	public fun getLanguage ()Lcom/intellij/lang/Language;
	public fun getParent ()Lcom/intellij/psi/PsiElement;
	public fun getPsiOrParent ()Lorg/jetbrains/kotlin/psi/KtElement;
	public fun getReference ()Lcom/intellij/psi/PsiReference;
	public fun getReferences ()[Lcom/intellij/psi/PsiReference;
	protected fun getStubOrPsiChildrenAsList (Lorg/jetbrains/kotlin/psi/stubs/elements/KtStubElementType;)Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/psi/KtElementKt {
	public static final fun getModificationStamp (Lorg/jetbrains/kotlin/psi/KtElement;)J
}

public final class org/jetbrains/kotlin/psi/KtElementUtilsKt {
	public static final fun unpackFunctionLiteral (Lorg/jetbrains/kotlin/psi/KtExpression;Z)Lorg/jetbrains/kotlin/psi/KtLambdaExpression;
	public static synthetic fun unpackFunctionLiteral$default (Lorg/jetbrains/kotlin/psi/KtExpression;ZILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtLambdaExpression;
}

public class org/jetbrains/kotlin/psi/KtEnumEntry : org/jetbrains/kotlin/psi/KtClass, org/jetbrains/kotlin/psi/KtDeclarationWithReturnType {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinClassStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getClassId ()Lorg/jetbrains/kotlin/name/ClassId;
	public fun getInitializerList ()Lorg/jetbrains/kotlin/psi/KtInitializerList;
	public fun getSuperTypeListEntries ()Ljava/util/List;
	public fun getTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun hasInitializer ()Z
	public fun isEquivalentTo (Lcom/intellij/psi/PsiElement;)Z
}

public final class org/jetbrains/kotlin/psi/KtEnumEntrySuperclassReferenceExpression : org/jetbrains/kotlin/psi/KtExpressionImplStub, org/jetbrains/kotlin/psi/KtSimpleNameExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinEnumEntrySuperclassReferenceExpressionStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getIdentifier ()Lcom/intellij/psi/PsiElement;
	public fun getReferencedName ()Ljava/lang/String;
	public fun getReferencedNameAsName ()Lorg/jetbrains/kotlin/name/Name;
	public fun getReferencedNameElement ()Lcom/intellij/psi/PsiElement;
	public fun getReferencedNameElementType ()Lcom/intellij/psi/tree/IElementType;
}

public class org/jetbrains/kotlin/psi/KtEscapeStringTemplateEntry : org/jetbrains/kotlin/psi/KtStringTemplateEntry {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderWithTextStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getUnescapedValue ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/kotlin/psi/KtExpression : org/jetbrains/kotlin/psi/KtElement {
	public static final field ARRAY_FACTORY Lcom/intellij/util/ArrayFactory;
	public static final field EMPTY_ARRAY [Lorg/jetbrains/kotlin/psi/KtExpression;
	public abstract fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class org/jetbrains/kotlin/psi/KtExpressionCodeFragment : org/jetbrains/kotlin/psi/KtCodeFragment {
	public fun <init> (Lcom/intellij/openapi/project/Project;Ljava/lang/String;Ljava/lang/CharSequence;Ljava/lang/String;Lcom/intellij/psi/PsiElement;)V
	public synthetic fun getContentElement ()Lorg/jetbrains/kotlin/psi/KtElement;
	public fun getContentElement ()Lorg/jetbrains/kotlin/psi/KtExpression;
}

public abstract class org/jetbrains/kotlin/psi/KtExpressionImpl : org/jetbrains/kotlin/psi/KtElementImpl, org/jetbrains/kotlin/psi/KtExpression {
	public static final field Companion Lorg/jetbrains/kotlin/psi/KtExpressionImpl$Companion;
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	protected final fun findExpressionUnder (Lcom/intellij/psi/tree/IElementType;)Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun replace (Lcom/intellij/psi/PsiElement;)Lcom/intellij/psi/PsiElement;
}

public final class org/jetbrains/kotlin/psi/KtExpressionImpl$Companion {
	public final fun replaceExpression (Lorg/jetbrains/kotlin/psi/KtExpression;Lcom/intellij/psi/PsiElement;ZLkotlin/jvm/functions/Function1;)Lcom/intellij/psi/PsiElement;
	public static synthetic fun replaceExpression$default (Lorg/jetbrains/kotlin/psi/KtExpressionImpl$Companion;Lorg/jetbrains/kotlin/psi/KtExpression;Lcom/intellij/psi/PsiElement;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lcom/intellij/psi/PsiElement;
}

public abstract class org/jetbrains/kotlin/psi/KtExpressionImplStub : org/jetbrains/kotlin/psi/KtElementImplStub, org/jetbrains/kotlin/psi/KtExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lcom/intellij/psi/stubs/StubElement;Lcom/intellij/psi/stubs/IStubElementType;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getParent ()Lcom/intellij/psi/PsiElement;
	public fun rawReplace (Lcom/intellij/psi/PsiElement;)Lcom/intellij/psi/PsiElement;
	public fun replace (Lcom/intellij/psi/PsiElement;)Lcom/intellij/psi/PsiElement;
}

public class org/jetbrains/kotlin/psi/KtExpressionWithLabel : org/jetbrains/kotlin/psi/KtExpressionImpl {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun getLabelName ()Ljava/lang/String;
	public final fun getLabelNameAsName ()Lorg/jetbrains/kotlin/name/Name;
	public final fun getLabelQualifier ()Lorg/jetbrains/kotlin/psi/KtContainerNode;
	public final fun getTargetLabel ()Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;
}

public class org/jetbrains/kotlin/psi/KtFile : org/jetbrains/kotlin/psi/KtCommonFile, com/intellij/psi/PsiClassOwner {
	public static final field Companion Lorg/jetbrains/kotlin/psi/KtFile$Companion;
	public fun <init> (Lcom/intellij/psi/FileViewProvider;Z)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getClasses ()[Lcom/intellij/psi/PsiClass;
	public fun getPackageName ()Ljava/lang/String;
	public fun setPackageName (Ljava/lang/String;)V
}

public final class org/jetbrains/kotlin/psi/KtFile$Companion {
	public final fun getFILE_DECLARATION_TYPES ()Lcom/intellij/psi/tree/TokenSet;
}

public class org/jetbrains/kotlin/psi/KtFileAnnotationList : org/jetbrains/kotlin/psi/KtElementImplStub, org/jetbrains/kotlin/psi/KtAnnotationsContainer {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getAnnotationEntries ()Ljava/util/List;
	public fun getAnnotations ()Ljava/util/List;
}

public abstract interface class org/jetbrains/kotlin/psi/KtFileClassProvider {
	public abstract fun getFileClasses (Lorg/jetbrains/kotlin/psi/KtFile;)[Lcom/intellij/psi/PsiClass;
}

public class org/jetbrains/kotlin/psi/KtFinallySection : org/jetbrains/kotlin/psi/KtElementImpl, org/jetbrains/kotlin/psi/KtStatementExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getFinalExpression ()Lorg/jetbrains/kotlin/psi/KtBlockExpression;
}

public class org/jetbrains/kotlin/psi/KtForExpression : org/jetbrains/kotlin/psi/KtLoopExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getDestructuringDeclaration ()Lorg/jetbrains/kotlin/psi/KtDestructuringDeclaration;
	public fun getForKeyword ()Lcom/intellij/psi/PsiElement;
	public fun getInKeyword ()Lcom/intellij/psi/PsiElement;
	public fun getLoopParameter ()Lorg/jetbrains/kotlin/psi/KtParameter;
	public fun getLoopRange ()Lorg/jetbrains/kotlin/psi/KtExpression;
}

public abstract interface class org/jetbrains/kotlin/psi/KtFunction : org/jetbrains/kotlin/psi/KtCallableDeclaration, org/jetbrains/kotlin/psi/KtDeclarationWithBody {
	public abstract fun isLocal ()Z
}

public class org/jetbrains/kotlin/psi/KtFunctionLiteral : org/jetbrains/kotlin/psi/KtFunctionNotStubbed {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun getArrow ()Lcom/intellij/psi/PsiElement;
	public fun getBodyExpression ()Lorg/jetbrains/kotlin/psi/KtBlockExpression;
	public synthetic fun getBodyExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getEqualsToken ()Lcom/intellij/psi/PsiElement;
	public fun getFqName ()Lorg/jetbrains/kotlin/name/FqName;
	public fun getLBrace ()Lcom/intellij/psi/PsiElement;
	public fun getName ()Ljava/lang/String;
	public fun getNameIdentifier ()Lcom/intellij/psi/PsiElement;
	public fun getRBrace ()Lcom/intellij/psi/PsiElement;
	public fun getUseScope ()Lcom/intellij/psi/search/SearchScope;
	public fun hasBlockBody ()Z
	public fun hasBody ()Z
	public fun hasParameterSpecification ()Z
}

public abstract class org/jetbrains/kotlin/psi/KtFunctionNotStubbed : org/jetbrains/kotlin/psi/KtFunction {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun getBodyExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getColon ()Lcom/intellij/psi/PsiElement;
	public synthetic fun getName ()Ljava/lang/String;
	public synthetic fun getNameAsName ()Lorg/jetbrains/kotlin/name/Name;
	public synthetic fun getNameAsSafeName ()Lorg/jetbrains/kotlin/name/Name;
	public synthetic fun getNameIdentifier ()Lcom/intellij/psi/PsiElement;
	public fun getReceiverTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public synthetic fun getTextOffset ()I
	public synthetic fun getTypeConstraintList ()Lorg/jetbrains/kotlin/psi/KtTypeConstraintList;
	public synthetic fun getTypeConstraints ()Ljava/util/List;
	public synthetic fun getTypeParameterList ()Lorg/jetbrains/kotlin/psi/KtTypeParameterList;
	public synthetic fun getTypeParameters ()Ljava/util/List;
	public fun getTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun getValueParameterList ()Lorg/jetbrains/kotlin/psi/KtParameterList;
	public fun getValueParameters ()Ljava/util/List;
	public fun hasDeclaredReturnType ()Z
	public fun isLocal ()Z
	public synthetic fun setName (Ljava/lang/String;)Lcom/intellij/psi/PsiElement;
	public fun setTypeReference (Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/psi/KtTypeReference;
}

public class org/jetbrains/kotlin/psi/KtFunctionType : org/jetbrains/kotlin/psi/KtElementImplStub, org/jetbrains/kotlin/psi/KtTypeElement {
	public static final field RETURN_TYPE_SEPARATOR Lorg/jetbrains/kotlin/lexer/KtToken;
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinFunctionTypeStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getContextReceiverList ()Lorg/jetbrains/kotlin/psi/KtContextReceiverList;
	public fun getContextReceiversTypeReferences ()Ljava/util/List;
	public fun getParameterList ()Lorg/jetbrains/kotlin/psi/KtParameterList;
	public fun getParameters ()Ljava/util/List;
	public fun getReceiver ()Lorg/jetbrains/kotlin/psi/KtFunctionTypeReceiver;
	public fun getReceiverTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun getReturnTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun getTotalParameterCount ()I
	public fun getTypeArgumentsAsTypes ()Ljava/util/List;
}

public class org/jetbrains/kotlin/psi/KtFunctionTypeReceiver : org/jetbrains/kotlin/psi/KtElementImplStub {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun getTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
}

public class org/jetbrains/kotlin/psi/KtIfExpression : org/jetbrains/kotlin/psi/KtExpressionImpl {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getCondition ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getElse ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getElseKeyword ()Lcom/intellij/psi/PsiElement;
	public fun getIfKeyword ()Lcom/intellij/psi/PsiElement;
	public fun getLeftParenthesis ()Lcom/intellij/psi/PsiElement;
	public fun getRightParenthesis ()Lcom/intellij/psi/PsiElement;
	public fun getThen ()Lorg/jetbrains/kotlin/psi/KtExpression;
}

public abstract interface annotation class org/jetbrains/kotlin/psi/KtImplementationDetail : java/lang/annotation/Annotation {
}

public final class org/jetbrains/kotlin/psi/KtImportAlias : org/jetbrains/kotlin/psi/KtElementImplStub, com/intellij/psi/PsiNameIdentifierOwner {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinImportAliasStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun getImportDirective ()Lorg/jetbrains/kotlin/psi/KtImportDirective;
	public fun getName ()Ljava/lang/String;
	public fun getNameIdentifier ()Lcom/intellij/psi/PsiElement;
	public fun getTextOffset ()I
	public fun getUseScope ()Lcom/intellij/psi/search/LocalSearchScope;
	public synthetic fun getUseScope ()Lcom/intellij/psi/search/SearchScope;
	public fun setName (Ljava/lang/String;)Lcom/intellij/psi/PsiElement;
}

public class org/jetbrains/kotlin/psi/KtImportDirective : org/jetbrains/kotlin/psi/KtElementImplStub, org/jetbrains/kotlin/psi/KtImportInfo {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinImportDirectiveStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getAlias ()Lorg/jetbrains/kotlin/psi/KtImportAlias;
	public fun getAliasName ()Ljava/lang/String;
	public fun getImportContent ()Lorg/jetbrains/kotlin/psi/KtImportInfo$ImportContent;
	public fun getImportPath ()Lorg/jetbrains/kotlin/resolve/ImportPath;
	public fun getImportedFqName ()Lorg/jetbrains/kotlin/name/FqName;
	public fun getImportedReference ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun isAllUnder ()Z
	public fun isValidImport ()Z
	public fun subtreeChanged ()V
}

public abstract interface class org/jetbrains/kotlin/psi/KtImportInfo {
	public abstract fun getAliasName ()Ljava/lang/String;
	public abstract fun getImportContent ()Lorg/jetbrains/kotlin/psi/KtImportInfo$ImportContent;
	public abstract fun getImportedFqName ()Lorg/jetbrains/kotlin/name/FqName;
	public fun getImportedName ()Lorg/jetbrains/kotlin/name/Name;
	public abstract fun isAllUnder ()Z
}

public abstract class org/jetbrains/kotlin/psi/KtImportInfo$ImportContent {
}

public final class org/jetbrains/kotlin/psi/KtImportInfo$ImportContent$ExpressionBased : org/jetbrains/kotlin/psi/KtImportInfo$ImportContent {
	public fun <init> (Lorg/jetbrains/kotlin/psi/KtExpression;)V
	public final fun getExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
}

public final class org/jetbrains/kotlin/psi/KtImportInfo$ImportContent$FqNameBased : org/jetbrains/kotlin/psi/KtImportInfo$ImportContent {
	public fun <init> (Lorg/jetbrains/kotlin/name/FqName;)V
	public final fun getFqName ()Lorg/jetbrains/kotlin/name/FqName;
}

public class org/jetbrains/kotlin/psi/KtImportList : org/jetbrains/kotlin/psi/KtElementImplStub {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getImports ()Ljava/util/List;
}

public class org/jetbrains/kotlin/psi/KtImportsFactory {
	public fun <init> (Lcom/intellij/openapi/project/Project;)V
	public fun createImportDirectives (Ljava/util/Collection;)Ljava/util/Collection;
	public fun createImportDirectivesNotCached (Ljava/util/Collection;)Ljava/util/Collection;
}

public class org/jetbrains/kotlin/psi/KtInitializerList : org/jetbrains/kotlin/psi/KtElementImplStub {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getInitializers ()Ljava/util/List;
}

public abstract class org/jetbrains/kotlin/psi/KtInstanceExpressionWithLabel : org/jetbrains/kotlin/psi/KtExpressionWithLabel {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun getInstanceReference ()Lorg/jetbrains/kotlin/psi/KtReferenceExpression;
}

public final class org/jetbrains/kotlin/psi/KtIntersectionType : org/jetbrains/kotlin/psi/KtElementImplStub, org/jetbrains/kotlin/psi/KtTypeElement {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun getLeftTypeRef ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public final fun getRightTypeRef ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun getTypeArgumentsAsTypes ()Ljava/util/List;
}

public class org/jetbrains/kotlin/psi/KtIsExpression : org/jetbrains/kotlin/psi/KtExpressionImpl, org/jetbrains/kotlin/psi/KtOperationExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getLeftHandSide ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getOperationReference ()Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;
	public fun getTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun isNegated ()Z
}

public final class org/jetbrains/kotlin/psi/KtLabelReferenceExpression : org/jetbrains/kotlin/psi/KtSimpleNameExpressionImpl {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun getReferencedNameElement ()Lcom/intellij/psi/PsiElement;
}

public final class org/jetbrains/kotlin/psi/KtLabeledExpression : org/jetbrains/kotlin/psi/KtExpressionWithLabel, com/intellij/psi/PsiNameIdentifierOwner {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun getBaseExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getName ()Ljava/lang/String;
	public fun getNameIdentifier ()Lcom/intellij/psi/PsiElement;
	public fun getUseScope ()Lcom/intellij/psi/search/LocalSearchScope;
	public synthetic fun getUseScope ()Lcom/intellij/psi/search/SearchScope;
	public fun setName (Ljava/lang/String;)Lcom/intellij/psi/PsiElement;
}

public final class org/jetbrains/kotlin/psi/KtLambdaArgument : org/jetbrains/kotlin/psi/KtValueArgument, org/jetbrains/kotlin/psi/LambdaArgument {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinValueArgumentStub;)V
	public fun getLambdaExpression ()Lorg/jetbrains/kotlin/psi/KtLambdaExpression;
}

public class org/jetbrains/kotlin/psi/KtLambdaExpression : com/intellij/psi/impl/source/tree/LazyParseablePsiElement, org/jetbrains/kotlin/psi/KtExpression {
	public fun <init> (Ljava/lang/CharSequence;)V
	public final fun accept (Lcom/intellij/psi/PsiElementVisitor;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun acceptChildren (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)V
	public fun asElement ()Lorg/jetbrains/kotlin/psi/KtElement;
	public fun getBodyExpression ()Lorg/jetbrains/kotlin/psi/KtBlockExpression;
	public fun getContainingKtFile ()Lorg/jetbrains/kotlin/psi/KtFile;
	public fun getFunctionLiteral ()Lorg/jetbrains/kotlin/psi/KtFunctionLiteral;
	public fun getLeftCurlyBrace ()Lcom/intellij/lang/ASTNode;
	public fun getPsiOrParent ()Lorg/jetbrains/kotlin/psi/KtElement;
	public fun getRightCurlyBrace ()Lcom/intellij/lang/ASTNode;
	public fun getValueParameters ()Ljava/util/List;
	public fun hasDeclaredReturnType ()Z
	public final fun isTrailingLambdaOnNewLine ()Z
	public fun shouldChangeModificationCount (Lcom/intellij/psi/PsiElement;)Z
	public fun toString ()Ljava/lang/String;
}

public class org/jetbrains/kotlin/psi/KtLiteralStringTemplateEntry : org/jetbrains/kotlin/psi/KtStringTemplateEntry {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderWithTextStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract class org/jetbrains/kotlin/psi/KtLoopExpression : org/jetbrains/kotlin/psi/KtExpressionImpl, org/jetbrains/kotlin/psi/KtStatementExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun getBody ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getLeftParenthesis ()Lcom/intellij/psi/PsiElement;
	public fun getRightParenthesis ()Lcom/intellij/psi/PsiElement;
}

public abstract class org/jetbrains/kotlin/psi/KtModifierList : org/jetbrains/kotlin/psi/KtElementImplStub, org/jetbrains/kotlin/psi/KtAnnotationsContainer {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinModifierListStub;Lcom/intellij/psi/stubs/IStubElementType;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun deleteChildInternal (Lcom/intellij/lang/ASTNode;)V
	public fun getAnnotationEntries ()Ljava/util/List;
	public fun getAnnotations ()Ljava/util/List;
	public fun getContextReceiverList ()Lorg/jetbrains/kotlin/psi/KtContextReceiverList;
	public fun getContextReceiverLists ()Ljava/util/List;
	public fun getModifier (Lcom/intellij/psi/tree/TokenSet;)Lcom/intellij/psi/PsiElement;
	public fun getModifier (Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)Lcom/intellij/psi/PsiElement;
	public fun getOwner ()Lcom/intellij/psi/PsiElement;
	public fun hasModifier (Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)Z
}

public abstract interface class org/jetbrains/kotlin/psi/KtModifierListOwner : com/intellij/psi/PsiElement, org/jetbrains/kotlin/psi/KtAnnotated {
	public abstract fun addAnnotationEntry (Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;)Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;
	public abstract fun addModifier (Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)V
	public abstract fun getModifierList ()Lorg/jetbrains/kotlin/psi/KtModifierList;
	public abstract fun hasModifier (Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)Z
	public abstract fun removeModifier (Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)V
}

public class org/jetbrains/kotlin/psi/KtModifierListOwnerStub : org/jetbrains/kotlin/psi/KtElementImplStub, org/jetbrains/kotlin/psi/KtModifierListOwner {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lcom/intellij/psi/stubs/StubElement;Lcom/intellij/psi/stubs/IStubElementType;)V
	public fun addAnnotationEntry (Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;)Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;
	public fun addModifier (Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)V
	public fun getAnnotationEntries ()Ljava/util/List;
	public fun getAnnotations ()Ljava/util/List;
	public fun getModifierList ()Lorg/jetbrains/kotlin/psi/KtModifierList;
	public fun hasModifier (Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)Z
	public fun removeModifier (Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)V
}

public final class org/jetbrains/kotlin/psi/KtNameReferenceExpression : org/jetbrains/kotlin/psi/KtExpressionImplStub, org/jetbrains/kotlin/psi/KtSimpleNameExpression {
	public static final field Companion Lorg/jetbrains/kotlin/psi/KtNameReferenceExpression$Companion;
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinNameReferenceExpressionStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getIdentifier ()Lcom/intellij/psi/PsiElement;
	public fun getReferencedName ()Ljava/lang/String;
	public fun getReferencedNameAsName ()Lorg/jetbrains/kotlin/name/Name;
	public fun getReferencedNameElement ()Lcom/intellij/psi/PsiElement;
	public fun getReferencedNameElementType ()Lcom/intellij/psi/tree/IElementType;
	public final fun isPlaceholder ()Z
}

public final class org/jetbrains/kotlin/psi/KtNameReferenceExpression$Companion {
}

public abstract interface class org/jetbrains/kotlin/psi/KtNamed {
	public abstract fun getNameAsName ()Lorg/jetbrains/kotlin/name/Name;
}

public abstract interface class org/jetbrains/kotlin/psi/KtNamedDeclaration : com/intellij/psi/PsiNameIdentifierOwner, org/jetbrains/kotlin/psi/KtDeclaration, org/jetbrains/kotlin/psi/KtNamed, org/jetbrains/kotlin/psi/KtStatementExpression {
	public abstract fun getFqName ()Lorg/jetbrains/kotlin/name/FqName;
	public abstract fun getNameAsSafeName ()Lorg/jetbrains/kotlin/name/Name;
}

public final class org/jetbrains/kotlin/psi/KtNamedDeclarationUtil {
	public static fun getParentFqName (Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Lorg/jetbrains/kotlin/name/FqName;
	public static fun getUnsafeFQName (Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Lorg/jetbrains/kotlin/name/FqNameUnsafe;
}

public class org/jetbrains/kotlin/psi/KtNamedFunction : org/jetbrains/kotlin/psi/KtTypeParameterListOwnerStub, org/jetbrains/kotlin/psi/KtDeclarationWithInitializer, org/jetbrains/kotlin/psi/KtFunction {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinFunctionStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getBodyBlockExpression ()Lorg/jetbrains/kotlin/psi/KtBlockExpression;
	public fun getBodyExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getColon ()Lcom/intellij/psi/PsiElement;
	public fun getContextReceivers ()Ljava/util/List;
	public fun getContractDescription ()Lorg/jetbrains/kotlin/psi/KtContractEffectList;
	public fun getEqualsToken ()Lcom/intellij/psi/PsiElement;
	public fun getFunKeyword ()Lcom/intellij/psi/PsiElement;
	public fun getInitializer ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getPresentation ()Lcom/intellij/navigation/ItemPresentation;
	public fun getReceiverTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun getTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun getValueParameterList ()Lorg/jetbrains/kotlin/psi/KtParameterList;
	public fun getValueParameters ()Ljava/util/List;
	public fun hasBlockBody ()Z
	public fun hasBody ()Z
	public fun hasDeclaredReturnType ()Z
	public fun hasInitializer ()Z
	public fun hasTypeParameterListBeforeFunctionName ()Z
	public fun isAnonymous ()Z
	public fun isLocal ()Z
	public fun isTopLevel ()Z
	public fun mayHaveContract ()Z
	public fun mayHaveContract (Z)Z
	public fun setTypeReference (Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun shouldChangeModificationCount (Lcom/intellij/psi/PsiElement;)Z
}

public class org/jetbrains/kotlin/psi/KtNullableType : org/jetbrains/kotlin/psi/KtElementImplStub, org/jetbrains/kotlin/psi/KtTypeElement {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getAnnotationEntries ()Ljava/util/List;
	public fun getInnerType ()Lorg/jetbrains/kotlin/psi/KtTypeElement;
	public fun getModifierList ()Lorg/jetbrains/kotlin/psi/KtModifierList;
	public fun getQuestionMarkNode ()Lcom/intellij/lang/ASTNode;
	public fun getTypeArgumentsAsTypes ()Ljava/util/List;
}

public final class org/jetbrains/kotlin/psi/KtObjectDeclaration : org/jetbrains/kotlin/psi/KtClassOrObject {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinObjectStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getCompanionObjects ()Ljava/util/List;
	public fun getIdentifyingElement ()Lcom/intellij/psi/PsiElement;
	public fun getName ()Ljava/lang/String;
	public final fun getObjectKeyword ()Lcom/intellij/psi/PsiElement;
	public fun getTextOffset ()I
	public final fun isCompanion ()Z
	public final fun isObjectLiteral ()Z
	public fun setName (Ljava/lang/String;)Lcom/intellij/psi/PsiElement;
}

public class org/jetbrains/kotlin/psi/KtObjectLiteralExpression : org/jetbrains/kotlin/psi/KtExpressionImpl {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getObjectDeclaration ()Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;
}

public abstract interface class org/jetbrains/kotlin/psi/KtOperationExpression : org/jetbrains/kotlin/psi/KtExpression {
	public abstract fun getOperationReference ()Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;
}

public final class org/jetbrains/kotlin/psi/KtOperationReferenceExpression : org/jetbrains/kotlin/psi/KtSimpleNameExpressionImpl {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public final fun getOperationSignTokenType ()Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public fun getReferencedNameElement ()Lcom/intellij/psi/PsiElement;
	public final fun isConventionOperator ()Z
}

public class org/jetbrains/kotlin/psi/KtPackageDirective : org/jetbrains/kotlin/psi/KtModifierListOwnerStub {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getFqName ()Lorg/jetbrains/kotlin/name/FqName;
	public fun getFqName (Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;)Lorg/jetbrains/kotlin/name/FqName;
	public fun getLastReferenceExpression ()Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;
	public fun getName ()Ljava/lang/String;
	public fun getNameAsName ()Lorg/jetbrains/kotlin/name/Name;
	public fun getNameIdentifier ()Lcom/intellij/psi/PsiElement;
	public fun getPackageKeyword ()Lcom/intellij/psi/PsiElement;
	public fun getPackageNameExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getPackageNames ()Ljava/util/List;
	public fun getQualifiedName ()Ljava/lang/String;
	public fun isRoot ()Z
	public fun setFqName (Lorg/jetbrains/kotlin/name/FqName;)V
	public fun subtreeChanged ()V
}

public class org/jetbrains/kotlin/psi/KtParameter : org/jetbrains/kotlin/psi/KtCallableDeclaration, org/jetbrains/kotlin/psi/KtValVarKeywordOwner {
	public static final field VAL_VAR_TOKEN_SET Lcom/intellij/psi/tree/TokenSet;
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinParameterStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getColon ()Lcom/intellij/psi/PsiElement;
	public fun getDefaultValue ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getDestructuringDeclaration ()Lorg/jetbrains/kotlin/psi/KtDestructuringDeclaration;
	public fun getEqualsToken ()Lcom/intellij/psi/PsiElement;
	public synthetic fun getFqName ()Lorg/jetbrains/kotlin/name/FqName;
	public synthetic fun getName ()Ljava/lang/String;
	public synthetic fun getNameAsName ()Lorg/jetbrains/kotlin/name/Name;
	public synthetic fun getNameAsSafeName ()Lorg/jetbrains/kotlin/name/Name;
	public synthetic fun getNameIdentifier ()Lcom/intellij/psi/PsiElement;
	public fun getOwnerDeclaration ()Lorg/jetbrains/kotlin/psi/KtDeclaration;
	public fun getOwnerFunction ()Lorg/jetbrains/kotlin/psi/KtDeclarationWithBody;
	public fun getPresentation ()Lcom/intellij/navigation/ItemPresentation;
	public fun getReceiverTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public synthetic fun getTextOffset ()I
	public fun getTypeConstraintList ()Lorg/jetbrains/kotlin/psi/KtTypeConstraintList;
	public fun getTypeConstraints ()Ljava/util/List;
	public fun getTypeParameterList ()Lorg/jetbrains/kotlin/psi/KtTypeParameterList;
	public fun getTypeParameters ()Ljava/util/List;
	public fun getTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun getUseScope ()Lcom/intellij/psi/search/SearchScope;
	public fun getValOrVarKeyword ()Lcom/intellij/psi/PsiElement;
	public fun getValueParameterList ()Lorg/jetbrains/kotlin/psi/KtParameterList;
	public fun getValueParameters ()Ljava/util/List;
	public fun hasDefaultValue ()Z
	public fun hasValOrVar ()Z
	public fun isCatchParameter ()Z
	public fun isContextParameter ()Z
	public fun isFunctionTypeParameter ()Z
	public fun isLambdaParameter ()Z
	public fun isLoopParameter ()Z
	public fun isMutable ()Z
	public fun isVarArg ()Z
	public synthetic fun setName (Ljava/lang/String;)Lcom/intellij/psi/PsiElement;
	public fun setTypeReference (Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/psi/KtTypeReference;
}

public class org/jetbrains/kotlin/psi/KtParameterList : org/jetbrains/kotlin/psi/KtElementImplStub {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun addParameter (Lorg/jetbrains/kotlin/psi/KtParameter;)Lorg/jetbrains/kotlin/psi/KtParameter;
	public fun addParameterAfter (Lorg/jetbrains/kotlin/psi/KtParameter;Lorg/jetbrains/kotlin/psi/KtParameter;)Lorg/jetbrains/kotlin/psi/KtParameter;
	public fun addParameterBefore (Lorg/jetbrains/kotlin/psi/KtParameter;Lorg/jetbrains/kotlin/psi/KtParameter;)Lorg/jetbrains/kotlin/psi/KtParameter;
	public fun getFirstComma ()Lcom/intellij/psi/PsiElement;
	public fun getLeftParenthesis ()Lcom/intellij/psi/PsiElement;
	public fun getOwnerFunction ()Lorg/jetbrains/kotlin/psi/KtDeclarationWithBody;
	public fun getParameters ()Ljava/util/List;
	public fun getParent ()Lcom/intellij/psi/PsiElement;
	public fun getRightParenthesis ()Lcom/intellij/psi/PsiElement;
	public fun getTrailingComma ()Lcom/intellij/psi/PsiElement;
	public fun removeParameter (I)V
	public fun removeParameter (Lorg/jetbrains/kotlin/psi/KtParameter;)V
}

public class org/jetbrains/kotlin/psi/KtParenthesizedExpression : org/jetbrains/kotlin/psi/KtExpressionImpl {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
}

public class org/jetbrains/kotlin/psi/KtPostfixExpression : org/jetbrains/kotlin/psi/KtUnaryExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getBaseExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
}

public class org/jetbrains/kotlin/psi/KtPrefixExpression : org/jetbrains/kotlin/psi/KtUnaryExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getBaseExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
}

public final class org/jetbrains/kotlin/psi/KtPrimaryConstructor : org/jetbrains/kotlin/psi/KtConstructor {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinConstructorStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun addAnnotationEntry (Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;)Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;
	public fun addModifier (Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)V
	public fun getContainingClassOrObject ()Lorg/jetbrains/kotlin/psi/KtClassOrObject;
	public fun mayHaveContract ()Z
	public fun removeModifier (Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)V
	public final fun removeRedundantConstructorKeywordAndSpace ()V
}

public final class org/jetbrains/kotlin/psi/KtProjectionKind : java/lang/Enum {
	public static final field IN Lorg/jetbrains/kotlin/psi/KtProjectionKind;
	public static final field NONE Lorg/jetbrains/kotlin/psi/KtProjectionKind;
	public static final field OUT Lorg/jetbrains/kotlin/psi/KtProjectionKind;
	public static final field STAR Lorg/jetbrains/kotlin/psi/KtProjectionKind;
	public fun getToken ()Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtProjectionKind;
	public static fun values ()[Lorg/jetbrains/kotlin/psi/KtProjectionKind;
}

public class org/jetbrains/kotlin/psi/KtProperty : org/jetbrains/kotlin/psi/KtTypeParameterListOwnerStub, org/jetbrains/kotlin/psi/KtVariableDeclaration {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPropertyStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getAccessors ()Ljava/util/List;
	public fun getColon ()Lcom/intellij/psi/PsiElement;
	public fun getContextReceivers ()Ljava/util/List;
	public fun getDelegate ()Lorg/jetbrains/kotlin/psi/KtPropertyDelegate;
	public fun getDelegateExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getDelegateExpressionOrInitializer ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getEqualsToken ()Lcom/intellij/psi/PsiElement;
	public fun getFieldDeclaration ()Lorg/jetbrains/kotlin/psi/KtBackingField;
	public fun getGetter ()Lorg/jetbrains/kotlin/psi/KtPropertyAccessor;
	public fun getInitializer ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getPresentation ()Lcom/intellij/navigation/ItemPresentation;
	public fun getReceiverTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun getSetter ()Lorg/jetbrains/kotlin/psi/KtPropertyAccessor;
	public fun getTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun getValOrVarKeyword ()Lcom/intellij/psi/PsiElement;
	public fun getValueParameterList ()Lorg/jetbrains/kotlin/psi/KtParameterList;
	public fun getValueParameters ()Ljava/util/List;
	public fun hasBody ()Z
	public fun hasDelegate ()Z
	public fun hasDelegateExpression ()Z
	public fun hasDelegateExpressionOrInitializer ()Z
	public fun hasInitializer ()Z
	public fun isLocal ()Z
	public fun isMember ()Z
	public fun isTopLevel ()Z
	public fun isVar ()Z
	public fun setInitializer (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun setTypeReference (Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun shouldChangeModificationCount (Lcom/intellij/psi/PsiElement;)Z
}

public final class org/jetbrains/kotlin/psi/KtPropertyAccessor : org/jetbrains/kotlin/psi/KtDeclarationStub, org/jetbrains/kotlin/psi/KtDeclarationWithBody, org/jetbrains/kotlin/psi/KtDeclarationWithInitializer, org/jetbrains/kotlin/psi/KtDeclarationWithReturnType, org/jetbrains/kotlin/psi/KtModifierListOwner {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPropertyAccessorStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getBodyBlockExpression ()Lorg/jetbrains/kotlin/psi/KtBlockExpression;
	public fun getBodyExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getContractDescription ()Lorg/jetbrains/kotlin/psi/KtContractEffectList;
	public fun getEqualsToken ()Lcom/intellij/psi/PsiElement;
	public fun getInitializer ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public final fun getLeftParenthesis ()Lcom/intellij/psi/PsiElement;
	public final fun getNamePlaceholder ()Lcom/intellij/psi/PsiElement;
	public final fun getParameter ()Lorg/jetbrains/kotlin/psi/KtParameter;
	public final fun getParameterList ()Lorg/jetbrains/kotlin/psi/KtParameterList;
	public final fun getProperty ()Lorg/jetbrains/kotlin/psi/KtProperty;
	public final fun getReturnTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public final fun getRightParenthesis ()Lcom/intellij/psi/PsiElement;
	public fun getTextOffset ()I
	public fun getTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun getValueParameters ()Ljava/util/List;
	public fun hasBlockBody ()Z
	public fun hasBody ()Z
	public fun hasDeclaredReturnType ()Z
	public fun hasInitializer ()Z
	public final fun isGetter ()Z
	public final fun isSetter ()Z
	public fun mayHaveContract ()Z
}

public class org/jetbrains/kotlin/psi/KtPropertyDelegate : org/jetbrains/kotlin/psi/KtElementImpl {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getByKeywordNode ()Lcom/intellij/lang/ASTNode;
	public fun getExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
}

public final class org/jetbrains/kotlin/psi/KtPsiFactory {
	public static final field Companion Lorg/jetbrains/kotlin/psi/KtPsiFactory$Companion;
	public fun <init> (Lcom/intellij/openapi/project/Project;)V
	public fun <init> (Lcom/intellij/openapi/project/Project;Z)V
	public synthetic fun <init> (Lcom/intellij/openapi/project/Project;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Lcom/intellij/openapi/project/Project;ZLcom/intellij/psi/PsiElement;ZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lcom/intellij/openapi/project/Project;ZZ)V
	public synthetic fun <init> (Lcom/intellij/openapi/project/Project;ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/KtElement;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/KtElement;Z)V
	public synthetic fun <init> (Lorg/jetbrains/kotlin/psi/KtElement;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun contextual (Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/psi/KtPsiFactory;
	public static final fun contextual (Lcom/intellij/psi/PsiElement;Z)Lorg/jetbrains/kotlin/psi/KtPsiFactory;
	public static final fun contextual (Lcom/intellij/psi/PsiElement;ZZ)Lorg/jetbrains/kotlin/psi/KtPsiFactory;
	public final fun creareDelegatedSuperTypeEntry (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtConstructorDelegationCall;
	public final fun createAnalyzableFile (Ljava/lang/String;Ljava/lang/String;Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/psi/KtFile;
	public final fun createAnnotationEntry (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;
	public final fun createAnonymousInitializer ()Lorg/jetbrains/kotlin/psi/KtAnonymousInitializer;
	public final fun createArgument (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtValueArgument;
	public final fun createArgument (Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/name/Name;ZZ)Lorg/jetbrains/kotlin/psi/KtValueArgument;
	public static synthetic fun createArgument$default (Lorg/jetbrains/kotlin/psi/KtPsiFactory;Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/name/Name;ZZILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtValueArgument;
	public final fun createBlock (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtBlockExpression;
	public final fun createBlockCodeFragment (Ljava/lang/String;Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/psi/KtBlockCodeFragment;
	public final fun createBlockStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtStringTemplateEntryWithExpression;
	public final fun createCallArguments (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtValueArgumentList;
	public final fun createCallableReferenceExpression (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtCallableReferenceExpression;
	public final fun createClass (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtClass;
	public final fun createClassKeyword ()Lcom/intellij/psi/PsiElement;
	public final fun createColon ()Lcom/intellij/psi/PsiElement;
	public final fun createComma ()Lcom/intellij/psi/PsiElement;
	public final fun createComment (Ljava/lang/String;)Lcom/intellij/psi/PsiComment;
	public final fun createCompanionObject ()Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;
	public final fun createCompanionObject (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;
	public final fun createConstructorKeyword ()Lcom/intellij/psi/PsiElement;
	public final fun createDeclaration (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtDeclaration;
	public final fun createDestructuringDeclaration (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtDestructuringDeclaration;
	public final fun createDestructuringParameter (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtParameter;
	public final fun createDot ()Lcom/intellij/psi/PsiElement;
	public final fun createEQ ()Lcom/intellij/psi/PsiElement;
	public final fun createEmptyBody ()Lorg/jetbrains/kotlin/psi/KtBlockExpression;
	public final fun createEmptyClassBody ()Lorg/jetbrains/kotlin/psi/KtClassBody;
	public final fun createEmptyModifierList ()Lorg/jetbrains/kotlin/psi/KtModifierList;
	public final fun createEnumEntry (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtEnumEntry;
	public final fun createEnumEntryInitializerList ()Lorg/jetbrains/kotlin/psi/KtInitializerList;
	public final fun createExpression (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtExpression;
	public final fun createExpressionCodeFragment (Ljava/lang/String;Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/psi/KtExpressionCodeFragment;
	public final fun createExpressionIfPossible (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtExpression;
	public final fun createFile (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtFile;
	public final fun createFile (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtFile;
	public final fun createFileAnnotation (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;
	public final fun createFileAnnotationListWithAnnotation (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtFileAnnotationList;
	public final fun createFileWithLightClassSupport (Ljava/lang/String;Ljava/lang/String;Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/psi/KtFile;
	public final fun createFunction (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtNamedFunction;
	public final fun createFunctionTypeParameter (Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/psi/KtParameter;
	public final fun createFunctionTypeReceiver (Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/psi/KtFunctionTypeReceiver;
	public final fun createIdentifier (Ljava/lang/String;)Lcom/intellij/psi/PsiElement;
	public final fun createIf (Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtIfExpression;
	public static synthetic fun createIf$default (Lorg/jetbrains/kotlin/psi/KtPsiFactory;Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtExpression;ILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtIfExpression;
	public final fun createImportDirective (Lorg/jetbrains/kotlin/resolve/ImportPath;)Lorg/jetbrains/kotlin/psi/KtImportDirective;
	public final fun createImportDirectives (Ljava/util/Collection;)Ljava/util/List;
	public final fun createLabeledExpression (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtLabeledExpression;
	public final fun createLambdaExpression (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtLambdaExpression;
	public final fun createLambdaParameterList (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtParameterList;
	public final fun createLambdaParameterListIfAny (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtParameterList;
	public final fun createLiteralStringTemplateEntry (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtLiteralStringTemplateEntry;
	public final fun createLoopParameter (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtParameter;
	public final fun createModifier (Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)Lcom/intellij/psi/PsiElement;
	public final fun createModifierList (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtModifierList;
	public final fun createModifierList (Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)Lorg/jetbrains/kotlin/psi/KtModifierList;
	public final fun createMultiDollarBlockStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtExpression;I)Lorg/jetbrains/kotlin/psi/KtStringTemplateEntryWithExpression;
	public final fun createMultiDollarSimpleNameStringTemplateEntry (Ljava/lang/String;I)Lorg/jetbrains/kotlin/psi/KtSimpleNameStringTemplateEntry;
	public final fun createMultiDollarStringTemplate (Ljava/lang/String;IZ)Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;
	public static synthetic fun createMultiDollarStringTemplate$default (Lorg/jetbrains/kotlin/psi/KtPsiFactory;Ljava/lang/String;IZILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;
	public final fun createNameIdentifier (Ljava/lang/String;)Lcom/intellij/psi/PsiElement;
	public final fun createNameIdentifierIfPossible (Ljava/lang/String;)Lcom/intellij/psi/PsiElement;
	public final fun createNewLine ()Lcom/intellij/psi/PsiElement;
	public final fun createNewLine (I)Lcom/intellij/psi/PsiElement;
	public final fun createObject (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;
	public final fun createOperationName (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;
	public final fun createPackageDirective (Lorg/jetbrains/kotlin/name/FqName;)Lorg/jetbrains/kotlin/psi/KtPackageDirective;
	public final fun createPackageDirectiveIfNeeded (Lorg/jetbrains/kotlin/name/FqName;)Lorg/jetbrains/kotlin/psi/KtPackageDirective;
	public final fun createParameter (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtParameter;
	public final fun createParameterList (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtParameterList;
	public final fun createPhysicalFile (Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtFile;
	public final fun createPrimaryConstructor (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;
	public static synthetic fun createPrimaryConstructor$default (Lorg/jetbrains/kotlin/psi/KtPsiFactory;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;
	public final fun createPrimaryConstructorWithModifiers (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;
	public final fun createProperty (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtProperty;
	public final fun createProperty (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/jetbrains/kotlin/psi/KtProperty;
	public final fun createProperty (Ljava/lang/String;Ljava/lang/String;Z)Lorg/jetbrains/kotlin/psi/KtProperty;
	public final fun createProperty (Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lorg/jetbrains/kotlin/psi/KtProperty;
	public final fun createPropertyDelegate (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtPropertyDelegate;
	public final fun createPropertyGetter (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtPropertyAccessor;
	public final fun createPropertySetter (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtPropertyAccessor;
	public final fun createRawStringTemplate (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;
	public final fun createSecondaryConstructor (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtSecondaryConstructor;
	public final fun createSemicolon ()Lcom/intellij/psi/PsiElement;
	public final fun createSimpleName (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;
	public final fun createSimpleNameStringTemplateEntry (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtSimpleNameStringTemplateEntry;
	public final fun createSingleStatementBlock (Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtBlockExpression;
	public static synthetic fun createSingleStatementBlock$default (Lorg/jetbrains/kotlin/psi/KtPsiFactory;Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtBlockExpression;
	public final fun createStar ()Lcom/intellij/psi/PsiElement;
	public final fun createStringTemplate (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;
	public final fun createSuperTypeCallEntry (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtSuperTypeCallEntry;
	public final fun createSuperTypeEntry (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtSuperTypeEntry;
	public final fun createThisExpression ()Lorg/jetbrains/kotlin/psi/KtThisExpression;
	public final fun createThisExpression (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtThisExpression;
	public final fun createType (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public final fun createType (Lorg/jetbrains/kotlin/psi/KtTypeElement;)Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public final fun createTypeAlias (Ljava/lang/String;Ljava/util/List;Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtTypeAlias;
	public final fun createTypeAlias (Ljava/lang/String;Ljava/util/List;Lorg/jetbrains/kotlin/psi/KtTypeElement;)Lorg/jetbrains/kotlin/psi/KtTypeAlias;
	public final fun createTypeArgument (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtTypeProjection;
	public final fun createTypeArguments (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtTypeArgumentList;
	public final fun createTypeCodeFragment (Ljava/lang/String;Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/psi/KtTypeCodeFragment;
	public final fun createTypeIfPossible (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public final fun createTypeParameter (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtTypeParameter;
	public final fun createTypeParameterList (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtTypeParameterList;
	public final fun createValKeyword ()Lcom/intellij/psi/PsiElement;
	public final fun createVarKeyword ()Lcom/intellij/psi/PsiElement;
	public final fun createWhenCondition (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtWhenCondition;
	public final fun createWhenEntry (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtWhenEntry;
	public final fun createWhiteSpace ()Lcom/intellij/psi/PsiElement;
	public final fun createWhiteSpace (Ljava/lang/String;)Lcom/intellij/psi/PsiElement;
	public final fun createWhitespaceAndArrow ()Lkotlin/Pair;
	public final fun wrapInABlockWrapper (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtBlockExpression;
}

public final class org/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder {
	public static final field Companion Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder$Companion;
	public fun <init> (Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder$Target;)V
	public final fun asString ()Ljava/lang/String;
	public final fun blockBody (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder;
	public final fun getterExpression (Ljava/lang/String;Z)Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder;
	public static synthetic fun getterExpression$default (Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder;Ljava/lang/String;ZILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder;
	public final fun initializer (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder;
	public final fun lazyBody (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder;
	public final fun modifier (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder;
	public final fun name (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder;
	public static synthetic fun name$default (Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder;
	public final fun noReturnType ()Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder;
	public final fun param (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder;
	public static synthetic fun param$default (Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder;
	public final fun receiver (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder;
	public final fun returnType (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder;
	public final fun superDelegation (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder;
	public final fun transform (Lkotlin/jvm/functions/Function1;)V
	public final fun typeConstraints (Ljava/util/Collection;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder;
	public final fun typeParams (Ljava/util/Collection;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder;
	public static synthetic fun typeParams$default (Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder;Ljava/util/Collection;ILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder;
}

public final class org/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder$Companion {
	public final fun getCONSTRUCTOR_NAME ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder$State : java/lang/Enum {
	public static final field BODY Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder$State;
	public static final field DONE Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder$State;
	public static final field FIRST_PARAM Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder$State;
	public static final field MODIFIERS Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder$State;
	public static final field NAME Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder$State;
	public static final field RECEIVER Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder$State;
	public static final field REST_PARAMS Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder$State;
	public static final field TYPE_CONSTRAINTS Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder$State;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder$State;
	public static fun values ()[Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder$State;
}

public final class org/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder$Target : java/lang/Enum {
	public static final field CONSTRUCTOR Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder$Target;
	public static final field FUNCTION Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder$Target;
	public static final field READ_ONLY_PROPERTY Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder$Target;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder$Target;
	public static fun values ()[Lorg/jetbrains/kotlin/psi/KtPsiFactory$CallableBuilder$Target;
}

public final class org/jetbrains/kotlin/psi/KtPsiFactory$ClassHeaderBuilder {
	public fun <init> ()V
	public final fun asString ()Ljava/lang/String;
	public final fun baseClass (Ljava/lang/String;Ljava/util/Collection;Z)Lorg/jetbrains/kotlin/psi/KtPsiFactory$ClassHeaderBuilder;
	public final fun modifier (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$ClassHeaderBuilder;
	public final fun name (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$ClassHeaderBuilder;
	public final fun transform (Lkotlin/jvm/functions/Function1;)V
	public final fun typeConstraints (Ljava/util/Collection;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$ClassHeaderBuilder;
	public final fun typeParameters (Ljava/util/Collection;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$ClassHeaderBuilder;
}

public final class org/jetbrains/kotlin/psi/KtPsiFactory$ClassHeaderBuilder$State : java/lang/Enum {
	public static final field BASE_CLASS Lorg/jetbrains/kotlin/psi/KtPsiFactory$ClassHeaderBuilder$State;
	public static final field DONE Lorg/jetbrains/kotlin/psi/KtPsiFactory$ClassHeaderBuilder$State;
	public static final field MODIFIERS Lorg/jetbrains/kotlin/psi/KtPsiFactory$ClassHeaderBuilder$State;
	public static final field NAME Lorg/jetbrains/kotlin/psi/KtPsiFactory$ClassHeaderBuilder$State;
	public static final field TYPE_CONSTRAINTS Lorg/jetbrains/kotlin/psi/KtPsiFactory$ClassHeaderBuilder$State;
	public static final field TYPE_PARAMETERS Lorg/jetbrains/kotlin/psi/KtPsiFactory$ClassHeaderBuilder$State;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtPsiFactory$ClassHeaderBuilder$State;
	public static fun values ()[Lorg/jetbrains/kotlin/psi/KtPsiFactory$ClassHeaderBuilder$State;
}

public final class org/jetbrains/kotlin/psi/KtPsiFactory$Companion {
	public final fun contextual (Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/psi/KtPsiFactory;
	public final fun contextual (Lcom/intellij/psi/PsiElement;Z)Lorg/jetbrains/kotlin/psi/KtPsiFactory;
	public final fun contextual (Lcom/intellij/psi/PsiElement;ZZ)Lorg/jetbrains/kotlin/psi/KtPsiFactory;
	public static synthetic fun contextual$default (Lorg/jetbrains/kotlin/psi/KtPsiFactory$Companion;Lcom/intellij/psi/PsiElement;ZZILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtPsiFactory;
}

public final class org/jetbrains/kotlin/psi/KtPsiFactoryKt {
	public static final fun KtPsiFactory (Lcom/intellij/openapi/project/Project;)Lorg/jetbrains/kotlin/psi/KtPsiFactory;
	public static final fun KtPsiFactory (Lcom/intellij/openapi/project/Project;Z)Lorg/jetbrains/kotlin/psi/KtPsiFactory;
	public static final fun KtPsiFactory (Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/psi/KtPsiFactory;
	public static final fun KtPsiFactory (Lcom/intellij/psi/PsiElement;Z)Lorg/jetbrains/kotlin/psi/KtPsiFactory;
	public static synthetic fun KtPsiFactory$default (Lcom/intellij/openapi/project/Project;ZILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtPsiFactory;
	public static synthetic fun KtPsiFactory$default (Lcom/intellij/psi/PsiElement;ZILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtPsiFactory;
	public static final fun getAnalysisContext (Lorg/jetbrains/kotlin/psi/KtFile;)Lcom/intellij/psi/PsiElement;
	public static final fun getDoNotAnalyze (Lorg/jetbrains/kotlin/psi/KtFile;)Ljava/lang/String;
	public static final fun setAnalysisContext (Lorg/jetbrains/kotlin/psi/KtFile;Lcom/intellij/psi/PsiElement;)V
	public static final fun setDoNotAnalyze (Lorg/jetbrains/kotlin/psi/KtFile;Ljava/lang/String;)V
}

public abstract interface annotation class org/jetbrains/kotlin/psi/KtPsiInconsistencyHandling : java/lang/annotation/Annotation {
}

public class org/jetbrains/kotlin/psi/KtPsiUtil {
	public static final field MAX_PRIORITY I
	public static fun areParenthesesNecessary (Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtElement;)Z
	public static fun areParenthesesUseless (Lorg/jetbrains/kotlin/psi/KtParenthesizedExpression;)Z
	public static fun ascendIfPropertyAccessor (Lcom/intellij/psi/PsiElement;)Lcom/intellij/psi/PsiElement;
	public static fun checkVariableDeclarationInBlock (Lorg/jetbrains/kotlin/psi/KtBlockExpression;Ljava/lang/String;)Z
	public static fun checkWhenExpressionHasSingleElse (Lorg/jetbrains/kotlin/psi/KtWhenExpression;)Z
	public static fun deparenthesize (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;
	public static fun deparenthesize (Lorg/jetbrains/kotlin/psi/KtExpression;Z)Lorg/jetbrains/kotlin/psi/KtExpression;
	public static fun deparenthesizeOnce (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;
	public static fun deparenthesizeOnce (Lorg/jetbrains/kotlin/psi/KtExpression;Z)Lorg/jetbrains/kotlin/psi/KtExpression;
	public static fun findChildByType (Lcom/intellij/psi/PsiElement;Lcom/intellij/psi/tree/IElementType;)Lcom/intellij/psi/PsiElement;
	public static fun findRootExpressions (Ljava/util/Collection;)Ljava/util/Set;
	public static fun getClassIfParameterIsProperty (Lorg/jetbrains/kotlin/psi/KtParameter;)Lorg/jetbrains/kotlin/psi/KtClassOrObject;
	public static fun getDirectParentOfTypeForBlock (Lorg/jetbrains/kotlin/psi/KtBlockExpression;Ljava/lang/Class;)Lcom/intellij/psi/PsiElement;
	public static fun getEnclosingElementForLocalDeclaration (Lorg/jetbrains/kotlin/psi/KtDeclaration;)Lorg/jetbrains/kotlin/psi/KtElement;
	public static fun getEnclosingElementForLocalDeclaration (Lorg/jetbrains/kotlin/psi/KtDeclaration;Z)Lorg/jetbrains/kotlin/psi/KtElement;
	public static fun getExpressionOrLastStatementInBlock (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;
	public static fun getLastChildByType (Lcom/intellij/psi/PsiElement;[Ljava/lang/Class;)Lcom/intellij/psi/PsiElement;
	public static fun getLastElementDeparenthesized (Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/resolve/StatementFilter;)Lorg/jetbrains/kotlin/psi/KtExpression;
	public static fun getLastReference (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;
	public static fun getLastStatementInABlock (Lorg/jetbrains/kotlin/psi/KtBlockExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;
	public static fun getNullableText (Lcom/intellij/psi/PsiElement;)Ljava/lang/String;
	public static fun getOperationToken (Lorg/jetbrains/kotlin/psi/KtOperationExpression;)Lorg/jetbrains/kotlin/lexer/KtToken;
	public static fun getOutermostClassOrObject (Lorg/jetbrains/kotlin/psi/KtClassOrObject;)Lorg/jetbrains/kotlin/psi/KtClassOrObject;
	public static fun getOutermostDescendantElement (Lcom/intellij/psi/PsiElement;ZLjava/util/function/Predicate;)Lorg/jetbrains/kotlin/psi/KtElement;
	public static fun getOutermostParent (Lcom/intellij/psi/PsiElement;Lcom/intellij/psi/PsiElement;Z)Lcom/intellij/psi/PsiElement;
	public static fun getPackageName (Lorg/jetbrains/kotlin/psi/KtElement;)Ljava/lang/String;
	public static fun getParentCallIfPresent (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;
	public static fun getPreviousWord (Lcom/intellij/psi/PsiElement;Ljava/lang/String;)Lcom/intellij/psi/PsiElement;
	public static fun getScript (Lorg/jetbrains/kotlin/psi/KtDeclaration;)Lorg/jetbrains/kotlin/psi/KtScript;
	public static fun getText (Lcom/intellij/psi/PsiElement;)Ljava/lang/String;
	public static fun getTopmostParentOfTypes (Lcom/intellij/psi/PsiElement;[Ljava/lang/Class;)Lcom/intellij/psi/PsiElement;
	public static fun isAbstract (Lorg/jetbrains/kotlin/psi/KtDeclarationWithBody;)Z
	public static fun isAssignment (Lcom/intellij/psi/PsiElement;)Z
	public static fun isBooleanConstant (Lorg/jetbrains/kotlin/psi/KtExpression;)Z
	public static fun isCast (Lorg/jetbrains/kotlin/psi/KtBinaryExpressionWithTypeRHS;)Z
	public static fun isDeprecated (Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z
	public static fun isFalseConstant (Lorg/jetbrains/kotlin/psi/KtExpression;)Z
	public static fun isInComment (Lcom/intellij/psi/PsiElement;)Z
	public static fun isInOrNotInOperation (Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)Z
	public static fun isLHSOfDot (Lorg/jetbrains/kotlin/psi/KtExpression;)Z
	public static fun isLabelIdentifierExpression (Lcom/intellij/psi/PsiElement;)Z
	public static fun isLabeledFunctionLiteral (Lorg/jetbrains/kotlin/psi/KtFunctionLiteral;)Z
	public static fun isLocal (Lorg/jetbrains/kotlin/psi/KtDeclaration;)Z
	public static fun isNotInOperation (Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)Z
	public static fun isNullConstant (Lorg/jetbrains/kotlin/psi/KtExpression;)Z
	public static fun isOrdinaryAssignment (Lcom/intellij/psi/PsiElement;)Z
	public static fun isRemovableVariableDeclaration (Lorg/jetbrains/kotlin/psi/KtDeclaration;)Z
	public static fun isSafeCast (Lorg/jetbrains/kotlin/psi/KtBinaryExpressionWithTypeRHS;)Z
	public static fun isScriptDeclaration (Lorg/jetbrains/kotlin/psi/KtDeclaration;)Z
	public static fun isSelectorInQualified (Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;)Z
	public static fun isStatement (Lcom/intellij/psi/PsiElement;)Z
	public static fun isStatementContainer (Lcom/intellij/psi/PsiElement;)Z
	public static fun isTrait (Lorg/jetbrains/kotlin/psi/KtClassOrObject;)Z
	public static fun isTrueConstant (Lorg/jetbrains/kotlin/psi/KtExpression;)Z
	public static fun isUnsafeCast (Lorg/jetbrains/kotlin/psi/KtBinaryExpressionWithTypeRHS;)Z
	public static fun prevLeafIgnoringWhitespaceAndComments (Lcom/intellij/psi/PsiElement;)Lcom/intellij/psi/PsiElement;
	public static fun replaceModifierList (Lorg/jetbrains/kotlin/psi/KtModifierListOwner;Lorg/jetbrains/kotlin/psi/KtModifierList;)Lorg/jetbrains/kotlin/psi/KtModifierList;
	public static fun safeDeparenthesize (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;
	public static fun safeDeparenthesize (Lorg/jetbrains/kotlin/psi/KtExpression;Z)Lorg/jetbrains/kotlin/psi/KtExpression;
	public static fun safeName (Ljava/lang/String;)Lorg/jetbrains/kotlin/name/Name;
	public static fun skipSiblingsBackwardByPredicate (Lcom/intellij/psi/PsiElement;Ljava/util/function/Predicate;)Lcom/intellij/psi/PsiElement;
	public static fun skipTrailingWhitespacesAndComments (Lcom/intellij/psi/PsiElement;)Lcom/intellij/psi/PsiElement;
	public static fun unquoteIdentifier (Ljava/lang/String;)Ljava/lang/String;
	public static fun unquoteIdentifierOrFieldReference (Ljava/lang/String;)Ljava/lang/String;
	public static fun visitChildren (Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)V
}

public abstract interface class org/jetbrains/kotlin/psi/KtPsiUtil$KtExpressionWrapper {
	public abstract fun getBaseExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
}

public abstract interface class org/jetbrains/kotlin/psi/KtPureClassOrObject : org/jetbrains/kotlin/psi/KtDeclarationContainer, org/jetbrains/kotlin/psi/KtPureElement {
	public abstract fun getBody ()Lorg/jetbrains/kotlin/psi/KtClassBody;
	public abstract fun getCompanionObjects ()Ljava/util/List;
	public abstract fun getContextReceivers ()Ljava/util/List;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getPrimaryConstructor ()Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;
	public abstract fun getPrimaryConstructorModifierList ()Lorg/jetbrains/kotlin/psi/KtModifierList;
	public abstract fun getPrimaryConstructorParameters ()Ljava/util/List;
	public abstract fun getSecondaryConstructors ()Ljava/util/List;
	public abstract fun getSuperTypeListEntries ()Ljava/util/List;
	public abstract fun hasExplicitPrimaryConstructor ()Z
	public abstract fun hasPrimaryConstructor ()Z
	public abstract fun isLocal ()Z
}

public abstract interface class org/jetbrains/kotlin/psi/KtPureElement {
	public abstract fun getContainingKtFile ()Lorg/jetbrains/kotlin/psi/KtFile;
	public abstract fun getParent ()Lcom/intellij/psi/PsiElement;
	public abstract fun getPsiOrParent ()Lorg/jetbrains/kotlin/psi/KtElement;
}

public abstract interface class org/jetbrains/kotlin/psi/KtQualifiedExpression : org/jetbrains/kotlin/psi/KtExpression {
	public fun getOperationSign ()Lorg/jetbrains/kotlin/lexer/KtSingleValueToken;
	public fun getOperationTokenNode ()Lcom/intellij/lang/ASTNode;
	public fun getReceiverExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getReceiverExpressionOrNull ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getSelectorExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
}

public abstract interface class org/jetbrains/kotlin/psi/KtReferenceExpression : org/jetbrains/kotlin/psi/KtExpression {
}

public class org/jetbrains/kotlin/psi/KtReturnExpression : org/jetbrains/kotlin/psi/KtExpressionWithLabel, org/jetbrains/kotlin/psi/KtStatementExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getLabeledExpression ()Lcom/intellij/psi/PsiElement;
	public fun getReturnKeyword ()Lcom/intellij/psi/PsiElement;
	public fun getReturnedExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
}

public final class org/jetbrains/kotlin/psi/KtSafeQualifiedExpression : org/jetbrains/kotlin/psi/KtExpressionImpl, org/jetbrains/kotlin/psi/KtQualifiedExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public class org/jetbrains/kotlin/psi/KtScript : org/jetbrains/kotlin/psi/KtDeclarationContainer {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinScriptStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getBlockExpression ()Lorg/jetbrains/kotlin/psi/KtBlockExpression;
	public fun getDeclarations ()Ljava/util/List;
	public fun getFqName ()Lorg/jetbrains/kotlin/name/FqName;
	public fun getName ()Ljava/lang/String;
	public synthetic fun getNameAsName ()Lorg/jetbrains/kotlin/name/Name;
	public synthetic fun getNameAsSafeName ()Lorg/jetbrains/kotlin/name/Name;
	public synthetic fun getNameIdentifier ()Lcom/intellij/psi/PsiElement;
	public synthetic fun getTextOffset ()I
	public synthetic fun getUseScope ()Lcom/intellij/psi/search/SearchScope;
	public synthetic fun setName (Ljava/lang/String;)Lcom/intellij/psi/PsiElement;
}

public final class org/jetbrains/kotlin/psi/KtScriptInitializer : org/jetbrains/kotlin/psi/KtDeclarationStub, org/jetbrains/kotlin/psi/KtAnonymousInitializer {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getBody ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public synthetic fun getContainingDeclaration ()Lorg/jetbrains/kotlin/psi/KtDeclaration;
	public fun getContainingDeclaration ()Lorg/jetbrains/kotlin/psi/KtScript;
}

public final class org/jetbrains/kotlin/psi/KtSecondaryConstructor : org/jetbrains/kotlin/psi/KtConstructor {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinConstructorStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getBodyExpression ()Lorg/jetbrains/kotlin/psi/KtBlockExpression;
	public synthetic fun getBodyExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getConstructorKeyword ()Lcom/intellij/psi/PsiElement;
	public fun getContainingClassOrObject ()Lorg/jetbrains/kotlin/psi/KtClassOrObject;
	public final fun getDelegationCall ()Lorg/jetbrains/kotlin/psi/KtConstructorDelegationCall;
	public final fun getDelegationCallOrNull ()Lorg/jetbrains/kotlin/psi/KtConstructorDelegationCall;
	public final fun hasImplicitDelegationCall ()Z
	public final fun replaceImplicitDelegationCallWithExplicit (Z)Lorg/jetbrains/kotlin/psi/KtConstructorDelegationCall;
}

public class org/jetbrains/kotlin/psi/KtSelfType : org/jetbrains/kotlin/psi/KtElementImpl, org/jetbrains/kotlin/psi/KtTypeElement {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getTypeArgumentsAsTypes ()Ljava/util/List;
}

public abstract interface class org/jetbrains/kotlin/psi/KtSimpleNameExpression : org/jetbrains/kotlin/psi/KtReferenceExpression {
	public abstract fun getIdentifier ()Lcom/intellij/psi/PsiElement;
	public abstract fun getReferencedName ()Ljava/lang/String;
	public abstract fun getReferencedNameAsName ()Lorg/jetbrains/kotlin/name/Name;
	public abstract fun getReferencedNameElement ()Lcom/intellij/psi/PsiElement;
	public abstract fun getReferencedNameElementType ()Lcom/intellij/psi/tree/IElementType;
}

public abstract class org/jetbrains/kotlin/psi/KtSimpleNameExpressionImpl : org/jetbrains/kotlin/psi/KtExpressionImpl, org/jetbrains/kotlin/psi/KtSimpleNameExpression {
	public static final field Companion Lorg/jetbrains/kotlin/psi/KtSimpleNameExpressionImpl$Companion;
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getIdentifier ()Lcom/intellij/psi/PsiElement;
	public fun getReferencedName ()Ljava/lang/String;
	public fun getReferencedNameAsName ()Lorg/jetbrains/kotlin/name/Name;
	public fun getReferencedNameElementType ()Lcom/intellij/psi/tree/IElementType;
}

public final class org/jetbrains/kotlin/psi/KtSimpleNameExpressionImpl$Companion {
	public final fun getReferencedNameAsNameImpl (Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;)Lorg/jetbrains/kotlin/name/Name;
	public final fun getReferencedNameElementTypeImpl (Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;)Lcom/intellij/psi/tree/IElementType;
	public final fun getReferencedNameImpl (Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;)Ljava/lang/String;
}

public class org/jetbrains/kotlin/psi/KtSimpleNameStringTemplateEntry : org/jetbrains/kotlin/psi/KtStringTemplateEntryWithExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderWithTextStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class org/jetbrains/kotlin/psi/KtStatementExpression {
}

public final class org/jetbrains/kotlin/psi/KtStringInterpolationPrefix : org/jetbrains/kotlin/psi/KtElementImplStub {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinStringInterpolationPrefixStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun getInterpolationPrefix ()Ljava/lang/String;
	public final fun getInterpolationPrefixElement ()Lcom/intellij/psi/PsiElement;
	public fun getText ()Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/psi/KtStringTemplateEntry : org/jetbrains/kotlin/psi/KtElementImplStub {
	public static final field EMPTY_ARRAY [Lorg/jetbrains/kotlin/psi/KtStringTemplateEntry;
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderWithTextStub;Lcom/intellij/psi/stubs/IStubElementType;)V
	public fun getExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getText ()Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/psi/KtStringTemplateEntryWithExpression : org/jetbrains/kotlin/psi/KtStringTemplateEntry {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderWithTextStub;Lcom/intellij/psi/stubs/IStubElementType;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getExpressions ()Ljava/util/List;
}

public class org/jetbrains/kotlin/psi/KtStringTemplateExpression : org/jetbrains/kotlin/psi/KtElementImplStub, com/intellij/psi/ContributedReferenceHost, com/intellij/psi/PsiLanguageInjectionHost, org/jetbrains/kotlin/psi/KtExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun createLiteralTextEscaper ()Lcom/intellij/psi/LiteralTextEscaper;
	public fun getEntries ()[Lorg/jetbrains/kotlin/psi/KtStringTemplateEntry;
	public fun getInterpolationPrefix ()Lorg/jetbrains/kotlin/psi/KtStringInterpolationPrefix;
	public fun hasInterpolation ()Z
	public fun isValidHost ()Z
	public fun replace (Lcom/intellij/psi/PsiElement;)Lcom/intellij/psi/PsiElement;
	public fun updateText (Ljava/lang/String;)Lcom/intellij/psi/PsiLanguageInjectionHost;
}

public final class org/jetbrains/kotlin/psi/KtStubbedPsiUtil {
	public static fun getContainingDeclaration (Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/psi/KtDeclaration;
	public static fun getContainingDeclaration (Lcom/intellij/psi/PsiElement;Ljava/lang/Class;)Lorg/jetbrains/kotlin/psi/KtDeclaration;
	public static fun getPsiOrStubParent (Lcom/intellij/psi/PsiElement;Ljava/lang/Class;Z)Lorg/jetbrains/kotlin/psi/KtElement;
	public static fun getStubOrPsiChild (Lorg/jetbrains/kotlin/psi/KtElementImplStub;Lcom/intellij/psi/tree/TokenSet;Lcom/intellij/util/ArrayFactory;)Lorg/jetbrains/kotlin/psi/KtElement;
}

public class org/jetbrains/kotlin/psi/KtSuperExpression : org/jetbrains/kotlin/psi/KtInstanceExpressionWithLabel, org/jetbrains/kotlin/psi/KtStatementExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getSuperTypeQualifier ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
}

public class org/jetbrains/kotlin/psi/KtSuperTypeCallEntry : org/jetbrains/kotlin/psi/KtSuperTypeListEntry, org/jetbrains/kotlin/psi/KtCallElement {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getCalleeExpression ()Lorg/jetbrains/kotlin/psi/KtConstructorCalleeExpression;
	public synthetic fun getCalleeExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getLambdaArguments ()Ljava/util/List;
	public fun getTypeArgumentList ()Lorg/jetbrains/kotlin/psi/KtTypeArgumentList;
	public fun getTypeArguments ()Ljava/util/List;
	public fun getTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun getValueArgumentList ()Lorg/jetbrains/kotlin/psi/KtValueArgumentList;
	public fun getValueArguments ()Ljava/util/List;
}

public class org/jetbrains/kotlin/psi/KtSuperTypeEntry : org/jetbrains/kotlin/psi/KtSuperTypeListEntry {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public class org/jetbrains/kotlin/psi/KtSuperTypeList : org/jetbrains/kotlin/psi/KtElementImplStub {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun addEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeListEntry;)Lorg/jetbrains/kotlin/psi/KtSuperTypeListEntry;
	public fun delete ()V
	public fun getEntries ()Ljava/util/List;
	public fun getModificationStamp ()J
	public fun removeEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeListEntry;)V
	public fun subtreeChanged ()V
}

public class org/jetbrains/kotlin/psi/KtSuperTypeListEntry : org/jetbrains/kotlin/psi/KtElementImplStub {
	public static field ARRAY_FACTORY Lcom/intellij/util/ArrayFactory;
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;Lcom/intellij/psi/stubs/IStubElementType;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getTypeAsUserType ()Lorg/jetbrains/kotlin/psi/KtUserType;
	public fun getTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
}

public class org/jetbrains/kotlin/psi/KtThisExpression : org/jetbrains/kotlin/psi/KtInstanceExpressionWithLabel {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public class org/jetbrains/kotlin/psi/KtThrowExpression : org/jetbrains/kotlin/psi/KtExpressionImpl, org/jetbrains/kotlin/psi/KtStatementExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getThrownExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
}

public class org/jetbrains/kotlin/psi/KtTreeVisitor : org/jetbrains/kotlin/psi/KtVisitor {
	public fun <init> ()V
	public synthetic fun visitKtElement (Lorg/jetbrains/kotlin/psi/KtElement;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitKtElement (Lorg/jetbrains/kotlin/psi/KtElement;Ljava/lang/Object;)Ljava/lang/Void;
	public synthetic fun visitKtFile (Lorg/jetbrains/kotlin/psi/KtFile;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitKtFile (Lorg/jetbrains/kotlin/psi/KtFile;Ljava/lang/Object;)Ljava/lang/Void;
}

public class org/jetbrains/kotlin/psi/KtTreeVisitorVoid : org/jetbrains/kotlin/psi/KtVisitorVoid {
	public fun <init> ()V
	public fun visitElement (Lcom/intellij/psi/PsiElement;)V
}

public class org/jetbrains/kotlin/psi/KtTryExpression : org/jetbrains/kotlin/psi/KtExpressionImpl {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getCatchClauses ()Ljava/util/List;
	public fun getFinallyBlock ()Lorg/jetbrains/kotlin/psi/KtFinallySection;
	public fun getTryBlock ()Lorg/jetbrains/kotlin/psi/KtBlockExpression;
	public fun getTryKeyword ()Lcom/intellij/psi/PsiElement;
}

public final class org/jetbrains/kotlin/psi/KtTypeAlias : org/jetbrains/kotlin/psi/KtTypeParameterListOwnerStub, org/jetbrains/kotlin/psi/KtClassLikeDeclaration, org/jetbrains/kotlin/psi/KtNamedDeclaration {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinTypeAliasStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getClassId ()Lorg/jetbrains/kotlin/name/ClassId;
	public fun getPresentation ()Lcom/intellij/navigation/ItemPresentation;
	public final fun getTypeAliasKeyword ()Lcom/intellij/psi/PsiElement;
	public final fun getTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public final fun isTopLevel ()Z
}

public class org/jetbrains/kotlin/psi/KtTypeArgumentList : org/jetbrains/kotlin/psi/KtElementImplStub {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun addArgument (Lorg/jetbrains/kotlin/psi/KtTypeProjection;)Lorg/jetbrains/kotlin/psi/KtTypeProjection;
	public fun getArguments ()Ljava/util/List;
	public fun getTrailingComma ()Lcom/intellij/psi/PsiElement;
}

public final class org/jetbrains/kotlin/psi/KtTypeCodeFragment : org/jetbrains/kotlin/psi/KtCodeFragment {
	public fun <init> (Lcom/intellij/openapi/project/Project;Ljava/lang/String;Ljava/lang/CharSequence;Lcom/intellij/psi/PsiElement;)V
	public synthetic fun getContentElement ()Lorg/jetbrains/kotlin/psi/KtElement;
	public fun getContentElement ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
}

public class org/jetbrains/kotlin/psi/KtTypeConstraint : org/jetbrains/kotlin/psi/KtElementImplStub, org/jetbrains/kotlin/psi/KtAnnotated, org/jetbrains/kotlin/psi/KtAnnotationsContainer {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getAnnotationEntries ()Ljava/util/List;
	public fun getAnnotations ()Ljava/util/List;
	public fun getBoundTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun getSubjectTypeParameterName ()Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;
}

public class org/jetbrains/kotlin/psi/KtTypeConstraintList : org/jetbrains/kotlin/psi/KtElementImplStub {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getConstraints ()Ljava/util/List;
}

public abstract interface class org/jetbrains/kotlin/psi/KtTypeElement : org/jetbrains/kotlin/psi/KtElement {
	public static final field ARRAY_FACTORY Lcom/intellij/util/ArrayFactory;
	public static final field EMPTY_ARRAY [Lorg/jetbrains/kotlin/psi/KtTypeElement;
	public abstract fun getTypeArgumentsAsTypes ()Ljava/util/List;
}

public class org/jetbrains/kotlin/psi/KtTypeParameter {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinTypeParameterStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getExtendsBound ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public synthetic fun getFqName ()Lorg/jetbrains/kotlin/name/FqName;
	public synthetic fun getName ()Ljava/lang/String;
	public synthetic fun getNameAsName ()Lorg/jetbrains/kotlin/name/Name;
	public synthetic fun getNameAsSafeName ()Lorg/jetbrains/kotlin/name/Name;
	public synthetic fun getNameIdentifier ()Lcom/intellij/psi/PsiElement;
	public synthetic fun getTextOffset ()I
	public fun getUseScope ()Lcom/intellij/psi/search/SearchScope;
	public fun getVariance ()Lorg/jetbrains/kotlin/types/Variance;
	public fun setExtendsBound (Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public synthetic fun setName (Ljava/lang/String;)Lcom/intellij/psi/PsiElement;
}

public class org/jetbrains/kotlin/psi/KtTypeParameterList : org/jetbrains/kotlin/psi/KtElementImplStub {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun addParameter (Lorg/jetbrains/kotlin/psi/KtTypeParameter;)Lorg/jetbrains/kotlin/psi/KtTypeParameter;
	public fun getParameters ()Ljava/util/List;
	public fun getTrailingComma ()Lcom/intellij/psi/PsiElement;
}

public abstract interface class org/jetbrains/kotlin/psi/KtTypeParameterListOwner : org/jetbrains/kotlin/psi/KtNamedDeclaration {
	public abstract fun getTypeConstraintList ()Lorg/jetbrains/kotlin/psi/KtTypeConstraintList;
	public abstract fun getTypeConstraints ()Ljava/util/List;
	public abstract fun getTypeParameterList ()Lorg/jetbrains/kotlin/psi/KtTypeParameterList;
	public abstract fun getTypeParameters ()Ljava/util/List;
}

public abstract class org/jetbrains/kotlin/psi/KtTypeParameterListOwnerStub : org/jetbrains/kotlin/psi/KtTypeParameterListOwner {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinStubWithFqName;Lcom/intellij/psi/stubs/IStubElementType;)V
	public fun getContextReceiverList ()Lorg/jetbrains/kotlin/psi/KtContextReceiverList;
	public fun getContextReceiverLists ()Ljava/util/List;
	public synthetic fun getFqName ()Lorg/jetbrains/kotlin/name/FqName;
	public synthetic fun getName ()Ljava/lang/String;
	public synthetic fun getNameAsName ()Lorg/jetbrains/kotlin/name/Name;
	public synthetic fun getNameAsSafeName ()Lorg/jetbrains/kotlin/name/Name;
	public synthetic fun getNameIdentifier ()Lcom/intellij/psi/PsiElement;
	public synthetic fun getTextOffset ()I
	public fun getTypeConstraintList ()Lorg/jetbrains/kotlin/psi/KtTypeConstraintList;
	public fun getTypeConstraints ()Ljava/util/List;
	public fun getTypeParameterList ()Lorg/jetbrains/kotlin/psi/KtTypeParameterList;
	public fun getTypeParameters ()Ljava/util/List;
	public synthetic fun getUseScope ()Lcom/intellij/psi/search/SearchScope;
	public synthetic fun setName (Ljava/lang/String;)Lcom/intellij/psi/PsiElement;
}

public class org/jetbrains/kotlin/psi/KtTypeProjection : org/jetbrains/kotlin/psi/KtModifierListOwnerStub {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinTypeProjectionStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getProjectionKind ()Lorg/jetbrains/kotlin/psi/KtProjectionKind;
	public fun getProjectionToken ()Lcom/intellij/psi/PsiElement;
	public fun getTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
}

public final class org/jetbrains/kotlin/psi/KtTypeReference : org/jetbrains/kotlin/psi/KtModifierListOwnerStub, org/jetbrains/kotlin/psi/KtAnnotated, org/jetbrains/kotlin/psi/KtAnnotationsContainer {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getAnnotationEntries ()Ljava/util/List;
	public fun getAnnotations ()Ljava/util/List;
	public final fun getShortTypeText ()Ljava/lang/String;
	public final fun getTypeElement ()Lorg/jetbrains/kotlin/psi/KtTypeElement;
	public final fun getTypeText ()Ljava/lang/String;
	public final fun hasParentheses ()Z
	public final fun isPlaceholder ()Z
	public final fun nameForReceiverLabel ()Ljava/lang/String;
}

public abstract class org/jetbrains/kotlin/psi/KtUnaryExpression : org/jetbrains/kotlin/psi/KtExpressionImpl, org/jetbrains/kotlin/psi/KtOperationExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public abstract fun getBaseExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getOperationReference ()Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;
	public fun getOperationToken ()Lcom/intellij/psi/tree/IElementType;
}

public class org/jetbrains/kotlin/psi/KtUserType : org/jetbrains/kotlin/psi/KtElementImplStub, org/jetbrains/kotlin/psi/KtTypeElement {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinUserTypeStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun deleteQualifier ()V
	public fun getQualifier ()Lorg/jetbrains/kotlin/psi/KtUserType;
	public fun getReferenceExpression ()Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;
	public fun getReferencedName ()Ljava/lang/String;
	public fun getTypeArgumentList ()Lorg/jetbrains/kotlin/psi/KtTypeArgumentList;
	public fun getTypeArguments ()Ljava/util/List;
	public fun getTypeArgumentsAsTypes ()Ljava/util/List;
}

public abstract interface class org/jetbrains/kotlin/psi/KtValVarKeywordOwner : com/intellij/psi/PsiElement {
	public abstract fun getValOrVarKeyword ()Lcom/intellij/psi/PsiElement;
}

public class org/jetbrains/kotlin/psi/KtValueArgument : org/jetbrains/kotlin/psi/KtElementImplStub, org/jetbrains/kotlin/psi/ValueArgument {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinValueArgumentStub;)V
	protected fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinValueArgumentStub;Lcom/intellij/psi/stubs/IStubElementType;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun asElement ()Lorg/jetbrains/kotlin/psi/KtElement;
	public fun getArgumentExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getArgumentName ()Lorg/jetbrains/kotlin/psi/KtValueArgumentName;
	public synthetic fun getArgumentName ()Lorg/jetbrains/kotlin/psi/ValueArgumentName;
	public fun getEqualsToken ()Lcom/intellij/psi/PsiElement;
	public fun getSpreadElement ()Lcom/intellij/psi/impl/source/tree/LeafPsiElement;
	public fun getStringTemplateExpression ()Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;
	public fun isExternal ()Z
	public fun isNamed ()Z
	public fun isSpread ()Z
}

public class org/jetbrains/kotlin/psi/KtValueArgumentList : org/jetbrains/kotlin/psi/KtElementImplStub {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun addArgument (Lorg/jetbrains/kotlin/psi/KtValueArgument;)Lorg/jetbrains/kotlin/psi/KtValueArgument;
	public fun addArgumentAfter (Lorg/jetbrains/kotlin/psi/KtValueArgument;Lorg/jetbrains/kotlin/psi/KtValueArgument;)Lorg/jetbrains/kotlin/psi/KtValueArgument;
	public fun addArgumentBefore (Lorg/jetbrains/kotlin/psi/KtValueArgument;Lorg/jetbrains/kotlin/psi/KtValueArgument;)Lorg/jetbrains/kotlin/psi/KtValueArgument;
	public fun getArguments ()Ljava/util/List;
	public fun getLeftParenthesis ()Lcom/intellij/psi/PsiElement;
	public fun getRightParenthesis ()Lcom/intellij/psi/PsiElement;
	public fun getTrailingComma ()Lcom/intellij/psi/PsiElement;
	public fun removeArgument (I)V
	public fun removeArgument (Lorg/jetbrains/kotlin/psi/KtValueArgument;)V
}

public class org/jetbrains/kotlin/psi/KtValueArgumentName : org/jetbrains/kotlin/psi/KtElementImplStub, org/jetbrains/kotlin/psi/ValueArgumentName {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun <init> (Lorg/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub;)V
	public fun getAsName ()Lorg/jetbrains/kotlin/name/Name;
	public fun getReferenceExpression ()Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;
}

public abstract interface class org/jetbrains/kotlin/psi/KtVariableDeclaration : org/jetbrains/kotlin/psi/KtCallableDeclaration, org/jetbrains/kotlin/psi/KtDeclarationWithInitializer, org/jetbrains/kotlin/psi/KtValVarKeywordOwner {
	public abstract fun isVar ()Z
}

public class org/jetbrains/kotlin/psi/KtVisitor : com/intellij/psi/PsiElementVisitor {
	public fun <init> ()V
	public fun visitAnnotatedExpression (Lorg/jetbrains/kotlin/psi/KtAnnotatedExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitAnnotation (Lorg/jetbrains/kotlin/psi/KtAnnotation;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitAnnotationEntry (Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitAnnotationUseSiteTarget (Lorg/jetbrains/kotlin/psi/KtAnnotationUseSiteTarget;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitAnonymousInitializer (Lorg/jetbrains/kotlin/psi/KtAnonymousInitializer;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitArgument (Lorg/jetbrains/kotlin/psi/KtValueArgument;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitArrayAccessExpression (Lorg/jetbrains/kotlin/psi/KtArrayAccessExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitBackingField (Lorg/jetbrains/kotlin/psi/KtBackingField;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitBinaryExpression (Lorg/jetbrains/kotlin/psi/KtBinaryExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitBinaryWithTypeRHSExpression (Lorg/jetbrains/kotlin/psi/KtBinaryExpressionWithTypeRHS;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitBlockExpression (Lorg/jetbrains/kotlin/psi/KtBlockExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitBlockStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtBlockStringTemplateEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitBreakExpression (Lorg/jetbrains/kotlin/psi/KtBreakExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCallExpression (Lorg/jetbrains/kotlin/psi/KtCallExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCallableReferenceExpression (Lorg/jetbrains/kotlin/psi/KtCallableReferenceExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCatchSection (Lorg/jetbrains/kotlin/psi/KtCatchClause;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitClass (Lorg/jetbrains/kotlin/psi/KtClass;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitClassBody (Lorg/jetbrains/kotlin/psi/KtClassBody;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitClassInitializer (Lorg/jetbrains/kotlin/psi/KtClassInitializer;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitClassLiteralExpression (Lorg/jetbrains/kotlin/psi/KtClassLiteralExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitClassOrObject (Lorg/jetbrains/kotlin/psi/KtClassOrObject;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCollectionLiteralExpression (Lorg/jetbrains/kotlin/psi/KtCollectionLiteralExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitConstantExpression (Lorg/jetbrains/kotlin/psi/KtConstantExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitConstructor (Lorg/jetbrains/kotlin/psi/KtConstructor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitConstructorCalleeExpression (Lorg/jetbrains/kotlin/psi/KtConstructorCalleeExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitConstructorDelegationCall (Lorg/jetbrains/kotlin/psi/KtConstructorDelegationCall;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitContextReceiver (Lorg/jetbrains/kotlin/psi/KtContextReceiver;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitContextReceiverList (Lorg/jetbrains/kotlin/psi/KtContextReceiverList;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitContinueExpression (Lorg/jetbrains/kotlin/psi/KtContinueExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitDeclaration (Lorg/jetbrains/kotlin/psi/KtDeclaration;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitDelegatedSuperTypeEntry (Lorg/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitDestructuringDeclaration (Lorg/jetbrains/kotlin/psi/KtDestructuringDeclaration;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitDestructuringDeclarationEntry (Lorg/jetbrains/kotlin/psi/KtDestructuringDeclarationEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitDoWhileExpression (Lorg/jetbrains/kotlin/psi/KtDoWhileExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitDotQualifiedExpression (Lorg/jetbrains/kotlin/psi/KtDotQualifiedExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitDoubleColonExpression (Lorg/jetbrains/kotlin/psi/KtDoubleColonExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitDynamicType (Lorg/jetbrains/kotlin/psi/KtDynamicType;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitEnumEntry (Lorg/jetbrains/kotlin/psi/KtEnumEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitEscapeStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtEscapeStringTemplateEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExpression (Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitExpressionWithLabel (Lorg/jetbrains/kotlin/psi/KtExpressionWithLabel;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitFileAnnotationList (Lorg/jetbrains/kotlin/psi/KtFileAnnotationList;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitFinallySection (Lorg/jetbrains/kotlin/psi/KtFinallySection;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitForExpression (Lorg/jetbrains/kotlin/psi/KtForExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitFunctionType (Lorg/jetbrains/kotlin/psi/KtFunctionType;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitIfExpression (Lorg/jetbrains/kotlin/psi/KtIfExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitImportAlias (Lorg/jetbrains/kotlin/psi/KtImportAlias;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitImportDirective (Lorg/jetbrains/kotlin/psi/KtImportDirective;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitImportList (Lorg/jetbrains/kotlin/psi/KtImportList;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitInitializerList (Lorg/jetbrains/kotlin/psi/KtInitializerList;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitIntersectionType (Lorg/jetbrains/kotlin/psi/KtIntersectionType;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitIsExpression (Lorg/jetbrains/kotlin/psi/KtIsExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitKtCommonFile (Lorg/jetbrains/kotlin/psi/KtCommonFile;)Ljava/lang/Object;
	public fun visitKtElement (Lorg/jetbrains/kotlin/psi/KtElement;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitKtFile (Lorg/jetbrains/kotlin/psi/KtFile;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitLabeledExpression (Lorg/jetbrains/kotlin/psi/KtLabeledExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitLambdaExpression (Lorg/jetbrains/kotlin/psi/KtLambdaExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitLiteralStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtLiteralStringTemplateEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitLoopExpression (Lorg/jetbrains/kotlin/psi/KtLoopExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitModifierList (Lorg/jetbrains/kotlin/psi/KtModifierList;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitNamedDeclaration (Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitNamedFunction (Lorg/jetbrains/kotlin/psi/KtNamedFunction;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitNullableType (Lorg/jetbrains/kotlin/psi/KtNullableType;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitObjectDeclaration (Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitObjectLiteralExpression (Lorg/jetbrains/kotlin/psi/KtObjectLiteralExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPackageDirective (Lorg/jetbrains/kotlin/psi/KtPackageDirective;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitParameter (Lorg/jetbrains/kotlin/psi/KtParameter;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitParameterList (Lorg/jetbrains/kotlin/psi/KtParameterList;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitParenthesizedExpression (Lorg/jetbrains/kotlin/psi/KtParenthesizedExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPostfixExpression (Lorg/jetbrains/kotlin/psi/KtPostfixExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPrefixExpression (Lorg/jetbrains/kotlin/psi/KtPrefixExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPrimaryConstructor (Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitProperty (Lorg/jetbrains/kotlin/psi/KtProperty;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPropertyAccessor (Lorg/jetbrains/kotlin/psi/KtPropertyAccessor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPropertyDelegate (Lorg/jetbrains/kotlin/psi/KtPropertyDelegate;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitQualifiedExpression (Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitReferenceExpression (Lorg/jetbrains/kotlin/psi/KtReferenceExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitReturnExpression (Lorg/jetbrains/kotlin/psi/KtReturnExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSafeQualifiedExpression (Lorg/jetbrains/kotlin/psi/KtSafeQualifiedExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitScript (Lorg/jetbrains/kotlin/psi/KtScript;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitScriptInitializer (Lorg/jetbrains/kotlin/psi/KtScriptInitializer;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSecondaryConstructor (Lorg/jetbrains/kotlin/psi/KtSecondaryConstructor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSelfType (Lorg/jetbrains/kotlin/psi/KtSelfType;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSimpleNameExpression (Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSimpleNameStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtSimpleNameStringTemplateEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitStringInterpolationPrefix (Lorg/jetbrains/kotlin/psi/KtStringInterpolationPrefix;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtStringTemplateEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitStringTemplateEntryWithExpression (Lorg/jetbrains/kotlin/psi/KtStringTemplateEntryWithExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitStringTemplateExpression (Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSuperExpression (Lorg/jetbrains/kotlin/psi/KtSuperExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSuperTypeCallEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeCallEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSuperTypeEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSuperTypeList (Lorg/jetbrains/kotlin/psi/KtSuperTypeList;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitSuperTypeListEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeListEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitThisExpression (Lorg/jetbrains/kotlin/psi/KtThisExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitThrowExpression (Lorg/jetbrains/kotlin/psi/KtThrowExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitTryExpression (Lorg/jetbrains/kotlin/psi/KtTryExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitTypeAlias (Lorg/jetbrains/kotlin/psi/KtTypeAlias;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitTypeArgumentList (Lorg/jetbrains/kotlin/psi/KtTypeArgumentList;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitTypeConstraint (Lorg/jetbrains/kotlin/psi/KtTypeConstraint;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitTypeConstraintList (Lorg/jetbrains/kotlin/psi/KtTypeConstraintList;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitTypeParameter (Lorg/jetbrains/kotlin/psi/KtTypeParameter;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitTypeParameterList (Lorg/jetbrains/kotlin/psi/KtTypeParameterList;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitTypeProjection (Lorg/jetbrains/kotlin/psi/KtTypeProjection;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitTypeReference (Lorg/jetbrains/kotlin/psi/KtTypeReference;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitUnaryExpression (Lorg/jetbrains/kotlin/psi/KtUnaryExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitUserType (Lorg/jetbrains/kotlin/psi/KtUserType;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitValueArgumentList (Lorg/jetbrains/kotlin/psi/KtValueArgumentList;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitWhenConditionInRange (Lorg/jetbrains/kotlin/psi/KtWhenConditionInRange;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitWhenConditionIsPattern (Lorg/jetbrains/kotlin/psi/KtWhenConditionIsPattern;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitWhenConditionWithExpression (Lorg/jetbrains/kotlin/psi/KtWhenConditionWithExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitWhenEntry (Lorg/jetbrains/kotlin/psi/KtWhenEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitWhenExpression (Lorg/jetbrains/kotlin/psi/KtWhenExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitWhileExpression (Lorg/jetbrains/kotlin/psi/KtWhileExpression;Ljava/lang/Object;)Ljava/lang/Object;
}

public class org/jetbrains/kotlin/psi/KtVisitorVoid : org/jetbrains/kotlin/psi/KtVisitor {
	public fun <init> ()V
	public fun visitAnnotatedExpression (Lorg/jetbrains/kotlin/psi/KtAnnotatedExpression;)V
	public synthetic fun visitAnnotatedExpression (Lorg/jetbrains/kotlin/psi/KtAnnotatedExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitAnnotatedExpression (Lorg/jetbrains/kotlin/psi/KtAnnotatedExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitAnnotation (Lorg/jetbrains/kotlin/psi/KtAnnotation;)V
	public synthetic fun visitAnnotation (Lorg/jetbrains/kotlin/psi/KtAnnotation;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitAnnotation (Lorg/jetbrains/kotlin/psi/KtAnnotation;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitAnnotationEntry (Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;)V
	public synthetic fun visitAnnotationEntry (Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitAnnotationEntry (Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitAnonymousInitializer (Lorg/jetbrains/kotlin/psi/KtAnonymousInitializer;)V
	public synthetic fun visitAnonymousInitializer (Lorg/jetbrains/kotlin/psi/KtAnonymousInitializer;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitAnonymousInitializer (Lorg/jetbrains/kotlin/psi/KtAnonymousInitializer;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitArgument (Lorg/jetbrains/kotlin/psi/KtValueArgument;)V
	public synthetic fun visitArgument (Lorg/jetbrains/kotlin/psi/KtValueArgument;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitArgument (Lorg/jetbrains/kotlin/psi/KtValueArgument;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitArrayAccessExpression (Lorg/jetbrains/kotlin/psi/KtArrayAccessExpression;)V
	public synthetic fun visitArrayAccessExpression (Lorg/jetbrains/kotlin/psi/KtArrayAccessExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitArrayAccessExpression (Lorg/jetbrains/kotlin/psi/KtArrayAccessExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitBinaryExpression (Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V
	public synthetic fun visitBinaryExpression (Lorg/jetbrains/kotlin/psi/KtBinaryExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitBinaryExpression (Lorg/jetbrains/kotlin/psi/KtBinaryExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitBinaryWithTypeRHSExpression (Lorg/jetbrains/kotlin/psi/KtBinaryExpressionWithTypeRHS;)V
	public synthetic fun visitBinaryWithTypeRHSExpression (Lorg/jetbrains/kotlin/psi/KtBinaryExpressionWithTypeRHS;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitBinaryWithTypeRHSExpression (Lorg/jetbrains/kotlin/psi/KtBinaryExpressionWithTypeRHS;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitBlockExpression (Lorg/jetbrains/kotlin/psi/KtBlockExpression;)V
	public synthetic fun visitBlockExpression (Lorg/jetbrains/kotlin/psi/KtBlockExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitBlockExpression (Lorg/jetbrains/kotlin/psi/KtBlockExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitBlockStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtBlockStringTemplateEntry;)V
	public synthetic fun visitBlockStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtBlockStringTemplateEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitBlockStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtBlockStringTemplateEntry;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitBreakExpression (Lorg/jetbrains/kotlin/psi/KtBreakExpression;)V
	public synthetic fun visitBreakExpression (Lorg/jetbrains/kotlin/psi/KtBreakExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitBreakExpression (Lorg/jetbrains/kotlin/psi/KtBreakExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitCallExpression (Lorg/jetbrains/kotlin/psi/KtCallExpression;)V
	public synthetic fun visitCallExpression (Lorg/jetbrains/kotlin/psi/KtCallExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitCallExpression (Lorg/jetbrains/kotlin/psi/KtCallExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitCallableReferenceExpression (Lorg/jetbrains/kotlin/psi/KtCallableReferenceExpression;)V
	public synthetic fun visitCallableReferenceExpression (Lorg/jetbrains/kotlin/psi/KtCallableReferenceExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitCallableReferenceExpression (Lorg/jetbrains/kotlin/psi/KtCallableReferenceExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitCatchSection (Lorg/jetbrains/kotlin/psi/KtCatchClause;)V
	public synthetic fun visitCatchSection (Lorg/jetbrains/kotlin/psi/KtCatchClause;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitCatchSection (Lorg/jetbrains/kotlin/psi/KtCatchClause;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitClass (Lorg/jetbrains/kotlin/psi/KtClass;)V
	public synthetic fun visitClass (Lorg/jetbrains/kotlin/psi/KtClass;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitClass (Lorg/jetbrains/kotlin/psi/KtClass;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitClassBody (Lorg/jetbrains/kotlin/psi/KtClassBody;)V
	public synthetic fun visitClassBody (Lorg/jetbrains/kotlin/psi/KtClassBody;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitClassBody (Lorg/jetbrains/kotlin/psi/KtClassBody;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitClassInitializer (Lorg/jetbrains/kotlin/psi/KtClassInitializer;)V
	public synthetic fun visitClassInitializer (Lorg/jetbrains/kotlin/psi/KtClassInitializer;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitClassInitializer (Lorg/jetbrains/kotlin/psi/KtClassInitializer;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitClassLiteralExpression (Lorg/jetbrains/kotlin/psi/KtClassLiteralExpression;)V
	public synthetic fun visitClassLiteralExpression (Lorg/jetbrains/kotlin/psi/KtClassLiteralExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitClassLiteralExpression (Lorg/jetbrains/kotlin/psi/KtClassLiteralExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitClassOrObject (Lorg/jetbrains/kotlin/psi/KtClassOrObject;)V
	public synthetic fun visitClassOrObject (Lorg/jetbrains/kotlin/psi/KtClassOrObject;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitClassOrObject (Lorg/jetbrains/kotlin/psi/KtClassOrObject;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitCollectionLiteralExpression (Lorg/jetbrains/kotlin/psi/KtCollectionLiteralExpression;)V
	public synthetic fun visitCollectionLiteralExpression (Lorg/jetbrains/kotlin/psi/KtCollectionLiteralExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitCollectionLiteralExpression (Lorg/jetbrains/kotlin/psi/KtCollectionLiteralExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitConstantExpression (Lorg/jetbrains/kotlin/psi/KtConstantExpression;)V
	public synthetic fun visitConstantExpression (Lorg/jetbrains/kotlin/psi/KtConstantExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitConstantExpression (Lorg/jetbrains/kotlin/psi/KtConstantExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitConstructor (Lorg/jetbrains/kotlin/psi/KtConstructor;)V
	public synthetic fun visitConstructor (Lorg/jetbrains/kotlin/psi/KtConstructor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitConstructor (Lorg/jetbrains/kotlin/psi/KtConstructor;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitConstructorCalleeExpression (Lorg/jetbrains/kotlin/psi/KtConstructorCalleeExpression;)V
	public synthetic fun visitConstructorCalleeExpression (Lorg/jetbrains/kotlin/psi/KtConstructorCalleeExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitConstructorCalleeExpression (Lorg/jetbrains/kotlin/psi/KtConstructorCalleeExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitConstructorDelegationCall (Lorg/jetbrains/kotlin/psi/KtConstructorDelegationCall;)V
	public synthetic fun visitConstructorDelegationCall (Lorg/jetbrains/kotlin/psi/KtConstructorDelegationCall;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitConstructorDelegationCall (Lorg/jetbrains/kotlin/psi/KtConstructorDelegationCall;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitContextReceiver (Lorg/jetbrains/kotlin/psi/KtContextReceiver;)V
	public synthetic fun visitContextReceiver (Lorg/jetbrains/kotlin/psi/KtContextReceiver;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitContextReceiver (Lorg/jetbrains/kotlin/psi/KtContextReceiver;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitContextReceiverList (Lorg/jetbrains/kotlin/psi/KtContextReceiverList;)V
	public synthetic fun visitContextReceiverList (Lorg/jetbrains/kotlin/psi/KtContextReceiverList;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitContextReceiverList (Lorg/jetbrains/kotlin/psi/KtContextReceiverList;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitContinueExpression (Lorg/jetbrains/kotlin/psi/KtContinueExpression;)V
	public synthetic fun visitContinueExpression (Lorg/jetbrains/kotlin/psi/KtContinueExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitContinueExpression (Lorg/jetbrains/kotlin/psi/KtContinueExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitDeclaration (Lorg/jetbrains/kotlin/psi/KtDeclaration;)V
	public synthetic fun visitDeclaration (Lorg/jetbrains/kotlin/psi/KtDeclaration;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitDeclaration (Lorg/jetbrains/kotlin/psi/KtDeclaration;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitDelegatedSuperTypeEntry (Lorg/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry;)V
	public synthetic fun visitDelegatedSuperTypeEntry (Lorg/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitDelegatedSuperTypeEntry (Lorg/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitDestructuringDeclaration (Lorg/jetbrains/kotlin/psi/KtDestructuringDeclaration;)V
	public synthetic fun visitDestructuringDeclaration (Lorg/jetbrains/kotlin/psi/KtDestructuringDeclaration;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitDestructuringDeclaration (Lorg/jetbrains/kotlin/psi/KtDestructuringDeclaration;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitDestructuringDeclarationEntry (Lorg/jetbrains/kotlin/psi/KtDestructuringDeclarationEntry;)V
	public synthetic fun visitDestructuringDeclarationEntry (Lorg/jetbrains/kotlin/psi/KtDestructuringDeclarationEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitDestructuringDeclarationEntry (Lorg/jetbrains/kotlin/psi/KtDestructuringDeclarationEntry;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitDoWhileExpression (Lorg/jetbrains/kotlin/psi/KtDoWhileExpression;)V
	public synthetic fun visitDoWhileExpression (Lorg/jetbrains/kotlin/psi/KtDoWhileExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitDoWhileExpression (Lorg/jetbrains/kotlin/psi/KtDoWhileExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitDotQualifiedExpression (Lorg/jetbrains/kotlin/psi/KtDotQualifiedExpression;)V
	public synthetic fun visitDotQualifiedExpression (Lorg/jetbrains/kotlin/psi/KtDotQualifiedExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitDotQualifiedExpression (Lorg/jetbrains/kotlin/psi/KtDotQualifiedExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitDoubleColonExpression (Lorg/jetbrains/kotlin/psi/KtDoubleColonExpression;)V
	public synthetic fun visitDoubleColonExpression (Lorg/jetbrains/kotlin/psi/KtDoubleColonExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitDoubleColonExpression (Lorg/jetbrains/kotlin/psi/KtDoubleColonExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitDynamicType (Lorg/jetbrains/kotlin/psi/KtDynamicType;)V
	public synthetic fun visitDynamicType (Lorg/jetbrains/kotlin/psi/KtDynamicType;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitDynamicType (Lorg/jetbrains/kotlin/psi/KtDynamicType;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitEnumEntry (Lorg/jetbrains/kotlin/psi/KtEnumEntry;)V
	public synthetic fun visitEnumEntry (Lorg/jetbrains/kotlin/psi/KtEnumEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitEnumEntry (Lorg/jetbrains/kotlin/psi/KtEnumEntry;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitEscapeStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtEscapeStringTemplateEntry;)V
	public synthetic fun visitEscapeStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtEscapeStringTemplateEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitEscapeStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtEscapeStringTemplateEntry;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitExpression (Lorg/jetbrains/kotlin/psi/KtExpression;)V
	public synthetic fun visitExpression (Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitExpression (Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitExpressionWithLabel (Lorg/jetbrains/kotlin/psi/KtExpressionWithLabel;)V
	public synthetic fun visitExpressionWithLabel (Lorg/jetbrains/kotlin/psi/KtExpressionWithLabel;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitExpressionWithLabel (Lorg/jetbrains/kotlin/psi/KtExpressionWithLabel;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitFinallySection (Lorg/jetbrains/kotlin/psi/KtFinallySection;)V
	public synthetic fun visitFinallySection (Lorg/jetbrains/kotlin/psi/KtFinallySection;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitFinallySection (Lorg/jetbrains/kotlin/psi/KtFinallySection;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitForExpression (Lorg/jetbrains/kotlin/psi/KtForExpression;)V
	public synthetic fun visitForExpression (Lorg/jetbrains/kotlin/psi/KtForExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitForExpression (Lorg/jetbrains/kotlin/psi/KtForExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitFunctionType (Lorg/jetbrains/kotlin/psi/KtFunctionType;)V
	public synthetic fun visitFunctionType (Lorg/jetbrains/kotlin/psi/KtFunctionType;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitFunctionType (Lorg/jetbrains/kotlin/psi/KtFunctionType;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitIfExpression (Lorg/jetbrains/kotlin/psi/KtIfExpression;)V
	public synthetic fun visitIfExpression (Lorg/jetbrains/kotlin/psi/KtIfExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitIfExpression (Lorg/jetbrains/kotlin/psi/KtIfExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitImportAlias (Lorg/jetbrains/kotlin/psi/KtImportAlias;)V
	public fun visitImportDirective (Lorg/jetbrains/kotlin/psi/KtImportDirective;)V
	public synthetic fun visitImportDirective (Lorg/jetbrains/kotlin/psi/KtImportDirective;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitImportDirective (Lorg/jetbrains/kotlin/psi/KtImportDirective;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitImportList (Lorg/jetbrains/kotlin/psi/KtImportList;)V
	public synthetic fun visitImportList (Lorg/jetbrains/kotlin/psi/KtImportList;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitImportList (Lorg/jetbrains/kotlin/psi/KtImportList;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitInitializerList (Lorg/jetbrains/kotlin/psi/KtInitializerList;)V
	public synthetic fun visitInitializerList (Lorg/jetbrains/kotlin/psi/KtInitializerList;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitInitializerList (Lorg/jetbrains/kotlin/psi/KtInitializerList;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitIntersectionType (Lorg/jetbrains/kotlin/psi/KtIntersectionType;)V
	public synthetic fun visitIntersectionType (Lorg/jetbrains/kotlin/psi/KtIntersectionType;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitIntersectionType (Lorg/jetbrains/kotlin/psi/KtIntersectionType;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitIsExpression (Lorg/jetbrains/kotlin/psi/KtIsExpression;)V
	public synthetic fun visitIsExpression (Lorg/jetbrains/kotlin/psi/KtIsExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitIsExpression (Lorg/jetbrains/kotlin/psi/KtIsExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitKtElement (Lorg/jetbrains/kotlin/psi/KtElement;)V
	public synthetic fun visitKtElement (Lorg/jetbrains/kotlin/psi/KtElement;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitKtElement (Lorg/jetbrains/kotlin/psi/KtElement;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitKtFile (Lorg/jetbrains/kotlin/psi/KtFile;)V
	public synthetic fun visitKtFile (Lorg/jetbrains/kotlin/psi/KtFile;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitKtFile (Lorg/jetbrains/kotlin/psi/KtFile;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitLabeledExpression (Lorg/jetbrains/kotlin/psi/KtLabeledExpression;)V
	public synthetic fun visitLabeledExpression (Lorg/jetbrains/kotlin/psi/KtLabeledExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitLabeledExpression (Lorg/jetbrains/kotlin/psi/KtLabeledExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitLambdaExpression (Lorg/jetbrains/kotlin/psi/KtLambdaExpression;)V
	public synthetic fun visitLambdaExpression (Lorg/jetbrains/kotlin/psi/KtLambdaExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitLambdaExpression (Lorg/jetbrains/kotlin/psi/KtLambdaExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitLiteralStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtLiteralStringTemplateEntry;)V
	public synthetic fun visitLiteralStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtLiteralStringTemplateEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitLiteralStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtLiteralStringTemplateEntry;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitLoopExpression (Lorg/jetbrains/kotlin/psi/KtLoopExpression;)V
	public synthetic fun visitLoopExpression (Lorg/jetbrains/kotlin/psi/KtLoopExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitLoopExpression (Lorg/jetbrains/kotlin/psi/KtLoopExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitModifierList (Lorg/jetbrains/kotlin/psi/KtModifierList;)V
	public synthetic fun visitModifierList (Lorg/jetbrains/kotlin/psi/KtModifierList;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitModifierList (Lorg/jetbrains/kotlin/psi/KtModifierList;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitNamedDeclaration (Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)V
	public synthetic fun visitNamedDeclaration (Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitNamedDeclaration (Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitNamedFunction (Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V
	public synthetic fun visitNamedFunction (Lorg/jetbrains/kotlin/psi/KtNamedFunction;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitNamedFunction (Lorg/jetbrains/kotlin/psi/KtNamedFunction;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitNullableType (Lorg/jetbrains/kotlin/psi/KtNullableType;)V
	public synthetic fun visitNullableType (Lorg/jetbrains/kotlin/psi/KtNullableType;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitNullableType (Lorg/jetbrains/kotlin/psi/KtNullableType;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitObjectDeclaration (Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)V
	public synthetic fun visitObjectDeclaration (Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitObjectDeclaration (Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitObjectLiteralExpression (Lorg/jetbrains/kotlin/psi/KtObjectLiteralExpression;)V
	public synthetic fun visitObjectLiteralExpression (Lorg/jetbrains/kotlin/psi/KtObjectLiteralExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitObjectLiteralExpression (Lorg/jetbrains/kotlin/psi/KtObjectLiteralExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitPackageDirective (Lorg/jetbrains/kotlin/psi/KtPackageDirective;)V
	public synthetic fun visitPackageDirective (Lorg/jetbrains/kotlin/psi/KtPackageDirective;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPackageDirective (Lorg/jetbrains/kotlin/psi/KtPackageDirective;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitParameter (Lorg/jetbrains/kotlin/psi/KtParameter;)V
	public synthetic fun visitParameter (Lorg/jetbrains/kotlin/psi/KtParameter;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitParameter (Lorg/jetbrains/kotlin/psi/KtParameter;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitParameterList (Lorg/jetbrains/kotlin/psi/KtParameterList;)V
	public synthetic fun visitParameterList (Lorg/jetbrains/kotlin/psi/KtParameterList;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitParameterList (Lorg/jetbrains/kotlin/psi/KtParameterList;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitParenthesizedExpression (Lorg/jetbrains/kotlin/psi/KtParenthesizedExpression;)V
	public synthetic fun visitParenthesizedExpression (Lorg/jetbrains/kotlin/psi/KtParenthesizedExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitParenthesizedExpression (Lorg/jetbrains/kotlin/psi/KtParenthesizedExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitPostfixExpression (Lorg/jetbrains/kotlin/psi/KtPostfixExpression;)V
	public synthetic fun visitPostfixExpression (Lorg/jetbrains/kotlin/psi/KtPostfixExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitPostfixExpression (Lorg/jetbrains/kotlin/psi/KtPostfixExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitPrefixExpression (Lorg/jetbrains/kotlin/psi/KtPrefixExpression;)V
	public synthetic fun visitPrefixExpression (Lorg/jetbrains/kotlin/psi/KtPrefixExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitPrefixExpression (Lorg/jetbrains/kotlin/psi/KtPrefixExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitPrimaryConstructor (Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)V
	public synthetic fun visitPrimaryConstructor (Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitPrimaryConstructor (Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitProperty (Lorg/jetbrains/kotlin/psi/KtProperty;)V
	public synthetic fun visitProperty (Lorg/jetbrains/kotlin/psi/KtProperty;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitProperty (Lorg/jetbrains/kotlin/psi/KtProperty;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitPropertyAccessor (Lorg/jetbrains/kotlin/psi/KtPropertyAccessor;)V
	public synthetic fun visitPropertyAccessor (Lorg/jetbrains/kotlin/psi/KtPropertyAccessor;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitPropertyAccessor (Lorg/jetbrains/kotlin/psi/KtPropertyAccessor;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitPropertyDelegate (Lorg/jetbrains/kotlin/psi/KtPropertyDelegate;)V
	public synthetic fun visitPropertyDelegate (Lorg/jetbrains/kotlin/psi/KtPropertyDelegate;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitPropertyDelegate (Lorg/jetbrains/kotlin/psi/KtPropertyDelegate;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitQualifiedExpression (Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;)V
	public synthetic fun visitQualifiedExpression (Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitQualifiedExpression (Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitReferenceExpression (Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)V
	public synthetic fun visitReferenceExpression (Lorg/jetbrains/kotlin/psi/KtReferenceExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitReferenceExpression (Lorg/jetbrains/kotlin/psi/KtReferenceExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitReturnExpression (Lorg/jetbrains/kotlin/psi/KtReturnExpression;)V
	public synthetic fun visitReturnExpression (Lorg/jetbrains/kotlin/psi/KtReturnExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitReturnExpression (Lorg/jetbrains/kotlin/psi/KtReturnExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitSafeQualifiedExpression (Lorg/jetbrains/kotlin/psi/KtSafeQualifiedExpression;)V
	public synthetic fun visitSafeQualifiedExpression (Lorg/jetbrains/kotlin/psi/KtSafeQualifiedExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitSafeQualifiedExpression (Lorg/jetbrains/kotlin/psi/KtSafeQualifiedExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitScript (Lorg/jetbrains/kotlin/psi/KtScript;)V
	public synthetic fun visitScript (Lorg/jetbrains/kotlin/psi/KtScript;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitScript (Lorg/jetbrains/kotlin/psi/KtScript;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitScriptInitializer (Lorg/jetbrains/kotlin/psi/KtScriptInitializer;)V
	public synthetic fun visitScriptInitializer (Lorg/jetbrains/kotlin/psi/KtScriptInitializer;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitScriptInitializer (Lorg/jetbrains/kotlin/psi/KtScriptInitializer;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitSecondaryConstructor (Lorg/jetbrains/kotlin/psi/KtSecondaryConstructor;)V
	public synthetic fun visitSecondaryConstructor (Lorg/jetbrains/kotlin/psi/KtSecondaryConstructor;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitSecondaryConstructor (Lorg/jetbrains/kotlin/psi/KtSecondaryConstructor;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitSelfType (Lorg/jetbrains/kotlin/psi/KtSelfType;)V
	public synthetic fun visitSelfType (Lorg/jetbrains/kotlin/psi/KtSelfType;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitSelfType (Lorg/jetbrains/kotlin/psi/KtSelfType;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitSimpleNameExpression (Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;)V
	public synthetic fun visitSimpleNameExpression (Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitSimpleNameExpression (Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitSimpleNameStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtSimpleNameStringTemplateEntry;)V
	public synthetic fun visitSimpleNameStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtSimpleNameStringTemplateEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitSimpleNameStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtSimpleNameStringTemplateEntry;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtStringTemplateEntry;)V
	public synthetic fun visitStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtStringTemplateEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtStringTemplateEntry;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitStringTemplateEntryWithExpression (Lorg/jetbrains/kotlin/psi/KtStringTemplateEntryWithExpression;)V
	public synthetic fun visitStringTemplateEntryWithExpression (Lorg/jetbrains/kotlin/psi/KtStringTemplateEntryWithExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitStringTemplateEntryWithExpression (Lorg/jetbrains/kotlin/psi/KtStringTemplateEntryWithExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitStringTemplateExpression (Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)V
	public synthetic fun visitStringTemplateExpression (Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitStringTemplateExpression (Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitSuperExpression (Lorg/jetbrains/kotlin/psi/KtSuperExpression;)V
	public synthetic fun visitSuperExpression (Lorg/jetbrains/kotlin/psi/KtSuperExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitSuperExpression (Lorg/jetbrains/kotlin/psi/KtSuperExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitSuperTypeCallEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeCallEntry;)V
	public synthetic fun visitSuperTypeCallEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeCallEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitSuperTypeCallEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeCallEntry;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitSuperTypeEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeEntry;)V
	public synthetic fun visitSuperTypeEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitSuperTypeEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeEntry;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitSuperTypeList (Lorg/jetbrains/kotlin/psi/KtSuperTypeList;)V
	public synthetic fun visitSuperTypeList (Lorg/jetbrains/kotlin/psi/KtSuperTypeList;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitSuperTypeList (Lorg/jetbrains/kotlin/psi/KtSuperTypeList;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitSuperTypeListEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeListEntry;)V
	public synthetic fun visitSuperTypeListEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeListEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitSuperTypeListEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeListEntry;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitThisExpression (Lorg/jetbrains/kotlin/psi/KtThisExpression;)V
	public synthetic fun visitThisExpression (Lorg/jetbrains/kotlin/psi/KtThisExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitThisExpression (Lorg/jetbrains/kotlin/psi/KtThisExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitThrowExpression (Lorg/jetbrains/kotlin/psi/KtThrowExpression;)V
	public synthetic fun visitThrowExpression (Lorg/jetbrains/kotlin/psi/KtThrowExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitThrowExpression (Lorg/jetbrains/kotlin/psi/KtThrowExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitTryExpression (Lorg/jetbrains/kotlin/psi/KtTryExpression;)V
	public synthetic fun visitTryExpression (Lorg/jetbrains/kotlin/psi/KtTryExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitTryExpression (Lorg/jetbrains/kotlin/psi/KtTryExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitTypeAlias (Lorg/jetbrains/kotlin/psi/KtTypeAlias;)V
	public synthetic fun visitTypeAlias (Lorg/jetbrains/kotlin/psi/KtTypeAlias;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitTypeAlias (Lorg/jetbrains/kotlin/psi/KtTypeAlias;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitTypeArgumentList (Lorg/jetbrains/kotlin/psi/KtTypeArgumentList;)V
	public synthetic fun visitTypeArgumentList (Lorg/jetbrains/kotlin/psi/KtTypeArgumentList;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitTypeArgumentList (Lorg/jetbrains/kotlin/psi/KtTypeArgumentList;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitTypeConstraint (Lorg/jetbrains/kotlin/psi/KtTypeConstraint;)V
	public synthetic fun visitTypeConstraint (Lorg/jetbrains/kotlin/psi/KtTypeConstraint;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitTypeConstraint (Lorg/jetbrains/kotlin/psi/KtTypeConstraint;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitTypeConstraintList (Lorg/jetbrains/kotlin/psi/KtTypeConstraintList;)V
	public synthetic fun visitTypeConstraintList (Lorg/jetbrains/kotlin/psi/KtTypeConstraintList;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitTypeConstraintList (Lorg/jetbrains/kotlin/psi/KtTypeConstraintList;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitTypeParameter (Lorg/jetbrains/kotlin/psi/KtTypeParameter;)V
	public synthetic fun visitTypeParameter (Lorg/jetbrains/kotlin/psi/KtTypeParameter;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitTypeParameter (Lorg/jetbrains/kotlin/psi/KtTypeParameter;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitTypeParameterList (Lorg/jetbrains/kotlin/psi/KtTypeParameterList;)V
	public synthetic fun visitTypeParameterList (Lorg/jetbrains/kotlin/psi/KtTypeParameterList;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitTypeParameterList (Lorg/jetbrains/kotlin/psi/KtTypeParameterList;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitTypeProjection (Lorg/jetbrains/kotlin/psi/KtTypeProjection;)V
	public synthetic fun visitTypeProjection (Lorg/jetbrains/kotlin/psi/KtTypeProjection;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitTypeProjection (Lorg/jetbrains/kotlin/psi/KtTypeProjection;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitTypeReference (Lorg/jetbrains/kotlin/psi/KtTypeReference;)V
	public synthetic fun visitTypeReference (Lorg/jetbrains/kotlin/psi/KtTypeReference;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitTypeReference (Lorg/jetbrains/kotlin/psi/KtTypeReference;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitUnaryExpression (Lorg/jetbrains/kotlin/psi/KtUnaryExpression;)V
	public synthetic fun visitUnaryExpression (Lorg/jetbrains/kotlin/psi/KtUnaryExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitUnaryExpression (Lorg/jetbrains/kotlin/psi/KtUnaryExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitUserType (Lorg/jetbrains/kotlin/psi/KtUserType;)V
	public synthetic fun visitUserType (Lorg/jetbrains/kotlin/psi/KtUserType;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitUserType (Lorg/jetbrains/kotlin/psi/KtUserType;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitValueArgumentList (Lorg/jetbrains/kotlin/psi/KtValueArgumentList;)V
	public synthetic fun visitValueArgumentList (Lorg/jetbrains/kotlin/psi/KtValueArgumentList;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitValueArgumentList (Lorg/jetbrains/kotlin/psi/KtValueArgumentList;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitWhenConditionInRange (Lorg/jetbrains/kotlin/psi/KtWhenConditionInRange;)V
	public synthetic fun visitWhenConditionInRange (Lorg/jetbrains/kotlin/psi/KtWhenConditionInRange;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitWhenConditionInRange (Lorg/jetbrains/kotlin/psi/KtWhenConditionInRange;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitWhenConditionIsPattern (Lorg/jetbrains/kotlin/psi/KtWhenConditionIsPattern;)V
	public synthetic fun visitWhenConditionIsPattern (Lorg/jetbrains/kotlin/psi/KtWhenConditionIsPattern;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitWhenConditionIsPattern (Lorg/jetbrains/kotlin/psi/KtWhenConditionIsPattern;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitWhenConditionWithExpression (Lorg/jetbrains/kotlin/psi/KtWhenConditionWithExpression;)V
	public synthetic fun visitWhenConditionWithExpression (Lorg/jetbrains/kotlin/psi/KtWhenConditionWithExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitWhenConditionWithExpression (Lorg/jetbrains/kotlin/psi/KtWhenConditionWithExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitWhenEntry (Lorg/jetbrains/kotlin/psi/KtWhenEntry;)V
	public synthetic fun visitWhenEntry (Lorg/jetbrains/kotlin/psi/KtWhenEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitWhenEntry (Lorg/jetbrains/kotlin/psi/KtWhenEntry;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitWhenExpression (Lorg/jetbrains/kotlin/psi/KtWhenExpression;)V
	public synthetic fun visitWhenExpression (Lorg/jetbrains/kotlin/psi/KtWhenExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitWhenExpression (Lorg/jetbrains/kotlin/psi/KtWhenExpression;Ljava/lang/Void;)Ljava/lang/Void;
	public fun visitWhileExpression (Lorg/jetbrains/kotlin/psi/KtWhileExpression;)V
	public synthetic fun visitWhileExpression (Lorg/jetbrains/kotlin/psi/KtWhileExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitWhileExpression (Lorg/jetbrains/kotlin/psi/KtWhileExpression;Ljava/lang/Void;)Ljava/lang/Void;
}

public class org/jetbrains/kotlin/psi/KtVisitorVoidWithParameter : org/jetbrains/kotlin/psi/KtVisitor {
	public fun <init> ()V
	public synthetic fun visitAnnotatedExpression (Lorg/jetbrains/kotlin/psi/KtAnnotatedExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitAnnotatedExpression (Lorg/jetbrains/kotlin/psi/KtAnnotatedExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitAnnotatedExpressionVoid (Lorg/jetbrains/kotlin/psi/KtAnnotatedExpression;Ljava/lang/Object;)V
	public synthetic fun visitAnnotation (Lorg/jetbrains/kotlin/psi/KtAnnotation;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitAnnotation (Lorg/jetbrains/kotlin/psi/KtAnnotation;Ljava/lang/Object;)Ljava/lang/Void;
	public synthetic fun visitAnnotationEntry (Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitAnnotationEntry (Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitAnnotationEntryVoid (Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;Ljava/lang/Object;)V
	public fun visitAnnotationVoid (Lorg/jetbrains/kotlin/psi/KtAnnotation;Ljava/lang/Object;)V
	public synthetic fun visitAnonymousInitializer (Lorg/jetbrains/kotlin/psi/KtAnonymousInitializer;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitAnonymousInitializer (Lorg/jetbrains/kotlin/psi/KtAnonymousInitializer;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitAnonymousInitializerVoid (Lorg/jetbrains/kotlin/psi/KtAnonymousInitializer;Ljava/lang/Object;)V
	public synthetic fun visitArgument (Lorg/jetbrains/kotlin/psi/KtValueArgument;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitArgument (Lorg/jetbrains/kotlin/psi/KtValueArgument;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitArgumentVoid (Lorg/jetbrains/kotlin/psi/KtValueArgument;Ljava/lang/Object;)V
	public synthetic fun visitArrayAccessExpression (Lorg/jetbrains/kotlin/psi/KtArrayAccessExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitArrayAccessExpression (Lorg/jetbrains/kotlin/psi/KtArrayAccessExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitArrayAccessExpressionVoid (Lorg/jetbrains/kotlin/psi/KtArrayAccessExpression;Ljava/lang/Object;)V
	public synthetic fun visitBinaryExpression (Lorg/jetbrains/kotlin/psi/KtBinaryExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitBinaryExpression (Lorg/jetbrains/kotlin/psi/KtBinaryExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitBinaryExpressionVoid (Lorg/jetbrains/kotlin/psi/KtBinaryExpression;Ljava/lang/Object;)V
	public synthetic fun visitBinaryWithTypeRHSExpression (Lorg/jetbrains/kotlin/psi/KtBinaryExpressionWithTypeRHS;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitBinaryWithTypeRHSExpression (Lorg/jetbrains/kotlin/psi/KtBinaryExpressionWithTypeRHS;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitBinaryWithTypeRHSExpressionVoid (Lorg/jetbrains/kotlin/psi/KtBinaryExpressionWithTypeRHS;Ljava/lang/Object;)V
	public synthetic fun visitBlockExpression (Lorg/jetbrains/kotlin/psi/KtBlockExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitBlockExpression (Lorg/jetbrains/kotlin/psi/KtBlockExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitBlockExpressionVoid (Lorg/jetbrains/kotlin/psi/KtBlockExpression;Ljava/lang/Object;)V
	public synthetic fun visitBlockStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtBlockStringTemplateEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitBlockStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtBlockStringTemplateEntry;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitBlockStringTemplateEntryVoid (Lorg/jetbrains/kotlin/psi/KtBlockStringTemplateEntry;Ljava/lang/Object;)V
	public synthetic fun visitBreakExpression (Lorg/jetbrains/kotlin/psi/KtBreakExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitBreakExpression (Lorg/jetbrains/kotlin/psi/KtBreakExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitBreakExpressionVoid (Lorg/jetbrains/kotlin/psi/KtBreakExpression;Ljava/lang/Object;)V
	public synthetic fun visitCallExpression (Lorg/jetbrains/kotlin/psi/KtCallExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitCallExpression (Lorg/jetbrains/kotlin/psi/KtCallExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitCallExpressionVoid (Lorg/jetbrains/kotlin/psi/KtCallExpression;Ljava/lang/Object;)V
	public synthetic fun visitCallableReferenceExpression (Lorg/jetbrains/kotlin/psi/KtCallableReferenceExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitCallableReferenceExpression (Lorg/jetbrains/kotlin/psi/KtCallableReferenceExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitCallableReferenceExpressionVoid (Lorg/jetbrains/kotlin/psi/KtCallableReferenceExpression;Ljava/lang/Object;)V
	public synthetic fun visitCatchSection (Lorg/jetbrains/kotlin/psi/KtCatchClause;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitCatchSection (Lorg/jetbrains/kotlin/psi/KtCatchClause;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitCatchSectionVoid (Lorg/jetbrains/kotlin/psi/KtCatchClause;Ljava/lang/Object;)V
	public synthetic fun visitClass (Lorg/jetbrains/kotlin/psi/KtClass;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitClass (Lorg/jetbrains/kotlin/psi/KtClass;Ljava/lang/Object;)Ljava/lang/Void;
	public synthetic fun visitClassBody (Lorg/jetbrains/kotlin/psi/KtClassBody;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitClassBody (Lorg/jetbrains/kotlin/psi/KtClassBody;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitClassBodyVoid (Lorg/jetbrains/kotlin/psi/KtClassBody;Ljava/lang/Object;)V
	public synthetic fun visitClassLiteralExpression (Lorg/jetbrains/kotlin/psi/KtClassLiteralExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitClassLiteralExpression (Lorg/jetbrains/kotlin/psi/KtClassLiteralExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitClassLiteralExpressionVoid (Lorg/jetbrains/kotlin/psi/KtClassLiteralExpression;Ljava/lang/Object;)V
	public fun visitClassVoid (Lorg/jetbrains/kotlin/psi/KtClass;Ljava/lang/Object;)V
	public synthetic fun visitCollectionLiteralExpression (Lorg/jetbrains/kotlin/psi/KtCollectionLiteralExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitCollectionLiteralExpression (Lorg/jetbrains/kotlin/psi/KtCollectionLiteralExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitCollectionLiteralExpressionVoid (Lorg/jetbrains/kotlin/psi/KtCollectionLiteralExpression;Ljava/lang/Object;)V
	public synthetic fun visitConstantExpression (Lorg/jetbrains/kotlin/psi/KtConstantExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitConstantExpression (Lorg/jetbrains/kotlin/psi/KtConstantExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitConstantExpressionVoid (Lorg/jetbrains/kotlin/psi/KtConstantExpression;Ljava/lang/Object;)V
	public fun visitConstructorCalleeExpressionVoid (Lorg/jetbrains/kotlin/psi/KtConstructorCalleeExpression;Ljava/lang/Object;)V
	public synthetic fun visitConstructorDelegationCall (Lorg/jetbrains/kotlin/psi/KtConstructorDelegationCall;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitConstructorDelegationCall (Lorg/jetbrains/kotlin/psi/KtConstructorDelegationCall;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitConstructorDelegationCallVoid (Lorg/jetbrains/kotlin/psi/KtConstructorDelegationCall;Ljava/lang/Object;)V
	public synthetic fun visitContinueExpression (Lorg/jetbrains/kotlin/psi/KtContinueExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitContinueExpression (Lorg/jetbrains/kotlin/psi/KtContinueExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitContinueExpressionVoid (Lorg/jetbrains/kotlin/psi/KtContinueExpression;Ljava/lang/Object;)V
	public synthetic fun visitDeclaration (Lorg/jetbrains/kotlin/psi/KtDeclaration;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitDeclaration (Lorg/jetbrains/kotlin/psi/KtDeclaration;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitDeclarationVoid (Lorg/jetbrains/kotlin/psi/KtDeclaration;Ljava/lang/Object;)V
	public synthetic fun visitDelegatedSuperTypeEntry (Lorg/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitDelegatedSuperTypeEntry (Lorg/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitDelegatedSuperTypeEntryVoid (Lorg/jetbrains/kotlin/psi/KtDelegatedSuperTypeEntry;Ljava/lang/Object;)V
	public synthetic fun visitDestructuringDeclaration (Lorg/jetbrains/kotlin/psi/KtDestructuringDeclaration;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitDestructuringDeclaration (Lorg/jetbrains/kotlin/psi/KtDestructuringDeclaration;Ljava/lang/Object;)Ljava/lang/Void;
	public synthetic fun visitDestructuringDeclarationEntry (Lorg/jetbrains/kotlin/psi/KtDestructuringDeclarationEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitDestructuringDeclarationEntry (Lorg/jetbrains/kotlin/psi/KtDestructuringDeclarationEntry;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitDestructuringDeclarationEntryVoid (Lorg/jetbrains/kotlin/psi/KtDestructuringDeclarationEntry;Ljava/lang/Object;)V
	public fun visitDestructuringDeclarationVoid (Lorg/jetbrains/kotlin/psi/KtDestructuringDeclaration;Ljava/lang/Object;)V
	public synthetic fun visitDoWhileExpression (Lorg/jetbrains/kotlin/psi/KtDoWhileExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitDoWhileExpression (Lorg/jetbrains/kotlin/psi/KtDoWhileExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitDoWhileExpressionVoid (Lorg/jetbrains/kotlin/psi/KtDoWhileExpression;Ljava/lang/Object;)V
	public synthetic fun visitDotQualifiedExpression (Lorg/jetbrains/kotlin/psi/KtDotQualifiedExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitDotQualifiedExpression (Lorg/jetbrains/kotlin/psi/KtDotQualifiedExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitDotQualifiedExpressionVoid (Lorg/jetbrains/kotlin/psi/KtDotQualifiedExpression;Ljava/lang/Object;)V
	public synthetic fun visitDoubleColonExpression (Lorg/jetbrains/kotlin/psi/KtDoubleColonExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitDoubleColonExpression (Lorg/jetbrains/kotlin/psi/KtDoubleColonExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitDoubleColonExpressionVoid (Lorg/jetbrains/kotlin/psi/KtDoubleColonExpression;Ljava/lang/Object;)V
	public synthetic fun visitDynamicType (Lorg/jetbrains/kotlin/psi/KtDynamicType;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitDynamicType (Lorg/jetbrains/kotlin/psi/KtDynamicType;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitDynamicTypeVoid (Lorg/jetbrains/kotlin/psi/KtDynamicType;Ljava/lang/Object;)V
	public synthetic fun visitEnumEntry (Lorg/jetbrains/kotlin/psi/KtEnumEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitEnumEntry (Lorg/jetbrains/kotlin/psi/KtEnumEntry;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitEnumEntryVoid (Lorg/jetbrains/kotlin/psi/KtEnumEntry;Ljava/lang/Object;)V
	public synthetic fun visitEscapeStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtEscapeStringTemplateEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitEscapeStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtEscapeStringTemplateEntry;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitEscapeStringTemplateEntryVoid (Lorg/jetbrains/kotlin/psi/KtEscapeStringTemplateEntry;Ljava/lang/Object;)V
	public synthetic fun visitExpression (Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitExpression (Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitExpressionVoid (Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/lang/Object;)V
	public synthetic fun visitExpressionWithLabel (Lorg/jetbrains/kotlin/psi/KtExpressionWithLabel;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitExpressionWithLabel (Lorg/jetbrains/kotlin/psi/KtExpressionWithLabel;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitExpressionWithLabelVoid (Lorg/jetbrains/kotlin/psi/KtExpressionWithLabel;Ljava/lang/Object;)V
	public synthetic fun visitFinallySection (Lorg/jetbrains/kotlin/psi/KtFinallySection;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitFinallySection (Lorg/jetbrains/kotlin/psi/KtFinallySection;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitFinallySectionVoid (Lorg/jetbrains/kotlin/psi/KtFinallySection;Ljava/lang/Object;)V
	public synthetic fun visitForExpression (Lorg/jetbrains/kotlin/psi/KtForExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitForExpression (Lorg/jetbrains/kotlin/psi/KtForExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitForExpressionVoid (Lorg/jetbrains/kotlin/psi/KtForExpression;Ljava/lang/Object;)V
	public synthetic fun visitFunctionType (Lorg/jetbrains/kotlin/psi/KtFunctionType;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitFunctionType (Lorg/jetbrains/kotlin/psi/KtFunctionType;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitFunctionTypeVoid (Lorg/jetbrains/kotlin/psi/KtFunctionType;Ljava/lang/Object;)V
	public synthetic fun visitIfExpression (Lorg/jetbrains/kotlin/psi/KtIfExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitIfExpression (Lorg/jetbrains/kotlin/psi/KtIfExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitIfExpressionVoid (Lorg/jetbrains/kotlin/psi/KtIfExpression;Ljava/lang/Object;)V
	public fun visitImportAliasVoid (Lorg/jetbrains/kotlin/psi/KtImportAlias;Ljava/lang/Object;)V
	public synthetic fun visitImportDirective (Lorg/jetbrains/kotlin/psi/KtImportDirective;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitImportDirective (Lorg/jetbrains/kotlin/psi/KtImportDirective;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitImportDirectiveVoid (Lorg/jetbrains/kotlin/psi/KtImportDirective;Ljava/lang/Object;)V
	public synthetic fun visitImportList (Lorg/jetbrains/kotlin/psi/KtImportList;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitImportList (Lorg/jetbrains/kotlin/psi/KtImportList;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitImportListVoid (Lorg/jetbrains/kotlin/psi/KtImportList;Ljava/lang/Object;)V
	public synthetic fun visitInitializerList (Lorg/jetbrains/kotlin/psi/KtInitializerList;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitInitializerList (Lorg/jetbrains/kotlin/psi/KtInitializerList;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitInitializerListVoid (Lorg/jetbrains/kotlin/psi/KtInitializerList;Ljava/lang/Object;)V
	public synthetic fun visitIsExpression (Lorg/jetbrains/kotlin/psi/KtIsExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitIsExpression (Lorg/jetbrains/kotlin/psi/KtIsExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitIsExpressionVoid (Lorg/jetbrains/kotlin/psi/KtIsExpression;Ljava/lang/Object;)V
	public synthetic fun visitKtElement (Lorg/jetbrains/kotlin/psi/KtElement;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitKtElement (Lorg/jetbrains/kotlin/psi/KtElement;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitKtElementVoid (Lorg/jetbrains/kotlin/psi/KtElement;Ljava/lang/Object;)V
	public synthetic fun visitKtFile (Lorg/jetbrains/kotlin/psi/KtFile;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitKtFile (Lorg/jetbrains/kotlin/psi/KtFile;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitKtFileVoid (Lorg/jetbrains/kotlin/psi/KtFile;Ljava/lang/Object;)V
	public synthetic fun visitLabeledExpression (Lorg/jetbrains/kotlin/psi/KtLabeledExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitLabeledExpression (Lorg/jetbrains/kotlin/psi/KtLabeledExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitLabeledExpressionVoid (Lorg/jetbrains/kotlin/psi/KtLabeledExpression;Ljava/lang/Object;)V
	public synthetic fun visitLambdaExpression (Lorg/jetbrains/kotlin/psi/KtLambdaExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitLambdaExpression (Lorg/jetbrains/kotlin/psi/KtLambdaExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitLambdaExpressionVoid (Lorg/jetbrains/kotlin/psi/KtLambdaExpression;Ljava/lang/Object;)V
	public synthetic fun visitLiteralStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtLiteralStringTemplateEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitLiteralStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtLiteralStringTemplateEntry;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitLiteralStringTemplateEntryVoid (Lorg/jetbrains/kotlin/psi/KtLiteralStringTemplateEntry;Ljava/lang/Object;)V
	public synthetic fun visitLoopExpression (Lorg/jetbrains/kotlin/psi/KtLoopExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitLoopExpression (Lorg/jetbrains/kotlin/psi/KtLoopExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitLoopExpressionVoid (Lorg/jetbrains/kotlin/psi/KtLoopExpression;Ljava/lang/Object;)V
	public synthetic fun visitModifierList (Lorg/jetbrains/kotlin/psi/KtModifierList;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitModifierList (Lorg/jetbrains/kotlin/psi/KtModifierList;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitModifierListVoid (Lorg/jetbrains/kotlin/psi/KtModifierList;Ljava/lang/Object;)V
	public synthetic fun visitNamedDeclaration (Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitNamedDeclaration (Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitNamedDeclarationVoid (Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;Ljava/lang/Object;)V
	public synthetic fun visitNamedFunction (Lorg/jetbrains/kotlin/psi/KtNamedFunction;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitNamedFunction (Lorg/jetbrains/kotlin/psi/KtNamedFunction;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitNamedFunctionVoid (Lorg/jetbrains/kotlin/psi/KtNamedFunction;Ljava/lang/Object;)V
	public synthetic fun visitNullableType (Lorg/jetbrains/kotlin/psi/KtNullableType;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitNullableType (Lorg/jetbrains/kotlin/psi/KtNullableType;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitNullableTypeVoid (Lorg/jetbrains/kotlin/psi/KtNullableType;Ljava/lang/Object;)V
	public synthetic fun visitObjectDeclaration (Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitObjectDeclaration (Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitObjectDeclarationVoid (Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;Ljava/lang/Object;)V
	public synthetic fun visitObjectLiteralExpression (Lorg/jetbrains/kotlin/psi/KtObjectLiteralExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitObjectLiteralExpression (Lorg/jetbrains/kotlin/psi/KtObjectLiteralExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitObjectLiteralExpressionVoid (Lorg/jetbrains/kotlin/psi/KtObjectLiteralExpression;Ljava/lang/Object;)V
	public synthetic fun visitParameter (Lorg/jetbrains/kotlin/psi/KtParameter;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitParameter (Lorg/jetbrains/kotlin/psi/KtParameter;Ljava/lang/Object;)Ljava/lang/Void;
	public synthetic fun visitParameterList (Lorg/jetbrains/kotlin/psi/KtParameterList;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitParameterList (Lorg/jetbrains/kotlin/psi/KtParameterList;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitParameterListVoid (Lorg/jetbrains/kotlin/psi/KtParameterList;Ljava/lang/Object;)V
	public fun visitParameterVoid (Lorg/jetbrains/kotlin/psi/KtParameter;Ljava/lang/Object;)V
	public synthetic fun visitParenthesizedExpression (Lorg/jetbrains/kotlin/psi/KtParenthesizedExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitParenthesizedExpression (Lorg/jetbrains/kotlin/psi/KtParenthesizedExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitParenthesizedExpressionVoid (Lorg/jetbrains/kotlin/psi/KtParenthesizedExpression;Ljava/lang/Object;)V
	public synthetic fun visitPostfixExpression (Lorg/jetbrains/kotlin/psi/KtPostfixExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitPostfixExpression (Lorg/jetbrains/kotlin/psi/KtPostfixExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitPostfixExpressionVoid (Lorg/jetbrains/kotlin/psi/KtPostfixExpression;Ljava/lang/Object;)V
	public synthetic fun visitPrefixExpression (Lorg/jetbrains/kotlin/psi/KtPrefixExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitPrefixExpression (Lorg/jetbrains/kotlin/psi/KtPrefixExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitPrefixExpressionVoid (Lorg/jetbrains/kotlin/psi/KtPrefixExpression;Ljava/lang/Object;)V
	public synthetic fun visitPrimaryConstructor (Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun visitPrimaryConstructor (Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitPrimaryConstructorVoid (Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;Ljava/lang/Object;)V
	public synthetic fun visitProperty (Lorg/jetbrains/kotlin/psi/KtProperty;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitProperty (Lorg/jetbrains/kotlin/psi/KtProperty;Ljava/lang/Object;)Ljava/lang/Void;
	public synthetic fun visitPropertyAccessor (Lorg/jetbrains/kotlin/psi/KtPropertyAccessor;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitPropertyAccessor (Lorg/jetbrains/kotlin/psi/KtPropertyAccessor;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitPropertyAccessorVoid (Lorg/jetbrains/kotlin/psi/KtPropertyAccessor;Ljava/lang/Object;)V
	public synthetic fun visitPropertyDelegate (Lorg/jetbrains/kotlin/psi/KtPropertyDelegate;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitPropertyDelegate (Lorg/jetbrains/kotlin/psi/KtPropertyDelegate;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitPropertyDelegateVoid (Lorg/jetbrains/kotlin/psi/KtPropertyDelegate;Ljava/lang/Object;)V
	public fun visitPropertyVoid (Lorg/jetbrains/kotlin/psi/KtProperty;Ljava/lang/Object;)V
	public synthetic fun visitQualifiedExpression (Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitQualifiedExpression (Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitQualifiedExpressionVoid (Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;Ljava/lang/Object;)V
	public synthetic fun visitReferenceExpression (Lorg/jetbrains/kotlin/psi/KtReferenceExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitReferenceExpression (Lorg/jetbrains/kotlin/psi/KtReferenceExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitReferenceExpressionVoid (Lorg/jetbrains/kotlin/psi/KtReferenceExpression;Ljava/lang/Object;)V
	public synthetic fun visitReturnExpression (Lorg/jetbrains/kotlin/psi/KtReturnExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitReturnExpression (Lorg/jetbrains/kotlin/psi/KtReturnExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitReturnExpressionVoid (Lorg/jetbrains/kotlin/psi/KtReturnExpression;Ljava/lang/Object;)V
	public synthetic fun visitSafeQualifiedExpression (Lorg/jetbrains/kotlin/psi/KtSafeQualifiedExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitSafeQualifiedExpression (Lorg/jetbrains/kotlin/psi/KtSafeQualifiedExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitSafeQualifiedExpressionVoid (Lorg/jetbrains/kotlin/psi/KtSafeQualifiedExpression;Ljava/lang/Object;)V
	public synthetic fun visitScript (Lorg/jetbrains/kotlin/psi/KtScript;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitScript (Lorg/jetbrains/kotlin/psi/KtScript;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitScriptVoid (Lorg/jetbrains/kotlin/psi/KtScript;Ljava/lang/Object;)V
	public fun visitSecondaryConstructorVoid (Lorg/jetbrains/kotlin/psi/KtSecondaryConstructor;Ljava/lang/Object;)V
	public synthetic fun visitSelfType (Lorg/jetbrains/kotlin/psi/KtSelfType;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitSelfType (Lorg/jetbrains/kotlin/psi/KtSelfType;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitSelfTypeVoid (Lorg/jetbrains/kotlin/psi/KtSelfType;Ljava/lang/Object;)V
	public synthetic fun visitSimpleNameExpression (Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitSimpleNameExpression (Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitSimpleNameExpressionVoid (Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;Ljava/lang/Object;)V
	public synthetic fun visitSimpleNameStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtSimpleNameStringTemplateEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitSimpleNameStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtSimpleNameStringTemplateEntry;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitSimpleNameStringTemplateEntryVoid (Lorg/jetbrains/kotlin/psi/KtSimpleNameStringTemplateEntry;Ljava/lang/Object;)V
	public synthetic fun visitStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtStringTemplateEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitStringTemplateEntry (Lorg/jetbrains/kotlin/psi/KtStringTemplateEntry;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitStringTemplateEntryVoid (Lorg/jetbrains/kotlin/psi/KtStringTemplateEntry;Ljava/lang/Object;)V
	public synthetic fun visitStringTemplateEntryWithExpression (Lorg/jetbrains/kotlin/psi/KtStringTemplateEntryWithExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitStringTemplateEntryWithExpression (Lorg/jetbrains/kotlin/psi/KtStringTemplateEntryWithExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitStringTemplateEntryWithExpressionVoid (Lorg/jetbrains/kotlin/psi/KtStringTemplateEntryWithExpression;Ljava/lang/Object;)V
	public synthetic fun visitStringTemplateExpression (Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitStringTemplateExpression (Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitStringTemplateExpressionVoid (Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;Ljava/lang/Object;)V
	public synthetic fun visitSuperExpression (Lorg/jetbrains/kotlin/psi/KtSuperExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitSuperExpression (Lorg/jetbrains/kotlin/psi/KtSuperExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitSuperExpressionVoid (Lorg/jetbrains/kotlin/psi/KtSuperExpression;Ljava/lang/Object;)V
	public synthetic fun visitSuperTypeCallEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeCallEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitSuperTypeCallEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeCallEntry;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitSuperTypeCallEntryVoid (Lorg/jetbrains/kotlin/psi/KtSuperTypeCallEntry;Ljava/lang/Object;)V
	public synthetic fun visitSuperTypeEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitSuperTypeEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeEntry;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitSuperTypeEntryVoid (Lorg/jetbrains/kotlin/psi/KtSuperTypeEntry;Ljava/lang/Object;)V
	public synthetic fun visitSuperTypeList (Lorg/jetbrains/kotlin/psi/KtSuperTypeList;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitSuperTypeList (Lorg/jetbrains/kotlin/psi/KtSuperTypeList;Ljava/lang/Object;)Ljava/lang/Void;
	public synthetic fun visitSuperTypeListEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeListEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitSuperTypeListEntry (Lorg/jetbrains/kotlin/psi/KtSuperTypeListEntry;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitSuperTypeListEntryVoid (Lorg/jetbrains/kotlin/psi/KtSuperTypeListEntry;Ljava/lang/Object;)V
	public fun visitSuperTypeListVoid (Lorg/jetbrains/kotlin/psi/KtSuperTypeList;Ljava/lang/Object;)V
	public synthetic fun visitThisExpression (Lorg/jetbrains/kotlin/psi/KtThisExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitThisExpression (Lorg/jetbrains/kotlin/psi/KtThisExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitThisExpressionVoid (Lorg/jetbrains/kotlin/psi/KtThisExpression;Ljava/lang/Object;)V
	public synthetic fun visitThrowExpression (Lorg/jetbrains/kotlin/psi/KtThrowExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitThrowExpression (Lorg/jetbrains/kotlin/psi/KtThrowExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitThrowExpressionVoid (Lorg/jetbrains/kotlin/psi/KtThrowExpression;Ljava/lang/Object;)V
	public synthetic fun visitTryExpression (Lorg/jetbrains/kotlin/psi/KtTryExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitTryExpression (Lorg/jetbrains/kotlin/psi/KtTryExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitTryExpressionVoid (Lorg/jetbrains/kotlin/psi/KtTryExpression;Ljava/lang/Object;)V
	public synthetic fun visitTypeArgumentList (Lorg/jetbrains/kotlin/psi/KtTypeArgumentList;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitTypeArgumentList (Lorg/jetbrains/kotlin/psi/KtTypeArgumentList;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitTypeArgumentListVoid (Lorg/jetbrains/kotlin/psi/KtTypeArgumentList;Ljava/lang/Object;)V
	public synthetic fun visitTypeConstraint (Lorg/jetbrains/kotlin/psi/KtTypeConstraint;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitTypeConstraint (Lorg/jetbrains/kotlin/psi/KtTypeConstraint;Ljava/lang/Object;)Ljava/lang/Void;
	public synthetic fun visitTypeConstraintList (Lorg/jetbrains/kotlin/psi/KtTypeConstraintList;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitTypeConstraintList (Lorg/jetbrains/kotlin/psi/KtTypeConstraintList;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitTypeConstraintListVoid (Lorg/jetbrains/kotlin/psi/KtTypeConstraintList;Ljava/lang/Object;)V
	public fun visitTypeConstraintVoid (Lorg/jetbrains/kotlin/psi/KtTypeConstraint;Ljava/lang/Object;)V
	public synthetic fun visitTypeParameter (Lorg/jetbrains/kotlin/psi/KtTypeParameter;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitTypeParameter (Lorg/jetbrains/kotlin/psi/KtTypeParameter;Ljava/lang/Object;)Ljava/lang/Void;
	public synthetic fun visitTypeParameterList (Lorg/jetbrains/kotlin/psi/KtTypeParameterList;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitTypeParameterList (Lorg/jetbrains/kotlin/psi/KtTypeParameterList;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitTypeParameterListVoid (Lorg/jetbrains/kotlin/psi/KtTypeParameterList;Ljava/lang/Object;)V
	public fun visitTypeParameterVoid (Lorg/jetbrains/kotlin/psi/KtTypeParameter;Ljava/lang/Object;)V
	public synthetic fun visitTypeProjection (Lorg/jetbrains/kotlin/psi/KtTypeProjection;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitTypeProjection (Lorg/jetbrains/kotlin/psi/KtTypeProjection;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitTypeProjectionVoid (Lorg/jetbrains/kotlin/psi/KtTypeProjection;Ljava/lang/Object;)V
	public synthetic fun visitTypeReference (Lorg/jetbrains/kotlin/psi/KtTypeReference;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitTypeReference (Lorg/jetbrains/kotlin/psi/KtTypeReference;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitTypeReferenceVoid (Lorg/jetbrains/kotlin/psi/KtTypeReference;Ljava/lang/Object;)V
	public synthetic fun visitUnaryExpression (Lorg/jetbrains/kotlin/psi/KtUnaryExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitUnaryExpression (Lorg/jetbrains/kotlin/psi/KtUnaryExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitUnaryExpressionVoid (Lorg/jetbrains/kotlin/psi/KtUnaryExpression;Ljava/lang/Object;)V
	public synthetic fun visitUserType (Lorg/jetbrains/kotlin/psi/KtUserType;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitUserType (Lorg/jetbrains/kotlin/psi/KtUserType;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitUserTypeVoid (Lorg/jetbrains/kotlin/psi/KtUserType;Ljava/lang/Object;)V
	public synthetic fun visitValueArgumentList (Lorg/jetbrains/kotlin/psi/KtValueArgumentList;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitValueArgumentList (Lorg/jetbrains/kotlin/psi/KtValueArgumentList;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitValueArgumentListVoid (Lorg/jetbrains/kotlin/psi/KtValueArgumentList;Ljava/lang/Object;)V
	public synthetic fun visitWhenConditionInRange (Lorg/jetbrains/kotlin/psi/KtWhenConditionInRange;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitWhenConditionInRange (Lorg/jetbrains/kotlin/psi/KtWhenConditionInRange;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitWhenConditionInRangeVoid (Lorg/jetbrains/kotlin/psi/KtWhenConditionInRange;Ljava/lang/Object;)V
	public synthetic fun visitWhenConditionIsPattern (Lorg/jetbrains/kotlin/psi/KtWhenConditionIsPattern;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitWhenConditionIsPattern (Lorg/jetbrains/kotlin/psi/KtWhenConditionIsPattern;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitWhenConditionIsPatternVoid (Lorg/jetbrains/kotlin/psi/KtWhenConditionIsPattern;Ljava/lang/Object;)V
	public synthetic fun visitWhenConditionWithExpression (Lorg/jetbrains/kotlin/psi/KtWhenConditionWithExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitWhenConditionWithExpression (Lorg/jetbrains/kotlin/psi/KtWhenConditionWithExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitWhenConditionWithExpressionVoid (Lorg/jetbrains/kotlin/psi/KtWhenConditionWithExpression;Ljava/lang/Object;)V
	public synthetic fun visitWhenEntry (Lorg/jetbrains/kotlin/psi/KtWhenEntry;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitWhenEntry (Lorg/jetbrains/kotlin/psi/KtWhenEntry;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitWhenEntryVoid (Lorg/jetbrains/kotlin/psi/KtWhenEntry;Ljava/lang/Object;)V
	public synthetic fun visitWhenExpression (Lorg/jetbrains/kotlin/psi/KtWhenExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitWhenExpression (Lorg/jetbrains/kotlin/psi/KtWhenExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitWhenExpressionVoid (Lorg/jetbrains/kotlin/psi/KtWhenExpression;Ljava/lang/Object;)V
	public synthetic fun visitWhileExpression (Lorg/jetbrains/kotlin/psi/KtWhileExpression;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun visitWhileExpression (Lorg/jetbrains/kotlin/psi/KtWhileExpression;Ljava/lang/Object;)Ljava/lang/Void;
	public fun visitWhileExpressionVoid (Lorg/jetbrains/kotlin/psi/KtWhileExpression;Ljava/lang/Object;)V
}

public abstract class org/jetbrains/kotlin/psi/KtWhenCondition : org/jetbrains/kotlin/psi/KtElementImpl {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
}

public class org/jetbrains/kotlin/psi/KtWhenConditionInRange : org/jetbrains/kotlin/psi/KtWhenCondition {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getOperationReference ()Lorg/jetbrains/kotlin/psi/KtOperationReferenceExpression;
	public fun getRangeExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun isNegated ()Z
}

public class org/jetbrains/kotlin/psi/KtWhenConditionIsPattern : org/jetbrains/kotlin/psi/KtWhenCondition {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getTypeReference ()Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public fun isNegated ()Z
}

public class org/jetbrains/kotlin/psi/KtWhenConditionWithExpression : org/jetbrains/kotlin/psi/KtWhenCondition {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
}

public class org/jetbrains/kotlin/psi/KtWhenEntry : org/jetbrains/kotlin/psi/KtElementImpl {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getArrow ()Lcom/intellij/psi/PsiElement;
	public fun getConditions ()[Lorg/jetbrains/kotlin/psi/KtWhenCondition;
	public fun getElseKeyword ()Lcom/intellij/psi/PsiElement;
	public fun getExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getGuard ()Lorg/jetbrains/kotlin/psi/KtWhenEntryGuard;
	public fun getTrailingComma ()Lcom/intellij/psi/PsiElement;
	public fun isElse ()Z
}

public final class org/jetbrains/kotlin/psi/KtWhenEntryGuard : org/jetbrains/kotlin/psi/KtElementImpl {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public final fun getExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
}

public class org/jetbrains/kotlin/psi/KtWhenExpression : org/jetbrains/kotlin/psi/KtExpressionImpl {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getCloseBrace ()Lcom/intellij/psi/PsiElement;
	public fun getElseExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getEntries ()Ljava/util/List;
	public fun getLeftParenthesis ()Lcom/intellij/psi/PsiElement;
	public fun getOpenBrace ()Lcom/intellij/psi/PsiElement;
	public fun getRightParenthesis ()Lcom/intellij/psi/PsiElement;
	public fun getSubjectExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public fun getSubjectVariable ()Lorg/jetbrains/kotlin/psi/KtProperty;
	public fun getWhenKeyword ()Lcom/intellij/psi/PsiElement;
}

public class org/jetbrains/kotlin/psi/KtWhileExpression : org/jetbrains/kotlin/psi/KtWhileExpressionBase {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun accept (Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract class org/jetbrains/kotlin/psi/KtWhileExpressionBase : org/jetbrains/kotlin/psi/KtLoopExpression {
	public fun <init> (Lcom/intellij/lang/ASTNode;)V
	public fun getCondition ()Lorg/jetbrains/kotlin/psi/KtExpression;
}

public abstract interface class org/jetbrains/kotlin/psi/LambdaArgument : org/jetbrains/kotlin/psi/ValueArgument {
	public abstract fun getLambdaExpression ()Lorg/jetbrains/kotlin/psi/KtLambdaExpression;
}

public final class org/jetbrains/kotlin/psi/UserDataProperty {
	public fun <init> (Lcom/intellij/openapi/util/Key;)V
	public final fun getKey ()Lcom/intellij/openapi/util/Key;
	public final fun getValue (Lcom/intellij/openapi/util/UserDataHolder;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public final fun setValue (Lcom/intellij/openapi/util/UserDataHolder;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public abstract interface class org/jetbrains/kotlin/psi/ValueArgument {
	public abstract fun asElement ()Lorg/jetbrains/kotlin/psi/KtElement;
	public abstract fun getArgumentExpression ()Lorg/jetbrains/kotlin/psi/KtExpression;
	public abstract fun getArgumentName ()Lorg/jetbrains/kotlin/psi/ValueArgumentName;
	public abstract fun getSpreadElement ()Lcom/intellij/psi/impl/source/tree/LeafPsiElement;
	public abstract fun isExternal ()Z
	public abstract fun isNamed ()Z
	public fun isSpread ()Z
}

public abstract interface class org/jetbrains/kotlin/psi/ValueArgumentName {
	public abstract fun getAsName ()Lorg/jetbrains/kotlin/name/Name;
	public abstract fun getReferenceExpression ()Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;
}

public final class org/jetbrains/kotlin/psi/addRemoveModifier/AddRemoveModifierKt {
	public static final fun addAnnotationEntry (Lorg/jetbrains/kotlin/psi/KtModifierListOwner;Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;)Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;
	public static final fun addModifier (Lorg/jetbrains/kotlin/psi/KtModifierListOwner;Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)V
	public static final fun getMODIFIERS_ORDER ()Ljava/util/List;
	public static final fun removeModifier (Lorg/jetbrains/kotlin/psi/KtModifierListOwner;Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)V
	public static final fun setModifierList (Lorg/jetbrains/kotlin/psi/KtModifierListOwner;Lorg/jetbrains/kotlin/psi/KtModifierList;)V
	public static final fun sortModifiers (Ljava/util/List;)Ljava/util/List;
}

public final class org/jetbrains/kotlin/psi/findDocComment/FindDocCommentKt {
	public static final fun findDocComment (Lorg/jetbrains/kotlin/psi/KtDeclaration;)Lorg/jetbrains/kotlin/kdoc/psi/api/KDoc;
}

public final class org/jetbrains/kotlin/psi/psiUtil/KtPsiUtilKt {
	public static final fun addTypeArgument (Lorg/jetbrains/kotlin/psi/KtCallExpression;Lorg/jetbrains/kotlin/psi/KtTypeProjection;)V
	public static final fun asAssignment (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtBinaryExpression;
	public static final fun astReplace (Lcom/intellij/psi/PsiElement;Lcom/intellij/psi/PsiElement;)V
	public static final fun blockExpressionsOrSingle (Lorg/jetbrains/kotlin/psi/KtElement;)Lkotlin/sequences/Sequence;
	public static final fun canPlaceAfterSimpleNameEntry (Lcom/intellij/psi/PsiElement;)Z
	public static final fun collectAnnotationEntriesFromStubOrPsi (Lorg/jetbrains/kotlin/psi/KtAnnotationsContainer;)Ljava/util/List;
	public static final fun containingClass (Lorg/jetbrains/kotlin/psi/KtElement;)Lorg/jetbrains/kotlin/psi/KtClass;
	public static final fun contentRange (Lorg/jetbrains/kotlin/psi/KtBlockExpression;)Lorg/jetbrains/kotlin/psi/psiUtil/PsiChildRange;
	public static final fun effectiveDeclarations (Lorg/jetbrains/kotlin/psi/KtClassOrObject;)Ljava/util/List;
	public static final fun findAssignment (Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/psi/KtBinaryExpression;
	public static final fun findFunctionByName (Lorg/jetbrains/kotlin/psi/KtClassOrObject;Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;
	public static final fun findLabelAndCall (Lorg/jetbrains/kotlin/psi/KtFunctionLiteral;)Lkotlin/Pair;
	public static final fun findPropertyByName (Lorg/jetbrains/kotlin/psi/KtClassOrObject;Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;
	public static final fun getAnnotationEntries (Lorg/jetbrains/kotlin/psi/KtExpression;)Ljava/util/List;
	public static final fun getArgumentIndex (Lorg/jetbrains/kotlin/psi/KtValueArgument;)I
	public static final fun getAssignmentByLHS (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtBinaryExpression;
	public static final fun getBinaryWithTypeParent (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtBinaryExpressionWithTypeRHS;
	public static final fun getCallNameExpression (Lorg/jetbrains/kotlin/psi/KtCallElement;)Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;
	public static final fun getContainingClassOrObject (Lorg/jetbrains/kotlin/psi/KtDeclaration;)Lorg/jetbrains/kotlin/psi/KtClassOrObject;
	public static final fun getContentRange (Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)Lcom/intellij/openapi/util/TextRange;
	public static final fun getFileOrScriptDeclarations (Lorg/jetbrains/kotlin/psi/KtFile;)Ljava/util/List;
	public static final fun getImportedSimpleNameByImportAlias (Lorg/jetbrains/kotlin/psi/KtFile;Ljava/lang/String;)Ljava/lang/String;
	public static final fun getLabeledParent (Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtLabeledExpression;
	public static final fun getOrCreateParameterList (Lorg/jetbrains/kotlin/psi/KtFunctionLiteral;)Lorg/jetbrains/kotlin/psi/KtParameterList;
	public static final fun getOrCreateValueArgumentList (Lorg/jetbrains/kotlin/psi/KtCallExpression;)Lorg/jetbrains/kotlin/psi/KtValueArgumentList;
	public static final fun getOutermostParenthesizerOrThis (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;
	public static final fun getParentSubstitute (Lorg/jetbrains/kotlin/psi/KtElement;)Lcom/intellij/psi/PsiElement;
	public static final fun getPlainContent (Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)Ljava/lang/String;
	public static final fun getPossiblyQualifiedCallExpression (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtCallExpression;
	public static final fun getQualifiedElement (Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;)Lorg/jetbrains/kotlin/psi/KtElement;
	public static final fun getQualifiedElementOrCallableRef (Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;)Lorg/jetbrains/kotlin/psi/KtElement;
	public static final fun getQualifiedElementSelector (Lorg/jetbrains/kotlin/psi/KtElement;)Lorg/jetbrains/kotlin/psi/KtElement;
	public static final fun getQualifiedExpressionForReceiver (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;
	public static final fun getQualifiedExpressionForReceiverOrThis (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;
	public static final fun getQualifiedExpressionForSelector (Lorg/jetbrains/kotlin/psi/KtElement;)Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;
	public static final fun getQualifiedExpressionForSelectorOrThis (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;
	public static final fun getReceiverExpression (Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;
	public static final fun getSuperNames (Lcom/intellij/extapi/psi/StubBasedPsiElementBase;)Ljava/util/List;
	public static final fun getTopmostParentQualifiedExpressionForSelector (Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;)Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;
	public static final fun getTrailingCommaByClosingElement (Lcom/intellij/psi/PsiElement;)Lcom/intellij/psi/PsiElement;
	public static final fun getTrailingCommaByElementsList (Lcom/intellij/psi/PsiElement;)Lcom/intellij/psi/PsiElement;
	public static final fun getValueParameterList (Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Lorg/jetbrains/kotlin/psi/KtParameterList;
	public static final fun getValueParameters (Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Ljava/util/List;
	public static final fun hasBody (Lorg/jetbrains/kotlin/psi/KtDeclaration;)Z
	public static final fun inferClassIdByPsi (Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Lorg/jetbrains/kotlin/name/ClassId;
	public static final fun isAbstract (Lorg/jetbrains/kotlin/psi/KtClass;)Z
	public static final fun isCallee (Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;)Z
	public static final fun isContextualDeclaration (Lorg/jetbrains/kotlin/psi/KtElement;)Z
	public static final fun isContractDescriptionCallPsiCheck (Lorg/jetbrains/kotlin/psi/KtExpression;)Z
	public static final fun isContractDescriptionCallPsiCheck (Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;)Z
	public static final fun isContractPresentPsiCheck (Lorg/jetbrains/kotlin/psi/KtNamedFunction;Z)Z
	public static final fun isDotReceiver (Lorg/jetbrains/kotlin/psi/KtExpression;)Z
	public static final fun isDotSelector (Lorg/jetbrains/kotlin/psi/KtExpression;)Z
	public static final fun isDoubleColonReceiver (Lorg/jetbrains/kotlin/psi/KtExpression;)Z
	public static final fun isExpectDeclaration (Lorg/jetbrains/kotlin/psi/KtDeclaration;)Z
	public static final fun isExtensionDeclaration (Lcom/intellij/psi/PsiElement;)Z
	public static final fun isFirstStatement (Lorg/jetbrains/kotlin/psi/KtElement;)Z
	public static final fun isFunctionalExpression (Lcom/intellij/psi/PsiElement;)Z
	public static final fun isIdentifier (Ljava/lang/String;)Z
	public static final fun isImportDirectiveExpression (Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;)Z
	public static final fun isInImportDirective (Lorg/jetbrains/kotlin/psi/KtExpression;)Z
	public static final fun isLambdaOutsideParentheses (Lorg/jetbrains/kotlin/psi/KtExpression;)Z
	public static final fun isObjectLiteral (Lorg/jetbrains/kotlin/psi/KtClassOrObject;)Z
	public static final fun isPackageDirectiveExpression (Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;)Z
	public static final fun isPlain (Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)Z
	public static final fun isPlainWithEscapes (Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)Z
	public static final fun isPrivate (Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z
	public static final fun isPrivateNestedClassOrObject (Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Z
	public static final fun isPropertyParameter (Lorg/jetbrains/kotlin/psi/KtParameter;)Z
	public static final fun isProtected (Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z
	public static final fun isPublic (Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z
	public static final fun isSingleQuoted (Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)Z
	public static final fun isTopLevelInFileOrScript (Lcom/intellij/psi/PsiElement;)Z
	public static final fun isTopLevelKtOrJavaMember (Lcom/intellij/psi/PsiElement;)Z
	public static final fun isTypeConstructorReference (Lcom/intellij/psi/PsiElement;)Z
	public static final fun isUnderscoreInBackticks (Lorg/jetbrains/kotlin/psi/KtNameReferenceExpression;)Z
	public static final fun lastBlockStatementOrThis (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;
	public static final fun modalityModifier (Lorg/jetbrains/kotlin/psi/KtDeclaration;)Lcom/intellij/psi/PsiElement;
	public static final fun modalityModifierType (Lorg/jetbrains/kotlin/psi/KtDeclaration;)Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final fun nonStaticOuterClasses (Lorg/jetbrains/kotlin/psi/KtElement;)Lkotlin/sequences/Sequence;
	public static final fun parameterIndex (Lcom/intellij/psi/PsiElement;)I
	public static final fun quoteIfNeeded (Ljava/lang/String;)Ljava/lang/String;
	public static final fun referenceExpression (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtReferenceExpression;
	public static final fun safeFqNameForLazyResolve (Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Lorg/jetbrains/kotlin/name/FqName;
	public static final fun safeNameForLazyResolve (Lorg/jetbrains/kotlin/name/Name;)Lorg/jetbrains/kotlin/name/Name;
	public static final fun safeNameForLazyResolve (Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Lorg/jetbrains/kotlin/name/Name;
	public static final fun setParentSubstitute (Lorg/jetbrains/kotlin/psi/KtElement;Lcom/intellij/psi/PsiElement;)V
	public static final fun topParenthesizedParentOrMe (Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;
	public static final fun unwrapNullability (Lorg/jetbrains/kotlin/psi/KtTypeElement;)Lorg/jetbrains/kotlin/psi/KtTypeElement;
	public static final fun visibilityModifier (Lorg/jetbrains/kotlin/psi/KtModifierList;)Lcom/intellij/psi/PsiElement;
	public static final fun visibilityModifier (Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Lcom/intellij/psi/PsiElement;
	public static final fun visibilityModifierType (Lorg/jetbrains/kotlin/psi/KtModifierList;)Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final fun visibilityModifierType (Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
	public static final fun visibilityModifierTypeOrDefault (Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;
}

public final class org/jetbrains/kotlin/psi/psiUtil/PsiChildRange : kotlin/sequences/Sequence {
	public static final field Companion Lorg/jetbrains/kotlin/psi/psiUtil/PsiChildRange$Companion;
	public fun <init> (Lcom/intellij/psi/PsiElement;Lcom/intellij/psi/PsiElement;)V
	public final fun component1 ()Lcom/intellij/psi/PsiElement;
	public final fun component2 ()Lcom/intellij/psi/PsiElement;
	public final fun copy (Lcom/intellij/psi/PsiElement;Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/psi/psiUtil/PsiChildRange;
	public static synthetic fun copy$default (Lorg/jetbrains/kotlin/psi/psiUtil/PsiChildRange;Lcom/intellij/psi/PsiElement;Lcom/intellij/psi/PsiElement;ILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/psiUtil/PsiChildRange;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFirst ()Lcom/intellij/psi/PsiElement;
	public final fun getLast ()Lcom/intellij/psi/PsiElement;
	public fun hashCode ()I
	public final fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/psi/psiUtil/PsiChildRange$Companion {
	public final fun getEMPTY ()Lorg/jetbrains/kotlin/psi/psiUtil/PsiChildRange;
	public final fun singleElement (Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/psi/psiUtil/PsiChildRange;
}

public final class org/jetbrains/kotlin/psi/psiUtil/PsiUtilsKt {
	public static final fun before (Lcom/intellij/psi/PsiElement;Lcom/intellij/psi/PsiElement;)Z
	public static final fun checkDecompiledText (Lcom/intellij/psi/PsiElement;)V
	public static final fun children (Lcom/intellij/lang/ASTNode;)Lkotlin/sequences/Sequence;
	public static final fun closestPsiElement (Lcom/intellij/lang/ASTNode;)Lcom/intellij/psi/PsiElement;
	public static final fun contains (Lcom/intellij/psi/search/SearchScope;Lcom/intellij/psi/PsiElement;)Z
	public static final fun containsInside (Lcom/intellij/openapi/util/TextRange;I)Z
	public static final fun createSmartPointer (Lcom/intellij/psi/PsiElement;)Lcom/intellij/psi/SmartPsiElementPointer;
	public static final fun elementsInRange (Lcom/intellij/psi/PsiFile;Lcom/intellij/openapi/util/TextRange;)Ljava/util/List;
	public static final fun getAllChildren (Lcom/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/psi/psiUtil/PsiChildRange;
	public static final fun getAssignmentLhsIfUnwrappable (Lcom/intellij/lang/LighterASTNode;Lcom/intellij/util/diff/FlyweightCapableTreeStructure;)Lcom/intellij/lang/LighterASTNode;
	public static final fun getAssignmentLhsIfUnwrappable (Lcom/intellij/psi/PsiElement;)Lcom/intellij/psi/PsiElement;
	public static final fun getContainingKtFile (Lcom/intellij/psi/impl/source/tree/LazyParseablePsiElement;)Lorg/jetbrains/kotlin/psi/KtFile;
	public static final fun getElementTextWithContext (Lcom/intellij/psi/PsiElement;)Ljava/lang/String;
	public static final fun getEndOffset (Lcom/intellij/psi/PsiElement;)I
	public static final fun getIfChildIsInBranch (Lcom/intellij/psi/PsiElement;Lcom/intellij/psi/PsiElement;Lkotlin/jvm/functions/Function1;)Lcom/intellij/psi/PsiElement;
	public static final fun getIfChildIsInBranches (Lcom/intellij/psi/PsiElement;Lcom/intellij/psi/PsiElement;Lkotlin/jvm/functions/Function1;)Lcom/intellij/psi/PsiElement;
	public static final fun getNextLeafs (Lcom/intellij/psi/PsiElement;)Lkotlin/sequences/Sequence;
	public static final fun getNextSiblingIgnoringWhitespace (Lcom/intellij/psi/PsiElement;Z)Lcom/intellij/psi/PsiElement;
	public static synthetic fun getNextSiblingIgnoringWhitespace$default (Lcom/intellij/psi/PsiElement;ZILjava/lang/Object;)Lcom/intellij/psi/PsiElement;
	public static final fun getNextSiblingIgnoringWhitespaceAndComments (Lcom/intellij/psi/PsiElement;Z)Lcom/intellij/psi/PsiElement;
	public static synthetic fun getNextSiblingIgnoringWhitespaceAndComments$default (Lcom/intellij/psi/PsiElement;ZILjava/lang/Object;)Lcom/intellij/psi/PsiElement;
	public static final fun getNonStrictParentOfType (Lcom/intellij/psi/PsiElement;Ljava/lang/Class;)Lcom/intellij/psi/PsiElement;
	public static final fun getOutermostParentContainedIn (Lcom/intellij/psi/PsiElement;Lcom/intellij/psi/PsiElement;)Lcom/intellij/psi/PsiElement;
	public static final fun getParentOfTypes (Lcom/intellij/psi/PsiElement;Z[Ljava/lang/Class;)Lcom/intellij/psi/PsiElement;
	public static synthetic fun getParentOfTypes$default (Lcom/intellij/psi/PsiElement;Z[Ljava/lang/Class;ILjava/lang/Object;)Lcom/intellij/psi/PsiElement;
	public static final fun getParentOfTypesAndPredicate (Lcom/intellij/psi/PsiElement;Z[Ljava/lang/Class;Lkotlin/jvm/functions/Function1;)Lcom/intellij/psi/PsiElement;
	public static synthetic fun getParentOfTypesAndPredicate$default (Lcom/intellij/psi/PsiElement;Z[Ljava/lang/Class;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lcom/intellij/psi/PsiElement;
	public static final fun getParents (Lcom/intellij/psi/PsiElement;)Lkotlin/sequences/Sequence;
	public static final fun getParentsWithSelf (Lcom/intellij/psi/PsiElement;)Lkotlin/sequences/Sequence;
	public static final fun getPrevLeafs (Lcom/intellij/psi/PsiElement;)Lkotlin/sequences/Sequence;
	public static final fun getPrevSiblingIgnoringWhitespace (Lcom/intellij/psi/PsiElement;Z)Lcom/intellij/psi/PsiElement;
	public static synthetic fun getPrevSiblingIgnoringWhitespace$default (Lcom/intellij/psi/PsiElement;ZILjava/lang/Object;)Lcom/intellij/psi/PsiElement;
	public static final fun getPrevSiblingIgnoringWhitespaceAndComments (Lcom/intellij/psi/PsiElement;Z)Lcom/intellij/psi/PsiElement;
	public static synthetic fun getPrevSiblingIgnoringWhitespaceAndComments$default (Lcom/intellij/psi/PsiElement;ZILjava/lang/Object;)Lcom/intellij/psi/PsiElement;
	public static final fun getPureEndOffset (Lorg/jetbrains/kotlin/psi/KtPureElement;)I
	public static final fun getPureStartOffset (Lorg/jetbrains/kotlin/psi/KtPureElement;)I
	public static final fun getStartOffset (Lcom/intellij/psi/PsiElement;)I
	public static final fun getStartOffsetIn (Lcom/intellij/psi/PsiElement;Lcom/intellij/psi/PsiElement;)I
	public static final fun getStartOffsetSkippingComments (Lcom/intellij/psi/PsiElement;)I
	public static final fun getText (Lorg/jetbrains/kotlin/psi/psiUtil/PsiChildRange;)Ljava/lang/String;
	public static final fun getTextRange (Lorg/jetbrains/kotlin/psi/psiUtil/PsiChildRange;)Lcom/intellij/openapi/util/TextRange;
	public static final fun getTextRangeWithoutComments (Lcom/intellij/psi/PsiElement;)Lcom/intellij/openapi/util/TextRange;
	public static final fun getTextWithLocation (Lcom/intellij/psi/PsiElement;)Ljava/lang/String;
	public static final fun getUNWRAPPABLE_TOKEN_TYPES ()Ljava/util/Set;
	public static final fun hasActualModifier (Lorg/jetbrains/kotlin/psi/KtModifierList;)Z
	public static final fun hasActualModifier (Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z
	public static final fun hasExpectModifier (Lorg/jetbrains/kotlin/psi/KtModifierList;)Z
	public static final fun hasExpectModifier (Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z
	public static final fun hasFunModifier (Lorg/jetbrains/kotlin/psi/KtModifierList;)Z
	public static final fun hasInnerModifier (Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z
	public static final fun hasSuspendModifier (Lorg/jetbrains/kotlin/psi/KtModifierList;)Z
	public static final fun hasUnwrappableAsAssignmentLhs (Lorg/jetbrains/kotlin/KtSourceElement;)Z
	public static final fun hasValueModifier (Lorg/jetbrains/kotlin/psi/KtModifierList;)Z
	public static final fun isAncestor (Lcom/intellij/psi/PsiElement;Lcom/intellij/psi/PsiElement;Z)Z
	public static synthetic fun isAncestor$default (Lcom/intellij/psi/PsiElement;Lcom/intellij/psi/PsiElement;ZILjava/lang/Object;)Z
	public static final fun isInsideOf (Lcom/intellij/psi/PsiElement;Ljava/lang/Iterable;)Z
	public static final fun isNull (Lorg/jetbrains/kotlin/psi/KtExpression;)Z
	public static final fun leaves (Lcom/intellij/lang/ASTNode;Z)Lkotlin/sequences/Sequence;
	public static synthetic fun leaves$default (Lcom/intellij/lang/ASTNode;ZILjava/lang/Object;)Lkotlin/sequences/Sequence;
	public static final fun nextLeaf (Lcom/intellij/psi/PsiElement;Lkotlin/jvm/functions/Function1;)Lcom/intellij/psi/PsiElement;
	public static final fun nextLeaf (Lcom/intellij/psi/PsiElement;Z)Lcom/intellij/psi/PsiElement;
	public static synthetic fun nextLeaf$default (Lcom/intellij/psi/PsiElement;ZILjava/lang/Object;)Lcom/intellij/psi/PsiElement;
	public static final fun parents (Lcom/intellij/lang/ASTNode;)Lkotlin/sequences/Sequence;
	public static final fun prevLeaf (Lcom/intellij/psi/PsiElement;Lkotlin/jvm/functions/Function1;)Lcom/intellij/psi/PsiElement;
	public static final fun prevLeaf (Lcom/intellij/psi/PsiElement;Z)Lcom/intellij/psi/PsiElement;
	public static synthetic fun prevLeaf$default (Lcom/intellij/psi/PsiElement;ZILjava/lang/Object;)Lcom/intellij/psi/PsiElement;
	public static final fun replaceFileAnnotationList (Lorg/jetbrains/kotlin/psi/KtFile;Lorg/jetbrains/kotlin/psi/KtFileAnnotationList;)Lorg/jetbrains/kotlin/psi/KtFileAnnotationList;
	public static final fun siblings (Lcom/intellij/lang/ASTNode;Z)Lkotlin/sequences/Sequence;
	public static final fun siblings (Lcom/intellij/psi/PsiElement;ZZ)Lkotlin/sequences/Sequence;
	public static synthetic fun siblings$default (Lcom/intellij/lang/ASTNode;ZILjava/lang/Object;)Lkotlin/sequences/Sequence;
	public static synthetic fun siblings$default (Lcom/intellij/psi/PsiElement;ZZILjava/lang/Object;)Lkotlin/sequences/Sequence;
	public static final fun startsWithComment (Lcom/intellij/psi/PsiElement;)Z
	public static final fun trimWhiteSpaces (Lorg/jetbrains/kotlin/psi/psiUtil/PsiChildRange;)Lorg/jetbrains/kotlin/psi/psiUtil/PsiChildRange;
	public static final fun unwrapParenthesesLabelsAndAnnotations (Lcom/intellij/psi/PsiElement;)Lcom/intellij/psi/PsiElement;
	public static final fun unwrapParenthesesLabelsAndAnnotationsDeeply (Lcom/intellij/psi/PsiElement;)Lcom/intellij/psi/PsiElement;
}

public final class org/jetbrains/kotlin/psi/stubs/ConstantValueKind : java/lang/Enum {
	public static final field BOOLEAN_CONSTANT Lorg/jetbrains/kotlin/psi/stubs/ConstantValueKind;
	public static final field CHARACTER_CONSTANT Lorg/jetbrains/kotlin/psi/stubs/ConstantValueKind;
	public static final field FLOAT_CONSTANT Lorg/jetbrains/kotlin/psi/stubs/ConstantValueKind;
	public static final field INTEGER_CONSTANT Lorg/jetbrains/kotlin/psi/stubs/ConstantValueKind;
	public static final field NULL Lorg/jetbrains/kotlin/psi/stubs/ConstantValueKind;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/stubs/ConstantValueKind;
	public static fun values ()[Lorg/jetbrains/kotlin/psi/stubs/ConstantValueKind;
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinAnnotationEntryStub : com/intellij/psi/stubs/StubElement {
	public abstract fun getHasValueArguments ()Z
	public abstract fun getShortName ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinAnnotationUseSiteTargetStub : com/intellij/psi/stubs/StubElement {
	public abstract fun getUseSiteTarget ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinBackingFieldStub : com/intellij/psi/stubs/StubElement {
	public abstract fun getHasInitializer ()Z
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinBlockStringTemplateEntryStub : org/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderWithTextStub {
	public abstract fun getHasMultipleExpressions ()Z
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinCallableStubBase : org/jetbrains/kotlin/psi/stubs/KotlinStubWithFqName {
	public abstract fun isExtension ()Z
	public abstract fun isTopLevel ()Z
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinClassLiteralExpressionStub : com/intellij/psi/stubs/StubElement {
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinClassOrObjectStub : org/jetbrains/kotlin/psi/stubs/KotlinClassifierStub, org/jetbrains/kotlin/psi/stubs/KotlinStubWithFqName {
	public abstract fun getSuperNames ()Ljava/util/List;
	public abstract fun isLocal ()Z
	public abstract fun isTopLevel ()Z
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinClassStub : org/jetbrains/kotlin/psi/stubs/KotlinClassOrObjectStub {
	public abstract fun isClsStubCompiledToJvmDefaultImplementation ()Z
	public abstract fun isEnumEntry ()Z
	public abstract fun isInterface ()Z
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinClassifierStub {
	public abstract fun getClassId ()Lorg/jetbrains/kotlin/name/ClassId;
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinCollectionLiteralExpressionStub : com/intellij/psi/stubs/StubElement {
	public abstract fun getInnerExpressionCount ()I
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinConstantExpressionStub : com/intellij/psi/stubs/StubElement {
	public abstract fun getKind ()Lorg/jetbrains/kotlin/psi/stubs/ConstantValueKind;
	public abstract fun getValue ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinConstructorStub : org/jetbrains/kotlin/psi/stubs/KotlinCallableStubBase, org/jetbrains/kotlin/psi/stubs/KotlinDeclarationWithBodyStub {
	public abstract fun isDelegatedCallToThis ()Z
	public abstract fun isExplicitDelegationCall ()Z
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinContextReceiverStub : com/intellij/psi/stubs/StubElement {
	public abstract fun getLabel ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinContractEffectStub : org/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub {
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinDeclarationWithBodyStub : com/intellij/psi/stubs/StubElement {
	public abstract fun getHasBody ()Z
	public abstract fun getHasNoExpressionBody ()Z
	public abstract fun getMayHaveContract ()Z
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinEnumEntrySuperclassReferenceExpressionStub : com/intellij/psi/stubs/StubElement {
	public abstract fun getReferencedName ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinFileStub : com/intellij/psi/stubs/PsiFileStub {
	public abstract fun findImportsByAlias (Ljava/lang/String;)Ljava/util/List;
	public abstract fun getKind ()Lorg/jetbrains/kotlin/psi/stubs/KotlinFileStubKind;
	public fun getPackageFqName ()Lorg/jetbrains/kotlin/name/FqName;
	public fun isScript ()Z
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinFileStubKind {
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinFileStubKind$Invalid : org/jetbrains/kotlin/psi/stubs/KotlinFileStubKind {
	public abstract fun getErrorMessage ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinFileStubKind$WithPackage : org/jetbrains/kotlin/psi/stubs/KotlinFileStubKind {
	public abstract fun getPackageFqName ()Lorg/jetbrains/kotlin/name/FqName;
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinFileStubKind$WithPackage$Facade : org/jetbrains/kotlin/psi/stubs/KotlinFileStubKind$WithPackage {
	public abstract fun getFacadeFqName ()Lorg/jetbrains/kotlin/name/FqName;
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinFileStubKind$WithPackage$Facade$MultifileClass : org/jetbrains/kotlin/psi/stubs/KotlinFileStubKind$WithPackage$Facade {
	public abstract fun getFacadePartSimpleNames ()Ljava/util/List;
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinFileStubKind$WithPackage$Facade$Simple : org/jetbrains/kotlin/psi/stubs/KotlinFileStubKind$WithPackage$Facade {
	public abstract fun getPartSimpleName ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinFileStubKind$WithPackage$File : org/jetbrains/kotlin/psi/stubs/KotlinFileStubKind$WithPackage {
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinFileStubKind$WithPackage$Script : org/jetbrains/kotlin/psi/stubs/KotlinFileStubKind$WithPackage {
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinFunctionStub : org/jetbrains/kotlin/psi/stubs/KotlinCallableStubBase, org/jetbrains/kotlin/psi/stubs/KotlinDeclarationWithBodyStub {
	public abstract fun getHasTypeParameterListBeforeFunctionName ()Z
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinFunctionTypeStub : com/intellij/psi/stubs/StubElement {
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinImportAliasStub : com/intellij/psi/stubs/NamedStub {
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinImportDirectiveStub : com/intellij/psi/stubs/StubElement {
	public abstract fun getImportedFqName ()Lorg/jetbrains/kotlin/name/FqName;
	public abstract fun isAllUnder ()Z
	public abstract fun isValid ()Z
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinModifierListStub : com/intellij/psi/stubs/StubElement {
	public abstract fun hasModifier (Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)Z
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinNameReferenceExpressionStub : com/intellij/psi/stubs/StubElement {
	public abstract fun getReferencedName ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinObjectStub : org/jetbrains/kotlin/psi/stubs/KotlinClassOrObjectStub {
	public abstract fun isObjectLiteral ()Z
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinParameterStub : org/jetbrains/kotlin/psi/stubs/KotlinStubWithFqName {
	public abstract fun getHasDefaultValue ()Z
	public abstract fun getHasValOrVar ()Z
	public abstract fun isMutable ()Z
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub : com/intellij/psi/stubs/StubElement {
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderWithTextStub : org/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub {
	public abstract fun getText ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinPropertyAccessorStub : org/jetbrains/kotlin/psi/stubs/KotlinDeclarationWithBodyStub {
	public abstract fun isGetter ()Z
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinPropertyStub : org/jetbrains/kotlin/psi/stubs/KotlinCallableStubBase {
	public abstract fun getHasBackingField ()Ljava/lang/Boolean;
	public abstract fun getHasDelegate ()Z
	public abstract fun getHasDelegateExpression ()Z
	public abstract fun getHasInitializer ()Z
	public abstract fun getHasReturnTypeRef ()Z
	public abstract fun isVar ()Z
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinScriptStub : org/jetbrains/kotlin/psi/stubs/KotlinStubWithFqName {
	public abstract fun getFqName ()Lorg/jetbrains/kotlin/name/FqName;
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinStringInterpolationPrefixStub : com/intellij/psi/stubs/StubElement {
	public abstract fun getDollarSignCount ()I
}

public final class org/jetbrains/kotlin/psi/stubs/KotlinStubVersions {
	public static final field BUILTIN_STUB_VERSION I
	public static final field CLASSFILE_STUB_VERSION I
	public static final field INSTANCE Lorg/jetbrains/kotlin/psi/stubs/KotlinStubVersions;
	public static final field JS_STUB_VERSION I
	public static final field KOTLIN_NATIVE_STUB_VERSION I
	public static final field SOURCE_STUB_VERSION I
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinStubWithFqName : com/intellij/psi/stubs/NamedStub {
	public abstract fun getFqName ()Lorg/jetbrains/kotlin/name/FqName;
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinTypeAliasStub : org/jetbrains/kotlin/psi/stubs/KotlinClassifierStub, org/jetbrains/kotlin/psi/stubs/KotlinStubWithFqName {
	public abstract fun isTopLevel ()Z
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinTypeParameterStub : org/jetbrains/kotlin/psi/stubs/KotlinStubWithFqName {
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinTypeProjectionStub : com/intellij/psi/stubs/StubElement {
	public abstract fun getProjectionKind ()Lorg/jetbrains/kotlin/psi/KtProjectionKind;
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinUserTypeStub : com/intellij/psi/stubs/StubElement {
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/KotlinValueArgumentStub : org/jetbrains/kotlin/psi/stubs/KotlinPlaceHolderStub {
	public abstract fun isSpread ()Z
}

public abstract class org/jetbrains/kotlin/psi/stubs/elements/KtStubElementType : com/intellij/psi/stubs/IStubElementType {
	public fun <init> (Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V
	public synthetic fun createPsi (Lcom/intellij/psi/stubs/StubElement;)Lcom/intellij/psi/PsiElement;
	public fun createPsi (Lcom/intellij/psi/stubs/StubElement;)Lorg/jetbrains/kotlin/psi/KtElementImplStub;
	public fun createPsiFromAst (Lcom/intellij/lang/ASTNode;)Lorg/jetbrains/kotlin/psi/KtElementImplStub;
	public fun getArrayFactory ()Lcom/intellij/util/ArrayFactory;
	public fun getExternalId ()Ljava/lang/String;
	public synthetic fun indexStub (Lcom/intellij/psi/stubs/Stub;Lcom/intellij/psi/stubs/IndexSink;)V
	public fun indexStub (Lcom/intellij/psi/stubs/StubElement;Lcom/intellij/psi/stubs/IndexSink;)V
	public fun shouldCreateStub (Lcom/intellij/lang/ASTNode;)Z
}

public abstract interface class org/jetbrains/kotlin/psi/stubs/elements/KtTokenSets {
	public static final field CONSTANT_EXPRESSIONS Lcom/intellij/psi/tree/TokenSet;
	public static final field DECLARATION_TYPES Lcom/intellij/psi/tree/TokenSet;
	public static final field INSIDE_DIRECTIVE_EXPRESSIONS Lcom/intellij/psi/tree/TokenSet;
	public static final field POSTFIX_OPERATIONS Lcom/intellij/psi/tree/TokenSet;
	public static final field PREFIX_OPERATIONS Lcom/intellij/psi/tree/TokenSet;
	public static final field SUPER_TYPE_LIST_ENTRIES Lcom/intellij/psi/tree/TokenSet;
	public static final field TYPE_ELEMENT_TYPES Lcom/intellij/psi/tree/TokenSet;
}

public final class org/jetbrains/kotlin/psi/typeRefHelpers/TypeRefHelpersKt {
	public static final fun getTypeReference (Lorg/jetbrains/kotlin/psi/KtCallableDeclaration;)Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public static final fun setReceiverTypeReference (Lorg/jetbrains/kotlin/psi/KtCallableDeclaration;Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public static final fun setReceiverTypeReference (Lorg/jetbrains/kotlin/psi/KtFunctionType;Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/psi/KtTypeReference;
	public static final fun setTypeReference (Lorg/jetbrains/kotlin/psi/KtCallableDeclaration;Lcom/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/psi/KtTypeReference;
}

public final class org/jetbrains/kotlin/psi/utils/ConstantExpressionUtils {
	public static final fun hasFloatNumericLiteralSuffix (Ljava/lang/String;)Z
	public static final fun hasIllegallyPositionedUnderscore (Ljava/lang/String;Z)Z
	public static final fun hasLongNumericLiteralSuffix (Ljava/lang/String;)Z
	public static final fun hasUnsignedLongNumericLiteralSuffix (Ljava/lang/String;)Z
	public static final fun hasUnsignedNumericLiteralSuffix (Ljava/lang/String;)Z
	public static final fun parseBooleanLiteral (Ljava/lang/String;)Z
	public static final fun parseNumericLiteral (Ljava/lang/String;Z)Ljava/lang/Number;
	public static final fun toConstantExpressionElementType (Lorg/jetbrains/kotlin/psi/stubs/ConstantValueKind;)Lorg/jetbrains/kotlin/psi/stubs/elements/KtStubElementType;
	public static final fun toConstantValueKind (Lorg/jetbrains/kotlin/psi/stubs/elements/KtStubElementType;)Lorg/jetbrains/kotlin/psi/stubs/ConstantValueKind;
}

public class org/jetbrains/kotlin/resolve/StatementFilter {
	public static final field Companion Lorg/jetbrains/kotlin/resolve/StatementFilter$Companion;
	public static final field NONE Lorg/jetbrains/kotlin/resolve/StatementFilter;
	public fun <init> ()V
	public fun getFilter ()Lkotlin/jvm/functions/Function1;
}

public final class org/jetbrains/kotlin/resolve/StatementFilter$Companion {
}

public final class org/jetbrains/kotlin/resolve/StatementFilterKt {
	public static final fun filterStatements (Lorg/jetbrains/kotlin/resolve/StatementFilter;Lorg/jetbrains/kotlin/psi/KtBlockExpression;)Ljava/util/List;
	public static final fun getLastStatementInABlock (Lorg/jetbrains/kotlin/resolve/StatementFilter;Lorg/jetbrains/kotlin/psi/KtBlockExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;
}

public class org/jetbrains/kotlin/types/expressions/OperatorConventions {
	public static final field ASSIGNMENT_OPERATIONS Lcom/google/common/collect/ImmutableBiMap;
	public static final field ASSIGNMENT_OPERATION_COUNTERPARTS Lcom/google/common/collect/ImmutableBiMap;
	public static final field ASSIGN_METHOD Lorg/jetbrains/kotlin/name/Name;
	public static final field BINARY_OPERATION_NAMES Lcom/google/common/collect/ImmutableBiMap;
	public static final field BOOLEAN_OPERATIONS Lcom/google/common/collect/ImmutableBiMap;
	public static final field BYTE Lorg/jetbrains/kotlin/name/Name;
	public static final field CHAR Lorg/jetbrains/kotlin/name/Name;
	public static final field COMPARISON_OPERATIONS Lcom/google/common/collect/ImmutableSet;
	public static final field CONVENTION_NAMES Lcom/google/common/collect/ImmutableSet;
	public static final field DOUBLE Lorg/jetbrains/kotlin/name/Name;
	public static final field EQUALS_OPERATIONS Lcom/google/common/collect/ImmutableSet;
	public static final field FLOAT Lorg/jetbrains/kotlin/name/Name;
	public static final field IDENTITY_EQUALS_OPERATIONS Lcom/google/common/collect/ImmutableSet;
	public static final field INCREMENT_OPERATIONS Lcom/google/common/collect/ImmutableSet;
	public static final field INT Lorg/jetbrains/kotlin/name/Name;
	public static final field IN_OPERATIONS Lcom/google/common/collect/ImmutableSet;
	public static final field LONG Lorg/jetbrains/kotlin/name/Name;
	public static final field NOT_OVERLOADABLE Lcom/google/common/collect/ImmutableSet;
	public static final field NUMBER_CONVERSIONS Lcom/google/common/collect/ImmutableSet;
	public static final field SHORT Lorg/jetbrains/kotlin/name/Name;
	public static final field UNARY_OPERATION_NAMES Lcom/google/common/collect/ImmutableBiMap;
	public static fun getNameForOperationSymbol (Lorg/jetbrains/kotlin/lexer/KtToken;)Lorg/jetbrains/kotlin/name/Name;
	public static fun getNameForOperationSymbol (Lorg/jetbrains/kotlin/lexer/KtToken;ZZ)Lorg/jetbrains/kotlin/name/Name;
	public static fun getOperationSymbolForName (Lorg/jetbrains/kotlin/name/Name;)Lorg/jetbrains/kotlin/lexer/KtToken;
	public static fun isConventionName (Lorg/jetbrains/kotlin/name/Name;)Z
}

