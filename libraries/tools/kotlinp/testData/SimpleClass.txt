// SimpleClass.class
// ------------------------------------------
public final class SimpleClass<in T#0 /* A */> : kotlin/Any {

  // signature: <init>([Ljava/lang/String;)V
  public constructor(s: kotlin/Array<kotlin/String?>?)

  // signature: <init>(I)V
  public /* primary */ constructor(p: kotlin/Int /* = ... */)

  // requires language version 1.3.0 (level=ERROR)
  // signature: g(Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
  protected final inline suspend fun <reified T#1 /* T */> g(crossinline a: kotlin/Function0<T#0>, noinline b: suspend kotlin/Function1<kotlin/coroutines/Continuation<T#1>, kotlin/Any?>): kotlin/Unit

  // signature: f$test_module(Ljava/lang/Object;[Ljava/util/Map;)Ljava/util/Set;
  internal final fun <T#1 /* U */ : T#3, T#2 /* V */ : T#3, T#3 /* A */> T#3.f(vararg z: kotlin/collections/Map<T#2, T#1?> /* kotlin/Array<out kotlin/collections/Map<T#2, T#1?>> */): kotlin/collections/Set<*>

  // field: p:I
  // getter: getP()I
  public final val p: kotlin/Int
    public final get

  // field: x:J
  // getter: getX()J
  // setter: SET_X(J)V
  public final var x: kotlin/Long
    public final /* non-default */ external get
    public final /* non-default */ set(<set-?>: kotlin/Long)

  // module name: test-module
}
// META-INF/test-module.kotlin_module
// ------------------------------------------
module {
}
