RAW_FIR:
FILE: [ResolvedTo(RAW_FIR)] scriptWithProvidedProperties.test.kts
    context(<script>@org.jetbrains.kotlin.scripting.test.definition.ConfigurableTestScript)
    SCRIPT: [ResolvedTo(RAW_FIR)] <script-scriptWithProvidedProperties.test.kts>
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<out kotlin/String>|
        [ResolvedTo(RAW_FIR)] lval stringParameter: kotlin.String
        [ResolvedTo(RAW_FIR)] lval fileParameter: java.io.File

        public? final? [ResolvedTo(RAW_FIR)] val rv: <implicit> = LAZY_EXPRESSION
            public? [ResolvedTo(RAW_FIR)] get(): <implicit>


IMPORTS:
FILE: [ResolvedTo(IMPORTS)] scriptWithProvidedProperties.test.kts
    context(<script>@org.jetbrains.kotlin.scripting.test.definition.ConfigurableTestScript)
    SCRIPT: [ResolvedTo(RAW_FIR)] <script-scriptWithProvidedProperties.test.kts>
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<out kotlin/String>|
        [ResolvedTo(RAW_FIR)] lval stringParameter: kotlin.String
        [ResolvedTo(RAW_FIR)] lval fileParameter: java.io.File

        public? final? [ResolvedTo(RAW_FIR)] val rv: <implicit> = LAZY_EXPRESSION
            public? [ResolvedTo(RAW_FIR)] get(): <implicit>


COMPILER_REQUIRED_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] scriptWithProvidedProperties.test.kts
    context(<script>@org.jetbrains.kotlin.scripting.test.definition.ConfigurableTestScript)
    SCRIPT: [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] <script-scriptWithProvidedProperties.test.kts>
        [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] lval args: R|kotlin/Array<out kotlin/String>|
        [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] lval stringParameter: kotlin.String
        [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] lval fileParameter: java.io.File

        public? final? [ResolvedTo(RAW_FIR)] val rv: <implicit> = LAZY_EXPRESSION
            public? [ResolvedTo(RAW_FIR)] get(): <implicit>


COMPANION_GENERATION:
FILE: [ResolvedTo(IMPORTS)] scriptWithProvidedProperties.test.kts
    context(<script>@org.jetbrains.kotlin.scripting.test.definition.ConfigurableTestScript)
    SCRIPT: [ResolvedTo(COMPANION_GENERATION)] <script-scriptWithProvidedProperties.test.kts>
        [ResolvedTo(COMPANION_GENERATION)] lval args: R|kotlin/Array<out kotlin/String>|
        [ResolvedTo(COMPANION_GENERATION)] lval stringParameter: kotlin.String
        [ResolvedTo(COMPANION_GENERATION)] lval fileParameter: java.io.File

        public? final? [ResolvedTo(RAW_FIR)] val rv: <implicit> = LAZY_EXPRESSION
            public? [ResolvedTo(RAW_FIR)] get(): <implicit>


SUPER_TYPES:
FILE: [ResolvedTo(IMPORTS)] scriptWithProvidedProperties.test.kts
    context(<script>@org.jetbrains.kotlin.scripting.test.definition.ConfigurableTestScript)
    SCRIPT: [ResolvedTo(SUPER_TYPES)] <script-scriptWithProvidedProperties.test.kts>
        [ResolvedTo(SUPER_TYPES)] lval args: R|kotlin/Array<out kotlin/String>|
        [ResolvedTo(SUPER_TYPES)] lval stringParameter: kotlin.String
        [ResolvedTo(SUPER_TYPES)] lval fileParameter: java.io.File

        public? final? [ResolvedTo(RAW_FIR)] val rv: <implicit> = LAZY_EXPRESSION
            public? [ResolvedTo(RAW_FIR)] get(): <implicit>


TYPES:
FILE: [ResolvedTo(IMPORTS)] scriptWithProvidedProperties.test.kts
    context(<script>@R|org/jetbrains/kotlin/scripting/test/definition/ConfigurableTestScript|)
    SCRIPT: [ResolvedTo(TYPES)] <script-scriptWithProvidedProperties.test.kts>
        [ResolvedTo(TYPES)] lval args: R|kotlin/Array<out kotlin/String>|
        [ResolvedTo(TYPES)] lval stringParameter: R|kotlin/String|
        [ResolvedTo(TYPES)] lval fileParameter: R|java/io/File|

        public? final? [ResolvedTo(RAW_FIR)] val rv: <implicit> = LAZY_EXPRESSION
            public? [ResolvedTo(RAW_FIR)] get(): <implicit>


STATUS:
FILE: [ResolvedTo(IMPORTS)] scriptWithProvidedProperties.test.kts
    context(<script>@R|org/jetbrains/kotlin/scripting/test/definition/ConfigurableTestScript|)
    SCRIPT: [ResolvedTo(STATUS)] <script-scriptWithProvidedProperties.test.kts>
        [ResolvedTo(STATUS)] lval args: R|kotlin/Array<out kotlin/String>|
        [ResolvedTo(STATUS)] lval stringParameter: R|kotlin/String|
        [ResolvedTo(STATUS)] lval fileParameter: R|java/io/File|

        public? final? [ResolvedTo(RAW_FIR)] val rv: <implicit> = LAZY_EXPRESSION
            public? [ResolvedTo(RAW_FIR)] get(): <implicit>


EXPECT_ACTUAL_MATCHING:
FILE: [ResolvedTo(IMPORTS)] scriptWithProvidedProperties.test.kts
    context(<script>@R|org/jetbrains/kotlin/scripting/test/definition/ConfigurableTestScript|)
    SCRIPT: [ResolvedTo(EXPECT_ACTUAL_MATCHING)] <script-scriptWithProvidedProperties.test.kts>
        [ResolvedTo(EXPECT_ACTUAL_MATCHING)] lval args: R|kotlin/Array<out kotlin/String>|
        [ResolvedTo(EXPECT_ACTUAL_MATCHING)] lval stringParameter: R|kotlin/String|
        [ResolvedTo(EXPECT_ACTUAL_MATCHING)] lval fileParameter: R|java/io/File|

        public? final? [ResolvedTo(RAW_FIR)] val rv: <implicit> = LAZY_EXPRESSION
            public? [ResolvedTo(RAW_FIR)] get(): <implicit>


CONTRACTS:
FILE: [ResolvedTo(IMPORTS)] scriptWithProvidedProperties.test.kts
    context(<script>@R|org/jetbrains/kotlin/scripting/test/definition/ConfigurableTestScript|)
    SCRIPT: [ResolvedTo(CONTRACTS)] <script-scriptWithProvidedProperties.test.kts>
        [ResolvedTo(CONTRACTS)] lval args: R|kotlin/Array<out kotlin/String>|
        [ResolvedTo(CONTRACTS)] lval stringParameter: R|kotlin/String|
        [ResolvedTo(CONTRACTS)] lval fileParameter: R|java/io/File|

        public? final? [ResolvedTo(RAW_FIR)] val rv: <implicit> = LAZY_EXPRESSION
            public? [ResolvedTo(RAW_FIR)] get(): <implicit>


IMPLICIT_TYPES_BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] scriptWithProvidedProperties.test.kts
    context(<script>@R|org/jetbrains/kotlin/scripting/test/definition/ConfigurableTestScript|)
    SCRIPT: [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] <script-scriptWithProvidedProperties.test.kts>
        [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] lval args: R|kotlin/Array<out kotlin/String>|
        [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] lval stringParameter: R|kotlin/String|
        [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] lval fileParameter: R|java/io/File|

        public? final? [ResolvedTo(RAW_FIR)] val rv: <implicit> = LAZY_EXPRESSION
            public? [ResolvedTo(RAW_FIR)] get(): <implicit>


CONSTANT_EVALUATION:
FILE: [ResolvedTo(IMPORTS)] scriptWithProvidedProperties.test.kts
    context(<script>@R|org/jetbrains/kotlin/scripting/test/definition/ConfigurableTestScript|)
    SCRIPT: [ResolvedTo(CONSTANT_EVALUATION)] <script-scriptWithProvidedProperties.test.kts>
        [ResolvedTo(CONSTANT_EVALUATION)] lval args: R|kotlin/Array<out kotlin/String>|
        [ResolvedTo(CONSTANT_EVALUATION)] lval stringParameter: R|kotlin/String|
        [ResolvedTo(CONSTANT_EVALUATION)] lval fileParameter: R|java/io/File|

        public? final? [ResolvedTo(RAW_FIR)] val rv: <implicit> = LAZY_EXPRESSION
            public? [ResolvedTo(RAW_FIR)] get(): <implicit>


ANNOTATION_ARGUMENTS:
FILE: [ResolvedTo(IMPORTS)] scriptWithProvidedProperties.test.kts
    context(<script>@R|org/jetbrains/kotlin/scripting/test/definition/ConfigurableTestScript|)
    SCRIPT: [ResolvedTo(ANNOTATION_ARGUMENTS)] <script-scriptWithProvidedProperties.test.kts>
        [ResolvedTo(ANNOTATION_ARGUMENTS)] lval args: R|kotlin/Array<out kotlin/String>|
        [ResolvedTo(ANNOTATION_ARGUMENTS)] lval stringParameter: R|kotlin/String|
        [ResolvedTo(ANNOTATION_ARGUMENTS)] lval fileParameter: R|java/io/File|

        public? final? [ResolvedTo(RAW_FIR)] val rv: <implicit> = LAZY_EXPRESSION
            public? [ResolvedTo(RAW_FIR)] get(): <implicit>


BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] scriptWithProvidedProperties.test.kts
    context(<script>@R|org/jetbrains/kotlin/scripting/test/definition/ConfigurableTestScript|)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] <script-scriptWithProvidedProperties.test.kts>
        [ResolvedTo(ANNOTATION_ARGUMENTS)] lval args: R|kotlin/Array<out kotlin/String>|
        [ResolvedTo(ANNOTATION_ARGUMENTS)] lval stringParameter: R|kotlin/String|
        [ResolvedTo(ANNOTATION_ARGUMENTS)] lval fileParameter: R|java/io/File|

        public final [ResolvedTo(BODY_RESOLVE)] val rv: R|kotlin/String| = this@R|?|.R|org/jetbrains/kotlin/scripting/test/definition/ConfigurableTestScript.args|.R|SubstitutionOverride<kotlin/Array.get: R|CapturedType(out kotlin/String)|>|(Int(1)).R|kotlin/String.plus|(R|<local>/stringParameter|).R|kotlin/String.plus|(R|<local>/fileParameter|.R|java/io/File.path|)
            public [ResolvedTo(BODY_RESOLVE)] get(): R|kotlin/String|


FILE RAW TO BODY:
FILE: [ResolvedTo(BODY_RESOLVE)] scriptWithProvidedProperties.test.kts
    context(<script>@R|org/jetbrains/kotlin/scripting/test/definition/ConfigurableTestScript|)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] <script-scriptWithProvidedProperties.test.kts>
        [ResolvedTo(BODY_RESOLVE)] lval args: R|kotlin/Array<out kotlin/String>|
        [ResolvedTo(BODY_RESOLVE)] lval stringParameter: R|kotlin/String|
        [ResolvedTo(BODY_RESOLVE)] lval fileParameter: R|java/io/File|

        public final [ResolvedTo(BODY_RESOLVE)] val rv: R|kotlin/String| = this@R|?|.R|org/jetbrains/kotlin/scripting/test/definition/ConfigurableTestScript.args|.R|SubstitutionOverride<kotlin/Array.get: R|CapturedType(out kotlin/String)|>|(Int(1)).R|kotlin/String.plus|(R|<local>/stringParameter|).R|kotlin/String.plus|(R|<local>/fileParameter|.R|java/io/File.path|)
            public [ResolvedTo(BODY_RESOLVE)] get(): R|kotlin/String|
