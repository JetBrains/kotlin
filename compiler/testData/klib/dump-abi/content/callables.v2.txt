// Rendering settings:
// - Signature version: 2
// - Show manifest properties: false
// - Show declarations: true

// Library unique name: <callables_library>
final class callables.test/FunctionContainer { // callables.test/FunctionContainer|null[0]
    constructor <init>() // callables.test/FunctionContainer.<init>|<init>(){}[0]
    final fun regularFun(): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun(){}[0]
    final fun regularFun(kotlin/Int): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun(kotlin.Int){}[0]
    final fun regularFun(kotlin/Number): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun(kotlin.Number){}[0]
    final fun regularFun(kotlin/Int, kotlin/Long): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun(kotlin.Int;kotlin.Long){}[0]
    final fun regularFun(kotlin/Int, kotlin/Number): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun(kotlin.Int;kotlin.Number){}[0]
    final fun regularFun(kotlin/Number, kotlin/Long): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun(kotlin.Number;kotlin.Long){}[0]
    final fun regularFun(kotlin/Number, kotlin/Number): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun(kotlin.Number;kotlin.Number){}[0]
    final fun (kotlin/Int).regularFun(): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun@kotlin.Int(){}[0]
    final fun (kotlin/Long).regularFun(): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun@kotlin.Long(){}[0]
    final fun (kotlin/Number).regularFun(): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun@kotlin.Number(){}[0]
    final fun context(kotlin/Int) regularFun(): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun!kotlin.Int(){}[0]
    final fun context(kotlin/Int) regularFun(kotlin/Int): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun!kotlin.Int(kotlin.Int){}[0]
    final fun context(kotlin/Int) regularFun(kotlin/Number): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun!kotlin.Int(kotlin.Number){}[0]
    final fun context(kotlin/Int) regularFun(kotlin/Int, kotlin/Long): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun!kotlin.Int(kotlin.Int;kotlin.Long){}[0]
    final fun context(kotlin/Int) regularFun(kotlin/Int, kotlin/Number): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun!kotlin.Int(kotlin.Int;kotlin.Number){}[0]
    final fun context(kotlin/Int) regularFun(kotlin/Number, kotlin/Long): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun!kotlin.Int(kotlin.Number;kotlin.Long){}[0]
    final fun context(kotlin/Int) regularFun(kotlin/Number, kotlin/Number): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun!kotlin.Int(kotlin.Number;kotlin.Number){}[0]
    final fun context(kotlin/Int) (kotlin/Int).regularFun(): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun!kotlin.Int@kotlin.Int(){}[0]
    final fun context(kotlin/Long) (kotlin/Long).regularFun(): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun!kotlin.Int@kotlin.Long(){}[0]
    final fun context(kotlin/Number) (kotlin/Number).regularFun(): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun!kotlin.Int@kotlin.Number(){}[0]
    final fun context(kotlin/Int, kotlin/Long) regularFun(): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun!kotlin.Int!kotlin.Long(){}[0]
    final fun context(kotlin/Int, kotlin/Long) regularFun(kotlin/Int): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun!kotlin.Int!kotlin.Long(kotlin.Int){}[0]
    final fun context(kotlin/Int, kotlin/Long) regularFun(kotlin/Number): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun!kotlin.Int!kotlin.Long(kotlin.Number){}[0]
    final fun context(kotlin/Int, kotlin/Long) regularFun(kotlin/Int, kotlin/Long): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun!kotlin.Int!kotlin.Long(kotlin.Int;kotlin.Long){}[0]
    final fun context(kotlin/Int, kotlin/Long) regularFun(kotlin/Int, kotlin/Number): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun!kotlin.Int!kotlin.Long(kotlin.Int;kotlin.Number){}[0]
    final fun context(kotlin/Int, kotlin/Long) regularFun(kotlin/Number, kotlin/Long): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun!kotlin.Int!kotlin.Long(kotlin.Number;kotlin.Long){}[0]
    final fun context(kotlin/Int, kotlin/Long) regularFun(kotlin/Number, kotlin/Number): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun!kotlin.Int!kotlin.Long(kotlin.Number;kotlin.Number){}[0]
    final fun context(kotlin/Int, kotlin/Int) (kotlin/Int).regularFun(): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun!kotlin.Int!kotlin.Long@kotlin.Int(){}[0]
    final fun context(kotlin/Long, kotlin/Int) (kotlin/Long).regularFun(): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun!kotlin.Int!kotlin.Long@kotlin.Long(){}[0]
    final fun context(kotlin/Number, kotlin/Int) (kotlin/Number).regularFun(): kotlin/String // callables.test/FunctionContainer.regularFun|regularFun!kotlin.Int!kotlin.Long@kotlin.Number(){}[0]
}
final class callables.test/PropertyContainer { // callables.test/PropertyContainer|null[0]
    final val inlineVal // callables.test/PropertyContainer.inlineVal|{}inlineVal[0]
        final inline fun <get-inlineVal>(): kotlin/String // callables.test/PropertyContainer.inlineVal.<get-inlineVal>|<get-inlineVal>(){}[0]
    final var inlineVar // callables.test/PropertyContainer.inlineVar|{}inlineVar[0]
        final inline fun <get-inlineVar>(): kotlin/String // callables.test/PropertyContainer.inlineVar.<get-inlineVar>|<get-inlineVar>(){}[0]
        final inline fun <set-inlineVar>(kotlin/String) // callables.test/PropertyContainer.inlineVar.<set-inlineVar>|<set-inlineVar>(kotlin.String){}[0]
    final val regularVal // callables.test/PropertyContainer.regularVal|{}regularVal[0]
        final fun <get-regularVal>(): kotlin/String // callables.test/PropertyContainer.regularVal.<get-regularVal>|<get-regularVal>(){}[0]
    final val regularVal // callables.test/PropertyContainer.regularVal|@kotlin.Int{}regularVal[0]
        final fun (kotlin/Int).<get-regularVal>(): kotlin/String // callables.test/PropertyContainer.regularVal.<get-regularVal>|<get-regularVal>@kotlin.Int(){}[0]
    final val regularVal // callables.test/PropertyContainer.regularVal|@kotlin.Long{}regularVal[0]
        final fun (kotlin/Long).<get-regularVal>(): kotlin/String // callables.test/PropertyContainer.regularVal.<get-regularVal>|<get-regularVal>@kotlin.Long(){}[0]
    final val regularVal // callables.test/PropertyContainer.regularVal|@kotlin.Number{}regularVal[0]
        final fun (kotlin/Number).<get-regularVal>(): kotlin/String // callables.test/PropertyContainer.regularVal.<get-regularVal>|<get-regularVal>@kotlin.Number(){}[0]
    final var regularVar // callables.test/PropertyContainer.regularVar|{}regularVar[0]
        final fun <get-regularVar>(): kotlin/String // callables.test/PropertyContainer.regularVar.<get-regularVar>|<get-regularVar>(){}[0]
        final fun <set-regularVar>(kotlin/String) // callables.test/PropertyContainer.regularVar.<set-regularVar>|<set-regularVar>(kotlin.String){}[0]
    final var regularVar // callables.test/PropertyContainer.regularVar|@kotlin.Int{}regularVar[0]
        final fun (kotlin/Int).<get-regularVar>(): kotlin/String // callables.test/PropertyContainer.regularVar.<get-regularVar>|<get-regularVar>@kotlin.Int(){}[0]
        final fun (kotlin/Int).<set-regularVar>(kotlin/String) // callables.test/PropertyContainer.regularVar.<set-regularVar>|<set-regularVar>@kotlin.Int(kotlin.String){}[0]
    final var regularVar // callables.test/PropertyContainer.regularVar|@kotlin.Long{}regularVar[0]
        final fun (kotlin/Long).<get-regularVar>(): kotlin/String // callables.test/PropertyContainer.regularVar.<get-regularVar>|<get-regularVar>@kotlin.Long(){}[0]
        final fun (kotlin/Long).<set-regularVar>(kotlin/String) // callables.test/PropertyContainer.regularVar.<set-regularVar>|<set-regularVar>@kotlin.Long(kotlin.String){}[0]
    final var regularVar // callables.test/PropertyContainer.regularVar|@kotlin.Number{}regularVar[0]
        final fun (kotlin/Number).<get-regularVar>(): kotlin/String // callables.test/PropertyContainer.regularVar.<get-regularVar>|<get-regularVar>@kotlin.Number(){}[0]
        final fun (kotlin/Number).<set-regularVar>(kotlin/String) // callables.test/PropertyContainer.regularVar.<set-regularVar>|<set-regularVar>@kotlin.Number(kotlin.String){}[0]
    final val typeParameterVal // callables.test/PropertyContainer.typeParameterVal|{}typeParameterVal[0]
        final fun <get-typeParameterVal>(): kotlin/String // callables.test/PropertyContainer.typeParameterVal.<get-typeParameterVal>|<get-typeParameterVal>(){}[0]
    final val typeParameterVal // callables.test/PropertyContainer.typeParameterVal|@0:0{0ยง<kotlin.CharSequence&kotlin.text.Appendable>}typeParameterVal[0]
        final fun <#A2: kotlin.text/Appendable & kotlin/CharSequence> (#A2).<get-typeParameterVal>(): kotlin/String // callables.test/PropertyContainer.typeParameterVal.<get-typeParameterVal>|<get-typeParameterVal>@0:0(){0ยง<kotlin.CharSequence&kotlin.text.Appendable>}[0]
    final var typeParameterVar // callables.test/PropertyContainer.typeParameterVar|{}typeParameterVar[0]
        final fun <get-typeParameterVar>(): kotlin/String // callables.test/PropertyContainer.typeParameterVar.<get-typeParameterVar>|<get-typeParameterVar>(){}[0]
        final fun <set-typeParameterVar>(kotlin/String) // callables.test/PropertyContainer.typeParameterVar.<set-typeParameterVar>|<set-typeParameterVar>(kotlin.String){}[0]
    final var typeParameterVar // callables.test/PropertyContainer.typeParameterVar|@0:0{0ยง<kotlin.CharSequence&kotlin.text.Appendable>}typeParameterVar[0]
        final fun <#A2: kotlin.text/Appendable & kotlin/CharSequence> (#A2).<get-typeParameterVar>(): kotlin/String // callables.test/PropertyContainer.typeParameterVar.<get-typeParameterVar>|<get-typeParameterVar>@0:0(){0ยง<kotlin.CharSequence&kotlin.text.Appendable>}[0]
        final fun <#A2: kotlin.text/Appendable & kotlin/CharSequence> (#A2).<set-typeParameterVar>(kotlin/String) // callables.test/PropertyContainer.typeParameterVar.<set-typeParameterVar>|<set-typeParameterVar>@0:0(kotlin.String){0ยง<kotlin.CharSequence&kotlin.text.Appendable>}[0]
    constructor <init>() // callables.test/PropertyContainer.<init>|<init>(){}[0]
}
final const val callables.test/constProperty // callables.test/constProperty|{}constProperty[0]
    final fun <get-constProperty>(): kotlin/String // callables.test/constProperty.<get-constProperty>|<get-constProperty>(){}[0]
final val callables.test/inlineVal // callables.test/inlineVal|{}inlineVal[0]
    final inline fun <get-inlineVal>(): kotlin/String // callables.test/inlineVal.<get-inlineVal>|<get-inlineVal>(){}[0]
final var callables.test/inlineVar // callables.test/inlineVar|{}inlineVar[0]
    final inline fun <get-inlineVar>(): kotlin/String // callables.test/inlineVar.<get-inlineVar>|<get-inlineVar>(){}[0]
    final inline fun <set-inlineVar>(kotlin/String) // callables.test/inlineVar.<set-inlineVar>|<set-inlineVar>(kotlin.String){}[0]
final val callables.test/regularVal // callables.test/regularVal|{}regularVal[0]
    final fun <get-regularVal>(): kotlin/String // callables.test/regularVal.<get-regularVal>|<get-regularVal>(){}[0]
final val callables.test/regularVal // callables.test/regularVal|@kotlin.Int{}regularVal[0]
    final fun (kotlin/Int).<get-regularVal>(): kotlin/String // callables.test/regularVal.<get-regularVal>|<get-regularVal>@kotlin.Int(){}[0]
final val callables.test/regularVal // callables.test/regularVal|@kotlin.Long{}regularVal[0]
    final fun (kotlin/Long).<get-regularVal>(): kotlin/String // callables.test/regularVal.<get-regularVal>|<get-regularVal>@kotlin.Long(){}[0]
final val callables.test/regularVal // callables.test/regularVal|@kotlin.Number{}regularVal[0]
    final fun (kotlin/Number).<get-regularVal>(): kotlin/String // callables.test/regularVal.<get-regularVal>|<get-regularVal>@kotlin.Number(){}[0]
final var callables.test/regularVar // callables.test/regularVar|{}regularVar[0]
    final fun <get-regularVar>(): kotlin/String // callables.test/regularVar.<get-regularVar>|<get-regularVar>(){}[0]
    final fun <set-regularVar>(kotlin/String) // callables.test/regularVar.<set-regularVar>|<set-regularVar>(kotlin.String){}[0]
final var callables.test/regularVar // callables.test/regularVar|@kotlin.Int{}regularVar[0]
    final fun (kotlin/Int).<get-regularVar>(): kotlin/String // callables.test/regularVar.<get-regularVar>|<get-regularVar>@kotlin.Int(){}[0]
    final fun (kotlin/Int).<set-regularVar>(kotlin/String) // callables.test/regularVar.<set-regularVar>|<set-regularVar>@kotlin.Int(kotlin.String){}[0]
final var callables.test/regularVar // callables.test/regularVar|@kotlin.Long{}regularVar[0]
    final fun (kotlin/Long).<get-regularVar>(): kotlin/String // callables.test/regularVar.<get-regularVar>|<get-regularVar>@kotlin.Long(){}[0]
    final fun (kotlin/Long).<set-regularVar>(kotlin/String) // callables.test/regularVar.<set-regularVar>|<set-regularVar>@kotlin.Long(kotlin.String){}[0]
final var callables.test/regularVar // callables.test/regularVar|@kotlin.Number{}regularVar[0]
    final fun (kotlin/Number).<get-regularVar>(): kotlin/String // callables.test/regularVar.<get-regularVar>|<get-regularVar>@kotlin.Number(){}[0]
    final fun (kotlin/Number).<set-regularVar>(kotlin/String) // callables.test/regularVar.<set-regularVar>|<set-regularVar>@kotlin.Number(kotlin.String){}[0]
final val callables.test/typeParameterVal // callables.test/typeParameterVal|{}typeParameterVal[0]
    final fun <get-typeParameterVal>(): kotlin/String // callables.test/typeParameterVal.<get-typeParameterVal>|<get-typeParameterVal>(){}[0]
final val callables.test/typeParameterVal // callables.test/typeParameterVal|@0:0{0ยง<kotlin.CharSequence&kotlin.text.Appendable>}typeParameterVal[0]
    final fun <#A1: kotlin.text/Appendable & kotlin/CharSequence> (#A1).<get-typeParameterVal>(): kotlin/String // callables.test/typeParameterVal.<get-typeParameterVal>|<get-typeParameterVal>@0:0(){0ยง<kotlin.CharSequence&kotlin.text.Appendable>}[0]
final var callables.test/typeParameterVar // callables.test/typeParameterVar|{}typeParameterVar[0]
    final fun <get-typeParameterVar>(): kotlin/String // callables.test/typeParameterVar.<get-typeParameterVar>|<get-typeParameterVar>(){}[0]
    final fun <set-typeParameterVar>(kotlin/String) // callables.test/typeParameterVar.<set-typeParameterVar>|<set-typeParameterVar>(kotlin.String){}[0]
final var callables.test/typeParameterVar // callables.test/typeParameterVar|@0:0{0ยง<kotlin.CharSequence&kotlin.text.Appendable>}typeParameterVar[0]
    final fun <#A1: kotlin.text/Appendable & kotlin/CharSequence> (#A1).<get-typeParameterVar>(): kotlin/String // callables.test/typeParameterVar.<get-typeParameterVar>|<get-typeParameterVar>@0:0(){0ยง<kotlin.CharSequence&kotlin.text.Appendable>}[0]
    final fun <#A1: kotlin.text/Appendable & kotlin/CharSequence> (#A1).<set-typeParameterVar>(kotlin/String) // callables.test/typeParameterVar.<set-typeParameterVar>|<set-typeParameterVar>@0:0(kotlin.String){0ยง<kotlin.CharSequence&kotlin.text.Appendable>}[0]
final inline fun callables.test/inlineFun(kotlin/Function1<kotlin/Int, kotlin/String>): kotlin/String // callables.test/inlineFun|inlineFun(kotlin.Function1<kotlin.Int,kotlin.String>){}[0]
final inline fun callables.test/inlineFun(kotlin/Function1<kotlin/Long, kotlin/String>): kotlin/String // callables.test/inlineFun|inlineFun(kotlin.Function1<kotlin.Long,kotlin.String>){}[0]
final inline fun callables.test/inlineFun(kotlin/Function1<kotlin/Number, kotlin/String>): kotlin/String // callables.test/inlineFun|inlineFun(kotlin.Function1<kotlin.Number,kotlin.String>){}[0]
final fun callables.test/regularFun(): kotlin/String // callables.test/regularFun|regularFun(){}[0]
final fun callables.test/regularFun(kotlin/Int): kotlin/String // callables.test/regularFun|regularFun(kotlin.Int){}[0]
final fun callables.test/regularFun(kotlin/Number): kotlin/String // callables.test/regularFun|regularFun(kotlin.Number){}[0]
final fun callables.test/regularFun(kotlin/Int, kotlin/Long): kotlin/String // callables.test/regularFun|regularFun(kotlin.Int;kotlin.Long){}[0]
final fun callables.test/regularFun(kotlin/Int, kotlin/Number): kotlin/String // callables.test/regularFun|regularFun(kotlin.Int;kotlin.Number){}[0]
final fun callables.test/regularFun(kotlin/Number, kotlin/Long): kotlin/String // callables.test/regularFun|regularFun(kotlin.Number;kotlin.Long){}[0]
final fun callables.test/regularFun(kotlin/Number, kotlin/Number): kotlin/String // callables.test/regularFun|regularFun(kotlin.Number;kotlin.Number){}[0]
final fun (kotlin/Int).callables.test/regularFun(): kotlin/String // callables.test/regularFun|regularFun@kotlin.Int(){}[0]
final fun (kotlin/Long).callables.test/regularFun(): kotlin/String // callables.test/regularFun|regularFun@kotlin.Long(){}[0]
final fun (kotlin/Number).callables.test/regularFun(): kotlin/String // callables.test/regularFun|regularFun@kotlin.Number(){}[0]
final fun context(kotlin/Int) callables.test/regularFun(): kotlin/String // callables.test/regularFun|regularFun!kotlin.Int(){}[0]
final fun context(kotlin/Int) callables.test/regularFun(kotlin/Int): kotlin/String // callables.test/regularFun|regularFun!kotlin.Int(kotlin.Int){}[0]
final fun context(kotlin/Int) callables.test/regularFun(kotlin/Number): kotlin/String // callables.test/regularFun|regularFun!kotlin.Int(kotlin.Number){}[0]
final fun context(kotlin/Int) callables.test/regularFun(kotlin/Int, kotlin/Long): kotlin/String // callables.test/regularFun|regularFun!kotlin.Int(kotlin.Int;kotlin.Long){}[0]
final fun context(kotlin/Int) callables.test/regularFun(kotlin/Int, kotlin/Number): kotlin/String // callables.test/regularFun|regularFun!kotlin.Int(kotlin.Int;kotlin.Number){}[0]
final fun context(kotlin/Int) callables.test/regularFun(kotlin/Number, kotlin/Long): kotlin/String // callables.test/regularFun|regularFun!kotlin.Int(kotlin.Number;kotlin.Long){}[0]
final fun context(kotlin/Int) callables.test/regularFun(kotlin/Number, kotlin/Number): kotlin/String // callables.test/regularFun|regularFun!kotlin.Int(kotlin.Number;kotlin.Number){}[0]
final fun context(kotlin/Int) (kotlin/Int).callables.test/regularFun(): kotlin/String // callables.test/regularFun|regularFun!kotlin.Int@kotlin.Int(){}[0]
final fun context(kotlin/Long) (kotlin/Long).callables.test/regularFun(): kotlin/String // callables.test/regularFun|regularFun!kotlin.Int@kotlin.Long(){}[0]
final fun context(kotlin/Number) (kotlin/Number).callables.test/regularFun(): kotlin/String // callables.test/regularFun|regularFun!kotlin.Int@kotlin.Number(){}[0]
final fun context(kotlin/Int, kotlin/Long) callables.test/regularFun(): kotlin/String // callables.test/regularFun|regularFun!kotlin.Int!kotlin.Long(){}[0]
final fun context(kotlin/Int, kotlin/Long) callables.test/regularFun(kotlin/Int): kotlin/String // callables.test/regularFun|regularFun!kotlin.Int!kotlin.Long(kotlin.Int){}[0]
final fun context(kotlin/Int, kotlin/Long) callables.test/regularFun(kotlin/Number): kotlin/String // callables.test/regularFun|regularFun!kotlin.Int!kotlin.Long(kotlin.Number){}[0]
final fun context(kotlin/Int, kotlin/Long) callables.test/regularFun(kotlin/Int, kotlin/Long): kotlin/String // callables.test/regularFun|regularFun!kotlin.Int!kotlin.Long(kotlin.Int;kotlin.Long){}[0]
final fun context(kotlin/Int, kotlin/Long) callables.test/regularFun(kotlin/Int, kotlin/Number): kotlin/String // callables.test/regularFun|regularFun!kotlin.Int!kotlin.Long(kotlin.Int;kotlin.Number){}[0]
final fun context(kotlin/Int, kotlin/Long) callables.test/regularFun(kotlin/Number, kotlin/Long): kotlin/String // callables.test/regularFun|regularFun!kotlin.Int!kotlin.Long(kotlin.Number;kotlin.Long){}[0]
final fun context(kotlin/Int, kotlin/Long) callables.test/regularFun(kotlin/Number, kotlin/Number): kotlin/String // callables.test/regularFun|regularFun!kotlin.Int!kotlin.Long(kotlin.Number;kotlin.Number){}[0]
final fun context(kotlin/Int, kotlin/Int) (kotlin/Int).callables.test/regularFun(): kotlin/String // callables.test/regularFun|regularFun!kotlin.Int!kotlin.Long@kotlin.Int(){}[0]
final fun context(kotlin/Long, kotlin/Int) (kotlin/Long).callables.test/regularFun(): kotlin/String // callables.test/regularFun|regularFun!kotlin.Int!kotlin.Long@kotlin.Long(){}[0]
final fun context(kotlin/Number, kotlin/Int) (kotlin/Number).callables.test/regularFun(): kotlin/String // callables.test/regularFun|regularFun!kotlin.Int!kotlin.Long@kotlin.Number(){}[0]
final suspend fun callables.test/suspendFun(kotlin/Int, kotlin.coroutines/SuspendFunction1<kotlin/Int, kotlin/String>): kotlin/String // callables.test/suspendFun|suspendFun(kotlin.Int;kotlin.coroutines.SuspendFunction1<kotlin.Int,kotlin.String>){}[0]
final suspend fun callables.test/suspendFun(kotlin/Int, kotlin/Function1<kotlin/Int, kotlin/String>): kotlin/String // callables.test/suspendFun|suspendFun(kotlin.Int;kotlin.Function1<kotlin.Int,kotlin.String>){}[0]
final fun <#A: kotlin.text/Appendable & kotlin/CharSequence> callables.test/typeParameterFun(#A): kotlin/String // callables.test/typeParameterFun|typeParameterFun(0:0){0ยง<kotlin.CharSequence&kotlin.text.Appendable>}[0]
final fun <#A: kotlin/Any> callables.test/typeParameterFun(#A): kotlin/String // callables.test/typeParameterFun|typeParameterFun(0:0){0ยง<kotlin.Any>}[0]
final fun <#A: kotlin/Any?> callables.test/typeParameterFun(#A): kotlin/String // callables.test/typeParameterFun|typeParameterFun(0:0){0ยง<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> callables.test/typeParameterFun(kotlin/String): kotlin/String // callables.test/typeParameterFun|typeParameterFun(kotlin.String){0ยง<kotlin.Any?>}[0]
final fun <#A: kotlin/CharSequence> callables.test/typeParameterFun(#A): kotlin/String // callables.test/typeParameterFun|typeParameterFun(0:0){0ยง<kotlin.CharSequence>}[0]
final fun callables.test/typeParameterFun(kotlin/String): kotlin/String // callables.test/typeParameterFun|typeParameterFun(kotlin.String){}[0]
final fun callables.test/varargFun(kotlin/Array<in kotlin/Int>): kotlin/String // callables.test/varargFun|varargFun(kotlin.Array<in|kotlin.Int>){}[0]
final fun callables.test/varargFun(kotlin/Array<in kotlin/String>): kotlin/String // callables.test/varargFun|varargFun(kotlin.Array<in|kotlin.String>){}[0]
final fun callables.test/varargFun(kotlin/Array<kotlin/Int>): kotlin/String // callables.test/varargFun|varargFun(kotlin.Array<kotlin.Int>){}[0]
final fun callables.test/varargFun(kotlin/Array<kotlin/String>): kotlin/String // callables.test/varargFun|varargFun(kotlin.Array<kotlin.String>){}[0]
final fun callables.test/varargFun(kotlin/Array<out kotlin/Int>): kotlin/String // callables.test/varargFun|varargFun(kotlin.Array<out|kotlin.Int>){}[0]
final fun callables.test/varargFun(kotlin/Array<out kotlin/String>): kotlin/String // callables.test/varargFun|varargFun(kotlin.Array<out|kotlin.String>){}[0]
final fun callables.test/varargFun(kotlin/Array<out kotlin/String>...): kotlin/String // callables.test/varargFun|varargFun(kotlin.Array<out|kotlin.String>...){}[0]
final fun callables.test/varargFun(kotlin/IntArray...): kotlin/String // callables.test/varargFun|varargFun(kotlin.IntArray...){}[0]
