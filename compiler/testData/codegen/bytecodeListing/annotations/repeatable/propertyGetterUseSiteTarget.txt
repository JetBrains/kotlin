@kotlin.jvm.internal.RepeatableContainer
@java.lang.annotation.Retention(value=RUNTIME)
@kotlin.Metadata
public annotation class A$Container {
    // source: 'propertyGetterUseSiteTarget.kt'
    public abstract method value(): A[]
    public inner class A$Container
}

@kotlin.annotation.Repeatable
@java.lang.annotation.Retention(value=RUNTIME)
@java.lang.annotation.Repeatable(value=A$Container::class)
@kotlin.Metadata
public annotation class A {
    // source: 'propertyGetterUseSiteTarget.kt'
    public abstract method v(): java.lang.String
    public inner class A$Container
}

@kotlin.Metadata
public final class PropertyGetterUseSiteTargetKt {
    // source: 'propertyGetterUseSiteTarget.kt'
    private final static field ab: int
    static method <clinit>(): void
    public final static @A$Container(value=[A(v="a"), A(v="b")]) method getAb(): int
    public final static @A$Container(value=[A(v="c"), A(v="d")]) method getCd(): int
    public final static @A$Container(value=[A(v="e"), A(v="f")]) method getEf(): int
    public final static @A$Container(value=[A(v="g"), A(v="h")]) method getGh(): int
    public final static method getIj(): int
    public final static @A$Container(value=[A(v="i"), A(v="j")]) method setIj(p0: int): void
    public inner class A$Container
}
