package

public val allProhibited: (x: kotlin.Int) -> kotlin.Unit
public val inVal: (x: kotlin.Int) -> kotlin.Unit
public val valProhibited: (x: kotlin.Int) -> kotlin.Unit
public val varProhibited: (x: kotlin.Int) -> kotlin.Unit
public fun f(/*0*/ vararg x: kotlin.Int /*kotlin.IntArray*/): kotlin.Unit
public fun inParam(/*0*/ fn: (x: kotlin.Int) -> kotlin.Unit): kotlin.Unit
public fun inParamNested(/*0*/ fn1: (fn2: (n: kotlin.Int) -> kotlin.Unit) -> kotlin.Unit): kotlin.Unit
public fun inReturn(): (x: kotlin.Int) -> kotlin.Unit

public final class A : (kotlin.Int) -> kotlin.Unit {
    public constructor A()
    public final val prop: (x: kotlin.Int) -> kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ fun invoke(/*0*/ p1: kotlin.Int): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
