package

internal fun foo(): kotlin.List<kotlin.Int>
internal fun Pair<kotlin.Int, kotlin.Int>.map(/*0*/ f: (Pair<kotlin.Int, kotlin.Int>) -> kotlin.Int): kotlin.List<kotlin.Int>

kotlin.data() internal final class Pair</*0*/ out A, /*1*/ out B> {
    public constructor Pair</*0*/ out A, /*1*/ out B>(/*0*/ first: A, /*1*/ second: B)
    internal final val first: A
    internal final val second: B
    internal final /*synthesized*/ fun component1(): A
    internal final /*synthesized*/ fun component2(): B
    internal final /*synthesized*/ fun copy(/*0*/ first: A = ..., /*1*/ second: B = ...): Pair<A, B>
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
