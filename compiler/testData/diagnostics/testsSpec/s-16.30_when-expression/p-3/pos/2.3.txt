package

public fun case_1(/*0*/ value1: kotlin.Any, /*1*/ value2: kotlin.Any, /*2*/ value3: A, /*3*/ value4: B, /*4*/ value5: C, /*5*/ value6: D, /*6*/ value7: kotlin.Any, /*7*/ value8: kotlin.Any, /*8*/ value9: kotlin.Any): kotlin.String
public fun case_2(/*0*/ value1: kotlin.Any, /*1*/ value2: kotlin.Any, /*2*/ value3: A, /*3*/ value4: B, /*4*/ value5: C, /*5*/ value6: D, /*6*/ value7: kotlin.Any, /*7*/ value8: kotlin.Any, /*8*/ value9: kotlin.Any): kotlin.String

public open class A {
    public constructor A()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public open class B : A {
    public constructor B()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public open class C : B {
    public constructor C()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public object D {
    private constructor D()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
