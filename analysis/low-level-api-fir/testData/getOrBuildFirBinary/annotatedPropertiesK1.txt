KT element: KtClass
KT element text:
public final class Foo public constructor(withDefaultGetter: kotlin.Int, withDefaultSetter: kotlin.String, both: kotlin.String, @MyAnnotation6 allAnnotations: kotlin.String) {
    @MyAnnotation4 @field:MyAnnotation5 public final var allAnnotations: kotlin.String /* compiled code */ /* hasBackingField: true */
        @MyAnnotation public final get
        @MyAnnotation2 public final set

    public final var both: kotlin.String /* compiled code */ /* hasBackingField: true */
        @Anno public final get
        @Anno public final set

    @Anno internal final var custom: kotlin.String /* compiled code */ /* hasBackingField: true */
        internal final get() { /* compiled code */ }
        internal final set(value: kotlin.String) { /* compiled code */ }

    @Anno internal final var variable: kotlin.String /* compiled code */ /* hasBackingField: true */

    @Anno internal final var withCustomGetter: kotlin.String /* compiled code */ /* hasBackingField: true */
        internal final get() { /* compiled code */ }

    @Anno internal final var withCustomSetter: kotlin.String /* compiled code */ /* hasBackingField: true */
        internal final set(value: kotlin.String) { /* compiled code */ }

    public final val withDefaultGetter: kotlin.Int /* compiled code */ /* hasBackingField: true */
        @Anno public final get

    public final var withDefaultSetter: kotlin.String /* compiled code */ /* hasBackingField: true */
        @Anno public final set

    public final var @receiver:MyAnnotation7 @MyAnnotation8 kotlin.Int.memberPropertyWithReceiver: kotlin.Unit /* compiled code */ /* hasBackingField: false */
        public final get() { /* compiled code */ }
        public final set(value: kotlin.Unit) { /* compiled code */ }

    public final fun @receiver:MyAnnotation7 @MyAnnotation8 kotlin.Int.memberFunctionWithReceiver(): kotlin.Unit { /* compiled code */ }

    public final fun @receiver:MyAnnotation7 @MyAnnotation8 kotlin.Int?.memberFunctionWithReceiverWithNullableReceiver(l: kotlin.Long): kotlin.Unit { /* compiled code */ }
}
FIR element: FirRegularClassImpl
FIR source kind: KtRealSourceElementKind

FIR element rendered:
public final [ResolvedTo(BODY_RESOLVE)] class Foo : R|kotlin/Any| {
    public final [ResolvedTo(BODY_RESOLVE)] fun [ResolvedTo(RAW_FIR)] @RECEIVER:R|MyAnnotation7|() R|@R|MyAnnotation8|()  kotlin/Int|.memberFunctionWithReceiver(): R|kotlin/Unit|

    public final [ResolvedTo(BODY_RESOLVE)] fun [ResolvedTo(RAW_FIR)] @RECEIVER:R|MyAnnotation7|() R|@R|MyAnnotation8|()  kotlin/Int?|.memberFunctionWithReceiverWithNullableReceiver([ResolvedTo(BODY_RESOLVE)] l: R|kotlin/Long|): R|kotlin/Unit|

    @R|MyAnnotation4|() field:@FIELD:R|MyAnnotation5|() public final [ResolvedTo(BODY_RESOLVE)] [HasBackingFieldKey=true] var allAnnotations: R|kotlin/String|
        @R|MyAnnotation|() public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Foo] get(): R|kotlin/String|
        @R|MyAnnotation2|() public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Foo] set([ResolvedTo(BODY_RESOLVE)] value: R|kotlin/String|): R|kotlin/Unit|

    public final [ResolvedTo(BODY_RESOLVE)] [HasBackingFieldKey=true] var both: R|kotlin/String|
        @R|Anno|() public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Foo] get(): R|kotlin/String|
        @R|Anno|() public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Foo] set([ResolvedTo(BODY_RESOLVE)] value: R|kotlin/String|): R|kotlin/Unit|

    @R|Anno|() internal final [ResolvedTo(BODY_RESOLVE)] [HasBackingFieldKey=true] var custom: R|kotlin/String|
        internal [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Foo] get(): R|kotlin/String|
        internal [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Foo] set([ResolvedTo(BODY_RESOLVE)] value: R|kotlin/String|): R|kotlin/Unit|

    public final [ResolvedTo(BODY_RESOLVE)] [HasBackingFieldKey=false] var [ResolvedTo(RAW_FIR)] @RECEIVER:R|MyAnnotation7|() R|@R|MyAnnotation8|()  kotlin/Int|.memberPropertyWithReceiver: R|kotlin/Unit|
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Foo] get(): R|kotlin/Unit|
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Foo] set([ResolvedTo(BODY_RESOLVE)] value: R|kotlin/Unit|): R|kotlin/Unit|

    @R|Anno|() internal final [ResolvedTo(BODY_RESOLVE)] [HasBackingFieldKey=true] var variable: R|kotlin/String|
        internal [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Foo] get(): R|kotlin/String|
        internal [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Foo] set([ResolvedTo(BODY_RESOLVE)] value: R|kotlin/String|): R|kotlin/Unit|

    @R|Anno|() internal final [ResolvedTo(BODY_RESOLVE)] [HasBackingFieldKey=true] var withCustomGetter: R|kotlin/String|
        internal [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Foo] get(): R|kotlin/String|
        internal [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Foo] set([ResolvedTo(BODY_RESOLVE)] value: R|kotlin/String|): R|kotlin/Unit|

    @R|Anno|() internal final [ResolvedTo(BODY_RESOLVE)] [HasBackingFieldKey=true] var withCustomSetter: R|kotlin/String|
        internal [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Foo] get(): R|kotlin/String|
        internal [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Foo] set([ResolvedTo(BODY_RESOLVE)] value: R|kotlin/String|): R|kotlin/Unit|

    public final [ResolvedTo(BODY_RESOLVE)] [HasBackingFieldKey=true] val withDefaultGetter: R|kotlin/Int|
        @R|Anno|() public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Foo] get(): R|kotlin/Int|

    public final [ResolvedTo(BODY_RESOLVE)] [HasBackingFieldKey=true] var withDefaultSetter: R|kotlin/String|
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Foo] get(): R|kotlin/String|
        @R|Anno|() public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Foo] set([ResolvedTo(BODY_RESOLVE)] value: R|kotlin/String|): R|kotlin/Unit|

    public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Foo] constructor([ResolvedTo(BODY_RESOLVE)] withDefaultGetter: R|kotlin/Int|, [ResolvedTo(BODY_RESOLVE)] withDefaultSetter: R|kotlin/String|, [ResolvedTo(BODY_RESOLVE)] both: R|kotlin/String|, [ResolvedTo(BODY_RESOLVE)] @R|MyAnnotation6|() allAnnotations: R|kotlin/String|): R|Foo|

}
