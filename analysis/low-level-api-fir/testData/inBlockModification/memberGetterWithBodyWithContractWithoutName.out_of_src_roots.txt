BEFORE MODIFICATION:
public final [ResolvedTo(BODY_RESOLVE)] var <no name provided>: R|kotlin/Int|
    public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=A] get(): R|kotlin/Int| {
        <Unresolved name: contract>#(<L> = [ResolvedTo(BODY_RESOLVE)] contract@fun <anonymous>(): <ERROR TYPE REF: Unresolved name: req> <inline=Unknown>  {
            ^ <Unresolved name: req>#
        }
        )
        local final [ResolvedTo(BODY_RESOLVE)] fun doSmth([ResolvedTo(BODY_RESOLVE)] i: R|kotlin/String|): R|kotlin/Int| {
            ^doSmth Int(4)
        }

        ^ R|<local>/doSmth|(String(str))
    }
    public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=A] set([ResolvedTo(BODY_RESOLVE)] value: R|kotlin/Int|): R|kotlin/Unit| {
        ^ Q|kotlin/Unit|
    }

AFTER MODIFICATION:
public final [ResolvedTo(ANNOTATION_ARGUMENTS)] var <no name provided>: R|kotlin/Int|
    public [ResolvedTo(ANNOTATION_ARGUMENTS)] [ContainingClassKey=A] get(): R|kotlin/Int| { LAZY_BLOCK }
    public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=A] set([ResolvedTo(BODY_RESOLVE)] value: R|kotlin/Int|): R|kotlin/Unit| {
        ^ Q|kotlin/Unit|
    }
