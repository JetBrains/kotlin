library {
  // module name: <annotations.kt>

  library fragment {
    // package name: test

    // class name: test/AnnoBackingField
    // class name: test/AnnoClass
    // class name: test/AnnoClassTypeParameter
    // class name: test/AnnoClassUsageTypeParameter
    // class name: test/AnnoConstructor
    // class name: test/AnnoConstructorParameter
    // class name: test/AnnoDelegatedField
    // class name: test/AnnoFunction
    // class name: test/AnnoFunctionExtensionReceiver
    // class name: test/AnnoFunctionParam
    // class name: test/AnnoFunctionTypeParameter
    // class name: test/AnnoGetter
    // class name: test/AnnoProperty
    // class name: test/AnnoPropertyExtensionReceiver
    // class name: test/AnnoSetParam
    // class name: test/AnnoSetParam2
    // class name: test/AnnoSetter
    // class name: test/AnnoSetter2
    // class name: test/B
    // class name: test/Foo

    public final annotation class test/AnnoBackingField : kotlin/Annotation {

      public constructor()
    }

    public final annotation class test/AnnoClass : kotlin/Annotation {

      public constructor()
    }

    @kotlin/annotation/Target(allowedTargets = [kotlin/annotation/AnnotationTarget.TYPE_PARAMETER])
    public final annotation class test/AnnoClassTypeParameter : kotlin/Annotation {

      public constructor()
    }

    @kotlin/annotation/Target(allowedTargets = [kotlin/annotation/AnnotationTarget.TYPE])
    public final annotation class test/AnnoClassUsageTypeParameter : kotlin/Annotation {

      public constructor()
    }

    public final annotation class test/AnnoConstructor : kotlin/Annotation {

      public constructor()
    }

    public final annotation class test/AnnoConstructorParameter : kotlin/Annotation {

      public constructor()
    }

    public final annotation class test/AnnoDelegatedField : kotlin/Annotation {

      public constructor()
    }

    public final annotation class test/AnnoFunction : kotlin/Annotation {

      public constructor()
    }

    public final annotation class test/AnnoFunctionExtensionReceiver : kotlin/Annotation {

      public constructor()
    }

    public final annotation class test/AnnoFunctionParam : kotlin/Annotation {

      public constructor()
    }

    @kotlin/annotation/Target(allowedTargets = [kotlin/annotation/AnnotationTarget.TYPE_PARAMETER])
    public final annotation class test/AnnoFunctionTypeParameter : kotlin/Annotation {

      public constructor()
    }

    public final annotation class test/AnnoGetter : kotlin/Annotation {

      public constructor()
    }

    public final annotation class test/AnnoProperty : kotlin/Annotation {

      public constructor()
    }

    public final annotation class test/AnnoPropertyExtensionReceiver : kotlin/Annotation {

      public constructor()
    }

    public final annotation class test/AnnoSetParam : kotlin/Annotation {

      public constructor()
    }

    public final annotation class test/AnnoSetParam2 : kotlin/Annotation {

      public constructor()
    }

    public final annotation class test/AnnoSetter : kotlin/Annotation {

      public constructor()
    }

    public final annotation class test/AnnoSetter2 : kotlin/Annotation {

      public constructor()
    }

    public final class test/B<@test/AnnoClassTypeParameter T#0 /* T */> : kotlin/Any {

      public constructor()
    }

    @test/AnnoClass
    public final class test/Foo : kotlin/Any {

      @test/AnnoConstructor
      public constructor(@test/AnnoConstructorParameter i: kotlin/Int)

      public final /* delegated */ val immutableProp: kotlin/Int
        public final /* non-default */ get

      public final var mutableProp: kotlin/Int
        public final get
        @test/AnnoSetter2
        public final /* non-default */ set(@test/AnnoSetParam2 x: kotlin/Int)

      @test/AnnoProperty
      public final var prop: kotlin/Int
        @test/AnnoGetter
        public final /* non-default */ get
        @test/AnnoSetter
        public final /* non-default */ set(@test/AnnoSetParam x: kotlin/Int)
    }

    package {

      @test/AnnoFunction
      public final fun test/Foo.extfun(@test/AnnoFunctionParam x: kotlin/Int): kotlin/Unit

      public final fun <@test/AnnoFunctionTypeParameter T#0 /* T */> f(x: test/B<@test/AnnoClassUsageTypeParameter kotlin/Int>): kotlin/Unit

      @test/AnnoPropertyExtensionReceiver
      public final val test/Foo.extProp: kotlin/Int
        public final /* non-default */ get
    }
  }
}
