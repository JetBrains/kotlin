class Wrapper {
  constructor(baseUrl: String) /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  var baseUrl: String
    field = baseUrl
    get
    set

}

open enum class ConfigurationParameter : Enum<ConfigurationParameter> {
  BASE_URL = ConfigurationParameter(apply = local fun <anonymous>(value: String, nc: Wrapper) {
    println(message = "Base url updated from config parameters ".plus(other = nc.<get-baseUrl>()).plus(other = " -> ").plus(other = value))
    nc.<set-baseUrl>(<set-?> = value)
  }
)

  private constructor(apply: Function2<String, Wrapper, Unit>) {
    super/*Enum*/<ConfigurationParameter>()
    /* <init>() */

  }

  fun values(): Array<ConfigurationParameter> /* Synthetic body for ENUM_VALUES */

  fun valueOf(value: String): ConfigurationParameter /* Synthetic body for ENUM_VALUEOF */

}
