Marked.kt:
  FILE[kind=File[packageFqName=<root>]]
    PACKAGE_DIRECTIVE
    IMPORT_LIST
    CLASS[classId=/Marked, fqName=Marked, isClsStubCompiledToJvmDefaultImplementation=false, isEnumEntry=false, isInterface=false, isLocal=false, isTopLevel=true, name=Marked, superNames=[]]
      MODIFIER_LIST[]
        ANNOTATION_ENTRY[hasValueArguments=false, shortName=MustUseReturnValue]
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=MustUseReturnValue]
      CLASS_BODY
        FUN[fqName=Marked.alreadyApplied, hasBody=true, hasNoExpressionBody=false, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=alreadyApplied]
          VALUE_PARAMETER_LIST
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=String]
        PROPERTY[fqName=Marked.prop, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=true, name=prop]
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=String]
          PROPERTY_ACCESSOR[hasBody=true, hasNoExpressionBody=false, isGetter=true, mayHaveContract=false]
            VALUE_PARAMETER_LIST
          PROPERTY_ACCESSOR[hasBody=true, hasNoExpressionBody=true, isGetter=false, mayHaveContract=false]
            VALUE_PARAMETER_LIST
              VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=value]
        FUN[fqName=Marked.ignorable, hasBody=true, hasNoExpressionBody=false, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=ignorable]
          MODIFIER_LIST[]
            ANNOTATION_ENTRY[hasValueArguments=false, shortName=IgnorableReturnValue]
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=IgnorableReturnValue]
          VALUE_PARAMETER_LIST
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=String]


MyEnum.kt:
  FILE[kind=File[packageFqName=<root>]]
    PACKAGE_DIRECTIVE
    IMPORT_LIST
    CLASS[classId=/MyEnum, fqName=MyEnum, isClsStubCompiledToJvmDefaultImplementation=false, isEnumEntry=false, isInterface=false, isLocal=false, isTopLevel=true, name=MyEnum, superNames=[]]
      MODIFIER_LIST[enum]
      CLASS_BODY
        ENUM_ENTRY[classId=null, fqName=MyEnum.A, isClsStubCompiledToJvmDefaultImplementation=false, isEnumEntry=true, isInterface=false, isLocal=false, isTopLevel=false, name=A, superNames=[]]
        ENUM_ENTRY[classId=null, fqName=MyEnum.B, isClsStubCompiledToJvmDefaultImplementation=false, isEnumEntry=true, isInterface=false, isLocal=false, isTopLevel=false, name=B, superNames=[]]
        FUN[fqName=MyEnum.foo, hasBody=true, hasNoExpressionBody=false, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=foo]
          VALUE_PARAMETER_LIST


Unmarked.kt:
  FILE[kind=File[packageFqName=<root>]]
    PACKAGE_DIRECTIVE
    IMPORT_LIST
    CLASS[classId=/Unmarked, fqName=Unmarked, isClsStubCompiledToJvmDefaultImplementation=false, isEnumEntry=false, isInterface=false, isLocal=false, isTopLevel=true, name=Unmarked, superNames=[]]
      CLASS_BODY
        FUN[fqName=Unmarked.getStuff, hasBody=true, hasNoExpressionBody=false, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=getStuff]
          VALUE_PARAMETER_LIST
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=String]
        PROPERTY[fqName=Unmarked.prop, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=true, name=prop]
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=String]
          PROPERTY_ACCESSOR[hasBody=true, hasNoExpressionBody=false, isGetter=true, mayHaveContract=false]
            VALUE_PARAMETER_LIST
          PROPERTY_ACCESSOR[hasBody=true, hasNoExpressionBody=true, isGetter=false, mayHaveContract=false]
            VALUE_PARAMETER_LIST
              VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=value]
        FUN[fqName=Unmarked.ignorable, hasBody=true, hasNoExpressionBody=false, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=ignorable]
          MODIFIER_LIST[]
            ANNOTATION_ENTRY[hasValueArguments=false, shortName=IgnorableReturnValue]
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=IgnorableReturnValue]
          VALUE_PARAMETER_LIST
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=String]


markedTopLevel.kt:
  FILE[kind=Facade[packageFqName=<root>, facadeFqName=MarkedTopLevelKt]]
    FILE_ANNOTATION_LIST
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=MustUseReturnValue]
        ANNOTATION_TARGET[useSiteTarget=FILE]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=MustUseReturnValue]
    PACKAGE_DIRECTIVE
    IMPORT_LIST
    FUN[fqName=markedTopFunction, hasBody=true, hasNoExpressionBody=false, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=markedTopFunction]
      VALUE_PARAMETER_LIST
      TYPE_REFERENCE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=String]
    PROPERTY[fqName=markedTopProperty, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=false, isExtension=false, isTopLevel=true, isVar=false, name=markedTopProperty]
      PROPERTY_ACCESSOR[hasBody=true, hasNoExpressionBody=false, isGetter=true, mayHaveContract=false]
        VALUE_PARAMETER_LIST


unmarkedTopLevel.kt:
  FILE[kind=Facade[packageFqName=<root>, facadeFqName=UnmarkedTopLevelKt]]
    PACKAGE_DIRECTIVE
    IMPORT_LIST
    FUN[fqName=unmarkedTopFunction, hasBody=true, hasNoExpressionBody=false, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=unmarkedTopFunction]
      VALUE_PARAMETER_LIST
      TYPE_REFERENCE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=String]
    PROPERTY[fqName=unmarkedTopProperty, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=false, isExtension=false, isTopLevel=true, isVar=false, name=unmarkedTopProperty]
      PROPERTY_ACCESSOR[hasBody=true, hasNoExpressionBody=false, isGetter=true, mayHaveContract=false]
        VALUE_PARAMETER_LIST
    FUN[fqName=ignorableTopLvl, hasBody=true, hasNoExpressionBody=false, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=ignorableTopLvl]
      MODIFIER_LIST[]
        ANNOTATION_ENTRY[hasValueArguments=false, shortName=IgnorableReturnValue]
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=IgnorableReturnValue]
      VALUE_PARAMETER_LIST
      TYPE_REFERENCE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=String]
