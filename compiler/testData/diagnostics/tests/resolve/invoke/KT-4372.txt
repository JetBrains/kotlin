package

public val </*0*/ T> T.javaClass: java.lang.Class<T>
public fun </*0*/ reified T> javaClass(): java.lang.Class<T>
public fun </*0*/ TInner, /*1*/ TOuter> Foo<TInner, TOuter>.invoke(/*0*/ name: kotlin.String, /*1*/ content: TInner.() -> kotlin.Unit): kotlin.Unit

public final enum class EnumClass : kotlin.Enum<EnumClass> {
    private constructor EnumClass(/*0*/ x: kotlin.String)
    public final override /*1*/ /*fake_override*/ val name: kotlin.String
    public final override /*1*/ /*fake_override*/ val ordinal: kotlin.Int
    public final val x: kotlin.String
    protected final override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
    public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: EnumClass): kotlin.Int
    public final override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    protected/*protected and package*/ final override /*1*/ /*fake_override*/ /*isHiddenForResolutionEverywhereBesideSupercalls*/ fun finalize(): kotlin.Unit
    public final override /*1*/ /*fake_override*/ /*isHiddenForResolutionEverywhereBesideSupercalls*/ fun getDeclaringClass(): java.lang.Class<EnumClass!>!
    public final override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    // Static members
    public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): EnumClass
    public final /*synthesized*/ fun values(): kotlin.Array<EnumClass>
}

public final class Foo</*0*/ TInner, /*1*/ TOuter> {
    public constructor Foo</*0*/ TInner, /*1*/ TOuter>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final fun invoke(/*0*/ content: TInner.() -> kotlin.Unit): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public object Y {
    private constructor Y()
    public final val x: java.lang.Class<EnumClass>
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
