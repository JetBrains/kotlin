FILE /membersImportedFromObject.kt
  CLASS OBJECT A
    $this: VALUE_PARAMETER this@A: A
    CONSTRUCTOR private constructor A()
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
        INSTANCE_INITIALIZER_CALL classDescriptor='A'
    FUN public final fun foo(): kotlin.Int
      $this: VALUE_PARAMETER this@A: A
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='foo(): Int'
          CONST Int type=kotlin.Int value='1'
    FUN public final fun kotlin.Int.fooExt(): kotlin.Int
      $this: VALUE_PARAMETER this@A: A
      $receiver: VALUE_PARAMETER this@fooExt: Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='fooExt() on Int: Int'
          CONST Int type=kotlin.Int value='2'
    PROPERTY public final val bar: kotlin.Int = 42
      FIELD PROPERTY_BACKING_FIELD public final val bar: kotlin.Int = 42
        EXPRESSION_BODY
          CONST Int type=kotlin.Int value='42'
      FUN DEFAULT_PROPERTY_ACCESSOR public final fun <get-bar>(): kotlin.Int
        $this: VALUE_PARAMETER this@A: A
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='<get-bar>(): Int'
            GET_FIELD 'bar: Int' type=kotlin.Int origin=null
              receiver: GET_VAR 'this@A: A' type=A origin=null
    PROPERTY public final val kotlin.Int.barExt: kotlin.Int
      FUN public final fun kotlin.Int.<get-barExt>(): kotlin.Int
        $this: VALUE_PARAMETER this@A: A
        $receiver: VALUE_PARAMETER this@barExt: Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='<get-barExt>() on Int: Int'
            CONST Int type=kotlin.Int value='43'
    FUN FAKE_OVERRIDE public open override fun equals(other: kotlin.Any?): kotlin.Boolean
      $this: VALUE_PARAMETER this@Any: Any
      VALUE_PARAMETER value-parameter other: kotlin.Any?
    FUN FAKE_OVERRIDE public open override fun hashCode(): kotlin.Int
      $this: VALUE_PARAMETER this@Any: Any
    FUN FAKE_OVERRIDE public open override fun toString(): kotlin.String
      $this: VALUE_PARAMETER this@Any: Any
  PROPERTY public val test1: kotlin.Int
    FIELD PROPERTY_BACKING_FIELD public val test1: kotlin.Int
      EXPRESSION_BODY
        CALL 'foo(): Int' type=kotlin.Int origin=null
          $this: GET_OBJECT 'A' type=A
    FUN DEFAULT_PROPERTY_ACCESSOR public fun <get-test1>(): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-test1>(): Int'
          GET_FIELD 'test1: Int' type=kotlin.Int origin=null
  PROPERTY public val test2: kotlin.Int = 42
    FIELD PROPERTY_BACKING_FIELD public val test2: kotlin.Int = 42
      EXPRESSION_BODY
        CALL '<get-bar>(): Int' type=kotlin.Int origin=GET_PROPERTY
          $this: GET_OBJECT 'A' type=A
    FUN DEFAULT_PROPERTY_ACCESSOR public fun <get-test2>(): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-test2>(): Int'
          GET_FIELD 'test2: Int' type=kotlin.Int origin=null
  PROPERTY public val test3: kotlin.Int
    FIELD PROPERTY_BACKING_FIELD public val test3: kotlin.Int
      EXPRESSION_BODY
        CALL 'fooExt() on Int: Int' type=kotlin.Int origin=null
          $this: GET_OBJECT 'A' type=A
          $receiver: CONST Int type=kotlin.Int value='1'
    FUN DEFAULT_PROPERTY_ACCESSOR public fun <get-test3>(): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-test3>(): Int'
          GET_FIELD 'test3: Int' type=kotlin.Int origin=null
  PROPERTY public val test4: kotlin.Int
    FIELD PROPERTY_BACKING_FIELD public val test4: kotlin.Int
      EXPRESSION_BODY
        CALL '<get-barExt>() on Int: Int' type=kotlin.Int origin=GET_PROPERTY
          $this: GET_OBJECT 'A' type=A
          $receiver: CONST Int type=kotlin.Int value='1'
    FUN DEFAULT_PROPERTY_ACCESSOR public fun <get-test4>(): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-test4>(): Int'
          GET_FIELD 'test4: Int' type=kotlin.Int origin=null

