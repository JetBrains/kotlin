FILE fqName:<root> fileName:/kt27933.kt
  FUN name:box visibility:public modality:FINAL <> () returnType:kotlin.String
    BLOCK_BODY
      VAR name:r type:kotlin.String [var]
        CONST String type=kotlin.String value=""
      WHEN type=kotlin.Unit origin=IF
        BRANCH
          if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
            $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
              arg0: GET_VAR 'var r: kotlin.String [var] declared in <root>.box' type=kotlin.String origin=null
              arg1: CONST String type=kotlin.String value=""
          then: BLOCK type=kotlin.Unit origin=IF
        BRANCH
          if: CONST Boolean type=kotlin.Boolean value=true
          then: SET_VAR 'var r: kotlin.String [var] declared in <root>.box' type=kotlin.Unit origin=PLUSEQ
            CALL 'public final fun plus (other: kotlin.Any?): kotlin.String [operator] declared in kotlin.String' type=kotlin.String origin=PLUSEQ
              $this: GET_VAR 'var r: kotlin.String [var] declared in <root>.box' type=kotlin.String origin=PLUSEQ
              other: CONST String type=kotlin.String value="O"
      WHEN type=kotlin.Unit origin=IF
        BRANCH
          if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
            arg0: GET_VAR 'var r: kotlin.String [var] declared in <root>.box' type=kotlin.String origin=null
            arg1: CONST String type=kotlin.String value="O"
          then: SET_VAR 'var r: kotlin.String [var] declared in <root>.box' type=kotlin.Unit origin=PLUSEQ
            CALL 'public final fun plus (other: kotlin.Any?): kotlin.String [operator] declared in kotlin.String' type=kotlin.String origin=PLUSEQ
              $this: GET_VAR 'var r: kotlin.String [var] declared in <root>.box' type=kotlin.String origin=PLUSEQ
              other: CONST String type=kotlin.String value="K"
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        GET_VAR 'var r: kotlin.String [var] declared in <root>.box' type=kotlin.String origin=null
