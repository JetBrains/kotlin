/function_object.kt:(4,17): info: Generated Viper text for unit_function:
method global$fun_unit_function$fun_take$fun_take$$return$T_Unit$return$T_Unit(local$f: Ref)
  returns (ret: dom$Unit)
  requires acc(local$f.special$function_object_call_counter, write)
  requires special$duplicable(local$f)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
{
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$f): dom$Type), dom$Type$Function())
  label label$ret$0
}

/function_object.kt:(72,92): info: Generated Viper text for function_object_call:
method global$fun_function_object_call$fun_take$fun_take$T_Boolean$T_Int$return$T_Int$return$T_Int(local$g: Ref)
  returns (ret: Int)
  requires acc(local$g.special$function_object_call_counter, write)
  requires special$duplicable(local$g)
  ensures acc(local$g.special$function_object_call_counter, write)
  ensures old(local$g.special$function_object_call_counter) <=
    local$g.special$function_object_call_counter
{
  var anonymous$0: Int
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$g): dom$Type), dom$Type$Function())
  special$invoke_function_object(local$g)
  ret := anonymous$0
  goto label$ret$0
  label label$ret$0
}

/function_object.kt:(155,182): info: Generated Viper text for function_object_nested_call:
method global$fun_function_object_nested_call$fun_take$fun_take$T_Int$return$T_Int$fun_take$T_Boolean$return$T_Int$return$T_Int(local$f: Ref,
  local$g: Ref)
  returns (ret: Int)
  requires acc(local$f.special$function_object_call_counter, write)
  requires acc(local$g.special$function_object_call_counter, write)
  requires special$duplicable(local$f)
  requires special$duplicable(local$g)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures acc(local$g.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
  ensures old(local$g.special$function_object_call_counter) <=
    local$g.special$function_object_call_counter
{
  var anonymous$0: Int
  var anonymous$1: Int
  var anonymous$2: Int
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$f): dom$Type), dom$Type$Function())
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$g): dom$Type), dom$Type$Function())
  special$invoke_function_object(local$g)
  special$invoke_function_object(local$f)
  special$invoke_function_object(local$f)
  ret := anonymous$2
  goto label$ret$0
  label label$ret$0
}
