public class As/A {
    private field backingField: int
    private final @org.jetbrains.annotations.NotNull field init: java.lang.String
    private final field privateProperty: java.lang.String
    private final @org.jetbrains.annotations.NotNull field property: java.lang.String
    public method <init>(@org.jetbrains.annotations.NotNull p0: java.lang.String): void
    public final method getBackingField(): int
    public @org.jetbrains.annotations.NotNull method getExt(): java.lang.String
    public final @org.jetbrains.annotations.NotNull method getExt(@org.jetbrains.annotations.NotNull p0: java.lang.String): java.lang.String
    public final @org.jetbrains.annotations.NotNull method getInit(): java.lang.String
    public final method getMyInc(p0: int): int
    public @org.jetbrains.annotations.NotNull method getPrivate(): java.lang.String
    public @org.jetbrains.annotations.NotNull method getProperty(): java.lang.String
    public final method setBackingField(p0: int): void
}


public class As/B {
    private final @org.jetbrains.annotations.NotNull field property: java.lang.String
    public method <init>(@org.jetbrains.annotations.NotNull p0: java.lang.String): void
    public final @org.jetbrains.annotations.NotNull method getOpenProperty(): java.lang.String
    public @org.jetbrains.annotations.NotNull method getProperty(): java.lang.String
    public final @org.jetbrains.annotations.NotNull method getWithBackingFieldProperty(): java.lang.String
}


public final class As/GeneralAccessKt {
    private final static @org.jetbrains.annotations.NotNull field staticProperty: java.lang.String
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
    public final static @org.jetbrains.annotations.NotNull method getStaticExt(@org.jetbrains.annotations.NotNull p0: java.lang.String): java.lang.String
    public final static @org.jetbrains.annotations.NotNull method getStaticProperty(): java.lang.String
}
