FILE: lambdaInLambda.kt
    public final class StringBuilder : R|kotlin/Any| {
        public constructor(): R|StringBuilder| {
            super<R|kotlin/Any|>()
        }

        public final fun append(s: R|kotlin/String|): R|kotlin/Unit| {
        }

    }
    public final fun buildString(init: R|StringBuilder.() -> kotlin/Unit|): R|kotlin/String| {
    }
    public abstract interface Template<in X> : R|kotlin/Any| {
    }
    public final class KDocTemplate : R|Template<StringBuilder>| {
        public constructor(): R|KDocTemplate| {
            super<R|kotlin/Any|>()
        }

        public final fun definition(content: R|StringBuilder.() -> kotlin/Unit|): R|kotlin/Unit| {
        }

    }
    public final fun <U, T : R|Template<U>|> R|U|.insert(template: R|T|, build: R|T.() -> kotlin/Unit|): R|kotlin/Unit| {
    }
    public final fun test(ordinal: R|kotlin/Int|): R|kotlin/Unit| {
        R|/buildString|(<L> = buildString@fun R|StringBuilder|.<anonymous>(): R|kotlin/Unit| {
            this@R|special/anonymous|.R|/insert|<R|StringBuilder|, R|KDocTemplate|>(R|/KDocTemplate.KDocTemplate|(), <L> = insert@fun R|KDocTemplate|.<anonymous>(): R|kotlin/Unit| {
                this@R|special/anonymous|.R|/KDocTemplate.definition|(<L> = definition@fun R|StringBuilder|.<anonymous>(): R|kotlin/Unit| {
                    ^ R|<local>/ordinal|?.R|kotlin/let|<R|kotlin/Int|, R|kotlin/Unit|>(<L> = let@fun <anonymous>(it: R|kotlin/Int|): R|kotlin/Unit| <kind=EXACTLY_ONCE>  {
                        Unit
                    }
                    )
                }
                )
            }
            )
        }
        )
    }
