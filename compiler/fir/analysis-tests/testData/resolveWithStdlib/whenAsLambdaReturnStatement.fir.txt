FILE: whenAsLambdaReturnStatement.kt
    public final class Module : R|kotlin/Any| {
        public constructor(): R|Module| {
            super<R|kotlin/Any|>()
        }

    }
    public final fun getModule(): R|Module?| {
        ^getModule Null(null)
    }
    public final fun getInt(): R|kotlin/Int?| {
        ^getInt Null(null)
    }
    public final fun test_1(modules: R|kotlin/collections/Collection<Module>|, b: R|kotlin/Boolean|): R|kotlin/Unit| {
        lval res: R|kotlin/collections/Map<Module, kotlin/collections/List<Module>>| = R|<local>/modules|.R|kotlin/collections/groupBy|<R|Module|, R|Module|>(<L> = groupBy@fun <anonymous>(module: R|Module|): R|Module| <kind=UNKNOWN>  {
            ^ when () {
                R|<local>/b| ->  {
                    R|<local>/module|
                }
                else ->  {
                    R|<local>/module|
                }
            }

        }
        )
    }
    public final fun test_2(): R|kotlin/Unit| {
        lval x: R|kotlin/String| = R|kotlin/run|<R|kotlin/String|>(<L> = run@fun <anonymous>(): R|kotlin/String| <kind=EXACTLY_ONCE>  {
            ^ try {
                String()
            }
            finally {
                R|/getInt|()
            }

        }
        )
    }
