KT element: KtAnnotationEntry
FIR element: FirAnnotationCallImpl
FIR source kind: KtRealSourceElementKind

FIR element rendered:
@R|Anno|[Types](value = String(abc))

FIR FILE:
FILE: [ResolvedTo(IMPORTS)] typeOnAnnotationOnConstructorPropertyWithArgumentsScript.kts
    context(<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|)
    SCRIPT: [ResolvedTo(TYPES)] <script-typeOnAnnotationOnConstructorPropertyWithArgumentsScript.kts>
        [ResolvedTo(TYPES)] lval args: R|kotlin/Array<kotlin/String>|

        public final [ResolvedTo(ANNOTATION_ARGUMENTS)] class ResolveMe : R|A| {
            public [ResolvedTo(ANNOTATION_ARGUMENTS)] [ContainingClassKey=ResolveMe] constructor([ResolvedTo(ANNOTATION_ARGUMENTS)] [CorrespondingProperty=/ResolveMe.addCommaWarning] addCommaWarning: R|@R|Anno|(value = String(abc))  kotlin/Boolean| = LAZY_EXPRESSION): R|ResolveMe| {
                LAZY_super<R|A|>
            }

            public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] var addCommaWarning: R|@R|Anno|(value = String(abc))  kotlin/Boolean| = R|<local>/addCommaWarning|
                public [ResolvedTo(STATUS)] [ContainingClassKey=ResolveMe] get(): R|@R|Anno|(value = String(abc))  kotlin/Boolean|
                public [ResolvedTo(STATUS)] [ContainingClassKey=ResolveMe] set([ResolvedTo(STATUS)] value: R|@R|Anno|(value = String(abc))  kotlin/Boolean|): R|kotlin/Unit|

        }

        public open [ResolvedTo(STATUS)] class A : R|kotlin/Any| {
            public [ResolvedTo(STATUS)] [ContainingClassKey=A] constructor(): R|A| {
                LAZY_super<R|kotlin/Any|>
            }

        }

        @R|kotlin/annotation/Target|[Types](Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.TYPE|) public final [ResolvedTo(STATUS)] annotation class Anno : R|kotlin/Annotation| {
            public [ResolvedTo(STATUS)] [ContainingClassKey=Anno] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=/Anno.value] value: R|kotlin/String|): R|Anno| {
                LAZY_super<R|kotlin/Any|>
            }

            public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val value: R|kotlin/String| = R|<local>/value|
                public [ResolvedTo(STATUS)] [ContainingClassKey=Anno] get(): R|kotlin/String|

        }
