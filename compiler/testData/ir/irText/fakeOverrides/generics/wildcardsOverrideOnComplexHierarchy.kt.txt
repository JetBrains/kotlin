class A : Java1, Java2 {
  constructor() /* primary */ {
    super/*Java1*/()
    /* <init>() */

  }

}

class B : Java1, Java2 {
  constructor() /* primary */ {
    super/*Java1*/()
    /* <init>() */

  }

  override fun bar2(): MutableList<in Number> {
    return mutableListOf<Number>(elements = [2])
  }

  override fun foo2(a: MutableList<in Number>) {
  }

}

abstract class C : Java2, KotlinInterface2 {
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

}

class D : Java2, KotlinInterface2 {
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  override fun bar(): MutableList<Int> {
    return mutableListOf<Int>(elements = [2])
  }

  override fun bar2(): MutableList<Any> {
    return mutableListOf<Any>(elements = [2])
  }

  override fun bar3(): MutableList<Int> {
    return mutableListOf<Int>(elements = [2])
  }

  override fun foo(a: MutableList<out Number>) {
  }

  override fun foo2(a: MutableList<in Number>) {
  }

  override fun foo3(a: MutableList<*>) {
  }

}

class E : KotlinClass, Java3 {
  constructor() /* primary */ {
    super/*KotlinClass*/()
    /* <init>() */

  }

}

class F : KotlinClass, Java3 {
  constructor() /* primary */ {
    super/*KotlinClass*/()
    /* <init>() */

  }

  override fun foo(a: MutableList<out Number>) {
  }

  override fun foo2(a: MutableList<in Number>) {
  }

  override fun foo3(a: MutableList<*>) {
  }

}

class G : Java4, Java2 {
  constructor() /* primary */ {
    super/*Java4*/()
    /* <init>() */

  }

}

class H : Java4, Java2 {
  constructor() /* primary */ {
    super/*Java4*/()
    /* <init>() */

  }

  override fun bar(): MutableList<out Number> {
    return mutableListOf<Int>(elements = [5])
  }

  override fun bar2(): MutableList<in Number> {
    return mutableListOf<Number>(elements = [5])
  }

  override fun bar3(): MutableList<*> {
    return mutableListOf<Int>(elements = [5])
  }

}

class I : Java5 {
  constructor() /* primary */ {
    super/*Java5*/()
    /* <init>() */

  }

}

class J : Java5 {
  constructor() /* primary */ {
    super/*Java5*/()
    /* <init>() */

  }

  override fun bar(): MutableList<out Number> {
    return mutableListOf<Int>(elements = [6])
  }

  override fun foo(a: MutableList<out Number>?) {
  }

}

open class KotlinClass : Java1 {
  constructor() /* primary */ {
    super/*Java1*/()
    /* <init>() */

  }

}

interface KotlinInterface {
  abstract fun bar(): MutableList<out Number>

  abstract fun bar2(): MutableList<in Number>

  abstract fun bar3(): MutableList<*>

  abstract fun foo(a: MutableList<out Number>)

  abstract fun foo2(a: MutableList<in Number>)

  abstract fun foo3(a: MutableList<*>)

}

interface KotlinInterface2 {
  abstract fun bar(): MutableList<Int>

  abstract fun bar2(): MutableList<Any>

  abstract fun bar3(): MutableList<Int>

}

fun test(a: A, b: B, c: C, d: D, e: E, f: F, g: G, h: H, i: I, j: J) {
  a.foo(a = mutableListOf<Int>(elements = [1]))
  a.foo(a = null)
  a.bar() /*~> Unit */
  a.foo2(a = mutableListOf<@FlexibleNullability Number?>(elements = [1]))
  a.foo2(a = null)
  a.bar2() /*~> Unit */
  a.foo3(a = mutableListOf<Int>(elements = [1]))
  a.foo3(a = null)
  a.bar3() /*~> Unit */
  b.foo2(a = mutableListOf<Number>(elements = [1]))
  b.foo2(a = mutableListOf<Number?>(elements = [null]))
  b.bar2() /*~> Unit */
  c.foo(a = mutableListOf<Int>(elements = [1]))
  c.bar() /*~> Unit */
  c.foo2(a = mutableListOf<Number>(elements = [1.1]))
  c.bar2() /*~> Unit */
  c.foo3(a = mutableListOf<Int>(elements = [1]))
  c.bar3() /*~> Unit */
  d.foo(a = mutableListOf<Int>(elements = [1]))
  d.bar() /*~> Unit */
  d.foo2(a = mutableListOf<Number>(elements = [1]))
  d.bar2() /*~> Unit */
  d.foo3(a = mutableListOf<Int>(elements = [1]))
  d.bar3() /*~> Unit */
  e.foo(a = mutableListOf<Int>(elements = [1]))
  e.bar() /*~> Unit */
  e.foo2(a = mutableListOf<@FlexibleNullability Number?>(elements = [1]))
  e.bar2() /*~> Unit */
  e.foo3(a = mutableListOf<Int>(elements = [1]))
  e.bar3() /*~> Unit */
  f.foo(a = mutableListOf<Int>(elements = [1]))
  f.foo2(a = mutableListOf<Number>(elements = [1]))
  f.foo3(a = mutableListOf<Int>(elements = [1]))
  g.foo(a = mutableListOf<Int>(elements = [1]))
  g.bar() /*~> Unit */
  g.foo2(a = mutableListOf<@FlexibleNullability Number?>(elements = [1]))
  g.bar2() /*~> Unit */
  g.foo3(a = mutableListOf<Int>(elements = [1]))
  g.bar3() /*~> Unit */
  h.foo(a = mutableListOf<Int>(elements = [1]))
  h.bar() /*~> Unit */
  h.foo2(a = mutableListOf<@FlexibleNullability Number?>(elements = [1]))
  h.bar2() /*~> Unit */
  h.foo3(a = mutableListOf<Int>(elements = [1]))
  h.bar3() /*~> Unit */
  i.foo(a = mutableListOf<Int>(elements = [1]))
  i.bar() /*~> Unit */
  i.foo2(a = mutableListOf<@FlexibleNullability Number?>(elements = [1]))
  i.bar2() /*~> Unit */
  i.foo3(a = mutableListOf<Int>(elements = [1]))
  i.bar3() /*~> Unit */
  j.foo(a = mutableListOf<Int>(elements = [1]))
  j.bar() /*~> Unit */
  j.foo2(a = mutableListOf<@FlexibleNullability Number?>(elements = [1]))
  j.bar2() /*~> Unit */
  j.foo3(a = mutableListOf<Int>(elements = [1]))
  j.bar3() /*~> Unit */
}
