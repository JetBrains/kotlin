KtFile: 'delegatedFieldNestedName.kt'
  null

KtPackageDirective(15,29): 'package second'
  null

KtNameReferenceExpression(23,29): 'second'
  null

KtImportList(29,29): ''
  null

KtClass(31,95): '@Target(AnnotationTarget.TYPE)'
  null

KtDeclarationModifierList(31,72): '@Target(AnnotationTarget.TYPE)'
  null

KtAnnotationEntry(31,61): '@Target(AnnotationTarget.TYPE)'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        AnnotationTarget.TYPE -> (KaVariableSignature:
          name = allowedTargets
          receiverType = null
          returnType = kotlin.annotation.AnnotationTarget
          symbol = vararg allowedTargets: kotlin.annotation.AnnotationTarget
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.annotation.Target
          symbol = <constructor>(vararg allowedTargets: kotlin.annotation.AnnotationTarget): kotlin.annotation.Target
          valueParameters = [
            KaVariableSignature:
              name = allowedTargets
              receiverType = null
              returnType = kotlin.annotation.AnnotationTarget
              symbol = vararg allowedTargets: kotlin.annotation.AnnotationTarget
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(32,38): 'Target'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        AnnotationTarget.TYPE -> (KaVariableSignature:
          name = allowedTargets
          receiverType = null
          returnType = kotlin.annotation.AnnotationTarget
          symbol = vararg allowedTargets: kotlin.annotation.AnnotationTarget
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.annotation.Target
          symbol = <constructor>(vararg allowedTargets: kotlin.annotation.AnnotationTarget): kotlin.annotation.Target
          valueParameters = [
            KaVariableSignature:
              name = allowedTargets
              receiverType = null
              returnType = kotlin.annotation.AnnotationTarget
              symbol = vararg allowedTargets: kotlin.annotation.AnnotationTarget
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(32,38): 'Target'
  null

KtUserType(32,38): 'Target'
  null

KtNameReferenceExpression(32,38): 'Target'
  null

KtValueArgumentList(38,61): '(AnnotationTarget.TYPE)'
  null

KtValueArgument(39,60): 'AnnotationTarget.TYPE'
  null

KtDotQualifiedExpression(39,60): 'AnnotationTarget.TYPE'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = AnnotationTarget
          isSafeNavigation = false
          type = kotlin.Unit
        extensionReceiver = null
        signature = KaVariableSignature:
          name = TYPE
          receiverType = null
          returnType = kotlin.annotation.AnnotationTarget
          symbol = kotlin/annotation/AnnotationTarget.TYPE
          callableId = kotlin/annotation/AnnotationTarget.TYPE
      simpleAccess = Read
      typeArgumentsMapping = {}

KtNameReferenceExpression(39,55): 'AnnotationTarget'
  null

KtNameReferenceExpression(56,60): 'TYPE'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = AnnotationTarget
          isSafeNavigation = false
          type = kotlin.Unit
        extensionReceiver = null
        signature = KaVariableSignature:
          name = TYPE
          receiverType = null
          returnType = kotlin.annotation.AnnotationTarget
          symbol = kotlin/annotation/AnnotationTarget.TYPE
          callableId = kotlin/annotation/AnnotationTarget.TYPE
      simpleAccess = Read
      typeArgumentsMapping = {}

KtPrimaryConstructor(83,95): '(val i: Int)'
  null

KtParameterList(83,95): '(val i: Int)'
  null

KtParameter(84,94): 'val i: Int'
  null

KtTypeReference(91,94): 'Int'
  null

KtUserType(91,94): 'Int'
  null

KtNameReferenceExpression(91,94): 'Int'
  null

KtClass(97,135): 'interface Base<A> {'
  null

KtTypeParameterList(111,114): '<A>'
  null

KtTypeParameter(112,113): 'A'
  null

KtClassBody(115,135): '{'
  null

KtNamedFunction(121,133): 'fun foo() {}'
  null

KtParameterList(128,130): '()'
  null

KtBlockExpression(131,133): '{}'
  null

KtClass(137,161): 'interface Second<T> {'
  null

KtTypeParameterList(153,156): '<T>'
  null

KtTypeParameter(154,155): 'T'
  null

KtClassBody(157,161): '{'
  null

KtProperty(163,182): 'const val outer = 0'
  null

KtDeclarationModifierList(163,168): 'const'
  null

KtConstantExpression(181,182): '0'
  null

KtProperty(183,203): 'const val inner = ""'
  null

KtDeclarationModifierList(183,188): 'const'
  null

KtStringTemplateExpression(201,203): '""'
  null

KtClass(205,610): 'class MyClass :'
  null

KtSuperTypeList(225,374): '@Anno(0 + outer) Base<@Anno(1 + outer) Base<@Anno(2 + outer) Int>> by Companion,'
  null

KtDelegatedSuperTypeEntry(225,304): '@Anno(0 + outer) Base<@Anno(1 + outer) Base<@Anno(2 + outer) Int>> by Companion'
  null

KtTypeReference(225,291): '@Anno(0 + outer) Base<@Anno(1 + outer) Base<@Anno(2 + outer) Int>>'
  null

KtDeclarationModifierList(225,241): '@Anno(0 + outer)'
  null

KtAnnotationEntry(225,241): '@Anno(0 + outer)'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        0 + outer -> (KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = second.Anno
          symbol = <constructor>(i: kotlin.Int): second.Anno
          valueParameters = [
            KaVariableSignature:
              name = i
              receiverType = null
              returnType = kotlin.Int
              symbol = i: kotlin.Int
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(226,230): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        0 + outer -> (KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = second.Anno
          symbol = <constructor>(i: kotlin.Int): second.Anno
          valueParameters = [
            KaVariableSignature:
              name = i
              receiverType = null
              returnType = kotlin.Int
              symbol = i: kotlin.Int
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(226,230): 'Anno'
  null

KtUserType(226,230): 'Anno'
  null

KtNameReferenceExpression(226,230): 'Anno'
  null

KtValueArgumentList(230,241): '(0 + outer)'
  null

KtValueArgument(231,240): '0 + outer'
  null

KtBinaryExpression(231,240): '0 + outer'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        outer -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Int
          symbol = other: kotlin.Int
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = 0
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Int
          symbol = kotlin/Int.plus(<dispatch receiver>: kotlin.Int, other: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Int
              symbol = other: kotlin.Int
              callableId = null
          ]
          callableId = kotlin/Int.plus
      typeArgumentsMapping = {}

KtConstantExpression(231,232): '0'
  null

KtOperationReferenceExpression(233,234): '+'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        outer -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Int
          symbol = other: kotlin.Int
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = 0
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Int
          symbol = kotlin/Int.plus(<dispatch receiver>: kotlin.Int, other: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Int
              symbol = other: kotlin.Int
              callableId = null
          ]
          callableId = kotlin/Int.plus
      typeArgumentsMapping = {}

KtNameReferenceExpression(235,240): 'outer'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = outer
          receiverType = null
          returnType = kotlin.Int
          symbol = val outer: kotlin.Int
          callableId = second/outer
      simpleAccess = Read
      typeArgumentsMapping = {}

KtUserType(242,291): 'Base<@Anno(1 + outer) Base<@Anno(2 + outer) Int>>'
  null

KtNameReferenceExpression(242,246): 'Base'
  null

KtTypeArgumentList(246,291): '<@Anno(1 + outer) Base<@Anno(2 + outer) Int>>'
  null

KtTypeProjection(247,290): '@Anno(1 + outer) Base<@Anno(2 + outer) Int>'
  null

KtTypeReference(247,290): '@Anno(1 + outer) Base<@Anno(2 + outer) Int>'
  null

KtDeclarationModifierList(247,263): '@Anno(1 + outer)'
  null

KtAnnotationEntry(247,263): '@Anno(1 + outer)'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        1 + outer -> (KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = second.Anno
          symbol = <constructor>(i: kotlin.Int): second.Anno
          valueParameters = [
            KaVariableSignature:
              name = i
              receiverType = null
              returnType = kotlin.Int
              symbol = i: kotlin.Int
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(248,252): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        1 + outer -> (KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = second.Anno
          symbol = <constructor>(i: kotlin.Int): second.Anno
          valueParameters = [
            KaVariableSignature:
              name = i
              receiverType = null
              returnType = kotlin.Int
              symbol = i: kotlin.Int
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(248,252): 'Anno'
  null

KtUserType(248,252): 'Anno'
  null

KtNameReferenceExpression(248,252): 'Anno'
  null

KtValueArgumentList(252,263): '(1 + outer)'
  null

KtValueArgument(253,262): '1 + outer'
  null

KtBinaryExpression(253,262): '1 + outer'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        outer -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Int
          symbol = other: kotlin.Int
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = 1
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Int
          symbol = kotlin/Int.plus(<dispatch receiver>: kotlin.Int, other: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Int
              symbol = other: kotlin.Int
              callableId = null
          ]
          callableId = kotlin/Int.plus
      typeArgumentsMapping = {}

KtConstantExpression(253,254): '1'
  null

KtOperationReferenceExpression(255,256): '+'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        outer -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Int
          symbol = other: kotlin.Int
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = 1
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Int
          symbol = kotlin/Int.plus(<dispatch receiver>: kotlin.Int, other: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Int
              symbol = other: kotlin.Int
              callableId = null
          ]
          callableId = kotlin/Int.plus
      typeArgumentsMapping = {}

KtNameReferenceExpression(257,262): 'outer'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = outer
          receiverType = null
          returnType = kotlin.Int
          symbol = val outer: kotlin.Int
          callableId = second/outer
      simpleAccess = Read
      typeArgumentsMapping = {}

KtUserType(264,290): 'Base<@Anno(2 + outer) Int>'
  null

KtNameReferenceExpression(264,268): 'Base'
  null

KtTypeArgumentList(268,290): '<@Anno(2 + outer) Int>'
  null

KtTypeProjection(269,289): '@Anno(2 + outer) Int'
  null

KtTypeReference(269,289): '@Anno(2 + outer) Int'
  null

KtDeclarationModifierList(269,285): '@Anno(2 + outer)'
  null

KtAnnotationEntry(269,285): '@Anno(2 + outer)'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        2 + outer -> (KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = second.Anno
          symbol = <constructor>(i: kotlin.Int): second.Anno
          valueParameters = [
            KaVariableSignature:
              name = i
              receiverType = null
              returnType = kotlin.Int
              symbol = i: kotlin.Int
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(270,274): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        2 + outer -> (KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = second.Anno
          symbol = <constructor>(i: kotlin.Int): second.Anno
          valueParameters = [
            KaVariableSignature:
              name = i
              receiverType = null
              returnType = kotlin.Int
              symbol = i: kotlin.Int
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(270,274): 'Anno'
  null

KtUserType(270,274): 'Anno'
  null

KtNameReferenceExpression(270,274): 'Anno'
  null

KtValueArgumentList(274,285): '(2 + outer)'
  null

KtValueArgument(275,284): '2 + outer'
  null

KtBinaryExpression(275,284): '2 + outer'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        outer -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Int
          symbol = other: kotlin.Int
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = 2
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Int
          symbol = kotlin/Int.plus(<dispatch receiver>: kotlin.Int, other: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Int
              symbol = other: kotlin.Int
              callableId = null
          ]
          callableId = kotlin/Int.plus
      typeArgumentsMapping = {}

KtConstantExpression(275,276): '2'
  null

KtOperationReferenceExpression(277,278): '+'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        outer -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Int
          symbol = other: kotlin.Int
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = 2
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Int
          symbol = kotlin/Int.plus(<dispatch receiver>: kotlin.Int, other: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Int
              symbol = other: kotlin.Int
              callableId = null
          ]
          callableId = kotlin/Int.plus
      typeArgumentsMapping = {}

KtNameReferenceExpression(279,284): 'outer'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = outer
          receiverType = null
          returnType = kotlin.Int
          symbol = val outer: kotlin.Int
          callableId = second/outer
      simpleAccess = Read
      typeArgumentsMapping = {}

KtUserType(286,289): 'Int'
  null

KtNameReferenceExpression(286,289): 'Int'
  null

KtNameReferenceExpression(295,304): 'Companion'
  null

KtDelegatedSuperTypeEntry(310,374): '@Anno(4 + outer) Second<@Anno(5 + outer) String> by NestedObject'
  null

KtTypeReference(310,358): '@Anno(4 + outer) Second<@Anno(5 + outer) String>'
  null

KtDeclarationModifierList(310,326): '@Anno(4 + outer)'
  null

KtAnnotationEntry(310,326): '@Anno(4 + outer)'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        4 + outer -> (KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = second.Anno
          symbol = <constructor>(i: kotlin.Int): second.Anno
          valueParameters = [
            KaVariableSignature:
              name = i
              receiverType = null
              returnType = kotlin.Int
              symbol = i: kotlin.Int
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(311,315): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        4 + outer -> (KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = second.Anno
          symbol = <constructor>(i: kotlin.Int): second.Anno
          valueParameters = [
            KaVariableSignature:
              name = i
              receiverType = null
              returnType = kotlin.Int
              symbol = i: kotlin.Int
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(311,315): 'Anno'
  null

KtUserType(311,315): 'Anno'
  null

KtNameReferenceExpression(311,315): 'Anno'
  null

KtValueArgumentList(315,326): '(4 + outer)'
  null

KtValueArgument(316,325): '4 + outer'
  null

KtBinaryExpression(316,325): '4 + outer'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        outer -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Int
          symbol = other: kotlin.Int
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = 4
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Int
          symbol = kotlin/Int.plus(<dispatch receiver>: kotlin.Int, other: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Int
              symbol = other: kotlin.Int
              callableId = null
          ]
          callableId = kotlin/Int.plus
      typeArgumentsMapping = {}

KtConstantExpression(316,317): '4'
  null

KtOperationReferenceExpression(318,319): '+'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        outer -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Int
          symbol = other: kotlin.Int
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = 4
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Int
          symbol = kotlin/Int.plus(<dispatch receiver>: kotlin.Int, other: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Int
              symbol = other: kotlin.Int
              callableId = null
          ]
          callableId = kotlin/Int.plus
      typeArgumentsMapping = {}

KtNameReferenceExpression(320,325): 'outer'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = outer
          receiverType = null
          returnType = kotlin.Int
          symbol = val outer: kotlin.Int
          callableId = second/outer
      simpleAccess = Read
      typeArgumentsMapping = {}

KtUserType(327,358): 'Second<@Anno(5 + outer) String>'
  null

KtNameReferenceExpression(327,333): 'Second'
  null

KtTypeArgumentList(333,358): '<@Anno(5 + outer) String>'
  null

KtTypeProjection(334,357): '@Anno(5 + outer) String'
  null

KtTypeReference(334,357): '@Anno(5 + outer) String'
  null

KtDeclarationModifierList(334,350): '@Anno(5 + outer)'
  null

KtAnnotationEntry(334,350): '@Anno(5 + outer)'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        5 + outer -> (KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = second.Anno
          symbol = <constructor>(i: kotlin.Int): second.Anno
          valueParameters = [
            KaVariableSignature:
              name = i
              receiverType = null
              returnType = kotlin.Int
              symbol = i: kotlin.Int
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(335,339): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        5 + outer -> (KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = second.Anno
          symbol = <constructor>(i: kotlin.Int): second.Anno
          valueParameters = [
            KaVariableSignature:
              name = i
              receiverType = null
              returnType = kotlin.Int
              symbol = i: kotlin.Int
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(335,339): 'Anno'
  null

KtUserType(335,339): 'Anno'
  null

KtNameReferenceExpression(335,339): 'Anno'
  null

KtValueArgumentList(339,350): '(5 + outer)'
  null

KtValueArgument(340,349): '5 + outer'
  null

KtBinaryExpression(340,349): '5 + outer'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        outer -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Int
          symbol = other: kotlin.Int
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = 5
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Int
          symbol = kotlin/Int.plus(<dispatch receiver>: kotlin.Int, other: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Int
              symbol = other: kotlin.Int
              callableId = null
          ]
          callableId = kotlin/Int.plus
      typeArgumentsMapping = {}

KtConstantExpression(340,341): '5'
  null

KtOperationReferenceExpression(342,343): '+'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        outer -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Int
          symbol = other: kotlin.Int
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = 5
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Int
          symbol = kotlin/Int.plus(<dispatch receiver>: kotlin.Int, other: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Int
              symbol = other: kotlin.Int
              callableId = null
          ]
          callableId = kotlin/Int.plus
      typeArgumentsMapping = {}

KtNameReferenceExpression(344,349): 'outer'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = outer
          receiverType = null
          returnType = kotlin.Int
          symbol = val outer: kotlin.Int
          callableId = second/outer
      simpleAccess = Read
      typeArgumentsMapping = {}

KtUserType(351,357): 'String'
  null

KtNameReferenceExpression(351,357): 'String'
  null

KtNameReferenceExpression(362,374): 'NestedObject'
  null

KtClassBody(375,610): '{'
  null

KtObjectDeclaration(381,531): 'companion object : @Anno(6 + inner) Base<@Anno(7 + inner) Base<@Anno(8 + inner) Int>> {'
  null

KtDeclarationModifierList(381,390): 'companion'
  null

KtSuperTypeList(400,466): '@Anno(6 + inner) Base<@Anno(7 + inner) Base<@Anno(8 + inner) Int>>'
  null

KtSuperTypeEntry(400,466): '@Anno(6 + inner) Base<@Anno(7 + inner) Base<@Anno(8 + inner) Int>>'
  null

KtTypeReference(400,466): '@Anno(6 + inner) Base<@Anno(7 + inner) Base<@Anno(8 + inner) Int>>'
  null

KtDeclarationModifierList(400,416): '@Anno(6 + inner)'
  null

KtAnnotationEntry(400,416): '@Anno(6 + inner)'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        6 + inner -> (KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = second.Anno
          symbol = <constructor>(i: kotlin.Int): second.Anno
          valueParameters = [
            KaVariableSignature:
              name = i
              receiverType = null
              returnType = kotlin.Int
              symbol = i: kotlin.Int
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(401,405): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        6 + inner -> (KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = second.Anno
          symbol = <constructor>(i: kotlin.Int): second.Anno
          valueParameters = [
            KaVariableSignature:
              name = i
              receiverType = null
              returnType = kotlin.Int
              symbol = i: kotlin.Int
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(401,405): 'Anno'
  null

KtUserType(401,405): 'Anno'
  null

KtNameReferenceExpression(401,405): 'Anno'
  null

KtValueArgumentList(405,416): '(6 + inner)'
  null

KtValueArgument(406,415): '6 + inner'
  null

KtBinaryExpression(406,415): '6 + inner'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        inner -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Int
          symbol = other: kotlin.Int
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = 6
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Int
          symbol = kotlin/Int.plus(<dispatch receiver>: kotlin.Int, other: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Int
              symbol = other: kotlin.Int
              callableId = null
          ]
          callableId = kotlin/Int.plus
      typeArgumentsMapping = {}

KtConstantExpression(406,407): '6'
  null

KtOperationReferenceExpression(408,409): '+'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        inner -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Int
          symbol = other: kotlin.Int
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = 6
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Int
          symbol = kotlin/Int.plus(<dispatch receiver>: kotlin.Int, other: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Int
              symbol = other: kotlin.Int
              callableId = null
          ]
          callableId = kotlin/Int.plus
      typeArgumentsMapping = {}

KtNameReferenceExpression(410,415): 'inner'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaImplicitReceiverValue:
          symbol = second/MyClass.Companion
          type = second.MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = inner
          receiverType = null
          returnType = kotlin.Int
          symbol = val inner: kotlin.Int
          callableId = second/MyClass.Companion.inner
      simpleAccess = Read
      typeArgumentsMapping = {}

KtUserType(417,466): 'Base<@Anno(7 + inner) Base<@Anno(8 + inner) Int>>'
  null

KtNameReferenceExpression(417,421): 'Base'
  null

KtTypeArgumentList(421,466): '<@Anno(7 + inner) Base<@Anno(8 + inner) Int>>'
  null

KtTypeProjection(422,465): '@Anno(7 + inner) Base<@Anno(8 + inner) Int>'
  null

KtTypeReference(422,465): '@Anno(7 + inner) Base<@Anno(8 + inner) Int>'
  null

KtDeclarationModifierList(422,438): '@Anno(7 + inner)'
  null

KtAnnotationEntry(422,438): '@Anno(7 + inner)'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        7 + inner -> (KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = second.Anno
          symbol = <constructor>(i: kotlin.Int): second.Anno
          valueParameters = [
            KaVariableSignature:
              name = i
              receiverType = null
              returnType = kotlin.Int
              symbol = i: kotlin.Int
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(423,427): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        7 + inner -> (KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = second.Anno
          symbol = <constructor>(i: kotlin.Int): second.Anno
          valueParameters = [
            KaVariableSignature:
              name = i
              receiverType = null
              returnType = kotlin.Int
              symbol = i: kotlin.Int
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(423,427): 'Anno'
  null

KtUserType(423,427): 'Anno'
  null

KtNameReferenceExpression(423,427): 'Anno'
  null

KtValueArgumentList(427,438): '(7 + inner)'
  null

KtValueArgument(428,437): '7 + inner'
  null

KtBinaryExpression(428,437): '7 + inner'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        inner -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Int
          symbol = other: kotlin.Int
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = 7
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Int
          symbol = kotlin/Int.plus(<dispatch receiver>: kotlin.Int, other: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Int
              symbol = other: kotlin.Int
              callableId = null
          ]
          callableId = kotlin/Int.plus
      typeArgumentsMapping = {}

KtConstantExpression(428,429): '7'
  null

KtOperationReferenceExpression(430,431): '+'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        inner -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Int
          symbol = other: kotlin.Int
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = 7
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Int
          symbol = kotlin/Int.plus(<dispatch receiver>: kotlin.Int, other: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Int
              symbol = other: kotlin.Int
              callableId = null
          ]
          callableId = kotlin/Int.plus
      typeArgumentsMapping = {}

KtNameReferenceExpression(432,437): 'inner'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaImplicitReceiverValue:
          symbol = second/MyClass.Companion
          type = second.MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = inner
          receiverType = null
          returnType = kotlin.Int
          symbol = val inner: kotlin.Int
          callableId = second/MyClass.Companion.inner
      simpleAccess = Read
      typeArgumentsMapping = {}

KtUserType(439,465): 'Base<@Anno(8 + inner) Int>'
  null

KtNameReferenceExpression(439,443): 'Base'
  null

KtTypeArgumentList(443,465): '<@Anno(8 + inner) Int>'
  null

KtTypeProjection(444,464): '@Anno(8 + inner) Int'
  null

KtTypeReference(444,464): '@Anno(8 + inner) Int'
  null

KtDeclarationModifierList(444,460): '@Anno(8 + inner)'
  null

KtAnnotationEntry(444,460): '@Anno(8 + inner)'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        8 + inner -> (KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = second.Anno
          symbol = <constructor>(i: kotlin.Int): second.Anno
          valueParameters = [
            KaVariableSignature:
              name = i
              receiverType = null
              returnType = kotlin.Int
              symbol = i: kotlin.Int
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(445,449): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        8 + inner -> (KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = second.Anno
          symbol = <constructor>(i: kotlin.Int): second.Anno
          valueParameters = [
            KaVariableSignature:
              name = i
              receiverType = null
              returnType = kotlin.Int
              symbol = i: kotlin.Int
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(445,449): 'Anno'
  null

KtUserType(445,449): 'Anno'
  null

KtNameReferenceExpression(445,449): 'Anno'
  null

KtValueArgumentList(449,460): '(8 + inner)'
  null

KtValueArgument(450,459): '8 + inner'
  null

KtBinaryExpression(450,459): '8 + inner'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        inner -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Int
          symbol = other: kotlin.Int
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = 8
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Int
          symbol = kotlin/Int.plus(<dispatch receiver>: kotlin.Int, other: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Int
              symbol = other: kotlin.Int
              callableId = null
          ]
          callableId = kotlin/Int.plus
      typeArgumentsMapping = {}

KtConstantExpression(450,451): '8'
  null

KtOperationReferenceExpression(452,453): '+'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        inner -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Int
          symbol = other: kotlin.Int
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = 8
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Int
          symbol = kotlin/Int.plus(<dispatch receiver>: kotlin.Int, other: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Int
              symbol = other: kotlin.Int
              callableId = null
          ]
          callableId = kotlin/Int.plus
      typeArgumentsMapping = {}

KtNameReferenceExpression(454,459): 'inner'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaImplicitReceiverValue:
          symbol = second/MyClass.Companion
          type = second.MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = inner
          receiverType = null
          returnType = kotlin.Int
          symbol = val inner: kotlin.Int
          callableId = second/MyClass.Companion.inner
      simpleAccess = Read
      typeArgumentsMapping = {}

KtUserType(461,464): 'Int'
  null

KtNameReferenceExpression(461,464): 'Int'
  null

KtClassBody(467,531): '{'
  null

KtProperty(477,497): 'const val outer = ""'
  null

KtDeclarationModifierList(477,482): 'const'
  null

KtStringTemplateExpression(495,497): '""'
  null

KtProperty(506,525): 'const val inner = 0'
  null

KtDeclarationModifierList(506,511): 'const'
  null

KtConstantExpression(524,525): '0'
  null

KtObjectDeclaration(537,608): 'object NestedObject : @Anno(9 + inner) Second<@Anno(10 + inner) String>'
  null

KtSuperTypeList(559,608): '@Anno(9 + inner) Second<@Anno(10 + inner) String>'
  null

KtSuperTypeEntry(559,608): '@Anno(9 + inner) Second<@Anno(10 + inner) String>'
  null

KtTypeReference(559,608): '@Anno(9 + inner) Second<@Anno(10 + inner) String>'
  null

KtDeclarationModifierList(559,575): '@Anno(9 + inner)'
  null

KtAnnotationEntry(559,575): '@Anno(9 + inner)'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        9 + inner -> (KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = second.Anno
          symbol = <constructor>(i: kotlin.Int): second.Anno
          valueParameters = [
            KaVariableSignature:
              name = i
              receiverType = null
              returnType = kotlin.Int
              symbol = i: kotlin.Int
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(560,564): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        9 + inner -> (KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = second.Anno
          symbol = <constructor>(i: kotlin.Int): second.Anno
          valueParameters = [
            KaVariableSignature:
              name = i
              receiverType = null
              returnType = kotlin.Int
              symbol = i: kotlin.Int
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(560,564): 'Anno'
  null

KtUserType(560,564): 'Anno'
  null

KtNameReferenceExpression(560,564): 'Anno'
  null

KtValueArgumentList(564,575): '(9 + inner)'
  null

KtValueArgument(565,574): '9 + inner'
  null

KtBinaryExpression(565,574): '9 + inner'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        inner -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Int
          symbol = other: kotlin.Int
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = 9
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Int
          symbol = kotlin/Int.plus(<dispatch receiver>: kotlin.Int, other: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Int
              symbol = other: kotlin.Int
              callableId = null
          ]
          callableId = kotlin/Int.plus
      typeArgumentsMapping = {}

KtConstantExpression(565,566): '9'
  null

KtOperationReferenceExpression(567,568): '+'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        inner -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Int
          symbol = other: kotlin.Int
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = 9
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Int
          symbol = kotlin/Int.plus(<dispatch receiver>: kotlin.Int, other: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Int
              symbol = other: kotlin.Int
              callableId = null
          ]
          callableId = kotlin/Int.plus
      typeArgumentsMapping = {}

KtNameReferenceExpression(569,574): 'inner'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaImplicitReceiverValue:
          symbol = second/MyClass.Companion
          type = second.MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = inner
          receiverType = null
          returnType = kotlin.Int
          symbol = val inner: kotlin.Int
          callableId = second/MyClass.Companion.inner
      simpleAccess = Read
      typeArgumentsMapping = {}

KtUserType(576,608): 'Second<@Anno(10 + inner) String>'
  null

KtNameReferenceExpression(576,582): 'Second'
  null

KtTypeArgumentList(582,608): '<@Anno(10 + inner) String>'
  null

KtTypeProjection(583,607): '@Anno(10 + inner) String'
  null

KtTypeReference(583,607): '@Anno(10 + inner) String'
  null

KtDeclarationModifierList(583,600): '@Anno(10 + inner)'
  null

KtAnnotationEntry(583,600): '@Anno(10 + inner)'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        10 + inner -> (KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = second.Anno
          symbol = <constructor>(i: kotlin.Int): second.Anno
          valueParameters = [
            KaVariableSignature:
              name = i
              receiverType = null
              returnType = kotlin.Int
              symbol = i: kotlin.Int
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(584,588): 'Anno'
  KaSuccessCallInfo:
    call = KaAnnotationCall:
      argumentMapping = {
        10 + inner -> (KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          callableId = null)
      }
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = second.Anno
          symbol = <constructor>(i: kotlin.Int): second.Anno
          valueParameters = [
            KaVariableSignature:
              name = i
              receiverType = null
              returnType = kotlin.Int
              symbol = i: kotlin.Int
              callableId = null
          ]
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(584,588): 'Anno'
  null

KtUserType(584,588): 'Anno'
  null

KtNameReferenceExpression(584,588): 'Anno'
  null

KtValueArgumentList(588,600): '(10 + inner)'
  null

KtValueArgument(589,599): '10 + inner'
  null

KtBinaryExpression(589,599): '10 + inner'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        inner -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Int
          symbol = other: kotlin.Int
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = 10
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Int
          symbol = kotlin/Int.plus(<dispatch receiver>: kotlin.Int, other: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Int
              symbol = other: kotlin.Int
              callableId = null
          ]
          callableId = kotlin/Int.plus
      typeArgumentsMapping = {}

KtConstantExpression(589,591): '10'
  null

KtOperationReferenceExpression(592,593): '+'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        inner -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Int
          symbol = other: kotlin.Int
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = 10
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Int
          symbol = kotlin/Int.plus(<dispatch receiver>: kotlin.Int, other: kotlin.Int): kotlin.Int
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Int
              symbol = other: kotlin.Int
              callableId = null
          ]
          callableId = kotlin/Int.plus
      typeArgumentsMapping = {}

KtNameReferenceExpression(594,599): 'inner'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaImplicitReceiverValue:
          symbol = second/MyClass.Companion
          type = second.MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = inner
          receiverType = null
          returnType = kotlin.Int
          symbol = val inner: kotlin.Int
          callableId = second/MyClass.Companion.inner
      simpleAccess = Read
      typeArgumentsMapping = {}

KtUserType(601,607): 'String'
  null

KtNameReferenceExpression(601,607): 'String'
  null