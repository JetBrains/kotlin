package

public fun case_1(/*0*/ value: kotlin.Int?, /*1*/ value1: A, /*2*/ value2: A?): kotlin.String
public fun case_2(/*0*/ value: kotlin.Int?, /*1*/ value1: A, /*2*/ value2: A?): kotlin.String

public final class A {
    public constructor A()
    public final val prop1: kotlin.Int = 1
    public final var prop2: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    public final class B {
        public constructor B()
        public final val prop4: kotlin.Int = 3
        public final val prop5: kotlin.Int = 3
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}
