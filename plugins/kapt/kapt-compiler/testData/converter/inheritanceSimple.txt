public abstract class BaseClass {

    public BaseClass(@org.jetbrains.annotations.NotNull()
    Context context, int num, boolean bool) {
        super();
    }

    @org.jetbrains.annotations.NotNull()
    public abstract Result doJob();
}

////////////////////


public abstract interface Context {
}

////////////////////


public final class Inheritor extends BaseClass {

    public Inheritor(@org.jetbrains.annotations.NotNull()
    Context context) {
        super(null, 0, false);
    }

    @java.lang.Override()
    @org.jetbrains.annotations.NotNull()
    public Result doJob() {
        return null;
    }
}

////////////////////


public enum Result {
    /*public static final*/ SUCCESS /* = new Result() */,
    /*public static final*/ ERROR /* = new Result() */;

    Result() {
    }

    @org.jetbrains.annotations.NotNull()
    public static kotlin.enums.EnumEntries<Result> getEntries() {
        return null;
    }
}
