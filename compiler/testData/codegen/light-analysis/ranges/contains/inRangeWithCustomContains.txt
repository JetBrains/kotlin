public final class InRangeWithCustomContainsKt {
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
    public final static @org.jetbrains.annotations.NotNull method rangeTo(@org.jetbrains.annotations.NotNull p0: Value, @org.jetbrains.annotations.NotNull p1: Value): kotlin.ranges.ClosedRange
}


public final class Value {
    private final field x: int
    public method <init>(p0: int): void
    public method compareTo(@org.jetbrains.annotations.NotNull p0: Value): int
    public synthetic method compareTo(p0: java.lang.Object): int
    public final method getX(): int
}


public final class ValueRange {
    private final @org.jetbrains.annotations.NotNull field endInclusive: Value
    private final @org.jetbrains.annotations.NotNull field start: Value
    public method <init>(@org.jetbrains.annotations.NotNull p0: Value, @org.jetbrains.annotations.NotNull p1: Value): void
    public method contains(@org.jetbrains.annotations.NotNull p0: Value): boolean
    public synthetic method contains(p0: java.lang.Comparable): boolean
    public @org.jetbrains.annotations.NotNull method getEndInclusive(): Value
    public synthetic method getEndInclusive(): java.lang.Comparable
    public @org.jetbrains.annotations.NotNull method getStart(): Value
    public synthetic method getStart(): java.lang.Comparable
    public method isEmpty(): boolean
}
