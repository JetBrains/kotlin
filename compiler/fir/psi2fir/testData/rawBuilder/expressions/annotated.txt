FILE: annotated.kt
    @Target(AnnotationTarget#.EXPRESSION#) @Retention(AnnotationRetention#.SOURCE#) public? final? annotation class Ann : kotlin/Annotation {
        public? constructor(): R|Ann| {
            super<kotlin/Annotation>()
        }

    }
    public? final? fun foo(arg: Int): Int {
        when () {
            ==(@Ann() arg#, Int(0)) ->  {
                @Ann() ^foo Int(1)
            }
            else ->  {
            }
        }

        @Ann() when () {
            ==(arg#, Int(1)) ->  {
                ^foo @Ann() Int(1)
            }
            else ->  {
            }
        }

        ^foo Int(42)
    }
    public? final? data class Two : kotlin/Any {
        public? constructor(x: Int, y: Int): R|Two| {
            super<kotlin/Any>()
        }

    }
    public? final? fun bar(two: Two): kotlin/Unit {
        lval <destruct>: <implicit> = two#
        @Ann() lval x: <implicit> = R|<local>/<destruct>|.component1()
        @Ann() lval y: <implicit> = R|<local>/<destruct>|.component2()
    }
