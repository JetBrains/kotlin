<?xml version="1.0" encoding="UTF-8"?>
<root>
  <item name="java.lang.AbstractStringBuilder int indexOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder int indexOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder int lastIndexOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder int lastIndexOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.StringBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder appendCodePoint(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder delete(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder deleteCharAt(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, char[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, char[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder replace(int, int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder replace(int, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder reverse()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.Appendable append(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.Appendable append(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.Appendable append(java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.Appendable append(java.lang.CharSequence, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.CharSequence subSequence(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.String substring(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.String substring(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Appendable java.lang.Appendable append(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Appendable java.lang.Appendable append(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Appendable java.lang.Appendable append(java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Appendable java.lang.Appendable append(java.lang.CharSequence, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Boolean boolean getBoolean(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Boolean int compareTo(java.lang.Boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Boolean int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Boolean java.lang.Boolean valueOf(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Boolean java.lang.Boolean valueOf(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Boolean java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Boolean java.lang.String toString(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Byte Byte(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Byte byte parseByte(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Byte byte parseByte(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Byte int compareTo(java.lang.Byte) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Byte int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Byte java.lang.Byte decode(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Byte java.lang.Byte valueOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Byte java.lang.Byte valueOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Byte java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Byte java.lang.String toString(byte)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.CharSequence java.lang.CharSequence subSequence(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.CharSequence java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun toString() : String&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Character char[] toChars(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int codePointAt(char[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int codePointAt(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int codePointAt(java.lang.CharSequence, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int codePointBefore(char[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int codePointBefore(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int codePointBefore(java.lang.CharSequence, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int codePointCount(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int codePointCount(java.lang.CharSequence, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int compareTo(java.lang.Character) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int offsetByCodePoints(char[], int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int offsetByCodePoints(java.lang.CharSequence, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int toChars(int, char[], int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character java.lang.String toString(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character.Subset Subset(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character.UnicodeBlock java.lang.Character.UnicodeBlock forName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character.UnicodeBlock java.lang.Character.UnicodeBlock forName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character.UnicodeScript java.lang.Character.UnicodeScript forName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character.UnicodeScript java.lang.Character.UnicodeScript forName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character.UnicodeScript java.lang.Character.UnicodeScript valueOf(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class A getAnnotation(java.lang.Class&lt;A&gt;)">
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun &lt;A : Annotation&gt; getAnnotation(annotationClass : Class&lt;A&gt;) : A?&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class A getAnnotation(java.lang.Class&lt;A&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class T newInstance()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun newInstance() : T&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class T[] getEnumConstants()">
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun getEnumConstants() : Array&lt;T&gt;?&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class boolean isAnnotationPresent(java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class boolean isAssignableFrom(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class boolean isInstance(java.lang.Object)">
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun isInstance(obj : Any?) : Boolean&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class java.io.InputStream getResourceAsStream(java.lang.String)">
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun getResourceAsStream(name : String) : InputStream?&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class java.lang.Class&lt;? extends U&gt; asSubclass(java.lang.Class&lt;U&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.Class&lt;? extends U&gt; asSubclass(java.lang.Class&lt;U&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.Class&lt;?&gt; forName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.Class&lt;?&gt; forName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.Class&lt;?&gt; forName(java.lang.String, boolean, java.lang.ClassLoader)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.Class&lt;?&gt; forName(java.lang.String, boolean, java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.Class&lt;?&gt;[] getClasses()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun getClasses() : Array&lt;Class&lt;out Any?&gt;&gt;&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class java.lang.Class&lt;?&gt;[] getDeclaredClasses()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun getDeclaredClasses() : Array&lt;Class&lt;out Any?&gt;&gt;&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class java.lang.Class&lt;?&gt;[] getInterfaces()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.String getSimpleName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Constructor&lt;?&gt;[] getConstructors()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun getConstructors() : Array&lt;Constructor&lt;out Any?&gt;&gt;&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class java.lang.reflect.Constructor&lt;?&gt;[] getDeclaredConstructors()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun getDeclaredConstructors() : Array&lt;Constructor&lt;out Any?&gt;&gt;&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class java.lang.reflect.Constructor&lt;T&gt; getConstructor(java.lang.Class&lt;?&gt;...)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun getConstructor(vararg parameterTypes : Class&lt;out Any?&gt;) : Constructor&lt;T&gt;&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class java.lang.reflect.Constructor&lt;T&gt; getDeclaredConstructor(java.lang.Class&lt;?&gt;...)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun getDeclaredConstructor(vararg parameterTypes : Class&lt;out Any?&gt;) : Constructor&lt;T&gt;&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class java.lang.reflect.Field getDeclaredField(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun getDeclaredField(name : String) : Field&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class java.lang.reflect.Field getField(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Field[] getDeclaredFields()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun getDeclaredFields() : Array&lt;Field&gt;&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class java.lang.reflect.Field[] getFields()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun getFields() : Array&lt;Field&gt;&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class java.lang.reflect.Method getDeclaredMethod(java.lang.String, java.lang.Class&lt;?&gt;...)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun getDeclaredMethod(name : String, vararg parameterTypes : Class&lt;out Any?&gt;) : Method&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class java.lang.reflect.Method getDeclaredMethod(java.lang.String, java.lang.Class&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Method getMethod(java.lang.String, java.lang.Class&lt;?&gt;...)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun getMethod(name : String, vararg parameterTypes : Class&lt;out Any?&gt;) : Method&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class java.lang.reflect.Method[] getDeclaredMethods()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun getDeclaredMethods() : Array&lt;Method&gt;&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class java.lang.reflect.Method[] getMethods()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun getMethods() : Array&lt;Method&gt;&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class java.lang.reflect.TypeVariable&lt;java.lang.Class&lt;T&gt;&gt;[] getTypeParameters()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Type[] getGenericInterfaces()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.net.URL getResource(java.lang.String)">
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun getResource(name : String) : URL?&quot;"/>
    </annotation>
  </item>
    <item name="java.lang.ClassLoader java.lang.Class&lt;?&gt; defineClass(java.lang.String, java.nio.ByteBuffer, java.security.ProtectionDomain) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.Class&lt;?&gt; findClass(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.Class&lt;?&gt; findClass(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.Object getClassLoadingLock(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
    <item name="java.lang.ClassLoader java.lang.Package definePackage(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.net.URL)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.Package getPackage(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassLoader java.util.Enumeration&lt;java.net.URL&gt; findResources(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassLoader java.util.Enumeration&lt;java.net.URL&gt; getResources(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassLoader java.util.Enumeration&lt;java.net.URL&gt; getSystemResources(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassLoader void setSigners(java.lang.Class&lt;?&gt;, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue T computeValue(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue T computeValue(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue T get(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue void remove(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Comparable int compareTo(T) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Double int compareTo(java.lang.Double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Double int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Double java.lang.Double valueOf(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Double java.lang.Double valueOf(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Enum T valueOf(java.lang.Class&lt;T&gt;, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Enum T valueOf(java.lang.Class&lt;T&gt;, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Enum int compareTo(E) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Enum int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
    <item name="java.lang.EnumConstantNotPresentException EnumConstantNotPresentException(java.lang.Class&lt;? extends java.lang.Enum&gt;, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Float int compareTo(java.lang.Float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Float int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Float java.lang.Float valueOf(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Float java.lang.Float valueOf(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer Integer(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer int compareTo(java.lang.Integer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer int parseInt(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer int parseInt(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer java.lang.Integer decode(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer java.lang.Integer getInteger(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer java.lang.Integer getInteger(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer java.lang.Integer getInteger(java.lang.String, java.lang.Integer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer java.lang.Integer valueOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer java.lang.Integer valueOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer java.lang.String toBinaryString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer java.lang.String toHexString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer java.lang.String toOctalString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer java.lang.String toString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer java.lang.String toString(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Iterable java.util.Iterator&lt;T&gt; iterator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun iterator() : Iterator&lt;T&gt;&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Long Long(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long int compareTo(java.lang.Long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long java.lang.Long decode(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long java.lang.Long getLong(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long java.lang.Long getLong(java.lang.String, java.lang.Long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long java.lang.Long getLong(java.lang.String, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long java.lang.Long valueOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long java.lang.Long valueOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long java.lang.String toBinaryString(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long java.lang.String toHexString(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long java.lang.String toOctalString(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long java.lang.String toString(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long java.lang.String toString(long, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long long parseLong(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long long parseLong(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Object java.lang.Class&lt;?&gt; getClass()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Object java.lang.Object clone()">
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun clone() : Any&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Package A getAnnotation(java.lang.Class&lt;A&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Package boolean isAnnotationPresent(java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Package boolean isCompatibleWith(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Package boolean isSealed(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Package java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder ProcessBuilder(java.lang.String...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder ProcessBuilder(java.util.List&lt;java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.Process start()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder command(java.lang.String...)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder command(java.lang.String...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder command(java.util.List&lt;java.lang.String&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder command(java.util.List&lt;java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder directory(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder inheritIO()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectError(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectError(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectError(java.lang.ProcessBuilder.Redirect)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectError(java.lang.ProcessBuilder.Redirect) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectErrorStream(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectInput(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectInput(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectInput(java.lang.ProcessBuilder.Redirect)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectInput(java.lang.ProcessBuilder.Redirect) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectOutput(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectOutput(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectOutput(java.lang.ProcessBuilder.Redirect)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectOutput(java.lang.ProcessBuilder.Redirect) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect java.lang.ProcessBuilder.Redirect appendTo(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect java.lang.ProcessBuilder.Redirect appendTo(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect java.lang.ProcessBuilder.Redirect from(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect java.lang.ProcessBuilder.Redirect from(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect java.lang.ProcessBuilder.Redirect to(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect java.lang.ProcessBuilder.Redirect to(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect java.lang.ProcessBuilder.Redirect.Type type()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect.Type java.lang.ProcessBuilder.Redirect.Type valueOf(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Readable int read(java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Runtime boolean removeShutdownHook(java.lang.Thread) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Runtime java.lang.Process exec(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Runtime java.lang.Process exec(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Runtime java.lang.Process exec(java.lang.String, java.lang.String[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Runtime java.lang.Process exec(java.lang.String, java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun exec(command : String, envp : Array&lt;out String&gt;?) : Process?&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Runtime java.lang.Process exec(java.lang.String, java.lang.String[], java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Runtime java.lang.Process exec(java.lang.String, java.lang.String[], java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun exec(command : String, envp : Array&lt;out String&gt;, dir : File?) : Process&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Runtime java.lang.Process exec(java.lang.String[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun exec(cmdarray : Array&lt;out String&gt;) : Process&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Runtime java.lang.Process exec(java.lang.String[], java.lang.String[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun exec(cmdarray : Array&lt;out String&gt;, envp : Array&lt;out String&gt;) : Process&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Runtime java.lang.Process exec(java.lang.String[], java.lang.String[], java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Runtime java.lang.Runtime getRuntime()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Runtime void addShutdownHook(java.lang.Thread) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Runtime void loadLibrary(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager boolean checkTopLevelWindow(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkAccept(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkAccess(java.lang.Thread) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkAccess(java.lang.ThreadGroup) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkConnect(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkConnect(java.lang.String, int, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkConnect(java.lang.String, int, java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkLink(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkMemberAccess(java.lang.Class&lt;?&gt;, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkMulticast(java.net.InetAddress) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkMulticast(java.net.InetAddress, byte) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkPackageAccess(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkPackageDefinition(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkPermission(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkPermission(java.security.Permission, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkPermission(java.security.Permission, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkRead(java.io.FileDescriptor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkRead(java.lang.String, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkWrite(java.io.FileDescriptor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Short Short(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Short int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Short int compareTo(java.lang.Short) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Short java.lang.Short decode(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Short java.lang.Short valueOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Short java.lang.Short valueOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Short java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Short java.lang.String toString(short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Short short parseShort(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Short short parseShort(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StackTraceElement StackTraceElement(java.lang.String, java.lang.String, java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StackTraceElement StackTraceElement(java.lang.String, java.lang.String, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StackTraceElement java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], int, int, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], int, int, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], int, int, java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], int, int, java.nio.charset.Charset) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], java.nio.charset.Charset) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(int[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String boolean contains(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String boolean contentEquals(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String boolean contentEquals(java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String boolean endsWith(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String boolean matches(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String boolean regionMatches(boolean, int, java.lang.String, int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String boolean regionMatches(int, java.lang.String, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String boolean startsWith(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String boolean startsWith(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String byte[] getBytes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String byte[] getBytes(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun getBytes(charsetName : String) : ByteArray&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.String byte[] getBytes(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String byte[] getBytes(java.nio.charset.Charset)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun getBytes(charset : Charset) : ByteArray&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.String byte[] getBytes(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String char[] toCharArray()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String int compareTo(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String int compareToIgnoreCase(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String int indexOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String int indexOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String int lastIndexOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String int lastIndexOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.CharSequence subSequence(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String concat(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String concat(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String copyValueOf(char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String copyValueOf(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String copyValueOf(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String copyValueOf(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String format(java.lang.String, java.lang.Object...)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String format(java.lang.String, java.lang.Object...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String format(java.lang.String, java.lang.Object...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String format(java.util.Locale, java.lang.String, java.lang.Object...)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String format(java.util.Locale, java.lang.String, java.lang.Object...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String format(java.util.Locale, java.lang.String, java.lang.Object...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String intern()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String replace(char, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String replace(java.lang.CharSequence, java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String replace(java.lang.CharSequence, java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String replace(java.lang.CharSequence, java.lang.CharSequence) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String replaceAll(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String replaceAll(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String replaceAll(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String replaceFirst(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String replaceFirst(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String replaceFirst(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String substring(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String substring(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String toLowerCase()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String toLowerCase(java.util.Locale)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun toLowerCase(locale : Locale) : String&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.String java.lang.String toLowerCase(java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String toUpperCase()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String toUpperCase(java.util.Locale)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun toUpperCase(locale : Locale) : String&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.String java.lang.String toUpperCase(java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String trim()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String valueOf(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String valueOf(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String valueOf(char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String valueOf(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String valueOf(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String valueOf(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String valueOf(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String valueOf(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String valueOf(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String valueOf(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String valueOf(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String[] split(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun split(regex : String) : Array&lt;String&gt;&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.String java.lang.String[] split(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String[] split(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun split(regex : String, limit : Int) : Array&lt;String&gt;&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.String java.lang.String[] split(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String void getChars(int, int, char[], int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer StringBuffer(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer StringBuffer(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer int indexOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer int indexOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer int lastIndexOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer int lastIndexOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(java.lang.CharSequence, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(java.lang.StringBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder appendCodePoint(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder delete(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder deleteCharAt(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, char[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, char[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder replace(int, int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder replace(int, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder reverse()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.Appendable append(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.Appendable append(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.Appendable append(java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.Appendable append(java.lang.CharSequence, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.CharSequence subSequence(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.String substring(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.String substring(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(java.lang.StringBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer appendCodePoint(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer delete(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer deleteCharAt(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer replace(int, int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer reverse()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder StringBuilder(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder StringBuilder(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder int indexOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder int indexOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder int lastIndexOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder int lastIndexOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(java.lang.CharSequence, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(java.lang.StringBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder appendCodePoint(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder delete(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder deleteCharAt(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, char[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, char[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder replace(int, int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder replace(int, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder reverse()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.Appendable append(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.Appendable append(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.Appendable append(java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.Appendable append(java.lang.CharSequence, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.CharSequence subSequence(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.String substring(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.String substring(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(java.lang.StringBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder appendCodePoint(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder delete(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder deleteCharAt(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, char[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, char[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder replace(int, int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder replace(int, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder reverse()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.System java.lang.String clearProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.System java.lang.String getProperty(java.lang.String)">
    <annotation name='jet.runtime.typeinfo.KotlinSignature'>
      <val name="value" val="&quot;fun getProperty(key : String) : String?&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.System java.lang.String getProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.System java.lang.String getProperty(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.System java.lang.String setProperty(java.lang.String, java.lang.String)">
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun setProperty(key : String, value : String) : String?&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.System java.lang.String setProperty(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.System java.util.Map&lt;java.lang.String,java.lang.String&gt; getenv()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.System void loadLibrary(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.System void setSecurityManager(java.lang.SecurityManager) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread Thread(java.lang.Runnable, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread Thread(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread Thread(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread Thread(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String, long) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread Thread(java.lang.ThreadGroup, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread boolean holdsLock(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread int enumerate(java.lang.Thread[])">
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun enumerate(tarray : Array&lt;out Thread&gt;) : Int&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Thread int enumerate(java.lang.Thread[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread java.lang.StackTraceElement[] getStackTrace()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
      <val name="value" val="&quot;fun getStackTrace() : Array&lt;StackTraceElement&gt;&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Thread java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread java.lang.Thread currentThread()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread java.lang.Thread.State getState()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread java.util.Map&lt;java.lang.Thread,java.lang.StackTraceElement[]&gt; getAllStackTraces()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="jet.runtime.typeinfo.KotlinSignature">
            <val name="value"
                    val="&quot;fun getAllStackTraces() : MutableMap&lt;Thread, Array&lt;out StackTraceElement&gt;&gt;&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Thread void setName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread void stop(java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread.State java.lang.Thread.State valueOf(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread.UncaughtExceptionHandler void uncaughtException(java.lang.Thread, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread.UncaughtExceptionHandler void uncaughtException(java.lang.Thread, java.lang.Throwable) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadGroup ThreadGroup(java.lang.ThreadGroup, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadGroup java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadGroup void uncaughtException(java.lang.Thread, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadGroup void uncaughtException(java.lang.Thread, java.lang.Throwable) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Throwable java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Throwable java.lang.Throwable fillInStackTrace()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Throwable java.lang.Throwable initCause(java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Throwable void addSuppressed(java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Throwable void setStackTrace(java.lang.StackTraceElement[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>

