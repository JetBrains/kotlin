package test

public final class E1 : kotlin.Exception /* = java.lang.Exception */ {
    public constructor E1()
    public open /*fake_override*/ val cause: kotlin.Throwable?
    public open /*fake_override*/ val message: kotlin.String?
    public final /*fake_override*/ fun addSuppressed(/*0*/ kotlin.Throwable!): kotlin.Unit
    public open /*fake_override*/ fun fillInStackTrace(): kotlin.Throwable!
    public open /*fake_override*/ fun getLocalizedMessage(): kotlin.String!
    public open /*fake_override*/ fun getStackTrace(): kotlin.Array<(out) java.lang.StackTraceElement!>!
    public final /*fake_override*/ fun getSuppressed(): kotlin.Array<(out) kotlin.Throwable!>!
    public open /*fake_override*/ fun initCause(/*0*/ kotlin.Throwable!): kotlin.Throwable!
    public open /*fake_override*/ fun printStackTrace(): kotlin.Unit
    public open /*fake_override*/ fun printStackTrace(/*0*/ java.io.PrintStream!): kotlin.Unit
    public open /*fake_override*/ fun printStackTrace(/*0*/ java.io.PrintWriter!): kotlin.Unit
    public open /*fake_override*/ fun setStackTrace(/*0*/ kotlin.Array<(out) java.lang.StackTraceElement!>!): kotlin.Unit
}

public final class E2 : kotlin.Exception /* = java.lang.Exception */ {
    public constructor E2()
    public open /*fake_override*/ val cause: kotlin.Throwable?
    public open /*fake_override*/ val message: kotlin.String?
    public final /*fake_override*/ fun addSuppressed(/*0*/ kotlin.Throwable!): kotlin.Unit
    public open /*fake_override*/ fun fillInStackTrace(): kotlin.Throwable!
    public open /*fake_override*/ fun getLocalizedMessage(): kotlin.String!
    public open /*fake_override*/ fun getStackTrace(): kotlin.Array<(out) java.lang.StackTraceElement!>!
    public final /*fake_override*/ fun getSuppressed(): kotlin.Array<(out) kotlin.Throwable!>!
    public open /*fake_override*/ fun initCause(/*0*/ kotlin.Throwable!): kotlin.Throwable!
    public open /*fake_override*/ fun printStackTrace(): kotlin.Unit
    public open /*fake_override*/ fun printStackTrace(/*0*/ java.io.PrintStream!): kotlin.Unit
    public open /*fake_override*/ fun printStackTrace(/*0*/ java.io.PrintWriter!): kotlin.Unit
    public open /*fake_override*/ fun setStackTrace(/*0*/ kotlin.Array<(out) java.lang.StackTraceElement!>!): kotlin.Unit
}

public/*package*/ open class JavaClass {
    public/*package*/ constructor JavaClass()
    public/*package*/ open fun testMethod(): kotlin.Unit
}

public final class None {
    public constructor None()
}

public final class One {
    public constructor One()
}

public final class OneWithParam {
    public constructor OneWithParam(/*0*/ kotlin.Int)
}

public final class Two {
    public constructor Two()
}
