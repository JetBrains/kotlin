@kotlin.annotation.Target(allowedTargets=[CLASS])
@java.lang.annotation.Retention(value=RUNTIME)
@java.lang.annotation.Target(value=[TYPE])
@kotlin.Metadata
public annotation class ClsAnn {
    // source: 'literals.kt'
}

@kotlin.annotation.Target(allowedTargets=[EXPRESSION])
@kotlin.annotation.Retention(value=SOURCE)
@java.lang.annotation.Retention(value=SOURCE)
@java.lang.annotation.Target(value=[])
@kotlin.Metadata
public annotation class ExprAnn {
    // source: 'literals.kt'
}

@kotlin.annotation.Target(allowedTargets=[FUNCTION])
@java.lang.annotation.Retention(value=RUNTIME)
@java.lang.annotation.Target(value=[METHOD])
@kotlin.Metadata
public annotation class FunAnn {
    // source: 'literals.kt'
}

@ClsAnn
@kotlin.Metadata
public final class LiteralsKt$foo$3 {
    // source: 'literals.kt'
    enclosing method LiteralsKt.foo(I)LMy;
    inner (anonymous) class LiteralsKt$foo$3
    method <init>(): void
}

@kotlin.Metadata
public final class LiteralsKt {
    // source: 'literals.kt'
    inner (anonymous) class LiteralsKt$foo$3
    public final static method bar(@org.jetbrains.annotations.NotNull p0: kotlin.jvm.functions.Function0): int
    private final static @FunAnn method foo$lambda$0(p0: int): int
    private final static method foo$lambda$1(p0: int): int
    private final static @FunAnn method foo$lambda$2(p0: int): int
    public final static @org.jetbrains.annotations.NotNull method foo(p0: int): My
}

@kotlin.Metadata
public class My {
    // source: 'literals.kt'
    public method <init>(): void
}
