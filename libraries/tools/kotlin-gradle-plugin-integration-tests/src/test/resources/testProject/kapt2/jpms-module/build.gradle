buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "kotlin-kapt"

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:annotation-processor-example:$kotlin_version"
    kapt "org.jetbrains.kotlin:annotation-processor-example:$kotlin_version"

    //jpms module provider
    implementation "org.apache.logging.log4j:log4j-api:2.14.0"
}

compileKotlin.kotlinOptions.allWarningsAsErrors = true

//workaround to make classpath into modules for java compilation
compileJava {
    doFirst {
        options.compilerArgs += [
                '--module-path', classpath.asPath
        ]
    }
}

//starting from gradle 6.4 it has built in jpms support
//still as for now it doesn't work with fully legacy jars (with no module's descriptor)
//so we need workaround above till we get AP packed as module
//java {
//    modularity.inferModulePath.set(true)
//}
