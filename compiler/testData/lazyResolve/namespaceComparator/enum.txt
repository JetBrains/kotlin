package test

internal final enum class Test : jet.Enum<test.Test> {
    /*primary*/ private constructor Test(/*0*/ a: jet.Int)
    public final override /*1*/ /*fake_override*/ fun name(): jet.String
    public final override /*1*/ /*fake_override*/ fun ordinal(): jet.Int
    
    internal class object <class-object-for-Test> {
        /*primary*/ private constructor <class-object-for-Test>()
        public final val A: test.Test
        public final val B: test.Test
        public final /*synthesized*/ fun valueOf(/*0*/ value: jet.String): test.Test
        public final /*synthesized*/ fun values(): jet.Array<test.Test>
        
        private enum entry A : test.Test {
            /*primary*/ private constructor A()
            public final override /*1*/ /*fake_override*/ fun name(): jet.String
            public final override /*1*/ /*fake_override*/ fun ordinal(): jet.Int
        }
        
        private enum entry B : test.Test {
            /*primary*/ private constructor B()
            public final override /*1*/ /*fake_override*/ fun name(): jet.String
            public final override /*1*/ /*fake_override*/ fun ordinal(): jet.Int
        }
    }
}
