package

public fun test(/*0*/ s: kotlin.String): kotlin.String

public final class TestClass {
    public constructor TestClass()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    public companion object Companion {
        private constructor Companion()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public final operator inline fun </*0*/ T> invoke(/*0*/ task: () -> T): T
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}
