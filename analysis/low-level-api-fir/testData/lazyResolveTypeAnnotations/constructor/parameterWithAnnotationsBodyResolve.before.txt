@R|Anno|(position = <strcat>(String(parameter type ), R|/prop|))  kotlin/collections/List<@R|Anno|(position = <strcat>(String(nested parameter type ), R|/prop|))  kotlin/collections/Collection<@R|Anno|(position = <strcat>(String(nested nested parameter type ), R|/prop|))  kotlin/String>>
  context -> FirValueParameterSymbol <local>/param from FirConstructorSymbol /A.A
  anchor -> [FirValueParameterSymbol <local>/param from FirConstructorSymbol /A.A]

@R|Anno|(position = <strcat>(String(nested parameter type ), R|/prop|))  kotlin/collections/Collection<@R|Anno|(position = <strcat>(String(nested nested parameter type ), R|/prop|))  kotlin/String>
  context -> FirValueParameterSymbol <local>/param from FirConstructorSymbol /A.A
  anchor -> [FirValueParameterSymbol <local>/param from FirConstructorSymbol /A.A]

@R|Anno|(position = <strcat>(String(nested nested parameter type ), R|/prop|))  kotlin/String
  context -> FirValueParameterSymbol <local>/param from FirConstructorSymbol /A.A
  anchor -> [FirValueParameterSymbol <local>/param from FirConstructorSymbol /A.A]

@R|Anno|(position = <strcat>(String(anonymousFunction return type ), R|/prop|))  kotlin/Int
  context -> FirAnonymousFunctionSymbol special/anonymous
  anchor -> [FirConstructorSymbol /A.A]

@R|Anno|(position = <strcat>(String(anonymousFunction parameter type ), R|/prop|))  kotlin/Int
  context -> FirValueParameterSymbol <local>/i from FirAnonymousFunctionSymbol special/anonymous
  anchor -> [FirConstructorSymbol /A.A]

@R|Anno|(position = <strcat>(String(anonymousFunction return type ), R|/prop|))  kotlin/Int
  context -> FirAnonymousFunctionSymbol special/anonymous
  anchor -> [FirConstructorSymbol /A.A]

@R|Anno|(position = <strcat>(String(anonymousFunction parameter type ), R|/prop|))  kotlin/Int
  context -> FirAnonymousFunctionSymbol special/anonymous
  anchor -> [FirConstructorSymbol /A.A]

FILE: [ResolvedTo(IMPORTS)] parameterWithAnnotationsBodyResolve.kt
    @R|kotlin/annotation/Target|[Types](Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.TYPE|) public final [ResolvedTo(STATUS)] annotation class Anno : R|kotlin/Annotation| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Anno] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=/Anno.position] position: R|kotlin/String|): R|Anno| {
            LAZY_super<R|kotlin/Any|>
        }

        public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val position: R|kotlin/String| = R|<local>/position|
            public [ResolvedTo(STATUS)] [ContainingClassKey=Anno] get(): R|kotlin/String|

    }
    public final const [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] val prop: R|kotlin/String| = String(str)
        public [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] get(): R|kotlin/String|
    public final [ResolvedTo(ANNOTATION_ARGUMENTS)] class A : R|kotlin/Any| {
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=A] constructor([ResolvedTo(BODY_RESOLVE)] param: R|@R|Anno|(position = <strcat>(String(parameter type ), R|/prop|))  kotlin/collections/List<@R|Anno|(position = <strcat>(String(nested parameter type ), R|/prop|))  kotlin/collections/Collection<@R|Anno|(position = <strcat>(String(nested nested parameter type ), R|/prop|))  kotlin/String>>| = @R|Anno|[Types](position = <strcat>(String(defaultValue ), R|/prop|)) [ResolvedTo(BODY_RESOLVE)] fun <anonymous>([ResolvedTo(BODY_RESOLVE)] i: R|@R|Anno|(position = <strcat>(String(anonymousFunction parameter type ), R|/prop|))  kotlin/Int|): R|@R|Anno|(position = <strcat>(String(anonymousFunction return type ), R|/prop|))  kotlin/Int| <inline=Unknown>  {
        }
        ): R|A| {
            super<R|kotlin/Any|>()
        }

    }
