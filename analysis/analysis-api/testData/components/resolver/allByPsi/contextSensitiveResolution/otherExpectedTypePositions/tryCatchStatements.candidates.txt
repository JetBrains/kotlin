KtFile: 'tryCatchStatements.kt'
  NO_CANDIDATES

KtPackageDirective(0,0): ''
  NO_CANDIDATES

KtImportList(0,0): ''
  NO_CANDIDATES

KtClass(78,301): 'open class MyClass {'
  NO_CANDIDATES

KtDeclarationModifierList(78,82): 'open'
  NO_CANDIDATES

KtClassBody(97,301): '{'
  NO_CANDIDATES

KtObjectDeclaration(103,137): 'object NestedInheritor : MyClass()'
  NO_CANDIDATES

KtSuperTypeList(128,137): 'MyClass()'
  NO_CANDIDATES

KtSuperTypeCallEntry(128,137): 'MyClass()'
  KaApplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtConstructorCalleeExpression(128,135): 'MyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtTypeReference(128,135): 'MyClass'
  NO_CANDIDATES

KtUserType(128,135): 'MyClass'
  NO_CANDIDATES

KtNameReferenceExpression(128,135): 'MyClass'
  NO_CANDIDATES

KtValueArgumentList(135,137): '()'
  NO_CANDIDATES

KtObjectDeclaration(143,299): 'companion object {'
  NO_CANDIDATES

KtDeclarationModifierList(143,152): 'companion'
  NO_CANDIDATES

KtClassBody(160,299): '{'
  NO_CANDIDATES

KtProperty(170,206): 'val myClassProp: MyClass = MyClass()'
  NO_CANDIDATES

KtTypeReference(187,194): 'MyClass'
  NO_CANDIDATES

KtUserType(187,194): 'MyClass'
  NO_CANDIDATES

KtNameReferenceExpression(187,194): 'MyClass'
  NO_CANDIDATES

KtCallExpression(197,206): 'MyClass()'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(197,204): 'MyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(204,206): '()'
  NO_CANDIDATES

KtProperty(215,242): 'val stringProp: String = ""'
  NO_CANDIDATES

KtTypeReference(231,237): 'String'
  NO_CANDIDATES

KtUserType(231,237): 'String'
  NO_CANDIDATES

KtNameReferenceExpression(231,237): 'String'
  NO_CANDIDATES

KtStringTemplateExpression(240,242): '""'
  NO_CANDIDATES

KtNamedFunction(251,293): 'fun getNestedInheritor() = NestedInheritor'
  NO_CANDIDATES

KtParameterList(273,275): '()'
  NO_CANDIDATES

KtNameReferenceExpression(278,293): 'NestedInheritor'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass.NestedInheritor
          symbol = <constructor>(): MyClass.NestedInheritor
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<OTHER_ERROR: Inapplicable candidate>
    isInBestCandidates = false

KtProperty(303,349): 'val ClassMemberAlias = MyClass.NestedInheritor'
  NO_CANDIDATES

KtDotQualifiedExpression(326,349): 'MyClass.NestedInheritor'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass.NestedInheritor
          symbol = <constructor>(): MyClass.NestedInheritor
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<OTHER_ERROR: Inapplicable candidate>
    isInBestCandidates = false

KtNameReferenceExpression(326,333): 'MyClass'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<OTHER_ERROR: Inapplicable candidate>
    isInBestCandidates = false

KtNameReferenceExpression(334,349): 'NestedInheritor'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass.NestedInheritor
          symbol = <constructor>(): MyClass.NestedInheritor
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<OTHER_ERROR: Inapplicable candidate>
    isInBestCandidates = false

KtClass(351,384): 'class E1(m: String): Exception(m)'
  NO_CANDIDATES

KtPrimaryConstructor(359,370): '(m: String)'
  NO_CANDIDATES

KtParameterList(359,370): '(m: String)'
  NO_CANDIDATES

KtParameter(360,369): 'm: String'
  NO_CANDIDATES

KtTypeReference(363,369): 'String'
  NO_CANDIDATES

KtUserType(363,369): 'String'
  NO_CANDIDATES

KtNameReferenceExpression(363,369): 'String'
  NO_CANDIDATES

KtSuperTypeList(372,384): 'Exception(m)'
  NO_CANDIDATES

KtSuperTypeCallEntry(372,384): 'Exception(m)'
  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(): java.lang.Exception
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<TOO_MANY_ARGUMENTS: Too many arguments for 'constructor(): Exception'.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(cause: kotlin.Throwable!): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = cause
              receiverType = null
              returnType = kotlin.Throwable!
              symbol = cause: kotlin.Throwable!
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Throwable!' was expected.>
    isInBestCandidates = false

  KaApplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {
        m -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.String!
          symbol = message: kotlin.String!
          contextParameters = []
          callableId = null)
      }
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(message: kotlin.String!): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.String!
              symbol = message: kotlin.String!
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {
        m -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.String!
          symbol = message: kotlin.String!
          contextParameters = []
          callableId = null)
      }
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(message: kotlin.String!, cause: kotlin.Throwable!): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.String!
              symbol = message: kotlin.String!
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = cause
              receiverType = null
              returnType = kotlin.Throwable!
              symbol = cause: kotlin.Throwable!
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<NO_VALUE_FOR_PARAMETER: No value passed for parameter 'cause'.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {
        m -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.String!
          symbol = message: kotlin.String!
          contextParameters = []
          callableId = null)
      }
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(message: kotlin.String!, cause: kotlin.Throwable!, enableSuppression: kotlin.Boolean, writableStackTrace: kotlin.Boolean): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.String!
              symbol = message: kotlin.String!
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = cause
              receiverType = null
              returnType = kotlin.Throwable!
              symbol = cause: kotlin.Throwable!
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = enableSuppression
              receiverType = null
              returnType = kotlin.Boolean
              symbol = enableSuppression: kotlin.Boolean
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = writableStackTrace
              receiverType = null
              returnType = kotlin.Boolean
              symbol = writableStackTrace: kotlin.Boolean
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<NO_VALUE_FOR_PARAMETER: No value passed for parameter 'cause'.>
    isInBestCandidates = false

KtConstructorCalleeExpression(372,381): 'Exception'
  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(): java.lang.Exception
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<TOO_MANY_ARGUMENTS: Too many arguments for 'constructor(): Exception'.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(cause: kotlin.Throwable!): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = cause
              receiverType = null
              returnType = kotlin.Throwable!
              symbol = cause: kotlin.Throwable!
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Throwable!' was expected.>
    isInBestCandidates = false

  KaApplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {
        m -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.String!
          symbol = message: kotlin.String!
          contextParameters = []
          callableId = null)
      }
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(message: kotlin.String!): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.String!
              symbol = message: kotlin.String!
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {
        m -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.String!
          symbol = message: kotlin.String!
          contextParameters = []
          callableId = null)
      }
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(message: kotlin.String!, cause: kotlin.Throwable!): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.String!
              symbol = message: kotlin.String!
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = cause
              receiverType = null
              returnType = kotlin.Throwable!
              symbol = cause: kotlin.Throwable!
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<NO_VALUE_FOR_PARAMETER: No value passed for parameter 'cause'.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {
        m -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.String!
          symbol = message: kotlin.String!
          contextParameters = []
          callableId = null)
      }
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(message: kotlin.String!, cause: kotlin.Throwable!, enableSuppression: kotlin.Boolean, writableStackTrace: kotlin.Boolean): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.String!
              symbol = message: kotlin.String!
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = cause
              receiverType = null
              returnType = kotlin.Throwable!
              symbol = cause: kotlin.Throwable!
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = enableSuppression
              receiverType = null
              returnType = kotlin.Boolean
              symbol = enableSuppression: kotlin.Boolean
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = writableStackTrace
              receiverType = null
              returnType = kotlin.Boolean
              symbol = writableStackTrace: kotlin.Boolean
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<NO_VALUE_FOR_PARAMETER: No value passed for parameter 'cause'.>
    isInBestCandidates = false

KtTypeReference(372,381): 'Exception'
  NO_CANDIDATES

KtUserType(372,381): 'Exception'
  NO_CANDIDATES

KtNameReferenceExpression(372,381): 'Exception'
  NO_CANDIDATES

KtValueArgumentList(381,384): '(m)'
  NO_CANDIDATES

KtValueArgument(382,383): 'm'
  NO_CANDIDATES

KtNameReferenceExpression(382,383): 'm'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = m
          receiverType = null
          returnType = kotlin.String
          symbol = m: kotlin.String
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtClass(385,418): 'class E2(m: String): Exception(m)'
  NO_CANDIDATES

KtPrimaryConstructor(393,404): '(m: String)'
  NO_CANDIDATES

KtParameterList(393,404): '(m: String)'
  NO_CANDIDATES

KtParameter(394,403): 'm: String'
  NO_CANDIDATES

KtTypeReference(397,403): 'String'
  NO_CANDIDATES

KtUserType(397,403): 'String'
  NO_CANDIDATES

KtNameReferenceExpression(397,403): 'String'
  NO_CANDIDATES

KtSuperTypeList(406,418): 'Exception(m)'
  NO_CANDIDATES

KtSuperTypeCallEntry(406,418): 'Exception(m)'
  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(): java.lang.Exception
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<TOO_MANY_ARGUMENTS: Too many arguments for 'constructor(): Exception'.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(cause: kotlin.Throwable!): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = cause
              receiverType = null
              returnType = kotlin.Throwable!
              symbol = cause: kotlin.Throwable!
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Throwable!' was expected.>
    isInBestCandidates = false

  KaApplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {
        m -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.String!
          symbol = message: kotlin.String!
          contextParameters = []
          callableId = null)
      }
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(message: kotlin.String!): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.String!
              symbol = message: kotlin.String!
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {
        m -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.String!
          symbol = message: kotlin.String!
          contextParameters = []
          callableId = null)
      }
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(message: kotlin.String!, cause: kotlin.Throwable!): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.String!
              symbol = message: kotlin.String!
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = cause
              receiverType = null
              returnType = kotlin.Throwable!
              symbol = cause: kotlin.Throwable!
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<NO_VALUE_FOR_PARAMETER: No value passed for parameter 'cause'.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {
        m -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.String!
          symbol = message: kotlin.String!
          contextParameters = []
          callableId = null)
      }
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(message: kotlin.String!, cause: kotlin.Throwable!, enableSuppression: kotlin.Boolean, writableStackTrace: kotlin.Boolean): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.String!
              symbol = message: kotlin.String!
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = cause
              receiverType = null
              returnType = kotlin.Throwable!
              symbol = cause: kotlin.Throwable!
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = enableSuppression
              receiverType = null
              returnType = kotlin.Boolean
              symbol = enableSuppression: kotlin.Boolean
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = writableStackTrace
              receiverType = null
              returnType = kotlin.Boolean
              symbol = writableStackTrace: kotlin.Boolean
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<NO_VALUE_FOR_PARAMETER: No value passed for parameter 'cause'.>
    isInBestCandidates = false

KtConstructorCalleeExpression(406,415): 'Exception'
  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(): java.lang.Exception
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<TOO_MANY_ARGUMENTS: Too many arguments for 'constructor(): Exception'.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(cause: kotlin.Throwable!): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = cause
              receiverType = null
              returnType = kotlin.Throwable!
              symbol = cause: kotlin.Throwable!
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Throwable!' was expected.>
    isInBestCandidates = false

  KaApplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {
        m -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.String!
          symbol = message: kotlin.String!
          contextParameters = []
          callableId = null)
      }
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(message: kotlin.String!): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.String!
              symbol = message: kotlin.String!
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {
        m -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.String!
          symbol = message: kotlin.String!
          contextParameters = []
          callableId = null)
      }
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(message: kotlin.String!, cause: kotlin.Throwable!): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.String!
              symbol = message: kotlin.String!
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = cause
              receiverType = null
              returnType = kotlin.Throwable!
              symbol = cause: kotlin.Throwable!
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<NO_VALUE_FOR_PARAMETER: No value passed for parameter 'cause'.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {
        m -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.String!
          symbol = message: kotlin.String!
          contextParameters = []
          callableId = null)
      }
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(message: kotlin.String!, cause: kotlin.Throwable!, enableSuppression: kotlin.Boolean, writableStackTrace: kotlin.Boolean): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.String!
              symbol = message: kotlin.String!
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = cause
              receiverType = null
              returnType = kotlin.Throwable!
              symbol = cause: kotlin.Throwable!
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = enableSuppression
              receiverType = null
              returnType = kotlin.Boolean
              symbol = enableSuppression: kotlin.Boolean
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = writableStackTrace
              receiverType = null
              returnType = kotlin.Boolean
              symbol = writableStackTrace: kotlin.Boolean
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<NO_VALUE_FOR_PARAMETER: No value passed for parameter 'cause'.>
    isInBestCandidates = false

KtTypeReference(406,415): 'Exception'
  NO_CANDIDATES

KtUserType(406,415): 'Exception'
  NO_CANDIDATES

KtNameReferenceExpression(406,415): 'Exception'
  NO_CANDIDATES

KtValueArgumentList(415,418): '(m)'
  NO_CANDIDATES

KtValueArgument(416,417): 'm'
  NO_CANDIDATES

KtNameReferenceExpression(416,417): 'm'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = m
          receiverType = null
          returnType = kotlin.String
          symbol = m: kotlin.String
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtClass(419,452): 'class E3(m: String): Exception(m)'
  NO_CANDIDATES

KtPrimaryConstructor(427,438): '(m: String)'
  NO_CANDIDATES

KtParameterList(427,438): '(m: String)'
  NO_CANDIDATES

KtParameter(428,437): 'm: String'
  NO_CANDIDATES

KtTypeReference(431,437): 'String'
  NO_CANDIDATES

KtUserType(431,437): 'String'
  NO_CANDIDATES

KtNameReferenceExpression(431,437): 'String'
  NO_CANDIDATES

KtSuperTypeList(440,452): 'Exception(m)'
  NO_CANDIDATES

KtSuperTypeCallEntry(440,452): 'Exception(m)'
  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(): java.lang.Exception
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<TOO_MANY_ARGUMENTS: Too many arguments for 'constructor(): Exception'.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(cause: kotlin.Throwable!): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = cause
              receiverType = null
              returnType = kotlin.Throwable!
              symbol = cause: kotlin.Throwable!
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Throwable!' was expected.>
    isInBestCandidates = false

  KaApplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {
        m -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.String!
          symbol = message: kotlin.String!
          contextParameters = []
          callableId = null)
      }
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(message: kotlin.String!): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.String!
              symbol = message: kotlin.String!
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {
        m -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.String!
          symbol = message: kotlin.String!
          contextParameters = []
          callableId = null)
      }
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(message: kotlin.String!, cause: kotlin.Throwable!): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.String!
              symbol = message: kotlin.String!
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = cause
              receiverType = null
              returnType = kotlin.Throwable!
              symbol = cause: kotlin.Throwable!
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<NO_VALUE_FOR_PARAMETER: No value passed for parameter 'cause'.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {
        m -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.String!
          symbol = message: kotlin.String!
          contextParameters = []
          callableId = null)
      }
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(message: kotlin.String!, cause: kotlin.Throwable!, enableSuppression: kotlin.Boolean, writableStackTrace: kotlin.Boolean): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.String!
              symbol = message: kotlin.String!
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = cause
              receiverType = null
              returnType = kotlin.Throwable!
              symbol = cause: kotlin.Throwable!
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = enableSuppression
              receiverType = null
              returnType = kotlin.Boolean
              symbol = enableSuppression: kotlin.Boolean
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = writableStackTrace
              receiverType = null
              returnType = kotlin.Boolean
              symbol = writableStackTrace: kotlin.Boolean
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<NO_VALUE_FOR_PARAMETER: No value passed for parameter 'cause'.>
    isInBestCandidates = false

KtConstructorCalleeExpression(440,449): 'Exception'
  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(): java.lang.Exception
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<TOO_MANY_ARGUMENTS: Too many arguments for 'constructor(): Exception'.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(cause: kotlin.Throwable!): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = cause
              receiverType = null
              returnType = kotlin.Throwable!
              symbol = cause: kotlin.Throwable!
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'String', but 'Throwable!' was expected.>
    isInBestCandidates = false

  KaApplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {
        m -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.String!
          symbol = message: kotlin.String!
          contextParameters = []
          callableId = null)
      }
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(message: kotlin.String!): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.String!
              symbol = message: kotlin.String!
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {
        m -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.String!
          symbol = message: kotlin.String!
          contextParameters = []
          callableId = null)
      }
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(message: kotlin.String!, cause: kotlin.Throwable!): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.String!
              symbol = message: kotlin.String!
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = cause
              receiverType = null
              returnType = kotlin.Throwable!
              symbol = cause: kotlin.Throwable!
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<NO_VALUE_FOR_PARAMETER: No value passed for parameter 'cause'.>
    isInBestCandidates = false

  KaInapplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {
        m -> (KaVariableSignature:
          name = message
          receiverType = null
          returnType = kotlin.String!
          symbol = message: kotlin.String!
          contextParameters = []
          callableId = null)
      }
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = java.lang.Exception
          symbol = <constructor>(message: kotlin.String!, cause: kotlin.Throwable!, enableSuppression: kotlin.Boolean, writableStackTrace: kotlin.Boolean): java.lang.Exception
          valueParameters = [
            KaVariableSignature:
              name = message
              receiverType = null
              returnType = kotlin.String!
              symbol = message: kotlin.String!
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = cause
              receiverType = null
              returnType = kotlin.Throwable!
              symbol = cause: kotlin.Throwable!
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = enableSuppression
              receiverType = null
              returnType = kotlin.Boolean
              symbol = enableSuppression: kotlin.Boolean
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = writableStackTrace
              receiverType = null
              returnType = kotlin.Boolean
              symbol = writableStackTrace: kotlin.Boolean
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<NO_VALUE_FOR_PARAMETER: No value passed for parameter 'cause'.>
    isInBestCandidates = false

KtTypeReference(440,449): 'Exception'
  NO_CANDIDATES

KtUserType(440,449): 'Exception'
  NO_CANDIDATES

KtNameReferenceExpression(440,449): 'Exception'
  NO_CANDIDATES

KtValueArgumentList(449,452): '(m)'
  NO_CANDIDATES

KtValueArgument(450,451): 'm'
  NO_CANDIDATES

KtNameReferenceExpression(450,451): 'm'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = m
          receiverType = null
          returnType = kotlin.String
          symbol = m: kotlin.String
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNamedFunction(454,477): 'fun <T>receive(e: T) {}'
  NO_CANDIDATES

KtTypeParameterList(458,461): '<T>'
  NO_CANDIDATES

KtTypeParameter(459,460): 'T'
  NO_CANDIDATES

KtParameterList(468,474): '(e: T)'
  NO_CANDIDATES

KtParameter(469,473): 'e: T'
  NO_CANDIDATES

KtTypeReference(472,473): 'T'
  NO_CANDIDATES

KtUserType(472,473): 'T'
  NO_CANDIDATES

KtNameReferenceExpression(472,473): 'T'
  NO_CANDIDATES

KtBlockExpression(475,477): '{}'
  NO_CANDIDATES

KtNamedFunction(478,510): 'fun <T> run(b: () -> T): T = b()'
  NO_CANDIDATES

KtTypeParameterList(482,485): '<T>'
  NO_CANDIDATES

KtTypeParameter(483,484): 'T'
  NO_CANDIDATES

KtParameterList(489,501): '(b: () -> T)'
  NO_CANDIDATES

KtParameter(490,500): 'b: () -> T'
  NO_CANDIDATES

KtTypeReference(493,500): '() -> T'
  NO_CANDIDATES

KtFunctionType(493,500): '() -> T'
  NO_CANDIDATES

KtParameterList(493,495): '()'
  NO_CANDIDATES

KtTypeReference(499,500): 'T'
  NO_CANDIDATES

KtUserType(499,500): 'T'
  NO_CANDIDATES

KtNameReferenceExpression(499,500): 'T'
  NO_CANDIDATES

KtTypeReference(503,504): 'T'
  NO_CANDIDATES

KtUserType(503,504): 'T'
  NO_CANDIDATES

KtNameReferenceExpression(503,504): 'T'
  NO_CANDIDATES

KtCallExpression(507,510): 'b()'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = b
          isSafeNavigation = false
          type = kotlin.Function0<T>
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = T
          symbol = kotlin/Function0.invoke(<dispatch receiver>: kotlin.Function0<R>): R
          valueParameters = []
          contextParameters = []
          callableId = kotlin/Function0.invoke
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(507,508): 'b'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = b
          receiverType = null
          returnType = kotlin.Function0<T>
          symbol = b: kotlin.Function0<T>
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(508,510): '()'
  NO_CANDIDATES

KtNamedFunction(512,1889): 'fun testTryCatch() {'
  NO_CANDIDATES

KtParameterList(528,530): '()'
  NO_CANDIDATES

KtBlockExpression(531,1889): '{'
  NO_CANDIDATES

KtProperty(537,1102): 'val c: MyClass = try {'
  NO_CANDIDATES

KtTypeReference(544,551): 'MyClass'
  NO_CANDIDATES

KtUserType(544,551): 'MyClass'
  NO_CANDIDATES

KtNameReferenceExpression(544,551): 'MyClass'
  NO_CANDIDATES

KtTryExpression(554,1102): 'try {'
  NO_CANDIDATES

KtBlockExpression(558,687): '{'
  NO_CANDIDATES

KtNameReferenceExpression(568,583): 'NestedInheritor'
  NO_CANDIDATES

KtNameReferenceExpression(666,681): 'NestedInheritor'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass.NestedInheritor
          symbol = <constructor>(): MyClass.NestedInheritor
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<OTHER_ERROR: Inapplicable candidate>
    isInBestCandidates = false

KtCatchClause(688,819): 'catch (e: E1) {'
  NO_CANDIDATES

KtParameterList(694,701): '(e: E1)'
  NO_CANDIDATES

KtParameter(695,700): 'e: E1'
  NO_CANDIDATES

KtTypeReference(698,700): 'E1'
  NO_CANDIDATES

KtUserType(698,700): 'E1'
  NO_CANDIDATES

KtNameReferenceExpression(698,700): 'E1'
  NO_CANDIDATES

KtBlockExpression(702,819): '{'
  NO_CANDIDATES

KtNameReferenceExpression(712,723): 'myClassProp'
  NO_CANDIDATES

KtNameReferenceExpression(802,813): 'myClassProp'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = myClassProp
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = myClassProp
          receiverType = null
          returnType = MyClass
          symbol = val myClassProp: MyClass
          contextParameters = []
          callableId = /MyClass.Companion.myClassProp
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtCatchClause(820,1061): 'catch (e: E2) {'
  NO_CANDIDATES

KtParameterList(826,833): '(e: E2)'
  NO_CANDIDATES

KtParameter(827,832): 'e: E2'
  NO_CANDIDATES

KtTypeReference(830,832): 'E2'
  NO_CANDIDATES

KtUserType(830,832): 'E2'
  NO_CANDIDATES

KtNameReferenceExpression(830,832): 'E2'
  NO_CANDIDATES

KtBlockExpression(834,1061): '{'
  NO_CANDIDATES

KtNameReferenceExpression(844,854): 'stringProp'
  NO_CANDIDATES

KtNameReferenceExpression(932,942): 'stringProp'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = stringProp
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = stringProp
          receiverType = null
          returnType = kotlin.String
          symbol = val stringProp: kotlin.String
          contextParameters = []
          callableId = /MyClass.Companion.stringProp
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtFinallySection(1062,1102): 'finally {'
  NO_CANDIDATES

KtBlockExpression(1070,1102): '{'
  NO_CANDIDATES

KtNameReferenceExpression(1080,1096): 'ClassMemberAlias'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = ClassMemberAlias
          receiverType = null
          returnType = MyClass.NestedInheritor
          symbol = val ClassMemberAlias: MyClass.NestedInheritor
          contextParameters = []
          callableId = /ClassMemberAlias
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtCallExpression(1108,1497): 'receive<MyClass>('
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        try {
                    NestedInheritor
                    NestedInheritor
                } catch(e: E1) {
                    myClassProp
                    myClassProp
                } catch (e: E2) {
                    stringProp
                    stringProp
                } catch (e: E3) {
                    getNestedInheritor()
                    getNestedInheritor()
                } finally {
                    ClassMemberAlias
                } -> (KaVariableSignature:
          name = e
          receiverType = null
          returnType = MyClass
          symbol = e: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receive(e: T): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = e
              receiverType = null
              returnType = MyClass
              symbol = e: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receive
      typeArgumentsMapping = {
        T -> (MyClass)
      }
    diagnostic = ERROR<INAPPLICABLE_CANDIDATE: Inapplicable candidate(s): fun <T> receive(e: T): Unit>
    isInBestCandidates = true

KtNameReferenceExpression(1108,1115): 'receive'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        try {
                    NestedInheritor
                    NestedInheritor
                } catch(e: E1) {
                    myClassProp
                    myClassProp
                } catch (e: E2) {
                    stringProp
                    stringProp
                } catch (e: E3) {
                    getNestedInheritor()
                    getNestedInheritor()
                } finally {
                    ClassMemberAlias
                } -> (KaVariableSignature:
          name = e
          receiverType = null
          returnType = MyClass
          symbol = e: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receive(e: T): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = e
              receiverType = null
              returnType = MyClass
              symbol = e: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receive
      typeArgumentsMapping = {
        T -> (MyClass)
      }
    diagnostic = ERROR<INAPPLICABLE_CANDIDATE: Inapplicable candidate(s): fun <T> receive(e: T): Unit>
    isInBestCandidates = true

KtTypeArgumentList(1115,1124): '<MyClass>'
  NO_CANDIDATES

KtTypeProjection(1116,1123): 'MyClass'
  NO_CANDIDATES

KtTypeReference(1116,1123): 'MyClass'
  NO_CANDIDATES

KtUserType(1116,1123): 'MyClass'
  NO_CANDIDATES

KtNameReferenceExpression(1116,1123): 'MyClass'
  NO_CANDIDATES

KtValueArgumentList(1124,1497): '('
  NO_CANDIDATES

KtValueArgument(1134,1491): 'try {'
  NO_CANDIDATES

KtTryExpression(1134,1491): 'try {'
  NO_CANDIDATES

KtBlockExpression(1138,1205): '{'
  NO_CANDIDATES

KtNameReferenceExpression(1152,1167): 'NestedInheritor'
  NO_CANDIDATES

KtNameReferenceExpression(1180,1195): 'NestedInheritor'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass.NestedInheritor
          symbol = <constructor>(): MyClass.NestedInheritor
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<OTHER_ERROR: Inapplicable candidate>
    isInBestCandidates = false

KtCatchClause(1206,1278): 'catch(e: E1) {'
  NO_CANDIDATES

KtParameterList(1211,1218): '(e: E1)'
  NO_CANDIDATES

KtParameter(1212,1217): 'e: E1'
  NO_CANDIDATES

KtTypeReference(1215,1217): 'E1'
  NO_CANDIDATES

KtUserType(1215,1217): 'E1'
  NO_CANDIDATES

KtNameReferenceExpression(1215,1217): 'E1'
  NO_CANDIDATES

KtBlockExpression(1219,1278): '{'
  NO_CANDIDATES

KtNameReferenceExpression(1233,1244): 'myClassProp'
  NO_CANDIDATES

KtNameReferenceExpression(1257,1268): 'myClassProp'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = myClassProp
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = myClassProp
          receiverType = null
          returnType = MyClass
          symbol = val myClassProp: MyClass
          contextParameters = []
          callableId = /MyClass.Companion.myClassProp
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtCatchClause(1279,1350): 'catch (e: E2) {'
  NO_CANDIDATES

KtParameterList(1285,1292): '(e: E2)'
  NO_CANDIDATES

KtParameter(1286,1291): 'e: E2'
  NO_CANDIDATES

KtTypeReference(1289,1291): 'E2'
  NO_CANDIDATES

KtUserType(1289,1291): 'E2'
  NO_CANDIDATES

KtNameReferenceExpression(1289,1291): 'E2'
  NO_CANDIDATES

KtBlockExpression(1293,1350): '{'
  NO_CANDIDATES

KtNameReferenceExpression(1307,1317): 'stringProp'
  NO_CANDIDATES

KtNameReferenceExpression(1330,1340): 'stringProp'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = stringProp
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = stringProp
          receiverType = null
          returnType = kotlin.String
          symbol = val stringProp: kotlin.String
          contextParameters = []
          callableId = /MyClass.Companion.stringProp
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtCatchClause(1351,1442): 'catch (e: E3) {'
  NO_CANDIDATES

KtParameterList(1357,1364): '(e: E3)'
  NO_CANDIDATES

KtParameter(1358,1363): 'e: E3'
  NO_CANDIDATES

KtTypeReference(1361,1363): 'E3'
  NO_CANDIDATES

KtUserType(1361,1363): 'E3'
  NO_CANDIDATES

KtNameReferenceExpression(1361,1363): 'E3'
  NO_CANDIDATES

KtBlockExpression(1365,1442): '{'
  NO_CANDIDATES

KtCallExpression(1379,1399): 'getNestedInheritor()'
  NO_CANDIDATES

KtNameReferenceExpression(1379,1397): 'getNestedInheritor'
  NO_CANDIDATES

KtValueArgumentList(1397,1399): '()'
  NO_CANDIDATES

KtCallExpression(1412,1432): 'getNestedInheritor()'
  NO_CANDIDATES

KtNameReferenceExpression(1412,1430): 'getNestedInheritor'
  NO_CANDIDATES

KtValueArgumentList(1430,1432): '()'
  NO_CANDIDATES

KtFinallySection(1443,1491): 'finally {'
  NO_CANDIDATES

KtBlockExpression(1451,1491): '{'
  NO_CANDIDATES

KtNameReferenceExpression(1465,1481): 'ClassMemberAlias'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = ClassMemberAlias
          receiverType = null
          returnType = MyClass.NestedInheritor
          symbol = val ClassMemberAlias: MyClass.NestedInheritor
          contextParameters = []
          callableId = /ClassMemberAlias
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtCallExpression(1503,1887): 'run<MyClass> {'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        {
                try {
                    NestedInheritor
                    NestedInheritor
                } catch(e: E1) {
                    myClassProp
                    myClassProp
                } catch(e: E2) {
                    stringProp
                    stringProp
                } catch(e: E3) {
                    getNestedInheritor()
                    getNestedInheritor()
                } finally {
                    ClassMemberAlias
                }
            } -> (KaVariableSignature:
          name = b
          receiverType = null
          returnType = kotlin.Function0<MyClass>
          symbol = b: kotlin.Function0<T>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = /run(b: kotlin.Function0<T>): T
          valueParameters = [
            KaVariableSignature:
              name = b
              receiverType = null
              returnType = kotlin.Function0<MyClass>
              symbol = b: kotlin.Function0<T>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /run
      typeArgumentsMapping = {
        T -> (MyClass)
      }
    diagnostic = ERROR<INAPPLICABLE_CANDIDATE: Inapplicable candidate(s): fun <T> run(b: () -> T): T>
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        {
                try {
                    NestedInheritor
                    NestedInheritor
                } catch(e: E1) {
                    myClassProp
                    myClassProp
                } catch(e: E2) {
                    stringProp
                    stringProp
                } catch(e: E3) {
                    getNestedInheritor()
                    getNestedInheritor()
                } finally {
                    ClassMemberAlias
                }
            } -> (KaVariableSignature:
          name = block
          receiverType = null
          returnType = kotlin.Function0<MyClass>
          symbol = block: kotlin.Function0<R>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = kotlin/run(block: kotlin.Function0<R>): R
          valueParameters = [
            KaVariableSignature:
              name = block
              receiverType = null
              returnType = kotlin.Function0<MyClass>
              symbol = block: kotlin.Function0<R>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/run
      typeArgumentsMapping = {
        R -> (MyClass)
      }
    diagnostic = ERROR<INAPPLICABLE_CANDIDATE: Inapplicable candidate(s): fun <R> run(block: () -> R): R>
    isInBestCandidates = false

KtNameReferenceExpression(1503,1506): 'run'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        {
                try {
                    NestedInheritor
                    NestedInheritor
                } catch(e: E1) {
                    myClassProp
                    myClassProp
                } catch(e: E2) {
                    stringProp
                    stringProp
                } catch(e: E3) {
                    getNestedInheritor()
                    getNestedInheritor()
                } finally {
                    ClassMemberAlias
                }
            } -> (KaVariableSignature:
          name = b
          receiverType = null
          returnType = kotlin.Function0<MyClass>
          symbol = b: kotlin.Function0<T>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = /run(b: kotlin.Function0<T>): T
          valueParameters = [
            KaVariableSignature:
              name = b
              receiverType = null
              returnType = kotlin.Function0<MyClass>
              symbol = b: kotlin.Function0<T>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /run
      typeArgumentsMapping = {
        T -> (MyClass)
      }
    diagnostic = ERROR<INAPPLICABLE_CANDIDATE: Inapplicable candidate(s): fun <T> run(b: () -> T): T>
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        {
                try {
                    NestedInheritor
                    NestedInheritor
                } catch(e: E1) {
                    myClassProp
                    myClassProp
                } catch(e: E2) {
                    stringProp
                    stringProp
                } catch(e: E3) {
                    getNestedInheritor()
                    getNestedInheritor()
                } finally {
                    ClassMemberAlias
                }
            } -> (KaVariableSignature:
          name = block
          receiverType = null
          returnType = kotlin.Function0<MyClass>
          symbol = block: kotlin.Function0<R>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = kotlin/run(block: kotlin.Function0<R>): R
          valueParameters = [
            KaVariableSignature:
              name = block
              receiverType = null
              returnType = kotlin.Function0<MyClass>
              symbol = block: kotlin.Function0<R>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/run
      typeArgumentsMapping = {
        R -> (MyClass)
      }
    diagnostic = ERROR<INAPPLICABLE_CANDIDATE: Inapplicable candidate(s): fun <R> run(block: () -> R): R>
    isInBestCandidates = false

KtTypeArgumentList(1506,1515): '<MyClass>'
  NO_CANDIDATES

KtTypeProjection(1507,1514): 'MyClass'
  NO_CANDIDATES

KtTypeReference(1507,1514): 'MyClass'
  NO_CANDIDATES

KtUserType(1507,1514): 'MyClass'
  NO_CANDIDATES

KtNameReferenceExpression(1507,1514): 'MyClass'
  NO_CANDIDATES

KtLambdaArgument(1516,1887): '{'
  NO_CANDIDATES

KtLambdaExpression(1516,1887): '{'
  NO_CANDIDATES

KtFunctionLiteral(1516,1887): '{'
  NO_CANDIDATES

KtBlockExpression(1526,1881): 'try {'
  NO_CANDIDATES

KtTryExpression(1526,1881): 'try {'
  NO_CANDIDATES

KtBlockExpression(1530,1597): '{'
  NO_CANDIDATES

KtNameReferenceExpression(1544,1559): 'NestedInheritor'
  NO_CANDIDATES

KtNameReferenceExpression(1572,1587): 'NestedInheritor'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass.NestedInheritor
          symbol = <constructor>(): MyClass.NestedInheritor
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<OTHER_ERROR: Inapplicable candidate>
    isInBestCandidates = false

KtCatchClause(1598,1670): 'catch(e: E1) {'
  NO_CANDIDATES

KtParameterList(1603,1610): '(e: E1)'
  NO_CANDIDATES

KtParameter(1604,1609): 'e: E1'
  NO_CANDIDATES

KtTypeReference(1607,1609): 'E1'
  NO_CANDIDATES

KtUserType(1607,1609): 'E1'
  NO_CANDIDATES

KtNameReferenceExpression(1607,1609): 'E1'
  NO_CANDIDATES

KtBlockExpression(1611,1670): '{'
  NO_CANDIDATES

KtNameReferenceExpression(1625,1636): 'myClassProp'
  NO_CANDIDATES

KtNameReferenceExpression(1649,1660): 'myClassProp'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = myClassProp
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = myClassProp
          receiverType = null
          returnType = MyClass
          symbol = val myClassProp: MyClass
          contextParameters = []
          callableId = /MyClass.Companion.myClassProp
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtCatchClause(1671,1741): 'catch(e: E2) {'
  NO_CANDIDATES

KtParameterList(1676,1683): '(e: E2)'
  NO_CANDIDATES

KtParameter(1677,1682): 'e: E2'
  NO_CANDIDATES

KtTypeReference(1680,1682): 'E2'
  NO_CANDIDATES

KtUserType(1680,1682): 'E2'
  NO_CANDIDATES

KtNameReferenceExpression(1680,1682): 'E2'
  NO_CANDIDATES

KtBlockExpression(1684,1741): '{'
  NO_CANDIDATES

KtNameReferenceExpression(1698,1708): 'stringProp'
  NO_CANDIDATES

KtNameReferenceExpression(1721,1731): 'stringProp'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = stringProp
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = stringProp
          receiverType = null
          returnType = kotlin.String
          symbol = val stringProp: kotlin.String
          contextParameters = []
          callableId = /MyClass.Companion.stringProp
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtCatchClause(1742,1832): 'catch(e: E3) {'
  NO_CANDIDATES

KtParameterList(1747,1754): '(e: E3)'
  NO_CANDIDATES

KtParameter(1748,1753): 'e: E3'
  NO_CANDIDATES

KtTypeReference(1751,1753): 'E3'
  NO_CANDIDATES

KtUserType(1751,1753): 'E3'
  NO_CANDIDATES

KtNameReferenceExpression(1751,1753): 'E3'
  NO_CANDIDATES

KtBlockExpression(1755,1832): '{'
  NO_CANDIDATES

KtCallExpression(1769,1789): 'getNestedInheritor()'
  NO_CANDIDATES

KtNameReferenceExpression(1769,1787): 'getNestedInheritor'
  NO_CANDIDATES

KtValueArgumentList(1787,1789): '()'
  NO_CANDIDATES

KtCallExpression(1802,1822): 'getNestedInheritor()'
  NO_CANDIDATES

KtNameReferenceExpression(1802,1820): 'getNestedInheritor'
  NO_CANDIDATES

KtValueArgumentList(1820,1822): '()'
  NO_CANDIDATES

KtFinallySection(1833,1881): 'finally {'
  NO_CANDIDATES

KtBlockExpression(1841,1881): '{'
  NO_CANDIDATES

KtNameReferenceExpression(1855,1871): 'ClassMemberAlias'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = ClassMemberAlias
          receiverType = null
          returnType = MyClass.NestedInheritor
          symbol = val ClassMemberAlias: MyClass.NestedInheritor
          contextParameters = []
          callableId = /ClassMemberAlias
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true