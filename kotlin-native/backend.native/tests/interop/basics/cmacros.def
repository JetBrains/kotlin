excludedMacros = EXCLUDED
---
int* ptr_call() {
    return (int*) 1;
}

int int_call() {
    return 42;
}

void void_call() {}

int arg_call(int x) {
    return x;
}

typedef struct {
    int value
} struct_t;

struct_t getStruct() {
    return (struct_t){ 1 };
}

int global_var = 5;

#define TOO_MANY_ERRORS x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x, x

#define LEFT_BRACE {

#define ZERO 0
#define ONE 1

#define RIGHT_BRACE }

#define MAX_LONG 9223372036854775807
#define FOO_STRING "foo"
// This one should be ignored:
#define WIDE_FOO_STRING L"foo"
#define FOURTY_TWO 42
#define SEVENTEEN ((long long) 17)
#define ONE_POINT_ZERO 1.0
#define ONE_POINT_FIVE 1.5f

#define LEFT_PAREN (

#define NULL_PTR ((void*)0)
#define VOID_PTR ((void*)1)
#define INT_PTR ((int*)1)
#define PTR_SUM (INT_PTR + 1)
#define PTR_SUM_EXPECTED (sizeof(int) + 1)

#define RIGHT_PAREN )

enum {
    INT_CALL = 1 // Should be replaced by macro below.
};

#define PTR_CALL ptr_call()
#define INT_CALL int_call()
#define CALL_SUM (int_call() + int_call())
#define GLOBAL_VAR (global_var)

// This one should be excluded:
#define EXCLUDED 42

// These ones should be ignored:
#define VOID_CALL   (void_call())
#define ARG_CALL(x) (arg_call(x))
#define GET_STRUCT  (getStruct())
#define UNDECLARED  (undeclared())

#define BAD1 bar
#define BAD2 5;
#define BAD3 { foo(); }

void increment(int* counter);
#define increment(counter) { (*(counter))++; }
