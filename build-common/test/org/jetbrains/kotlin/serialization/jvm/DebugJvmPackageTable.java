// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/descriptor.loader.java/src/jvm_package_table.debug.proto

package org.jetbrains.kotlin.serialization.jvm;

public final class DebugJvmPackageTable {
  private DebugJvmPackageTable() {}
  public static void registerAllExtensions(
      org.jetbrains.kotlin.protobuf.ExtensionRegistry registry) {
  }
  public interface PackageTableOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.serialization.jvm.PackageTable)
      org.jetbrains.kotlin.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
     */
    java.util.List<org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts> 
        getPackagePartsList();
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts getPackageParts(int index);
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
     */
    int getPackagePartsCount();
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
     */
    java.util.List<? extends org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackagePartsOrBuilder> 
        getPackagePartsOrBuilderList();
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackagePartsOrBuilder getPackagePartsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.PackageTable}
   */
  public static final class PackageTable extends
      org.jetbrains.kotlin.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.serialization.jvm.PackageTable)
      PackageTableOrBuilder {
    // Use PackageTable.newBuilder() to construct.
    private PackageTable(org.jetbrains.kotlin.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PackageTable(boolean noInit) { this.unknownFields = org.jetbrains.kotlin.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PackageTable defaultInstance;
    public static PackageTable getDefaultInstance() {
      return defaultInstance;
    }

    public PackageTable getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final org.jetbrains.kotlin.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final org.jetbrains.kotlin.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PackageTable(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      org.jetbrains.kotlin.protobuf.UnknownFieldSet.Builder unknownFields =
          org.jetbrains.kotlin.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                packageParts_ = new java.util.ArrayList<org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts>();
                mutable_bitField0_ |= 0x00000001;
              }
              packageParts_.add(input.readMessage(org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          packageParts_ = java.util.Collections.unmodifiableList(packageParts_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.internal_static_org_jetbrains_kotlin_serialization_jvm_PackageTable_descriptor;
    }

    protected org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.internal_static_org_jetbrains_kotlin_serialization_jvm_PackageTable_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable.Builder.class);
    }

    public static org.jetbrains.kotlin.protobuf.Parser<PackageTable> PARSER =
        new org.jetbrains.kotlin.protobuf.AbstractParser<PackageTable>() {
      public PackageTable parsePartialFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
        return new PackageTable(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public org.jetbrains.kotlin.protobuf.Parser<PackageTable> getParserForType() {
      return PARSER;
    }

    public static final int PACKAGE_PARTS_FIELD_NUMBER = 1;
    private java.util.List<org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts> packageParts_;
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
     */
    public java.util.List<org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts> getPackagePartsList() {
      return packageParts_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
     */
    public java.util.List<? extends org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackagePartsOrBuilder> 
        getPackagePartsOrBuilderList() {
      return packageParts_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
     */
    public int getPackagePartsCount() {
      return packageParts_.size();
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts getPackageParts(int index) {
      return packageParts_.get(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackagePartsOrBuilder getPackagePartsOrBuilder(
        int index) {
      return packageParts_.get(index);
    }

    private void initFields() {
      packageParts_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getPackagePartsCount(); i++) {
        if (!getPackageParts(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(org.jetbrains.kotlin.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < packageParts_.size(); i++) {
        output.writeMessage(1, packageParts_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < packageParts_.size(); i++) {
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeMessageSize(1, packageParts_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable parseFrom(byte[] data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable parseFrom(
        byte[] data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable parseFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable parseDelimitedFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        org.jetbrains.kotlin.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.PackageTable}
     */
    public static final class Builder extends
        org.jetbrains.kotlin.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.serialization.jvm.PackageTable)
        org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTableOrBuilder {
      public static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.internal_static_org_jetbrains_kotlin_serialization_jvm_PackageTable_descriptor;
      }

      protected org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.internal_static_org_jetbrains_kotlin_serialization_jvm_PackageTable_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable.Builder.class);
      }

      // Construct using org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          org.jetbrains.kotlin.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (org.jetbrains.kotlin.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPackagePartsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (packagePartsBuilder_ == null) {
          packageParts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          packagePartsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.internal_static_org_jetbrains_kotlin_serialization_jvm_PackageTable_descriptor;
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable getDefaultInstanceForType() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable.getDefaultInstance();
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable build() {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable buildPartial() {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable result = new org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable(this);
        int from_bitField0_ = bitField0_;
        if (packagePartsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            packageParts_ = java.util.Collections.unmodifiableList(packageParts_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.packageParts_ = packageParts_;
        } else {
          result.packageParts_ = packagePartsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(org.jetbrains.kotlin.protobuf.Message other) {
        if (other instanceof org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable) {
          return mergeFrom((org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable other) {
        if (other == org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable.getDefaultInstance()) return this;
        if (packagePartsBuilder_ == null) {
          if (!other.packageParts_.isEmpty()) {
            if (packageParts_.isEmpty()) {
              packageParts_ = other.packageParts_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePackagePartsIsMutable();
              packageParts_.addAll(other.packageParts_);
            }
            onChanged();
          }
        } else {
          if (!other.packageParts_.isEmpty()) {
            if (packagePartsBuilder_.isEmpty()) {
              packagePartsBuilder_.dispose();
              packagePartsBuilder_ = null;
              packageParts_ = other.packageParts_;
              bitField0_ = (bitField0_ & ~0x00000001);
              packagePartsBuilder_ = 
                org.jetbrains.kotlin.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPackagePartsFieldBuilder() : null;
            } else {
              packagePartsBuilder_.addAllMessages(other.packageParts_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getPackagePartsCount(); i++) {
          if (!getPackageParts(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageTable) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts> packageParts_ =
        java.util.Collections.emptyList();
      private void ensurePackagePartsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          packageParts_ = new java.util.ArrayList<org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts>(packageParts_);
          bitField0_ |= 0x00000001;
         }
      }

      private org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts, org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackagePartsOrBuilder> packagePartsBuilder_;

      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
       */
      public java.util.List<org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts> getPackagePartsList() {
        if (packagePartsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(packageParts_);
        } else {
          return packagePartsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
       */
      public int getPackagePartsCount() {
        if (packagePartsBuilder_ == null) {
          return packageParts_.size();
        } else {
          return packagePartsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts getPackageParts(int index) {
        if (packagePartsBuilder_ == null) {
          return packageParts_.get(index);
        } else {
          return packagePartsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
       */
      public Builder setPackageParts(
          int index, org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts value) {
        if (packagePartsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePackagePartsIsMutable();
          packageParts_.set(index, value);
          onChanged();
        } else {
          packagePartsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
       */
      public Builder setPackageParts(
          int index, org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts.Builder builderForValue) {
        if (packagePartsBuilder_ == null) {
          ensurePackagePartsIsMutable();
          packageParts_.set(index, builderForValue.build());
          onChanged();
        } else {
          packagePartsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
       */
      public Builder addPackageParts(org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts value) {
        if (packagePartsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePackagePartsIsMutable();
          packageParts_.add(value);
          onChanged();
        } else {
          packagePartsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
       */
      public Builder addPackageParts(
          int index, org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts value) {
        if (packagePartsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePackagePartsIsMutable();
          packageParts_.add(index, value);
          onChanged();
        } else {
          packagePartsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
       */
      public Builder addPackageParts(
          org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts.Builder builderForValue) {
        if (packagePartsBuilder_ == null) {
          ensurePackagePartsIsMutable();
          packageParts_.add(builderForValue.build());
          onChanged();
        } else {
          packagePartsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
       */
      public Builder addPackageParts(
          int index, org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts.Builder builderForValue) {
        if (packagePartsBuilder_ == null) {
          ensurePackagePartsIsMutable();
          packageParts_.add(index, builderForValue.build());
          onChanged();
        } else {
          packagePartsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
       */
      public Builder addAllPackageParts(
          java.lang.Iterable<? extends org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts> values) {
        if (packagePartsBuilder_ == null) {
          ensurePackagePartsIsMutable();
          org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
              values, packageParts_);
          onChanged();
        } else {
          packagePartsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
       */
      public Builder clearPackageParts() {
        if (packagePartsBuilder_ == null) {
          packageParts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          packagePartsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
       */
      public Builder removePackageParts(int index) {
        if (packagePartsBuilder_ == null) {
          ensurePackagePartsIsMutable();
          packageParts_.remove(index);
          onChanged();
        } else {
          packagePartsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts.Builder getPackagePartsBuilder(
          int index) {
        return getPackagePartsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackagePartsOrBuilder getPackagePartsOrBuilder(
          int index) {
        if (packagePartsBuilder_ == null) {
          return packageParts_.get(index);  } else {
          return packagePartsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
       */
      public java.util.List<? extends org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackagePartsOrBuilder> 
           getPackagePartsOrBuilderList() {
        if (packagePartsBuilder_ != null) {
          return packagePartsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(packageParts_);
        }
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts.Builder addPackagePartsBuilder() {
        return getPackagePartsFieldBuilder().addBuilder(
            org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts.getDefaultInstance());
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts.Builder addPackagePartsBuilder(
          int index) {
        return getPackagePartsFieldBuilder().addBuilder(
            index, org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts.getDefaultInstance());
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.PackageParts package_parts = 1;</code>
       */
      public java.util.List<org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts.Builder> 
           getPackagePartsBuilderList() {
        return getPackagePartsFieldBuilder().getBuilderList();
      }
      private org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts, org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackagePartsOrBuilder> 
          getPackagePartsFieldBuilder() {
        if (packagePartsBuilder_ == null) {
          packagePartsBuilder_ = new org.jetbrains.kotlin.protobuf.RepeatedFieldBuilder<
              org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts, org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackagePartsOrBuilder>(
                  packageParts_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          packageParts_ = null;
        }
        return packagePartsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.serialization.jvm.PackageTable)
    }

    static {
      defaultInstance = new PackageTable(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.serialization.jvm.PackageTable)
  }

  public interface PackagePartsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.serialization.jvm.PackageParts)
      org.jetbrains.kotlin.protobuf.MessageOrBuilder {

    /**
     * <code>required string package_fq_name = 1;</code>
     */
    boolean hasPackageFqName();
    /**
     * <code>required string package_fq_name = 1;</code>
     */
    java.lang.String getPackageFqName();
    /**
     * <code>required string package_fq_name = 1;</code>
     */
    org.jetbrains.kotlin.protobuf.ByteString
        getPackageFqNameBytes();

    /**
     * <code>repeated string class_name = 2;</code>
     */
    org.jetbrains.kotlin.protobuf.ProtocolStringList
        getClassNameList();
    /**
     * <code>repeated string class_name = 2;</code>
     */
    int getClassNameCount();
    /**
     * <code>repeated string class_name = 2;</code>
     */
    java.lang.String getClassName(int index);
    /**
     * <code>repeated string class_name = 2;</code>
     */
    org.jetbrains.kotlin.protobuf.ByteString
        getClassNameBytes(int index);
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.PackageParts}
   */
  public static final class PackageParts extends
      org.jetbrains.kotlin.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.serialization.jvm.PackageParts)
      PackagePartsOrBuilder {
    // Use PackageParts.newBuilder() to construct.
    private PackageParts(org.jetbrains.kotlin.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PackageParts(boolean noInit) { this.unknownFields = org.jetbrains.kotlin.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PackageParts defaultInstance;
    public static PackageParts getDefaultInstance() {
      return defaultInstance;
    }

    public PackageParts getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final org.jetbrains.kotlin.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final org.jetbrains.kotlin.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PackageParts(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      org.jetbrains.kotlin.protobuf.UnknownFieldSet.Builder unknownFields =
          org.jetbrains.kotlin.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.jetbrains.kotlin.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              packageFqName_ = bs;
              break;
            }
            case 18: {
              org.jetbrains.kotlin.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                className_ = new org.jetbrains.kotlin.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              className_.add(bs);
              break;
            }
          }
        }
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          className_ = className_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.internal_static_org_jetbrains_kotlin_serialization_jvm_PackageParts_descriptor;
    }

    protected org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.internal_static_org_jetbrains_kotlin_serialization_jvm_PackageParts_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts.Builder.class);
    }

    public static org.jetbrains.kotlin.protobuf.Parser<PackageParts> PARSER =
        new org.jetbrains.kotlin.protobuf.AbstractParser<PackageParts>() {
      public PackageParts parsePartialFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
        return new PackageParts(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public org.jetbrains.kotlin.protobuf.Parser<PackageParts> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PACKAGE_FQ_NAME_FIELD_NUMBER = 1;
    private java.lang.Object packageFqName_;
    /**
     * <code>required string package_fq_name = 1;</code>
     */
    public boolean hasPackageFqName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string package_fq_name = 1;</code>
     */
    public java.lang.String getPackageFqName() {
      java.lang.Object ref = packageFqName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        org.jetbrains.kotlin.protobuf.ByteString bs = 
            (org.jetbrains.kotlin.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          packageFqName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string package_fq_name = 1;</code>
     */
    public org.jetbrains.kotlin.protobuf.ByteString
        getPackageFqNameBytes() {
      java.lang.Object ref = packageFqName_;
      if (ref instanceof java.lang.String) {
        org.jetbrains.kotlin.protobuf.ByteString b = 
            org.jetbrains.kotlin.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        packageFqName_ = b;
        return b;
      } else {
        return (org.jetbrains.kotlin.protobuf.ByteString) ref;
      }
    }

    public static final int CLASS_NAME_FIELD_NUMBER = 2;
    private org.jetbrains.kotlin.protobuf.LazyStringList className_;
    /**
     * <code>repeated string class_name = 2;</code>
     */
    public org.jetbrains.kotlin.protobuf.ProtocolStringList
        getClassNameList() {
      return className_;
    }
    /**
     * <code>repeated string class_name = 2;</code>
     */
    public int getClassNameCount() {
      return className_.size();
    }
    /**
     * <code>repeated string class_name = 2;</code>
     */
    public java.lang.String getClassName(int index) {
      return className_.get(index);
    }
    /**
     * <code>repeated string class_name = 2;</code>
     */
    public org.jetbrains.kotlin.protobuf.ByteString
        getClassNameBytes(int index) {
      return className_.getByteString(index);
    }

    private void initFields() {
      packageFqName_ = "";
      className_ = org.jetbrains.kotlin.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPackageFqName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(org.jetbrains.kotlin.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPackageFqNameBytes());
      }
      for (int i = 0; i < className_.size(); i++) {
        output.writeBytes(2, className_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += org.jetbrains.kotlin.protobuf.CodedOutputStream
          .computeBytesSize(1, getPackageFqNameBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < className_.size(); i++) {
          dataSize += org.jetbrains.kotlin.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(className_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getClassNameList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts parseFrom(
        org.jetbrains.kotlin.protobuf.ByteString data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts parseFrom(byte[] data)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts parseFrom(
        byte[] data,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts parseFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts parseDelimitedFrom(
        java.io.InputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts parseFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        org.jetbrains.kotlin.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.PackageParts}
     */
    public static final class Builder extends
        org.jetbrains.kotlin.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.serialization.jvm.PackageParts)
        org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackagePartsOrBuilder {
      public static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.internal_static_org_jetbrains_kotlin_serialization_jvm_PackageParts_descriptor;
      }

      protected org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.internal_static_org_jetbrains_kotlin_serialization_jvm_PackageParts_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts.Builder.class);
      }

      // Construct using org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          org.jetbrains.kotlin.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (org.jetbrains.kotlin.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        packageFqName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        className_ = org.jetbrains.kotlin.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.internal_static_org_jetbrains_kotlin_serialization_jvm_PackageParts_descriptor;
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts getDefaultInstanceForType() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts.getDefaultInstance();
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts build() {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts buildPartial() {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts result = new org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packageFqName_ = packageFqName_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          className_ = className_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.className_ = className_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(org.jetbrains.kotlin.protobuf.Message other) {
        if (other instanceof org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts) {
          return mergeFrom((org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts other) {
        if (other == org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts.getDefaultInstance()) return this;
        if (other.hasPackageFqName()) {
          bitField0_ |= 0x00000001;
          packageFqName_ = other.packageFqName_;
          onChanged();
        }
        if (!other.className_.isEmpty()) {
          if (className_.isEmpty()) {
            className_ = other.className_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureClassNameIsMutable();
            className_.addAll(other.className_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPackageFqName()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          org.jetbrains.kotlin.protobuf.CodedInputStream input,
          org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jetbrains.kotlin.serialization.jvm.DebugJvmPackageTable.PackageParts) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object packageFqName_ = "";
      /**
       * <code>required string package_fq_name = 1;</code>
       */
      public boolean hasPackageFqName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string package_fq_name = 1;</code>
       */
      public java.lang.String getPackageFqName() {
        java.lang.Object ref = packageFqName_;
        if (!(ref instanceof java.lang.String)) {
          org.jetbrains.kotlin.protobuf.ByteString bs =
              (org.jetbrains.kotlin.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            packageFqName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string package_fq_name = 1;</code>
       */
      public org.jetbrains.kotlin.protobuf.ByteString
          getPackageFqNameBytes() {
        java.lang.Object ref = packageFqName_;
        if (ref instanceof String) {
          org.jetbrains.kotlin.protobuf.ByteString b = 
              org.jetbrains.kotlin.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          packageFqName_ = b;
          return b;
        } else {
          return (org.jetbrains.kotlin.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string package_fq_name = 1;</code>
       */
      public Builder setPackageFqName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        packageFqName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string package_fq_name = 1;</code>
       */
      public Builder clearPackageFqName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packageFqName_ = getDefaultInstance().getPackageFqName();
        onChanged();
        return this;
      }
      /**
       * <code>required string package_fq_name = 1;</code>
       */
      public Builder setPackageFqNameBytes(
          org.jetbrains.kotlin.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        packageFqName_ = value;
        onChanged();
        return this;
      }

      private org.jetbrains.kotlin.protobuf.LazyStringList className_ = org.jetbrains.kotlin.protobuf.LazyStringArrayList.EMPTY;
      private void ensureClassNameIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          className_ = new org.jetbrains.kotlin.protobuf.LazyStringArrayList(className_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string class_name = 2;</code>
       */
      public org.jetbrains.kotlin.protobuf.ProtocolStringList
          getClassNameList() {
        return className_.getUnmodifiableView();
      }
      /**
       * <code>repeated string class_name = 2;</code>
       */
      public int getClassNameCount() {
        return className_.size();
      }
      /**
       * <code>repeated string class_name = 2;</code>
       */
      public java.lang.String getClassName(int index) {
        return className_.get(index);
      }
      /**
       * <code>repeated string class_name = 2;</code>
       */
      public org.jetbrains.kotlin.protobuf.ByteString
          getClassNameBytes(int index) {
        return className_.getByteString(index);
      }
      /**
       * <code>repeated string class_name = 2;</code>
       */
      public Builder setClassName(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureClassNameIsMutable();
        className_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string class_name = 2;</code>
       */
      public Builder addClassName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureClassNameIsMutable();
        className_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string class_name = 2;</code>
       */
      public Builder addAllClassName(
          java.lang.Iterable<java.lang.String> values) {
        ensureClassNameIsMutable();
        org.jetbrains.kotlin.protobuf.AbstractMessageLite.Builder.addAll(
            values, className_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string class_name = 2;</code>
       */
      public Builder clearClassName() {
        className_ = org.jetbrains.kotlin.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string class_name = 2;</code>
       */
      public Builder addClassNameBytes(
          org.jetbrains.kotlin.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureClassNameIsMutable();
        className_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.serialization.jvm.PackageParts)
    }

    static {
      defaultInstance = new PackageParts(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.serialization.jvm.PackageParts)
  }

  private static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
    internal_static_org_jetbrains_kotlin_serialization_jvm_PackageTable_descriptor;
  private static
    org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_jetbrains_kotlin_serialization_jvm_PackageTable_fieldAccessorTable;
  private static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
    internal_static_org_jetbrains_kotlin_serialization_jvm_PackageParts_descriptor;
  private static
    org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_jetbrains_kotlin_serialization_jvm_PackageParts_fieldAccessorTable;

  public static org.jetbrains.kotlin.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static org.jetbrains.kotlin.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n=core/descriptor.loader.java/src/jvm_pa" +
      "ckage_table.debug.proto\022&org.jetbrains.k" +
      "otlin.serialization.jvm\"[\n\014PackageTable\022" +
      "K\n\rpackage_parts\030\001 \003(\01324.org.jetbrains.k" +
      "otlin.serialization.jvm.PackageParts\";\n\014" +
      "PackageParts\022\027\n\017package_fq_name\030\001 \002(\t\022\022\n" +
      "\nclass_name\030\002 \003(\tB\026B\024DebugJvmPackageTabl" +
      "e"
    };
    org.jetbrains.kotlin.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new org.jetbrains.kotlin.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public org.jetbrains.kotlin.protobuf.ExtensionRegistry assignDescriptors(
              org.jetbrains.kotlin.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    org.jetbrains.kotlin.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new org.jetbrains.kotlin.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_org_jetbrains_kotlin_serialization_jvm_PackageTable_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_jetbrains_kotlin_serialization_jvm_PackageTable_fieldAccessorTable = new
      org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_jetbrains_kotlin_serialization_jvm_PackageTable_descriptor,
        new java.lang.String[] { "PackageParts", });
    internal_static_org_jetbrains_kotlin_serialization_jvm_PackageParts_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_jetbrains_kotlin_serialization_jvm_PackageParts_fieldAccessorTable = new
      org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_jetbrains_kotlin_serialization_jvm_PackageParts_descriptor,
        new java.lang.String[] { "PackageFqName", "ClassName", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}