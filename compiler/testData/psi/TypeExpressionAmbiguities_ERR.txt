KtFile: TypeExpressionAmbiguities_ERR.kt
  PACKAGE_DIRECTIVE
    <empty list>
  IMPORT_LIST
    <empty list>
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('foo')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              NULLABLE_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('Int')
                PsiElement(QUEST)('?')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      BINARY_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('fooo')
        OPERATION_REFERENCE
          PsiElement(LT)('<')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('Double')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(QUEST)('?')
        PsiElement(IDENTIFIER)('addddd')
        PsiElement(GT)('>')
        PsiElement(LPAR)('(')
        PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('dd')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('Triple')
                TYPE_ARGUMENT_LIST
                  PsiElement(LT)('<')
                  TYPE_PROJECTION
                    TYPE_REFERENCE
                      USER_TYPE
                        REFERENCE_EXPRESSION
                          PsiElement(IDENTIFIER)('Int')
                  PsiElement(COMMA)(',')
                  PsiWhiteSpace(' ')
                  TYPE_PROJECTION
                    TYPE_REFERENCE
                      USER_TYPE
                        REFERENCE_EXPRESSION
                          PsiElement(IDENTIFIER)('Int')
                  PsiElement(COMMA)(',')
                  PsiWhiteSpace(' ')
                  TYPE_PROJECTION
                    TYPE_REFERENCE
                      USER_TYPE
                        REFERENCE_EXPRESSION
                          PsiElement(IDENTIFIER)('Int')
                  PsiElement(GT)('>')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            IF
              PsiElement(if)('if')
              PsiWhiteSpace(' ')
              PsiElement(LPAR)('(')
              CONDITION
                BOOLEAN_CONSTANT
                  PsiElement(true)('true')
              PsiElement(RPAR)(')')
              PsiWhiteSpace(' ')
              THEN
                CALL_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('Triple')
                  VALUE_ARGUMENT_LIST
                    PsiElement(LPAR)('(')
                    VALUE_ARGUMENT
                      INTEGER_CONSTANT
                        PsiElement(INTEGER_LITERAL)('1')
                    PsiElement(COMMA)(',')
                    PsiWhiteSpace(' ')
                    VALUE_ARGUMENT
                      INTEGER_CONSTANT
                        PsiElement(INTEGER_LITERAL)('1')
                    PsiElement(COMMA)(',')
                    PsiWhiteSpace(' ')
                    VALUE_ARGUMENT
                      INTEGER_CONSTANT
                        PsiElement(INTEGER_LITERAL)('1')
                    PsiElement(RPAR)(')')
              PsiWhiteSpace(' ')
              PsiElement(else)('else')
              PsiWhiteSpace(' ')
              ELSE
                CALL_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('Triple')
                  VALUE_ARGUMENT_LIST
                    PsiElement(LPAR)('(')
                    VALUE_ARGUMENT
                      INTEGER_CONSTANT
                        PsiElement(INTEGER_LITERAL)('2')
                    PsiElement(COMMA)(',')
                    PsiWhiteSpace(' ')
                    VALUE_ARGUMENT
                      INTEGER_CONSTANT
                        PsiElement(INTEGER_LITERAL)('2')
                    PsiElement(COMMA)(',')
                    PsiWhiteSpace(' ')
                    VALUE_ARGUMENT
                      INTEGER_CONSTANT
                        PsiElement(INTEGER_LITERAL)('2')
                    PsiElement(RPAR)(')')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('foo')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            CALL_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('bar')
              TYPE_ARGUMENT_LIST
                PsiElement(LT)('<')
                TYPE_PROJECTION
                  TYPE_REFERENCE
                    USER_TYPE
                      REFERENCE_EXPRESSION
                        PsiElement(IDENTIFIER)('a')
                PsiElement(COMMA)(',')
                PsiWhiteSpace(' ')
                TYPE_PROJECTION
                  TYPE_REFERENCE
                    USER_TYPE
                      REFERENCE_EXPRESSION
                        PsiElement(IDENTIFIER)('b')
                PsiElement(COMMA)(',')
                PsiWhiteSpace(' ')
                TYPE_PROJECTION
                  TYPE_REFERENCE
                    USER_TYPE
                      REFERENCE_EXPRESSION
                        PsiElement(IDENTIFIER)('c')
                PsiElement(GT)('>')
              VALUE_ARGUMENT_LIST
                PsiElement(LPAR)('(')
                VALUE_ARGUMENT
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('d')
                PsiElement(RPAR)(')')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('foo')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            BINARY_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('bar')
              OPERATION_REFERENCE
                PsiElement(LT)('<')
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('a')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          VALUE_ARGUMENT
            BINARY_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('b')
              OPERATION_REFERENCE
                PsiElement(PLUS)('+')
              INTEGER_CONSTANT
                PsiElement(INTEGER_LITERAL)('1')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          VALUE_ARGUMENT
            BINARY_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('c')
              OPERATION_REFERENCE
                PsiElement(GT)('>')
              PARENTHESIZED
                PsiElement(LPAR)('(')
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('d')
                PsiElement(RPAR)(')')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('foo')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            BINARY_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('bar')
              OPERATION_REFERENCE
                PsiElement(LT)('<')
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('a')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          VALUE_ARGUMENT
            CALL_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('f')
              VALUE_ARGUMENT_LIST
                PsiElement(LPAR)('(')
                PsiElement(RPAR)(')')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          VALUE_ARGUMENT
            BINARY_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('c')
              OPERATION_REFERENCE
                PsiElement(GT)('>')
              PARENTHESIZED
                PsiElement(LPAR)('(')
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('d')
                PsiElement(RPAR)(')')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('foo')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            BINARY_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('bar')
              OPERATION_REFERENCE
                PsiElement(LT)('<')
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('a')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          VALUE_ARGUMENT
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('a')
          PsiWhiteSpace(' ')
          PsiErrorElement:Unexpected type specification
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            PsiElement(IDENTIFIER)('b')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          VALUE_ARGUMENT
            BINARY_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('c')
              OPERATION_REFERENCE
                PsiElement(GT)('>')
              PARENTHESIZED
                PsiElement(LPAR)('(')
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('d')
                PsiElement(RPAR)(')')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      REFERENCE_EXPRESSION
        PsiElement(IDENTIFIER)('a')
      PsiWhiteSpace(' ')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('b')
        PsiWhiteSpace(' ')
        PsiElement(LT)('<')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('c')
      PsiWhiteSpace('\n    ')
      BINARY_WITH_TYPE
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('d')
        PsiWhiteSpace(' ')
        OPERATION_REFERENCE
          PsiElement(as)('as')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('Foo')
            PsiWhiteSpace(' ')
            TYPE_ARGUMENT_LIST
              PsiElement(LT)('<')
              PsiWhiteSpace(' ')
              TYPE_PROJECTION
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('bar')
              PsiErrorElement:Expecting a '>'
                <empty list>
      PsiWhiteSpace('\n    ')
      IS_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('x')
        PsiWhiteSpace(' ')
        OPERATION_REFERENCE
          PsiElement(is)('is')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('Foo')
            PsiWhiteSpace(' ')
            TYPE_ARGUMENT_LIST
              PsiElement(LT)('<')
              PsiWhiteSpace(' ')
              TYPE_PROJECTION
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('bar')
              PsiErrorElement:Expecting a '>'
                <empty list>
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')