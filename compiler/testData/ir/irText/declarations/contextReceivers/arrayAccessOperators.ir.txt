FILE fqName:<root> fileName:/arrayAccessOperators.kt
  CLASS CLASS name:MyContainer modality:FINAL visibility:public [data] superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.MyContainer
    PROPERTY name:s visibility:public modality:FINAL [var]
      FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.String visibility:private
        EXPRESSION_BODY
          GET_VAR 's: kotlin.String declared in <root>.MyContainer.<init>' type=kotlin.String origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-s> visibility:public modality:FINAL returnType:kotlin.String
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyContainer
        correspondingProperty: PROPERTY name:s visibility:public modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-s> (): kotlin.String declared in <root>.MyContainer'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.String visibility:private' type=kotlin.String origin=null
              receiver: GET_VAR '<this>: <root>.MyContainer declared in <root>.MyContainer.<get-s>' type=<root>.MyContainer origin=null
      FUN DEFAULT_PROPERTY_ACCESSOR name:<set-s> visibility:public modality:FINAL returnType:kotlin.Unit
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyContainer
        VALUE_PARAMETER kind:Regular name:<set-?> index:1 type:kotlin.String
        correspondingProperty: PROPERTY name:s visibility:public modality:FINAL [var]
        BLOCK_BODY
          SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.String visibility:private' type=kotlin.Unit origin=null
            receiver: GET_VAR '<this>: <root>.MyContainer declared in <root>.MyContainer.<set-s>' type=<root>.MyContainer origin=null
            value: GET_VAR '<set-?>: kotlin.String declared in <root>.MyContainer.<set-s>' type=kotlin.String origin=null
    CONSTRUCTOR visibility:public returnType:<root>.MyContainer [primary]
      VALUE_PARAMETER kind:Regular name:s index:0 type:kotlin.String
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:MyContainer modality:FINAL visibility:public [data] superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN GENERATED_DATA_CLASS_MEMBER name:component1 visibility:public modality:FINAL returnType:kotlin.String [operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyContainer
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun component1 (): kotlin.String declared in <root>.MyContainer'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.String visibility:private' type=kotlin.String origin=null
            receiver: GET_VAR '<this>: <root>.MyContainer declared in <root>.MyContainer.component1' type=<root>.MyContainer origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:copy visibility:public modality:FINAL returnType:<root>.MyContainer
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyContainer
      VALUE_PARAMETER kind:Regular name:s index:1 type:kotlin.String
        EXPRESSION_BODY
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.String visibility:private' type=kotlin.String origin=null
            receiver: GET_VAR '<this>: <root>.MyContainer declared in <root>.MyContainer.copy' type=<root>.MyContainer origin=null
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun copy (s: kotlin.String): <root>.MyContainer declared in <root>.MyContainer'
          CONSTRUCTOR_CALL 'public constructor <init> (s: kotlin.String) declared in <root>.MyContainer' type=<root>.MyContainer origin=null
            ARG s: GET_VAR 's: kotlin.String declared in <root>.MyContainer.copy' type=kotlin.String origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyContainer
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      BLOCK_BODY
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun EQEQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQEQ
              ARG arg0: GET_VAR '<this>: <root>.MyContainer declared in <root>.MyContainer.equals' type=<root>.MyContainer origin=null
              ARG arg1: GET_VAR 'other: kotlin.Any? declared in <root>.MyContainer.equals' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.MyContainer'
              CONST Boolean type=kotlin.Boolean value=true
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: TYPE_OP type=kotlin.Boolean origin=NOT_INSTANCEOF typeOperand=<root>.MyContainer
              GET_VAR 'other: kotlin.Any? declared in <root>.MyContainer.equals' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.MyContainer'
              CONST Boolean type=kotlin.Boolean value=false
        VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:<root>.MyContainer [val]
          TYPE_OP type=<root>.MyContainer origin=CAST typeOperand=<root>.MyContainer
            GET_VAR 'other: kotlin.Any? declared in <root>.MyContainer.equals' type=kotlin.Any? origin=null
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
              ARG <this>: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                ARG arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.String visibility:private' type=kotlin.String origin=null
                  receiver: GET_VAR '<this>: <root>.MyContainer declared in <root>.MyContainer.equals' type=<root>.MyContainer origin=null
                ARG arg1: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.String visibility:private' type=kotlin.String origin=null
                  receiver: GET_VAR 'val tmp_0: <root>.MyContainer declared in <root>.MyContainer.equals' type=<root>.MyContainer origin=null
            then: RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.MyContainer'
              CONST Boolean type=kotlin.Boolean value=false
        RETURN type=kotlin.Nothing from='public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.MyContainer'
          CONST Boolean type=kotlin.Boolean value=true
    FUN GENERATED_DATA_CLASS_MEMBER name:hashCode visibility:public modality:OPEN returnType:kotlin.Int
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyContainer
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun hashCode (): kotlin.Int declared in <root>.MyContainer'
          CALL 'public open fun hashCode (): kotlin.Int declared in kotlin.String' type=kotlin.Int origin=null
            ARG <this>: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.String visibility:private' type=kotlin.String origin=null
              receiver: GET_VAR '<this>: <root>.MyContainer declared in <root>.MyContainer.hashCode' type=<root>.MyContainer origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:toString visibility:public modality:OPEN returnType:kotlin.String
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.MyContainer
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun toString (): kotlin.String declared in <root>.MyContainer'
          STRING_CONCATENATION type=kotlin.String
            CONST String type=kotlin.String value="MyContainer("
            CONST String type=kotlin.String value="s="
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:s type:kotlin.String visibility:private' type=kotlin.String origin=null
              receiver: GET_VAR '<this>: <root>.MyContainer declared in <root>.MyContainer.toString' type=<root>.MyContainer origin=null
            CONST String type=kotlin.String value=")"
  FUN name:box visibility:public modality:FINAL returnType:kotlin.String
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        CALL 'public final fun with <T, R> (receiver: T of kotlin.with, block: @[ExtensionFunctionType] kotlin.Function1<T of kotlin.with, R of kotlin.with>): R of kotlin.with declared in kotlin' type=kotlin.String origin=null
          TYPE_ARG T: kotlin.Int
          TYPE_ARG R: kotlin.String
          ARG receiver: CONST Int type=kotlin.Int value=42
          ARG block: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function1<kotlin.Int, kotlin.String> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.String
              VALUE_PARAMETER kind:ExtensionReceiver name:$this$with index:0 type:kotlin.Int
              BLOCK_BODY
                VAR name:myContainer type:<root>.MyContainer [val]
                  CONSTRUCTOR_CALL 'public constructor <init> (s: kotlin.String) declared in <root>.MyContainer' type=<root>.MyContainer origin=null
                    ARG s: CONST String type=kotlin.String value="fail"
                CALL 'public final fun set ($context_receiver_0: kotlin.Int, <this>: <root>.MyContainer, index: kotlin.Int, value: kotlin.String): kotlin.Unit declared in <root>' type=kotlin.Unit origin=EQ
                  ARG $context_receiver_0: GET_VAR '$this$with: kotlin.Int declared in <root>.box.<anonymous>' type=kotlin.Int origin=IMPLICIT_ARGUMENT
                  ARG <this>: GET_VAR 'val myContainer: <root>.MyContainer declared in <root>.box.<anonymous>' type=<root>.MyContainer origin=null
                  ARG index: CONST Int type=kotlin.Int value=0
                  ARG value: CONST String type=kotlin.String value="OK"
                RETURN type=kotlin.Nothing from='local final fun <anonymous> ($this$with: kotlin.Int): kotlin.String declared in <root>.box'
                  BLOCK type=kotlin.String origin=ELVIS
                    VAR IR_TEMPORARY_VARIABLE name:tmp_1 type:kotlin.String? [val]
                      CALL 'public final fun get ($context_receiver_0: kotlin.Int, <this>: <root>.MyContainer, index: kotlin.Int): kotlin.String? declared in <root>' type=kotlin.String? origin=GET_ARRAY_ELEMENT
                        ARG $context_receiver_0: GET_VAR '$this$with: kotlin.Int declared in <root>.box.<anonymous>' type=kotlin.Int origin=IMPLICIT_ARGUMENT
                        ARG <this>: GET_VAR 'val myContainer: <root>.MyContainer declared in <root>.box.<anonymous>' type=<root>.MyContainer origin=null
                        ARG index: CONST Int type=kotlin.Int value=0
                    WHEN type=kotlin.String origin=null
                      BRANCH
                        if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                          ARG arg0: GET_VAR 'val tmp_1: kotlin.String? declared in <root>.box.<anonymous>' type=kotlin.String? origin=null
                          ARG arg1: CONST Null type=kotlin.Nothing? value=null
                        then: CONST String type=kotlin.String value="fail"
                      BRANCH
                        if: CONST Boolean type=kotlin.Boolean value=true
                        then: GET_VAR 'val tmp_1: kotlin.String? declared in <root>.box.<anonymous>' type=kotlin.String? origin=null
  FUN name:get visibility:public modality:FINAL returnType:kotlin.String? [operator]
    VALUE_PARAMETER kind:Context name:$context_receiver_0 index:0 type:kotlin.Int
    VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:<root>.MyContainer
    VALUE_PARAMETER kind:Regular name:index index:2 type:kotlin.Int
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun get ($context_receiver_0: kotlin.Int, <this>: <root>.MyContainer, index: kotlin.Int): kotlin.String? declared in <root>'
        WHEN type=kotlin.String? origin=IF
          BRANCH
            if: WHEN type=kotlin.Boolean origin=ANDAND
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                  ARG arg0: GET_VAR 'index: kotlin.Int declared in <root>.get' type=kotlin.Int origin=null
                  ARG arg1: CONST Int type=kotlin.Int value=0
                then: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                  ARG arg0: GET_VAR '$context_receiver_0: kotlin.Int declared in <root>.get' type=kotlin.Int origin=null
                  ARG arg1: CONST Int type=kotlin.Int value=42
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: CONST Boolean type=kotlin.Boolean value=false
            then: CALL 'public final fun <get-s> (): kotlin.String declared in <root>.MyContainer' type=kotlin.String origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.MyContainer declared in <root>.get' type=<root>.MyContainer origin=IMPLICIT_ARGUMENT
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: CONST Null type=kotlin.Nothing? value=null
  FUN name:set visibility:public modality:FINAL returnType:kotlin.Unit [operator]
    VALUE_PARAMETER kind:Context name:$context_receiver_0 index:0 type:kotlin.Int
    VALUE_PARAMETER kind:ExtensionReceiver name:<this> index:1 type:<root>.MyContainer
    VALUE_PARAMETER kind:Regular name:index index:2 type:kotlin.Int
    VALUE_PARAMETER kind:Regular name:value index:3 type:kotlin.String
    BLOCK_BODY
      WHEN type=kotlin.Unit origin=IF
        BRANCH
          if: WHEN type=kotlin.Boolean origin=OROR
            BRANCH
              if: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
                ARG <this>: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                  ARG arg0: GET_VAR 'index: kotlin.Int declared in <root>.set' type=kotlin.Int origin=null
                  ARG arg1: CONST Int type=kotlin.Int value=0
              then: CONST Boolean type=kotlin.Boolean value=true
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
                ARG <this>: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                  ARG arg0: GET_VAR '$context_receiver_0: kotlin.Int declared in <root>.set' type=kotlin.Int origin=null
                  ARG arg1: CONST Int type=kotlin.Int value=42
          then: RETURN type=kotlin.Nothing from='public final fun set ($context_receiver_0: kotlin.Int, <this>: <root>.MyContainer, index: kotlin.Int, value: kotlin.String): kotlin.Unit declared in <root>'
            GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Unit modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
      CALL 'public final fun <set-s> (<set-?>: kotlin.String): kotlin.Unit declared in <root>.MyContainer' type=kotlin.Unit origin=EQ
        ARG <this>: GET_VAR '<this>: <root>.MyContainer declared in <root>.set' type=<root>.MyContainer origin=null
        ARG <set-?>: GET_VAR 'value: kotlin.String declared in <root>.set' type=kotlin.String origin=null
