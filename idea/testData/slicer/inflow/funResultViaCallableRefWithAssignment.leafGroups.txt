8 fun bar(<bold>n: Int</bold>) = n (in test())
10 	<bold>val x</bold> = foo(f) (in test())
10 		val x = <bold>foo(f)</bold> (in test())
3 			<bold>fun foo(f: (Int) -> Int): Int</bold> {
4 				return <bold>f(1)</bold> (in foo((Int) -> Int))
4 					[LAMBDA IN] return <bold>f</bold>(1) (in foo((Int) -> Int))
3 						[LAMBDA IN] fun foo(<bold>f: (Int) -> Int</bold>): Int { (in foo((Int) -> Int))
10 							[LAMBDA IN] val x = foo(<bold>f</bold>) (in test())
9 								[LAMBDA IN] <bold>val f</bold> = ::bar (in test())
9 									[LAMBDA IN] val f = <bold>::bar</bold> (in test())
8 										<bold>fun bar(n: Int)</bold> = n (in test())
8 											fun bar(n: Int) = <bold>n</bold> (in test())
8 												fun bar(<bold>n: Int</bold>) = n (in test())
