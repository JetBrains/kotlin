package

public final class A {
    public constructor A()
    @kotlin.Deprecated(level = DeprecationLevel.HIDDEN, message = "a") public final fun a(/*0*/ a: kotlin.Int): kotlin.Unit
    public final fun a(/*0*/ a: kotlin.Int): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public open class B {
    public constructor B()
    @kotlin.Deprecated(level = DeprecationLevel.HIDDEN, message = "a") public final fun a(/*0*/ a: kotlin.Int): kotlin.Unit
    public open fun a(/*0*/ a: kotlin.Int): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public open class C {
    public constructor C()
    @kotlin.Deprecated(level = DeprecationLevel.HIDDEN, message = "a") public open fun a(/*0*/ a: kotlin.Int): kotlin.Unit
    public final fun a(/*0*/ a: kotlin.Int): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

