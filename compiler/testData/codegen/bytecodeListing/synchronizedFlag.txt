@kotlin.Metadata
public final class C$Companion {
    // source: 'synchronizedFlag.kt'
    private method <init>(): void
    public synthetic method <init>(p0: kotlin.jvm.internal.DefaultConstructorMarker): void
    public synchronized final @kotlin.jvm.JvmStatic method testJvmStatic(): void
    public final inner class C$Companion
}

@kotlin.Metadata
final class C$lambda$1 {
    // source: 'synchronizedFlag.kt'
    enclosing method C.lambda()Lkotlin/jvm/functions/Function0;
    synthetic final field this$0: C
    inner (anonymous) class C$lambda$1
    method <init>(p0: C): void
    public synthetic bridge method invoke(): java.lang.Object
    public final method invoke(): void
}

@kotlin.Metadata
public final class C {
    // source: 'synchronizedFlag.kt'
    public final static @org.jetbrains.annotations.NotNull field Companion: C$Companion
    inner (anonymous) class C$lambda$1
    static method <clinit>(): void
    public method <init>(): void
    public synthetic final static method access$testAccessor(p0: C): void
    public final @org.jetbrains.annotations.NotNull method lambda(): kotlin.jvm.functions.Function0
    private synchronized final method testAccessor(): void
    public synchronized final static @kotlin.jvm.JvmStatic method testJvmStatic(): void
    public final inner class C$Companion
}

@kotlin.Metadata
public final class SynchronizedFlagKt {
    // source: 'synchronizedFlag.kt'
    public synthetic static method testJvmOverloads$default(p0: int, p1: int, p2: java.lang.Object): void
    public final static @kotlin.jvm.JvmOverloads method testJvmOverloads(): void
    public synchronized final static @kotlin.jvm.JvmOverloads method testJvmOverloads(p0: int): void
}
