@kotlin.Metadata
public final class InliningAndSMAPKt {
    // source: 'inliningAndSMAP.kt'
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
    public synthetic final static method inlineBar$atomicfu$ATOMIC_ARRAY$Any(p0: java.util.concurrent.atomic.AtomicReferenceArray, p1: int): java.lang.String
    public synthetic final static method inlineBar$atomicfu$ATOMIC_FIELD_UPDATER$Any(p0: java.util.concurrent.atomic.AtomicReferenceFieldUpdater, p1: java.lang.Object): java.lang.String
    public synthetic final static method inlineBar$atomicfu$BOXED_ATOMIC$Any(p0: java.util.concurrent.atomic.AtomicReference): java.lang.String
}

@kotlin.Metadata
public final class TestClass {
    // source: 'inliningAndSMAP.kt'
    private synthetic final static field atomicRefProp$volatile$FU: java.util.concurrent.atomic.AtomicReferenceFieldUpdater
    private synthetic volatile field atomicRefProp$volatile: java.lang.Object
    static method <clinit>(): void
    public method <init>(): void
    public final @org.jetbrains.annotations.NotNull method foo(): java.lang.String
    private synthetic final static method getAtomicRefProp$volatile$FU(): java.util.concurrent.atomic.AtomicReferenceFieldUpdater
    private synthetic final method getAtomicRefProp$volatile(): java.lang.Object
    private synthetic final method setAtomicRefProp$volatile(p0: java.lang.Object): void
}
