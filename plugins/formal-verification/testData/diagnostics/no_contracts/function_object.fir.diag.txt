/function_object.kt:(23,36): info: Generated Viper text for unit_function:
method global$fun_unit_function$fun_take$fun_take$$return$T_Unit$return$T_Unit(local$f: Ref)
  returns (ret$0: Ref)
  requires acc(local$f.special$function_object_call_counter, write)
  requires special$duplicable(local$f)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
{
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$f), dom$RuntimeType$functionType())
  ret$0 := dom$RuntimeType$unitValue()
  label label$ret$0
}

/function_object.kt:(91,111): info: Generated Viper text for function_object_call:
method global$fun_function_object_call$fun_take$fun_take$T_Boolean$T_Int$return$T_Int$return$T_Int(local$g: Ref)
  returns (ret$0: Ref)
  requires acc(local$g.special$function_object_call_counter, write)
  requires special$duplicable(local$g)
  ensures acc(local$g.special$function_object_call_counter, write)
  ensures old(local$g.special$function_object_call_counter) <=
    local$g.special$function_object_call_counter
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$intType())
{
  var anonymous$0: Ref
  var anonymous$1: Ref
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$g), dom$RuntimeType$functionType())
  special$invoke_function_object(local$g)
  anonymous$1 := anonymous$0
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(anonymous$1), dom$RuntimeType$intType())
  ret$0 := anonymous$1
  goto label$ret$0
  label label$ret$0
}

/function_object.kt:(174,201): info: Generated Viper text for function_object_nested_call:
method global$fun_function_object_nested_call$fun_take$fun_take$T_Int$return$T_Int$fun_take$T_Boolean$return$T_Int$return$T_Int(local$f: Ref,
  local$g: Ref)
  returns (ret$0: Ref)
  requires acc(local$f.special$function_object_call_counter, write)
  requires acc(local$g.special$function_object_call_counter, write)
  requires special$duplicable(local$f)
  requires special$duplicable(local$g)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures acc(local$g.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
  ensures old(local$g.special$function_object_call_counter) <=
    local$g.special$function_object_call_counter
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$intType())
{
  var anonymous$0: Ref
  var anonymous$1: Ref
  var anonymous$2: Ref
  var anonymous$3: Ref
  var anonymous$4: Ref
  var anonymous$5: Ref
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$f), dom$RuntimeType$functionType())
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$g), dom$RuntimeType$functionType())
  special$invoke_function_object(local$g)
  anonymous$1 := anonymous$0
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(anonymous$1), dom$RuntimeType$intType())
  special$invoke_function_object(local$f)
  anonymous$3 := anonymous$2
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(anonymous$3), dom$RuntimeType$intType())
  special$invoke_function_object(local$f)
  anonymous$5 := anonymous$4
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(anonymous$5), dom$RuntimeType$intType())
  ret$0 := anonymous$5
  goto label$ret$0
  label label$ret$0
}
