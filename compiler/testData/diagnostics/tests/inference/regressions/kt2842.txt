package

package c {
    internal fun foo(): kotlin.Boolean
    internal fun getNullableList(): kotlin.List<kotlin.String>?
    internal fun test(/*0*/ a: c.A<kotlin.Int>?): kotlin.Unit
    internal fun test(/*0*/ nullabilityInfoMap: kotlin.Map<kotlin.Int, kotlin.Any>?): kotlin.Unit
    internal fun </*0*/ R> c.A<R>.foo(): kotlin.Unit
    public fun </*0*/ K, /*1*/ V> kotlin.Map<K, V>.iterator(): kotlin.Iterator<kotlin.Map.Entry<K, V>>

    internal interface A</*0*/ T> {
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}
