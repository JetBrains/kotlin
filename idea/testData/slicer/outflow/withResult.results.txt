4 fun String.foo(<bold>p: String</bold>) { (in foo(String) on String)
5 	val v1 = with(<bold>p</bold>) { this } (in foo(String) on String)
LIB 		(INLINE CALL with) public inline fun <T, R> with(<bold>receiver: T</bold>, block: T.() -> R): R { (in with(T, T.() -> R))
LIB 			(INLINE CALL with) return <bold>receiver</bold>.block() (in with(T, T.() -> R))
LIB 				(INLINE CALL with) [LAMBDA RECEIVER] public inline fun <T, R> with(receiver: T, <bold>block: T.() -> R</bold>): R { (in with(T, T.() -> R))
5 					[LAMBDA RECEIVER] val v1 = with(p) <bold>{ this }</bold> (in foo(String) on String)
5 						val v1 = with(p) { <bold>this</bold> } (in foo(String) on String)
5 							val v1 = with(p) <bold>{ this }</bold> (in foo(String) on String)
5 								[LAMBDA CALLS] val v1 = with(p) <bold>{ this }</bold> (in foo(String) on String)
LIB 									(INLINE CALL with) [LAMBDA CALLS] public inline fun <T, R> with(receiver: T, <bold>block: T.() -> R</bold>): R { (in with(T, T.() -> R))
LIB 										(INLINE CALL with) return receiver.<bold>block()</bold> (in with(T, T.() -> R))
5 											val v1 = <bold>with(p) { this }</bold> (in foo(String) on String)
5 												<bold>val v1</bold> = with(p) { this } (in foo(String) on String)
7 	val v2 = with(<bold>p</bold>) { bar(this) } (in foo(String) on String)
LIB 		(INLINE CALL with) public inline fun <T, R> with(<bold>receiver: T</bold>, block: T.() -> R): R { (in with(T, T.() -> R))
LIB 			(INLINE CALL with) return <bold>receiver</bold>.block() (in with(T, T.() -> R))
LIB 				(INLINE CALL with) [LAMBDA RECEIVER] public inline fun <T, R> with(receiver: T, <bold>block: T.() -> R</bold>): R { (in with(T, T.() -> R))
7 					[LAMBDA RECEIVER] val v2 = with(p) <bold>{ bar(this) }</bold> (in foo(String) on String)
7 						val v2 = with(p) { bar(<bold>this</bold>) } (in foo(String) on String)
14 							fun bar(<bold>s: String</bold>) = s (in bar(String))
14 								fun bar(s: String) = <bold>s</bold> (in bar(String))
14 									<bold>fun bar(s: String)</bold> = s
7 										val v2 = with(p) { <bold>bar(this)</bold> } (in foo(String) on String)
7 											val v2 = with(p) <bold>{ bar(this) }</bold> (in foo(String) on String)
7 												[LAMBDA CALLS] val v2 = with(p) <bold>{ bar(this) }</bold> (in foo(String) on String)
LIB 													(INLINE CALL with) [LAMBDA CALLS] public inline fun <T, R> with(receiver: T, <bold>block: T.() -> R</bold>): R { (in with(T, T.() -> R))
LIB 														(INLINE CALL with) return receiver.<bold>block()</bold> (in with(T, T.() -> R))
7 															val v2 = <bold>with(p) { bar(this) }</bold> (in foo(String) on String)
7 																<bold>val v2</bold> = with(p) { bar(this) } (in foo(String) on String)
9 	val v3 = with(<bold>p</bold>) { this@foo } (in foo(String) on String)
LIB 		(INLINE CALL with) public inline fun <T, R> with(<bold>receiver: T</bold>, block: T.() -> R): R { (in with(T, T.() -> R))
LIB 			(INLINE CALL with) return <bold>receiver</bold>.block() (in with(T, T.() -> R))
LIB 				(INLINE CALL with) [LAMBDA RECEIVER] public inline fun <T, R> with(receiver: T, <bold>block: T.() -> R</bold>): R { (in with(T, T.() -> R))
9 					[LAMBDA RECEIVER] val v3 = with(p) <bold>{ this@foo }</bold> (in foo(String) on String)
11 	val v4 = with(<bold>p</bold>, ::zoo) (in foo(String) on String)
LIB 		(INLINE CALL with) public inline fun <T, R> with(<bold>receiver: T</bold>, block: T.() -> R): R { (in with(T, T.() -> R))
LIB 			(INLINE CALL with) return <bold>receiver</bold>.block() (in with(T, T.() -> R))
LIB 				(INLINE CALL with) [LAMBDA RECEIVER] public inline fun <T, R> with(receiver: T, <bold>block: T.() -> R</bold>): R { (in with(T, T.() -> R))
11 					[LAMBDA RECEIVER] val v4 = with(p, <bold>::zoo</bold>) (in foo(String) on String)
15 						fun zoo(<bold>s: String</bold>) = s (in zoo(String))
15 							fun zoo(s: String) = <bold>s</bold> (in zoo(String))
15 								<bold>fun zoo(s: String)</bold> = s
11 									[LAMBDA CALLS] val v4 = with(p, <bold>::zoo</bold>) (in foo(String) on String)
LIB 										(INLINE CALL with) [LAMBDA CALLS] public inline fun <T, R> with(receiver: T, <bold>block: T.() -> R</bold>): R { (in with(T, T.() -> R))
LIB 											(INLINE CALL with) return receiver.<bold>block()</bold> (in with(T, T.() -> R))
11 												val v4 = <bold>with(p, ::zoo)</bold> (in foo(String) on String)
11 													<bold>val v4</bold> = with(p, ::zoo) (in foo(String) on String)
