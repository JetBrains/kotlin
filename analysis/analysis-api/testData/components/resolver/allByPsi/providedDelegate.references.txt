KtNameReferenceExpression(25,31): 'myPack'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      package myPack

KtNameReferenceExpression(40,46): 'kotlin'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      package kotlin

KtNameReferenceExpression(47,54): 'reflect'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      package kotlin.reflect

KtNameReferenceExpression(55,64): 'KProperty'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin.reflect) interface KProperty<out V> : kotlin.reflect.KCallable<V>

KtNameReferenceExpression(72,78): 'kotlin'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      package kotlin

KtNameReferenceExpression(79,89): 'properties'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      package kotlin.properties

KtNameReferenceExpression(90,106): 'ReadOnlyProperty'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin.properties) fun interface ReadOnlyProperty<in T, out V>

KtNameReferenceExpression(172,175): 'Any'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin) open class Any

KtNameReferenceExpression(188,197): 'KProperty'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin.reflect) interface KProperty<out V> : kotlin.reflect.KCallable<V>

KtNameReferenceExpression(203,219): 'ReadOnlyProperty'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin.properties) fun interface ReadOnlyProperty<in T, out V>

KtNameReferenceExpression(220,223): 'Any'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin) open class Any

KtNameReferenceExpression(226,227): 'T'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: ResourceID) T

KtCallExpression(246,258): 'MyDelegate()'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(246,256): 'MyDelegate'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in myPack.MyDelegate) constructor <T>()

KtNameReferenceExpression(290,306): 'ReadOnlyProperty'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin.properties) fun interface ReadOnlyProperty<in T, out V>

KtNameReferenceExpression(307,310): 'Any'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin) open class Any

KtNameReferenceExpression(313,314): 'T'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: MyDelegate) T

KtNameReferenceExpression(353,356): 'Any'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin) open class Any

KtNameReferenceExpression(369,378): 'KProperty'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin.reflect) interface KProperty<out V> : kotlin.reflect.KCallable<V>

KtNameReferenceExpression(384,385): 'T'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: MyDelegate) T

KtOperationReferenceExpression(408,410): 'as'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(411,412): 'T'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: MyDelegate) T

KtPropertyDelegate(443,463): 'by ResourceID<Int>()'
  KtPropertyDelegationMethodsReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      0: (in kotlin.properties.ReadOnlyProperty) operator fun getValue(thisRef: T, property: kotlin.reflect.KProperty<*>): V
      1: (in myPack.ResourceID) operator fun provideDelegate(thisRef: kotlin.Any?, property: kotlin.reflect.KProperty<*>): kotlin.properties.ReadOnlyProperty<kotlin.Any?, T>

KtCallExpression(446,463): 'ResourceID<Int>()'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(446,456): 'ResourceID'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in myPack.ResourceID) constructor <T>()

KtNameReferenceExpression(457,460): 'Int'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin) class Intprivate constructor : kotlin.Number(), kotlin.Comparable<kotlin.Int>, java.io.Serializable