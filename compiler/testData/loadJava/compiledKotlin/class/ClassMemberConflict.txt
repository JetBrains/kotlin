package test

internal final class ConstructorTypeParamClassObjectConflict</*0*/ test> {
    /*primary*/ public constructor ConstructorTypeParamClassObjectConflict</*0*/ test>()
    internal final val some: kotlin.Int = 12
        internal final fun <get-some>(): kotlin.Int

    internal companion object Companion {
        /*primary*/ private constructor Companion()
        internal final val test: kotlin.Int = 12
            internal final fun <get-test>(): kotlin.Int
    }
}

internal final class ConstructorTypeParamClassObjectTypeConflict</*0*/ test> {
    /*primary*/ public constructor ConstructorTypeParamClassObjectTypeConflict</*0*/ test>()
    internal final val some: test?
        internal final fun <get-some>(): test?

    internal companion object Companion {
        /*primary*/ private constructor Companion()

        internal interface test {
        }
    }
}

internal final class TestClassObjectAndClassConflict {
    /*primary*/ public constructor TestClassObjectAndClassConflict()
    internal final val bla: kotlin.String = "More"
        internal final fun <get-bla>(): kotlin.String
    internal final val some: kotlin.String = "More"
        internal final fun <get-some>(): kotlin.String

    internal companion object Companion {
        /*primary*/ private constructor Companion()
        internal final val bla: kotlin.Int = 12
            internal final fun <get-bla>(): kotlin.Int
    }
}

internal final class TestConstructorParamClassObjectConflict {
    /*primary*/ public constructor TestConstructorParamClassObjectConflict(/*0*/ test: kotlin.String)
    internal final val some: kotlin.String
        internal final fun <get-some>(): kotlin.String

    internal companion object Companion {
        /*primary*/ private constructor Companion()
        internal final val test: kotlin.Int = 12
            internal final fun <get-test>(): kotlin.Int
    }
}

internal final class TestConstructorValClassObjectConflict {
    /*primary*/ public constructor TestConstructorValClassObjectConflict(/*0*/ test: kotlin.String)
    internal final val some: kotlin.String
        internal final fun <get-some>(): kotlin.String
    internal final val test: kotlin.String
        internal final fun <get-test>(): kotlin.String

    internal companion object Companion {
        /*primary*/ private constructor Companion()
        internal final val test: kotlin.Int = 12
            internal final fun <get-test>(): kotlin.Int
    }
}
