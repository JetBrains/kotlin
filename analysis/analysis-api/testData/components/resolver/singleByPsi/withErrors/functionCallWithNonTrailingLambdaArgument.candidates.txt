KtCallExpression(191,224): 'function(1, { s -> true }, "str")'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        1 -> (KaVariableSignature:
          name = a
          receiverType = null
          returnType = O1
          symbol = a: O1
          contextParameters = []
          callableId = null),
        { s -> true } -> (KaVariableSignature:
          name = b
          receiverType = null
          returnType = kotlin.Function1<kotlin.Int, kotlin.Boolean>
          symbol = b: kotlin.Function1<kotlin.Int, kotlin.Boolean>
          contextParameters = []
          callableId = null),
        "str" -> (KaVariableSignature:
          name = c
          receiverType = null
          returnType = T1
          symbol = c: T1
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /function(a: O1, b: kotlin.Function1<kotlin.Int, kotlin.Boolean>, c: T1): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = a
              receiverType = null
              returnType = O1
              symbol = a: O1
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = b
              receiverType = null
              returnType = kotlin.Function1<kotlin.Int, kotlin.Boolean>
              symbol = b: kotlin.Function1<kotlin.Int, kotlin.Boolean>
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = c
              receiverType = null
              returnType = T1
              symbol = c: T1
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /function
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        1 -> (KaVariableSignature:
          name = a
          receiverType = null
          returnType = O2
          symbol = a: O2
          contextParameters = []
          callableId = null),
        { s -> true } -> (KaVariableSignature:
          name = b
          receiverType = null
          returnType = kotlin.Function1<kotlin.String, kotlin.Boolean>
          symbol = b: kotlin.Function1<kotlin.String, kotlin.Boolean>
          contextParameters = []
          callableId = null),
        "str" -> (KaVariableSignature:
          name = c
          receiverType = null
          returnType = T2
          symbol = c: T2
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /function(a: O2, b: kotlin.Function1<kotlin.String, kotlin.Boolean>, c: T2): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = a
              receiverType = null
              returnType = O2
              symbol = a: O2
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = b
              receiverType = null
              returnType = kotlin.Function1<kotlin.String, kotlin.Boolean>
              symbol = b: kotlin.Function1<kotlin.String, kotlin.Boolean>
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = c
              receiverType = null
              returnType = T2
              symbol = c: T2
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /function
      typeArgumentsMapping = {}
    isInBestCandidates = true

  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        1 -> (KaVariableSignature:
          name = a
          receiverType = null
          returnType = O3
          symbol = a: O3
          contextParameters = []
          callableId = null),
        { s -> true } -> (KaVariableSignature:
          name = b
          receiverType = null
          returnType = kotlin.String
          symbol = b: kotlin.String
          contextParameters = []
          callableId = null),
        "str" -> (KaVariableSignature:
          name = c
          receiverType = null
          returnType = T3
          symbol = c: T3
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /function(a: O3, b: kotlin.String, c: T3): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = a
              receiverType = null
              returnType = O3
              symbol = a: O3
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = b
              receiverType = null
              returnType = kotlin.String
              symbol = b: kotlin.String
              contextParameters = []
              callableId = null,
            KaVariableSignature:
              name = c
              receiverType = null
              returnType = T3
              symbol = c: T3
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /function
      typeArgumentsMapping = {}
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'Function1<ERROR CLASS: Cannot infer type for parameter s, ERROR CLASS: Cannot infer type variable TypeVariable(_L)>', but 'String' was expected.>
    isInBestCandidates = false