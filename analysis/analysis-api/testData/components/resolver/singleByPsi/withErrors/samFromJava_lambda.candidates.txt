KtDotQualifiedExpression(156,183): 'handler.stash(lambda, list)'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        lambda -> (KaVariableSignature:
          name = actor
          receiverType = null
          returnType = test.pkg.MyInterface!
          symbol = actor: test.pkg.MyInterface!
          callableId = null),
        list -> (KaVariableSignature:
          name = actors
          receiverType = null
          returnType = ft<kotlin.collections.MutableList<test.pkg.MyInterface!>, kotlin.collections.List<test.pkg.MyInterface!>?>
          symbol = actors: ft<kotlin.collections.MutableList<test.pkg.MyInterface!>, kotlin.collections.List<test.pkg.MyInterface!>?>
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = handler
          isSafeNavigation = false
          type = test.pkg.MyHandler
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = test/pkg/MyHandler.stash(<dispatch receiver>: test.pkg.MyHandler, actor: test.pkg.MyInterface!, actors: ft<kotlin.collections.MutableList<test.pkg.MyInterface!>, kotlin.collections.List<test.pkg.MyInterface!>?>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = actor
              receiverType = null
              returnType = test.pkg.MyInterface!
              symbol = actor: test.pkg.MyInterface!
              callableId = null,
            KaVariableSignature:
              name = actors
              receiverType = null
              returnType = ft<kotlin.collections.MutableList<test.pkg.MyInterface!>, kotlin.collections.List<test.pkg.MyInterface!>?>
              symbol = actors: ft<kotlin.collections.MutableList<test.pkg.MyInterface!>, kotlin.collections.List<test.pkg.MyInterface!>?>
              callableId = null
          ]
          callableId = test/pkg/MyHandler.stash
      typeArgumentsMapping = {}
    isInBestCandidates = true