// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: compiler/ir/serialization.common/src/KotlinIr.proto

package org.jetbrains.kotlin.backend.common.serialization.proto;

public interface MemberAccessCommonOrBuilder extends
    // @@protoc_insertion_point(interface_extends:org.jetbrains.kotlin.backend.common.serialization.proto.MemberAccessCommon)
    org.jetbrains.kotlin.protobuf.MessageLiteOrBuilder {

  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression dispatch_receiver = 1;</code>
   */
  boolean hasDispatchReceiver();
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression dispatch_receiver = 1;</code>
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression getDispatchReceiver();

  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression extension_receiver = 2;</code>
   */
  boolean hasExtensionReceiver();
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression extension_receiver = 2;</code>
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression getExtensionReceiver();

  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.NullableIrExpression value_argument = 3;</code>
   */
  java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.NullableIrExpression> 
      getValueArgumentList();
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.NullableIrExpression value_argument = 3;</code>
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.NullableIrExpression getValueArgument(int index);
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.NullableIrExpression value_argument = 3;</code>
   */
  int getValueArgumentCount();

  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.TypeArguments type_arguments = 4;</code>
   */
  boolean hasTypeArguments();
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.TypeArguments type_arguments = 4;</code>
   */
  org.jetbrains.kotlin.backend.common.serialization.proto.TypeArguments getTypeArguments();
}