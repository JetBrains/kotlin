package

public typealias Test</*0*/ X, /*1*/ Y>  = NumCharSeq<X, Y>
public fun getM(/*0*/ t: Test<*, *> [= NumCharSeq<*, *>]): kotlin.CharSequence
public fun getN(/*0*/ t: Test<*, *> [= NumCharSeq<*, *>]): kotlin.Number

public final class NumCharSeq</*0*/ N : kotlin.Number, /*1*/ M : kotlin.CharSequence> {
    public constructor NumCharSeq</*0*/ N : kotlin.Number, /*1*/ M : kotlin.CharSequence>(/*0*/ n: N, /*1*/ m: M)
    public final val m: M
    public final val n: N
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
