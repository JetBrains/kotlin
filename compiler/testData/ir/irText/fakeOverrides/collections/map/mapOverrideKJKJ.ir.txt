FILE fqName:<root> fileName:/1.kt
  CLASS CLASS name:A modality:ABSTRACT visibility:public superTypes:[<root>.Java1]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.A
    CONSTRUCTOR visibility:public returnType:<root>.A [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.Java1'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:A modality:ABSTRACT visibility:public superTypes:[<root>.Java1]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:clear visibility:public modality:ABSTRACT returnType:kotlin.Unit [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      overridden:
        public abstract fun clear (): kotlin.Unit declared in <root>.Java1
    FUN FAKE_OVERRIDE name:comparator visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] java.util.Comparator<in @[FlexibleNullability] kotlin.Boolean?>? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
      overridden:
        public abstract fun comparator (): @[FlexibleNullability] java.util.Comparator<in @[FlexibleNullability] kotlin.Boolean?>? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:compute visibility:public modality:OPEN returnType:@[EnhancedNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, in @[EnhancedNullability] kotlin.Boolean?, out @[EnhancedNullability] kotlin.Boolean?>
      overridden:
        public open fun compute (p0: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, in @[EnhancedNullability] kotlin.Boolean?, out @[EnhancedNullability] kotlin.Boolean?>): @[EnhancedNullability] kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:computeIfAbsent visibility:public modality:OPEN returnType:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, out @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?>
      overridden:
        public open fun computeIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, p1: @[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, out @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?>): @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:computeIfPresent visibility:public modality:OPEN returnType:@[EnhancedNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, in @[EnhancedNullability] kotlin.Boolean, out @[EnhancedNullability] kotlin.Boolean?>
      overridden:
        public open fun computeIfPresent (p0: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, in @[EnhancedNullability] kotlin.Boolean, out @[EnhancedNullability] kotlin.Boolean?>): @[EnhancedNullability] kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:containsKey visibility:public modality:ABSTRACT returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun containsKey (key: @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean declared in <root>.Java1
    FUN FAKE_OVERRIDE name:containsValue visibility:public modality:ABSTRACT returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:value index:1 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun containsValue (value: @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean declared in <root>.Java1
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.Java1
    FUN FAKE_OVERRIDE name:firstKey visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
      overridden:
        public abstract fun firstKey (): @[FlexibleNullability] kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:forEach visibility:public modality:OPEN returnType:kotlin.Unit [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?>
      overridden:
        public open fun forEach (p0: @[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?>): kotlin.Unit declared in <root>.Java1
    FUN FAKE_OVERRIDE name:get visibility:public modality:ABSTRACT returnType:kotlin.Boolean? [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun get (key: @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:getOrDefault visibility:public modality:OPEN returnType:@[FlexibleNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:defaultValue index:2 type:@[FlexibleNullability] kotlin.Boolean?
      annotations:
        SinceKotlin(version = "1.1")
        PlatformDependent
      overridden:
        public open fun getOrDefault (key: @[FlexibleNullability] kotlin.Boolean?, defaultValue: @[FlexibleNullability] kotlin.Boolean?): @[FlexibleNullability] kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in <root>.Java1
    FUN FAKE_OVERRIDE name:headMap visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun headMap (p0: @[FlexibleNullability] kotlin.Boolean?): @[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:ABSTRACT returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      overridden:
        public abstract fun isEmpty (): kotlin.Boolean declared in <root>.Java1
    FUN FAKE_OVERRIDE name:lastKey visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
      overridden:
        public abstract fun lastKey (): @[FlexibleNullability] kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:merge visibility:public modality:OPEN returnType:@[EnhancedNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] kotlin.Boolean
      VALUE_PARAMETER kind:Regular name:p2 index:3 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] kotlin.Boolean, in @[EnhancedNullability] kotlin.Boolean, out @[EnhancedNullability] kotlin.Boolean?>
      overridden:
        public open fun merge (p0: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, p1: @[EnhancedNullability] kotlin.Boolean, p2: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] kotlin.Boolean, in @[EnhancedNullability] kotlin.Boolean, out @[EnhancedNullability] kotlin.Boolean?>): @[EnhancedNullability] kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:put visibility:public modality:ABSTRACT returnType:kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:value index:2 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun put (key: @[FlexibleNullability] kotlin.Boolean?, value: @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:putAll visibility:public modality:ABSTRACT returnType:kotlin.Unit [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:from index:1 type:kotlin.collections.Map<out @[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      overridden:
        public abstract fun putAll (from: kotlin.collections.Map<out @[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>): kotlin.Unit declared in <root>.Java1
    FUN FAKE_OVERRIDE name:putIfAbsent visibility:public modality:OPEN returnType:@[EnhancedNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      overridden:
        public open fun putIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, p1: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?): @[EnhancedNullability] kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:remove visibility:public modality:ABSTRACT returnType:kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun remove (key: @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:remove visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:value index:2 type:@[FlexibleNullability] kotlin.Boolean?
      annotations:
        SinceKotlin(version = "1.1")
        PlatformDependent
      overridden:
        public open fun remove (key: @[FlexibleNullability] kotlin.Boolean?, value: @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean declared in <root>.Java1
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN returnType:@[EnhancedNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      overridden:
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, p1: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?): @[EnhancedNullability] kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p2 index:3 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      overridden:
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, p1: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, p2: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean declared in <root>.Java1
    FUN FAKE_OVERRIDE name:replaceAll visibility:public modality:OPEN returnType:kotlin.Unit [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, out @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?>
      overridden:
        public open fun replaceAll (p0: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, out @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?>): kotlin.Unit declared in <root>.Java1
    FUN FAKE_OVERRIDE name:subMap visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun subMap (p0: @[FlexibleNullability] kotlin.Boolean?, p1: @[FlexibleNullability] kotlin.Boolean?): @[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:tailMap visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun tailMap (p0: @[FlexibleNullability] kotlin.Boolean?): @[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in <root>.Java1
    PROPERTY FAKE_OVERRIDE name:entries visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract entries: @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>> declared in <root>.Java1
      FUN FAKE_OVERRIDE name:<get-entries> visibility:public modality:ABSTRACT returnType:@[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>> [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:entries visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-entries> (): @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>> declared in <root>.Java1
    PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract keys: @[EnhancedNullability] kotlin.collections.MutableSet<@[FlexibleNullability] kotlin.Boolean?> declared in <root>.Java1
      FUN FAKE_OVERRIDE name:<get-keys> visibility:public modality:ABSTRACT returnType:@[EnhancedNullability] kotlin.collections.MutableSet<@[FlexibleNullability] kotlin.Boolean?> [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-keys> (): @[EnhancedNullability] kotlin.collections.MutableSet<@[FlexibleNullability] kotlin.Boolean?> declared in <root>.Java1
    PROPERTY FAKE_OVERRIDE name:size visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract size: kotlin.Int declared in <root>.Java1
      FUN FAKE_OVERRIDE name:<get-size> visibility:public modality:ABSTRACT returnType:kotlin.Int [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:size visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-size> (): kotlin.Int declared in <root>.Java1
    PROPERTY FAKE_OVERRIDE name:values visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract values: @[EnhancedNullability] kotlin.collections.MutableCollection<@[FlexibleNullability] kotlin.Boolean?> declared in <root>.Java1
      FUN FAKE_OVERRIDE name:<get-values> visibility:public modality:ABSTRACT returnType:@[EnhancedNullability] kotlin.collections.MutableCollection<@[FlexibleNullability] kotlin.Boolean?> [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:values visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-values> (): @[EnhancedNullability] kotlin.collections.MutableCollection<@[FlexibleNullability] kotlin.Boolean?> declared in <root>.Java1
  CLASS CLASS name:B modality:ABSTRACT visibility:public superTypes:[<root>.Java1]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.B
    CONSTRUCTOR visibility:public returnType:<root>.B [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.Java1'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:B modality:ABSTRACT visibility:public superTypes:[<root>.Java1]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:clear visibility:public modality:ABSTRACT returnType:kotlin.Unit [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      overridden:
        public abstract fun clear (): kotlin.Unit declared in <root>.Java1
    FUN FAKE_OVERRIDE name:comparator visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] java.util.Comparator<in @[FlexibleNullability] kotlin.Boolean?>? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
      overridden:
        public abstract fun comparator (): @[FlexibleNullability] java.util.Comparator<in @[FlexibleNullability] kotlin.Boolean?>? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:compute visibility:public modality:OPEN returnType:@[EnhancedNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, in @[EnhancedNullability] kotlin.Boolean?, out @[EnhancedNullability] kotlin.Boolean?>
      overridden:
        public open fun compute (p0: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, in @[EnhancedNullability] kotlin.Boolean?, out @[EnhancedNullability] kotlin.Boolean?>): @[EnhancedNullability] kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:computeIfAbsent visibility:public modality:OPEN returnType:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, out @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?>
      overridden:
        public open fun computeIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, p1: @[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, out @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?>): @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:computeIfPresent visibility:public modality:OPEN returnType:@[EnhancedNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, in @[EnhancedNullability] kotlin.Boolean, out @[EnhancedNullability] kotlin.Boolean?>
      overridden:
        public open fun computeIfPresent (p0: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, in @[EnhancedNullability] kotlin.Boolean, out @[EnhancedNullability] kotlin.Boolean?>): @[EnhancedNullability] kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:containsKey visibility:public modality:ABSTRACT returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun containsKey (key: @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean declared in <root>.Java1
    FUN FAKE_OVERRIDE name:containsValue visibility:public modality:ABSTRACT returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:value index:1 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun containsValue (value: @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean declared in <root>.Java1
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.Java1
    FUN FAKE_OVERRIDE name:firstKey visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
      overridden:
        public abstract fun firstKey (): @[FlexibleNullability] kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:forEach visibility:public modality:OPEN returnType:kotlin.Unit [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?>
      overridden:
        public open fun forEach (p0: @[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?>): kotlin.Unit declared in <root>.Java1
    FUN FAKE_OVERRIDE name:getOrDefault visibility:public modality:OPEN returnType:@[FlexibleNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:defaultValue index:2 type:@[FlexibleNullability] kotlin.Boolean?
      annotations:
        SinceKotlin(version = "1.1")
        PlatformDependent
      overridden:
        public open fun getOrDefault (key: @[FlexibleNullability] kotlin.Boolean?, defaultValue: @[FlexibleNullability] kotlin.Boolean?): @[FlexibleNullability] kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in <root>.Java1
    FUN FAKE_OVERRIDE name:headMap visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun headMap (p0: @[FlexibleNullability] kotlin.Boolean?): @[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:lastKey visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
      overridden:
        public abstract fun lastKey (): @[FlexibleNullability] kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:merge visibility:public modality:OPEN returnType:@[EnhancedNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] kotlin.Boolean
      VALUE_PARAMETER kind:Regular name:p2 index:3 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] kotlin.Boolean, in @[EnhancedNullability] kotlin.Boolean, out @[EnhancedNullability] kotlin.Boolean?>
      overridden:
        public open fun merge (p0: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, p1: @[EnhancedNullability] kotlin.Boolean, p2: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] kotlin.Boolean, in @[EnhancedNullability] kotlin.Boolean, out @[EnhancedNullability] kotlin.Boolean?>): @[EnhancedNullability] kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:put visibility:public modality:ABSTRACT returnType:kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:value index:2 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun put (key: @[FlexibleNullability] kotlin.Boolean?, value: @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:putAll visibility:public modality:ABSTRACT returnType:kotlin.Unit [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:from index:1 type:kotlin.collections.Map<out @[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      overridden:
        public abstract fun putAll (from: kotlin.collections.Map<out @[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>): kotlin.Unit declared in <root>.Java1
    FUN FAKE_OVERRIDE name:putIfAbsent visibility:public modality:OPEN returnType:@[EnhancedNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      overridden:
        public open fun putIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, p1: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?): @[EnhancedNullability] kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:remove visibility:public modality:ABSTRACT returnType:kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun remove (key: @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:remove visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:value index:2 type:@[FlexibleNullability] kotlin.Boolean?
      annotations:
        SinceKotlin(version = "1.1")
        PlatformDependent
      overridden:
        public open fun remove (key: @[FlexibleNullability] kotlin.Boolean?, value: @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean declared in <root>.Java1
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN returnType:@[EnhancedNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      overridden:
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, p1: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?): @[EnhancedNullability] kotlin.Boolean? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p2 index:3 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      overridden:
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, p1: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, p2: @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean declared in <root>.Java1
    FUN FAKE_OVERRIDE name:replaceAll visibility:public modality:OPEN returnType:kotlin.Unit [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, out @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?>
      overridden:
        public open fun replaceAll (p0: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, out @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?>): kotlin.Unit declared in <root>.Java1
    FUN FAKE_OVERRIDE name:subMap visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun subMap (p0: @[FlexibleNullability] kotlin.Boolean?, p1: @[FlexibleNullability] kotlin.Boolean?): @[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:tailMap visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun tailMap (p0: @[FlexibleNullability] kotlin.Boolean?): @[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>? declared in <root>.Java1
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in <root>.Java1
    FUN name:get visibility:public modality:OPEN returnType:kotlin.Boolean? [operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.B
      VALUE_PARAMETER kind:Regular name:key index:1 type:kotlin.Boolean?
      overridden:
        public abstract fun get (key: @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean? declared in <root>.Java1
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun get (key: kotlin.Boolean?): kotlin.Boolean? declared in <root>.B'
          CONST Boolean type=kotlin.Boolean value=true
    FUN name:isEmpty visibility:public modality:OPEN returnType:kotlin.Boolean
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.B
      overridden:
        public abstract fun isEmpty (): kotlin.Boolean declared in <root>.Java1
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun isEmpty (): kotlin.Boolean declared in <root>.B'
          CONST Boolean type=kotlin.Boolean value=true
    PROPERTY FAKE_OVERRIDE name:entries visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract entries: @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>> declared in <root>.Java1
      FUN FAKE_OVERRIDE name:<get-entries> visibility:public modality:ABSTRACT returnType:@[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>> [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:entries visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-entries> (): @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>> declared in <root>.Java1
    PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract keys: @[EnhancedNullability] kotlin.collections.MutableSet<@[FlexibleNullability] kotlin.Boolean?> declared in <root>.Java1
      FUN FAKE_OVERRIDE name:<get-keys> visibility:public modality:ABSTRACT returnType:@[EnhancedNullability] kotlin.collections.MutableSet<@[FlexibleNullability] kotlin.Boolean?> [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-keys> (): @[EnhancedNullability] kotlin.collections.MutableSet<@[FlexibleNullability] kotlin.Boolean?> declared in <root>.Java1
    PROPERTY FAKE_OVERRIDE name:values visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract values: @[EnhancedNullability] kotlin.collections.MutableCollection<@[FlexibleNullability] kotlin.Boolean?> declared in <root>.Java1
      FUN FAKE_OVERRIDE name:<get-values> visibility:public modality:ABSTRACT returnType:@[EnhancedNullability] kotlin.collections.MutableCollection<@[FlexibleNullability] kotlin.Boolean?> [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:values visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-values> (): @[EnhancedNullability] kotlin.collections.MutableCollection<@[FlexibleNullability] kotlin.Boolean?> declared in <root>.Java1
    PROPERTY name:size visibility:public modality:OPEN [val]
      overridden:
        public abstract size: kotlin.Int declared in <root>.Java1
      FUN name:<get-size> visibility:public modality:OPEN returnType:kotlin.Int
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.B
        correspondingProperty: PROPERTY name:size visibility:public modality:OPEN [val]
        overridden:
          public abstract fun <get-size> (): kotlin.Int declared in <root>.Java1
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public open fun <get-size> (): kotlin.Int declared in <root>.B'
            CONST Int type=kotlin.Int value=5
  CLASS CLASS name:KotlinClass modality:ABSTRACT visibility:public superTypes:[java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.KotlinClass
    CONSTRUCTOR visibility:public returnType:<root>.KotlinClass [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:KotlinClass modality:ABSTRACT visibility:public superTypes:[java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:clear visibility:public modality:ABSTRACT returnType:kotlin.Unit [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      overridden:
        public abstract fun clear (): kotlin.Unit declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:comparator visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] java.util.Comparator<in @[FlexibleNullability] kotlin.Boolean?>? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
      overridden:
        public abstract fun comparator (): @[FlexibleNullability] java.util.Comparator<in @[FlexibleNullability] K of java.util.SortedMap?>? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:compute visibility:public modality:OPEN returnType:@[EnhancedNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, in @[EnhancedNullability] kotlin.Boolean?, out @[EnhancedNullability] kotlin.Boolean?>
      overridden:
        public open fun compute (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, in @[EnhancedNullability] V of java.util.SortedMap?, out @[EnhancedNullability] V of java.util.SortedMap?>): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:computeIfAbsent visibility:public modality:OPEN returnType:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, out @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?>
      overridden:
        public open fun computeIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, out @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?>): @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:computeIfPresent visibility:public modality:OPEN returnType:@[EnhancedNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, in @[EnhancedNullability] kotlin.Boolean, out @[EnhancedNullability] kotlin.Boolean?>
      overridden:
        public open fun computeIfPresent (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, in @[EnhancedNullability] {V of java.util.SortedMap & Any}, out @[EnhancedNullability] V of java.util.SortedMap?>): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:containsKey visibility:public modality:ABSTRACT returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun containsKey (key: @[FlexibleNullability] K of java.util.SortedMap?): kotlin.Boolean declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:containsValue visibility:public modality:ABSTRACT returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:value index:1 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun containsValue (value: @[FlexibleNullability] V of java.util.SortedMap?): kotlin.Boolean declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:firstKey visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
      overridden:
        public abstract fun firstKey (): @[FlexibleNullability] K of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:forEach visibility:public modality:OPEN returnType:kotlin.Unit [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?>
      overridden:
        public open fun forEach (p0: @[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, in @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?>): kotlin.Unit declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:get visibility:public modality:ABSTRACT returnType:kotlin.Boolean? [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun get (key: @[FlexibleNullability] K of java.util.SortedMap?): V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:getOrDefault visibility:public modality:OPEN returnType:@[FlexibleNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:defaultValue index:2 type:@[FlexibleNullability] kotlin.Boolean?
      annotations:
        SinceKotlin(version = "1.1")
        PlatformDependent
      overridden:
        public open fun getOrDefault (key: @[FlexibleNullability] K of java.util.SortedMap?, defaultValue: @[FlexibleNullability] V of java.util.SortedMap?): @[FlexibleNullability] V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:headMap visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun headMap (p0: @[FlexibleNullability] K of java.util.SortedMap?): @[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:ABSTRACT returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      overridden:
        public abstract fun isEmpty (): kotlin.Boolean declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:lastKey visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
      overridden:
        public abstract fun lastKey (): @[FlexibleNullability] K of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:merge visibility:public modality:OPEN returnType:@[EnhancedNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] kotlin.Boolean
      VALUE_PARAMETER kind:Regular name:p2 index:3 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] kotlin.Boolean, in @[EnhancedNullability] kotlin.Boolean, out @[EnhancedNullability] kotlin.Boolean?>
      overridden:
        public open fun merge (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] {V of java.util.SortedMap & Any}, p2: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] {V of java.util.SortedMap & Any}, in @[EnhancedNullability] {V of java.util.SortedMap & Any}, out @[EnhancedNullability] V of java.util.SortedMap?>): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:put visibility:public modality:ABSTRACT returnType:kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:value index:2 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun put (key: @[FlexibleNullability] K of java.util.SortedMap?, value: @[FlexibleNullability] V of java.util.SortedMap?): V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:putAll visibility:public modality:ABSTRACT returnType:kotlin.Unit [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:from index:1 type:kotlin.collections.Map<out @[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      overridden:
        public abstract fun putAll (from: kotlin.collections.Map<out @[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>): kotlin.Unit declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:putIfAbsent visibility:public modality:OPEN returnType:@[EnhancedNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      overridden:
        public open fun putIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:remove visibility:public modality:ABSTRACT returnType:kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun remove (key: @[FlexibleNullability] K of java.util.SortedMap?): V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:remove visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:value index:2 type:@[FlexibleNullability] kotlin.Boolean?
      annotations:
        SinceKotlin(version = "1.1")
        PlatformDependent
      overridden:
        public open fun remove (key: @[FlexibleNullability] K of java.util.SortedMap?, value: @[FlexibleNullability] V of java.util.SortedMap?): kotlin.Boolean declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN returnType:@[EnhancedNullability] kotlin.Boolean? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      overridden:
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p2 index:3 type:@[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?
      overridden:
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?, p2: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?): kotlin.Boolean declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:replaceAll visibility:public modality:OPEN returnType:kotlin.Unit [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, in @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?, out @[EnhancedNullability] @[FlexibleNullability] kotlin.Boolean?>
      overridden:
        public open fun replaceAll (p0: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, in @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?, out @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?>): kotlin.Unit declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:subMap visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] kotlin.Boolean?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun subMap (p0: @[FlexibleNullability] K of java.util.SortedMap?, p1: @[FlexibleNullability] K of java.util.SortedMap?): @[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:tailMap visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] kotlin.Boolean?
      overridden:
        public abstract fun tailMap (p0: @[FlexibleNullability] K of java.util.SortedMap?): @[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in java.util.SortedMap
    PROPERTY FAKE_OVERRIDE name:entries visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract entries: @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>> declared in java.util.SortedMap
      FUN FAKE_OVERRIDE name:<get-entries> visibility:public modality:ABSTRACT returnType:@[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>> [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:entries visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-entries> (): @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>> declared in java.util.SortedMap
    PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract keys: @[EnhancedNullability] kotlin.collections.MutableSet<@[FlexibleNullability] K of java.util.SortedMap?> declared in java.util.SortedMap
      FUN FAKE_OVERRIDE name:<get-keys> visibility:public modality:ABSTRACT returnType:@[EnhancedNullability] kotlin.collections.MutableSet<@[FlexibleNullability] kotlin.Boolean?> [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-keys> (): @[EnhancedNullability] kotlin.collections.MutableSet<@[FlexibleNullability] K of java.util.SortedMap?> declared in java.util.SortedMap
    PROPERTY FAKE_OVERRIDE name:size visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract size: kotlin.Int declared in java.util.SortedMap
      FUN FAKE_OVERRIDE name:<get-size> visibility:public modality:ABSTRACT returnType:kotlin.Int [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] kotlin.Boolean?, @[FlexibleNullability] kotlin.Boolean?>
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:size visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-size> (): kotlin.Int declared in java.util.SortedMap
    PROPERTY FAKE_OVERRIDE name:values visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract values: @[EnhancedNullability] kotlin.collections.MutableCollection<@[FlexibleNullability] V of java.util.SortedMap?> declared in java.util.SortedMap
      FUN FAKE_OVERRIDE name:<get-values> visibility:public modality:ABSTRACT returnType:@[EnhancedNullability] kotlin.collections.MutableCollection<@[FlexibleNullability] kotlin.Boolean?> [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<kotlin.Boolean, kotlin.Boolean>
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:values visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-values> (): @[EnhancedNullability] kotlin.collections.MutableCollection<@[FlexibleNullability] V of java.util.SortedMap?> declared in java.util.SortedMap
  FUN name:test visibility:public modality:FINAL returnType:kotlin.Unit
    VALUE_PARAMETER kind:Regular name:a index:0 type:<root>.A
    VALUE_PARAMETER kind:Regular name:b index:1 type:<root>.B
    BLOCK_BODY
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun <get-size> (): kotlin.Int declared in <root>.A' type=kotlin.Int origin=GET_PROPERTY
          ARG <this>: GET_VAR 'a: <root>.A declared in <root>.test' type=<root>.A origin=null
      CALL 'public final fun set <K, V> (<this>: kotlin.collections.MutableMap<K of kotlin.collections.set, V of kotlin.collections.set>, key: K of kotlin.collections.set, value: V of kotlin.collections.set): kotlin.Unit declared in kotlin.collections' type=kotlin.Unit origin=EQ
        TYPE_ARG K: @[FlexibleNullability] kotlin.Boolean?
        TYPE_ARG V: @[FlexibleNullability] kotlin.Boolean?
        ARG <this>: GET_VAR 'a: <root>.A declared in <root>.test' type=<root>.A origin=null
        ARG key: CONST Boolean type=kotlin.Boolean value=true
        ARG value: CONST Boolean type=kotlin.Boolean value=true
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun put (key: @[FlexibleNullability] kotlin.Boolean?, value: @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean? declared in <root>.A' type=kotlin.Boolean? origin=null
          ARG <this>: GET_VAR 'a: <root>.A declared in <root>.test' type=<root>.A origin=null
          ARG key: CONST Null type=kotlin.Nothing? value=null
          ARG value: CONST Null type=kotlin.Nothing? value=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun get (key: @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean? declared in <root>.A' type=kotlin.Boolean? origin=null
          ARG <this>: GET_VAR 'a: <root>.A declared in <root>.test' type=<root>.A origin=null
          ARG key: CONST Boolean type=kotlin.Boolean value=true
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun get (key: @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean? declared in <root>.A' type=kotlin.Boolean? origin=null
          ARG <this>: GET_VAR 'a: <root>.A declared in <root>.test' type=<root>.A origin=null
          ARG key: CONST Null type=kotlin.Nothing? value=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun remove (key: @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean? declared in <root>.A' type=kotlin.Boolean? origin=null
          ARG <this>: GET_VAR 'a: <root>.A declared in <root>.test' type=<root>.A origin=null
          ARG key: CONST Null type=kotlin.Nothing? value=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun remove (key: @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean? declared in <root>.A' type=kotlin.Boolean? origin=null
          ARG <this>: GET_VAR 'a: <root>.A declared in <root>.test' type=<root>.A origin=null
          ARG key: CONST Boolean type=kotlin.Boolean value=true
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public final fun isNotEmpty <K, V> (<this>: kotlin.collections.Map<out K of kotlin.collections.isNotEmpty, V of kotlin.collections.isNotEmpty>): kotlin.Boolean declared in kotlin.collections' type=kotlin.Boolean origin=null
          TYPE_ARG K: @[FlexibleNullability] kotlin.Boolean?
          TYPE_ARG V: @[FlexibleNullability] kotlin.Boolean?
          ARG <this>: GET_VAR 'a: <root>.A declared in <root>.test' type=<root>.A origin=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun <get-size> (): kotlin.Int declared in <root>.B' type=kotlin.Int origin=GET_PROPERTY
          ARG <this>: GET_VAR 'b: <root>.B declared in <root>.test' type=<root>.B origin=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun put (key: @[FlexibleNullability] kotlin.Boolean?, value: @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean? declared in <root>.B' type=kotlin.Boolean? origin=null
          ARG <this>: GET_VAR 'b: <root>.B declared in <root>.test' type=<root>.B origin=null
          ARG key: CONST Boolean type=kotlin.Boolean value=false
          ARG value: CONST Boolean type=kotlin.Boolean value=false
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun put (key: @[FlexibleNullability] kotlin.Boolean?, value: @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean? declared in <root>.B' type=kotlin.Boolean? origin=null
          ARG <this>: GET_VAR 'b: <root>.B declared in <root>.test' type=<root>.B origin=null
          ARG key: CONST Null type=kotlin.Nothing? value=null
          ARG value: CONST Null type=kotlin.Nothing? value=null
      CALL 'public final fun set <K, V> (<this>: kotlin.collections.MutableMap<K of kotlin.collections.set, V of kotlin.collections.set>, key: K of kotlin.collections.set, value: V of kotlin.collections.set): kotlin.Unit declared in kotlin.collections' type=kotlin.Unit origin=EQ
        TYPE_ARG K: @[FlexibleNullability] kotlin.Boolean?
        TYPE_ARG V: @[FlexibleNullability] kotlin.Boolean?
        ARG <this>: GET_VAR 'b: <root>.B declared in <root>.test' type=<root>.B origin=null
        ARG key: CONST Null type=kotlin.Nothing? value=null
        ARG value: CONST Null type=kotlin.Nothing? value=null
      CALL 'public final fun set <K, V> (<this>: kotlin.collections.MutableMap<K of kotlin.collections.set, V of kotlin.collections.set>, key: K of kotlin.collections.set, value: V of kotlin.collections.set): kotlin.Unit declared in kotlin.collections' type=kotlin.Unit origin=EQ
        TYPE_ARG K: @[FlexibleNullability] kotlin.Boolean?
        TYPE_ARG V: @[FlexibleNullability] kotlin.Boolean?
        ARG <this>: GET_VAR 'b: <root>.B declared in <root>.test' type=<root>.B origin=null
        ARG key: CONST Boolean type=kotlin.Boolean value=true
        ARG value: CONST Boolean type=kotlin.Boolean value=true
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun get (key: kotlin.Boolean?): kotlin.Boolean? declared in <root>.B' type=kotlin.Boolean? origin=null
          ARG <this>: GET_VAR 'b: <root>.B declared in <root>.test' type=<root>.B origin=null
          ARG key: CONST Null type=kotlin.Nothing? value=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun get (key: kotlin.Boolean?): kotlin.Boolean? declared in <root>.B' type=kotlin.Boolean? origin=null
          ARG <this>: GET_VAR 'b: <root>.B declared in <root>.test' type=<root>.B origin=null
          ARG key: CONST Boolean type=kotlin.Boolean value=true
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun remove (key: @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean? declared in <root>.B' type=kotlin.Boolean? origin=null
          ARG <this>: GET_VAR 'b: <root>.B declared in <root>.test' type=<root>.B origin=null
          ARG key: CONST Null type=kotlin.Nothing? value=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun remove (key: @[FlexibleNullability] kotlin.Boolean?): kotlin.Boolean? declared in <root>.B' type=kotlin.Boolean? origin=null
          ARG <this>: GET_VAR 'b: <root>.B declared in <root>.test' type=<root>.B origin=null
          ARG key: CONST Boolean type=kotlin.Boolean value=true
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun isEmpty (): kotlin.Boolean declared in <root>.B' type=kotlin.Boolean origin=null
          ARG <this>: GET_VAR 'b: <root>.B declared in <root>.test' type=<root>.B origin=null
