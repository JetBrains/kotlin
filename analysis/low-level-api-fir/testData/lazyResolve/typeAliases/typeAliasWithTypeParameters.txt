RAW_FIR:
FILE: [ResolvedTo(RAW_FIR)] typeAliasWithTypeParameters.kt
    public final [ResolvedTo(RAW_FIR)] typealias ResolveMe<[ResolvedTo(RAW_FIR)] T : Int, [ResolvedTo(RAW_FIR)] K> = Map<T, K>

IMPORTS:
FILE: [ResolvedTo(IMPORTS)] typeAliasWithTypeParameters.kt
    public final [ResolvedTo(RAW_FIR)] typealias ResolveMe<[ResolvedTo(RAW_FIR)] T : Int, [ResolvedTo(RAW_FIR)] K> = Map<T, K>

COMPILER_REQUIRED_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] typeAliasWithTypeParameters.kt
    public final [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] typealias ResolveMe<[ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] T : Int, [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] K> = Map<T, K>

COMPANION_GENERATION:
FILE: [ResolvedTo(IMPORTS)] typeAliasWithTypeParameters.kt
    public final [ResolvedTo(COMPANION_GENERATION)] typealias ResolveMe<[ResolvedTo(COMPANION_GENERATION)] T : Int, [ResolvedTo(COMPANION_GENERATION)] K> = Map<T, K>

SUPER_TYPES:
FILE: [ResolvedTo(IMPORTS)] typeAliasWithTypeParameters.kt
    public final [ResolvedTo(SUPER_TYPES)] typealias ResolveMe<[ResolvedTo(SUPER_TYPES)] T : Int, [ResolvedTo(SUPER_TYPES)] K> = R|kotlin/collections/Map<T, K>|

TYPES:
FILE: [ResolvedTo(IMPORTS)] typeAliasWithTypeParameters.kt
    public final [ResolvedTo(TYPES)] typealias ResolveMe<[ResolvedTo(TYPES)] T : R|kotlin/Int|, [ResolvedTo(TYPES)] K> = R|kotlin/collections/Map<T, K>|

STATUS:
FILE: [ResolvedTo(IMPORTS)] typeAliasWithTypeParameters.kt
    public final [ResolvedTo(STATUS)] typealias ResolveMe<[ResolvedTo(STATUS)] T : R|kotlin/Int|, [ResolvedTo(STATUS)] K> = R|kotlin/collections/Map<T, K>|

EXPECT_ACTUAL_MATCHING:
FILE: [ResolvedTo(IMPORTS)] typeAliasWithTypeParameters.kt
    public final [ResolvedTo(EXPECT_ACTUAL_MATCHING)] typealias ResolveMe<[ResolvedTo(EXPECT_ACTUAL_MATCHING)] T : R|kotlin/Int|, [ResolvedTo(EXPECT_ACTUAL_MATCHING)] K> = R|kotlin/collections/Map<T, K>|

CONTRACTS:
FILE: [ResolvedTo(IMPORTS)] typeAliasWithTypeParameters.kt
    public final [ResolvedTo(CONTRACTS)] typealias ResolveMe<[ResolvedTo(CONTRACTS)] T : R|kotlin/Int|, [ResolvedTo(CONTRACTS)] K> = R|kotlin/collections/Map<T, K>|

IMPLICIT_TYPES_BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] typeAliasWithTypeParameters.kt
    public final [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] typealias ResolveMe<[ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] T : R|kotlin/Int|, [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] K> = R|kotlin/collections/Map<T, K>|

CONSTANT_EVALUATION:
FILE: [ResolvedTo(IMPORTS)] typeAliasWithTypeParameters.kt
    public final [ResolvedTo(CONSTANT_EVALUATION)] typealias ResolveMe<[ResolvedTo(CONSTANT_EVALUATION)] T : R|kotlin/Int|, [ResolvedTo(CONSTANT_EVALUATION)] K> = R|kotlin/collections/Map<T, K>|

ANNOTATION_ARGUMENTS:
FILE: [ResolvedTo(IMPORTS)] typeAliasWithTypeParameters.kt
    public final [ResolvedTo(ANNOTATION_ARGUMENTS)] typealias ResolveMe<[ResolvedTo(ANNOTATION_ARGUMENTS)] T : R|kotlin/Int|, [ResolvedTo(ANNOTATION_ARGUMENTS)] K> = R|kotlin/collections/Map<T, K>|

BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] typeAliasWithTypeParameters.kt
    public final [ResolvedTo(BODY_RESOLVE)] typealias ResolveMe<[ResolvedTo(BODY_RESOLVE)] T : R|kotlin/Int|, [ResolvedTo(BODY_RESOLVE)] K> = R|kotlin/collections/Map<T, K>|

FILE RAW TO BODY:
FILE: [ResolvedTo(BODY_RESOLVE)] typeAliasWithTypeParameters.kt
    public final [ResolvedTo(BODY_RESOLVE)] typealias ResolveMe<[ResolvedTo(BODY_RESOLVE)] T : R|kotlin/Int|, [ResolvedTo(BODY_RESOLVE)] K> = R|kotlin/collections/Map<T, K>|
