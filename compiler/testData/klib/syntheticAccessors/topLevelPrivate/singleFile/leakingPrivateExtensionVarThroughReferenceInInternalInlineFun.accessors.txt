/* MODULE name=<main> */

/* FILE package=<root> fileName=leakingPrivateExtensionVarThroughReferenceInInternalInlineFun.kt */

private var privateVar: String
    /* TARGET declaration */ private fun <get-privateVar>(): String
    /* TARGET declaration */ private fun <set-privateVar>(<set-?>: String)
internal inline fun internalInlineFunction(): KMutableProperty0<String>
    /* RICH PROPERTY REFERENCE */
        /* LOCAL declaration @0 */ local fun <get-privateVar>(): String
            /* ACCESSOR use-site */ access$<get-privateVar>$tLeakingPrivateExtensionVarThroughReferenceInInternalInlineFunKt()
        /* LOCAL declaration @1 */ local fun <set-privateVar>(p0: String)
            /* ACCESSOR use-site */ access$<set-privateVar>$tLeakingPrivateExtensionVarThroughReferenceInInternalInlineFunKt(<set-?> = p0)
private inline fun privateInlineFunction(): KMutableProperty0<String>
    /* RICH PROPERTY REFERENCE */
        /* LOCAL declaration @2 */ local fun <get-privateVar>(): String
            /* TARGET use-site */ <get-privateVar>()
        /* LOCAL declaration @3 */ local fun <set-privateVar>(p0: String)
            /* TARGET use-site */ <set-privateVar>(<set-?> = p0)
internal inline fun transitiveInlineFunction(): KMutableProperty0<String>
    /* RICH PROPERTY REFERENCE */
        /* LOCAL declaration @4 */ local fun <get-privateVar>(): String
            /* ACCESSOR use-site */ access$<get-privateVar>$tLeakingPrivateExtensionVarThroughReferenceInInternalInlineFunKt()
        /* LOCAL declaration @5 */ local fun <set-privateVar>(p0: String)
            /* ACCESSOR use-site */ access$<set-privateVar>$tLeakingPrivateExtensionVarThroughReferenceInInternalInlineFunKt(<set-?> = p0)
public fun box(): String
    /* RICH PROPERTY REFERENCE */
        /* LOCAL declaration @6 */ local fun <get-privateVar>(): String
            /* ACCESSOR use-site */ access$<get-privateVar>$tLeakingPrivateExtensionVarThroughReferenceInInternalInlineFunKt()
        /* LOCAL declaration @7 */ local fun <set-privateVar>(p0: String)
            /* ACCESSOR use-site */ access$<set-privateVar>$tLeakingPrivateExtensionVarThroughReferenceInInternalInlineFunKt(<set-?> = p0)
    /* RICH PROPERTY REFERENCE */
        /* LOCAL declaration @8 */ local fun <get-privateVar>(): String
            /* ACCESSOR use-site */ access$<get-privateVar>$tLeakingPrivateExtensionVarThroughReferenceInInternalInlineFunKt()
        /* LOCAL declaration @9 */ local fun <set-privateVar>(p0: String)
            /* ACCESSOR use-site */ access$<set-privateVar>$tLeakingPrivateExtensionVarThroughReferenceInInternalInlineFunKt(<set-?> = p0)
/* ACCESSOR declaration */ internal fun access$<get-privateVar>$tLeakingPrivateExtensionVarThroughReferenceInInternalInlineFunKt(): String
    /* TARGET use-site */ <get-privateVar>()
/* ACCESSOR declaration */ internal fun access$<set-privateVar>$tLeakingPrivateExtensionVarThroughReferenceInInternalInlineFunKt(<set-?>: String)
    /* TARGET use-site */ <set-privateVar>(<set-?> = <set-?>)
