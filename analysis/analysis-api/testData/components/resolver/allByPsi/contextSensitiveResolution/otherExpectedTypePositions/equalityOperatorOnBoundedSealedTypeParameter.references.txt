KtNameReferenceExpression(122,130): 'MySealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in MySealed) constructor()

KtNameReferenceExpression(178,186): 'MySealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in MySealed) constructor()

KtNameReferenceExpression(206,207): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: id) X

KtNameReferenceExpression(210,211): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: id) X

KtCallExpression(214,220): 'TODO()'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(214,218): 'TODO'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin) inline fun TODO(): kotlin.Nothing

KtNameReferenceExpression(231,239): 'MySealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) sealed class MySealed

KtNameReferenceExpression(248,249): 'T'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: foo) T

KtNameReferenceExpression(265,273): 'MySealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) sealed class MySealed

KtNameReferenceExpression(274,275): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in MySealed) data object X : MySealed()

KtNameReferenceExpression(285,286): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtOperationReferenceExpression(287,289): '=='
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin.Any) open operator fun equals(other: kotlin.Any?): kotlin.Boolean

KtNameReferenceExpression(290,291): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object X : MySealed()

KtNameReferenceExpression(304,305): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtOperationReferenceExpression(306,308): '=='
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin.Any) open operator fun equals(other: kotlin.Any?): kotlin.Boolean

KtNameReferenceExpression(309,310): 'Y'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object Y

KtNameReferenceExpression(323,324): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtOperationReferenceExpression(325,327): '!='
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin.Any) open operator fun equals(other: kotlin.Any?): kotlin.Boolean

KtNameReferenceExpression(328,329): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object X : MySealed()

KtNameReferenceExpression(342,343): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtOperationReferenceExpression(344,346): '!='
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin.Any) open operator fun equals(other: kotlin.Any?): kotlin.Boolean

KtNameReferenceExpression(347,348): 'Y'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object Y

KtNameReferenceExpression(361,362): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtOperationReferenceExpression(363,366): '==='
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(367,368): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object X : MySealed()

KtNameReferenceExpression(381,382): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtOperationReferenceExpression(383,386): '==='
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(387,388): 'Y'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object Y

KtNameReferenceExpression(401,402): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtOperationReferenceExpression(403,406): '!=='
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(407,408): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object X : MySealed()

KtNameReferenceExpression(421,422): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtOperationReferenceExpression(423,426): '!=='
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(427,428): 'Y'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object Y

KtNameReferenceExpression(441,442): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtOperationReferenceExpression(443,445): '=='
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin.Any) open operator fun equals(other: kotlin.Any?): kotlin.Boolean

KtNameReferenceExpression(446,447): 'L'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: foo) val L: MySealed.X

KtNameReferenceExpression(460,461): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtOperationReferenceExpression(462,464): 'is'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(465,472): 'Derived'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) class Derived : MySealed()

KtCallExpression(485,490): 'id(a)'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(485,487): 'id'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) fun <X> id(x: X): X

KtNameReferenceExpression(488,489): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtOperationReferenceExpression(491,493): 'is'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(494,501): 'Derived'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) class Derived : MySealed()

KtNameReferenceExpression(685,686): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtOperationReferenceExpression(687,689): '=='
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(690,691): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtNameReferenceExpression(704,705): 'L'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: foo) val L: MySealed.X

KtOperationReferenceExpression(706,708): '=='
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in MySealed.X) open operator fun equals(other: kotlin.Any?): kotlin.Boolean

KtNameReferenceExpression(709,710): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtNameReferenceExpression(913,914): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtOperationReferenceExpression(915,917): '=='
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin.Any) open operator fun equals(other: kotlin.Any?): kotlin.Boolean

KtCallExpression(918,923): 'id(X)'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(918,920): 'id'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) fun <X> id(x: X): X

KtNameReferenceExpression(921,922): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(936,937): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtOperationReferenceExpression(938,940): '=='
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin.Any) open operator fun equals(other: kotlin.Any?): kotlin.Boolean

KtCallExpression(941,946): 'id(L)'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(941,943): 'id'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) fun <X> id(x: X): X

KtNameReferenceExpression(944,945): 'L'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: foo) val L: MySealed.X

KtNameReferenceExpression(971,972): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtOperationReferenceExpression(973,975): '=='
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin.Any) open operator fun equals(other: kotlin.Any?): kotlin.Boolean

KtNameReferenceExpression(976,977): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object X : MySealed()

KtNameReferenceExpression(992,993): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtOperationReferenceExpression(994,996): '!='
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin.Any) open operator fun equals(other: kotlin.Any?): kotlin.Boolean

KtNameReferenceExpression(997,998): 'Y'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object Y

KtNameReferenceExpression(1031,1032): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtOperationReferenceExpression(1033,1036): '==='
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(1037,1038): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object X : MySealed()

KtNameReferenceExpression(1053,1054): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtOperationReferenceExpression(1055,1057): '=='
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin.Any) open operator fun equals(other: kotlin.Any?): kotlin.Boolean

KtNameReferenceExpression(1058,1059): 'L'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: foo) val L: MySealed.X

KtNameReferenceExpression(1074,1075): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtOperationReferenceExpression(1076,1078): 'is'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(1079,1086): 'Derived'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) class Derived : MySealed()

KtNameReferenceExpression(1101,1102): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtOperationReferenceExpression(1103,1106): '!=='
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(1107,1108): 'Y'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object Y

KtNameReferenceExpression(1131,1132): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtNameReferenceExpression(1144,1145): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object X : MySealed()

KtNameReferenceExpression(1160,1161): 'Y'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object Y

KtNameReferenceExpression(1163,1164): 'L'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: foo) val L: MySealed.X

KtNameReferenceExpression(1182,1189): 'Derived'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) class Derived : MySealed()

KtNameReferenceExpression(1221,1222): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtNameReferenceExpression(1234,1235): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object X : MySealed()

KtNameReferenceExpression(1250,1251): 'Y'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) data object Y

KtNameReferenceExpression(1253,1254): 'L'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: foo) val L: MySealed.X

KtNameReferenceExpression(1272,1279): 'Derived'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) class Derived : MySealed()

KtNameReferenceExpression(1303,1304): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtCallExpression(1316,1321): 'id(X)'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(1316,1318): 'id'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) fun <X> id(x: X): X

KtNameReferenceExpression(1319,1320): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtCallExpression(1336,1341): 'id(Y)'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(1336,1338): 'id'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) fun <X> id(x: X): X

KtNameReferenceExpression(1339,1340): 'Y'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtCallExpression(1343,1348): 'id(L)'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(1343,1345): 'id'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) fun <X> id(x: X): X

KtNameReferenceExpression(1346,1347): 'L'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: foo) val L: MySealed.X

KtNameReferenceExpression(1399,1400): 'a'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      a: T

KtCallExpression(1412,1417): 'id(X)'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(1412,1414): 'id'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) fun <X> id(x: X): X

KtNameReferenceExpression(1415,1416): 'X'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtCallExpression(1432,1437): 'id(Y)'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(1432,1434): 'id'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) fun <X> id(x: X): X

KtNameReferenceExpression(1435,1436): 'Y'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtCallExpression(1439,1444): 'id(L)'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(1439,1441): 'id'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) fun <X> id(x: X): X

KtNameReferenceExpression(1442,1443): 'L'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: foo) val L: MySealed.X