@kotlin.Metadata
public final class LambdaTest {
    // source: 'LambdaTest.kt'
    private final static @org.jetbrains.annotations.NotNull field a$FU: java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    private volatile @kotlin.jvm.Volatile field a: int
    private final static @org.jetbrains.annotations.NotNull field rs$FU: java.util.concurrent.atomic.AtomicReferenceFieldUpdater
    private volatile @kotlin.jvm.Volatile @org.jetbrains.annotations.Nullable field rs: java.lang.Object
    static method <clinit>(): void
    public method <init>(): void
    public final static @org.jetbrains.annotations.NotNull method getA$FU(): java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    public final method getA(): int
    public final static @org.jetbrains.annotations.NotNull method getRs$FU(): java.util.concurrent.atomic.AtomicReferenceFieldUpdater
    public final @org.jetbrains.annotations.Nullable method getRs(): java.lang.Object
    private final method inlineLambda(p0: int, p1: kotlin.jvm.functions.Function1): void
    private final method loop$atomicfu(p0: java.util.concurrent.atomic.AtomicIntegerFieldUpdater, p1: kotlin.jvm.functions.Function1, p2: java.lang.Object): void
    public final method loopInLambda1(p0: int): void
    public final method loopInLambda2(p0: int): void
}

@kotlin.Metadata
public final class LambdaTestKt {
    // source: 'LambdaTest.kt'
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
}
