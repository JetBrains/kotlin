RAW_FIR:
FILE: [ResolvedTo(RAW_FIR)] integerConstantOperator.kt
    public? final? [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] x: Int): R|kotlin/Unit| { LAZY_BLOCK }

IMPORTS:
FILE: [ResolvedTo(IMPORTS)] integerConstantOperator.kt
    public? final? [ResolvedTo(RAW_FIR)] fun foo([ResolvedTo(RAW_FIR)] x: Int): R|kotlin/Unit| { LAZY_BLOCK }

COMPILER_REQUIRED_ANNOTATIONS:
FILE: [ResolvedTo(IMPORTS)] integerConstantOperator.kt
    public? final? [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] fun foo([ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] x: Int): R|kotlin/Unit| { LAZY_BLOCK }

COMPANION_GENERATION:
FILE: [ResolvedTo(IMPORTS)] integerConstantOperator.kt
    public? final? [ResolvedTo(COMPANION_GENERATION)] fun foo([ResolvedTo(COMPANION_GENERATION)] x: Int): R|kotlin/Unit| { LAZY_BLOCK }

SUPER_TYPES:
FILE: [ResolvedTo(IMPORTS)] integerConstantOperator.kt
    public? final? [ResolvedTo(SUPER_TYPES)] fun foo([ResolvedTo(SUPER_TYPES)] x: Int): R|kotlin/Unit| { LAZY_BLOCK }

TYPES:
FILE: [ResolvedTo(IMPORTS)] integerConstantOperator.kt
    public? final? [ResolvedTo(TYPES)] fun foo([ResolvedTo(TYPES)] x: <ERROR TYPE REF: Symbol not found for Int>): R|kotlin/Unit| { LAZY_BLOCK }

STATUS:
FILE: [ResolvedTo(IMPORTS)] integerConstantOperator.kt
    public final [ResolvedTo(STATUS)] fun foo([ResolvedTo(STATUS)] x: <ERROR TYPE REF: Symbol not found for Int>): R|kotlin/Unit| { LAZY_BLOCK }

EXPECT_ACTUAL_MATCHING:
FILE: [ResolvedTo(IMPORTS)] integerConstantOperator.kt
    public final [ResolvedTo(EXPECT_ACTUAL_MATCHING)] fun foo([ResolvedTo(EXPECT_ACTUAL_MATCHING)] x: <ERROR TYPE REF: Symbol not found for Int>): R|kotlin/Unit| { LAZY_BLOCK }

CONTRACTS:
FILE: [ResolvedTo(IMPORTS)] integerConstantOperator.kt
    public final [ResolvedTo(CONTRACTS)] fun foo([ResolvedTo(CONTRACTS)] x: <ERROR TYPE REF: Symbol not found for Int>): R|kotlin/Unit| { LAZY_BLOCK }

IMPLICIT_TYPES_BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] integerConstantOperator.kt
    public final [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] fun foo([ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] x: <ERROR TYPE REF: Symbol not found for Int>): R|kotlin/Unit| { LAZY_BLOCK }

CONSTANT_EVALUATION:
FILE: [ResolvedTo(IMPORTS)] integerConstantOperator.kt
    public final [ResolvedTo(CONSTANT_EVALUATION)] fun foo([ResolvedTo(CONSTANT_EVALUATION)] x: <ERROR TYPE REF: Symbol not found for Int>): R|kotlin/Unit| { LAZY_BLOCK }

ANNOTATION_ARGUMENTS:
FILE: [ResolvedTo(IMPORTS)] integerConstantOperator.kt
    public final [ResolvedTo(ANNOTATION_ARGUMENTS)] fun foo([ResolvedTo(ANNOTATION_ARGUMENTS)] x: <ERROR TYPE REF: Symbol not found for Int>): R|kotlin/Unit| { LAZY_BLOCK }

BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] integerConstantOperator.kt
    public final [ResolvedTo(BODY_RESOLVE)] fun foo([ResolvedTo(BODY_RESOLVE)] x: <ERROR TYPE REF: Symbol not found for Int>): R|kotlin/Unit| {
        IntegerLiteral(1).<Unresolved name: times (*)>#(R|<local>/x|)
    }

FILE RAW TO BODY:
FILE: [ResolvedTo(BODY_RESOLVE)] integerConstantOperator.kt
    public final [ResolvedTo(BODY_RESOLVE)] fun foo([ResolvedTo(BODY_RESOLVE)] x: <ERROR TYPE REF: Symbol not found for Int>): R|kotlin/Unit| {
        IntegerLiteral(1).<Unresolved name: times (*)>#(R|<local>/x|)
    }
