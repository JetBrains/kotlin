package

package a {
    public fun test(): kotlin.Unit
    public inline fun </*0*/ T : a.Closeable, /*1*/ R> T.use(/*0*/ block: (t: T) -> R): R

    public final class C : a.Closeable {
        public constructor C()
        public open override /*1*/ /*fake_override*/ fun close(): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public interface Closeable {
        public open fun close(): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}
