/inlining_lambdas.kt:(11,17): info: Generated Viper text for invoke:
method global$fun_invoke$fun_take$fun_take$T_Int$return$T_Int$return$T_Int(local$f: Ref)
  returns (ret: Int)
  requires acc(local$f.special$function_object_call_counter, write)
  requires special$duplicable(local$f)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
{
  var anonymous$1: Int
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$f): dom$Type), dom$Type$Function())
  special$invoke_function_object(local$f)
  ret := anonymous$1
  goto label$ret
  label label$ret
}

/inlining_lambdas.kt:(65,77): info: Generated Viper text for explicit_arg:
method global$fun_explicit_arg$fun_take$$return$T_Int() returns (ret: Int)
{
  var anonymous$1: Int
  if (true) {
    var anonymous$2: Int
    var anonymous$3: Int
    anonymous$3 := 0
    if (true) {
      anonymous$2 := anonymous$3 + anonymous$3
    }
    anonymous$1 := anonymous$2
    goto inline_label$1$ret
    label inline_label$1$ret
  }
  ret := anonymous$1
  goto label$ret
  label label$ret
}

/inlining_lambdas.kt:(127,139): info: Generated Viper text for implicit_arg:
method global$fun_implicit_arg$fun_take$$return$T_Int() returns (ret: Int)
{
  var anonymous$1: Int
  if (true) {
    var anonymous$2: Int
    var anonymous$3: Int
    anonymous$3 := 0
    if (true) {
      anonymous$2 := anonymous$3 * 2
    }
    anonymous$1 := anonymous$2
    goto inline_label$1$ret
    label inline_label$1$ret
  }
  ret := anonymous$1
  goto label$ret
  label label$ret
}

/inlining_lambdas.kt:(185,194): info: Generated Viper text for lambda_if:
method global$fun_lambda_if$fun_take$$return$T_Int() returns (ret: Int)
{
  var anonymous$1: Int
  if (true) {
    var anonymous$2: Int
    var anonymous$3: Int
    anonymous$3 := 0
    if (true) {
      var anonymous$4: Int
      if (anonymous$3 == 0) {
        anonymous$4 := anonymous$3 + 1
      } else {
        anonymous$4 := anonymous$3 + 2}
      anonymous$2 := anonymous$4
    }
    anonymous$1 := anonymous$2
    goto inline_label$1$ret
    label inline_label$1$ret
  }
  ret := anonymous$1
  goto label$ret
  label label$ret
}

/inlining_lambdas.kt:(325,346): info: Generated Viper text for return_value_not_used:
method global$fun_return_value_not_used$fun_take$$return$T_Unit()
  returns (ret: dom$Unit)
{
  var anonymous$1: Int
  if (true) {
    var anonymous$2: Int
    var anonymous$3: Int
    anonymous$3 := 0
    if (true) {
      anonymous$2 := anonymous$3
    }
    anonymous$1 := anonymous$2
    goto inline_label$1$ret
    label inline_label$1$ret
  }
  label label$ret
}

/inlining_lambdas.kt:(382,391): info: Generated Viper text for shadowing:
method global$fun_shadowing$fun_take$$return$T_Int() returns (ret: Int)
{
  var local1$x: Int
  var local1$y: Int
  var anonymous$1: Int
  local1$x := 1
  local1$y := 1
  if (true) {
    var anonymous$2: Int
    var anonymous$3: Int
    anonymous$3 := 0
    if (true) {
      var local3$y: Int
      local3$y := 0
      anonymous$2 := anonymous$3 + local3$y
    }
    anonymous$1 := anonymous$2
    goto inline_label$1$ret
    label inline_label$1$ret
  }
  ret := anonymous$1
  goto label$ret
  label label$ret
}

/inlining_lambdas.kt:(537,540): info: Generated Viper text for foo:
method global$fun_foo$fun_take$$return$T_Int() returns (ret: Int)
{
  var local1$x: Int
  var anonymous$1: Int
  local1$x := 2
  if (true) {
    var anonymous$2: Int
    var anonymous$3: Int
    anonymous$3 := 0
    if (true) {
      anonymous$2 := anonymous$3 + 1
    }
    anonymous$1 := anonymous$2
    goto inline_label$1$ret
    label inline_label$1$ret
  }
  ret := anonymous$1
  goto label$ret
  label label$ret
}

/inlining_lambdas.kt:(604,610): info: Generated Viper text for nested:
method global$fun_nested$fun_take$$return$T_Int() returns (ret: Int)
{
  var local1$x: Int
  var anonymous$1: Int
  local1$x := 2
  if (true) {
    var local2$x: Int
    var anonymous$2: Int
    local2$x := 2
    if (true) {
      var anonymous$3: Int
      var anonymous$4: Int
      anonymous$4 := 0
      if (true) {
        anonymous$3 := anonymous$4 + 1
      }
      anonymous$2 := anonymous$3
      goto inline_label$2$ret
      label inline_label$2$ret
    }
    anonymous$1 := anonymous$2
    goto inline_label$1$ret
    label inline_label$1$ret
  }
  ret := anonymous$1
  goto label$ret
  label label$ret
}
