@R|NonNullApi|() public open class A : R|kotlin/Any| {
    public open operator fun foo1(x: R|kotlin/String|): R|kotlin/String|

    public open operator fun foo2(x: R|kotlin/String|): R|kotlin/String|

    public open operator fun foo3(x: R|kotlin/String|): R|kotlin/String|

    @R|javax/annotation/Nullable|() public open operator fun bar1(@R|javax/annotation/Nullable|() x: R|kotlin/String?|): R|kotlin/String?|

    @R|javax/annotation/Nullable|() public open operator fun bar2(@R|javax/annotation/Nullable|() x: R|kotlin/String?|): R|kotlin/String?|

    public open operator fun baz(@R|javax/annotation/Nonnull|() x: R|kotlin/String|): R|kotlin/String|

    public constructor(): R|A|

}
@R|NonNullApi|() public abstract interface AInt : R|kotlin/Any| {
    public abstract operator fun foo1(x: R|kotlin/String|): R|kotlin/CharSequence|

    public abstract operator fun foo2(x: R|kotlin/String|): R|kotlin/CharSequence|

    public abstract operator fun foo3(x: R|kotlin/String|): R|kotlin/CharSequence|

    @R|javax/annotation/Nullable|() public abstract operator fun bar1(@R|javax/annotation/Nullable|() x: R|kotlin/String?|): R|kotlin/CharSequence?|

    @R|javax/annotation/Nullable|() public abstract operator fun bar2(@R|javax/annotation/Nullable|() x: R|kotlin/String?|): R|kotlin/CharSequence?|

    public abstract operator fun baz(@R|javax/annotation/Nonnull|() x: R|kotlin/String|): R|kotlin/CharSequence|

}
@R|NullableApi|() public open class B : R|A|, R|AInt| {
    public open operator fun foo1(x: R|kotlin/String|): R|kotlin/String|

    @R|javax/annotation/Nonnull|() public open operator fun foo2(@R|javax/annotation/Nonnull|() x: R|kotlin/String|): R|kotlin/String|

    public open operator fun bar1(x: R|kotlin/String?|): R|kotlin/String?|

    public open operator fun baz(x: R|kotlin/String|): R|kotlin/String|

    public constructor(): R|B|

}
@R|NonNullApi|() public open class C : R|A|, R|AInt| {
    public open operator fun foo1(x: R|kotlin/String|): R|kotlin/String|

    public open operator fun foo2(@R|javax/annotation/Nonnull|() x: R|kotlin/String|): R|kotlin/String|

    public open operator fun bar1(x: R|kotlin/String?|): R|kotlin/String?|

    @R|javax/annotation/Nullable|() public open operator fun bar2(@R|javax/annotation/Nullable|() x: R|kotlin/String?|): R|kotlin/String?|

    public open operator fun baz(x: R|kotlin/String|): R|kotlin/String|

    public constructor(): R|C|

}
@R|java/lang/annotation/Target|(R|java/lang/annotation/ElementType.TYPE|()) @R|java/lang/annotation/Retention|(R|java/lang/annotation/RetentionPolicy.RUNTIME|()) @R|java/lang/annotation/Documented|() @R|javax/annotation/Nonnull|() @R|javax/annotation/meta/TypeQualifierDefault|(<implicitArrayOf>(R|java/lang/annotation/ElementType.METHOD|(), R|java/lang/annotation/ElementType.PARAMETER|(), R|java/lang/annotation/ElementType.FIELD|())) public abstract annotation class NonNullApi : R|kotlin/Annotation| {
}
@R|java/lang/annotation/Target|(R|java/lang/annotation/ElementType.TYPE|()) @R|java/lang/annotation/Retention|(R|java/lang/annotation/RetentionPolicy.RUNTIME|()) @R|java/lang/annotation/Documented|() @R|javax/annotation/CheckForNull|() @R|javax/annotation/meta/TypeQualifierDefault|(<implicitArrayOf>(R|java/lang/annotation/ElementType.METHOD|(), R|java/lang/annotation/ElementType.PARAMETER|(), R|java/lang/annotation/ElementType.FIELD|())) public abstract annotation class NullableApi : R|kotlin/Annotation| {
}
