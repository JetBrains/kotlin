buildsystem.type.gradle.groovy=Gradle Groovy
buildsystem.type.gradle.kotlin=Gradle Kotlin
buildsystem.type.intellij=IntelliJ
buildsystem.type.maven=Maven

error.template.not.found=Template with an id {0} is not found
error.required.settings.are.not.present=The following required settings is not present
error.configurator.not.found=Module type {0} was not found
error.invalid.module.dependency=Invalid module dependency from module {0} to {1}

module.configuration.group.android.native=Android Native
module.configuration.group.ios=iOS
module.configuration.group.linux=Linux
module.configuration.group.macos=macOS
module.configuration.group.windows.mingw=Windows (MinGW)

module.kind.android.module=Android Module
module.kind.ios.module=iOS Module
module.kind.js.module=JS Module
module.kind.module=Module
module.kind.mpp.module=MPP Module
module.kind.target=Target

plugin.buildsystem.setting.type=Build System
plugin.buildsystem.setting.type.error.wrong.project.kind={0} cannot be generated using {1}

plugin.kotlin.downloading.kotlin.versions=Downloading list of Kotlin versions
plugin.kotlin.setting.modules=Modules
plugin.kotlin.setting.modules.error.duplicated.modules=There are {0} modules with name {1}
plugin.kotlin.setting.modules.error.duplicated.targets=There are {0} targets with name {1}

plugin.kotlin.setting.project.kind=Project Kind

project.kind.android=Android project
project.kind.kotlin.js=Kotlin/JS project
project.kind.multiplatform=Multiplatform project
project.kind.singleplatform=Singleplatform project

project=Project

plugin.structure.setting.location=Location
plugin.structure.setting.name=Name
plugin.structure.setting.group.id=Group ID
plugin.structure.setting.artifact.id=Artifact ID
plugin.structure.setting.version=Version

plugin.android.setting.sdk=Android SDK


validation.should.not.be.blank={0} should not be blank
validation.identifier={0} should consist only of letters, digits{1}
validation.identifier.additional.symbols=, and symbols: {0}
validation.file.should.exists=File for {0} should exists

version.error.bad.format=Bad version format for setting {0}
parse.error.no.value.for.key=No value was found for a key {0}

module.type.jvm=Kotlin/JVM
module.type.js=Kotlin/JS
module.type.common=Common
module.type.android=Android
module.type.native=Kotlin/Native

module.type.ios=iOS

module.name=Module name
module.name.with.name=Module name {0}

module.configurator.js=JS for Browser

module.configurator.android=Android
module.configurator.android.setting.android.plugin=Android Plugin
module.configurator.android.setting.android.plugin.application=Android Application
module.configurator.android.setting.android.plugin.library=Android

module.configurator.common=Common

module.configurator.jvm=JVM
module.configurator.jvm.setting.target.jvm.version=Target JVM Version
module.configurator.jvm.setting.java.support=Java language support

module.configurator.mpp=Multiplatform
module.configurator.ios=IOS
module.configurator.ios.requires.xcode=Requires Xcode

module.configurator.js.browser=Browser
module.configurator.js.node=Node.js

module.configurator.tests.setting.framework=Test Framework
module.configurator.tests.setting.framework.junit4=JUnit 4
module.configurator.tests.setting.framework.junit5=JUnit 5
module.configurator.tests.setting.framework.test.ng=Test NG
module.configurator.tests.setting.framework.js=JavaScript
module.configurator.tests.setting.framework.common=common
module.configurator.native.for.current.system=Your system

project.template.empty.singleplatform.title=Backend Application
project.template.empty.singleplatform.description=Create a backend application with Kotlin/JVM.

project.template.empty.mpp.title=Multiplatform Application
project.template.empty.mpp.description=Create applications for different platforms that support sharing common code.

project.template.empty.jvm.console.title=Console Application
project.template.empty.jvm.console.description=Create a console application with Kotlin/JVM. Use it for prototyping or testing purposes.

project.template.mpp.lib.title=Multiplatform Library
project.template.mpp.lib.description=Create a library for sharing common code among different platforms.

project.template.full.stack.title=Full-Stack Web Application
project.template.full.stack.description=Create a fully-functional web application using Kotlin/JS for the frontend and Kotlin/JVM for the backend.

project.template.native.console.title=Native Application
project.template.native.console.description=Create an application with Kotlin/Native that works as a standalone application under a specific platform.

project.template.frontend.title=Frontend Application
project.template.frontend.description=Create a frontend application with Kotlin/JS if you already have a backend.

project.template.mpp.mobile.title=Multiplatform Mobile Application
project.template.mpp.mobile.description=Create mobile applications for iOS and Android with Kotlin Multiplatform Mobile, which supports sharing common code between platforms.

project.template.mpp.mobile.lib.title=Multiplatform Mobile Library
project.template.mpp.mobile.lib.description=Create a library that supports sharing code between iOS and Android.


module.template.console.jvm.title=Console Application
module.template.console.jvm.description=Simple "Hello World!" Kotlin/JVM application that works in the console

module.template.ktor.server.title=Ktor Server
module.template.ktor.server.description=Configurable Ktor web server for building web applications
module.template.ktor.server.setting.engine=Ktor Server Engine
module.template.ktor.server.setting.engine.netty=Netty
module.template.ktor.server.setting.engine.tomcat=Tomcat
module.template.ktor.server.setting.engine.jetty=Jetty

module.template.native.console.title=Native Application
module.template.native.console.description=Simple Kotlin/Native application for your operating system

module.template.js.simple.title=Frontend Application
module.template.js.simple.description=Configurable Kotlin/JS frontend application
module.template.js.simple.run.configuration.dev=BrowserDevelopmentRun in continuous mode
module.template.js.simple.run.configuration.prod=BrowserProductionRun in continuous mode
module.template.js.simple.setting.rendering.engine=Rendering engine
module.template.js.simple.setting.rendering.kotlinx.html=Use statically typed Kotlinx.html DSL
module.template.js.simple.setting.rendering.react=Use Kotlin-wrapped React library
module.template.js.simple.setting.rendering.react.styled=Use Kotlin-wrapped React framework together with Styled Components



