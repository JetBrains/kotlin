public class BaseClass {
    public method <init>(): void
    public final method getFromClass(p0: java.lang.Object): java.lang.Object
}


public final class C {
    public final static field INSTANCE: C
    private static field p: int
    private method <init>(): void
    public final method f(@org.jetbrains.annotations.NotNull p0: java.lang.String): int
    public final method f(p0: boolean): int
    public final method f(p0: int): int
    public method fromInterface(p0: java.lang.Object): java.lang.Object
    public final method g1(p0: java.lang.Object): java.lang.Object
    public @org.jetbrains.annotations.NotNull method genericFromSuper(@org.jetbrains.annotations.NotNull p0: java.lang.String): java.lang.String
    public synthetic method genericFromSuper(p0: java.lang.Object): java.lang.Object
    public final method getExt(p0: int): int
    public final method getG2(p0: java.lang.Object): java.lang.Object
    public final method getP(): int
    public final method setP(p0: int): void
}


public interface I {
    inner class I/DefaultImpls
    public abstract method fromInterface(p0: java.lang.Object): java.lang.Object
    public abstract method genericFromSuper(p0: java.lang.Object): java.lang.Object
}


public final class I/DefaultImpls {
    inner class I/DefaultImpls
    public static method fromInterface(p0: I, p1: java.lang.Object): java.lang.Object
    public static method genericFromSuper(p0: I, p1: java.lang.Object): java.lang.Object
}


public final class UseImportedMemberKt {
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
}
