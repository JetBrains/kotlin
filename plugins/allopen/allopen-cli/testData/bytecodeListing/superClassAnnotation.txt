@java.lang.annotation.Retention
@kotlin.Metadata
public annotation class AllOpen {
    // source: 'superClassAnnotation.kt'
}

@kotlin.Metadata
public class BaseImpl {
    // source: 'superClassAnnotation.kt'
    public method <init>(): void
    public method baseImplMethod_ShouldBeOpen(): void
}

@kotlin.Metadata
public class BaseImpl2_ShouldBeOpen {
    // source: 'superClassAnnotation.kt'
    private final @org.jetbrains.annotations.NotNull field baseImpl2Property_ShouldBeOpen: java.lang.String
    public method <init>(): void
    public method baseImpl2Method_ShouldBeOpen(): void
    public @org.jetbrains.annotations.NotNull method getBaseImpl2Property_ShouldBeOpen(): java.lang.String
}

@AllOpen
@kotlin.Metadata
public abstract class Base_ShouldBeOpen {
    // source: 'superClassAnnotation.kt'
    public method <init>(): void
    public method baseMethod(): void
}

@kotlin.Metadata
public final class Intf$DefaultImpls {
    // source: 'superClassAnnotation.kt'
    public static method intfMethod(@org.jetbrains.annotations.NotNull p0: Intf): void
    public final inner class Intf$DefaultImpls
}

@AllOpen
@kotlin.Metadata
public interface Intf {
    // source: 'superClassAnnotation.kt'
    public abstract method intfMethod(): void
    public final inner class Intf$DefaultImpls
}

@kotlin.Metadata
public class IntfImpl {
    // source: 'superClassAnnotation.kt'
    public method <init>(): void
    public method intfImplMethod_ShouldBeOpen(): void
    public method intfMethod(): void
}

@kotlin.Metadata
public class IntfImpl2_ShouldBeOpen {
    // source: 'superClassAnnotation.kt'
    public method <init>(): void
    public method intfImpl2Method_ShouldBeOpen(): void
}
