FILE: nameClashes.kt
    context(x: R|kotlin/String|, y: R|kotlin/Int|)
    public final fun noClash(z: R|kotlin/Boolean|): R|kotlin/Unit| {
    }
    context(x: R|kotlin/String|, x: R|kotlin/Int|)
    public final fun clashInContext(z: R|kotlin/Boolean|): R|kotlin/Unit| {
    }
    context(x: R|kotlin/String|, y: R|kotlin/Int|)
    public final fun clashBetweenContextAndValueParameter(x: R|kotlin/Boolean|): R|kotlin/Unit| {
    }
    context(x: R|kotlin/String|, x: R|kotlin/Int|)
    public final val clashInPropertyContext: R|kotlin/String|
        public get(): R|kotlin/String| {
            ^ String()
        }
    public abstract interface I : R|kotlin/Any| {
        context(value: R|kotlin/String|)
        public abstract var R|kotlin/Any|.propertyWithContextNamedValue: R|kotlin/String|
            public get(): R|kotlin/String|
            public set(value: R|kotlin/String|): R|kotlin/Unit|

    }
    context(x: R|kotlin/String|)
    public final var clashBetweenPropertyContextAndSetterParam: R|kotlin/String|
        public get(): R|kotlin/String| {
            ^ String()
        }
        public set(x: R|kotlin/String|): R|kotlin/Unit| {
        }
    context(<unused var>: R|kotlin/String|, <unused var>: R|kotlin/Int|)
    public final fun multipleUnnamed(): R|kotlin/Unit| {
    }
    context(<unused var>: R|kotlin/String|, <unused var>: R|kotlin/Int|)
    public final fun multipleUnnamedQuoted(): R|kotlin/Unit| {
    }
