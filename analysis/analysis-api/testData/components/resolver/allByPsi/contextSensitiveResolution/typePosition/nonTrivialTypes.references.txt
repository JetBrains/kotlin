KtNameReferenceExpression(75,81): 'String'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin) class String : kotlin.Comparable<kotlin.String>, kotlin.CharSequence, java.io.Serializable

KtNameReferenceExpression(84,92): 'MySealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) interface MySealed

KtNameReferenceExpression(116,122): 'String'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin) class String : kotlin.Comparable<kotlin.String>, kotlin.CharSequence, java.io.Serializable

KtNameReferenceExpression(125,133): 'MySealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) interface MySealed

KtNameReferenceExpression(204,213): 'MyGeneric'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) interface MyGeneric<E1>

KtNameReferenceExpression(214,216): 'E2'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: MyGenericSealed) E2

KtNameReferenceExpression(242,248): 'String'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin) class String : kotlin.Comparable<kotlin.String>, kotlin.CharSequence, java.io.Serializable

KtNameReferenceExpression(251,266): 'MyGenericSealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) interface MyGenericSealed<E2> : MyGeneric<E2>

KtNameReferenceExpression(267,273): 'String'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin) class String : kotlin.Comparable<kotlin.String>, kotlin.CharSequence, java.io.Serializable

KtNameReferenceExpression(298,304): 'String'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin) class String : kotlin.Comparable<kotlin.String>, kotlin.CharSequence, java.io.Serializable

KtNameReferenceExpression(307,322): 'MyGenericSealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) interface MyGenericSealed<E2> : MyGeneric<E2>

KtNameReferenceExpression(323,329): 'String'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin) class String : kotlin.Comparable<kotlin.String>, kotlin.CharSequence, java.io.Serializable

KtNameReferenceExpression(347,356): 'MyGeneric'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) interface MyGeneric<E1>

KtNameReferenceExpression(357,360): 'Any'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin) open class Any

KtNameReferenceExpression(367,379): 'CharSequence'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin) interface CharSequence

KtNameReferenceExpression(403,412): 'JavaClass'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) open class JavaClass

KtCallExpression(413,418): 'foo()'
  KtInvokeFunctionReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(413,416): 'foo'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in JavaClass) open fun foo(): MySealed!

KtNameReferenceExpression(433,437): 'Left'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) class Left(x: kotlin.String) : MySealed

KtNameReferenceExpression(441,444): 'foo'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: main) val foo: MySealed!

KtNameReferenceExpression(445,446): 'x'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in MySealed.Left) val x: kotlin.String

KtNameReferenceExpression(458,463): 'Right'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MySealed) class Right(y: kotlin.String) : MySealed

KtNameReferenceExpression(467,470): 'foo'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in <local>: main) val foo: MySealed!

KtNameReferenceExpression(471,472): 'y'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in MySealed.Right) val y: kotlin.String

KtNameReferenceExpression(583,585): 'mg'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      mg: MyGeneric<kotlin.Any>

KtOperationReferenceExpression(586,588): 'as'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(589,604): 'MyGenericSealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) interface MyGenericSealed<E2> : MyGeneric<E2>

KtNameReferenceExpression(605,611): 'String'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin) class String : kotlin.Comparable<kotlin.String>, kotlin.CharSequence, java.io.Serializable

KtNameReferenceExpression(623,625): 'mg'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      mg: MyGeneric<kotlin.Any>

KtNameReferenceExpression(640,644): 'Left'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MyGenericSealed) class Left(x: kotlin.String) : MyGenericSealed<kotlin.String>

KtNameReferenceExpression(648,650): 'mg'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      mg: MyGeneric<kotlin.Any>

KtNameReferenceExpression(651,652): 'x'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in MyGenericSealed.Left) val x: kotlin.String

KtNameReferenceExpression(664,669): 'Right'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: true
    symbols:
      (in MyGenericSealed) class Right(y: kotlin.String) : MyGenericSealed<kotlin.String>

KtNameReferenceExpression(673,675): 'mg'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      mg: MyGeneric<kotlin.Any>

KtNameReferenceExpression(676,677): 'y'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in MyGenericSealed.Right) val y: kotlin.String

KtNameReferenceExpression(804,806): 'cs'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      cs: kotlin.CharSequence

KtOperationReferenceExpression(807,809): 'as'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(810,825): 'MyGenericSealed'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in ROOT) interface MyGenericSealed<E2> : MyGeneric<E2>

KtNameReferenceExpression(826,832): 'String'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      (in kotlin) class String : kotlin.Comparable<kotlin.String>, kotlin.CharSequence, java.io.Serializable

KtNameReferenceExpression(844,846): 'cs'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      cs: kotlin.CharSequence

KtNameReferenceExpression(861,865): 'Left'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(869,871): 'cs'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      cs: kotlin.CharSequence

KtNameReferenceExpression(872,873): 'x'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(885,890): 'Right'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)

KtNameReferenceExpression(894,896): 'cs'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      cs: kotlin.CharSequence

KtNameReferenceExpression(897,898): 'y'
  KtSimpleNameReference:
    isImplicitReferenceToCompanion: false
    usesContextSensitiveResolution: false
    symbols:
      Nothing (Unresolved reference)