KT element: KtClass
KT element text:
public interface MyInterface {
    @test.RegularAnno public abstract val property: @test.TypeAnno kotlin.String /* hasBackingField: false */

    @test.RegularAnno public abstract fun function(@test.RegularAnno argument: @test.TypeAnno kotlin.Int): @test.TypeAnno kotlin.Int
}
FIR element: FirRegularClassImpl
FIR source kind: KtRealSourceElementKind

FIR element rendered:
public abstract [ResolvedTo(BODY_RESOLVE)] [IsNewPlaceForBodyGeneration=true] interface MyInterface : R|kotlin/Any| {
    @R|test/RegularAnno|() public abstract [ResolvedTo(BODY_RESOLVE)] fun function([ResolvedTo(BODY_RESOLVE)] @R|test/RegularAnno|() argument: R|@R|test/TypeAnno|()  kotlin/Int|): R|@R|test/TypeAnno|()  kotlin/Int|

    @R|test/RegularAnno|() public abstract [ResolvedTo(BODY_RESOLVE)] [HasBackingFieldKey=false] val property: R|@R|test/TypeAnno|()  kotlin/String|
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=MyInterface] get(): R|@R|test/TypeAnno|()  kotlin/String|

}
