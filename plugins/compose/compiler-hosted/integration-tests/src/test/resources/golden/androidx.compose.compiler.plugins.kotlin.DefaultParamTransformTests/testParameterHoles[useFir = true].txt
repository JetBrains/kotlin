//
// Source
// ------------------------------------------

import androidx.compose.runtime.Composable
import androidx.compose.runtime.NonRestartableComposable


@Composable
fun Test() {
    A(0, 1, 2)
    A(a = 0, c = 2)
}

//
// Transformed IR
// ------------------------------------------

@Composable
fun Test(%composer: Composer?, %changed: Int) {
  %composer = %composer.startRestartGroup(<>)
  sourceInformation(%composer, "C(Test)<A(0,>,<A(a>:Test.kt")
  if (%changed != 0 || !%composer.skipping) {
    if (isTraceInProgress()) {
      traceEventStart(<>, %changed, -1, <>)
    }
    A(0, 1, 2, 0, 0, %composer, 0b000110110110, 0b00011000)
    A(0, 0, 2, 0, 0, %composer, 0b000110000110, 0b00011010)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    %composer.skipToGroupEnd()
  }
  %composer.endRestartGroup()?.updateScope { %composer: Composer?, %force: Int ->
    Test(%composer, updateChangedFlags(%changed or 0b0001))
  }
}
