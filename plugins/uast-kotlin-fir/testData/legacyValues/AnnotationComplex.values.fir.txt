UFile (package = ) [public abstract annotation Annotation {...]
    UClass (name = Annotation) [public abstract annotation Annotation {...}]
        UAnnotationMethod (name = strings) [public abstract fun strings() : java.lang.String[] = UastEmptyExpression]
    UClass (name = A) [public final class A {...}]
        UAnnotation (fqName = not-implemented-annotation) [@not-implemented-annotation]
        UMethod (name = A) [public fun A() = UastEmptyExpression]
    UClass (name = AnnotationInner) [public abstract annotation AnnotationInner {...}]
        UAnnotationMethod (name = value) [public abstract fun value() : Annotation = UastEmptyExpression]
    UClass (name = B1) [public final class B1 {...}]
        UAnnotation (fqName = not-implemented-annotation) [@not-implemented-annotation]
        UMethod (name = B1) [public fun B1() = UastEmptyExpression]
    UClass (name = B2) [public final class B2 {...}]
        UAnnotation (fqName = not-implemented-annotation) [@not-implemented-annotation]
        UMethod (name = B2) [public fun B2() = UastEmptyExpression]
    UClass (name = AnnotationArray) [public abstract annotation AnnotationArray {...}]
        UAnnotationMethod (name = value) [public abstract fun value() : Annotation[] = UastEmptyExpression]
    UClass (name = C) [public final class C {...}]
        UAnnotation (fqName = not-implemented-annotation) [@not-implemented-annotation]
        UMethod (name = C) [public fun C() = UastEmptyExpression]
    UClass (name = C2) [public final class C2 {...}]
        UAnnotation (fqName = not-implemented-annotation) [@not-implemented-annotation]
        UMethod (name = C2) [public fun C2() = UastEmptyExpression]
