class A {
  val a: Int
    field = 20
    get

  val it: Int
    field = 4
    get

  @Suppress(names = ["INCONSISTENT_BACKING_FIELD_TYPE", "VAR_PROPERTY_WITH_EXPLICIT_BACKING_FIELD"])
  var invertedTypes: Number
    field = 42
    @Suppress(names = ["PROPERTY_WITH_EXPLICIT_FIELD_AND_ACCESSORS"])
    get(): Int {
      return when {
        greater(arg0 = <this>.#invertedTypes.toInt(), arg1 = 10) -> <this>.#invertedTypes.toInt()
        else -> 10
      }
    }
    set

  val p: Int
    field = 5
    get(): Int {
      return <this>.#p
    }

  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

}

