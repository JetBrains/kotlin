FILE fqName:<root> fileName:/literals.kt
  PROPERTY name:test1 visibility:public modality:FINAL flags:val
    FIELD PROPERTY_BACKING_FIELD name:test1 type:kotlin.Int visibility:public flags:final,static
      EXPRESSION_BODY
        CONST Int type=kotlin.Int value=1
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-test1> visibility:public modality:FINAL <> () returnType:kotlin.Int flags:
      correspondingProperty: PROPERTY name:test1 visibility:public modality:FINAL flags:val
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-test1>(): Int'
          GET_FIELD 'test1: Int' type=kotlin.Int origin=null
  PROPERTY name:test2 visibility:public modality:FINAL flags:val
    FIELD PROPERTY_BACKING_FIELD name:test2 type:kotlin.Int visibility:public flags:final,static
      EXPRESSION_BODY
        CONST Int type=kotlin.Int value=-1
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-test2> visibility:public modality:FINAL <> () returnType:kotlin.Int flags:
      correspondingProperty: PROPERTY name:test2 visibility:public modality:FINAL flags:val
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-test2>(): Int'
          GET_FIELD 'test2: Int' type=kotlin.Int origin=null
  PROPERTY name:test3 visibility:public modality:FINAL flags:val
    FIELD PROPERTY_BACKING_FIELD name:test3 type:kotlin.Boolean visibility:public flags:final,static
      EXPRESSION_BODY
        CONST Boolean type=kotlin.Boolean value=true
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-test3> visibility:public modality:FINAL <> () returnType:kotlin.Boolean flags:
      correspondingProperty: PROPERTY name:test3 visibility:public modality:FINAL flags:val
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-test3>(): Boolean'
          GET_FIELD 'test3: Boolean' type=kotlin.Boolean origin=null
  PROPERTY name:test4 visibility:public modality:FINAL flags:val
    FIELD PROPERTY_BACKING_FIELD name:test4 type:kotlin.Boolean visibility:public flags:final,static
      EXPRESSION_BODY
        CONST Boolean type=kotlin.Boolean value=false
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-test4> visibility:public modality:FINAL <> () returnType:kotlin.Boolean flags:
      correspondingProperty: PROPERTY name:test4 visibility:public modality:FINAL flags:val
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-test4>(): Boolean'
          GET_FIELD 'test4: Boolean' type=kotlin.Boolean origin=null
  PROPERTY name:test5 visibility:public modality:FINAL flags:val
    FIELD PROPERTY_BACKING_FIELD name:test5 type:kotlin.String visibility:public flags:final,static
      EXPRESSION_BODY
        CONST String type=kotlin.String value="abc"
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-test5> visibility:public modality:FINAL <> () returnType:kotlin.String flags:
      correspondingProperty: PROPERTY name:test5 visibility:public modality:FINAL flags:val
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-test5>(): String'
          GET_FIELD 'test5: String' type=kotlin.String origin=null
  PROPERTY name:test6 visibility:public modality:FINAL flags:val
    FIELD PROPERTY_BACKING_FIELD name:test6 type:kotlin.Nothing? visibility:public flags:final,static
      EXPRESSION_BODY
        CONST Null type=kotlin.Nothing? value=null
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-test6> visibility:public modality:FINAL <> () returnType:kotlin.Nothing? flags:
      correspondingProperty: PROPERTY name:test6 visibility:public modality:FINAL flags:val
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-test6>(): Nothing?'
          GET_FIELD 'test6: Nothing?' type=kotlin.Nothing? origin=null
  PROPERTY name:test7 visibility:public modality:FINAL flags:val
    FIELD PROPERTY_BACKING_FIELD name:test7 type:kotlin.Long visibility:public flags:final,static
      EXPRESSION_BODY
        CONST Long type=kotlin.Long value=1
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-test7> visibility:public modality:FINAL <> () returnType:kotlin.Long flags:
      correspondingProperty: PROPERTY name:test7 visibility:public modality:FINAL flags:val
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-test7>(): Long'
          GET_FIELD 'test7: Long' type=kotlin.Long origin=null
  PROPERTY name:test8 visibility:public modality:FINAL flags:val
    FIELD PROPERTY_BACKING_FIELD name:test8 type:kotlin.Long visibility:public flags:final,static
      EXPRESSION_BODY
        CONST Long type=kotlin.Long value=-1
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-test8> visibility:public modality:FINAL <> () returnType:kotlin.Long flags:
      correspondingProperty: PROPERTY name:test8 visibility:public modality:FINAL flags:val
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-test8>(): Long'
          GET_FIELD 'test8: Long' type=kotlin.Long origin=null
  PROPERTY name:test9 visibility:public modality:FINAL flags:val
    FIELD PROPERTY_BACKING_FIELD name:test9 type:kotlin.Double visibility:public flags:final,static
      EXPRESSION_BODY
        CONST Double type=kotlin.Double value=1.0
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-test9> visibility:public modality:FINAL <> () returnType:kotlin.Double flags:
      correspondingProperty: PROPERTY name:test9 visibility:public modality:FINAL flags:val
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-test9>(): Double'
          GET_FIELD 'test9: Double' type=kotlin.Double origin=null
  PROPERTY name:test10 visibility:public modality:FINAL flags:val
    FIELD PROPERTY_BACKING_FIELD name:test10 type:kotlin.Double visibility:public flags:final,static
      EXPRESSION_BODY
        CONST Double type=kotlin.Double value=-1.0
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-test10> visibility:public modality:FINAL <> () returnType:kotlin.Double flags:
      correspondingProperty: PROPERTY name:test10 visibility:public modality:FINAL flags:val
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-test10>(): Double'
          GET_FIELD 'test10: Double' type=kotlin.Double origin=null
  PROPERTY name:test11 visibility:public modality:FINAL flags:val
    FIELD PROPERTY_BACKING_FIELD name:test11 type:kotlin.Float visibility:public flags:final,static
      EXPRESSION_BODY
        CONST Float type=kotlin.Float value=1.0
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-test11> visibility:public modality:FINAL <> () returnType:kotlin.Float flags:
      correspondingProperty: PROPERTY name:test11 visibility:public modality:FINAL flags:val
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-test11>(): Float'
          GET_FIELD 'test11: Float' type=kotlin.Float origin=null
  PROPERTY name:test12 visibility:public modality:FINAL flags:val
    FIELD PROPERTY_BACKING_FIELD name:test12 type:kotlin.Float visibility:public flags:final,static
      EXPRESSION_BODY
        CONST Float type=kotlin.Float value=-1.0
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-test12> visibility:public modality:FINAL <> () returnType:kotlin.Float flags:
      correspondingProperty: PROPERTY name:test12 visibility:public modality:FINAL flags:val
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-test12>(): Float'
          GET_FIELD 'test12: Float' type=kotlin.Float origin=null
  PROPERTY name:test13 visibility:public modality:FINAL flags:val
    FIELD PROPERTY_BACKING_FIELD name:test13 type:kotlin.Char visibility:public flags:final,static
      EXPRESSION_BODY
        CONST Char type=kotlin.Char value='a'
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-test13> visibility:public modality:FINAL <> () returnType:kotlin.Char flags:
      correspondingProperty: PROPERTY name:test13 visibility:public modality:FINAL flags:val
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-test13>(): Char'
          GET_FIELD 'test13: Char' type=kotlin.Char origin=null
  PROPERTY name:testB visibility:public modality:FINAL flags:val
    FIELD PROPERTY_BACKING_FIELD name:testB type:kotlin.Byte visibility:public flags:final,static
      EXPRESSION_BODY
        CONST Byte type=kotlin.Byte value=1
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-testB> visibility:public modality:FINAL <> () returnType:kotlin.Byte flags:
      correspondingProperty: PROPERTY name:testB visibility:public modality:FINAL flags:val
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-testB>(): Byte'
          GET_FIELD 'testB: Byte' type=kotlin.Byte origin=null
  PROPERTY name:testS visibility:public modality:FINAL flags:val
    FIELD PROPERTY_BACKING_FIELD name:testS type:kotlin.Short visibility:public flags:final,static
      EXPRESSION_BODY
        CONST Short type=kotlin.Short value=1
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-testS> visibility:public modality:FINAL <> () returnType:kotlin.Short flags:
      correspondingProperty: PROPERTY name:testS visibility:public modality:FINAL flags:val
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-testS>(): Short'
          GET_FIELD 'testS: Short' type=kotlin.Short origin=null
  PROPERTY name:testI visibility:public modality:FINAL flags:val
    FIELD PROPERTY_BACKING_FIELD name:testI type:kotlin.Int visibility:public flags:final,static
      EXPRESSION_BODY
        CONST Int type=kotlin.Int value=1
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-testI> visibility:public modality:FINAL <> () returnType:kotlin.Int flags:
      correspondingProperty: PROPERTY name:testI visibility:public modality:FINAL flags:val
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-testI>(): Int'
          GET_FIELD 'testI: Int' type=kotlin.Int origin=null
  PROPERTY name:testL visibility:public modality:FINAL flags:val
    FIELD PROPERTY_BACKING_FIELD name:testL type:kotlin.Long visibility:public flags:final,static
      EXPRESSION_BODY
        CONST Long type=kotlin.Long value=1
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-testL> visibility:public modality:FINAL <> () returnType:kotlin.Long flags:
      correspondingProperty: PROPERTY name:testL visibility:public modality:FINAL flags:val
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-testL>(): Long'
          GET_FIELD 'testL: Long' type=kotlin.Long origin=null

