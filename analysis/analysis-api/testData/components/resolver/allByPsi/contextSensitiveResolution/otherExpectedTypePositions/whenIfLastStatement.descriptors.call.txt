KtFile: 'whenIfLastStatement.kt'
  null

KtPackageDirective(0,0): ''
  null

KtImportList(0,0): ''
  null

KtClass(78,301): 'open class MyClass {'
  null

KtDeclarationModifierList(78,82): 'open'
  null

KtClassBody(97,301): '{'
  null

KtObjectDeclaration(103,137): 'object NestedInheritor : MyClass()'
  null

KtSuperTypeList(128,137): 'MyClass()'
  null

KtSuperTypeCallEntry(128,137): 'MyClass()'
  KaSuccessCallInfo:
    call = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtConstructorCalleeExpression(128,135): 'MyClass'
  KaSuccessCallInfo:
    call = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtTypeReference(128,135): 'MyClass'
  null

KtUserType(128,135): 'MyClass'
  null

KtNameReferenceExpression(128,135): 'MyClass'
  KaSuccessCallInfo:
    call = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtValueArgumentList(135,137): '()'
  null

KtObjectDeclaration(143,299): 'companion object {'
  null

KtDeclarationModifierList(143,152): 'companion'
  null

KtClassBody(160,299): '{'
  null

KtProperty(170,206): 'val myClassProp: MyClass = MyClass()'
  null

KtTypeReference(187,194): 'MyClass'
  null

KtUserType(187,194): 'MyClass'
  null

KtNameReferenceExpression(187,194): 'MyClass'
  null

KtCallExpression(197,206): 'MyClass()'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtNameReferenceExpression(197,204): 'MyClass'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}

KtValueArgumentList(204,206): '()'
  null

KtProperty(215,242): 'val stringProp: String = ""'
  null

KtTypeReference(231,237): 'String'
  null

KtUserType(231,237): 'String'
  null

KtNameReferenceExpression(231,237): 'String'
  null

KtStringTemplateExpression(240,242): '""'
  null

KtNamedFunction(251,293): 'fun getNestedInheritor() = NestedInheritor'
  null

KtParameterList(273,275): '()'
  null

KtNameReferenceExpression(278,293): 'NestedInheritor'
  null

KtProperty(303,349): 'val ClassMemberAlias = MyClass.NestedInheritor'
  null

KtDotQualifiedExpression(326,349): 'MyClass.NestedInheritor'
  null

KtNameReferenceExpression(326,333): 'MyClass'
  null

KtNameReferenceExpression(334,349): 'NestedInheritor'
  null

KtNamedFunction(351,374): 'fun <T>receive(e: T) {}'
  null

KtTypeParameterList(355,358): '<T>'
  null

KtTypeParameter(356,357): 'T'
  null

KtParameterList(365,371): '(e: T)'
  null

KtParameter(366,370): 'e: T'
  null

KtTypeReference(369,370): 'T'
  null

KtUserType(369,370): 'T'
  null

KtNameReferenceExpression(369,370): 'T'
  null

KtBlockExpression(372,374): '{}'
  null

KtNamedFunction(375,407): 'fun <T> run(b: () -> T): T = b()'
  null

KtTypeParameterList(379,382): '<T>'
  null

KtTypeParameter(380,381): 'T'
  null

KtParameterList(386,398): '(b: () -> T)'
  null

KtParameter(387,397): 'b: () -> T'
  null

KtTypeReference(390,397): '() -> T'
  null

KtFunctionType(390,397): '() -> T'
  null

KtParameterList(390,392): '()'
  null

KtTypeReference(396,397): 'T'
  null

KtUserType(396,397): 'T'
  null

KtNameReferenceExpression(396,397): 'T'
  null

KtTypeReference(400,401): 'T'
  null

KtUserType(400,401): 'T'
  null

KtNameReferenceExpression(400,401): 'T'
  null

KtCallExpression(404,407): 'b()'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = b
          isSafeNavigation = false
          type = kotlin.Function0<T>
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = T
          symbol = kotlin/Function0.invoke(<dispatch receiver>: kotlin.Function0<R>): R
          valueParameters = []
          contextParameters = []
          callableId = kotlin/Function0.invoke
      typeArgumentsMapping = {}

KtNameReferenceExpression(404,405): 'b'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = b
          receiverType = null
          returnType = kotlin.Function0<T>
          symbol = b: kotlin.Function0<T>
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtValueArgumentList(405,407): '()'
  null

KtNamedFunction(409,1557): 'fun testIfElse(i: Int) {'
  null

KtParameterList(423,431): '(i: Int)'
  null

KtParameter(424,430): 'i: Int'
  null

KtTypeReference(427,430): 'Int'
  null

KtUserType(427,430): 'Int'
  null

KtNameReferenceExpression(427,430): 'Int'
  null

KtBlockExpression(432,1557): '{'
  null

KtProperty(438,657): 'val s: MyClass ='
  null

KtTypeReference(445,452): 'MyClass'
  null

KtUserType(445,452): 'MyClass'
  null

KtNameReferenceExpression(445,452): 'MyClass'
  null

KtIfExpression(463,657): 'if (i == 0) {'
  null

KtContainerNode(467,473): 'i == 0'
  null

KtBinaryExpression(467,473): 'i == 0'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        0 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(467,468): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(469,471): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        0 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}

KtConstantExpression(472,473): '0'
  null

KtContainerNodeForControlStructureBody(475,542): '{'
  null

KtBlockExpression(475,542): '{'
  null

KtNameReferenceExpression(489,504): 'NestedInheritor'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference: NestedInheritor>

KtNameReferenceExpression(517,532): 'NestedInheritor'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference: NestedInheritor>

KtContainerNodeForControlStructureBody(556,657): 'if (i == 1) {'
  null

KtIfExpression(556,657): 'if (i == 1) {'
  null

KtContainerNode(560,566): 'i == 1'
  null

KtBinaryExpression(560,566): 'i == 1'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        1 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(560,561): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(562,564): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        1 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}

KtConstantExpression(565,566): '1'
  null

KtContainerNodeForControlStructureBody(568,627): '{'
  null

KtBlockExpression(568,627): '{'
  null

KtNameReferenceExpression(582,593): 'myClassProp'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference: myClassProp>

KtNameReferenceExpression(606,617): 'myClassProp'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference: myClassProp>

KtContainerNodeForControlStructureBody(641,657): 'ClassMemberAlias'
  null

KtNameReferenceExpression(641,657): 'ClassMemberAlias'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = ClassMemberAlias
          receiverType = null
          returnType = MyClass.NestedInheritor
          symbol = val ClassMemberAlias: MyClass.NestedInheritor
          contextParameters = []
          callableId = /ClassMemberAlias
      simpleAccess = Read
      typeArgumentsMapping = {}

KtProperty(663,788): 'val s2: MyClass ='
  null

KtTypeReference(671,678): 'MyClass'
  null

KtUserType(671,678): 'MyClass'
  null

KtNameReferenceExpression(671,678): 'MyClass'
  null

KtIfExpression(689,788): 'if (i == 2) {'
  null

KtContainerNode(693,699): 'i == 2'
  null

KtBinaryExpression(693,699): 'i == 2'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        2 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(693,694): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(695,697): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        2 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}

KtConstantExpression(698,699): '2'
  null

KtContainerNodeForControlStructureBody(701,758): '{'
  null

KtBlockExpression(701,758): '{'
  null

KtNameReferenceExpression(715,725): 'stringProp'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference: stringProp>

KtNameReferenceExpression(738,748): 'stringProp'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference: stringProp>

KtContainerNodeForControlStructureBody(772,788): 'ClassMemberAlias'
  null

KtNameReferenceExpression(772,788): 'ClassMemberAlias'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = ClassMemberAlias
          receiverType = null
          returnType = MyClass.NestedInheritor
          symbol = val ClassMemberAlias: MyClass.NestedInheritor
          contextParameters = []
          callableId = /ClassMemberAlias
      simpleAccess = Read
      typeArgumentsMapping = {}

KtCallExpression(794,1278): 'receive<MyClass>('
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        if (i == 0) {
                    NestedInheritor
                    NestedInheritor
                    // KT-76400
                }
                else if (i == 1) {
                    myClassProp
                    myClassProp
                    // KT-76400
                }
                else if (i == 2) {
                    getNestedInheritor()
                    getNestedInheritor()
                }
                else if (i == 3) {
                    stringProp
                    stringProp
                    // KT-76400
                }
                else ClassMemberAlias -> (KaVariableSignature:
          name = e
          receiverType = null
          returnType = MyClass
          symbol = e: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receive(e: T): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = e
              receiverType = null
              returnType = MyClass
              symbol = e: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receive
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtNameReferenceExpression(794,801): 'receive'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        if (i == 0) {
                    NestedInheritor
                    NestedInheritor
                    // KT-76400
                }
                else if (i == 1) {
                    myClassProp
                    myClassProp
                    // KT-76400
                }
                else if (i == 2) {
                    getNestedInheritor()
                    getNestedInheritor()
                }
                else if (i == 3) {
                    stringProp
                    stringProp
                    // KT-76400
                }
                else ClassMemberAlias -> (KaVariableSignature:
          name = e
          receiverType = null
          returnType = MyClass
          symbol = e: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receive(e: T): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = e
              receiverType = null
              returnType = MyClass
              symbol = e: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receive
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtTypeArgumentList(801,810): '<MyClass>'
  null

KtTypeProjection(802,809): 'MyClass'
  null

KtTypeReference(802,809): 'MyClass'
  null

KtUserType(802,809): 'MyClass'
  null

KtNameReferenceExpression(802,809): 'MyClass'
  null

KtValueArgumentList(810,1278): '('
  null

KtValueArgument(820,1272): 'if (i == 0) {'
  null

KtIfExpression(820,1272): 'if (i == 0) {'
  null

KtContainerNode(824,830): 'i == 0'
  null

KtBinaryExpression(824,830): 'i == 0'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        0 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(824,825): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(826,828): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        0 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}

KtConstantExpression(829,830): '0'
  null

KtContainerNodeForControlStructureBody(832,923): '{'
  null

KtBlockExpression(832,923): '{'
  null

KtNameReferenceExpression(846,861): 'NestedInheritor'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference: NestedInheritor>

KtNameReferenceExpression(874,889): 'NestedInheritor'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference: NestedInheritor>

KtContainerNodeForControlStructureBody(937,1272): 'if (i == 1) {'
  null

KtIfExpression(937,1272): 'if (i == 1) {'
  null

KtContainerNode(941,947): 'i == 1'
  null

KtBinaryExpression(941,947): 'i == 1'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        1 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(941,942): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(943,945): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        1 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}

KtConstantExpression(946,947): '1'
  null

KtContainerNodeForControlStructureBody(949,1032): '{'
  null

KtBlockExpression(949,1032): '{'
  null

KtNameReferenceExpression(963,974): 'myClassProp'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference: myClassProp>

KtNameReferenceExpression(987,998): 'myClassProp'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference: myClassProp>

KtContainerNodeForControlStructureBody(1046,1272): 'if (i == 2) {'
  null

KtIfExpression(1046,1272): 'if (i == 2) {'
  null

KtContainerNode(1050,1056): 'i == 2'
  null

KtBinaryExpression(1050,1056): 'i == 2'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        2 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1050,1051): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(1052,1054): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        2 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}

KtConstantExpression(1055,1056): '2'
  null

KtContainerNodeForControlStructureBody(1058,1135): '{'
  null

KtBlockExpression(1058,1135): '{'
  null

KtCallExpression(1072,1092): 'getNestedInheritor()'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference: getNestedInheritor>

KtNameReferenceExpression(1072,1090): 'getNestedInheritor'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference: getNestedInheritor>

KtValueArgumentList(1090,1092): '()'
  null

KtCallExpression(1105,1125): 'getNestedInheritor()'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference: getNestedInheritor>

KtNameReferenceExpression(1105,1123): 'getNestedInheritor'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference: getNestedInheritor>

KtValueArgumentList(1123,1125): '()'
  null

KtContainerNodeForControlStructureBody(1149,1272): 'if (i == 3) {'
  null

KtIfExpression(1149,1272): 'if (i == 3) {'
  null

KtContainerNode(1153,1159): 'i == 3'
  null

KtBinaryExpression(1153,1159): 'i == 3'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        3 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1153,1154): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(1155,1157): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        3 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}

KtConstantExpression(1158,1159): '3'
  null

KtContainerNodeForControlStructureBody(1161,1242): '{'
  null

KtBlockExpression(1161,1242): '{'
  null

KtNameReferenceExpression(1175,1185): 'stringProp'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference: stringProp>

KtNameReferenceExpression(1198,1208): 'stringProp'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference: stringProp>

KtContainerNodeForControlStructureBody(1256,1272): 'ClassMemberAlias'
  null

KtNameReferenceExpression(1256,1272): 'ClassMemberAlias'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = ClassMemberAlias
          receiverType = null
          returnType = MyClass.NestedInheritor
          symbol = val ClassMemberAlias: MyClass.NestedInheritor
          contextParameters = []
          callableId = /ClassMemberAlias
      simpleAccess = Read
      typeArgumentsMapping = {}

KtCallExpression(1284,1555): 'run<MyClass> {'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        {
                if (i == 0) {
                    NestedInheritor
                    NestedInheritor
                    // KT-76400
                }
                else if (i == 1) {
                    myClassProp
                    myClassProp
                    // KT-76400
                }
                else ClassMemberAlias
            } -> (KaVariableSignature:
          name = b
          receiverType = null
          returnType = kotlin.Function0<MyClass>
          symbol = b: kotlin.Function0<T>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = /run(b: kotlin.Function0<T>): T
          valueParameters = [
            KaVariableSignature:
              name = b
              receiverType = null
              returnType = kotlin.Function0<MyClass>
              symbol = b: kotlin.Function0<T>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /run
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtNameReferenceExpression(1284,1287): 'run'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        {
                if (i == 0) {
                    NestedInheritor
                    NestedInheritor
                    // KT-76400
                }
                else if (i == 1) {
                    myClassProp
                    myClassProp
                    // KT-76400
                }
                else ClassMemberAlias
            } -> (KaVariableSignature:
          name = b
          receiverType = null
          returnType = kotlin.Function0<MyClass>
          symbol = b: kotlin.Function0<T>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = /run(b: kotlin.Function0<T>): T
          valueParameters = [
            KaVariableSignature:
              name = b
              receiverType = null
              returnType = kotlin.Function0<MyClass>
              symbol = b: kotlin.Function0<T>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /run
      typeArgumentsMapping = {
        T -> (MyClass)
      }

KtTypeArgumentList(1287,1296): '<MyClass>'
  null

KtTypeProjection(1288,1295): 'MyClass'
  null

KtTypeReference(1288,1295): 'MyClass'
  null

KtUserType(1288,1295): 'MyClass'
  null

KtNameReferenceExpression(1288,1295): 'MyClass'
  null

KtLambdaArgument(1297,1555): '{'
  null

KtLambdaExpression(1297,1555): '{'
  null

KtFunctionLiteral(1297,1555): '{'
  null

KtBlockExpression(1307,1549): 'if (i == 0) {'
  null

KtIfExpression(1307,1549): 'if (i == 0) {'
  null

KtContainerNode(1311,1317): 'i == 0'
  null

KtBinaryExpression(1311,1317): 'i == 0'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        0 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1311,1312): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(1313,1315): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        0 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}

KtConstantExpression(1316,1317): '0'
  null

KtContainerNodeForControlStructureBody(1319,1410): '{'
  null

KtBlockExpression(1319,1410): '{'
  null

KtNameReferenceExpression(1333,1348): 'NestedInheritor'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference: NestedInheritor>

KtNameReferenceExpression(1361,1376): 'NestedInheritor'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference: NestedInheritor>

KtContainerNodeForControlStructureBody(1424,1549): 'if (i == 1) {'
  null

KtIfExpression(1424,1549): 'if (i == 1) {'
  null

KtContainerNode(1428,1434): 'i == 1'
  null

KtBinaryExpression(1428,1434): 'i == 1'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        1 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}

KtNameReferenceExpression(1428,1429): 'i'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}

KtOperationReferenceExpression(1430,1432): '=='
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      argumentMapping = {
        1 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}

KtConstantExpression(1433,1434): '1'
  null

KtContainerNodeForControlStructureBody(1436,1519): '{'
  null

KtBlockExpression(1436,1519): '{'
  null

KtNameReferenceExpression(1450,1461): 'myClassProp'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference: myClassProp>

KtNameReferenceExpression(1474,1485): 'myClassProp'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference: myClassProp>

KtContainerNodeForControlStructureBody(1533,1549): 'ClassMemberAlias'
  null

KtNameReferenceExpression(1533,1549): 'ClassMemberAlias'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = ClassMemberAlias
          receiverType = null
          returnType = MyClass.NestedInheritor
          symbol = val ClassMemberAlias: MyClass.NestedInheritor
          contextParameters = []
          callableId = /ClassMemberAlias
      simpleAccess = Read
      typeArgumentsMapping = {}