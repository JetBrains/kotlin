@kotlin.coroutines.jvm.internal.DebugMetadata
@kotlin.Metadata
final class WhenUnitKt$box$1 {
    field label: int
    inner class WhenUnitKt$box$1
    method <init>(p0: kotlin.coroutines.Continuation): void
    public final @org.jetbrains.annotations.NotNull method create(@org.jetbrains.annotations.NotNull p0: kotlin.coroutines.Continuation): kotlin.coroutines.Continuation
    public final method invoke(p0: java.lang.Object): java.lang.Object
    public final @org.jetbrains.annotations.Nullable method invokeSuspend(@org.jetbrains.annotations.NotNull p0: java.lang.Object): java.lang.Object
}

@kotlin.Metadata
public final class WhenUnitKt {
    private static @org.jetbrains.annotations.NotNull field log: java.lang.String
    inner class WhenUnitKt$box$1
    static method <clinit>(): void
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
    public final static method builder(@org.jetbrains.annotations.NotNull p0: kotlin.jvm.functions.Function1): void
    public final static @org.jetbrains.annotations.NotNull method getLog(): java.lang.String
    public final static @org.jetbrains.annotations.Nullable method process(@org.jetbrains.annotations.NotNull p0: X$A, @org.jetbrains.annotations.NotNull p1: kotlin.coroutines.Continuation): java.lang.Object
    public final static @org.jetbrains.annotations.Nullable method process(@org.jetbrains.annotations.NotNull p0: X$B, @org.jetbrains.annotations.NotNull p1: kotlin.coroutines.Continuation): java.lang.Object
    public final static @org.jetbrains.annotations.Nullable method process(@org.jetbrains.annotations.NotNull p0: X, @org.jetbrains.annotations.NotNull p1: kotlin.coroutines.Continuation): java.lang.Object
    public final static method setLog(@org.jetbrains.annotations.NotNull p0: java.lang.String): void
}

@kotlin.Metadata
public final class X$A {
    inner class X$A
    public method <init>(): void
}

@kotlin.Metadata
public final class X$B {
    inner class X$B
    public method <init>(): void
}

@kotlin.Metadata
public abstract class X {
    inner class X$A
    inner class X$B
    private method <init>(): void
    public synthetic method <init>(p0: kotlin.jvm.internal.DefaultConstructorMarker): void
}
