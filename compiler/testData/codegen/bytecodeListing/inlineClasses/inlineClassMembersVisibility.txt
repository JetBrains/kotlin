@kotlin.Metadata
public final class Z {
    private final field x: int
    private synthetic method <init>(p0: int): void
    public synthetic final static @org.jetbrains.annotations.NotNull method box-impl(p0: int): Z
    public static method constructor-impl(p0: int): int
    public static method constructor-impl(p0: int, p1: int): int
    public static method constructor-impl(p0: long): int
    private static method constructor-impl(p0: short): int
    public method equals(p0: java.lang.Object): boolean
    public static method equals-impl(p0: int, @org.jetbrains.annotations.Nullable p1: java.lang.Object): boolean
    public final static method equals-impl0(p0: int, p1: int): boolean
    public final static method getInternalExtensionVal-impl$test_module(p0: int, @org.jetbrains.annotations.NotNull p1: java.lang.String): int
    public final static method getInternalExtensionVar-impl$test_module(p0: int, @org.jetbrains.annotations.NotNull p1: java.lang.String): int
    public final static method getInternalVal-impl$test_module(p0: int): int
    public final static method getInternalVar-impl$test_module(p0: int): int
    private final static method getPrivateExtensionVal-impl(p0: int, @org.jetbrains.annotations.NotNull p1: java.lang.String): int
    private final static method getPrivateExtensionVar-impl(p0: int, @org.jetbrains.annotations.NotNull p1: java.lang.String): int
    private final static method getPrivateVal-impl(p0: int): int
    private final static method getPrivateVar-impl(p0: int): int
    public final static method getPublicExtensionVal-impl(p0: int, @org.jetbrains.annotations.NotNull p1: java.lang.String): int
    public final static method getPublicExtensionVar-impl(p0: int, @org.jetbrains.annotations.NotNull p1: java.lang.String): int
    public final static method getPublicVal-impl(p0: int): int
    public final static method getPublicVar-impl(p0: int): int
    public final method getX(): int
    public method hashCode(): int
    public static method hashCode-impl(p0: int): int
    public final static method internalExtensionFun-impl$test_module(p0: int, @org.jetbrains.annotations.NotNull p1: java.lang.String): void
    public final static method internalFun-impl$test_module(p0: int): void
    private final static method privateExtensionFun-impl(p0: int, @org.jetbrains.annotations.NotNull p1: java.lang.String): void
    private final static method privateFun-impl(p0: int): void
    public final static method publicExtensionFun-impl(p0: int, @org.jetbrains.annotations.NotNull p1: java.lang.String): void
    public final static method publicFun-impl(p0: int): void
    public final static method setInternalExtensionVar-impl$test_module(p0: int, @org.jetbrains.annotations.NotNull p1: java.lang.String, p2: int): void
    public final static method setInternalVar-impl$test_module(p0: int, p1: int): void
    private final static method setPrivateExtensionVar-impl(p0: int, @org.jetbrains.annotations.NotNull p1: java.lang.String, p2: int): void
    private final static method setPrivateVar-impl(p0: int, p1: int): void
    public final static method setPublicExtensionVar-impl(p0: int, @org.jetbrains.annotations.NotNull p1: java.lang.String, p2: int): void
    public final static method setPublicVar-impl(p0: int, p1: int): void
    public method toString(): java.lang.String
    public static @org.jetbrains.annotations.NotNull method toString-impl(p0: int): java.lang.String
    public synthetic final method unbox-impl(): int
}
