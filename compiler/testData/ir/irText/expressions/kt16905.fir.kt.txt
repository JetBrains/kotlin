class Outer {
  open inner class Inner {
    constructor() /* primary */ {
      super/*Any*/()
      /* <init>() */

    }

  }

  inner class InnerDerived0 : Inner {
    constructor() /* primary */ {
      <this>.super/*Inner*/()
      /* <init>() */

    }

  }

  inner class InnerDerived1 : Inner {
    constructor() /* primary */ {
      <this>.super/*Inner*/()
      /* <init>() */

    }

  }

  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

}

fun test(): Inner {
  return Outer().Inner()
}

typealias OI = Inner
