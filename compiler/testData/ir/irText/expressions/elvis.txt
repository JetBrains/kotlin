FILE fqName:<root> fileName:/elvis.kt
  PROPERTY name:p visibility:public modality:FINAL flags:val
    FIELD PROPERTY_BACKING_FIELD name:p type:kotlin.Any? visibility:public flags:final,static
      EXPRESSION_BODY
        CONST Null type=kotlin.Nothing? value=null
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-p> visibility:public modality:FINAL <> () returnType:kotlin.Any? flags:
      correspondingProperty: PROPERTY name:p visibility:public modality:FINAL flags:val
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-p>(): Any?'
          GET_FIELD 'p: Any?' type=kotlin.Any? origin=null
  FUN name:foo visibility:public modality:FINAL <> () returnType:kotlin.Any? flags:
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='foo(): Any?'
        CONST Null type=kotlin.Nothing? value=null
  FUN name:test1 visibility:public modality:FINAL <> (a:kotlin.Any?, b:kotlin.Any) returnType:kotlin.Any flags:
    VALUE_PARAMETER name:a index:0 type:kotlin.Any? flags:
    VALUE_PARAMETER name:b index:1 type:kotlin.Any flags:
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='test1(Any?, Any): Any'
        BLOCK type=kotlin.Any origin=ELVIS
          VAR IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:kotlin.Any? flags:val
            GET_VAR 'value-parameter a: Any?' type=kotlin.Any? origin=null
          WHEN type=kotlin.Any origin=null
            BRANCH
              if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'tmp0_elvis_lhs: Any?' type=kotlin.Any? origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: GET_VAR 'value-parameter b: Any' type=kotlin.Any origin=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: GET_VAR 'tmp0_elvis_lhs: Any?' type=kotlin.Any? origin=null
  FUN name:test2 visibility:public modality:FINAL <> (a:kotlin.String?, b:kotlin.Any) returnType:kotlin.Any flags:
    VALUE_PARAMETER name:a index:0 type:kotlin.String? flags:
    VALUE_PARAMETER name:b index:1 type:kotlin.Any flags:
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='test2(String?, Any): Any'
        BLOCK type=kotlin.Any origin=ELVIS
          VAR IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:kotlin.String? flags:val
            GET_VAR 'value-parameter a: String?' type=kotlin.String? origin=null
          WHEN type=kotlin.Any origin=null
            BRANCH
              if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'tmp0_elvis_lhs: String?' type=kotlin.String? origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: GET_VAR 'value-parameter b: Any' type=kotlin.Any origin=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: GET_VAR 'tmp0_elvis_lhs: String?' type=kotlin.String? origin=null
  FUN name:test3 visibility:public modality:FINAL <> (a:kotlin.Any?, b:kotlin.Any?) returnType:kotlin.String flags:
    VALUE_PARAMETER name:a index:0 type:kotlin.Any? flags:
    VALUE_PARAMETER name:b index:1 type:kotlin.Any? flags:
    BLOCK_BODY
      WHEN type=kotlin.Unit origin=null
        BRANCH
          if: TYPE_OP type=kotlin.Boolean origin=NOT_INSTANCEOF typeOperand=kotlin.String
            typeOperand: CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:String modality:FINAL visibility:public flags: superTypes:[kotlin.Comparable<kotlin.String>; kotlin.CharSequence; java.io.Serializable]
            GET_VAR 'value-parameter b: Any?' type=kotlin.Any? origin=null
          then: RETURN type=kotlin.Nothing from='test3(Any?, Any?): String'
            CONST String type=kotlin.String value=""
      WHEN type=kotlin.Unit origin=null
        BRANCH
          if: TYPE_OP type=kotlin.Boolean origin=NOT_INSTANCEOF typeOperand=kotlin.String?
            typeOperand: CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:String modality:FINAL visibility:public flags: superTypes:[kotlin.Comparable<kotlin.String>; kotlin.CharSequence; java.io.Serializable]
            GET_VAR 'value-parameter a: Any?' type=kotlin.Any? origin=null
          then: RETURN type=kotlin.Nothing from='test3(Any?, Any?): String'
            CONST String type=kotlin.String value=""
      RETURN type=kotlin.Nothing from='test3(Any?, Any?): String'
        BLOCK type=kotlin.String origin=ELVIS
          VAR IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:kotlin.Any? flags:val
            GET_VAR 'value-parameter a: Any?' type=kotlin.Any? origin=null
          WHEN type=kotlin.String origin=null
            BRANCH
              if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'tmp0_elvis_lhs: Any?' type=kotlin.Any? origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: TYPE_OP type=kotlin.String origin=IMPLICIT_CAST typeOperand=kotlin.String
                typeOperand: CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:String modality:FINAL visibility:public flags: superTypes:[kotlin.Comparable<kotlin.String>; kotlin.CharSequence; java.io.Serializable]
                GET_VAR 'value-parameter b: Any?' type=kotlin.Any? origin=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: TYPE_OP type=kotlin.String origin=IMPLICIT_CAST typeOperand=kotlin.String
                typeOperand: CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:String modality:FINAL visibility:public flags: superTypes:[kotlin.Comparable<kotlin.String>; kotlin.CharSequence; java.io.Serializable]
                GET_VAR 'tmp0_elvis_lhs: Any?' type=kotlin.Any? origin=null
  FUN name:test4 visibility:public modality:FINAL <> (x:kotlin.Any) returnType:kotlin.Any flags:
    VALUE_PARAMETER name:x index:0 type:kotlin.Any flags:
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='test4(Any): Any'
        BLOCK type=kotlin.Any origin=ELVIS
          VAR IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:kotlin.Any? flags:val
            CALL '<get-p>(): Any?' type=kotlin.Any? origin=GET_PROPERTY
          WHEN type=kotlin.Any origin=null
            BRANCH
              if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'tmp0_elvis_lhs: Any?' type=kotlin.Any? origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: GET_VAR 'value-parameter x: Any' type=kotlin.Any origin=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: GET_VAR 'tmp0_elvis_lhs: Any?' type=kotlin.Any? origin=null
  FUN name:test5 visibility:public modality:FINAL <> (x:kotlin.Any) returnType:kotlin.Any flags:
    VALUE_PARAMETER name:x index:0 type:kotlin.Any flags:
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='test5(Any): Any'
        BLOCK type=kotlin.Any origin=ELVIS
          VAR IR_TEMPORARY_VARIABLE name:tmp0_elvis_lhs type:kotlin.Any? flags:val
            CALL 'foo(): Any?' type=kotlin.Any? origin=null
          WHEN type=kotlin.Any origin=null
            BRANCH
              if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'tmp0_elvis_lhs: Any?' type=kotlin.Any? origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: GET_VAR 'value-parameter x: Any' type=kotlin.Any origin=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: GET_VAR 'tmp0_elvis_lhs: Any?' type=kotlin.Any? origin=null
