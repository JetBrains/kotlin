Kotlin to Native compiler performance report
                INIT        $UINT>>$ ms
             ANALYZE        $UINT>>$ ms
   TRANSLATION to IR        $UINT>>$ ms
         IR LOWERING        $UINT>>$ ms
       DYNAMIC PHASE        $UINT>>$ ms (ValidateIrBeforeLowering)
       DYNAMIC PHASE        $UINT>>$ ms (TestProcessor)
       DYNAMIC PHASE        $UINT>>$ ms (UpgradeCallableReferences)
       DYNAMIC PHASE        $UINT>>$ ms (AssertionWrapperLowering)
       DYNAMIC PHASE        $UINT>>$ ms (Lateinit)
       DYNAMIC PHASE        $UINT>>$ ms (SharedVariables)
       DYNAMIC PHASE        $UINT>>$ ms (ExtractLocalClassesFromInlineBodies)
       DYNAMIC PHASE        $UINT>>$ ms (ArrayConstructor)
       DYNAMIC PHASE        $UINT>>$ ms (InlineOnlyPrivateFunctions)
       DYNAMIC PHASE        $UINT>>$ ms (OuterThisInInlineFunctionsSpecialAccessorLowering)
       DYNAMIC PHASE        $UINT>>$ ms (SyntheticAccessorGeneration)
       DYNAMIC PHASE        $UINT>>$ ms (ValidateIrAfterInliningOnlyPrivateFunctions)
       DYNAMIC PHASE        $UINT>>$ ms (InlineAllFunctions)
       DYNAMIC PHASE        $UINT>>$ ms (SpecialObjCValidation)
       DYNAMIC PHASE        $UINT>>$ ms (ValidateIrAfterInliningAllFunctions)
       DYNAMIC PHASE        $UINT>>$ ms (ConstEvaluationLowering)
       DYNAMIC PHASE        $UINT>>$ ms (TypeOfProcessingLowering)
       DYNAMIC PHASE        $UINT>>$ ms (SpecializeSharedVariableBoxes)
       DYNAMIC PHASE        $UINT>>$ ms (Interop)
       DYNAMIC PHASE        $UINT>>$ ms (SpecialInteropIntrinsics)
       DYNAMIC PHASE        $UINT>>$ ms (RemoveExpectDeclarations)
       DYNAMIC PHASE        $UINT>>$ ms (StripTypeAliasDeclarations)
       DYNAMIC PHASE        $UINT>>$ ms (AssertionRemoverLowering)
       DYNAMIC PHASE        $UINT>>$ ms (VolatileFields)
       DYNAMIC PHASE        $UINT>>$ ms (DelegatedPropertyOptimization)
       DYNAMIC PHASE        $UINT>>$ ms (PropertyReference)
       DYNAMIC PHASE        $UINT>>$ ms (FunctionReference)
       DYNAMIC PHASE        $UINT>>$ ms (SingleAbstractMethod)
       DYNAMIC PHASE        $UINT>>$ ms (PostInline)
       DYNAMIC PHASE        $UINT>>$ ms (RemoveContractsDsl)
       DYNAMIC PHASE        $UINT>>$ ms (AnnotationImplementation)
       DYNAMIC PHASE        $UINT>>$ ms (RangeContains)
       DYNAMIC PHASE        $UINT>>$ ms (ForLoops)
       DYNAMIC PHASE        $UINT>>$ ms (FlattenStringConcatenationLowering)
       DYNAMIC PHASE        $UINT>>$ ms (StringConcatenation)
       DYNAMIC PHASE        $UINT>>$ ms (EnumConstructors)
       DYNAMIC PHASE        $UINT>>$ ms (Initializers)
       DYNAMIC PHASE        $UINT>>$ ms (InventNameForInteropBridges)
       DYNAMIC PHASE        $UINT>>$ ms (InventNamesForLocalClasses)
       DYNAMIC PHASE        $UINT>>$ ms (LocalFunctions)
       DYNAMIC PHASE        $UINT>>$ ms (Tailrec)
       DYNAMIC PHASE        $UINT>>$ ms (DefaultParameterExtent)
       DYNAMIC PHASE        $UINT>>$ ms (InnerClasses)
       DYNAMIC PHASE        $UINT>>$ ms (DataClasses)
       DYNAMIC PHASE        $UINT>>$ ms (IfNullExpressionsFusionLowering)
       DYNAMIC PHASE        $UINT>>$ ms (StaticCallableReferenceOptimization)
       DYNAMIC PHASE        $UINT>>$ ms (EnumWhen)
       DYNAMIC PHASE        $UINT>>$ ms (FinallyBlocks)
       DYNAMIC PHASE        $UINT>>$ ms (Enums)
       DYNAMIC PHASE        $UINT>>$ ms (EnumUsage)
       DYNAMIC PHASE        $UINT>>$ ms (Vararg)
       DYNAMIC PHASE        $UINT>>$ ms (KotlinNothingValueException)
       DYNAMIC PHASE        $UINT>>$ ms (Coroutines)
       DYNAMIC PHASE        $UINT>>$ ms (CoroutinesLivenessAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (CoroutinesLivenessAnalysisFallback)
       DYNAMIC PHASE        $UINT>>$ ms (ExpressionBodyTransformer)
       DYNAMIC PHASE        $UINT>>$ ms (ObjectClasses)
       DYNAMIC PHASE        $UINT>>$ ms (StaticInitializers)
       DYNAMIC PHASE        $UINT>>$ ms (TypeOperators)
       DYNAMIC PHASE        $UINT>>$ ms (BuiltinOperators)
       DYNAMIC PHASE        $UINT>>$ ms (Bridges)
       DYNAMIC PHASE        $UINT>>$ ms (UseInternalAbi)
       DYNAMIC PHASE        $UINT>>$ ms (EraseGenericCallsReturnTypesPhase)
       DYNAMIC PHASE        $UINT>>$ ms (Autobox)
       DYNAMIC PHASE        $UINT>>$ ms (ConstructorsLowering)
       DYNAMIC PHASE        $UINT>>$ ms (ValidateIrAfterLowering)
             BACKEND        $UINT>>$ ms
       DYNAMIC PHASE        $UINT>>$ ms (llvm-mandatory.ModuleToFunctionPassAdaptor.PassManager<Function>.ObjCARCContractPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-mandatory.ModuleToFunctionPassAdaptor.InnerAnalysisManagerProxy<FunctionAnalysisManager, Module>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-mandatory.ModuleToFunctionPassAdaptor.PassManager<Function>.ObjCARCContractPass.AAManager.BasicAA.AssumptionAnalysis.TargetIRAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-mandatory.ModuleToFunctionPassAdaptor.PassManager<Function>.ObjCARCContractPass.AAManager.TargetLibraryAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-mandatory.ModuleToFunctionPassAdaptor)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-mandatory.ModuleToFunctionPassAdaptor.PassManager<Function>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-mandatory.ModuleToFunctionPassAdaptor.PassManager<Function>.ObjCARCContractPass.AAManager.TypeBasedAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-mandatory.ModuleToFunctionPassAdaptor.PassManager<Function>.ObjCARCContractPass.AAManager.BasicAA.AssumptionAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-mandatory.ModuleToFunctionPassAdaptor.PassManager<Function>.ObjCARCContractPass.AAManager.OuterAnalysisManagerProxy<ModuleAnalysisManager, Function>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-mandatory.ModuleToFunctionPassAdaptor.PassManager<Function>.ObjCARCContractPass.AAManager.ScopedNoAliasAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-mandatory.ModuleToFunctionPassAdaptor.PassManager<Function>.ObjCARCContractPass.AAManager.BasicAA.DominatorTreeAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-mandatory.ModuleToFunctionPassAdaptor.PassManager<Function>.ObjCARCContractPass.AAManager)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-mandatory.ModuleToFunctionPassAdaptor.PassManager<Function>.ObjCARCContractPass.AAManager.BasicAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.PostOrderFunctionAttrsPass.AAManager)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Loop, LoopAnalysisManager, LoopStandardAnalysisResults &, LPMUpdater &>.LICMPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.LowerConstantIntrinsicsPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.Float$UINT$IntPass.DominatorTreeAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Loop, LoopAnalysisManager, LoopStandardAnalysisResults &, LPMUpdater &>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.ADCEPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.InnerAnalysisManagerProxy<CGSCCAnalysisManager, Module>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.InlinerPass.FunctionAnalysisManagerCGSCCProxy)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Function>.LoopSimplifyPass.LoopAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.EntryExitInstrumenterPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.InstCombinePass.AAManager)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.AlwaysInlinerPass.BlockFrequencyAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.AlwaysInlinerPass.BlockFrequencyAnalysis.BranchProbabilityAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.RequireAnalysisPass<llvm::GlobalsAA, llvm::Module, llvm::AnalysisManager<Module>>.GlobalsAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.CGProfilePass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.GlobalOptPass.TargetLibraryAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.GlobalOptPass.BlockFrequencyAnalysis.BranchProbabilityAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.SimplifyCFGPass.TargetIRAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.GlobalOptPass.DominatorTreeAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.SROAPass.AssumptionAnalysis.TargetIRAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Loop, LoopAnalysisManager, LoopStandardAnalysisResults &, LPMUpdater &>.LoopIdiomVectorizePass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.AAManager)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.MemorySSAAnalysis.AAManager.BasicAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.Annotation$UINT$MetadataPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.TailCallElimPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.LoopDistributePass.LoopAccessAnalysis.AAManager.TypeBasedAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.RequireAnalysisPass<llvm::ShouldNotRunFunctionPassesAnalysis, llvm::Function, llvm::AnalysisManager<Function>>.ShouldNotRunFunctionPassesAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.InstCombinePass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.PostOrderFunctionAttrsPass.AAManager.BasicAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.InstCombinePass.AAManager.TypeBasedAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Loop, LoopAnalysisManager, LoopStandardAnalysisResults &, LPMUpdater &>.SimpleLoopUnswitchPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.InlinerPass.AAManager.BasicAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.InnerAnalysisManagerProxy<CGSCCAnalysisManager, Module>.LazyCallGraphAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Function>.LoopSimplifyPass.LoopAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.EarlyCSEPass.MemorySSAAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.SROAPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.BDCEPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.InstCombinePass.AAManager.BasicAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.SROAPass.AssumptionAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.InnerAnalysisManagerProxy<LoopAnalysisManager, Function>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.AlwaysInlinerPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.LoopDistributePass.LoopAccessAnalysis.AAManager)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.PostOrderFunctionAttrsPass.AAManager.OuterAnalysisManagerProxy<ModuleAnalysisManager, Function>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.LoopSinkPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.PromotePass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.FunctionAnalysisManagerCGSCCProxy)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.ADCEPass.PostDominatorTreeAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.MemCpyOptPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.InlinerPass.AssumptionAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Function>.LoopSimplifyPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.CoroCleanupPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.AlwaysInlinerPass.BlockFrequencyAnalysis.BranchProbabilityAnalysis.LoopAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.InlinerPass.AAManager.BasicAA.AssumptionAnalysis.TargetIRAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.MemorySSAAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToFunctionPassAdaptor)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.BDCEPass.DemandedBitsAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.GlobalOptPass.BlockFrequencyAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.InlinerPass.BlockFrequencyAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Loop, LoopAnalysisManager, LoopStandardAnalysisResults &, LPMUpdater &>.LoopInstSimplifyPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Function>.LoopSimplifyPass.AssumptionAnalysis.TargetIRAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.PostOrderFunctionAttrsPass.AAManager.ScopedNoAliasAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Function>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.SROAPass.DominatorTreeAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.LoopUnrollPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.VectorCombinePass.AAManager)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.RelLookupTableConverterPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.RequireAnalysisPass<llvm::GlobalsAA, llvm::Module, llvm::AnalysisManager<Module>>.GlobalsAA.TargetLibraryAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.RequireAnalysisPass<llvm::GlobalsAA, llvm::Module, llvm::AnalysisManager<Module>>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.IPSCCPPass.BlockFrequencyAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.EarlyCSEPass.MemorySSAAnalysis.AAManager.ScopedNoAliasAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Function>.LoopSimplifyPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.RecomputeGlobalsAAPass.CallGraphAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.SCCPPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.LowerExpectIntrinsicPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.CoroElidePass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.AAManager.BasicAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.RecomputeGlobalsAAPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.IPSCCPPass.DominatorTreeAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.InstCombinePass.TargetLibraryAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.WarnMissedTransformationsPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.LoopDistributePass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.IPSCCPPass.BlockFrequencyAnalysis.BranchProbabilityAnalysis.PostDominatorTreeAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.InlinerPass.AAManager.BasicAA.AssumptionAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Loop, LoopAnalysisManager, LoopStandardAnalysisResults &, LPMUpdater &>.LoopDeletionPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.AlwaysInlinerPass.BlockFrequencyAnalysis.BranchProbabilityAnalysis.LoopAnalysis.DominatorTreeAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.EarlyCSEPass.MemorySSAAnalysis.AAManager.OuterAnalysisManagerProxy<ModuleAnalysisManager, Function>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.InnerAnalysisManagerProxy<FunctionAnalysisManager, Module>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.InlinerPass.OuterAnalysisManagerProxy<ModuleAnalysisManager, Function>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.InlinerPass.BlockFrequencyAnalysis.BranchProbabilityAnalysis.LoopAnalysis.DominatorTreeAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.CoroEarlyPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Loop, LoopAnalysisManager, LoopStandardAnalysisResults &, LPMUpdater &>.LoopDeletionPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.AlwaysInlinerPass.ProfileSummaryAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.GlobalOptPass.BlockFrequencyAnalysis.BranchProbabilityAnalysis.PostDominatorTreeAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.MemCpyOptPass.MemorySSAAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.InjectTLIMappings)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.RelLookupTableConverterPass.TargetIRAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.RequireAnalysisPass<llvm::GlobalsAA, llvm::Module, llvm::AnalysisManager<Module>>.GlobalsAA.CallGraphAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Function>.LCSSAPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.PromotePass.AssumptionAnalysis.TargetIRAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.AAManager.TypeBasedAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.InlinerPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.EarlyCSEPass.MemorySSAAnalysis.AAManager.BasicAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ConstantMergePass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.AlwaysInlinerPass.AAManager.BasicAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.ReassociatePass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.LoopDistributePass.LoopAccessAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Function>.LoopSimplifyPass.LoopAnalysis.DominatorTreeAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.InstCombinePass.AAManager.ScopedNoAliasAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.InstCombinePass.AAManager.BasicAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.LoopVectorizePass.DemandedBitsAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.InstCombinePass.AAManager.OuterAnalysisManagerProxy<ModuleAnalysisManager, Function>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.AlwaysInlinerPass.AAManager)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ReversePostOrderFunctionAttrsPass.LazyCallGraphAnalysis.TargetLibraryAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.PromotePass.DominatorTreeAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.InnerAnalysisManagerProxy<LoopAnalysisManager, Function>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.OpenMPOptPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ReversePostOrderFunctionAttrsPass.LazyCallGraphAnalysis.InnerAnalysisManagerProxy<FunctionAnalysisManager, Module>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.MemCpyOptPass.PostDominatorTreeAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.EliminateAvailableExternallyPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.InferFunctionAttrsPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.GlobalOptPass.TargetIRAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.GlobalOptPass.InnerAnalysisManagerProxy<FunctionAnalysisManager, Module>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.LICMPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.LoopDistributePass.LoopAccessAnalysis.AAManager.ScopedNoAliasAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Function>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.LoopDistributePass.OptimizationRemarkEmitterAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.InlineAdvisorAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.GlobalOptPass.BlockFrequencyAnalysis.BranchProbabilityAnalysis.LoopAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToFunctionPassAdaptor.InvalidateAnalysisPass<llvm::AAManager>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Loop, LoopAnalysisManager, LoopStandardAnalysisResults &, LPMUpdater &>.IndVarSimplifyPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.RequireAnalysisPass<llvm::ProfileSummaryAnalysis, llvm::Module, llvm::AnalysisManager<Module>>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.InnerAnalysisManagerProxy<CGSCCAnalysisManager, Module>.LazyCallGraphAnalysis.TargetLibraryAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Loop, LoopAnalysisManager, LoopStandardAnalysisResults &, LPMUpdater &>.LoopFullUnrollPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.PostOrderFunctionAttrsPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.SimplifyCFGPass.AssumptionAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.InlinerPass.BlockFrequencyAnalysis.BranchProbabilityAnalysis.PostDominatorTreeAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.InlinerPass.AAManager.TypeBasedAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.SimplifyCFGPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.LoopDistributePass.LoopAccessAnalysis.AAManager.BasicAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Function>.LCSSAPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.InstCombinePass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.LoopUnrollPass.ScalarEvolutionAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.CalledValuePropagationPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.LoopVectorizePass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.VectorCombinePass.DominatorTreeAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Loop, LoopAnalysisManager, LoopStandardAnalysisResults &, LPMUpdater &>.LoopRotatePass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.SROAPass.DominatorTreeAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.IPSCCPPass.BlockFrequencyAnalysis.BranchProbabilityAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.GlobalOptPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.InlinerPass.FunctionAnalysisManagerCGSCCProxy.OuterAnalysisManagerProxy<ModuleAnalysisManager, LazyCallGraph::SCC, LazyCallGraph &>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.PostOrderFunctionAttrsPass.AAManager.TypeBasedAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.InlinerPass.BlockFrequencyAnalysis.BranchProbabilityAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.VectorCombinePass.AAManager.BasicAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.AnnotationRemarksPass.TargetLibraryAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ForceFunctionAttrsPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.InstCombinePass.AAManager)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.InlinerPass.OptimizationRemarkEmitterAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.InlinerPass.AAManager.ScopedNoAliasAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.MemorySSAAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.AlignmentFromAssumptionsPass.ScalarEvolutionAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.EarlyCSEPass.TargetLibraryAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.DeadArgumentEliminationPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.AlignmentFromAssumptionsPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.AnnotationRemarksPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Loop, LoopAnalysisManager, LoopStandardAnalysisResults &, LPMUpdater &>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.LoopDistributePass.LoopAccessAnalysis.AAManager.OuterAnalysisManagerProxy<ModuleAnalysisManager, Function>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.InferFunctionAttrsPass.TargetLibraryAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.AlwaysInlinerPass.BlockFrequencyAnalysis.BranchProbabilityAnalysis.PostDominatorTreeAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Loop, LoopAnalysisManager, LoopStandardAnalysisResults &, LPMUpdater &>.LoopIdiomRecognizePass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ReversePostOrderFunctionAttrsPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.ScalarEvolutionAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.FunctionAnalysisManagerCGSCCProxy.OuterAnalysisManagerProxy<ModuleAnalysisManager, LazyCallGraph::SCC, LazyCallGraph &>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.EarlyCSEPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.MemorySSAAnalysis.AAManager)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.AAManager.ScopedNoAliasAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.InnerAnalysisManagerProxy<FunctionAnalysisManager, Module>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Loop, LoopAnalysisManager, LoopStandardAnalysisResults &, LPMUpdater &>.IndVarSimplifyPass.ShouldRunExtraSimpleLoopUnswitch)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.InlinerPass.AssumptionAnalysis.TargetIRAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.LoopLoadEliminationPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.LibCallsShrinkWrapPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.PostOrderFunctionAttrsPass.AAManager.BasicAA.AssumptionAnalysis.TargetIRAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.PromotePass.AssumptionAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Function>.LoopSimplifyPass.AssumptionAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.PostOrderFunctionAttrsPass.AAManager.BasicAA.DominatorTreeAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.PostOrderFunctionAttrsPass.AAManager.BasicAA.AssumptionAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.EarlyCSEPass.MemorySSAAnalysis.AAManager)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.InferFunctionAttrsPass.InnerAnalysisManagerProxy<FunctionAnalysisManager, Module>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.InstCombinePass.DominatorTreeAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.InlinerPass.TargetIRAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.SROAPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.CGProfilePass.InnerAnalysisManagerProxy<FunctionAnalysisManager, Module>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.InlinerPass.AAManager)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.IPSCCPPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.InlinerPass.BlockFrequencyAnalysis.BranchProbabilityAnalysis.LoopAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.EarlyCSEPass.MemorySSAAnalysis.AAManager.TypeBasedAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CoroSplitPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Loop, LoopAnalysisManager, LoopStandardAnalysisResults &, LPMUpdater &>.SimpleLoopUnswitchPass.OuterAnalysisManagerProxy<FunctionAnalysisManager, Loop, LoopStandardAnalysisResults &>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.EarlyCSEPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.Float$UINT$IntPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.SimplifyCFGPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.LoopUnrollPass.LoopAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.LoopDistributePass.ScalarEvolutionAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ReversePostOrderFunctionAttrsPass.LazyCallGraphAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToFunctionPassAdaptor.InvalidateAnalysisPass<llvm::ShouldNotRunFunctionPassesAnalysis>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.InstCombinePass.OptimizationRemarkEmitterAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.RequireAnalysisPass<llvm::ShouldNotRunFunctionPassesAnalysis, llvm::Function, llvm::AnalysisManager<Function>>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Loop, LoopAnalysisManager, LoopStandardAnalysisResults &, LPMUpdater &>.LoopRotatePass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.InferAlignmentPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.InstSimplifyPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.GlobalDCEPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.DivRemPairsPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleInlinerWrapperPass.ModuleToPostOrderCGSCCPassAdaptor.PassManager<LazyCallGraph::SCC, CGSCCAnalysisManager, LazyCallGraph &, CGSCCUpdateResult &>.CGSCCToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.PassManager<Loop, LoopAnalysisManager, LoopStandardAnalysisResults &, LPMUpdater &>.LoopSimplifyCFGPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.IPSCCPPass.BlockFrequencyAnalysis.BranchProbabilityAnalysis.LoopAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.ScalarEvolutionAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.VectorCombinePass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-default.ModuleToFunctionPassAdaptor.PassManager<Function>.FunctionToLoopPassAdaptor.AAManager.OuterAnalysisManagerProxy<ModuleAnalysisManager, Function>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.InferFunctionAttrsPass.TargetLibraryAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.CrossDSOCFIPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.ModuleToPostOrderCGSCCPassAdaptor.PostOrderFunctionAttrsPass.AAManager.BasicAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.ModuleToPostOrderCGSCCPassAdaptor.PostOrderFunctionAttrsPass.AAManager.ScopedNoAliasAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.ModuleToPostOrderCGSCCPassAdaptor.PostOrderFunctionAttrsPass.AAManager.BasicAA.AssumptionAnalysis.TargetIRAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.InferFunctionAttrsPass.InnerAnalysisManagerProxy<FunctionAnalysisManager, Module>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.ModuleToPostOrderCGSCCPassAdaptor)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.ReversePostOrderFunctionAttrsPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.OpenMPOptPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.ModuleToPostOrderCGSCCPassAdaptor.PostOrderFunctionAttrsPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.InferFunctionAttrsPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.ModuleToPostOrderCGSCCPassAdaptor.PostOrderFunctionAttrsPass.AAManager.OuterAnalysisManagerProxy<ModuleAnalysisManager, Function>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.ModuleToPostOrderCGSCCPassAdaptor.FunctionAnalysisManagerCGSCCProxy)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.ModuleToPostOrderCGSCCPassAdaptor.PostOrderFunctionAttrsPass.AAManager.BasicAA.DominatorTreeAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.ModuleToPostOrderCGSCCPassAdaptor.PostOrderFunctionAttrsPass.AAManager.TypeBasedAA)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.ModuleToPostOrderCGSCCPassAdaptor.InnerAnalysisManagerProxy<CGSCCAnalysisManager, Module>.LazyCallGraphAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.InternalizePass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.ModuleToPostOrderCGSCCPassAdaptor.PostOrderFunctionAttrsPass.AAManager.BasicAA.AssumptionAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.ModuleToPostOrderCGSCCPassAdaptor.InnerAnalysisManagerProxy<CGSCCAnalysisManager, Module>.InnerAnalysisManagerProxy<FunctionAnalysisManager, Module>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.ModuleToPostOrderCGSCCPassAdaptor.PostOrderFunctionAttrsPass.AAManager)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.ModuleToPostOrderCGSCCPassAdaptor.InnerAnalysisManagerProxy<CGSCCAnalysisManager, Module>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.ModuleToPostOrderCGSCCPassAdaptor.FunctionAnalysisManagerCGSCCProxy.OuterAnalysisManagerProxy<ModuleAnalysisManager, LazyCallGraph::SCC, LazyCallGraph &>)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.ModuleToFunctionPassAdaptor)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.LowerTypeTestsPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.ModuleToPostOrderCGSCCPassAdaptor.InnerAnalysisManagerProxy<CGSCCAnalysisManager, Module>.LazyCallGraphAnalysis.TargetLibraryAnalysis)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.ModuleToFunctionPassAdaptor.AnnotationRemarksPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.GlobalSplitPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.GlobalDCEPass)
       DYNAMIC PHASE        $UINT>>$ ms (llvm-lto.WholeProgramDevirtPass)
GC time for PS MarkSweep is $UINT$ ms, $UINT$ collections
GC time for PS Scavenge is $UINT$ ms, $UINT$ collections
JIT time is $UINT$ ms
