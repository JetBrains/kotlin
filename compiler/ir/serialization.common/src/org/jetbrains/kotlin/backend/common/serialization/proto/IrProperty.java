// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: compiler/ir/serialization.common/src/KotlinIr.proto

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty}
 */
public final class IrProperty extends
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite implements
    // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty)
    IrPropertyOrBuilder {
  // Use IrProperty.newBuilder() to construct.
  private IrProperty(org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private IrProperty(boolean noInit) { this.unknownFields = org.jetbrains.kotlin.protobuf.ByteString.EMPTY;}

  private static final IrProperty defaultInstance;
  public static IrProperty getDefaultInstance() {
    return defaultInstance;
  }

  public IrProperty getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final org.jetbrains.kotlin.protobuf.ByteString unknownFields;
  private IrProperty(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    org.jetbrains.kotlin.protobuf.ByteString.Output unknownFieldsOutput =
        org.jetbrains.kotlin.protobuf.ByteString.newOutput();
    org.jetbrains.kotlin.protobuf.CodedOutputStream unknownFieldsCodedOutput =
        org.jetbrains.kotlin.protobuf.CodedOutputStream.newInstance(
            unknownFieldsOutput);
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.Builder subBuilder = null;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              subBuilder = base_.toBuilder();
            }
            base_ = input.readMessage(org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(base_);
              base_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000001;
            break;
          }
          case 18: {
            org.jetbrains.kotlin.backend.common.serialization.proto.String.Builder subBuilder = null;
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              subBuilder = name_.toBuilder();
            }
            name_ = input.readMessage(org.jetbrains.kotlin.backend.common.serialization.proto.String.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(name_);
              name_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000002;
            break;
          }
          case 26: {
            org.jetbrains.kotlin.backend.common.serialization.proto.Visibility.Builder subBuilder = null;
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              subBuilder = visibility_.toBuilder();
            }
            visibility_ = input.readMessage(org.jetbrains.kotlin.backend.common.serialization.proto.Visibility.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(visibility_);
              visibility_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000004;
            break;
          }
          case 32: {
            int rawValue = input.readEnum();
            org.jetbrains.kotlin.backend.common.serialization.proto.ModalityKind value = org.jetbrains.kotlin.backend.common.serialization.proto.ModalityKind.valueOf(rawValue);
            if (value == null) {
              unknownFieldsCodedOutput.writeRawVarint32(tag);
              unknownFieldsCodedOutput.writeRawVarint32(rawValue);
            } else {
              bitField0_ |= 0x00000008;
              modality_ = value;
            }
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            isVar_ = input.readBool();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            isConst_ = input.readBool();
            break;
          }
          case 56: {
            bitField0_ |= 0x00000040;
            isLateinit_ = input.readBool();
            break;
          }
          case 64: {
            bitField0_ |= 0x00000080;
            isDelegated_ = input.readBool();
            break;
          }
          case 72: {
            bitField0_ |= 0x00000100;
            isExternal_ = input.readBool();
            break;
          }
          case 82: {
            org.jetbrains.kotlin.backend.common.serialization.proto.IrField.Builder subBuilder = null;
            if (((bitField0_ & 0x00000200) == 0x00000200)) {
              subBuilder = backingField_.toBuilder();
            }
            backingField_ = input.readMessage(org.jetbrains.kotlin.backend.common.serialization.proto.IrField.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(backingField_);
              backingField_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000200;
            break;
          }
          case 90: {
            org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.Builder subBuilder = null;
            if (((bitField0_ & 0x00000400) == 0x00000400)) {
              subBuilder = getter_.toBuilder();
            }
            getter_ = input.readMessage(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(getter_);
              getter_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000400;
            break;
          }
          case 98: {
            org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.Builder subBuilder = null;
            if (((bitField0_ & 0x00000800) == 0x00000800)) {
              subBuilder = setter_.toBuilder();
            }
            setter_ = input.readMessage(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(setter_);
              setter_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000800;
            break;
          }
        }
      }
    } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      try {
        unknownFieldsCodedOutput.flush();
      } catch (java.io.IOException e) {
      // Should not happen
      } finally {
        unknownFields = unknownFieldsOutput.toByteString();
      }
      makeExtensionsImmutable();
    }
  }
  public static org.jetbrains.kotlin.protobuf.Parser<IrProperty> PARSER =
      new org.jetbrains.kotlin.protobuf.AbstractParser<IrProperty>() {
    public IrProperty parsePartialFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      return new IrProperty(input, extensionRegistry);
    }
  };

  @java.lang.Override
  public org.jetbrains.kotlin.protobuf.Parser<IrProperty> getParserForType() {
    return PARSER;
  }

  private int bitField0_;
  public static final int BASE_FIELD_NUMBER = 1;
  private org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base_;
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
   */
  public boolean hasBase() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase getBase() {
    return base_;
  }

  public static final int NAME_FIELD_NUMBER = 2;
  private org.jetbrains.kotlin.backend.common.serialization.proto.String name_;
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.String name = 2;</code>
   */
  public boolean hasName() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.String name = 2;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.String getName() {
    return name_;
  }

  public static final int VISIBILITY_FIELD_NUMBER = 3;
  private org.jetbrains.kotlin.backend.common.serialization.proto.Visibility visibility_;
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.Visibility visibility = 3;</code>
   */
  public boolean hasVisibility() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.Visibility visibility = 3;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.Visibility getVisibility() {
    return visibility_;
  }

  public static final int MODALITY_FIELD_NUMBER = 4;
  private org.jetbrains.kotlin.backend.common.serialization.proto.ModalityKind modality_;
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.ModalityKind modality = 4;</code>
   */
  public boolean hasModality() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.ModalityKind modality = 4;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.ModalityKind getModality() {
    return modality_;
  }

  public static final int IS_VAR_FIELD_NUMBER = 5;
  private boolean isVar_;
  /**
   * <code>required bool is_var = 5;</code>
   */
  public boolean hasIsVar() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <code>required bool is_var = 5;</code>
   */
  public boolean getIsVar() {
    return isVar_;
  }

  public static final int IS_CONST_FIELD_NUMBER = 6;
  private boolean isConst_;
  /**
   * <code>required bool is_const = 6;</code>
   */
  public boolean hasIsConst() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <code>required bool is_const = 6;</code>
   */
  public boolean getIsConst() {
    return isConst_;
  }

  public static final int IS_LATEINIT_FIELD_NUMBER = 7;
  private boolean isLateinit_;
  /**
   * <code>required bool is_lateinit = 7;</code>
   */
  public boolean hasIsLateinit() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <code>required bool is_lateinit = 7;</code>
   */
  public boolean getIsLateinit() {
    return isLateinit_;
  }

  public static final int IS_DELEGATED_FIELD_NUMBER = 8;
  private boolean isDelegated_;
  /**
   * <code>required bool is_delegated = 8;</code>
   */
  public boolean hasIsDelegated() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <code>required bool is_delegated = 8;</code>
   */
  public boolean getIsDelegated() {
    return isDelegated_;
  }

  public static final int IS_EXTERNAL_FIELD_NUMBER = 9;
  private boolean isExternal_;
  /**
   * <code>required bool is_external = 9;</code>
   */
  public boolean hasIsExternal() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <code>required bool is_external = 9;</code>
   */
  public boolean getIsExternal() {
    return isExternal_;
  }

  public static final int BACKING_FIELD_FIELD_NUMBER = 10;
  private org.jetbrains.kotlin.backend.common.serialization.proto.IrField backingField_;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrField backing_field = 10;</code>
   */
  public boolean hasBackingField() {
    return ((bitField0_ & 0x00000200) == 0x00000200);
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrField backing_field = 10;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrField getBackingField() {
    return backingField_;
  }

  public static final int GETTER_FIELD_NUMBER = 11;
  private org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter_;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter = 11;</code>
   */
  public boolean hasGetter() {
    return ((bitField0_ & 0x00000400) == 0x00000400);
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter = 11;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getGetter() {
    return getter_;
  }

  public static final int SETTER_FIELD_NUMBER = 12;
  private org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter_;
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter = 12;</code>
   */
  public boolean hasSetter() {
    return ((bitField0_ & 0x00000800) == 0x00000800);
  }
  /**
   * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter = 12;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getSetter() {
    return setter_;
  }

  private void initFields() {
    base_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.getDefaultInstance();
    name_ = org.jetbrains.kotlin.backend.common.serialization.proto.String.getDefaultInstance();
    visibility_ = org.jetbrains.kotlin.backend.common.serialization.proto.Visibility.getDefaultInstance();
    modality_ = org.jetbrains.kotlin.backend.common.serialization.proto.ModalityKind.FINAL_MODALITY;
    isVar_ = false;
    isConst_ = false;
    isLateinit_ = false;
    isDelegated_ = false;
    isExternal_ = false;
    backingField_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrField.getDefaultInstance();
    getter_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.getDefaultInstance();
    setter_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.getDefaultInstance();
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasBase()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasName()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasVisibility()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasModality()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasIsVar()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasIsConst()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasIsLateinit()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasIsDelegated()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasIsExternal()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!getBase().isInitialized()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!getName().isInitialized()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!getVisibility().isInitialized()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (hasBackingField()) {
      if (!getBackingField().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasGetter()) {
      if (!getGetter().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    if (hasSetter()) {
      if (!getSetter().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(org.jetbrains.kotlin.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeMessage(1, base_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeMessage(2, name_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeMessage(3, visibility_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeEnum(4, modality_.getNumber());
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeBool(5, isVar_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeBool(6, isConst_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeBool(7, isLateinit_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeBool(8, isDelegated_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      output.writeBool(9, isExternal_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      output.writeMessage(10, backingField_);
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      output.writeMessage(11, getter_);
    }
    if (((bitField0_ & 0x00000800) == 0x00000800)) {
      output.writeMessage(12, setter_);
    }
    output.writeRawBytes(unknownFields);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(1, base_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(2, name_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(3, visibility_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeEnumSize(4, modality_.getNumber());
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeBoolSize(5, isVar_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeBoolSize(6, isConst_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeBoolSize(7, isLateinit_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeBoolSize(8, isDelegated_);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeBoolSize(9, isExternal_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(10, backingField_);
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(11, getter_);
    }
    if (((bitField0_ & 0x00000800) == 0x00000800)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(12, setter_);
    }
    size += unknownFields.size();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  protected java.lang.Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty parseFrom(byte[] data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty parseFrom(
      byte[] data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty parseFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty parseDelimitedFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  /**
   * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty}
   */
  public static final class Builder extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty, Builder>
      implements
      // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty)
      org.jetbrains.kotlin.backend.common.serialization.proto.IrPropertyOrBuilder {
    // Construct using org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      base_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.getDefaultInstance();
      bitField0_ = (bitField0_ & ~0x00000001);
      name_ = org.jetbrains.kotlin.backend.common.serialization.proto.String.getDefaultInstance();
      bitField0_ = (bitField0_ & ~0x00000002);
      visibility_ = org.jetbrains.kotlin.backend.common.serialization.proto.Visibility.getDefaultInstance();
      bitField0_ = (bitField0_ & ~0x00000004);
      modality_ = org.jetbrains.kotlin.backend.common.serialization.proto.ModalityKind.FINAL_MODALITY;
      bitField0_ = (bitField0_ & ~0x00000008);
      isVar_ = false;
      bitField0_ = (bitField0_ & ~0x00000010);
      isConst_ = false;
      bitField0_ = (bitField0_ & ~0x00000020);
      isLateinit_ = false;
      bitField0_ = (bitField0_ & ~0x00000040);
      isDelegated_ = false;
      bitField0_ = (bitField0_ & ~0x00000080);
      isExternal_ = false;
      bitField0_ = (bitField0_ & ~0x00000100);
      backingField_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrField.getDefaultInstance();
      bitField0_ = (bitField0_ & ~0x00000200);
      getter_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.getDefaultInstance();
      bitField0_ = (bitField0_ & ~0x00000400);
      setter_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.getDefaultInstance();
      bitField0_ = (bitField0_ & ~0x00000800);
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty getDefaultInstanceForType() {
      return org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty.getDefaultInstance();
    }

    public org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty build() {
      org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty buildPartial() {
      org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty result = new org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.base_ = base_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.name_ = name_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.visibility_ = visibility_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.modality_ = modality_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.isVar_ = isVar_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.isConst_ = isConst_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000040;
      }
      result.isLateinit_ = isLateinit_;
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000080;
      }
      result.isDelegated_ = isDelegated_;
      if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
        to_bitField0_ |= 0x00000100;
      }
      result.isExternal_ = isExternal_;
      if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
        to_bitField0_ |= 0x00000200;
      }
      result.backingField_ = backingField_;
      if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
        to_bitField0_ |= 0x00000400;
      }
      result.getter_ = getter_;
      if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
        to_bitField0_ |= 0x00000800;
      }
      result.setter_ = setter_;
      result.bitField0_ = to_bitField0_;
      return result;
    }

    public Builder mergeFrom(org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty other) {
      if (other == org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty.getDefaultInstance()) return this;
      if (other.hasBase()) {
        mergeBase(other.getBase());
      }
      if (other.hasName()) {
        mergeName(other.getName());
      }
      if (other.hasVisibility()) {
        mergeVisibility(other.getVisibility());
      }
      if (other.hasModality()) {
        setModality(other.getModality());
      }
      if (other.hasIsVar()) {
        setIsVar(other.getIsVar());
      }
      if (other.hasIsConst()) {
        setIsConst(other.getIsConst());
      }
      if (other.hasIsLateinit()) {
        setIsLateinit(other.getIsLateinit());
      }
      if (other.hasIsDelegated()) {
        setIsDelegated(other.getIsDelegated());
      }
      if (other.hasIsExternal()) {
        setIsExternal(other.getIsExternal());
      }
      if (other.hasBackingField()) {
        mergeBackingField(other.getBackingField());
      }
      if (other.hasGetter()) {
        mergeGetter(other.getGetter());
      }
      if (other.hasSetter()) {
        mergeSetter(other.getSetter());
      }
      setUnknownFields(
          getUnknownFields().concat(other.unknownFields));
      return this;
    }

    public final boolean isInitialized() {
      if (!hasBase()) {
        
        return false;
      }
      if (!hasName()) {
        
        return false;
      }
      if (!hasVisibility()) {
        
        return false;
      }
      if (!hasModality()) {
        
        return false;
      }
      if (!hasIsVar()) {
        
        return false;
      }
      if (!hasIsConst()) {
        
        return false;
      }
      if (!hasIsLateinit()) {
        
        return false;
      }
      if (!hasIsDelegated()) {
        
        return false;
      }
      if (!hasIsExternal()) {
        
        return false;
      }
      if (!getBase().isInitialized()) {
        
        return false;
      }
      if (!getName().isInitialized()) {
        
        return false;
      }
      if (!getVisibility().isInitialized()) {
        
        return false;
      }
      if (hasBackingField()) {
        if (!getBackingField().isInitialized()) {
          
          return false;
        }
      }
      if (hasGetter()) {
        if (!getGetter().isInitialized()) {
          
          return false;
        }
      }
      if (hasSetter()) {
        if (!getSetter().isInitialized()) {
          
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.getDefaultInstance();
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public boolean hasBase() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase getBase() {
      return base_;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public Builder setBase(org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase value) {
      if (value == null) {
        throw new NullPointerException();
      }
      base_ = value;

      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public Builder setBase(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.Builder builderForValue) {
      base_ = builderForValue.build();

      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public Builder mergeBase(org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase value) {
      if (((bitField0_ & 0x00000001) == 0x00000001) &&
          base_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.getDefaultInstance()) {
        base_ =
          org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.newBuilder(base_).mergeFrom(value).buildPartial();
      } else {
        base_ = value;
      }

      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1;</code>
     */
    public Builder clearBase() {
      base_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.getDefaultInstance();

      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    private org.jetbrains.kotlin.backend.common.serialization.proto.String name_ = org.jetbrains.kotlin.backend.common.serialization.proto.String.getDefaultInstance();
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.String name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.String name = 2;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.String getName() {
      return name_;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.String name = 2;</code>
     */
    public Builder setName(org.jetbrains.kotlin.backend.common.serialization.proto.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      name_ = value;

      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.String name = 2;</code>
     */
    public Builder setName(
        org.jetbrains.kotlin.backend.common.serialization.proto.String.Builder builderForValue) {
      name_ = builderForValue.build();

      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.String name = 2;</code>
     */
    public Builder mergeName(org.jetbrains.kotlin.backend.common.serialization.proto.String value) {
      if (((bitField0_ & 0x00000002) == 0x00000002) &&
          name_ != org.jetbrains.kotlin.backend.common.serialization.proto.String.getDefaultInstance()) {
        name_ =
          org.jetbrains.kotlin.backend.common.serialization.proto.String.newBuilder(name_).mergeFrom(value).buildPartial();
      } else {
        name_ = value;
      }

      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.String name = 2;</code>
     */
    public Builder clearName() {
      name_ = org.jetbrains.kotlin.backend.common.serialization.proto.String.getDefaultInstance();

      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    private org.jetbrains.kotlin.backend.common.serialization.proto.Visibility visibility_ = org.jetbrains.kotlin.backend.common.serialization.proto.Visibility.getDefaultInstance();
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.Visibility visibility = 3;</code>
     */
    public boolean hasVisibility() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.Visibility visibility = 3;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.Visibility getVisibility() {
      return visibility_;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.Visibility visibility = 3;</code>
     */
    public Builder setVisibility(org.jetbrains.kotlin.backend.common.serialization.proto.Visibility value) {
      if (value == null) {
        throw new NullPointerException();
      }
      visibility_ = value;

      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.Visibility visibility = 3;</code>
     */
    public Builder setVisibility(
        org.jetbrains.kotlin.backend.common.serialization.proto.Visibility.Builder builderForValue) {
      visibility_ = builderForValue.build();

      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.Visibility visibility = 3;</code>
     */
    public Builder mergeVisibility(org.jetbrains.kotlin.backend.common.serialization.proto.Visibility value) {
      if (((bitField0_ & 0x00000004) == 0x00000004) &&
          visibility_ != org.jetbrains.kotlin.backend.common.serialization.proto.Visibility.getDefaultInstance()) {
        visibility_ =
          org.jetbrains.kotlin.backend.common.serialization.proto.Visibility.newBuilder(visibility_).mergeFrom(value).buildPartial();
      } else {
        visibility_ = value;
      }

      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.Visibility visibility = 3;</code>
     */
    public Builder clearVisibility() {
      visibility_ = org.jetbrains.kotlin.backend.common.serialization.proto.Visibility.getDefaultInstance();

      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    private org.jetbrains.kotlin.backend.common.serialization.proto.ModalityKind modality_ = org.jetbrains.kotlin.backend.common.serialization.proto.ModalityKind.FINAL_MODALITY;
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.ModalityKind modality = 4;</code>
     */
    public boolean hasModality() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.ModalityKind modality = 4;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.ModalityKind getModality() {
      return modality_;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.ModalityKind modality = 4;</code>
     */
    public Builder setModality(org.jetbrains.kotlin.backend.common.serialization.proto.ModalityKind value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      modality_ = value;
      
      return this;
    }
    /**
     * <code>required .org.jetbrains.kotlin.backend.common.serialization.proto.ModalityKind modality = 4;</code>
     */
    public Builder clearModality() {
      bitField0_ = (bitField0_ & ~0x00000008);
      modality_ = org.jetbrains.kotlin.backend.common.serialization.proto.ModalityKind.FINAL_MODALITY;
      
      return this;
    }

    private boolean isVar_ ;
    /**
     * <code>required bool is_var = 5;</code>
     */
    public boolean hasIsVar() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required bool is_var = 5;</code>
     */
    public boolean getIsVar() {
      return isVar_;
    }
    /**
     * <code>required bool is_var = 5;</code>
     */
    public Builder setIsVar(boolean value) {
      bitField0_ |= 0x00000010;
      isVar_ = value;
      
      return this;
    }
    /**
     * <code>required bool is_var = 5;</code>
     */
    public Builder clearIsVar() {
      bitField0_ = (bitField0_ & ~0x00000010);
      isVar_ = false;
      
      return this;
    }

    private boolean isConst_ ;
    /**
     * <code>required bool is_const = 6;</code>
     */
    public boolean hasIsConst() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required bool is_const = 6;</code>
     */
    public boolean getIsConst() {
      return isConst_;
    }
    /**
     * <code>required bool is_const = 6;</code>
     */
    public Builder setIsConst(boolean value) {
      bitField0_ |= 0x00000020;
      isConst_ = value;
      
      return this;
    }
    /**
     * <code>required bool is_const = 6;</code>
     */
    public Builder clearIsConst() {
      bitField0_ = (bitField0_ & ~0x00000020);
      isConst_ = false;
      
      return this;
    }

    private boolean isLateinit_ ;
    /**
     * <code>required bool is_lateinit = 7;</code>
     */
    public boolean hasIsLateinit() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required bool is_lateinit = 7;</code>
     */
    public boolean getIsLateinit() {
      return isLateinit_;
    }
    /**
     * <code>required bool is_lateinit = 7;</code>
     */
    public Builder setIsLateinit(boolean value) {
      bitField0_ |= 0x00000040;
      isLateinit_ = value;
      
      return this;
    }
    /**
     * <code>required bool is_lateinit = 7;</code>
     */
    public Builder clearIsLateinit() {
      bitField0_ = (bitField0_ & ~0x00000040);
      isLateinit_ = false;
      
      return this;
    }

    private boolean isDelegated_ ;
    /**
     * <code>required bool is_delegated = 8;</code>
     */
    public boolean hasIsDelegated() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required bool is_delegated = 8;</code>
     */
    public boolean getIsDelegated() {
      return isDelegated_;
    }
    /**
     * <code>required bool is_delegated = 8;</code>
     */
    public Builder setIsDelegated(boolean value) {
      bitField0_ |= 0x00000080;
      isDelegated_ = value;
      
      return this;
    }
    /**
     * <code>required bool is_delegated = 8;</code>
     */
    public Builder clearIsDelegated() {
      bitField0_ = (bitField0_ & ~0x00000080);
      isDelegated_ = false;
      
      return this;
    }

    private boolean isExternal_ ;
    /**
     * <code>required bool is_external = 9;</code>
     */
    public boolean hasIsExternal() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required bool is_external = 9;</code>
     */
    public boolean getIsExternal() {
      return isExternal_;
    }
    /**
     * <code>required bool is_external = 9;</code>
     */
    public Builder setIsExternal(boolean value) {
      bitField0_ |= 0x00000100;
      isExternal_ = value;
      
      return this;
    }
    /**
     * <code>required bool is_external = 9;</code>
     */
    public Builder clearIsExternal() {
      bitField0_ = (bitField0_ & ~0x00000100);
      isExternal_ = false;
      
      return this;
    }

    private org.jetbrains.kotlin.backend.common.serialization.proto.IrField backingField_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrField.getDefaultInstance();
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrField backing_field = 10;</code>
     */
    public boolean hasBackingField() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrField backing_field = 10;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrField getBackingField() {
      return backingField_;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrField backing_field = 10;</code>
     */
    public Builder setBackingField(org.jetbrains.kotlin.backend.common.serialization.proto.IrField value) {
      if (value == null) {
        throw new NullPointerException();
      }
      backingField_ = value;

      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrField backing_field = 10;</code>
     */
    public Builder setBackingField(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrField.Builder builderForValue) {
      backingField_ = builderForValue.build();

      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrField backing_field = 10;</code>
     */
    public Builder mergeBackingField(org.jetbrains.kotlin.backend.common.serialization.proto.IrField value) {
      if (((bitField0_ & 0x00000200) == 0x00000200) &&
          backingField_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrField.getDefaultInstance()) {
        backingField_ =
          org.jetbrains.kotlin.backend.common.serialization.proto.IrField.newBuilder(backingField_).mergeFrom(value).buildPartial();
      } else {
        backingField_ = value;
      }

      bitField0_ |= 0x00000200;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrField backing_field = 10;</code>
     */
    public Builder clearBackingField() {
      backingField_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrField.getDefaultInstance();

      bitField0_ = (bitField0_ & ~0x00000200);
      return this;
    }

    private org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.getDefaultInstance();
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter = 11;</code>
     */
    public boolean hasGetter() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter = 11;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getGetter() {
      return getter_;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter = 11;</code>
     */
    public Builder setGetter(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      getter_ = value;

      bitField0_ |= 0x00000400;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter = 11;</code>
     */
    public Builder setGetter(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.Builder builderForValue) {
      getter_ = builderForValue.build();

      bitField0_ |= 0x00000400;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter = 11;</code>
     */
    public Builder mergeGetter(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction value) {
      if (((bitField0_ & 0x00000400) == 0x00000400) &&
          getter_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.getDefaultInstance()) {
        getter_ =
          org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.newBuilder(getter_).mergeFrom(value).buildPartial();
      } else {
        getter_ = value;
      }

      bitField0_ |= 0x00000400;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getter = 11;</code>
     */
    public Builder clearGetter() {
      getter_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.getDefaultInstance();

      bitField0_ = (bitField0_ & ~0x00000400);
      return this;
    }

    private org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.getDefaultInstance();
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter = 12;</code>
     */
    public boolean hasSetter() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter = 12;</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction getSetter() {
      return setter_;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter = 12;</code>
     */
    public Builder setSetter(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      setter_ = value;

      bitField0_ |= 0x00000800;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter = 12;</code>
     */
    public Builder setSetter(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.Builder builderForValue) {
      setter_ = builderForValue.build();

      bitField0_ |= 0x00000800;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter = 12;</code>
     */
    public Builder mergeSetter(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction value) {
      if (((bitField0_ & 0x00000800) == 0x00000800) &&
          setter_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.getDefaultInstance()) {
        setter_ =
          org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.newBuilder(setter_).mergeFrom(value).buildPartial();
      } else {
        setter_ = value;
      }

      bitField0_ |= 0x00000800;
      return this;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction setter = 12;</code>
     */
    public Builder clearSetter() {
      setter_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrFunction.getDefaultInstance();

      bitField0_ = (bitField0_ & ~0x00000800);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty)
  }

  static {
    defaultInstance = new IrProperty(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrProperty)
}
