package

public val </*0*/ T> Expect<T>.and: Expect<T>
public fun </*0*/ K> id(/*0*/ x: K): K
public fun test(): Expect<kotlin.Int>.(Expect<kotlin.Int>.() -> kotlin.Unit) -> Expect<kotlin.Int>
public infix fun </*0*/ T> Expect<T>.and(/*0*/ assertionCreator: Expect<T>.() -> kotlin.Unit): Expect<T>

public interface Expect</*0*/ T> {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
