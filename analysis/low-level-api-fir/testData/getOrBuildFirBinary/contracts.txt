KT element: KtClass
KT element text:
public final class Container public constructor() {
    public final fun decode(encoded: kotlin.String?): kotlin.String? { contract { /* compiled contract */ }; /* compiled code */ }

    public final inline fun <R> runIf(condition: kotlin.Boolean, block: () -> R): R? { /* compiled code */ }
}
FIR element: FirRegularClassImpl
FIR source kind: KtRealSourceElementKind

FIR element rendered:
public final [ResolvedTo(BODY_RESOLVE)] [IsNewPlaceForBodyGeneration=false] class Container : R|kotlin/Any| {
    public final [ResolvedTo(BODY_RESOLVE)] fun decode([ResolvedTo(BODY_RESOLVE)] encoded: R|kotlin/String?|): R|kotlin/String?|
        [R|Contract description]
         <
            encoded != null -> Returns(NOT_NULL)
        >


    public final inline [ResolvedTo(BODY_RESOLVE)] fun <[ResolvedTo(BODY_RESOLVE)] R> runIf([ResolvedTo(BODY_RESOLVE)] condition: R|kotlin/Boolean|, [ResolvedTo(BODY_RESOLVE)] block: R|() -> R|): R|R?|

    public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Container] constructor(): R|test/Container|

}
