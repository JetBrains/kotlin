// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: compiler/ir/serialization.common/src/KotlinIr.proto
// Protobuf Java Version: 4.29.3

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature}
 */
public  final class LocalSignature extends
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite<
        LocalSignature, LocalSignature.Builder> implements
    // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature)
    LocalSignatureOrBuilder {
  private LocalSignature() {
    localFqName_ = emptyIntList();
  }
  private int bitField0_;
  public static final int LOCAL_FQ_NAME_FIELD_NUMBER = 1;
  private org.jetbrains.kotlin.protobuf.Internal.IntList localFqName_;
  /**
   * <code>repeated int32 local_fq_name = 1;</code>
   * @return A list containing the localFqName.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getLocalFqNameList() {
    return localFqName_;
  }
  /**
   * <code>repeated int32 local_fq_name = 1;</code>
   * @return The count of localFqName.
   */
  @java.lang.Override
  public int getLocalFqNameCount() {
    return localFqName_.size();
  }
  /**
   * <code>repeated int32 local_fq_name = 1;</code>
   * @param index The index of the element to return.
   * @return The localFqName at the given index.
   */
  @java.lang.Override
  public int getLocalFqName(int index) {
    return localFqName_.getInt(index);
  }
  private int localFqNameMemoizedSerializedSize = -1;
  private void ensureLocalFqNameIsMutable() {
    org.jetbrains.kotlin.protobuf.Internal.IntList tmp = localFqName_;
    if (!tmp.isModifiable()) {
      localFqName_ =
          org.jetbrains.kotlin.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }
  /**
   * <code>repeated int32 local_fq_name = 1;</code>
   * @param index The index to set the value at.
   * @param value The localFqName to set.
   */
  private void setLocalFqName(
      int index, int value) {
    ensureLocalFqNameIsMutable();
    localFqName_.setInt(index, value);
  }
  /**
   * <code>repeated int32 local_fq_name = 1;</code>
   * @param value The localFqName to add.
   */
  private void addLocalFqName(int value) {
    ensureLocalFqNameIsMutable();
    localFqName_.addInt(value);
  }
  /**
   * <code>repeated int32 local_fq_name = 1;</code>
   * @param values The localFqName to add.
   */
  private void addAllLocalFqName(
      java.lang.Iterable<? extends java.lang.Integer> values) {
    ensureLocalFqNameIsMutable();
    org.jetbrains.kotlin.protobuf.AbstractMessageLite.addAll(
        values, localFqName_);
  }
  /**
   * <code>repeated int32 local_fq_name = 1;</code>
   */
  private void clearLocalFqName() {
    localFqName_ = emptyIntList();
  }

  public static final int LOCAL_HASH_FIELD_NUMBER = 2;
  private long localHash_;
  /**
   * <code>int64 local_hash = 2;</code>
   * @return Whether the localHash field is set.
   */
  @java.lang.Override
  public boolean hasLocalHash() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>int64 local_hash = 2;</code>
   * @return The localHash.
   */
  @java.lang.Override
  public long getLocalHash() {
    return localHash_;
  }
  /**
   * <code>int64 local_hash = 2;</code>
   * @param value The localHash to set.
   */
  private void setLocalHash(long value) {
    bitField0_ |= 0x00000001;
    localHash_ = value;
  }
  /**
   * <code>int64 local_hash = 2;</code>
   */
  private void clearLocalHash() {
    bitField0_ = (bitField0_ & ~0x00000001);
    localHash_ = 0L;
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature parseFrom(
      java.nio.ByteBuffer data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature parseFrom(
      java.nio.ByteBuffer data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature parseFrom(byte[] data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature parseFrom(
      byte[] data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature parseFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature parseDelimitedFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature}
   */
  public static final class Builder extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
        org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature, Builder> implements
      // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature)
      org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignatureOrBuilder {
    // Construct using org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>repeated int32 local_fq_name = 1;</code>
     * @return A list containing the localFqName.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getLocalFqNameList() {
      return java.util.Collections.unmodifiableList(
          instance.getLocalFqNameList());
    }
    /**
     * <code>repeated int32 local_fq_name = 1;</code>
     * @return The count of localFqName.
     */
    @java.lang.Override
    public int getLocalFqNameCount() {
      return instance.getLocalFqNameCount();
    }
    /**
     * <code>repeated int32 local_fq_name = 1;</code>
     * @param index The index of the element to return.
     * @return The localFqName at the given index.
     */
    @java.lang.Override
    public int getLocalFqName(int index) {
      return instance.getLocalFqName(index);
    }
    /**
     * <code>repeated int32 local_fq_name = 1;</code>
     * @param value The localFqName to set.
     * @return This builder for chaining.
     */
    public Builder setLocalFqName(
        int index, int value) {
      copyOnWrite();
      instance.setLocalFqName(index, value);
      return this;
    }
    /**
     * <code>repeated int32 local_fq_name = 1;</code>
     * @param value The localFqName to add.
     * @return This builder for chaining.
     */
    public Builder addLocalFqName(int value) {
      copyOnWrite();
      instance.addLocalFqName(value);
      return this;
    }
    /**
     * <code>repeated int32 local_fq_name = 1;</code>
     * @param values The localFqName to add.
     * @return This builder for chaining.
     */
    public Builder addAllLocalFqName(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      copyOnWrite();
      instance.addAllLocalFqName(values);
      return this;
    }
    /**
     * <code>repeated int32 local_fq_name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearLocalFqName() {
      copyOnWrite();
      instance.clearLocalFqName();
      return this;
    }

    /**
     * <code>int64 local_hash = 2;</code>
     * @return Whether the localHash field is set.
     */
    @java.lang.Override
    public boolean hasLocalHash() {
      return instance.hasLocalHash();
    }
    /**
     * <code>int64 local_hash = 2;</code>
     * @return The localHash.
     */
    @java.lang.Override
    public long getLocalHash() {
      return instance.getLocalHash();
    }
    /**
     * <code>int64 local_hash = 2;</code>
     * @param value The localHash to set.
     * @return This builder for chaining.
     */
    public Builder setLocalHash(long value) {
      copyOnWrite();
      instance.setLocalHash(value);
      return this;
    }
    /**
     * <code>int64 local_hash = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearLocalHash() {
      copyOnWrite();
      instance.clearLocalHash();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "localFqName_",
            "localHash_",
          };
          java.lang.String info =
              "\u0004\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0001\u0000\u0001\'\u0002\u1002" +
              "\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        org.jetbrains.kotlin.protobuf.Parser<org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature> parser = PARSER;
        if (parser == null) {
          synchronized (org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature)
  private static final org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature DEFAULT_INSTANCE;
  static {
    LocalSignature defaultInstance = new LocalSignature();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.registerDefaultInstance(
      LocalSignature.class, defaultInstance);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.LocalSignature getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile org.jetbrains.kotlin.protobuf.Parser<LocalSignature> PARSER;

  public static org.jetbrains.kotlin.protobuf.Parser<LocalSignature> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
