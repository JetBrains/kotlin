KtFile: DeclarationAfterDotSelectorExpected.kt
  PACKAGE_DIRECTIVE
    <empty list>
  IMPORT_LIST
    <empty list>
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('x')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('Any')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      DOT_QUALIFIED_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('x')
        PsiElement(DOT)('.')
        PsiErrorElement:Expecting an element
          <empty list>
      PsiWhiteSpace('\n    ')
      PROPERTY
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('foo')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        INTEGER_CONSTANT
          PsiElement(INTEGER_LITERAL)('1')
      PsiWhiteSpace('\n\n    ')
      DOT_QUALIFIED_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('x')
        PsiElement(DOT)('.')
        PsiErrorElement:Expecting an element
          <empty list>
      PsiWhiteSpace('\n    ')
      FUN
        PsiElement(fun)('fun')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('bar')
        VALUE_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        INTEGER_CONSTANT
          PsiElement(INTEGER_LITERAL)('2')
      PsiWhiteSpace('\n\n    ')
      DOT_QUALIFIED_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('x')
        PsiElement(DOT)('.')
        PsiWhiteSpace('\n    ')
        FUN
          PsiElement(fun)('fun')
          PsiWhiteSpace(' ')
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('String')
          PsiElement(DOT)('.')
          VALUE_PARAMETER_LIST
            PsiElement(LPAR)('(')
            PsiElement(RPAR)(')')
          PsiWhiteSpace(' ')
          PsiElement(EQ)('=')
          PsiWhiteSpace(' ')
          INTEGER_CONSTANT
            PsiElement(INTEGER_LITERAL)('3')
      PsiWhiteSpace('\n\n    ')
      PROPERTY
        PsiElement(var)('var')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('a')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        DOT_QUALIFIED_EXPRESSION
          INTEGER_CONSTANT
            PsiElement(INTEGER_LITERAL)('24')
          PsiElement(DOT)('.')
          PsiErrorElement:Expecting an element
            <empty list>
      PsiWhiteSpace('\n    ')
      PROPERTY
        PsiElement(var)('var')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('b')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        FLOAT_CONSTANT
          PsiElement(FLOAT_CONSTANT)('42.0')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n\n')
  CLASS
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('A')
    PsiWhiteSpace(' ')
    CLASS_BODY
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      PROPERTY
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('z')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        DOT_QUALIFIED_EXPRESSION
          STRING_TEMPLATE
            PsiElement(OPEN_QUOTE)('"')
            LITERAL_STRING_TEMPLATE_ENTRY
              PsiElement(REGULAR_STRING_PART)('a')
            PsiElement(CLOSING_QUOTE)('"')
          PsiElement(DOT)('.')
          PsiErrorElement:Expecting an element
            <empty list>
      PsiWhiteSpace('\n    ')
      PROPERTY
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('x')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        INTEGER_CONSTANT
          PsiElement(INTEGER_LITERAL)('4')
      PsiWhiteSpace('\n\n    ')
      PROPERTY
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('y')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        DOT_QUALIFIED_EXPRESSION
          STRING_TEMPLATE
            PsiElement(OPEN_QUOTE)('"')
            LITERAL_STRING_TEMPLATE_ENTRY
              PsiElement(REGULAR_STRING_PART)('b')
            PsiElement(CLOSING_QUOTE)('"')
          PsiElement(DOT)('.')
          PsiErrorElement:Expecting an element
            <empty list>
      PsiWhiteSpace('\n    ')
      FUN
        PsiElement(fun)('fun')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('baz')
        VALUE_PARAMETER_LIST
          PsiElement(LPAR)('(')
          PsiElement(RPAR)(')')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        INTEGER_CONSTANT
          PsiElement(INTEGER_LITERAL)('5')
      PsiWhiteSpace('\n\n    ')
      PROPERTY
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('q')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        DOT_QUALIFIED_EXPRESSION
          STRING_TEMPLATE
            PsiElement(OPEN_QUOTE)('"')
            LITERAL_STRING_TEMPLATE_ENTRY
              PsiElement(REGULAR_STRING_PART)('c')
            PsiElement(CLOSING_QUOTE)('"')
          PsiElement(DOT)('.')
          PsiWhiteSpace('\n    ')
          FUN
            PsiElement(fun)('fun')
            PsiWhiteSpace(' ')
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('String')
            PsiElement(DOT)('.')
            VALUE_PARAMETER_LIST
              PsiElement(LPAR)('(')
              PsiElement(RPAR)(')')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('6')
      PsiWhiteSpace('\n\n    ')
      PROPERTY
        PsiElement(var)('var')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('a')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        DOT_QUALIFIED_EXPRESSION
          INTEGER_CONSTANT
            PsiElement(INTEGER_LITERAL)('24')
          PsiElement(DOT)('.')
          PsiErrorElement:Expecting an element
            <empty list>
      PsiWhiteSpace('\n    ')
      PROPERTY
        PsiElement(var)('var')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('b')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        FLOAT_CONSTANT
          PsiElement(FLOAT_CONSTANT)('42.0')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
