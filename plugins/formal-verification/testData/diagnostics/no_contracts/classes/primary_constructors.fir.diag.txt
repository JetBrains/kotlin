/primary_constructors.kt:(70,91): info: Generated Viper text for createPrimitiveFields:
field bf$public$a: Ref

field bf$public$b: Ref

method con$c$PrimitiveFields$T$Int$T$Int(p$a: Ref, p$b: Ref)
  returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$T$c$PrimitiveFields())
  ensures acc(p$c$PrimitiveFields$shared(ret), wildcard)
  ensures acc(p$c$PrimitiveFields$unique(ret), write)
  ensures (unfolding acc(p$c$PrimitiveFields$shared(ret), wildcard) in
      df$rt$intFromRef(ret.bf$public$a) == df$rt$intFromRef(p$a) &&
      df$rt$intFromRef(ret.bf$public$b) == df$rt$intFromRef(p$b))


method f$createPrimitiveFields$TF$() returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$T$c$PrimitiveFields())
  ensures acc(p$c$PrimitiveFields$shared(ret$0), wildcard)
{
  ret$0 := con$c$PrimitiveFields$T$Int$T$Int(df$rt$intToRef(10), df$rt$intToRef(20))
  goto lbl$ret$0
  label lbl$ret$0
}

/primary_constructors.kt:(178,193): info: Generated Viper text for createRecursive:
field bf$public$a: Ref

method con$c$Recursive$c$Recursive(p$a: Ref) returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$T$c$Recursive())
  ensures acc(p$c$Recursive$shared(ret), wildcard)
  ensures acc(p$c$Recursive$unique(ret), write)
  ensures (unfolding acc(p$c$Recursive$shared(ret), wildcard) in
      ret.bf$public$a == p$a)


method f$createRecursive$TF$() returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$T$c$Recursive())
  ensures acc(p$c$Recursive$shared(ret$0), wildcard)
{
  ret$0 := con$c$Recursive$c$Recursive(df$rt$nullValue())
  goto lbl$ret$0
  label lbl$ret$0
}

/primary_constructors.kt:(279,296): info: Generated Viper text for createFieldInBody:
field bf$public$a: Ref

field bf$public$c: Ref

method con$c$FieldInBody$T$Int(p$c: Ref) returns (ret: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret), df$rt$T$c$FieldInBody())
  ensures acc(p$c$FieldInBody$shared(ret), wildcard)
  ensures acc(p$c$FieldInBody$unique(ret), write)
  ensures (unfolding acc(p$c$FieldInBody$shared(ret), wildcard) in
      df$rt$intFromRef(ret.bf$public$c) == df$rt$intFromRef(p$c))


method f$createFieldInBody$TF$() returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$T$c$FieldInBody())
  ensures acc(p$c$FieldInBody$shared(ret$0), wildcard)
{
  ret$0 := con$c$FieldInBody$T$Int(df$rt$intToRef(10))
  goto lbl$ret$0
  label lbl$ret$0
}
