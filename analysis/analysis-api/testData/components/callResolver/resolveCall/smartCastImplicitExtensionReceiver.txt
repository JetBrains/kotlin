KtSuccessCallInfo:
  call = KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = KtSmartCastedReceiverValue:
        original = KtImplicitReceiverValue:
          symbol = KtReceiverParameterSymbol:
            annotationsList: []
            origin: SOURCE
            owningCallableSymbol: KtFunctionSymbol(/test)
            type: KtUsualClassType:
              annotationsList: []
              ownTypeArguments: []
              type: kotlin/Any
          type = kotlin.Any
        type = kotlin.String
      signature = KtFunctionLikeSignature:
        receiverType = kotlin.String
        returnType = kotlin.Unit
        symbol = /foo(<extension receiver>: kotlin.String): kotlin.Unit
        valueParameters = []
        callableIdIfNonLocal = /foo
    typeArgumentsMapping = {}
    argumentMapping = {}