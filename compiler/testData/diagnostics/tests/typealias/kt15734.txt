package

public val test1: TNString /* = kotlin.String? */
public val test2: TNAString /* = @Ann kotlin.String? */
public val test3: kotlin.collections.List<TNString /* = kotlin.String? */>
public val test4: kotlin.collections.List<TNAString /* = @Ann kotlin.String? */>
public val test5: kotlin.collections.List<TNString? /* = kotlin.String? */>
public val test6: () -> kotlin.collections.List<TNString /* = kotlin.String? */>
public fun test(/*0*/ x: TNString /* = kotlin.String? */): kotlin.Unit

@kotlin.annotation.Target(allowedTargets = {AnnotationTarget.TYPE}) public final annotation class Ann : kotlin.Annotation {
    public constructor Ann()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
public typealias TNAString = @Ann TString?
public typealias TNString = TString?
public typealias TString = kotlin.String
