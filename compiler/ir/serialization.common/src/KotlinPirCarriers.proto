syntax = "proto2";
package org.jetbrains.kotlin.backend.common.serialization.proto;

option java_multiple_files = true;
option java_outer_classname = "KotlinIr";
option optimize_for = LITE_RUNTIME;

import "compiler/ir/serialization.common/src/KotlinIr.proto";

// Auto-generated by compiler/ir/ir.tree/src/org/jetbrains/kotlin/ir/persistentIrGenerator/Main.kt. DO NOT EDIT!

message PirAnonymousInitializerCarrier {
    required int32 lastModified = 1;
    optional int64 parentSymbol = 2;
    optional int32 origin = 3;
    repeated IrConstructorCall annotation = 4;
    optional int32 body = 5;
}

message PirClassCarrier {
    required int32 lastModified = 1;
    optional int64 parentSymbol = 2;
    optional int32 origin = 3;
    repeated IrConstructorCall annotation = 4;
    optional int64 thisReceiver = 5;
    repeated int64 typeParameters = 6;
    repeated int32 superTypes = 7;
    optional int64 flags = 8 [default = 0];
}

message PirConstructorCarrier {
    required int32 lastModified = 1;
    optional int64 parentSymbol = 2;
    optional int32 origin = 3;
    repeated IrConstructorCall annotation = 4;
    required int32 returnTypeField = 5;
    optional int64 dispatchReceiverParameter = 6;
    optional int64 extensionReceiverParameter = 7;
    optional int32 body = 8;
    repeated int64 typeParameters = 9;
    repeated int64 valueParameters = 10;
    optional int64 flags = 11 [default = 0];
}

message PirEnumEntryCarrier {
    required int32 lastModified = 1;
    optional int64 parentSymbol = 2;
    optional int32 origin = 3;
    repeated IrConstructorCall annotation = 4;
    optional int64 correspondingClass = 5;
    optional int32 initializerExpression = 6;
}

message PirErrorDeclarationCarrier {
    required int32 lastModified = 1;
    optional int64 parentSymbol = 2;
    optional int32 origin = 3;
    repeated IrConstructorCall annotation = 4;
}

message PirFieldCarrier {
    required int32 lastModified = 1;
    optional int64 parentSymbol = 2;
    optional int32 origin = 3;
    repeated IrConstructorCall annotation = 4;
    required int32 type = 5;
    optional int32 initializer = 6;
    optional int64 correspondingPropertySymbol = 7;
}

message PirFunctionCarrier {
    required int32 lastModified = 1;
    optional int64 parentSymbol = 2;
    optional int32 origin = 3;
    repeated IrConstructorCall annotation = 4;
    required int32 returnTypeField = 5;
    optional int64 dispatchReceiverParameter = 6;
    optional int64 extensionReceiverParameter = 7;
    optional int32 body = 8;
    repeated int64 typeParameters = 9;
    repeated int64 valueParameters = 10;
    optional int64 correspondingPropertySymbol = 11;
    repeated int64 overriddenSymbols = 12;
    optional int64 flags = 13 [default = 0];
}

message PirLocalDelegatedPropertyCarrier {
    required int32 lastModified = 1;
    optional int64 parentSymbol = 2;
    optional int32 origin = 3;
    repeated IrConstructorCall annotation = 4;
    required int32 type = 5;
    optional IrVariable delegate = 6;
    optional int64 getter = 7;
    optional int64 setter = 8;
}

message PirPropertyCarrier {
    required int32 lastModified = 1;
    optional int64 parentSymbol = 2;
    optional int32 origin = 3;
    repeated IrConstructorCall annotation = 4;
    optional int64 backingField = 5;
    optional int64 getter = 6;
    optional int64 setter = 7;
}

message PirTypeAliasCarrier {
    required int32 lastModified = 1;
    optional int64 parentSymbol = 2;
    optional int32 origin = 3;
    repeated IrConstructorCall annotation = 4;
    repeated int64 typeParameters = 5;
    required int32 expandedType = 6;
}

message PirTypeParameterCarrier {
    required int32 lastModified = 1;
    optional int64 parentSymbol = 2;
    optional int32 origin = 3;
    repeated IrConstructorCall annotation = 4;
    repeated int32 superTypes = 5;
}

message PirValueParameterCarrier {
    required int32 lastModified = 1;
    optional int64 parentSymbol = 2;
    optional int32 origin = 3;
    repeated IrConstructorCall annotation = 4;
    optional int32 defaultValue = 5;
    required int32 type = 6;
    optional int32 varargElementType = 7;
}
