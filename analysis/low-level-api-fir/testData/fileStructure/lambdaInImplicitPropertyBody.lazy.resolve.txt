FILE: [ResolvedTo(BODY_RESOLVE)] lambdaInImplicitPropertyBody.kt
    public final inline [ResolvedTo(BODY_RESOLVE)] fun <[ResolvedTo(BODY_RESOLVE)] T, [ResolvedTo(BODY_RESOLVE)] R> with([ResolvedTo(BODY_RESOLVE)] receiver: R|T|, [ResolvedTo(BODY_RESOLVE)] block: R|T.() -> R|): R|R| {
        ^with R|<local>/block|.R|SubstitutionOverride<kotlin/Function1.invoke: R|R|>|(R|<local>/receiver|)
    }
    public final inline [ResolvedTo(BODY_RESOLVE)] fun <[ResolvedTo(BODY_RESOLVE)] T, [ResolvedTo(BODY_RESOLVE)] R> [ResolvedTo(BODY_RESOLVE)] R|T|.let([ResolvedTo(BODY_RESOLVE)] block: R|(T) -> R|): R|R| {
        ^let R|<local>/block|.R|SubstitutionOverride<kotlin/Function1.invoke: R|R|>|(this@R|/let|)
    }
    public final [ResolvedTo(BODY_RESOLVE)] class B : R|kotlin/Any| {
        public [ResolvedTo(BODY_RESOLVE)] constructor(): R|B| {
            super<R|kotlin/Any|>()
        }

        public final [ResolvedTo(BODY_RESOLVE)] val a: R|kotlin/Int| = Int(10)
            public [ResolvedTo(BODY_RESOLVE)] get(): R|kotlin/Int|

        public final [ResolvedTo(BODY_RESOLVE)] val x: R|kotlin/String| = R|/with|<R|kotlin/Int|, R|kotlin/String|>(this@R|/B|.R|/B.a|, <L> = [ResolvedTo(BODY_RESOLVE)] with@fun [ResolvedTo(BODY_RESOLVE)] R|kotlin/Int|.<anonymous>(): R|kotlin/String| <inline=Inline, kind=UNKNOWN>  {
            ^ this@R|special/anonymous|.R|kotlin/Int.toString|().R|/let|<R|kotlin/String|, R|kotlin/String|>(<L> = [ResolvedTo(BODY_RESOLVE)] let@fun <anonymous>([ResolvedTo(BODY_RESOLVE)] it: R|kotlin/String|): R|kotlin/String| <inline=Inline, kind=UNKNOWN>  {
                ^ R|<local>/it|
            }
            )
        }
        )
            public [ResolvedTo(BODY_RESOLVE)] get(): R|kotlin/String|

    }
