FILE fqName:<root> fileName:/1.kt
  CLASS CLASS name:A modality:ABSTRACT visibility:public superTypes:[<root>.Java1<T of <root>.A>]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.A<T of <root>.A>
    TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
    CONSTRUCTOR visibility:public <> () returnType:<root>.A<T of <root>.A> [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.Java1'
          <T>: @[FlexibleNullability] T of <root>.A?
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:A modality:ABSTRACT visibility:public superTypes:[<root>.Java1<T of <root>.A>]'
    FUN FAKE_OVERRIDE name:clear visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>) returnType:kotlin.Unit [fake_override]
      overridden:
        public open fun clear (): kotlin.Unit declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
    FUN FAKE_OVERRIDE name:clone visibility:protected/*protected and package*/ modality:OPEN <> ($this:java.util.AbstractMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>) returnType:@[FlexibleNullability] kotlin.Any? [fake_override]
      overridden:
        protected/*protected and package*/ open fun clone (): @[FlexibleNullability] kotlin.Any? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:java.util.AbstractMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
    FUN FAKE_OVERRIDE name:compute visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?, p1:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.A?, in @[EnhancedNullability] T of <root>.A?, out @[EnhancedNullability] T of <root>.A?>) returnType:@[EnhancedNullability] T of <root>.A? [fake_override]
      overridden:
        public open fun compute (p0: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, in @[EnhancedNullability] T of <root>.Java1?, out @[EnhancedNullability] T of <root>.Java1?>): @[EnhancedNullability] T of <root>.Java1? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.A?, in @[EnhancedNullability] T of <root>.A?, out @[EnhancedNullability] T of <root>.A?>
    FUN FAKE_OVERRIDE name:computeIfAbsent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?, p1:@[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.A?, out @[EnhancedNullability] @[FlexibleNullability] T of <root>.A?>) returnType:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A? [fake_override]
      overridden:
        public open fun computeIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, p1: @[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, out @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?>): @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.A?, out @[EnhancedNullability] @[FlexibleNullability] T of <root>.A?>
    FUN FAKE_OVERRIDE name:computeIfPresent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?, p1:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.A?, in @[EnhancedNullability] {T of <root>.A & Any}, out @[EnhancedNullability] T of <root>.A?>) returnType:@[EnhancedNullability] T of <root>.A? [fake_override]
      overridden:
        public open fun computeIfPresent (p0: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, in @[EnhancedNullability] {T of <root>.Java1 & Any}, out @[EnhancedNullability] T of <root>.Java1?>): @[EnhancedNullability] T of <root>.Java1? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.A?, in @[EnhancedNullability] {T of <root>.A & Any}, out @[EnhancedNullability] T of <root>.A?>
    FUN FAKE_OVERRIDE name:containsKey visibility:public modality:OPEN <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>, key:@[FlexibleNullability] T of <root>.A?) returnType:kotlin.Boolean [fake_override]
      overridden:
        public open fun containsKey (key: @[FlexibleNullability] T of <root>.Java1?): kotlin.Boolean declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.A?
    FUN FAKE_OVERRIDE name:containsValue visibility:public modality:OPEN <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>, value:@[FlexibleNullability] T of <root>.A?) returnType:kotlin.Boolean [fake_override]
      overridden:
        public open fun containsValue (value: @[FlexibleNullability] T of <root>.Java1?): kotlin.Boolean declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER name:value index:0 type:@[FlexibleNullability] T of <root>.A?
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:forEach visibility:public modality:OPEN <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>, p0:@[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.A?, in @[EnhancedNullability] @[FlexibleNullability] T of <root>.A?>) returnType:kotlin.Unit [fake_override]
      overridden:
        public open fun forEach (p0: @[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, in @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?>): kotlin.Unit declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.A?, in @[EnhancedNullability] @[FlexibleNullability] T of <root>.A?>
    FUN FAKE_OVERRIDE name:get visibility:public modality:OPEN <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>, key:@[FlexibleNullability] T of <root>.A?) returnType:T of <root>.A? [fake_override,operator]
      overridden:
        public open fun get (key: @[FlexibleNullability] T of <root>.Java1?): T of <root>.Java1? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.A?
    FUN FAKE_OVERRIDE name:getOrDefault visibility:public modality:OPEN <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>, key:@[FlexibleNullability] T of <root>.A?, defaultValue:@[FlexibleNullability] T of <root>.A?) returnType:@[FlexibleNullability] T of <root>.A? [fake_override]
      annotations:
        SinceKotlin(version = "1.1")
        PlatformDependent
      overridden:
        public open fun getOrDefault (key: @[FlexibleNullability] T of <root>.Java1?, defaultValue: @[FlexibleNullability] T of <root>.Java1?): @[FlexibleNullability] T of <root>.Java1? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.A?
      VALUE_PARAMETER name:defaultValue index:1 type:@[FlexibleNullability] T of <root>.A?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:OPEN <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>) returnType:kotlin.Boolean [fake_override]
      overridden:
        public open fun isEmpty (): kotlin.Boolean declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
    FUN FAKE_OVERRIDE name:merge visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?, p1:@[EnhancedNullability] {T of <root>.A & Any}, p2:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] {T of <root>.A & Any}, in @[EnhancedNullability] {T of <root>.A & Any}, out @[EnhancedNullability] T of <root>.A?>) returnType:@[EnhancedNullability] T of <root>.A? [fake_override]
      overridden:
        public open fun merge (p0: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, p1: @[EnhancedNullability] {T of <root>.Java1 & Any}, p2: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] {T of <root>.Java1 & Any}, in @[EnhancedNullability] {T of <root>.Java1 & Any}, out @[EnhancedNullability] T of <root>.Java1?>): @[EnhancedNullability] T of <root>.Java1? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] {T of <root>.A & Any}
      VALUE_PARAMETER name:p2 index:2 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] {T of <root>.A & Any}, in @[EnhancedNullability] {T of <root>.A & Any}, out @[EnhancedNullability] T of <root>.A?>
    FUN FAKE_OVERRIDE name:put visibility:public modality:ABSTRACT <> ($this:kotlin.collections.AbstractMutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>, key:@[FlexibleNullability] T of <root>.A?, value:@[FlexibleNullability] T of <root>.A?) returnType:T of <root>.A? [fake_override]
      overridden:
        public abstract fun put (key: @[FlexibleNullability] T of <root>.Java1?, value: @[FlexibleNullability] T of <root>.Java1?): T of <root>.Java1? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.AbstractMutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.A?
      VALUE_PARAMETER name:value index:1 type:@[FlexibleNullability] T of <root>.A?
    FUN FAKE_OVERRIDE name:putAll visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>, from:kotlin.collections.Map<out @[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>) returnType:kotlin.Unit [fake_override]
      overridden:
        public open fun putAll (from: kotlin.collections.Map<out @[FlexibleNullability] T of <root>.Java1?, @[FlexibleNullability] T of <root>.Java1?>): kotlin.Unit declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER name:from index:0 type:kotlin.collections.Map<out @[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
    FUN FAKE_OVERRIDE name:putIfAbsent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?, p1:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?) returnType:@[EnhancedNullability] T of <root>.A? [fake_override]
      overridden:
        public open fun putIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, p1: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?): @[EnhancedNullability] T of <root>.Java1? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?
    FUN FAKE_OVERRIDE name:remove visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>, key:@[FlexibleNullability] T of <root>.A?) returnType:T of <root>.A? [fake_override]
      overridden:
        public open fun remove (key: @[FlexibleNullability] T of <root>.Java1?): T of <root>.Java1? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.A?
    FUN FAKE_OVERRIDE name:remove visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>, key:@[FlexibleNullability] T of <root>.A?, value:@[FlexibleNullability] T of <root>.A?) returnType:kotlin.Boolean [fake_override]
      annotations:
        SinceKotlin(version = "1.1")
        PlatformDependent
      overridden:
        public open fun remove (key: @[FlexibleNullability] T of <root>.Java1?, value: @[FlexibleNullability] T of <root>.Java1?): kotlin.Boolean declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.A?
      VALUE_PARAMETER name:value index:1 type:@[FlexibleNullability] T of <root>.A?
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?, p1:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?) returnType:@[EnhancedNullability] T of <root>.A? [fake_override]
      overridden:
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, p1: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?): @[EnhancedNullability] T of <root>.Java1? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?, p1:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?, p2:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?) returnType:kotlin.Boolean [fake_override]
      overridden:
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, p1: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, p2: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?): kotlin.Boolean declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?
      VALUE_PARAMETER name:p2 index:2 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.A?
    FUN FAKE_OVERRIDE name:replaceAll visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>, p0:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.A?, in @[EnhancedNullability] @[FlexibleNullability] T of <root>.A?, out @[EnhancedNullability] @[FlexibleNullability] T of <root>.A?>) returnType:kotlin.Unit [fake_override]
      overridden:
        public open fun replaceAll (p0: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, in @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, out @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?>): kotlin.Unit declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.A?, in @[EnhancedNullability] @[FlexibleNullability] T of <root>.A?, out @[EnhancedNullability] @[FlexibleNullability] T of <root>.A?>
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    PROPERTY FAKE_OVERRIDE name:entries visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract entries: kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] T of <root>.Java1?, @[FlexibleNullability] T of <root>.Java1?>> declared in <root>.Java1
      FUN FAKE_OVERRIDE name:<get-entries> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>) returnType:kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>> [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:entries visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-entries> (): kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] T of <root>.Java1?, @[FlexibleNullability] T of <root>.Java1?>> declared in <root>.Java1
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
    PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:OPEN [fake_override,val]
      overridden:
        public open keys: kotlin.collections.MutableSet<@[FlexibleNullability] T of <root>.Java1?> declared in <root>.Java1
      FUN FAKE_OVERRIDE name:<get-keys> visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>) returnType:kotlin.collections.MutableSet<@[FlexibleNullability] T of <root>.A?> [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:OPEN [fake_override,val]
        overridden:
          public open fun <get-keys> (): kotlin.collections.MutableSet<@[FlexibleNullability] T of <root>.Java1?> declared in <root>.Java1
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
    PROPERTY FAKE_OVERRIDE name:size visibility:public modality:OPEN [fake_override,val]
      overridden:
        public open size: kotlin.Int declared in <root>.Java1
      FUN FAKE_OVERRIDE name:<get-size> visibility:public modality:OPEN <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>) returnType:kotlin.Int [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:size visibility:public modality:OPEN [fake_override,val]
        overridden:
          public open fun <get-size> (): kotlin.Int declared in <root>.Java1
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
    PROPERTY FAKE_OVERRIDE name:values visibility:public modality:OPEN [fake_override,val]
      overridden:
        public open values: kotlin.collections.MutableCollection<@[FlexibleNullability] T of <root>.Java1?> declared in <root>.Java1
      FUN FAKE_OVERRIDE name:<get-values> visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>) returnType:kotlin.collections.MutableCollection<@[FlexibleNullability] T of <root>.A?> [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:values visibility:public modality:OPEN [fake_override,val]
        overridden:
          public open fun <get-values> (): kotlin.collections.MutableCollection<@[FlexibleNullability] T of <root>.Java1?> declared in <root>.Java1
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
  CLASS CLASS name:B modality:FINAL visibility:public superTypes:[<root>.Java1<T of <root>.B>]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.B<T of <root>.B>
    TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
    PROPERTY name:entries visibility:public modality:OPEN [val]
      overridden:
        public abstract entries: kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] T of <root>.Java1?, @[FlexibleNullability] T of <root>.Java1?>> declared in <root>.Java1
      FIELD PROPERTY_BACKING_FIELD name:entries type:kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<T of <root>.B, T of <root>.B>> visibility:private [final]
        EXPRESSION_BODY
          GET_VAR 'entries: kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<T of <root>.B, T of <root>.B>> declared in <root>.B.<init>' type=kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<T of <root>.B, T of <root>.B>> origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-entries> visibility:public modality:OPEN <> ($this:<root>.B<T of <root>.B>) returnType:kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<T of <root>.B, T of <root>.B>>
        correspondingProperty: PROPERTY name:entries visibility:public modality:OPEN [val]
        overridden:
          public abstract fun <get-entries> (): kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] T of <root>.Java1?, @[FlexibleNullability] T of <root>.Java1?>> declared in <root>.Java1
        $this: VALUE_PARAMETER name:<this> type:<root>.B<T of <root>.B>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public open fun <get-entries> (): kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<T of <root>.B, T of <root>.B>> declared in <root>.B'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:entries type:kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<T of <root>.B, T of <root>.B>> visibility:private [final]' type=kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<T of <root>.B, T of <root>.B>> origin=null
              receiver: GET_VAR '<this>: <root>.B<T of <root>.B> declared in <root>.B.<get-entries>' type=<root>.B<T of <root>.B> origin=null
    CONSTRUCTOR visibility:public <> (entries:kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<T of <root>.B, T of <root>.B>>) returnType:<root>.B<T of <root>.B> [primary]
      VALUE_PARAMETER name:entries index:0 type:kotlin.collections.MutableSet<kotlin.collections.MutableMap.MutableEntry<T of <root>.B, T of <root>.B>>
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.Java1'
          <T>: @[FlexibleNullability] T of <root>.B?
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:B modality:FINAL visibility:public superTypes:[<root>.Java1<T of <root>.B>]'
    FUN FAKE_OVERRIDE name:clear visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>) returnType:kotlin.Unit [fake_override]
      overridden:
        public open fun clear (): kotlin.Unit declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
    FUN FAKE_OVERRIDE name:clone visibility:protected/*protected and package*/ modality:OPEN <> ($this:java.util.AbstractMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>) returnType:@[FlexibleNullability] kotlin.Any? [fake_override]
      overridden:
        protected/*protected and package*/ open fun clone (): @[FlexibleNullability] kotlin.Any? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:java.util.AbstractMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
    FUN FAKE_OVERRIDE name:compute visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?, p1:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.B?, in @[EnhancedNullability] T of <root>.B?, out @[EnhancedNullability] T of <root>.B?>) returnType:@[EnhancedNullability] T of <root>.B? [fake_override]
      overridden:
        public open fun compute (p0: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, in @[EnhancedNullability] T of <root>.Java1?, out @[EnhancedNullability] T of <root>.Java1?>): @[EnhancedNullability] T of <root>.Java1? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.B?, in @[EnhancedNullability] T of <root>.B?, out @[EnhancedNullability] T of <root>.B?>
    FUN FAKE_OVERRIDE name:computeIfAbsent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?, p1:@[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.B?, out @[EnhancedNullability] @[FlexibleNullability] T of <root>.B?>) returnType:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B? [fake_override]
      overridden:
        public open fun computeIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, p1: @[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, out @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?>): @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.B?, out @[EnhancedNullability] @[FlexibleNullability] T of <root>.B?>
    FUN FAKE_OVERRIDE name:computeIfPresent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?, p1:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.B?, in @[EnhancedNullability] {T of <root>.B & Any}, out @[EnhancedNullability] T of <root>.B?>) returnType:@[EnhancedNullability] T of <root>.B? [fake_override]
      overridden:
        public open fun computeIfPresent (p0: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, in @[EnhancedNullability] {T of <root>.Java1 & Any}, out @[EnhancedNullability] T of <root>.Java1?>): @[EnhancedNullability] T of <root>.Java1? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.B?, in @[EnhancedNullability] {T of <root>.B & Any}, out @[EnhancedNullability] T of <root>.B?>
    FUN FAKE_OVERRIDE name:containsKey visibility:public modality:OPEN <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>, key:@[FlexibleNullability] T of <root>.B?) returnType:kotlin.Boolean [fake_override]
      overridden:
        public open fun containsKey (key: @[FlexibleNullability] T of <root>.Java1?): kotlin.Boolean declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.B?
    FUN FAKE_OVERRIDE name:containsValue visibility:public modality:OPEN <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>, value:@[FlexibleNullability] T of <root>.B?) returnType:kotlin.Boolean [fake_override]
      overridden:
        public open fun containsValue (value: @[FlexibleNullability] T of <root>.Java1?): kotlin.Boolean declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER name:value index:0 type:@[FlexibleNullability] T of <root>.B?
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:forEach visibility:public modality:OPEN <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>, p0:@[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.B?, in @[EnhancedNullability] @[FlexibleNullability] T of <root>.B?>) returnType:kotlin.Unit [fake_override]
      overridden:
        public open fun forEach (p0: @[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, in @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?>): kotlin.Unit declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.B?, in @[EnhancedNullability] @[FlexibleNullability] T of <root>.B?>
    FUN FAKE_OVERRIDE name:get visibility:public modality:OPEN <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>, key:@[FlexibleNullability] T of <root>.B?) returnType:T of <root>.B? [fake_override,operator]
      overridden:
        public open fun get (key: @[FlexibleNullability] T of <root>.Java1?): T of <root>.Java1? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.B?
    FUN FAKE_OVERRIDE name:getOrDefault visibility:public modality:OPEN <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>, key:@[FlexibleNullability] T of <root>.B?, defaultValue:@[FlexibleNullability] T of <root>.B?) returnType:@[FlexibleNullability] T of <root>.B? [fake_override]
      annotations:
        SinceKotlin(version = "1.1")
        PlatformDependent
      overridden:
        public open fun getOrDefault (key: @[FlexibleNullability] T of <root>.Java1?, defaultValue: @[FlexibleNullability] T of <root>.Java1?): @[FlexibleNullability] T of <root>.Java1? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.B?
      VALUE_PARAMETER name:defaultValue index:1 type:@[FlexibleNullability] T of <root>.B?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:OPEN <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>) returnType:kotlin.Boolean [fake_override]
      overridden:
        public open fun isEmpty (): kotlin.Boolean declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
    FUN FAKE_OVERRIDE name:merge visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?, p1:@[EnhancedNullability] {T of <root>.B & Any}, p2:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] {T of <root>.B & Any}, in @[EnhancedNullability] {T of <root>.B & Any}, out @[EnhancedNullability] T of <root>.B?>) returnType:@[EnhancedNullability] T of <root>.B? [fake_override]
      overridden:
        public open fun merge (p0: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, p1: @[EnhancedNullability] {T of <root>.Java1 & Any}, p2: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] {T of <root>.Java1 & Any}, in @[EnhancedNullability] {T of <root>.Java1 & Any}, out @[EnhancedNullability] T of <root>.Java1?>): @[EnhancedNullability] T of <root>.Java1? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] {T of <root>.B & Any}
      VALUE_PARAMETER name:p2 index:2 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] {T of <root>.B & Any}, in @[EnhancedNullability] {T of <root>.B & Any}, out @[EnhancedNullability] T of <root>.B?>
    FUN FAKE_OVERRIDE name:putAll visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>, from:kotlin.collections.Map<out @[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>) returnType:kotlin.Unit [fake_override]
      overridden:
        public open fun putAll (from: kotlin.collections.Map<out @[FlexibleNullability] T of <root>.Java1?, @[FlexibleNullability] T of <root>.Java1?>): kotlin.Unit declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER name:from index:0 type:kotlin.collections.Map<out @[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
    FUN FAKE_OVERRIDE name:putIfAbsent visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?, p1:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?) returnType:@[EnhancedNullability] T of <root>.B? [fake_override]
      overridden:
        public open fun putIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, p1: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?): @[EnhancedNullability] T of <root>.Java1? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?
    FUN FAKE_OVERRIDE name:remove visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>, key:@[FlexibleNullability] T of <root>.B?) returnType:T of <root>.B? [fake_override]
      overridden:
        public open fun remove (key: @[FlexibleNullability] T of <root>.Java1?): T of <root>.Java1? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.B?
    FUN FAKE_OVERRIDE name:remove visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>, key:@[FlexibleNullability] T of <root>.B?, value:@[FlexibleNullability] T of <root>.B?) returnType:kotlin.Boolean [fake_override]
      annotations:
        SinceKotlin(version = "1.1")
        PlatformDependent
      overridden:
        public open fun remove (key: @[FlexibleNullability] T of <root>.Java1?, value: @[FlexibleNullability] T of <root>.Java1?): kotlin.Boolean declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER name:key index:0 type:@[FlexibleNullability] T of <root>.B?
      VALUE_PARAMETER name:value index:1 type:@[FlexibleNullability] T of <root>.B?
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?, p1:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?) returnType:@[EnhancedNullability] T of <root>.B? [fake_override]
      overridden:
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, p1: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?): @[EnhancedNullability] T of <root>.Java1? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>, p0:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?, p1:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?, p2:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?) returnType:kotlin.Boolean [fake_override]
      overridden:
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, p1: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, p2: @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?): kotlin.Boolean declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?
      VALUE_PARAMETER name:p1 index:1 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?
      VALUE_PARAMETER name:p2 index:2 type:@[EnhancedNullability] @[FlexibleNullability] T of <root>.B?
    FUN FAKE_OVERRIDE name:replaceAll visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>, p0:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.B?, in @[EnhancedNullability] @[FlexibleNullability] T of <root>.B?, out @[EnhancedNullability] @[FlexibleNullability] T of <root>.B?>) returnType:kotlin.Unit [fake_override]
      overridden:
        public open fun replaceAll (p0: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, in @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?, out @[EnhancedNullability] @[FlexibleNullability] T of <root>.Java1?>): kotlin.Unit declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER name:p0 index:0 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] T of <root>.B?, in @[EnhancedNullability] @[FlexibleNullability] T of <root>.B?, out @[EnhancedNullability] @[FlexibleNullability] T of <root>.B?>
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN name:put visibility:public modality:OPEN <> ($this:<root>.B<T of <root>.B>, key:T of <root>.B, value:T of <root>.B) returnType:T of <root>.B?
      overridden:
        public abstract fun put (key: @[FlexibleNullability] T of <root>.Java1?, value: @[FlexibleNullability] T of <root>.Java1?): T of <root>.Java1? declared in <root>.Java1
      $this: VALUE_PARAMETER name:<this> type:<root>.B<T of <root>.B>
      VALUE_PARAMETER name:key index:0 type:T of <root>.B
      VALUE_PARAMETER name:value index:1 type:T of <root>.B
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun put (key: T of <root>.B, value: T of <root>.B): T of <root>.B? declared in <root>.B'
          CONST Null type=kotlin.Nothing? value=null
    PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:OPEN [fake_override,val]
      overridden:
        public open keys: kotlin.collections.MutableSet<@[FlexibleNullability] T of <root>.Java1?> declared in <root>.Java1
      FUN FAKE_OVERRIDE name:<get-keys> visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>) returnType:kotlin.collections.MutableSet<@[FlexibleNullability] T of <root>.B?> [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:OPEN [fake_override,val]
        overridden:
          public open fun <get-keys> (): kotlin.collections.MutableSet<@[FlexibleNullability] T of <root>.Java1?> declared in <root>.Java1
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
    PROPERTY FAKE_OVERRIDE name:size visibility:public modality:OPEN [fake_override,val]
      overridden:
        public open size: kotlin.Int declared in <root>.Java1
      FUN FAKE_OVERRIDE name:<get-size> visibility:public modality:OPEN <> ($this:kotlin.collections.Map<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>) returnType:kotlin.Int [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:size visibility:public modality:OPEN [fake_override,val]
        overridden:
          public open fun <get-size> (): kotlin.Int declared in <root>.Java1
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
    PROPERTY FAKE_OVERRIDE name:values visibility:public modality:OPEN [fake_override,val]
      overridden:
        public open values: kotlin.collections.MutableCollection<@[FlexibleNullability] T of <root>.Java1?> declared in <root>.Java1
      FUN FAKE_OVERRIDE name:<get-values> visibility:public modality:OPEN <> ($this:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>) returnType:kotlin.collections.MutableCollection<@[FlexibleNullability] T of <root>.B?> [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:values visibility:public modality:OPEN [fake_override,val]
        overridden:
          public open fun <get-values> (): kotlin.collections.MutableCollection<@[FlexibleNullability] T of <root>.Java1?> declared in <root>.Java1
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
  FUN name:test visibility:public modality:FINAL <> (a:<root>.A<kotlin.Boolean>, b:<root>.B<kotlin.Boolean?>) returnType:kotlin.Unit
    VALUE_PARAMETER name:a index:0 type:<root>.A<kotlin.Boolean>
    VALUE_PARAMETER name:b index:1 type:<root>.B<kotlin.Boolean?>
    BLOCK_BODY
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun <get-size> (): kotlin.Int declared in <root>.A' type=kotlin.Int origin=GET_PROPERTY
          $this: GET_VAR 'a: <root>.A<kotlin.Boolean> declared in <root>.test' type=<root>.A<kotlin.Boolean> origin=null
      CALL 'public final fun set <K, V> (key: K of kotlin.collections.set, value: V of kotlin.collections.set): kotlin.Unit declared in kotlin.collections' type=kotlin.Unit origin=EQ
        <K>: @[FlexibleNullability] kotlin.Boolean?
        <V>: @[FlexibleNullability] kotlin.Boolean?
        $receiver: GET_VAR 'a: <root>.A<kotlin.Boolean> declared in <root>.test' type=<root>.A<kotlin.Boolean> origin=null
        key: CONST Boolean type=kotlin.Boolean value=true
        value: CONST Boolean type=kotlin.Boolean value=true
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun put (key: @[FlexibleNullability] T of <root>.A?, value: @[FlexibleNullability] T of <root>.A?): T of <root>.A? declared in <root>.A' type=kotlin.Boolean? origin=null
          $this: GET_VAR 'a: <root>.A<kotlin.Boolean> declared in <root>.test' type=<root>.A<kotlin.Boolean> origin=null
          key: CONST Null type=kotlin.Nothing? value=null
          value: CONST Null type=kotlin.Nothing? value=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun get (key: @[FlexibleNullability] T of <root>.A?): T of <root>.A? declared in <root>.A' type=kotlin.Boolean? origin=null
          $this: GET_VAR 'a: <root>.A<kotlin.Boolean> declared in <root>.test' type=<root>.A<kotlin.Boolean> origin=null
          key: CONST Boolean type=kotlin.Boolean value=true
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun get (key: @[FlexibleNullability] T of <root>.A?): T of <root>.A? declared in <root>.A' type=kotlin.Boolean? origin=null
          $this: GET_VAR 'a: <root>.A<kotlin.Boolean> declared in <root>.test' type=<root>.A<kotlin.Boolean> origin=null
          key: CONST Null type=kotlin.Nothing? value=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun remove (key: @[FlexibleNullability] T of <root>.A?): T of <root>.A? declared in <root>.A' type=kotlin.Boolean? origin=null
          $this: GET_VAR 'a: <root>.A<kotlin.Boolean> declared in <root>.test' type=<root>.A<kotlin.Boolean> origin=null
          key: CONST Null type=kotlin.Nothing? value=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun remove (key: @[FlexibleNullability] T of <root>.A?): T of <root>.A? declared in <root>.A' type=kotlin.Boolean? origin=null
          $this: GET_VAR 'a: <root>.A<kotlin.Boolean> declared in <root>.test' type=<root>.A<kotlin.Boolean> origin=null
          key: CONST Boolean type=kotlin.Boolean value=true
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun <get-size> (): kotlin.Int declared in <root>.B' type=kotlin.Int origin=GET_PROPERTY
          $this: GET_VAR 'b: <root>.B<kotlin.Boolean?> declared in <root>.test' type=<root>.B<kotlin.Boolean?> origin=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun put (key: T of <root>.B, value: T of <root>.B): T of <root>.B? declared in <root>.B' type=kotlin.Boolean? origin=null
          $this: GET_VAR 'b: <root>.B<kotlin.Boolean?> declared in <root>.test' type=<root>.B<kotlin.Boolean?> origin=null
          key: CONST Boolean type=kotlin.Boolean value=false
          value: CONST Boolean type=kotlin.Boolean value=false
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun put (key: T of <root>.B, value: T of <root>.B): T of <root>.B? declared in <root>.B' type=kotlin.Boolean? origin=null
          $this: GET_VAR 'b: <root>.B<kotlin.Boolean?> declared in <root>.test' type=<root>.B<kotlin.Boolean?> origin=null
          key: CONST Null type=kotlin.Nothing? value=null
          value: CONST Null type=kotlin.Nothing? value=null
      CALL 'public final fun set <K, V> (key: K of kotlin.collections.set, value: V of kotlin.collections.set): kotlin.Unit declared in kotlin.collections' type=kotlin.Unit origin=EQ
        <K>: kotlin.Boolean?
        <V>: kotlin.Boolean?
        $receiver: GET_VAR 'b: <root>.B<kotlin.Boolean?> declared in <root>.test' type=<root>.B<kotlin.Boolean?> origin=null
        key: CONST Null type=kotlin.Nothing? value=null
        value: CONST Null type=kotlin.Nothing? value=null
      CALL 'public final fun set <K, V> (key: K of kotlin.collections.set, value: V of kotlin.collections.set): kotlin.Unit declared in kotlin.collections' type=kotlin.Unit origin=EQ
        <K>: kotlin.Boolean?
        <V>: kotlin.Boolean?
        $receiver: GET_VAR 'b: <root>.B<kotlin.Boolean?> declared in <root>.test' type=<root>.B<kotlin.Boolean?> origin=null
        key: CONST Boolean type=kotlin.Boolean value=true
        value: CONST Boolean type=kotlin.Boolean value=true
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun get (key: @[FlexibleNullability] T of <root>.B?): T of <root>.B? declared in <root>.B' type=kotlin.Boolean? origin=null
          $this: GET_VAR 'b: <root>.B<kotlin.Boolean?> declared in <root>.test' type=<root>.B<kotlin.Boolean?> origin=null
          key: CONST Null type=kotlin.Nothing? value=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun get (key: @[FlexibleNullability] T of <root>.B?): T of <root>.B? declared in <root>.B' type=kotlin.Boolean? origin=null
          $this: GET_VAR 'b: <root>.B<kotlin.Boolean?> declared in <root>.test' type=<root>.B<kotlin.Boolean?> origin=null
          key: CONST Boolean type=kotlin.Boolean value=true
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun remove (key: @[FlexibleNullability] T of <root>.B?): T of <root>.B? declared in <root>.B' type=kotlin.Boolean? origin=null
          $this: GET_VAR 'b: <root>.B<kotlin.Boolean?> declared in <root>.test' type=<root>.B<kotlin.Boolean?> origin=null
          key: CONST Null type=kotlin.Nothing? value=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun remove (key: @[FlexibleNullability] T of <root>.B?): T of <root>.B? declared in <root>.B' type=kotlin.Boolean? origin=null
          $this: GET_VAR 'b: <root>.B<kotlin.Boolean?> declared in <root>.test' type=<root>.B<kotlin.Boolean?> origin=null
          key: CONST Boolean type=kotlin.Boolean value=true
