@kotlin.Metadata
public abstract class<<A:Ljava/lang/Object;B:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Map<TA;TB;>;Lkotlin/jvm/internal/markers/KMappedMarker;>  MapImpl {
    // source: 'implementsMap.kt'
    public bridge final <()Ljava/util/Collection<TB;>;> method values(): java.util.Collection
    public bridge final <()Ljava/util/Set<Ljava/util/Map$Entry<TA;TB;>;>;> method entrySet(): java.util.Set
    public bridge final <()Ljava/util/Set<TA;>;> method keySet(): java.util.Set
    public <(Ljava/lang/Object;)TB;> method remove(p0: java.lang.Object): java.lang.Object
    public <(Ljava/util/Map<+TA;+TB;>;)V> method putAll(p0: java.util.Map): void
    public <(TA;TB;)TB;> method put(p0: java.lang.Object, p1: java.lang.Object): java.lang.Object
    public <null> method <init>(): void
    public <null> method clear(): void
    public <null> method containsKey(p0: java.lang.Object): boolean
    public abstract <null> method getEntries(): java.util.Set
    public abstract <null> method getKeys(): java.util.Set
    public abstract <null> method getSize(): int
    public abstract <null> method getValues(): java.util.Collection
    public bridge final <null> method size(): int
}

@kotlin.Metadata
public interface<<K:Ljava/lang/Number;V:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Map<TK;TV;>;Lkotlin/jvm/internal/markers/KMappedMarker;>  MapN {
    // source: 'implementsMap.kt'
}

@kotlin.Metadata
public abstract class<<A:Ljava/lang/Number;B:Ljava/lang/Object;>Ljava/lang/Object;LMapN<TA;TB;>;>  MapNImpl {
    // source: 'implementsMap.kt'
    public bridge final <()Ljava/util/Collection<TB;>;> method values(): java.util.Collection
    public bridge final <()Ljava/util/Set<Ljava/util/Map$Entry<TA;TB;>;>;> method entrySet(): java.util.Set
    public bridge final <()Ljava/util/Set<TA;>;> method keySet(): java.util.Set
    public bridge final <(Ljava/lang/Object;)TB;> method get(p0: java.lang.Object): java.lang.Object
    public <(Ljava/lang/Object;)TB;> method remove(p0: java.lang.Object): java.lang.Object
    public <(Ljava/util/Map<+TA;+TB;>;)V> method putAll(p0: java.util.Map): void
    public <(TA;)Z> method containsKey(@org.jetbrains.annotations.NotNull p0: java.lang.Number): boolean
    public <(TA;TB;)TB;> method put(p0: java.lang.Number, p1: java.lang.Object): java.lang.Object
    public <null> method <init>(): void
    public <null> method clear(): void
    public bridge final <null> method containsKey(p0: java.lang.Object): boolean
    public abstract <null> method get(p0: java.lang.Number): java.lang.Object
    public abstract <null> method getEntries(): java.util.Set
    public abstract <null> method getKeys(): java.util.Set
    public abstract <null> method getSize(): int
    public abstract <null> method getValues(): java.util.Collection
    public synthetic bridge <null> method put(p0: java.lang.Object, p1: java.lang.Object): java.lang.Object
    public bridge final <null> method size(): int
}

@kotlin.Metadata
public abstract class<<B:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Map<Ljava/lang/String;TB;>;Lkotlin/jvm/internal/markers/KMappedMarker;>  MapSImpl {
    // source: 'implementsMap.kt'
    public bridge final <()Ljava/util/Collection<TB;>;> method values(): java.util.Collection
    public bridge final <()Ljava/util/Set<Ljava/lang/String;>;> method keySet(): java.util.Set
    public bridge final <()Ljava/util/Set<Ljava/util/Map$Entry<Ljava/lang/String;TB;>;>;> method entrySet(): java.util.Set
    public bridge final <(Ljava/lang/Object;)TB;> method get(p0: java.lang.Object): java.lang.Object
    public <(Ljava/lang/Object;)TB;> method remove(p0: java.lang.Object): java.lang.Object
    public <(Ljava/lang/String;TB;)TB;> method put(p0: java.lang.String, p1: java.lang.Object): java.lang.Object
    public <(Ljava/util/Map<+Ljava/lang/String;+TB;>;)V> method putAll(p0: java.util.Map): void
    public <null> method <init>(): void
    public <null> method clear(): void
    public <null> method containsKey(@org.jetbrains.annotations.NotNull p0: java.lang.String): boolean
    public bridge final <null> method containsKey(p0: java.lang.Object): boolean
    public abstract <null> method get(p0: java.lang.String): java.lang.Object
    public abstract <null> method getEntries(): java.util.Set
    public abstract <null> method getKeys(): java.util.Set
    public abstract <null> method getSize(): int
    public abstract <null> method getValues(): java.util.Collection
    public synthetic bridge <null> method put(p0: java.lang.Object, p1: java.lang.Object): java.lang.Object
    public bridge final <null> method size(): int
}
