KtFile: callExpressionsAnyLHSAtomicExpression.kt
  PACKAGE_DIRECTIVE
    <empty list>
  IMPORT_LIST
    <empty list>
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('f')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        PARENTHESIZED
          PsiElement(LPAR)('(')
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('x')
          PsiElement(RPAR)(')')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        ARRAY_ACCESS_EXPRESSION
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('x')
          INDICES
            PsiElement(LBRACKET)('[')
            PsiErrorElement:Expecting an index element
              <empty list>
            PsiElement(RBRACKET)(']')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        THIS_EXPRESSION
          REFERENCE_EXPRESSION
            PsiElement(this)('this')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        SUPER_EXPRESSION
          REFERENCE_EXPRESSION
            PsiElement(super)('super')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        THIS_EXPRESSION
          REFERENCE_EXPRESSION
            PsiElement(this)('this')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        OBJECT_LITERAL
          OBJECT_DECLARATION
            PsiElement(object)('object')
            PsiWhiteSpace(' ')
            PsiElement(COLON)(':')
            PsiWhiteSpace(' ')
            SUPER_TYPE_LIST
              SUPER_TYPE_ENTRY
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('C')
            CLASS_BODY
              PsiElement(LBRACE)('{')
              PsiElement(RBRACE)('}')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        THROW
          PsiElement(throw)('throw')
          PsiErrorElement:Expecting an expression
            <empty list>
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        RETURN
          PsiElement(return)('return')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        CONTINUE
          PsiElement(continue)('continue')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        BREAK
          PsiElement(break)('break')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        IF
          PsiElement(if)('if')
          PsiWhiteSpace(' ')
          PsiElement(LPAR)('(')
          CONDITION
            BINARY_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('x')
              PsiWhiteSpace(' ')
              OPERATION_REFERENCE
                PsiElement(LT)('<')
              PsiWhiteSpace(' ')
              INTEGER_CONSTANT
                PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
          PsiWhiteSpace(' ')
          THEN
            BLOCK
              PsiElement(LBRACE)('{')
              PsiWhiteSpace(' ')
              INTEGER_CONSTANT
                PsiElement(INTEGER_LITERAL)('1')
              PsiWhiteSpace(' ')
              PsiElement(RBRACE)('}')
          PsiWhiteSpace(' ')
          PsiElement(else)('else')
          PsiWhiteSpace(' ')
          ELSE
            BLOCK
              PsiElement(LBRACE)('{')
              PsiWhiteSpace(' ')
              INTEGER_CONSTANT
                PsiElement(INTEGER_LITERAL)('1')
              PsiWhiteSpace(' ')
              PsiElement(RBRACE)('}')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        WHEN
          PsiElement(when)('when')
          PsiWhiteSpace(' ')
          PsiElement(LBRACE)('{')
          PsiWhiteSpace(' ')
          WHEN_ENTRY
            PsiElement(else)('else')
            PsiWhiteSpace(' ')
            PsiElement(ARROW)('->')
            PsiWhiteSpace(' ')
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('1')
          PsiWhiteSpace(' ')
          PsiElement(RBRACE)('}')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        TRY
          PsiElement(try)('try')
          PsiWhiteSpace(' ')
          BLOCK
            PsiElement(LBRACE)('{')
            PsiWhiteSpace(' ')
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('1')
            PsiWhiteSpace(' ')
            PsiElement(RBRACE)('}')
          PsiWhiteSpace(' ')
          FINALLY
            PsiElement(finally)('finally')
            PsiWhiteSpace(' ')
            BLOCK
              PsiElement(LBRACE)('{')
              PsiElement(RBRACE)('}')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        FOR
          PsiElement(for)('for')
          PsiWhiteSpace(' ')
          PsiElement(LPAR)('(')
          VALUE_PARAMETER
            PsiElement(IDENTIFIER)('i')
          PsiWhiteSpace(' ')
          PsiElement(in)('in')
          PsiWhiteSpace(' ')
          LOOP_RANGE
            BINARY_EXPRESSION
              INTEGER_CONSTANT
                PsiElement(INTEGER_LITERAL)('0')
              PsiWhiteSpace(' ')
              OPERATION_REFERENCE
                PsiElement(IDENTIFIER)('until')
              PsiWhiteSpace(' ')
              INTEGER_CONSTANT
                PsiElement(INTEGER_LITERAL)('10')
          PsiElement(RPAR)(')')
          PsiWhiteSpace(' ')
          BODY
            BLOCK
              PsiElement(LBRACE)('{')
              PsiElement(RBRACE)('}')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        WHILE
          PsiElement(while)('while')
          PsiWhiteSpace(' ')
          PsiElement(LPAR)('(')
          CONDITION
            BOOLEAN_CONSTANT
              PsiElement(true)('true')
          PsiElement(RPAR)(')')
          PsiWhiteSpace(' ')
          BODY
            BLOCK
              PsiElement(LBRACE)('{')
              PsiElement(RBRACE)('}')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        DO_WHILE
          PsiElement(do)('do')
          PsiWhiteSpace(' ')
          BODY
            BLOCK
              PsiElement(LBRACE)('{')
              PsiElement(RBRACE)('}')
          PsiWhiteSpace(' ')
          PsiElement(while)('while')
          PsiWhiteSpace(' ')
          PsiElement(LPAR)('(')
          CONDITION
            BOOLEAN_CONSTANT
              PsiElement(true)('true')
          PsiElement(RPAR)(')')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('x')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiElement(SEMICOLON)(';')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        LAMBDA_EXPRESSION
          FUNCTION_LITERAL
            PsiElement(LBRACE)('{')
            PsiWhiteSpace(' ')
            BLOCK
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('x')
            PsiWhiteSpace(' ')
            PsiElement(RBRACE)('}')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        STRING_TEMPLATE
          PsiElement(OPEN_QUOTE)('"')
          PsiElement(CLOSING_QUOTE)('"')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        INTEGER_CONSTANT
          PsiElement(INTEGER_LITERAL)('1')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        INTEGER_CONSTANT
          PsiElement(INTEGER_LITERAL)('0L')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        FLOAT_CONSTANT
          PsiElement(FLOAT_CONSTANT)('3.141')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        FLOAT_CONSTANT
          PsiElement(FLOAT_CONSTANT)('2.718f')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        INTEGER_CONSTANT
          PsiElement(INTEGER_LITERAL)('0xF7E')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n    ')
      CALL_EXPRESSION
        INTEGER_CONSTANT
          PsiElement(INTEGER_LITERAL)('0b101')
        TYPE_ARGUMENT_LIST
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('y')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('z')
          PsiElement(GT)('>')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            INTEGER_CONSTANT
              PsiElement(INTEGER_LITERAL)('0')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')