FILE: [ResolvedTo(BODY_RESOLVE)] annotationsOnNullableParenthesizedTypes.kt
    public abstract [ResolvedTo(BODY_RESOLVE)] interface AnnotationsOnNullableParenthesizedTypes : R|kotlin/Any| {
        public open [ResolvedTo(ANNOTATION_ARGUMENTS)] fun [ResolvedTo(ANNOTATION_ARGUMENTS)] R|B<@R|A|()  C?>|.receiverArgument(): R|kotlin/Unit| { LAZY_BLOCK }

        public open [ResolvedTo(ANNOTATION_ARGUMENTS)] fun parameter([ResolvedTo(ANNOTATION_ARGUMENTS)] a: R|@R|A|()  C?|): R|kotlin/Unit| { LAZY_BLOCK }

        public open [ResolvedTo(ANNOTATION_ARGUMENTS)] fun parameterArgument([ResolvedTo(ANNOTATION_ARGUMENTS)] a: R|B<@R|A|()  C?>|): R|kotlin/Unit| { LAZY_BLOCK }

        public abstract [ResolvedTo(BODY_RESOLVE)] fun returnValue(): R|@R|A|()  C?|

        public abstract [ResolvedTo(BODY_RESOLVE)] fun <[ResolvedTo(BODY_RESOLVE)] T> returnTypeParameterValue(): R|@R|A|()  T?|

        public abstract [ResolvedTo(BODY_RESOLVE)] fun returnArgument(): R|B<@R|A|()  C?>|

        public abstract [ResolvedTo(BODY_RESOLVE)] val lambdaType: R|@R|A|()  (() -> C)?|
            public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=AnnotationsOnNullableParenthesizedTypes] get(): R|@R|A|()  (() -> C)?|

        public abstract [ResolvedTo(BODY_RESOLVE)] val lambdaParameter: R|(@R|A|()  C?) -> C|
            public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=AnnotationsOnNullableParenthesizedTypes] get(): R|(@R|A|()  C?) -> C|

        public abstract [ResolvedTo(BODY_RESOLVE)] val lambdaReturnValue: R|() -> @R|A|()  C?|
            public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=AnnotationsOnNullableParenthesizedTypes] get(): R|() -> @R|A|()  C?|

        public abstract [ResolvedTo(BODY_RESOLVE)] val lambdaReceiver: R|@R|A|()  C?.() -> C|
            public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=AnnotationsOnNullableParenthesizedTypes] get(): R|@R|A|()  C?.() -> C|

    }
    @R|kotlin/annotation/Target|[Types](allowedTargets = vararg(Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.TYPE|, Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.TYPE_PARAMETER|)) public final [ResolvedTo(BODY_RESOLVE)] annotation class A : R|kotlin/Annotation| {
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=A] constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

    }
    public abstract [ResolvedTo(BODY_RESOLVE)] interface B<[ResolvedTo(BODY_RESOLVE)] T> : R|kotlin/Any| {
    }
    public abstract [ResolvedTo(BODY_RESOLVE)] interface C : R|kotlin/Any| {
    }