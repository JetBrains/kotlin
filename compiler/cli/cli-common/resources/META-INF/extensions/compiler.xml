<idea-plugin>
    <id>org.jetbrains.kotlin</id>

    <extensionPoints>
        <extensionPoint qualifiedName="org.jetbrains.kotlin.analyzeCompleteHandlerExtension"
                        interface="org.jetbrains.kotlin.resolve.jvm.extensions.AnalysisHandlerExtension"
                        area="IDEA_PROJECT"/>
        <extensionPoint qualifiedName="org.jetbrains.kotlin.extensions.internal.callResolutionInterceptorExtension"
                        interface="org.jetbrains.kotlin.extensions.internal.CallResolutionInterceptorExtension"
                        area="IDEA_PROJECT"/>
        <extensionPoint qualifiedName="org.jetbrains.kotlin.extensions.internal.typeResolutionInterceptorExtension"
                        interface="org.jetbrains.kotlin.extensions.internal.TypeResolutionInterceptorExtension"
                        area="IDEA_PROJECT"/>
        <extensionPoint qualifiedName="org.jetbrains.kotlin.extensions.typeAttributeTranslatorExtension"
                        interface="org.jetbrains.kotlin.extensions.TypeAttributeTranslatorExtension"
                        area="IDEA_PROJECT"/>
        <extensionPoint qualifiedName="org.jetbrains.kotlin.diagnosticSuppressor"
                        interface="org.jetbrains.kotlin.resolve.diagnostics.DiagnosticSuppressor"
                        area="IDEA_PROJECT" dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.kotlin.expressionCodegenExtension"
                        interface="org.jetbrains.kotlin.codegen.extensions.ExpressionCodegenExtension"
                        area="IDEA_PROJECT" dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.kotlin.syntheticResolveExtension"
                        interface="org.jetbrains.kotlin.resolve.extensions.SyntheticResolveExtension"
                        area="IDEA_PROJECT" dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.kotlin.assignResolutionAltererExtension"
                        interface="org.jetbrains.kotlin.resolve.extensions.AssignResolutionAltererExtension"
                        area="IDEA_PROJECT" dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.kotlin.jsSyntheticTranslateExtension"
                        interface="org.jetbrains.kotlin.js.translate.extensions.JsSyntheticTranslateExtension"
                        area="IDEA_PROJECT" dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.kotlin.irGenerationExtension"
                        interface="org.jetbrains.kotlin.backend.common.extensions.IrGenerationExtension"
                        area="IDEA_PROJECT" dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.kotlin.simpleNameReferenceExtension"
                        interface="org.jetbrains.kotlin.plugin.references.SimpleNameReferenceExtension"
                        area="IDEA_PROJECT" dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.kotlin.classBuilderFactoryInterceptorExtension"
                        interface="org.jetbrains.kotlin.codegen.extensions.ClassBuilderInterceptorExtension"
                        area="IDEA_PROJECT" dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.kotlin.classGeneratorExtension"
                        interface="org.jetbrains.kotlin.backend.jvm.extensions.ClassGeneratorExtension"
                        area="IDEA_PROJECT" dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.kotlin.packageFragmentProviderExtension"
                        interface="org.jetbrains.kotlin.resolve.jvm.extensions.PackageFragmentProviderExtension"
                        area="IDEA_PROJECT" dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.kotlin.storageComponentContainerContributor"
                        interface="org.jetbrains.kotlin.extensions.StorageComponentContainerContributor"
                        area="IDEA_PROJECT" dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.kotlin.extraImportsProviderExtension"
                        interface="org.jetbrains.kotlin.resolve.extensions.ExtraImportsProviderExtension"
                        area="IDEA_PROJECT" dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.kotlin.fir.extensions.firExtensionRegistrar"
                        interface="org.jetbrains.kotlin.fir.extensions.FirExtensionRegistrarAdapter"
                        area="IDEA_PROJECT"/>
        <extensionPoint qualifiedName="org.jetbrains.kotlin.DescriptorSerializerPlugin"
                        interface="org.jetbrains.kotlin.serialization.DescriptorSerializerPlugin"
                        area="IDEA_PROJECT"/>
        <extensionPoint qualifiedName="org.jetbrains.kotlin.defaultErrorMessages"
                        interface="org.jetbrains.kotlin.diagnostics.rendering.DefaultErrorMessages.Extension"/>
    </extensionPoints>
</idea-plugin>
