@kotlin.annotation.Target(allowedTargets=[FILE, TYPEALIAS])
@kotlin.jvm.internal.RepeatableContainer
@java.lang.annotation.Retention(value=RUNTIME)
@java.lang.annotation.Target(value=[])
@kotlin.Metadata
public annotation class test/A$Container {
    // source: 'kotlinSpecificTargets.kt'
    public abstract method value(): test.A[]
    public inner class test/A$Container
}

@kotlin.annotation.Repeatable
@kotlin.annotation.Target(allowedTargets=[FILE, TYPEALIAS])
@java.lang.annotation.Retention(value=RUNTIME)
@java.lang.annotation.Target(value=[])
@java.lang.annotation.Repeatable(value=test.A$Container::class)
@kotlin.Metadata
public annotation class test/A {
    // source: 'kotlinSpecificTargets.kt'
    public abstract method value(): java.lang.String
    public inner class test/A$Container
}

@test.A$Container(value=[test.A(value="file1"), test.A(value="file2")])
@kotlin.Metadata
public final class test/KotlinSpecificTargetsKt {
    // source: 'kotlinSpecificTargets.kt'
    public synthetic deprecated static @test.A$Container(value=[test.A(value="typealias1"), test.A(value="typealias2")]) method TA$annotations(): void
    public inner class test/A$Container
}
