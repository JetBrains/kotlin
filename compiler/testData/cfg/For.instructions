== t1 ==
fun t1() {
    for (i in 1..2) {
        doSmth(i)
    }
}
---------------------
l0:
    <START>                NEXT:[r(for (i in 1..2) { doSmth(i..)]    PREV:[]
    r(for (i in 1..2) {
            doSmth(i)  
        })                 NEXT:[r(1)]                               PREV:[<START>]
    r(1)                   NEXT:[r(2)]                               PREV:[r(for (i in 1..2) { doSmth(i..)]
    r(2)                   NEXT:[r(..)]                              PREV:[r(1)]
    r(..)                  NEXT:[r(1..2)]                            PREV:[r(2)]
    r(1..2)                NEXT:[v(i)]                               PREV:[r(..)]
    v(i)                   NEXT:[w(i)]                               PREV:[r(1..2)]
    w(i)                   NEXT:[jmp?(l2)]                           PREV:[v(i)]
l3:
    jmp?(l2)               NEXT:[read (Unit), r(i)]                  PREV:[w(i)]
l4:
l5:
    r(i)                   NEXT:[r(doSmth)]                          PREV:[jmp?(l2), jmp?(l4)]
    r(doSmth)              NEXT:[r(doSmth(i))]                       PREV:[r(i)]
    r(doSmth(i))           NEXT:[jmp?(l4)]                           PREV:[r(doSmth)]
    jmp?(l4)               NEXT:[r(i), read (Unit)]                  PREV:[r(doSmth(i))]
l2:
    read (Unit)            NEXT:[<END>]                              PREV:[jmp?(l2), jmp?(l4)]
l1:
    <END>                  NEXT:[<SINK>]                             PREV:[read (Unit)]
error:
    <ERROR>                NEXT:[<SINK>]                             PREV:[]
sink:
    <SINK>                 NEXT:[]                                   PREV:[<ERROR>, <END>]
=====================
== doSmth ==
fun doSmth(i: Int) {}
---------------------
l0:
    <START>        NEXT:[v(i: Int)]      PREV:[]
    v(i: Int)      NEXT:[w(i)]           PREV:[<START>]
    w(i)           NEXT:[read (Unit)]    PREV:[v(i: Int)]
    read (Unit)    NEXT:[<END>]          PREV:[w(i)]
l1:
    <END>          NEXT:[<SINK>]         PREV:[read (Unit)]
error:
    <ERROR>        NEXT:[<SINK>]         PREV:[]
sink:
    <SINK>         NEXT:[]               PREV:[<ERROR>, <END>]
=====================
