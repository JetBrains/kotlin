FILE: simpleClass.kt
    public abstract interface SomeInterface {
        public abstract function foo(x: R|kotlin/Int|, y: R|kotlin/String|): R|kotlin/String|

        public abstract property bar(val): R|kotlin/Boolean|
            public get(): R|kotlin/Boolean|

    }
    public final class SomeClass : R|SomeInterface| {
        public constructor(): super<R|kotlin/Any|>()

        private final property baz(val): R|error: Not supported: FirImplicitTypeImpl| = STUB
            private get(): R|error: Not supported: FirImplicitTypeImpl|

        public final override function foo(x: R|kotlin/Int|, y: R|kotlin/String|): R|kotlin/String| {
        }

        public final override property bar(var): R|kotlin/Boolean|
            public get(): R|kotlin/Boolean| {
                STUB
            }
            public set(value: R|kotlin/Boolean|): R|kotlin/Unit| {
            }

        public final property fau(var): R|kotlin/Double|
            public get(): R|kotlin/Double|
            public set(value: R|kotlin/Double|): R|kotlin/Unit|

    }
