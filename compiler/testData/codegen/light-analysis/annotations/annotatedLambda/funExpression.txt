@kotlin.annotation.Retention
@java.lang.annotation.Retention
public annotation class Ann {
    public abstract method x(): java.lang.String
}


public final class FunExpressionKt {
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
    public final static @org.jetbrains.annotations.NotNull method foo0(@org.jetbrains.annotations.NotNull p0: kotlin.jvm.functions.Function0): java.lang.Class
    public final static @org.jetbrains.annotations.NotNull method foo1(@org.jetbrains.annotations.NotNull p0: kotlin.jvm.functions.Function1): java.lang.Class
    public final static method testClass(@org.jetbrains.annotations.NotNull p0: java.lang.Class, @org.jetbrains.annotations.NotNull p1: java.lang.String): void
    public final static method testMethod(@org.jetbrains.annotations.NotNull p0: java.lang.reflect.Method, @org.jetbrains.annotations.NotNull p1: java.lang.String): void
}
