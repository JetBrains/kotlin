namespace <root>

internal abstract trait ChannelPipeline : jet.Any {
}
internal abstract trait ChannelPipelineFactory : jet.Any {
    internal abstract fun getPipeline(): ChannelPipeline
}
internal final class DefaultChannelPipeline : ChannelPipeline {
    public final /*constructor*/ fun <init>(): DefaultChannelPipeline
}
internal final class StandardPipelineFactory : ChannelPipelineFactory {
    public final /*constructor*/ fun <init>(/*0*/ config: jet.ExtensionFunction0<ChannelPipeline, jet.Tuple0>): StandardPipelineFactory
    internal final val config: jet.ExtensionFunction0<ChannelPipeline, jet.Tuple0>
    internal open override /*1*/ fun getPipeline(): ChannelPipeline
}
