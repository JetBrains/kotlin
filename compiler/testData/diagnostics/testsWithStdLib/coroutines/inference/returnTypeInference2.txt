package

public val test1: Pair<kotlin.String, kotlin.Int>
public fun </*0*/ T, /*1*/ R> generate(/*0*/ @kotlin.BuilderInference g: suspend Controller<T>.() -> R): Pair<T, R>

public final class Controller</*0*/ T> {
    public constructor Controller</*0*/ T>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    public final suspend fun yield(/*0*/ t: T): kotlin.Unit
}

public final class Pair</*0*/ T, /*1*/ R> {
    public constructor Pair</*0*/ T, /*1*/ R>()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
