package

public interface A {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open fun f(/*0*/ a: kotlin.collections.List<kotlin.Int>): kotlin.String
    private final fun f(/*0*/ a: kotlin.collections.List<kotlin.String>): kotlin.String
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class B : A {
    public constructor B()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun f(/*0*/ a: kotlin.collections.List<kotlin.Int>): kotlin.String
    invisible_fake final override /*1*/ /*fake_override*/ fun f(/*0*/ a: kotlin.collections.List<kotlin.String>): kotlin.String
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
