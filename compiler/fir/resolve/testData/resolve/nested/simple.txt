FILE: simple.kt
    public final class Owner : R|kotlin/Any| {
        public constructor(): R|Owner| {
            super<R|kotlin/Any|>()
        }

        public final fun foo(): R|kotlin/Unit| {
            this@R|/Owner|.R|/Owner.bar|()
            this@R|/Owner|.R|/Owner.bar|()
        }

        public final fun bar(): R|kotlin/Unit| {
            lval n: R|Owner.Nested| = R|/Owner.Nested.Nested|()
            R|<local>/n|.R|/Owner.Nested.baz|()
        }

        public final class Nested : R|kotlin/Any| {
            public constructor(): R|Owner.Nested| {
                super<R|kotlin/Any|>()
            }

            public final fun baz(): R|kotlin/Unit| {
                this@R|/Owner.Nested|.R|/Owner.Nested.gau|()
                this@R|/Owner.Nested|.R|/Owner.Nested.gau|()
            }

            public final fun gau(): R|kotlin/Unit| {
                lval o: R|Owner| = R|/Owner.Owner|()
                R|<local>/o|.R|/Owner.foo|()
            }

            public final fun err(): R|kotlin/Unit| {
                <Unresolved name: foo>#()
                this@R|/Owner.Nested|.<Unresolved name: foo>#()
            }

        }

    }
    public final fun test(): R|kotlin/Unit| {
        lval o: R|Owner| = R|/Owner.Owner|()
        R|<local>/o|.R|/Owner.foo|()
        lval n: <ERROR TYPE REF: Unresolved name: Nested> = Q|Owner|.<Unresolved name: Nested>#()
        R|<local>/n|.<Unresolved name: baz>#()
    }
