MODULES: lib1, lib2, main

STEP 0:
    language: -IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, lib2, main
    dirty js modules: lib1, lib2, main
    dirty js files:   lib1/l1a, lib2/l2, main/m, main/m.export, main
STEP 1:
    language: -IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, lib2, main
    dirty js modules: lib1, lib2, main
    dirty js files:   lib1/l1a, lib1/l1b, lib2/l2, main/m
STEP 2:
    language: -IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, lib2, main
    dirty js modules: lib1
    dirty js files:   lib1/l1a, lib1/l1b
STEP 3..4:
    language: -IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, lib2, main
    dirty js modules: lib1, lib2, main
    dirty js files:   lib1/l1a, lib1/l1b, lib2/l2, main/m
STEP 5:
    language: -IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, lib2, main
    dirty js modules: lib1
    dirty js files:   lib1/l1a, lib1/l1b
STEP 6..7:
    language: -IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, lib2, main
    dirty js modules: lib1, lib2, main
    dirty js files:   lib1/l1a, lib2/l2, main/m