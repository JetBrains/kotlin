package

public final annotation class Ann : kotlin.Annotation {
    public constructor Ann(/*0*/ x: kotlin.IntArray = ...)
    public final val x: kotlin.IntArray
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    public companion object Companion {
        private constructor Companion()
        public final val y1: kotlin.IntArray
        public final val z1: kotlin.IntArray
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public final fun test_1(): kotlin.IntArray
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

        public final class Nested {
            public constructor Nested()
            public final val y2: kotlin.IntArray
            public final val z2: kotlin.IntArray
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public final fun test_2(): kotlin.IntArray
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }
    }

    public object Foo {
        private constructor Foo()
        public final val y3: kotlin.IntArray
        public final val z3: kotlin.IntArray
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public final fun test_3(): kotlin.IntArray
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final class Nested {
        public constructor Nested()
        public final val y4: kotlin.IntArray
        public final val z4: kotlin.IntArray
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public final fun test_4(): kotlin.IntArray
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}

