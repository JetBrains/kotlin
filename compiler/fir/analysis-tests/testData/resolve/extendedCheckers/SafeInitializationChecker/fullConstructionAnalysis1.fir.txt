FILE: fullConstructionAnalysis1.kt
    public abstract class A : R|kotlin/Any| {
        public constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public final val y: R|kotlin/Int| = this@R|/A|.R|/A.foo|().R|kotlin/Any.hashCode|()
            public get(): R|kotlin/Int|

        public abstract fun foo(): R|kotlin/String|

    }
    public final class ErrorImpl : R|A| {
        public constructor(): R|ErrorImpl| {
            super<R|A|>()
        }

        public final val x: R|kotlin/String| = String(Hello)
            public get(): R|kotlin/String|

        public final override fun foo(): R|kotlin/String| {
            ^foo this@R|/ErrorImpl|.R|/ErrorImpl.x|
        }

    }
    public final class CorrectImpl : R|A| {
        public constructor(): R|CorrectImpl| {
            super<R|A|>()
        }

        public final val x: R|kotlin/String| = String(Hello)
            public get(): R|kotlin/String|

        public final override fun foo(): R|kotlin/String| {
            ^foo String(World)
        }

    }
    public open class C : R|kotlin/Any| {
        public constructor(v: R|kotlin/String|): R|C| {
            super<R|kotlin/Any|>()
        }

        public open val v: R|kotlin/String| = R|<local>/v|
            public get(): R|kotlin/String|

        public final val present: R|kotlin/Int| = this@R|/C|.R|/C.v|.R|kotlin/Any.hashCode|()
            public get(): R|kotlin/Int|

    }
    public final class D : R|C| {
        public constructor(v: R|kotlin/String|): R|D| {
            super<R|C|>(R|<local>/v|)
        }

        public final override val v: R|kotlin/String| = R|<local>/v|
            public get(): R|kotlin/String|

    }
