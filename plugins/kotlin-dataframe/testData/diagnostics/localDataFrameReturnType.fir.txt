FILE: localDataFrameReturnType.kt
    package org.jetbrains.kotlinx.dataframe

    @R|org/jetbrains/kotlinx/dataframe/annotations/DataSchema|() public abstract interface MySchema : R|kotlin/Any| {
        public abstract val a: R|kotlin/Int|
            public get(): R|kotlin/Int|

    }
    public final class Test : R|kotlin/Any| {
        public constructor(): R|org/jetbrains/kotlinx/dataframe/Test| {
            super<R|kotlin/Any|>()
        }

        private final val df: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/DataFrameOf_01>| = R|kotlin/run|<R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/DataFrameOf_01>|>(<L> = fun <anonymous>(): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/DataFrameOf_01>| <inline=Inline, kind=EXACTLY_ONCE>  {
            local abstract class DataFrameOf_01I : R|kotlin/Any| {
                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(0)) public abstract val a: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public constructor(): R|<local>/DataFrameOf_01I|

            }

            local final class Scope0 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameOf_01I>|.a: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsScope<<local>/DataFrameOf_01I>|.a: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|

                public constructor(): R|<local>/Scope0|

            }

            local abstract class DataFrameOf_01 : R|<local>/DataFrameOf_01I| {
                @R|org/jetbrains/kotlinx/dataframe/annotations/ScopeProperty|() public abstract val scope0: R|<local>/Scope0|
                    public get(): R|<local>/Scope0|

                public constructor(): R|<local>/DataFrameOf_01|

            }

            ^ R|org/jetbrains/kotlinx/dataframe/api/dataFrameOf|(vararg(String(a).R|kotlin/to|<R|kotlin/String|, R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|>(R|org/jetbrains/kotlinx/dataframe/api/columnOf|<R|kotlin/Int|>(vararg(Int(42))))))
        }
        )
            private get(): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/DataFrameOf_01>|

        public final val df1: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/DataFrameOf_01>| = R|kotlin/run|<R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/DataFrameOf_01>|>(<L> = fun <anonymous>(): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/DataFrameOf_01>| <inline=Inline, kind=EXACTLY_ONCE>  {
            local abstract class DataFrameOf_01I : R|kotlin/Any| {
                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(0)) public abstract val a: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public constructor(): R|<local>/DataFrameOf_01I|

            }

            local final class Scope0 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameOf_01I>|.a: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsScope<<local>/DataFrameOf_01I>|.a: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|

                public constructor(): R|<local>/Scope0|

            }

            local abstract class DataFrameOf_01 : R|<local>/DataFrameOf_01I| {
                @R|org/jetbrains/kotlinx/dataframe/annotations/ScopeProperty|() public abstract val scope0: R|<local>/Scope0|
                    public get(): R|<local>/Scope0|

                public constructor(): R|<local>/DataFrameOf_01|

            }

            ^ R|org/jetbrains/kotlinx/dataframe/api/dataFrameOf|(vararg(String(a).R|kotlin/to|<R|kotlin/String|, R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|>(R|org/jetbrains/kotlinx/dataframe/api/columnOf|<R|kotlin/Int|>(vararg(Int(42))))))
        }
        )
            public get(): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/DataFrameOf_01>|

        private final val df2: R|org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/MySchema>| = R|kotlin/run|<R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/DataFrameOf_01>|>(<L> = fun <anonymous>(): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/DataFrameOf_01>| <inline=Inline, kind=EXACTLY_ONCE>  {
            local abstract class DataFrameOf_01I : R|kotlin/Any| {
                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(0)) public abstract val a: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public constructor(): R|<local>/DataFrameOf_01I|

            }

            local final class Scope0 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameOf_01I>|.a: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsScope<<local>/DataFrameOf_01I>|.a: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|

                public constructor(): R|<local>/Scope0|

            }

            local abstract class DataFrameOf_01 : R|<local>/DataFrameOf_01I| {
                @R|org/jetbrains/kotlinx/dataframe/annotations/ScopeProperty|() public abstract val scope0: R|<local>/Scope0|
                    public get(): R|<local>/Scope0|

                public constructor(): R|<local>/DataFrameOf_01|

            }

            ^ R|org/jetbrains/kotlinx/dataframe/api/dataFrameOf|(vararg(String(a).R|kotlin/to|<R|kotlin/String|, R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|>(R|org/jetbrains/kotlinx/dataframe/api/columnOf|<R|kotlin/Int|>(vararg(Int(42))))))
        }
        ).R|org/jetbrains/kotlinx/dataframe/api/cast|<R|org/jetbrains/kotlinx/dataframe/MySchema|>()
            private get(): R|org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/MySchema>|

    }
FILE: org/jetbrains/kotlinx/dataframe/__GENERATED__CALLABLES__.kt
    package org.jetbrains.kotlinx.dataframe

    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/MySchema>|.a: R|kotlin/Int|
        public get(): R|kotlin/Int|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/MySchema>|.a: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
