// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: compiler/ir/serialization.common/src/KotlinIr.proto
// Protobuf Java Version: 4.29.3

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase}
 */
public  final class IrFunctionBase extends
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite<
        IrFunctionBase, IrFunctionBase.Builder> implements
    // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase)
    IrFunctionBaseOrBuilder {
  private IrFunctionBase() {
    typeParameter_ = emptyProtobufList();
    contextParameter_ = emptyProtobufList();
    regularParameter_ = emptyProtobufList();
  }
  private int bitField0_;
  public static final int BASE_FIELD_NUMBER = 1;
  private org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base_;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
   */
  @java.lang.Override
  public boolean hasBase() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase getBase() {
    return base_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.getDefaultInstance() : base_;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setBase(org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase value) {
    value.getClass();  // minimal bytecode null check
    base_ = value;
    bitField0_ |= 0x00000001;
    }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
  private void mergeBase(org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase value) {
    value.getClass();  // minimal bytecode null check
    if (base_ != null &&
        base_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.getDefaultInstance()) {
      base_ =
        org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.newBuilder(base_).mergeFrom(value).buildPartial();
    } else {
      base_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
   */
  private void clearBase() {  base_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static final int NAME_TYPE_FIELD_NUMBER = 2;
  private long nameType_;
  /**
   * <code>int64 name_type = 2 [features = { ... }</code>
   * @return Whether the nameType field is set.
   */
  @java.lang.Override
  public boolean hasNameType() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>int64 name_type = 2 [features = { ... }</code>
   * @return The nameType.
   */
  @java.lang.Override
  public long getNameType() {
    return nameType_;
  }
  /**
   * <code>int64 name_type = 2 [features = { ... }</code>
   * @param value The nameType to set.
   */
  private void setNameType(long value) {
    bitField0_ |= 0x00000002;
    nameType_ = value;
  }
  /**
   * <code>int64 name_type = 2 [features = { ... }</code>
   */
  private void clearNameType() {
    bitField0_ = (bitField0_ & ~0x00000002);
    nameType_ = 0L;
  }

  public static final int TYPE_PARAMETER_FIELD_NUMBER = 3;
  private org.jetbrains.kotlin.protobuf.Internal.ProtobufList<org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter> typeParameter_;
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
   */
  @java.lang.Override
  public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter> getTypeParameterList() {
    return typeParameter_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
   */
  public java.util.List<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameterOrBuilder> 
      getTypeParameterOrBuilderList() {
    return typeParameter_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
   */
  @java.lang.Override
  public int getTypeParameterCount() {
    return typeParameter_.size();
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter getTypeParameter(int index) {
    return typeParameter_.get(index);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameterOrBuilder getTypeParameterOrBuilder(
      int index) {
    return typeParameter_.get(index);
  }
  private void ensureTypeParameterIsMutable() {
    org.jetbrains.kotlin.protobuf.Internal.ProtobufList<org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter> tmp = typeParameter_;
    if (!tmp.isModifiable()) {
      typeParameter_ =
          org.jetbrains.kotlin.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setTypeParameter(
      int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter value) {
    value.getClass();  // minimal bytecode null check
    ensureTypeParameterIsMutable();
    typeParameter_.set(index, value);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void addTypeParameter(org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter value) {
    value.getClass();  // minimal bytecode null check
    ensureTypeParameterIsMutable();
    typeParameter_.add(value);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void addTypeParameter(
      int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter value) {
    value.getClass();  // minimal bytecode null check
    ensureTypeParameterIsMutable();
    typeParameter_.add(index, value);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
   */
  private void addAllTypeParameter(
      java.lang.Iterable<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter> values) {
    ensureTypeParameterIsMutable();
    org.jetbrains.kotlin.protobuf.AbstractMessageLite.addAll(
        values, typeParameter_);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
   */
  private void clearTypeParameter() {
    typeParameter_ = emptyProtobufList();
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
   */
  private void removeTypeParameter(int index) {
    ensureTypeParameterIsMutable();
    typeParameter_.remove(index);
  }

  public static final int DISPATCH_RECEIVER_FIELD_NUMBER = 4;
  private org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatchReceiver_;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
   */
  @java.lang.Override
  public boolean hasDispatchReceiver() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter getDispatchReceiver() {
    return dispatchReceiver_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.getDefaultInstance() : dispatchReceiver_;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setDispatchReceiver(org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
    value.getClass();  // minimal bytecode null check
    dispatchReceiver_ = value;
    bitField0_ |= 0x00000004;
    }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
  private void mergeDispatchReceiver(org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
    value.getClass();  // minimal bytecode null check
    if (dispatchReceiver_ != null &&
        dispatchReceiver_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.getDefaultInstance()) {
      dispatchReceiver_ =
        org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.newBuilder(dispatchReceiver_).mergeFrom(value).buildPartial();
    } else {
      dispatchReceiver_ = value;
    }
    bitField0_ |= 0x00000004;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
   */
  private void clearDispatchReceiver() {  dispatchReceiver_ = null;
    bitField0_ = (bitField0_ & ~0x00000004);
  }

  public static final int CONTEXT_PARAMETER_FIELD_NUMBER = 9;
  private org.jetbrains.kotlin.protobuf.Internal.ProtobufList<org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter> contextParameter_;
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
   */
  @java.lang.Override
  public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter> getContextParameterList() {
    return contextParameter_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
   */
  public java.util.List<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameterOrBuilder> 
      getContextParameterOrBuilderList() {
    return contextParameter_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
   */
  @java.lang.Override
  public int getContextParameterCount() {
    return contextParameter_.size();
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter getContextParameter(int index) {
    return contextParameter_.get(index);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameterOrBuilder getContextParameterOrBuilder(
      int index) {
    return contextParameter_.get(index);
  }
  private void ensureContextParameterIsMutable() {
    org.jetbrains.kotlin.protobuf.Internal.ProtobufList<org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter> tmp = contextParameter_;
    if (!tmp.isModifiable()) {
      contextParameter_ =
          org.jetbrains.kotlin.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setContextParameter(
      int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
    value.getClass();  // minimal bytecode null check
    ensureContextParameterIsMutable();
    contextParameter_.set(index, value);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void addContextParameter(org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
    value.getClass();  // minimal bytecode null check
    ensureContextParameterIsMutable();
    contextParameter_.add(value);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void addContextParameter(
      int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
    value.getClass();  // minimal bytecode null check
    ensureContextParameterIsMutable();
    contextParameter_.add(index, value);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
   */
  private void addAllContextParameter(
      java.lang.Iterable<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter> values) {
    ensureContextParameterIsMutable();
    org.jetbrains.kotlin.protobuf.AbstractMessageLite.addAll(
        values, contextParameter_);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
   */
  private void clearContextParameter() {
    contextParameter_ = emptyProtobufList();
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
   */
  private void removeContextParameter(int index) {
    ensureContextParameterIsMutable();
    contextParameter_.remove(index);
  }

  public static final int EXTENSION_RECEIVER_FIELD_NUMBER = 5;
  private org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extensionReceiver_;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
   */
  @java.lang.Override
  public boolean hasExtensionReceiver() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter getExtensionReceiver() {
    return extensionReceiver_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.getDefaultInstance() : extensionReceiver_;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setExtensionReceiver(org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
    value.getClass();  // minimal bytecode null check
    extensionReceiver_ = value;
    bitField0_ |= 0x00000008;
    }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality", "ReturnValueIgnored"})
  private void mergeExtensionReceiver(org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
    value.getClass();  // minimal bytecode null check
    if (extensionReceiver_ != null &&
        extensionReceiver_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.getDefaultInstance()) {
      extensionReceiver_ =
        org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.newBuilder(extensionReceiver_).mergeFrom(value).buildPartial();
    } else {
      extensionReceiver_ = value;
    }
    bitField0_ |= 0x00000008;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
   */
  private void clearExtensionReceiver() {  extensionReceiver_ = null;
    bitField0_ = (bitField0_ & ~0x00000008);
  }

  public static final int REGULAR_PARAMETER_FIELD_NUMBER = 6;
  private org.jetbrains.kotlin.protobuf.Internal.ProtobufList<org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter> regularParameter_;
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
   */
  @java.lang.Override
  public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter> getRegularParameterList() {
    return regularParameter_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
   */
  public java.util.List<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameterOrBuilder> 
      getRegularParameterOrBuilderList() {
    return regularParameter_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
   */
  @java.lang.Override
  public int getRegularParameterCount() {
    return regularParameter_.size();
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter getRegularParameter(int index) {
    return regularParameter_.get(index);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameterOrBuilder getRegularParameterOrBuilder(
      int index) {
    return regularParameter_.get(index);
  }
  private void ensureRegularParameterIsMutable() {
    org.jetbrains.kotlin.protobuf.Internal.ProtobufList<org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter> tmp = regularParameter_;
    if (!tmp.isModifiable()) {
      regularParameter_ =
          org.jetbrains.kotlin.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setRegularParameter(
      int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
    value.getClass();  // minimal bytecode null check
    ensureRegularParameterIsMutable();
    regularParameter_.set(index, value);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void addRegularParameter(org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
    value.getClass();  // minimal bytecode null check
    ensureRegularParameterIsMutable();
    regularParameter_.add(value);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void addRegularParameter(
      int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
    value.getClass();  // minimal bytecode null check
    ensureRegularParameterIsMutable();
    regularParameter_.add(index, value);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
   */
  private void addAllRegularParameter(
      java.lang.Iterable<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter> values) {
    ensureRegularParameterIsMutable();
    org.jetbrains.kotlin.protobuf.AbstractMessageLite.addAll(
        values, regularParameter_);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
   */
  private void clearRegularParameter() {
    regularParameter_ = emptyProtobufList();
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
   */
  private void removeRegularParameter(int index) {
    ensureRegularParameterIsMutable();
    regularParameter_.remove(index);
  }

  public static final int BODY_FIELD_NUMBER = 7;
  private int body_;
  /**
   * <pre>
   * int32 context_receiver_parameters_count = 8;
   * </pre>
   *
   * <code>int32 body = 7;</code>
   * @return Whether the body field is set.
   */
  @java.lang.Override
  public boolean hasBody() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * int32 context_receiver_parameters_count = 8;
   * </pre>
   *
   * <code>int32 body = 7;</code>
   * @return The body.
   */
  @java.lang.Override
  public int getBody() {
    return body_;
  }
  /**
   * <pre>
   * int32 context_receiver_parameters_count = 8;
   * </pre>
   *
   * <code>int32 body = 7;</code>
   * @param value The body to set.
   */
  private void setBody(int value) {
    bitField0_ |= 0x00000010;
    body_ = value;
  }
  /**
   * <pre>
   * int32 context_receiver_parameters_count = 8;
   * </pre>
   *
   * <code>int32 body = 7;</code>
   */
  private void clearBody() {
    bitField0_ = (bitField0_ & ~0x00000010);
    body_ = 0;
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase parseFrom(
      java.nio.ByteBuffer data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase parseFrom(
      java.nio.ByteBuffer data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase parseFrom(byte[] data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase parseFrom(
      byte[] data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase parseFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase parseDelimitedFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase}
   */
  public static final class Builder extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase, Builder> implements
      // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase)
      org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBaseOrBuilder {
    // Construct using org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
     */
    @java.lang.Override
    public boolean hasBase() {
      return instance.hasBase();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase getBase() {
      return instance.getBase();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
     */
    public Builder setBase(org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase value) {
      copyOnWrite();
      instance.setBase(value);
      return this;
      }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
     */
    public Builder setBase(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase.Builder builderForValue) {
      copyOnWrite();
      instance.setBase(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
     */
    public Builder mergeBase(org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase value) {
      copyOnWrite();
      instance.mergeBase(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrDeclarationBase base = 1 [features = { ... }</code>
     */
    public Builder clearBase() {  copyOnWrite();
      instance.clearBase();
      return this;
    }

    /**
     * <code>int64 name_type = 2 [features = { ... }</code>
     * @return Whether the nameType field is set.
     */
    @java.lang.Override
    public boolean hasNameType() {
      return instance.hasNameType();
    }
    /**
     * <code>int64 name_type = 2 [features = { ... }</code>
     * @return The nameType.
     */
    @java.lang.Override
    public long getNameType() {
      return instance.getNameType();
    }
    /**
     * <code>int64 name_type = 2 [features = { ... }</code>
     * @param value The nameType to set.
     * @return This builder for chaining.
     */
    public Builder setNameType(long value) {
      copyOnWrite();
      instance.setNameType(value);
      return this;
    }
    /**
     * <code>int64 name_type = 2 [features = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearNameType() {
      copyOnWrite();
      instance.clearNameType();
      return this;
    }

    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    @java.lang.Override
    public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter> getTypeParameterList() {
      return java.util.Collections.unmodifiableList(
          instance.getTypeParameterList());
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    @java.lang.Override
    public int getTypeParameterCount() {
      return instance.getTypeParameterCount();
    }/**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter getTypeParameter(int index) {
      return instance.getTypeParameter(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public Builder setTypeParameter(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter value) {
      copyOnWrite();
      instance.setTypeParameter(index, value);
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public Builder setTypeParameter(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder builderForValue) {
      copyOnWrite();
      instance.setTypeParameter(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public Builder addTypeParameter(org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter value) {
      copyOnWrite();
      instance.addTypeParameter(value);
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public Builder addTypeParameter(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter value) {
      copyOnWrite();
      instance.addTypeParameter(index, value);
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public Builder addTypeParameter(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder builderForValue) {
      copyOnWrite();
      instance.addTypeParameter(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public Builder addTypeParameter(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.Builder builderForValue) {
      copyOnWrite();
      instance.addTypeParameter(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public Builder addAllTypeParameter(
        java.lang.Iterable<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter> values) {
      copyOnWrite();
      instance.addAllTypeParameter(values);
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public Builder clearTypeParameter() {
      copyOnWrite();
      instance.clearTypeParameter();
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter type_parameter = 3;</code>
     */
    public Builder removeTypeParameter(int index) {
      copyOnWrite();
      instance.removeTypeParameter(index);
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
     */
    @java.lang.Override
    public boolean hasDispatchReceiver() {
      return instance.hasDispatchReceiver();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter getDispatchReceiver() {
      return instance.getDispatchReceiver();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
     */
    public Builder setDispatchReceiver(org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
      copyOnWrite();
      instance.setDispatchReceiver(value);
      return this;
      }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
     */
    public Builder setDispatchReceiver(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.Builder builderForValue) {
      copyOnWrite();
      instance.setDispatchReceiver(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
     */
    public Builder mergeDispatchReceiver(org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
      copyOnWrite();
      instance.mergeDispatchReceiver(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter dispatch_receiver = 4;</code>
     */
    public Builder clearDispatchReceiver() {  copyOnWrite();
      instance.clearDispatchReceiver();
      return this;
    }

    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
     */
    @java.lang.Override
    public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter> getContextParameterList() {
      return java.util.Collections.unmodifiableList(
          instance.getContextParameterList());
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
     */
    @java.lang.Override
    public int getContextParameterCount() {
      return instance.getContextParameterCount();
    }/**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter getContextParameter(int index) {
      return instance.getContextParameter(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
     */
    public Builder setContextParameter(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
      copyOnWrite();
      instance.setContextParameter(index, value);
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
     */
    public Builder setContextParameter(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.Builder builderForValue) {
      copyOnWrite();
      instance.setContextParameter(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
     */
    public Builder addContextParameter(org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
      copyOnWrite();
      instance.addContextParameter(value);
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
     */
    public Builder addContextParameter(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
      copyOnWrite();
      instance.addContextParameter(index, value);
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
     */
    public Builder addContextParameter(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.Builder builderForValue) {
      copyOnWrite();
      instance.addContextParameter(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
     */
    public Builder addContextParameter(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.Builder builderForValue) {
      copyOnWrite();
      instance.addContextParameter(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
     */
    public Builder addAllContextParameter(
        java.lang.Iterable<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter> values) {
      copyOnWrite();
      instance.addAllContextParameter(values);
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
     */
    public Builder clearContextParameter() {
      copyOnWrite();
      instance.clearContextParameter();
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter context_parameter = 9;</code>
     */
    public Builder removeContextParameter(int index) {
      copyOnWrite();
      instance.removeContextParameter(index);
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
     */
    @java.lang.Override
    public boolean hasExtensionReceiver() {
      return instance.hasExtensionReceiver();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter getExtensionReceiver() {
      return instance.getExtensionReceiver();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
     */
    public Builder setExtensionReceiver(org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
      copyOnWrite();
      instance.setExtensionReceiver(value);
      return this;
      }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
     */
    public Builder setExtensionReceiver(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.Builder builderForValue) {
      copyOnWrite();
      instance.setExtensionReceiver(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
     */
    public Builder mergeExtensionReceiver(org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
      copyOnWrite();
      instance.mergeExtensionReceiver(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter extension_receiver = 5;</code>
     */
    public Builder clearExtensionReceiver() {  copyOnWrite();
      instance.clearExtensionReceiver();
      return this;
    }

    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
     */
    @java.lang.Override
    public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter> getRegularParameterList() {
      return java.util.Collections.unmodifiableList(
          instance.getRegularParameterList());
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
     */
    @java.lang.Override
    public int getRegularParameterCount() {
      return instance.getRegularParameterCount();
    }/**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter getRegularParameter(int index) {
      return instance.getRegularParameter(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
     */
    public Builder setRegularParameter(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
      copyOnWrite();
      instance.setRegularParameter(index, value);
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
     */
    public Builder setRegularParameter(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.Builder builderForValue) {
      copyOnWrite();
      instance.setRegularParameter(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
     */
    public Builder addRegularParameter(org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
      copyOnWrite();
      instance.addRegularParameter(value);
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
     */
    public Builder addRegularParameter(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter value) {
      copyOnWrite();
      instance.addRegularParameter(index, value);
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
     */
    public Builder addRegularParameter(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.Builder builderForValue) {
      copyOnWrite();
      instance.addRegularParameter(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
     */
    public Builder addRegularParameter(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.Builder builderForValue) {
      copyOnWrite();
      instance.addRegularParameter(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
     */
    public Builder addAllRegularParameter(
        java.lang.Iterable<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter> values) {
      copyOnWrite();
      instance.addAllRegularParameter(values);
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
     */
    public Builder clearRegularParameter() {
      copyOnWrite();
      instance.clearRegularParameter();
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter regular_parameter = 6;</code>
     */
    public Builder removeRegularParameter(int index) {
      copyOnWrite();
      instance.removeRegularParameter(index);
      return this;
    }

    /**
     * <pre>
     * int32 context_receiver_parameters_count = 8;
     * </pre>
     *
     * <code>int32 body = 7;</code>
     * @return Whether the body field is set.
     */
    @java.lang.Override
    public boolean hasBody() {
      return instance.hasBody();
    }
    /**
     * <pre>
     * int32 context_receiver_parameters_count = 8;
     * </pre>
     *
     * <code>int32 body = 7;</code>
     * @return The body.
     */
    @java.lang.Override
    public int getBody() {
      return instance.getBody();
    }
    /**
     * <pre>
     * int32 context_receiver_parameters_count = 8;
     * </pre>
     *
     * <code>int32 body = 7;</code>
     * @param value The body to set.
     * @return This builder for chaining.
     */
    public Builder setBody(int value) {
      copyOnWrite();
      instance.setBody(value);
      return this;
    }
    /**
     * <pre>
     * int32 context_receiver_parameters_count = 8;
     * </pre>
     *
     * <code>int32 body = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearBody() {
      copyOnWrite();
      instance.clearBody();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase)
  }
  private byte memoizedIsInitialized = 2;
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "base_",
            "nameType_",
            "typeParameter_",
            org.jetbrains.kotlin.backend.common.serialization.proto.IrTypeParameter.class,
            "dispatchReceiver_",
            "extensionReceiver_",
            "regularParameter_",
            org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.class,
            "body_",
            "contextParameter_",
            org.jetbrains.kotlin.backend.common.serialization.proto.IrValueParameter.class,
          };
          java.lang.String info =
              "\u0004\b\u0000\u0001\u0001\t\b\u0000\u0003\u0007\u0001\u1509\u0000\u0002\u1502\u0001" +
              "\u0003\u041b\u0004\u1409\u0002\u0005\u1409\u0003\u0006\u041b\u0007\u1004\u0004\t" +
              "\u041b";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        org.jetbrains.kotlin.protobuf.Parser<org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase> parser = PARSER;
        if (parser == null) {
          synchronized (org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return memoizedIsInitialized;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase)
  private static final org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase DEFAULT_INSTANCE;
  static {
    IrFunctionBase defaultInstance = new IrFunctionBase();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.registerDefaultInstance(
      IrFunctionBase.class, defaultInstance);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrFunctionBase getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile org.jetbrains.kotlin.protobuf.Parser<IrFunctionBase> PARSER;

  public static org.jetbrains.kotlin.protobuf.Parser<IrFunctionBase> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
