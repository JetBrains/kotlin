FILE fqName:<root> fileName:/typeOfNonExhaustiveWhen.kt
  FUN name:box visibility:public modality:FINAL <> () returnType:kotlin.String
    BLOCK_BODY
      VAR name:result type:kotlin.collections.List<kotlin.Int> [val]
        CALL 'public final fun buildList <E> (builderAction: @[ExtensionFunctionType] kotlin.Function1<kotlin.collections.MutableList<E of kotlin.collections.buildList>, kotlin.Unit>): kotlin.collections.List<E of kotlin.collections.buildList> declared in kotlin.collections' type=kotlin.collections.List<kotlin.Int> origin=null
          <E>: kotlin.Int
          builderAction: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function1<kotlin.collections.MutableList<kotlin.Int>, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> ($receiver:kotlin.collections.MutableList<kotlin.Int>) returnType:kotlin.Unit
              $receiver: VALUE_PARAMETER name:$this$buildList type:kotlin.collections.MutableList<kotlin.Int>
              BLOCK_BODY
                VAR name:index type:kotlin.Int [var]
                  CONST Int type=kotlin.Int value=0
                WHILE label=null origin=WHILE_LOOP
                  condition: CALL 'public final fun lessOrEqual (arg0: kotlin.Int, arg1: kotlin.Int): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=LTEQ
                    arg0: GET_VAR 'var index: kotlin.Int declared in <root>.box.<anonymous>' type=kotlin.Int origin=null
                    arg1: CONST Int type=kotlin.Int value=10
                  body: BLOCK type=kotlin.Unit origin=null
                    WHEN type=kotlin.Unit origin=IF
                      BRANCH
                        if: CALL 'public final fun greater (arg0: kotlin.Int, arg1: kotlin.Int): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=GT
                          arg0: GET_VAR 'var index: kotlin.Int declared in <root>.box.<anonymous>' type=kotlin.Int origin=null
                          arg1: CONST Int type=kotlin.Int value=4
                        then: BLOCK type=kotlin.Unit origin=null
                          WHEN type=kotlin.Unit origin=IF
                            BRANCH
                              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                                arg0: GET_VAR 'var index: kotlin.Int declared in <root>.box.<anonymous>' type=kotlin.Int origin=null
                                arg1: CONST Int type=kotlin.Int value=5
                              then: BREAK label=null loop.label=null
                      BRANCH
                        if: CONST Boolean type=kotlin.Boolean value=true
                        then: BLOCK type=kotlin.Unit origin=null
                          WHEN type=kotlin.Unit origin=IF
                            BRANCH
                              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                                arg0: GET_VAR 'var index: kotlin.Int declared in <root>.box.<anonymous>' type=kotlin.Int origin=null
                                arg1: CONST Int type=kotlin.Int value=3
                              then: BREAK label=null loop.label=null
                    TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                      CALL 'public abstract fun add (element: E of kotlin.collections.MutableList): kotlin.Boolean declared in kotlin.collections.MutableList' type=kotlin.Boolean origin=null
                        $this: GET_VAR '$this$buildList: kotlin.collections.MutableList<kotlin.Int> declared in <root>.box.<anonymous>' type=kotlin.collections.MutableList<kotlin.Int> origin=null
                        element: GET_VAR 'var index: kotlin.Int declared in <root>.box.<anonymous>' type=kotlin.Int origin=null
                    TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                      BLOCK type=kotlin.Int origin=POSTFIX_INCR
                        VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:kotlin.Int [val]
                          GET_VAR 'var index: kotlin.Int declared in <root>.box.<anonymous>' type=kotlin.Int origin=POSTFIX_INCR
                        SET_VAR 'var index: kotlin.Int declared in <root>.box.<anonymous>' type=kotlin.Unit origin=POSTFIX_INCR
                          CALL 'public final fun inc (): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=POSTFIX_INCR
                            $this: GET_VAR 'val tmp_0: kotlin.Int declared in <root>.box.<anonymous>' type=kotlin.Int origin=null
                        GET_VAR 'val tmp_0: kotlin.Int declared in <root>.box.<anonymous>' type=kotlin.Int origin=null
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        CONST String type=kotlin.String value="OK"
