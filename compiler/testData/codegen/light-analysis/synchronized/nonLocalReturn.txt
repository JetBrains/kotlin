public enum class ExecutionType {
    public final static field LOCAL: ExecutionType
    public final static field NON_LOCAL_EXCEPTION: ExecutionType
    public final static field NON_LOCAL_EXCEPTION_AND_FINALLY: ExecutionType
    public final static field NON_LOCAL_EXCEPTION_AND_FINALLY_WITH_RETURN: ExecutionType
    public final static field NON_LOCAL_FINALLY: ExecutionType
    public final static field NON_LOCAL_NESTED: ExecutionType
    public final static field NON_LOCAL_SIMPLE: ExecutionType
    protected method <init>(p0: java.lang.String, p1: int): void
    public static method valueOf(p0: java.lang.String): ExecutionType
    public static method values(): ExecutionType[]
}


public final class MyException {
    public method <init>(@org.jetbrains.annotations.NotNull p0: java.lang.String): void
}


public final class NonLocalReturnKt {
    private final static field count: int
    private final static @org.jetbrains.annotations.NotNull field doneSignal: java.util.concurrent.CountDownLatch
    private final static field executorService: java.util.concurrent.ExecutorService
    private static field index: int
    private final static @org.jetbrains.annotations.NotNull field mutex: java.lang.Object
    private final static @org.jetbrains.annotations.NotNull field results: java.util.ArrayList
    private final static @org.jetbrains.annotations.NotNull field startSignal: java.util.concurrent.CountDownLatch
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
    public final static method getCount(): int
    public final static @org.jetbrains.annotations.NotNull method getDoneSignal(): java.util.concurrent.CountDownLatch
    public final static method getExecutorService(): java.util.concurrent.ExecutorService
    public final static method getIndex(): int
    public final static @org.jetbrains.annotations.NotNull method getMutex(): java.lang.Object
    public final static @org.jetbrains.annotations.NotNull method getResults(): java.util.ArrayList
    public final static @org.jetbrains.annotations.NotNull method getStartSignal(): java.util.concurrent.CountDownLatch
    public final static @org.jetbrains.annotations.NotNull method runTest(@org.jetbrains.annotations.NotNull p0: ExecutionType): java.lang.String
    public final static method setIndex(p0: int): void
    public final static @org.jetbrains.annotations.NotNull method testTemplate(@org.jetbrains.annotations.NotNull p0: ExecutionType, @org.jetbrains.annotations.NotNull p1: kotlin.jvm.functions.Function1): java.lang.String
}


public final class TestLocal {
    private final @org.jetbrains.annotations.NotNull field executionType: ExecutionType
    private final @org.jetbrains.annotations.NotNull field name: java.lang.String
    public method <init>(@org.jetbrains.annotations.NotNull p0: java.lang.String, @org.jetbrains.annotations.NotNull p1: ExecutionType): void
    public synthetic method call(): java.lang.Object
    public @org.jetbrains.annotations.NotNull method call(): java.lang.String
    public final @org.jetbrains.annotations.NotNull method getExecutionType(): ExecutionType
    public final @org.jetbrains.annotations.NotNull method getName(): java.lang.String
    public final @org.jetbrains.annotations.NotNull method local(): java.lang.String
    public final @org.jetbrains.annotations.NotNull method nonLocalNested(): java.lang.String
    public final @org.jetbrains.annotations.NotNull method nonLocalSimple(): java.lang.String
    public final @org.jetbrains.annotations.NotNull method nonLocalWithException(): java.lang.String
    public final @org.jetbrains.annotations.NotNull method nonLocalWithExceptionAndFinally(): java.lang.String
    public final @org.jetbrains.annotations.NotNull method nonLocalWithExceptionAndFinallyWithReturn(): java.lang.String
    public final @org.jetbrains.annotations.NotNull method nonLocalWithFinally(): java.lang.String
    private final method underMutexFun(): void
}
