// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/descriptor.loader.java/src/jvm_descriptors.debug.proto

package org.jetbrains.kotlin.serialization.jvm;

public final class DebugJvmProtoBuf {
  private DebugJvmProtoBuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registry.add(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.constructorSignature);
    registry.add(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.methodSignature);
    registry.add(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.propertySignature);
    registry.add(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.typeAnnotation);
    registry.add(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.isRaw);
    registry.add(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.typeParameterAnnotation);
    registry.add(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.classModuleName);
    registry.add(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.packageModuleName);
  }
  public interface StringTableTypesOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
     */
    java.util.List<org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record> 
        getRecordList();
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record getRecord(int index);
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
     */
    int getRecordCount();
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
     */
    java.util.List<? extends org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.RecordOrBuilder> 
        getRecordOrBuilderList();
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.RecordOrBuilder getRecordOrBuilder(
        int index);

    // repeated int32 local_name = 5 [packed = true];
    /**
     * <code>repeated int32 local_name = 5 [packed = true];</code>
     *
     * <pre>
     * Indices of strings which are names of local classes or anonymous objects
     * </pre>
     */
    java.util.List<java.lang.Integer> getLocalNameList();
    /**
     * <code>repeated int32 local_name = 5 [packed = true];</code>
     *
     * <pre>
     * Indices of strings which are names of local classes or anonymous objects
     * </pre>
     */
    int getLocalNameCount();
    /**
     * <code>repeated int32 local_name = 5 [packed = true];</code>
     *
     * <pre>
     * Indices of strings which are names of local classes or anonymous objects
     * </pre>
     */
    int getLocalName(int index);
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.StringTableTypes}
   */
  public static final class StringTableTypes extends
      com.google.protobuf.GeneratedMessage
      implements StringTableTypesOrBuilder {
    // Use StringTableTypes.newBuilder() to construct.
    private StringTableTypes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StringTableTypes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final StringTableTypes defaultInstance;
    public static StringTableTypes getDefaultInstance() {
      return defaultInstance;
    }

    public StringTableTypes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private StringTableTypes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                record_ = new java.util.ArrayList<org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record>();
                mutable_bitField0_ |= 0x00000001;
              }
              record_.add(input.readMessage(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                localName_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              localName_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                localName_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                localName_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          record_ = java.util.Collections.unmodifiableList(record_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          localName_ = java.util.Collections.unmodifiableList(localName_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_StringTableTypes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_StringTableTypes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Builder.class);
    }

    public static com.google.protobuf.Parser<StringTableTypes> PARSER =
        new com.google.protobuf.AbstractParser<StringTableTypes>() {
      public StringTableTypes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StringTableTypes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<StringTableTypes> getParserForType() {
      return PARSER;
    }

    public interface RecordOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional int32 range = 1 [default = 1];
      /**
       * <code>optional int32 range = 1 [default = 1];</code>
       *
       * <pre>
       * The number of times this record should be repeated; this is used to collapse identical subsequent records in the list
       * </pre>
       */
      boolean hasRange();
      /**
       * <code>optional int32 range = 1 [default = 1];</code>
       *
       * <pre>
       * The number of times this record should be repeated; this is used to collapse identical subsequent records in the list
       * </pre>
       */
      int getRange();

      // optional int32 predefined_index = 2;
      /**
       * <code>optional int32 predefined_index = 2;</code>
       *
       * <pre>
       * Index of the predefined constant. If this field is present, the associated string is ignored
       * </pre>
       */
      boolean hasPredefinedIndex();
      /**
       * <code>optional int32 predefined_index = 2;</code>
       *
       * <pre>
       * Index of the predefined constant. If this field is present, the associated string is ignored
       * </pre>
       */
      int getPredefinedIndex();

      // optional string string = 6;
      /**
       * <code>optional string string = 6;</code>
       *
       * <pre>
       * A string which should be used. If this field is present, both the associated string and the predefined string index are ignored
       * </pre>
       */
      boolean hasString();
      /**
       * <code>optional string string = 6;</code>
       *
       * <pre>
       * A string which should be used. If this field is present, both the associated string and the predefined string index are ignored
       * </pre>
       */
      java.lang.String getString();
      /**
       * <code>optional string string = 6;</code>
       *
       * <pre>
       * A string which should be used. If this field is present, both the associated string and the predefined string index are ignored
       * </pre>
       */
      com.google.protobuf.ByteString
          getStringBytes();

      // optional .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record.Operation operation = 3 [default = NONE];
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record.Operation operation = 3 [default = NONE];</code>
       *
       * <pre>
       * Perform a described operation on the string
       * </pre>
       */
      boolean hasOperation();
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record.Operation operation = 3 [default = NONE];</code>
       *
       * <pre>
       * Perform a described operation on the string
       * </pre>
       */
      org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Operation getOperation();

      // repeated int32 substring_index = 4 [packed = true];
      /**
       * <code>repeated int32 substring_index = 4 [packed = true];</code>
       *
       * <pre>
       * If this field is present, the "substring" operation must be performed with the first element of this list as the start index,
       * and the second element as the end index.
       * If an operation is not NONE, it's applied _after_ this substring operation
       * </pre>
       */
      java.util.List<java.lang.Integer> getSubstringIndexList();
      /**
       * <code>repeated int32 substring_index = 4 [packed = true];</code>
       *
       * <pre>
       * If this field is present, the "substring" operation must be performed with the first element of this list as the start index,
       * and the second element as the end index.
       * If an operation is not NONE, it's applied _after_ this substring operation
       * </pre>
       */
      int getSubstringIndexCount();
      /**
       * <code>repeated int32 substring_index = 4 [packed = true];</code>
       *
       * <pre>
       * If this field is present, the "substring" operation must be performed with the first element of this list as the start index,
       * and the second element as the end index.
       * If an operation is not NONE, it's applied _after_ this substring operation
       * </pre>
       */
      int getSubstringIndex(int index);

      // repeated int32 replace_char = 5 [packed = true];
      /**
       * <code>repeated int32 replace_char = 5 [packed = true];</code>
       *
       * <pre>
       * If this field is present, the "replaceAll" operation must be performed with the first element of this list as the code point
       * of the character to replace, and the second element as the code point of the replacement character
       * </pre>
       */
      java.util.List<java.lang.Integer> getReplaceCharList();
      /**
       * <code>repeated int32 replace_char = 5 [packed = true];</code>
       *
       * <pre>
       * If this field is present, the "replaceAll" operation must be performed with the first element of this list as the code point
       * of the character to replace, and the second element as the code point of the replacement character
       * </pre>
       */
      int getReplaceCharCount();
      /**
       * <code>repeated int32 replace_char = 5 [packed = true];</code>
       *
       * <pre>
       * If this field is present, the "replaceAll" operation must be performed with the first element of this list as the code point
       * of the character to replace, and the second element as the code point of the replacement character
       * </pre>
       */
      int getReplaceChar(int index);
    }
    /**
     * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record}
     */
    public static final class Record extends
        com.google.protobuf.GeneratedMessage
        implements RecordOrBuilder {
      // Use Record.newBuilder() to construct.
      private Record(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Record(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Record defaultInstance;
      public static Record getDefaultInstance() {
        return defaultInstance;
      }

      public Record getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Record(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                range_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                predefinedIndex_ = input.readInt32();
                break;
              }
              case 24: {
                int rawValue = input.readEnum();
                org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Operation value = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Operation.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(3, rawValue);
                } else {
                  bitField0_ |= 0x00000008;
                  operation_ = value;
                }
                break;
              }
              case 32: {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  substringIndex_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000010;
                }
                substringIndex_.add(input.readInt32());
                break;
              }
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                  substringIndex_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000010;
                }
                while (input.getBytesUntilLimit() > 0) {
                  substringIndex_.add(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 40: {
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                  replaceChar_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000020;
                }
                replaceChar_.add(input.readInt32());
                break;
              }
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                  replaceChar_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000020;
                }
                while (input.getBytesUntilLimit() > 0) {
                  replaceChar_.add(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 50: {
                bitField0_ |= 0x00000004;
                string_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            substringIndex_ = java.util.Collections.unmodifiableList(substringIndex_);
          }
          if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
            replaceChar_ = java.util.Collections.unmodifiableList(replaceChar_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_StringTableTypes_Record_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_StringTableTypes_Record_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Builder.class);
      }

      public static com.google.protobuf.Parser<Record> PARSER =
          new com.google.protobuf.AbstractParser<Record>() {
        public Record parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Record(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Record> getParserForType() {
        return PARSER;
      }

      /**
       * Protobuf enum {@code org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record.Operation}
       */
      public enum Operation
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>NONE = 0;</code>
         */
        NONE(0, 0),
        /**
         * <code>INTERNAL_TO_CLASS_ID = 1;</code>
         *
         * <pre>
         * replaceAll('$', '.')
         * java/util/Map$Entry -&gt; java/util/Map.Entry;
         * </pre>
         */
        INTERNAL_TO_CLASS_ID(1, 1),
        /**
         * <code>DESC_TO_CLASS_ID = 2;</code>
         *
         * <pre>
         * substring(1, length - 1) and then replaceAll('$', '.')
         * Ljava/util/Map$Entry; -&gt; java/util/Map.Entry
         * </pre>
         */
        DESC_TO_CLASS_ID(2, 2),
        ;

        /**
         * <code>NONE = 0;</code>
         */
        public static final int NONE_VALUE = 0;
        /**
         * <code>INTERNAL_TO_CLASS_ID = 1;</code>
         *
         * <pre>
         * replaceAll('$', '.')
         * java/util/Map$Entry -&gt; java/util/Map.Entry;
         * </pre>
         */
        public static final int INTERNAL_TO_CLASS_ID_VALUE = 1;
        /**
         * <code>DESC_TO_CLASS_ID = 2;</code>
         *
         * <pre>
         * substring(1, length - 1) and then replaceAll('$', '.')
         * Ljava/util/Map$Entry; -&gt; java/util/Map.Entry
         * </pre>
         */
        public static final int DESC_TO_CLASS_ID_VALUE = 2;


        public final int getNumber() { return value; }

        public static Operation valueOf(int value) {
          switch (value) {
            case 0: return NONE;
            case 1: return INTERNAL_TO_CLASS_ID;
            case 2: return DESC_TO_CLASS_ID;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Operation>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<Operation>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Operation>() {
                public Operation findValueByNumber(int number) {
                  return Operation.valueOf(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.getDescriptor().getEnumTypes().get(0);
        }

        private static final Operation[] VALUES = values();

        public static Operation valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private Operation(int index, int value) {
          this.index = index;
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record.Operation)
      }

      private int bitField0_;
      // optional int32 range = 1 [default = 1];
      public static final int RANGE_FIELD_NUMBER = 1;
      private int range_;
      /**
       * <code>optional int32 range = 1 [default = 1];</code>
       *
       * <pre>
       * The number of times this record should be repeated; this is used to collapse identical subsequent records in the list
       * </pre>
       */
      public boolean hasRange() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 range = 1 [default = 1];</code>
       *
       * <pre>
       * The number of times this record should be repeated; this is used to collapse identical subsequent records in the list
       * </pre>
       */
      public int getRange() {
        return range_;
      }

      // optional int32 predefined_index = 2;
      public static final int PREDEFINED_INDEX_FIELD_NUMBER = 2;
      private int predefinedIndex_;
      /**
       * <code>optional int32 predefined_index = 2;</code>
       *
       * <pre>
       * Index of the predefined constant. If this field is present, the associated string is ignored
       * </pre>
       */
      public boolean hasPredefinedIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 predefined_index = 2;</code>
       *
       * <pre>
       * Index of the predefined constant. If this field is present, the associated string is ignored
       * </pre>
       */
      public int getPredefinedIndex() {
        return predefinedIndex_;
      }

      // optional string string = 6;
      public static final int STRING_FIELD_NUMBER = 6;
      private java.lang.Object string_;
      /**
       * <code>optional string string = 6;</code>
       *
       * <pre>
       * A string which should be used. If this field is present, both the associated string and the predefined string index are ignored
       * </pre>
       */
      public boolean hasString() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string string = 6;</code>
       *
       * <pre>
       * A string which should be used. If this field is present, both the associated string and the predefined string index are ignored
       * </pre>
       */
      public java.lang.String getString() {
        java.lang.Object ref = string_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            string_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string string = 6;</code>
       *
       * <pre>
       * A string which should be used. If this field is present, both the associated string and the predefined string index are ignored
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStringBytes() {
        java.lang.Object ref = string_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          string_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record.Operation operation = 3 [default = NONE];
      public static final int OPERATION_FIELD_NUMBER = 3;
      private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Operation operation_;
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record.Operation operation = 3 [default = NONE];</code>
       *
       * <pre>
       * Perform a described operation on the string
       * </pre>
       */
      public boolean hasOperation() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record.Operation operation = 3 [default = NONE];</code>
       *
       * <pre>
       * Perform a described operation on the string
       * </pre>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Operation getOperation() {
        return operation_;
      }

      // repeated int32 substring_index = 4 [packed = true];
      public static final int SUBSTRING_INDEX_FIELD_NUMBER = 4;
      private java.util.List<java.lang.Integer> substringIndex_;
      /**
       * <code>repeated int32 substring_index = 4 [packed = true];</code>
       *
       * <pre>
       * If this field is present, the "substring" operation must be performed with the first element of this list as the start index,
       * and the second element as the end index.
       * If an operation is not NONE, it's applied _after_ this substring operation
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSubstringIndexList() {
        return substringIndex_;
      }
      /**
       * <code>repeated int32 substring_index = 4 [packed = true];</code>
       *
       * <pre>
       * If this field is present, the "substring" operation must be performed with the first element of this list as the start index,
       * and the second element as the end index.
       * If an operation is not NONE, it's applied _after_ this substring operation
       * </pre>
       */
      public int getSubstringIndexCount() {
        return substringIndex_.size();
      }
      /**
       * <code>repeated int32 substring_index = 4 [packed = true];</code>
       *
       * <pre>
       * If this field is present, the "substring" operation must be performed with the first element of this list as the start index,
       * and the second element as the end index.
       * If an operation is not NONE, it's applied _after_ this substring operation
       * </pre>
       */
      public int getSubstringIndex(int index) {
        return substringIndex_.get(index);
      }
      private int substringIndexMemoizedSerializedSize = -1;

      // repeated int32 replace_char = 5 [packed = true];
      public static final int REPLACE_CHAR_FIELD_NUMBER = 5;
      private java.util.List<java.lang.Integer> replaceChar_;
      /**
       * <code>repeated int32 replace_char = 5 [packed = true];</code>
       *
       * <pre>
       * If this field is present, the "replaceAll" operation must be performed with the first element of this list as the code point
       * of the character to replace, and the second element as the code point of the replacement character
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getReplaceCharList() {
        return replaceChar_;
      }
      /**
       * <code>repeated int32 replace_char = 5 [packed = true];</code>
       *
       * <pre>
       * If this field is present, the "replaceAll" operation must be performed with the first element of this list as the code point
       * of the character to replace, and the second element as the code point of the replacement character
       * </pre>
       */
      public int getReplaceCharCount() {
        return replaceChar_.size();
      }
      /**
       * <code>repeated int32 replace_char = 5 [packed = true];</code>
       *
       * <pre>
       * If this field is present, the "replaceAll" operation must be performed with the first element of this list as the code point
       * of the character to replace, and the second element as the code point of the replacement character
       * </pre>
       */
      public int getReplaceChar(int index) {
        return replaceChar_.get(index);
      }
      private int replaceCharMemoizedSerializedSize = -1;

      private void initFields() {
        range_ = 1;
        predefinedIndex_ = 0;
        string_ = "";
        operation_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Operation.NONE;
        substringIndex_ = java.util.Collections.emptyList();
        replaceChar_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, range_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, predefinedIndex_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeEnum(3, operation_.getNumber());
        }
        if (getSubstringIndexList().size() > 0) {
          output.writeRawVarint32(34);
          output.writeRawVarint32(substringIndexMemoizedSerializedSize);
        }
        for (int i = 0; i < substringIndex_.size(); i++) {
          output.writeInt32NoTag(substringIndex_.get(i));
        }
        if (getReplaceCharList().size() > 0) {
          output.writeRawVarint32(42);
          output.writeRawVarint32(replaceCharMemoizedSerializedSize);
        }
        for (int i = 0; i < replaceChar_.size(); i++) {
          output.writeInt32NoTag(replaceChar_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(6, getStringBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, range_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, predefinedIndex_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, operation_.getNumber());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < substringIndex_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(substringIndex_.get(i));
          }
          size += dataSize;
          if (!getSubstringIndexList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          substringIndexMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < replaceChar_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(replaceChar_.get(i));
          }
          size += dataSize;
          if (!getReplaceCharList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          replaceCharMemoizedSerializedSize = dataSize;
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(6, getStringBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.RecordOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_StringTableTypes_Record_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_StringTableTypes_Record_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Builder.class);
        }

        // Construct using org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          range_ = 1;
          bitField0_ = (bitField0_ & ~0x00000001);
          predefinedIndex_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          string_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          operation_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Operation.NONE;
          bitField0_ = (bitField0_ & ~0x00000008);
          substringIndex_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          replaceChar_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_StringTableTypes_Record_descriptor;
        }

        public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record getDefaultInstanceForType() {
          return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.getDefaultInstance();
        }

        public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record build() {
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record buildPartial() {
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record result = new org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.range_ = range_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.predefinedIndex_ = predefinedIndex_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.string_ = string_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.operation_ = operation_;
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            substringIndex_ = java.util.Collections.unmodifiableList(substringIndex_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.substringIndex_ = substringIndex_;
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            replaceChar_ = java.util.Collections.unmodifiableList(replaceChar_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.replaceChar_ = replaceChar_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record) {
            return mergeFrom((org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record other) {
          if (other == org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.getDefaultInstance()) return this;
          if (other.hasRange()) {
            setRange(other.getRange());
          }
          if (other.hasPredefinedIndex()) {
            setPredefinedIndex(other.getPredefinedIndex());
          }
          if (other.hasString()) {
            bitField0_ |= 0x00000004;
            string_ = other.string_;
            onChanged();
          }
          if (other.hasOperation()) {
            setOperation(other.getOperation());
          }
          if (!other.substringIndex_.isEmpty()) {
            if (substringIndex_.isEmpty()) {
              substringIndex_ = other.substringIndex_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureSubstringIndexIsMutable();
              substringIndex_.addAll(other.substringIndex_);
            }
            onChanged();
          }
          if (!other.replaceChar_.isEmpty()) {
            if (replaceChar_.isEmpty()) {
              replaceChar_ = other.replaceChar_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureReplaceCharIsMutable();
              replaceChar_.addAll(other.replaceChar_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional int32 range = 1 [default = 1];
        private int range_ = 1;
        /**
         * <code>optional int32 range = 1 [default = 1];</code>
         *
         * <pre>
         * The number of times this record should be repeated; this is used to collapse identical subsequent records in the list
         * </pre>
         */
        public boolean hasRange() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 range = 1 [default = 1];</code>
         *
         * <pre>
         * The number of times this record should be repeated; this is used to collapse identical subsequent records in the list
         * </pre>
         */
        public int getRange() {
          return range_;
        }
        /**
         * <code>optional int32 range = 1 [default = 1];</code>
         *
         * <pre>
         * The number of times this record should be repeated; this is used to collapse identical subsequent records in the list
         * </pre>
         */
        public Builder setRange(int value) {
          bitField0_ |= 0x00000001;
          range_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 range = 1 [default = 1];</code>
         *
         * <pre>
         * The number of times this record should be repeated; this is used to collapse identical subsequent records in the list
         * </pre>
         */
        public Builder clearRange() {
          bitField0_ = (bitField0_ & ~0x00000001);
          range_ = 1;
          onChanged();
          return this;
        }

        // optional int32 predefined_index = 2;
        private int predefinedIndex_ ;
        /**
         * <code>optional int32 predefined_index = 2;</code>
         *
         * <pre>
         * Index of the predefined constant. If this field is present, the associated string is ignored
         * </pre>
         */
        public boolean hasPredefinedIndex() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 predefined_index = 2;</code>
         *
         * <pre>
         * Index of the predefined constant. If this field is present, the associated string is ignored
         * </pre>
         */
        public int getPredefinedIndex() {
          return predefinedIndex_;
        }
        /**
         * <code>optional int32 predefined_index = 2;</code>
         *
         * <pre>
         * Index of the predefined constant. If this field is present, the associated string is ignored
         * </pre>
         */
        public Builder setPredefinedIndex(int value) {
          bitField0_ |= 0x00000002;
          predefinedIndex_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 predefined_index = 2;</code>
         *
         * <pre>
         * Index of the predefined constant. If this field is present, the associated string is ignored
         * </pre>
         */
        public Builder clearPredefinedIndex() {
          bitField0_ = (bitField0_ & ~0x00000002);
          predefinedIndex_ = 0;
          onChanged();
          return this;
        }

        // optional string string = 6;
        private java.lang.Object string_ = "";
        /**
         * <code>optional string string = 6;</code>
         *
         * <pre>
         * A string which should be used. If this field is present, both the associated string and the predefined string index are ignored
         * </pre>
         */
        public boolean hasString() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string string = 6;</code>
         *
         * <pre>
         * A string which should be used. If this field is present, both the associated string and the predefined string index are ignored
         * </pre>
         */
        public java.lang.String getString() {
          java.lang.Object ref = string_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            string_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string string = 6;</code>
         *
         * <pre>
         * A string which should be used. If this field is present, both the associated string and the predefined string index are ignored
         * </pre>
         */
        public com.google.protobuf.ByteString
            getStringBytes() {
          java.lang.Object ref = string_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            string_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string string = 6;</code>
         *
         * <pre>
         * A string which should be used. If this field is present, both the associated string and the predefined string index are ignored
         * </pre>
         */
        public Builder setString(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          string_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string string = 6;</code>
         *
         * <pre>
         * A string which should be used. If this field is present, both the associated string and the predefined string index are ignored
         * </pre>
         */
        public Builder clearString() {
          bitField0_ = (bitField0_ & ~0x00000004);
          string_ = getDefaultInstance().getString();
          onChanged();
          return this;
        }
        /**
         * <code>optional string string = 6;</code>
         *
         * <pre>
         * A string which should be used. If this field is present, both the associated string and the predefined string index are ignored
         * </pre>
         */
        public Builder setStringBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          string_ = value;
          onChanged();
          return this;
        }

        // optional .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record.Operation operation = 3 [default = NONE];
        private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Operation operation_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Operation.NONE;
        /**
         * <code>optional .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record.Operation operation = 3 [default = NONE];</code>
         *
         * <pre>
         * Perform a described operation on the string
         * </pre>
         */
        public boolean hasOperation() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record.Operation operation = 3 [default = NONE];</code>
         *
         * <pre>
         * Perform a described operation on the string
         * </pre>
         */
        public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Operation getOperation() {
          return operation_;
        }
        /**
         * <code>optional .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record.Operation operation = 3 [default = NONE];</code>
         *
         * <pre>
         * Perform a described operation on the string
         * </pre>
         */
        public Builder setOperation(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Operation value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          operation_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record.Operation operation = 3 [default = NONE];</code>
         *
         * <pre>
         * Perform a described operation on the string
         * </pre>
         */
        public Builder clearOperation() {
          bitField0_ = (bitField0_ & ~0x00000008);
          operation_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Operation.NONE;
          onChanged();
          return this;
        }

        // repeated int32 substring_index = 4 [packed = true];
        private java.util.List<java.lang.Integer> substringIndex_ = java.util.Collections.emptyList();
        private void ensureSubstringIndexIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            substringIndex_ = new java.util.ArrayList<java.lang.Integer>(substringIndex_);
            bitField0_ |= 0x00000010;
           }
        }
        /**
         * <code>repeated int32 substring_index = 4 [packed = true];</code>
         *
         * <pre>
         * If this field is present, the "substring" operation must be performed with the first element of this list as the start index,
         * and the second element as the end index.
         * If an operation is not NONE, it's applied _after_ this substring operation
         * </pre>
         */
        public java.util.List<java.lang.Integer>
            getSubstringIndexList() {
          return java.util.Collections.unmodifiableList(substringIndex_);
        }
        /**
         * <code>repeated int32 substring_index = 4 [packed = true];</code>
         *
         * <pre>
         * If this field is present, the "substring" operation must be performed with the first element of this list as the start index,
         * and the second element as the end index.
         * If an operation is not NONE, it's applied _after_ this substring operation
         * </pre>
         */
        public int getSubstringIndexCount() {
          return substringIndex_.size();
        }
        /**
         * <code>repeated int32 substring_index = 4 [packed = true];</code>
         *
         * <pre>
         * If this field is present, the "substring" operation must be performed with the first element of this list as the start index,
         * and the second element as the end index.
         * If an operation is not NONE, it's applied _after_ this substring operation
         * </pre>
         */
        public int getSubstringIndex(int index) {
          return substringIndex_.get(index);
        }
        /**
         * <code>repeated int32 substring_index = 4 [packed = true];</code>
         *
         * <pre>
         * If this field is present, the "substring" operation must be performed with the first element of this list as the start index,
         * and the second element as the end index.
         * If an operation is not NONE, it's applied _after_ this substring operation
         * </pre>
         */
        public Builder setSubstringIndex(
            int index, int value) {
          ensureSubstringIndexIsMutable();
          substringIndex_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 substring_index = 4 [packed = true];</code>
         *
         * <pre>
         * If this field is present, the "substring" operation must be performed with the first element of this list as the start index,
         * and the second element as the end index.
         * If an operation is not NONE, it's applied _after_ this substring operation
         * </pre>
         */
        public Builder addSubstringIndex(int value) {
          ensureSubstringIndexIsMutable();
          substringIndex_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 substring_index = 4 [packed = true];</code>
         *
         * <pre>
         * If this field is present, the "substring" operation must be performed with the first element of this list as the start index,
         * and the second element as the end index.
         * If an operation is not NONE, it's applied _after_ this substring operation
         * </pre>
         */
        public Builder addAllSubstringIndex(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureSubstringIndexIsMutable();
          super.addAll(values, substringIndex_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 substring_index = 4 [packed = true];</code>
         *
         * <pre>
         * If this field is present, the "substring" operation must be performed with the first element of this list as the start index,
         * and the second element as the end index.
         * If an operation is not NONE, it's applied _after_ this substring operation
         * </pre>
         */
        public Builder clearSubstringIndex() {
          substringIndex_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }

        // repeated int32 replace_char = 5 [packed = true];
        private java.util.List<java.lang.Integer> replaceChar_ = java.util.Collections.emptyList();
        private void ensureReplaceCharIsMutable() {
          if (!((bitField0_ & 0x00000020) == 0x00000020)) {
            replaceChar_ = new java.util.ArrayList<java.lang.Integer>(replaceChar_);
            bitField0_ |= 0x00000020;
           }
        }
        /**
         * <code>repeated int32 replace_char = 5 [packed = true];</code>
         *
         * <pre>
         * If this field is present, the "replaceAll" operation must be performed with the first element of this list as the code point
         * of the character to replace, and the second element as the code point of the replacement character
         * </pre>
         */
        public java.util.List<java.lang.Integer>
            getReplaceCharList() {
          return java.util.Collections.unmodifiableList(replaceChar_);
        }
        /**
         * <code>repeated int32 replace_char = 5 [packed = true];</code>
         *
         * <pre>
         * If this field is present, the "replaceAll" operation must be performed with the first element of this list as the code point
         * of the character to replace, and the second element as the code point of the replacement character
         * </pre>
         */
        public int getReplaceCharCount() {
          return replaceChar_.size();
        }
        /**
         * <code>repeated int32 replace_char = 5 [packed = true];</code>
         *
         * <pre>
         * If this field is present, the "replaceAll" operation must be performed with the first element of this list as the code point
         * of the character to replace, and the second element as the code point of the replacement character
         * </pre>
         */
        public int getReplaceChar(int index) {
          return replaceChar_.get(index);
        }
        /**
         * <code>repeated int32 replace_char = 5 [packed = true];</code>
         *
         * <pre>
         * If this field is present, the "replaceAll" operation must be performed with the first element of this list as the code point
         * of the character to replace, and the second element as the code point of the replacement character
         * </pre>
         */
        public Builder setReplaceChar(
            int index, int value) {
          ensureReplaceCharIsMutable();
          replaceChar_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 replace_char = 5 [packed = true];</code>
         *
         * <pre>
         * If this field is present, the "replaceAll" operation must be performed with the first element of this list as the code point
         * of the character to replace, and the second element as the code point of the replacement character
         * </pre>
         */
        public Builder addReplaceChar(int value) {
          ensureReplaceCharIsMutable();
          replaceChar_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 replace_char = 5 [packed = true];</code>
         *
         * <pre>
         * If this field is present, the "replaceAll" operation must be performed with the first element of this list as the code point
         * of the character to replace, and the second element as the code point of the replacement character
         * </pre>
         */
        public Builder addAllReplaceChar(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureReplaceCharIsMutable();
          super.addAll(values, replaceChar_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 replace_char = 5 [packed = true];</code>
         *
         * <pre>
         * If this field is present, the "replaceAll" operation must be performed with the first element of this list as the code point
         * of the character to replace, and the second element as the code point of the replacement character
         * </pre>
         */
        public Builder clearReplaceChar() {
          replaceChar_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record)
      }

      static {
        defaultInstance = new Record(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record)
    }

    // repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;
    public static final int RECORD_FIELD_NUMBER = 1;
    private java.util.List<org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record> record_;
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
     */
    public java.util.List<org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record> getRecordList() {
      return record_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
     */
    public java.util.List<? extends org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.RecordOrBuilder> 
        getRecordOrBuilderList() {
      return record_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
     */
    public int getRecordCount() {
      return record_.size();
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record getRecord(int index) {
      return record_.get(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.RecordOrBuilder getRecordOrBuilder(
        int index) {
      return record_.get(index);
    }

    // repeated int32 local_name = 5 [packed = true];
    public static final int LOCAL_NAME_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> localName_;
    /**
     * <code>repeated int32 local_name = 5 [packed = true];</code>
     *
     * <pre>
     * Indices of strings which are names of local classes or anonymous objects
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getLocalNameList() {
      return localName_;
    }
    /**
     * <code>repeated int32 local_name = 5 [packed = true];</code>
     *
     * <pre>
     * Indices of strings which are names of local classes or anonymous objects
     * </pre>
     */
    public int getLocalNameCount() {
      return localName_.size();
    }
    /**
     * <code>repeated int32 local_name = 5 [packed = true];</code>
     *
     * <pre>
     * Indices of strings which are names of local classes or anonymous objects
     * </pre>
     */
    public int getLocalName(int index) {
      return localName_.get(index);
    }
    private int localNameMemoizedSerializedSize = -1;

    private void initFields() {
      record_ = java.util.Collections.emptyList();
      localName_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < record_.size(); i++) {
        output.writeMessage(1, record_.get(i));
      }
      if (getLocalNameList().size() > 0) {
        output.writeRawVarint32(42);
        output.writeRawVarint32(localNameMemoizedSerializedSize);
      }
      for (int i = 0; i < localName_.size(); i++) {
        output.writeInt32NoTag(localName_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < record_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, record_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < localName_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(localName_.get(i));
        }
        size += dataSize;
        if (!getLocalNameList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        localNameMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.StringTableTypes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_StringTableTypes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_StringTableTypes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Builder.class);
      }

      // Construct using org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRecordFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (recordBuilder_ == null) {
          record_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          recordBuilder_.clear();
        }
        localName_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_StringTableTypes_descriptor;
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes getDefaultInstanceForType() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.getDefaultInstance();
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes build() {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes buildPartial() {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes result = new org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes(this);
        int from_bitField0_ = bitField0_;
        if (recordBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            record_ = java.util.Collections.unmodifiableList(record_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.record_ = record_;
        } else {
          result.record_ = recordBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          localName_ = java.util.Collections.unmodifiableList(localName_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.localName_ = localName_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes) {
          return mergeFrom((org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes other) {
        if (other == org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.getDefaultInstance()) return this;
        if (recordBuilder_ == null) {
          if (!other.record_.isEmpty()) {
            if (record_.isEmpty()) {
              record_ = other.record_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRecordIsMutable();
              record_.addAll(other.record_);
            }
            onChanged();
          }
        } else {
          if (!other.record_.isEmpty()) {
            if (recordBuilder_.isEmpty()) {
              recordBuilder_.dispose();
              recordBuilder_ = null;
              record_ = other.record_;
              bitField0_ = (bitField0_ & ~0x00000001);
              recordBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRecordFieldBuilder() : null;
            } else {
              recordBuilder_.addAllMessages(other.record_);
            }
          }
        }
        if (!other.localName_.isEmpty()) {
          if (localName_.isEmpty()) {
            localName_ = other.localName_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureLocalNameIsMutable();
            localName_.addAll(other.localName_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;
      private java.util.List<org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record> record_ =
        java.util.Collections.emptyList();
      private void ensureRecordIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          record_ = new java.util.ArrayList<org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record>(record_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.RecordOrBuilder> recordBuilder_;

      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
       */
      public java.util.List<org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record> getRecordList() {
        if (recordBuilder_ == null) {
          return java.util.Collections.unmodifiableList(record_);
        } else {
          return recordBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
       */
      public int getRecordCount() {
        if (recordBuilder_ == null) {
          return record_.size();
        } else {
          return recordBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record getRecord(int index) {
        if (recordBuilder_ == null) {
          return record_.get(index);
        } else {
          return recordBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
       */
      public Builder setRecord(
          int index, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record value) {
        if (recordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordIsMutable();
          record_.set(index, value);
          onChanged();
        } else {
          recordBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
       */
      public Builder setRecord(
          int index, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Builder builderForValue) {
        if (recordBuilder_ == null) {
          ensureRecordIsMutable();
          record_.set(index, builderForValue.build());
          onChanged();
        } else {
          recordBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
       */
      public Builder addRecord(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record value) {
        if (recordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordIsMutable();
          record_.add(value);
          onChanged();
        } else {
          recordBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
       */
      public Builder addRecord(
          int index, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record value) {
        if (recordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordIsMutable();
          record_.add(index, value);
          onChanged();
        } else {
          recordBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
       */
      public Builder addRecord(
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Builder builderForValue) {
        if (recordBuilder_ == null) {
          ensureRecordIsMutable();
          record_.add(builderForValue.build());
          onChanged();
        } else {
          recordBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
       */
      public Builder addRecord(
          int index, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Builder builderForValue) {
        if (recordBuilder_ == null) {
          ensureRecordIsMutable();
          record_.add(index, builderForValue.build());
          onChanged();
        } else {
          recordBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
       */
      public Builder addAllRecord(
          java.lang.Iterable<? extends org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record> values) {
        if (recordBuilder_ == null) {
          ensureRecordIsMutable();
          super.addAll(values, record_);
          onChanged();
        } else {
          recordBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
       */
      public Builder clearRecord() {
        if (recordBuilder_ == null) {
          record_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          recordBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
       */
      public Builder removeRecord(int index) {
        if (recordBuilder_ == null) {
          ensureRecordIsMutable();
          record_.remove(index);
          onChanged();
        } else {
          recordBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Builder getRecordBuilder(
          int index) {
        return getRecordFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.RecordOrBuilder getRecordOrBuilder(
          int index) {
        if (recordBuilder_ == null) {
          return record_.get(index);  } else {
          return recordBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
       */
      public java.util.List<? extends org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.RecordOrBuilder> 
           getRecordOrBuilderList() {
        if (recordBuilder_ != null) {
          return recordBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(record_);
        }
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Builder addRecordBuilder() {
        return getRecordFieldBuilder().addBuilder(
            org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.getDefaultInstance());
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Builder addRecordBuilder(
          int index) {
        return getRecordFieldBuilder().addBuilder(
            index, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.getDefaultInstance());
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.StringTableTypes.Record record = 1;</code>
       */
      public java.util.List<org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Builder> 
           getRecordBuilderList() {
        return getRecordFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.RecordOrBuilder> 
          getRecordFieldBuilder() {
        if (recordBuilder_ == null) {
          recordBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.Record.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.StringTableTypes.RecordOrBuilder>(
                  record_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          record_ = null;
        }
        return recordBuilder_;
      }

      // repeated int32 local_name = 5 [packed = true];
      private java.util.List<java.lang.Integer> localName_ = java.util.Collections.emptyList();
      private void ensureLocalNameIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          localName_ = new java.util.ArrayList<java.lang.Integer>(localName_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 local_name = 5 [packed = true];</code>
       *
       * <pre>
       * Indices of strings which are names of local classes or anonymous objects
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getLocalNameList() {
        return java.util.Collections.unmodifiableList(localName_);
      }
      /**
       * <code>repeated int32 local_name = 5 [packed = true];</code>
       *
       * <pre>
       * Indices of strings which are names of local classes or anonymous objects
       * </pre>
       */
      public int getLocalNameCount() {
        return localName_.size();
      }
      /**
       * <code>repeated int32 local_name = 5 [packed = true];</code>
       *
       * <pre>
       * Indices of strings which are names of local classes or anonymous objects
       * </pre>
       */
      public int getLocalName(int index) {
        return localName_.get(index);
      }
      /**
       * <code>repeated int32 local_name = 5 [packed = true];</code>
       *
       * <pre>
       * Indices of strings which are names of local classes or anonymous objects
       * </pre>
       */
      public Builder setLocalName(
          int index, int value) {
        ensureLocalNameIsMutable();
        localName_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 local_name = 5 [packed = true];</code>
       *
       * <pre>
       * Indices of strings which are names of local classes or anonymous objects
       * </pre>
       */
      public Builder addLocalName(int value) {
        ensureLocalNameIsMutable();
        localName_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 local_name = 5 [packed = true];</code>
       *
       * <pre>
       * Indices of strings which are names of local classes or anonymous objects
       * </pre>
       */
      public Builder addAllLocalName(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLocalNameIsMutable();
        super.addAll(values, localName_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 local_name = 5 [packed = true];</code>
       *
       * <pre>
       * Indices of strings which are names of local classes or anonymous objects
       * </pre>
       */
      public Builder clearLocalName() {
        localName_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.serialization.jvm.StringTableTypes)
    }

    static {
      defaultInstance = new StringTableTypes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.serialization.jvm.StringTableTypes)
  }

  public interface JvmMethodSignatureOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 name = 1;
    /**
     * <code>optional int32 name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional int32 name = 1;</code>
     */
    int getName();

    // optional int32 desc = 2;
    /**
     * <code>optional int32 desc = 2;</code>
     *
     * <pre>
     * JVM descriptor of the method, e.g. '(Ljava/util/List;)[Ljava/lang/Object;'
     * </pre>
     */
    boolean hasDesc();
    /**
     * <code>optional int32 desc = 2;</code>
     *
     * <pre>
     * JVM descriptor of the method, e.g. '(Ljava/util/List;)[Ljava/lang/Object;'
     * </pre>
     */
    int getDesc();
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature}
   */
  public static final class JvmMethodSignature extends
      com.google.protobuf.GeneratedMessage
      implements JvmMethodSignatureOrBuilder {
    // Use JvmMethodSignature.newBuilder() to construct.
    private JvmMethodSignature(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private JvmMethodSignature(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final JvmMethodSignature defaultInstance;
    public static JvmMethodSignature getDefaultInstance() {
      return defaultInstance;
    }

    public JvmMethodSignature getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private JvmMethodSignature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              name_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              desc_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmMethodSignature_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmMethodSignature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder.class);
    }

    public static com.google.protobuf.Parser<JvmMethodSignature> PARSER =
        new com.google.protobuf.AbstractParser<JvmMethodSignature>() {
      public JvmMethodSignature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JvmMethodSignature(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<JvmMethodSignature> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private int name_;
    /**
     * <code>optional int32 name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 name = 1;</code>
     */
    public int getName() {
      return name_;
    }

    // optional int32 desc = 2;
    public static final int DESC_FIELD_NUMBER = 2;
    private int desc_;
    /**
     * <code>optional int32 desc = 2;</code>
     *
     * <pre>
     * JVM descriptor of the method, e.g. '(Ljava/util/List;)[Ljava/lang/Object;'
     * </pre>
     */
    public boolean hasDesc() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 desc = 2;</code>
     *
     * <pre>
     * JVM descriptor of the method, e.g. '(Ljava/util/List;)[Ljava/lang/Object;'
     * </pre>
     */
    public int getDesc() {
      return desc_;
    }

    private void initFields() {
      name_ = 0;
      desc_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, desc_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, desc_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmMethodSignature_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmMethodSignature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder.class);
      }

      // Construct using org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        desc_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmMethodSignature_descriptor;
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getDefaultInstanceForType() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature build() {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature buildPartial() {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature result = new org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.desc_ = desc_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature) {
          return mergeFrom((org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature other) {
        if (other == org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasDesc()) {
          setDesc(other.getDesc());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 name = 1;
      private int name_ ;
      /**
       * <code>optional int32 name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 name = 1;</code>
       */
      public int getName() {
        return name_;
      }
      /**
       * <code>optional int32 name = 1;</code>
       */
      public Builder setName(int value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = 0;
        onChanged();
        return this;
      }

      // optional int32 desc = 2;
      private int desc_ ;
      /**
       * <code>optional int32 desc = 2;</code>
       *
       * <pre>
       * JVM descriptor of the method, e.g. '(Ljava/util/List;)[Ljava/lang/Object;'
       * </pre>
       */
      public boolean hasDesc() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 desc = 2;</code>
       *
       * <pre>
       * JVM descriptor of the method, e.g. '(Ljava/util/List;)[Ljava/lang/Object;'
       * </pre>
       */
      public int getDesc() {
        return desc_;
      }
      /**
       * <code>optional int32 desc = 2;</code>
       *
       * <pre>
       * JVM descriptor of the method, e.g. '(Ljava/util/List;)[Ljava/lang/Object;'
       * </pre>
       */
      public Builder setDesc(int value) {
        bitField0_ |= 0x00000002;
        desc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 desc = 2;</code>
       *
       * <pre>
       * JVM descriptor of the method, e.g. '(Ljava/util/List;)[Ljava/lang/Object;'
       * </pre>
       */
      public Builder clearDesc() {
        bitField0_ = (bitField0_ & ~0x00000002);
        desc_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature)
    }

    static {
      defaultInstance = new JvmMethodSignature(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature)
  }

  public interface JvmFieldSignatureOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 name = 1;
    /**
     * <code>optional int32 name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional int32 name = 1;</code>
     */
    int getName();

    // optional int32 desc = 2;
    /**
     * <code>optional int32 desc = 2;</code>
     *
     * <pre>
     * JVM descriptor of the field type, e.g. 'Ljava/lang/String;'
     * </pre>
     */
    boolean hasDesc();
    /**
     * <code>optional int32 desc = 2;</code>
     *
     * <pre>
     * JVM descriptor of the field type, e.g. 'Ljava/lang/String;'
     * </pre>
     */
    int getDesc();
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature}
   */
  public static final class JvmFieldSignature extends
      com.google.protobuf.GeneratedMessage
      implements JvmFieldSignatureOrBuilder {
    // Use JvmFieldSignature.newBuilder() to construct.
    private JvmFieldSignature(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private JvmFieldSignature(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final JvmFieldSignature defaultInstance;
    public static JvmFieldSignature getDefaultInstance() {
      return defaultInstance;
    }

    public JvmFieldSignature getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private JvmFieldSignature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              name_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              desc_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmFieldSignature_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmFieldSignature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.Builder.class);
    }

    public static com.google.protobuf.Parser<JvmFieldSignature> PARSER =
        new com.google.protobuf.AbstractParser<JvmFieldSignature>() {
      public JvmFieldSignature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JvmFieldSignature(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<JvmFieldSignature> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private int name_;
    /**
     * <code>optional int32 name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 name = 1;</code>
     */
    public int getName() {
      return name_;
    }

    // optional int32 desc = 2;
    public static final int DESC_FIELD_NUMBER = 2;
    private int desc_;
    /**
     * <code>optional int32 desc = 2;</code>
     *
     * <pre>
     * JVM descriptor of the field type, e.g. 'Ljava/lang/String;'
     * </pre>
     */
    public boolean hasDesc() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 desc = 2;</code>
     *
     * <pre>
     * JVM descriptor of the field type, e.g. 'Ljava/lang/String;'
     * </pre>
     */
    public int getDesc() {
      return desc_;
    }

    private void initFields() {
      name_ = 0;
      desc_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, desc_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, desc_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmFieldSignature_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmFieldSignature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.Builder.class);
      }

      // Construct using org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        desc_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmFieldSignature_descriptor;
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature getDefaultInstanceForType() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.getDefaultInstance();
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature build() {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature buildPartial() {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature result = new org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.desc_ = desc_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature) {
          return mergeFrom((org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature other) {
        if (other == org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasDesc()) {
          setDesc(other.getDesc());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 name = 1;
      private int name_ ;
      /**
       * <code>optional int32 name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 name = 1;</code>
       */
      public int getName() {
        return name_;
      }
      /**
       * <code>optional int32 name = 1;</code>
       */
      public Builder setName(int value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = 0;
        onChanged();
        return this;
      }

      // optional int32 desc = 2;
      private int desc_ ;
      /**
       * <code>optional int32 desc = 2;</code>
       *
       * <pre>
       * JVM descriptor of the field type, e.g. 'Ljava/lang/String;'
       * </pre>
       */
      public boolean hasDesc() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 desc = 2;</code>
       *
       * <pre>
       * JVM descriptor of the field type, e.g. 'Ljava/lang/String;'
       * </pre>
       */
      public int getDesc() {
        return desc_;
      }
      /**
       * <code>optional int32 desc = 2;</code>
       *
       * <pre>
       * JVM descriptor of the field type, e.g. 'Ljava/lang/String;'
       * </pre>
       */
      public Builder setDesc(int value) {
        bitField0_ |= 0x00000002;
        desc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 desc = 2;</code>
       *
       * <pre>
       * JVM descriptor of the field type, e.g. 'Ljava/lang/String;'
       * </pre>
       */
      public Builder clearDesc() {
        bitField0_ = (bitField0_ & ~0x00000002);
        desc_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature)
    }

    static {
      defaultInstance = new JvmFieldSignature(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature)
  }

  public interface JvmPropertySignatureOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
     */
    boolean hasField();
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature getField();
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignatureOrBuilder getFieldOrBuilder();

    // optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
     *
     * <pre>
     * Annotations on properties are written on a synthetic method with this signature
     * </pre>
     */
    boolean hasSyntheticMethod();
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
     *
     * <pre>
     * Annotations on properties are written on a synthetic method with this signature
     * </pre>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getSyntheticMethod();
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
     *
     * <pre>
     * Annotations on properties are written on a synthetic method with this signature
     * </pre>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder getSyntheticMethodOrBuilder();

    // optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
     */
    boolean hasGetter();
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getGetter();
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder getGetterOrBuilder();

    // optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
     */
    boolean hasSetter();
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getSetter();
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder getSetterOrBuilder();
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.JvmPropertySignature}
   */
  public static final class JvmPropertySignature extends
      com.google.protobuf.GeneratedMessage
      implements JvmPropertySignatureOrBuilder {
    // Use JvmPropertySignature.newBuilder() to construct.
    private JvmPropertySignature(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private JvmPropertySignature(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final JvmPropertySignature defaultInstance;
    public static JvmPropertySignature getDefaultInstance() {
      return defaultInstance;
    }

    public JvmPropertySignature getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private JvmPropertySignature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = field_.toBuilder();
              }
              field_ = input.readMessage(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(field_);
                field_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = syntheticMethod_.toBuilder();
              }
              syntheticMethod_ = input.readMessage(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(syntheticMethod_);
                syntheticMethod_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = getter_.toBuilder();
              }
              getter_ = input.readMessage(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getter_);
                getter_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = setter_.toBuilder();
              }
              setter_ = input.readMessage(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(setter_);
                setter_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmPropertySignature_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmPropertySignature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature.Builder.class);
    }

    public static com.google.protobuf.Parser<JvmPropertySignature> PARSER =
        new com.google.protobuf.AbstractParser<JvmPropertySignature>() {
      public JvmPropertySignature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JvmPropertySignature(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<JvmPropertySignature> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;
    public static final int FIELD_FIELD_NUMBER = 1;
    private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature field_;
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
     */
    public boolean hasField() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature getField() {
      return field_;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignatureOrBuilder getFieldOrBuilder() {
      return field_;
    }

    // optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;
    public static final int SYNTHETIC_METHOD_FIELD_NUMBER = 2;
    private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature syntheticMethod_;
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
     *
     * <pre>
     * Annotations on properties are written on a synthetic method with this signature
     * </pre>
     */
    public boolean hasSyntheticMethod() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
     *
     * <pre>
     * Annotations on properties are written on a synthetic method with this signature
     * </pre>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getSyntheticMethod() {
      return syntheticMethod_;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
     *
     * <pre>
     * Annotations on properties are written on a synthetic method with this signature
     * </pre>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder getSyntheticMethodOrBuilder() {
      return syntheticMethod_;
    }

    // optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;
    public static final int GETTER_FIELD_NUMBER = 3;
    private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getter_;
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
     */
    public boolean hasGetter() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getGetter() {
      return getter_;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder getGetterOrBuilder() {
      return getter_;
    }

    // optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;
    public static final int SETTER_FIELD_NUMBER = 4;
    private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature setter_;
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
     */
    public boolean hasSetter() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getSetter() {
      return setter_;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder getSetterOrBuilder() {
      return setter_;
    }

    private void initFields() {
      field_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.getDefaultInstance();
      syntheticMethod_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
      getter_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
      setter_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, field_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, syntheticMethod_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getter_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, setter_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, field_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, syntheticMethod_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getter_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, setter_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.JvmPropertySignature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmPropertySignature_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmPropertySignature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature.Builder.class);
      }

      // Construct using org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldFieldBuilder();
          getSyntheticMethodFieldBuilder();
          getGetterFieldBuilder();
          getSetterFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (fieldBuilder_ == null) {
          field_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.getDefaultInstance();
        } else {
          fieldBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (syntheticMethodBuilder_ == null) {
          syntheticMethod_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
        } else {
          syntheticMethodBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (getterBuilder_ == null) {
          getter_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
        } else {
          getterBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (setterBuilder_ == null) {
          setter_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
        } else {
          setterBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmPropertySignature_descriptor;
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature getDefaultInstanceForType() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature.getDefaultInstance();
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature build() {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature buildPartial() {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature result = new org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (fieldBuilder_ == null) {
          result.field_ = field_;
        } else {
          result.field_ = fieldBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (syntheticMethodBuilder_ == null) {
          result.syntheticMethod_ = syntheticMethod_;
        } else {
          result.syntheticMethod_ = syntheticMethodBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (getterBuilder_ == null) {
          result.getter_ = getter_;
        } else {
          result.getter_ = getterBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (setterBuilder_ == null) {
          result.setter_ = setter_;
        } else {
          result.setter_ = setterBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature) {
          return mergeFrom((org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature other) {
        if (other == org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature.getDefaultInstance()) return this;
        if (other.hasField()) {
          mergeField(other.getField());
        }
        if (other.hasSyntheticMethod()) {
          mergeSyntheticMethod(other.getSyntheticMethod());
        }
        if (other.hasGetter()) {
          mergeGetter(other.getGetter());
        }
        if (other.hasSetter()) {
          mergeSetter(other.getSetter());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;
      private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature field_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignatureOrBuilder> fieldBuilder_;
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
       */
      public boolean hasField() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature getField() {
        if (fieldBuilder_ == null) {
          return field_;
        } else {
          return fieldBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
       */
      public Builder setField(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature value) {
        if (fieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          field_ = value;
          onChanged();
        } else {
          fieldBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
       */
      public Builder setField(
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.Builder builderForValue) {
        if (fieldBuilder_ == null) {
          field_ = builderForValue.build();
          onChanged();
        } else {
          fieldBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
       */
      public Builder mergeField(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature value) {
        if (fieldBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              field_ != org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.getDefaultInstance()) {
            field_ =
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.newBuilder(field_).mergeFrom(value).buildPartial();
          } else {
            field_ = value;
          }
          onChanged();
        } else {
          fieldBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
       */
      public Builder clearField() {
        if (fieldBuilder_ == null) {
          field_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.getDefaultInstance();
          onChanged();
        } else {
          fieldBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.Builder getFieldBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getFieldFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignatureOrBuilder getFieldOrBuilder() {
        if (fieldBuilder_ != null) {
          return fieldBuilder_.getMessageOrBuilder();
        } else {
          return field_;
        }
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignatureOrBuilder> 
          getFieldFieldBuilder() {
        if (fieldBuilder_ == null) {
          fieldBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignatureOrBuilder>(
                  field_,
                  getParentForChildren(),
                  isClean());
          field_ = null;
        }
        return fieldBuilder_;
      }

      // optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;
      private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature syntheticMethod_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder> syntheticMethodBuilder_;
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
       *
       * <pre>
       * Annotations on properties are written on a synthetic method with this signature
       * </pre>
       */
      public boolean hasSyntheticMethod() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
       *
       * <pre>
       * Annotations on properties are written on a synthetic method with this signature
       * </pre>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getSyntheticMethod() {
        if (syntheticMethodBuilder_ == null) {
          return syntheticMethod_;
        } else {
          return syntheticMethodBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
       *
       * <pre>
       * Annotations on properties are written on a synthetic method with this signature
       * </pre>
       */
      public Builder setSyntheticMethod(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature value) {
        if (syntheticMethodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          syntheticMethod_ = value;
          onChanged();
        } else {
          syntheticMethodBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
       *
       * <pre>
       * Annotations on properties are written on a synthetic method with this signature
       * </pre>
       */
      public Builder setSyntheticMethod(
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder builderForValue) {
        if (syntheticMethodBuilder_ == null) {
          syntheticMethod_ = builderForValue.build();
          onChanged();
        } else {
          syntheticMethodBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
       *
       * <pre>
       * Annotations on properties are written on a synthetic method with this signature
       * </pre>
       */
      public Builder mergeSyntheticMethod(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature value) {
        if (syntheticMethodBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              syntheticMethod_ != org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance()) {
            syntheticMethod_ =
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.newBuilder(syntheticMethod_).mergeFrom(value).buildPartial();
          } else {
            syntheticMethod_ = value;
          }
          onChanged();
        } else {
          syntheticMethodBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
       *
       * <pre>
       * Annotations on properties are written on a synthetic method with this signature
       * </pre>
       */
      public Builder clearSyntheticMethod() {
        if (syntheticMethodBuilder_ == null) {
          syntheticMethod_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
          onChanged();
        } else {
          syntheticMethodBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
       *
       * <pre>
       * Annotations on properties are written on a synthetic method with this signature
       * </pre>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder getSyntheticMethodBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSyntheticMethodFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
       *
       * <pre>
       * Annotations on properties are written on a synthetic method with this signature
       * </pre>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder getSyntheticMethodOrBuilder() {
        if (syntheticMethodBuilder_ != null) {
          return syntheticMethodBuilder_.getMessageOrBuilder();
        } else {
          return syntheticMethod_;
        }
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
       *
       * <pre>
       * Annotations on properties are written on a synthetic method with this signature
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder> 
          getSyntheticMethodFieldBuilder() {
        if (syntheticMethodBuilder_ == null) {
          syntheticMethodBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder>(
                  syntheticMethod_,
                  getParentForChildren(),
                  isClean());
          syntheticMethod_ = null;
        }
        return syntheticMethodBuilder_;
      }

      // optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;
      private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getter_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder> getterBuilder_;
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
       */
      public boolean hasGetter() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getGetter() {
        if (getterBuilder_ == null) {
          return getter_;
        } else {
          return getterBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
       */
      public Builder setGetter(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature value) {
        if (getterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getter_ = value;
          onChanged();
        } else {
          getterBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
       */
      public Builder setGetter(
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder builderForValue) {
        if (getterBuilder_ == null) {
          getter_ = builderForValue.build();
          onChanged();
        } else {
          getterBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
       */
      public Builder mergeGetter(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature value) {
        if (getterBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              getter_ != org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance()) {
            getter_ =
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.newBuilder(getter_).mergeFrom(value).buildPartial();
          } else {
            getter_ = value;
          }
          onChanged();
        } else {
          getterBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
       */
      public Builder clearGetter() {
        if (getterBuilder_ == null) {
          getter_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
          onChanged();
        } else {
          getterBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder getGetterBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getGetterFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder getGetterOrBuilder() {
        if (getterBuilder_ != null) {
          return getterBuilder_.getMessageOrBuilder();
        } else {
          return getter_;
        }
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder> 
          getGetterFieldBuilder() {
        if (getterBuilder_ == null) {
          getterBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder>(
                  getter_,
                  getParentForChildren(),
                  isClean());
          getter_ = null;
        }
        return getterBuilder_;
      }

      // optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;
      private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature setter_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder> setterBuilder_;
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
       */
      public boolean hasSetter() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getSetter() {
        if (setterBuilder_ == null) {
          return setter_;
        } else {
          return setterBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
       */
      public Builder setSetter(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature value) {
        if (setterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          setter_ = value;
          onChanged();
        } else {
          setterBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
       */
      public Builder setSetter(
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder builderForValue) {
        if (setterBuilder_ == null) {
          setter_ = builderForValue.build();
          onChanged();
        } else {
          setterBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
       */
      public Builder mergeSetter(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature value) {
        if (setterBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              setter_ != org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance()) {
            setter_ =
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.newBuilder(setter_).mergeFrom(value).buildPartial();
          } else {
            setter_ = value;
          }
          onChanged();
        } else {
          setterBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
       */
      public Builder clearSetter() {
        if (setterBuilder_ == null) {
          setter_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
          onChanged();
        } else {
          setterBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder getSetterBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getSetterFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder getSetterOrBuilder() {
        if (setterBuilder_ != null) {
          return setterBuilder_.getMessageOrBuilder();
        } else {
          return setter_;
        }
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder> 
          getSetterFieldBuilder() {
        if (setterBuilder_ == null) {
          setterBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder>(
                  setter_,
                  getParentForChildren(),
                  isClean());
          setter_ = null;
        }
        return setterBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.serialization.jvm.JvmPropertySignature)
    }

    static {
      defaultInstance = new JvmPropertySignature(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.serialization.jvm.JvmPropertySignature)
  }

  public static final int CONSTRUCTOR_SIGNATURE_FIELD_NUMBER = 100;
  /**
   * <code>extend .org.jetbrains.kotlin.serialization.Constructor { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      org.jetbrains.kotlin.serialization.DebugProtoBuf.Constructor,
      org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature> constructorSignature = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.class,
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance());
  public static final int METHOD_SIGNATURE_FIELD_NUMBER = 100;
  /**
   * <code>extend .org.jetbrains.kotlin.serialization.Function { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      org.jetbrains.kotlin.serialization.DebugProtoBuf.Function,
      org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature> methodSignature = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.class,
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance());
  public static final int PROPERTY_SIGNATURE_FIELD_NUMBER = 100;
  /**
   * <code>extend .org.jetbrains.kotlin.serialization.Property { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      org.jetbrains.kotlin.serialization.DebugProtoBuf.Property,
      org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature> propertySignature = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature.class,
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature.getDefaultInstance());
  public static final int TYPE_ANNOTATION_FIELD_NUMBER = 100;
  /**
   * <code>extend .org.jetbrains.kotlin.serialization.Type { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      org.jetbrains.kotlin.serialization.DebugProtoBuf.Type,
      java.util.List<org.jetbrains.kotlin.serialization.DebugProtoBuf.Annotation>> typeAnnotation = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        org.jetbrains.kotlin.serialization.DebugProtoBuf.Annotation.class,
        org.jetbrains.kotlin.serialization.DebugProtoBuf.Annotation.getDefaultInstance());
  public static final int IS_RAW_FIELD_NUMBER = 101;
  /**
   * <code>extend .org.jetbrains.kotlin.serialization.Type { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      org.jetbrains.kotlin.serialization.DebugProtoBuf.Type,
      java.lang.Boolean> isRaw = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        java.lang.Boolean.class,
        null);
  public static final int TYPE_PARAMETER_ANNOTATION_FIELD_NUMBER = 100;
  /**
   * <code>extend .org.jetbrains.kotlin.serialization.TypeParameter { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      org.jetbrains.kotlin.serialization.DebugProtoBuf.TypeParameter,
      java.util.List<org.jetbrains.kotlin.serialization.DebugProtoBuf.Annotation>> typeParameterAnnotation = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        org.jetbrains.kotlin.serialization.DebugProtoBuf.Annotation.class,
        org.jetbrains.kotlin.serialization.DebugProtoBuf.Annotation.getDefaultInstance());
  public static final int CLASS_MODULE_NAME_FIELD_NUMBER = 101;
  /**
   * <code>extend .org.jetbrains.kotlin.serialization.Class { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      org.jetbrains.kotlin.serialization.DebugProtoBuf.Class,
      java.lang.Integer> classModuleName = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        java.lang.Integer.class,
        null);
  public static final int PACKAGE_MODULE_NAME_FIELD_NUMBER = 101;
  /**
   * <code>extend .org.jetbrains.kotlin.serialization.Package { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      org.jetbrains.kotlin.serialization.DebugProtoBuf.Package,
      java.lang.Integer> packageModuleName = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        java.lang.Integer.class,
        null);
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_jetbrains_kotlin_serialization_jvm_StringTableTypes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_jetbrains_kotlin_serialization_jvm_StringTableTypes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_jetbrains_kotlin_serialization_jvm_StringTableTypes_Record_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_jetbrains_kotlin_serialization_jvm_StringTableTypes_Record_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_jetbrains_kotlin_serialization_jvm_JvmMethodSignature_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_jetbrains_kotlin_serialization_jvm_JvmMethodSignature_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_jetbrains_kotlin_serialization_jvm_JvmFieldSignature_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_jetbrains_kotlin_serialization_jvm_JvmFieldSignature_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_jetbrains_kotlin_serialization_jvm_JvmPropertySignature_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_jetbrains_kotlin_serialization_jvm_JvmPropertySignature_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;core/descriptor.loader.java/src/jvm_de" +
      "scriptors.debug.proto\022&org.jetbrains.kot" +
      "lin.serialization.jvm\0320core/deserializat" +
      "ion/src/ext_options.debug.proto\0320core/de" +
      "serialization/src/descriptors.debug.prot" +
      "o\"\244\003\n\020StringTableTypes\022O\n\006record\030\001 \003(\0132?" +
      ".org.jetbrains.kotlin.serialization.jvm." +
      "StringTableTypes.Record\022\026\n\nlocal_name\030\005 " +
      "\003(\005B\002\020\001\032\246\002\n\006Record\022\020\n\005range\030\001 \001(\005:\0011\022\030\n\020" +
      "predefined_index\030\002 \001(\005\022\016\n\006string\030\006 \001(\t\022b",
      "\n\toperation\030\003 \001(\0162I.org.jetbrains.kotlin" +
      ".serialization.jvm.StringTableTypes.Reco" +
      "rd.Operation:\004NONE\022\033\n\017substring_index\030\004 " +
      "\003(\005B\002\020\001\022\030\n\014replace_char\030\005 \003(\005B\002\020\001\"E\n\tOpe" +
      "ration\022\010\n\004NONE\020\000\022\030\n\024INTERNAL_TO_CLASS_ID" +
      "\020\001\022\024\n\020DESC_TO_CLASS_ID\020\002\"<\n\022JvmMethodSig" +
      "nature\022\022\n\004name\030\001 \001(\005B\004\230\265\030\001\022\022\n\004desc\030\002 \001(\005" +
      "B\004\230\265\030\001\";\n\021JvmFieldSignature\022\022\n\004name\030\001 \001(" +
      "\005B\004\230\265\030\001\022\022\n\004desc\030\002 \001(\005B\004\230\265\030\001\"\316\002\n\024JvmPrope" +
      "rtySignature\022H\n\005field\030\001 \001(\01329.org.jetbra",
      "ins.kotlin.serialization.jvm.JvmFieldSig" +
      "nature\022T\n\020synthetic_method\030\002 \001(\0132:.org.j" +
      "etbrains.kotlin.serialization.jvm.JvmMet" +
      "hodSignature\022J\n\006getter\030\003 \001(\0132:.org.jetbr" +
      "ains.kotlin.serialization.jvm.JvmMethodS" +
      "ignature\022J\n\006setter\030\004 \001(\0132:.org.jetbrains" +
      ".kotlin.serialization.jvm.JvmMethodSigna" +
      "ture:\212\001\n\025constructor_signature\022/.org.jet" +
      "brains.kotlin.serialization.Constructor\030" +
      "d \001(\0132:.org.jetbrains.kotlin.serializati",
      "on.jvm.JvmMethodSignature:\202\001\n\020method_sig" +
      "nature\022,.org.jetbrains.kotlin.serializat" +
      "ion.Function\030d \001(\0132:.org.jetbrains.kotli" +
      "n.serialization.jvm.JvmMethodSignature:\206" +
      "\001\n\022property_signature\022,.org.jetbrains.ko" +
      "tlin.serialization.Property\030d \001(\0132<.org." +
      "jetbrains.kotlin.serialization.jvm.JvmPr" +
      "opertySignature:q\n\017type_annotation\022(.org" +
      ".jetbrains.kotlin.serialization.Type\030d \003" +
      "(\0132..org.jetbrains.kotlin.serialization.",
      "Annotation:8\n\006is_raw\022(.org.jetbrains.kot" +
      "lin.serialization.Type\030e \001(\010:\204\001\n\031type_pa" +
      "rameter_annotation\0221.org.jetbrains.kotli" +
      "n.serialization.TypeParameter\030d \003(\0132..or" +
      "g.jetbrains.kotlin.serialization.Annotat" +
      "ion:J\n\021class_module_name\022).org.jetbrains" +
      ".kotlin.serialization.Class\030e \001(\005B\004\230\265\030\001:" +
      "N\n\023package_module_name\022+.org.jetbrains.k" +
      "otlin.serialization.Package\030e \001(\005B\004\230\265\030\001B" +
      "\022B\020DebugJvmProtoBuf"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_org_jetbrains_kotlin_serialization_jvm_StringTableTypes_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_org_jetbrains_kotlin_serialization_jvm_StringTableTypes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_jetbrains_kotlin_serialization_jvm_StringTableTypes_descriptor,
              new java.lang.String[] { "Record", "LocalName", });
          internal_static_org_jetbrains_kotlin_serialization_jvm_StringTableTypes_Record_descriptor =
            internal_static_org_jetbrains_kotlin_serialization_jvm_StringTableTypes_descriptor.getNestedTypes().get(0);
          internal_static_org_jetbrains_kotlin_serialization_jvm_StringTableTypes_Record_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_jetbrains_kotlin_serialization_jvm_StringTableTypes_Record_descriptor,
              new java.lang.String[] { "Range", "PredefinedIndex", "String", "Operation", "SubstringIndex", "ReplaceChar", });
          internal_static_org_jetbrains_kotlin_serialization_jvm_JvmMethodSignature_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_org_jetbrains_kotlin_serialization_jvm_JvmMethodSignature_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_jetbrains_kotlin_serialization_jvm_JvmMethodSignature_descriptor,
              new java.lang.String[] { "Name", "Desc", });
          internal_static_org_jetbrains_kotlin_serialization_jvm_JvmFieldSignature_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_org_jetbrains_kotlin_serialization_jvm_JvmFieldSignature_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_jetbrains_kotlin_serialization_jvm_JvmFieldSignature_descriptor,
              new java.lang.String[] { "Name", "Desc", });
          internal_static_org_jetbrains_kotlin_serialization_jvm_JvmPropertySignature_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_org_jetbrains_kotlin_serialization_jvm_JvmPropertySignature_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_jetbrains_kotlin_serialization_jvm_JvmPropertySignature_descriptor,
              new java.lang.String[] { "Field", "SyntheticMethod", "Getter", "Setter", });
          constructorSignature.internalInit(descriptor.getExtensions().get(0));
          methodSignature.internalInit(descriptor.getExtensions().get(1));
          propertySignature.internalInit(descriptor.getExtensions().get(2));
          typeAnnotation.internalInit(descriptor.getExtensions().get(3));
          isRaw.internalInit(descriptor.getExtensions().get(4));
          typeParameterAnnotation.internalInit(descriptor.getExtensions().get(5));
          classModuleName.internalInit(descriptor.getExtensions().get(6));
          packageModuleName.internalInit(descriptor.getExtensions().get(7));
          com.google.protobuf.ExtensionRegistry registry =
            com.google.protobuf.ExtensionRegistry.newInstance();
          registry.add(org.jetbrains.kotlin.serialization.DebugExtOptionsProtoBuf.stringIdInTable);
          registry.add(org.jetbrains.kotlin.serialization.DebugExtOptionsProtoBuf.stringIdInTable);
          registry.add(org.jetbrains.kotlin.serialization.DebugExtOptionsProtoBuf.stringIdInTable);
          registry.add(org.jetbrains.kotlin.serialization.DebugExtOptionsProtoBuf.stringIdInTable);
          registry.add(org.jetbrains.kotlin.serialization.DebugExtOptionsProtoBuf.stringIdInTable);
          registry.add(org.jetbrains.kotlin.serialization.DebugExtOptionsProtoBuf.stringIdInTable);
          return registry;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.jetbrains.kotlin.serialization.DebugExtOptionsProtoBuf.getDescriptor(),
          org.jetbrains.kotlin.serialization.DebugProtoBuf.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
