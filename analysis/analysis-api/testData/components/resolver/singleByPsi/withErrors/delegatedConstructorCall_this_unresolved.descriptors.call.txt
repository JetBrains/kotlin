KtConstructorDelegationCall(115,132): 'this(i, j, i * j)'
  KaErrorCallInfo:
    candidateCalls = [
      KaDelegatedConstructorCall:
        argumentMapping = {
          i -> (KaVariableSignature:
            name = i
            receiverType = null
            returnType = kotlin.Int
            symbol = i: kotlin.Int
            callableId = null),
          j -> (KaVariableSignature:
            name = j
            receiverType = null
            returnType = kotlin.Int
            symbol = j: kotlin.Int
            callableId = null)
        }
        kind = THIS_CALL
        partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
          dispatchReceiver = null
          extensionReceiver = null
          signature = KaFunctionSignature:
            receiverType = null
            returnType = Sub
            symbol = <constructor>(i: kotlin.Int, j: kotlin.Int): Sub
            valueParameters = [
              KaVariableSignature:
                name = i
                receiverType = null
                returnType = kotlin.Int
                symbol = i: kotlin.Int
                callableId = null,
              KaVariableSignature:
                name = j
                receiverType = null
                returnType = kotlin.Int
                symbol = j: kotlin.Int
                callableId = null
            ]
            callableId = null
        typeArgumentsMapping = {},
      KaDelegatedConstructorCall:
        argumentMapping = {
          i -> (KaVariableSignature:
            name = p
            receiverType = null
            returnType = kotlin.Int
            symbol = p: kotlin.Int
            callableId = null)
        }
        kind = THIS_CALL
        partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
          dispatchReceiver = null
          extensionReceiver = null
          signature = KaFunctionSignature:
            receiverType = null
            returnType = Sub
            symbol = <constructor>(p: kotlin.Int): Sub
            valueParameters = [
              KaVariableSignature:
                name = p
                receiverType = null
                returnType = kotlin.Int
                symbol = p: kotlin.Int
                callableId = null
            ]
            callableId = null
        typeArgumentsMapping = {}
    ]
    diagnostic = ERROR<NONE_APPLICABLE: None of the following functions can be called with the arguments supplied: 
    public constructor Sub(p: Int) defined in Sub
    public constructor Sub(i: Int, j: Int) defined in Sub>