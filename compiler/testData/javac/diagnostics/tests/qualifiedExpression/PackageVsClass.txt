package

public fun t(): a.b!
public fun t2(): a.b.c!
public fun test(/*0*/ a_b: a.b): kotlin.Unit
public fun test2(): kotlin.Unit

package a {

    public open class b {
        public constructor b()
        public open fun a_b(): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

        public open class c {
            public constructor c()
            public open fun a_bc(): kotlin.Unit
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }
    }

    package a.b {

        public open class c {
            public constructor c()
            public open fun ab_c(): kotlin.Unit
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }
    }
}

package d {

    public open class d {
        public constructor d()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open fun test(): a.b!
        public open fun test2(): a.b.c!
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}
