package

public final class A : KTrait {
    public constructor A()
    public final fun a(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun ktest(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun test(): kotlin.String!
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class A2 : KTrait2 {
    public constructor A2()
    public final fun a(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun ktest(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun ktest2(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun test(): kotlin.String!
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public interface KTrait : Test {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open fun ktest(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun test(): kotlin.String!
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public interface KTrait2 : KTrait {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun ktest(): kotlin.Unit
    public open fun ktest2(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun test(): kotlin.String!
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public interface Test {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open fun test(): kotlin.String!
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
