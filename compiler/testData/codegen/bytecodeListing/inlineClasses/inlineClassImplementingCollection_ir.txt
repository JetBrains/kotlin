@kotlin.Metadata
public final class InlineCollection {
    // source: 'inlineClassImplementingCollection.kt'
    private final @org.jetbrains.annotations.NotNull field c: java.util.Collection
    private synthetic method <init>(p0: java.util.Collection): void
    public method add(p0: java.lang.Object): boolean
    public method addAll(p0: java.util.Collection): boolean
    public synthetic final static method box-impl(p0: java.util.Collection): InlineCollection
    public method clear(): void
    public static @org.jetbrains.annotations.NotNull method constructor-impl(@org.jetbrains.annotations.NotNull p0: java.util.Collection): java.util.Collection
    public method contains(p0: java.lang.Object): boolean
    public static method contains-impl(@org.jetbrains.annotations.NotNull p0: java.util.Collection, p1: java.lang.Object): boolean
    public method containsAll(@org.jetbrains.annotations.NotNull p0: java.util.Collection): boolean
    public static method containsAll-impl(@org.jetbrains.annotations.NotNull p0: java.util.Collection, @org.jetbrains.annotations.NotNull p1: java.util.Collection): boolean
    public method equals(p0: java.lang.Object): boolean
    public static method equals-impl(p0: java.util.Collection, p1: java.lang.Object): boolean
    public final static method equals-impl0(p0: java.util.Collection, p1: java.util.Collection): boolean
    public method getSize(): int
    public static method getSize-impl(@org.jetbrains.annotations.NotNull p0: java.util.Collection): int
    public method hashCode(): int
    public static method hashCode-impl(p0: java.util.Collection): int
    public method isEmpty(): boolean
    public static method isEmpty-impl(@org.jetbrains.annotations.NotNull p0: java.util.Collection): boolean
    public @org.jetbrains.annotations.NotNull method iterator(): java.util.Iterator
    public static @org.jetbrains.annotations.NotNull method iterator-impl(@org.jetbrains.annotations.NotNull p0: java.util.Collection): java.util.Iterator
    public method remove(p0: java.lang.Object): boolean
    public method removeAll(p0: java.util.Collection): boolean
    public method retainAll(p0: java.util.Collection): boolean
    public synthetic bridge method size(): int
    public method toArray(): java.lang.Object[]
    public method toArray(p0: java.lang.Object[]): java.lang.Object[]
    public method toString(): java.lang.String
    public static method toString-impl(p0: java.util.Collection): java.lang.String
    public synthetic final method unbox-impl(): java.util.Collection
}

@kotlin.Metadata
public final class InlineIterable {
    // source: 'inlineClassImplementingCollection.kt'
    private final @org.jetbrains.annotations.NotNull field it: java.lang.Iterable
    private synthetic method <init>(p0: java.lang.Iterable): void
    public synthetic final static method box-impl(p0: java.lang.Iterable): InlineIterable
    public static @org.jetbrains.annotations.NotNull method constructor-impl(@org.jetbrains.annotations.NotNull p0: java.lang.Iterable): java.lang.Iterable
    public method equals(p0: java.lang.Object): boolean
    public static method equals-impl(p0: java.lang.Iterable, p1: java.lang.Object): boolean
    public final static method equals-impl0(p0: java.lang.Iterable, p1: java.lang.Iterable): boolean
    public method hashCode(): int
    public static method hashCode-impl(p0: java.lang.Iterable): int
    public @org.jetbrains.annotations.NotNull method iterator(): java.util.Iterator
    public static @org.jetbrains.annotations.NotNull method iterator-impl(@org.jetbrains.annotations.NotNull p0: java.lang.Iterable): java.util.Iterator
    public method toString(): java.lang.String
    public static method toString-impl(p0: java.lang.Iterable): java.lang.String
    public synthetic final method unbox-impl(): java.lang.Iterable
}

@kotlin.Metadata
public final class InlineIterator {
    // source: 'inlineClassImplementingCollection.kt'
    private final @org.jetbrains.annotations.NotNull field it: java.util.Iterator
    private synthetic method <init>(p0: java.util.Iterator): void
    public synthetic final static method box-impl(p0: java.util.Iterator): InlineIterator
    public static @org.jetbrains.annotations.NotNull method constructor-impl(@org.jetbrains.annotations.NotNull p0: java.util.Iterator): java.util.Iterator
    public method equals(p0: java.lang.Object): boolean
    public static method equals-impl(p0: java.util.Iterator, p1: java.lang.Object): boolean
    public final static method equals-impl0(p0: java.util.Iterator, p1: java.util.Iterator): boolean
    public method hasNext(): boolean
    public static method hasNext-impl(@org.jetbrains.annotations.NotNull p0: java.util.Iterator): boolean
    public method hashCode(): int
    public static method hashCode-impl(p0: java.util.Iterator): int
    public method next(): java.lang.Object
    public static method next-impl(@org.jetbrains.annotations.NotNull p0: java.util.Iterator): java.lang.Object
    public method remove(): void
    public method toString(): java.lang.String
    public static method toString-impl(p0: java.util.Iterator): java.lang.String
    public synthetic final method unbox-impl(): java.util.Iterator
}

@kotlin.Metadata
public final class InlineList {
    // source: 'inlineClassImplementingCollection.kt'
    private final @org.jetbrains.annotations.NotNull field list: java.util.List
    private synthetic method <init>(p0: java.util.List): void
    public method add(p0: int, p1: java.lang.Object): void
    public method add(p0: java.lang.Object): boolean
    public method addAll(p0: int, p1: java.util.Collection): boolean
    public method addAll(p0: java.util.Collection): boolean
    public synthetic final static method box-impl(p0: java.util.List): InlineList
    public method clear(): void
    public static @org.jetbrains.annotations.NotNull method constructor-impl(@org.jetbrains.annotations.NotNull p0: java.util.List): java.util.List
    public method contains(p0: java.lang.Object): boolean
    public static method contains-impl(@org.jetbrains.annotations.NotNull p0: java.util.List, p1: java.lang.Object): boolean
    public method containsAll(@org.jetbrains.annotations.NotNull p0: java.util.Collection): boolean
    public static method containsAll-impl(@org.jetbrains.annotations.NotNull p0: java.util.List, @org.jetbrains.annotations.NotNull p1: java.util.Collection): boolean
    public method equals(p0: java.lang.Object): boolean
    public static method equals-impl(p0: java.util.List, p1: java.lang.Object): boolean
    public final static method equals-impl0(p0: java.util.List, p1: java.util.List): boolean
    public method get(p0: int): java.lang.Object
    public static method get-impl(@org.jetbrains.annotations.NotNull p0: java.util.List, p1: int): java.lang.Object
    public method getSize(): int
    public static method getSize-impl(@org.jetbrains.annotations.NotNull p0: java.util.List): int
    public method hashCode(): int
    public static method hashCode-impl(p0: java.util.List): int
    public method indexOf(p0: java.lang.Object): int
    public static method indexOf-impl(@org.jetbrains.annotations.NotNull p0: java.util.List, p1: java.lang.Object): int
    public method isEmpty(): boolean
    public static method isEmpty-impl(@org.jetbrains.annotations.NotNull p0: java.util.List): boolean
    public @org.jetbrains.annotations.NotNull method iterator(): java.util.Iterator
    public static @org.jetbrains.annotations.NotNull method iterator-impl(@org.jetbrains.annotations.NotNull p0: java.util.List): java.util.Iterator
    public method lastIndexOf(p0: java.lang.Object): int
    public static method lastIndexOf-impl(@org.jetbrains.annotations.NotNull p0: java.util.List, p1: java.lang.Object): int
    public @org.jetbrains.annotations.NotNull method listIterator(): java.util.ListIterator
    public @org.jetbrains.annotations.NotNull method listIterator(p0: int): java.util.ListIterator
    public static @org.jetbrains.annotations.NotNull method listIterator-impl(@org.jetbrains.annotations.NotNull p0: java.util.List): java.util.ListIterator
    public static @org.jetbrains.annotations.NotNull method listIterator-impl(@org.jetbrains.annotations.NotNull p0: java.util.List, p1: int): java.util.ListIterator
    public method remove(p0: int): java.lang.Object
    public method remove(p0: java.lang.Object): boolean
    public method removeAll(p0: java.util.Collection): boolean
    public method retainAll(p0: java.util.Collection): boolean
    public method set(p0: int, p1: java.lang.Object): java.lang.Object
    public synthetic bridge method size(): int
    public @org.jetbrains.annotations.NotNull method subList(p0: int, p1: int): java.util.List
    public static @org.jetbrains.annotations.NotNull method subList-impl(@org.jetbrains.annotations.NotNull p0: java.util.List, p1: int, p2: int): java.util.List
    public method toArray(): java.lang.Object[]
    public method toArray(p0: java.lang.Object[]): java.lang.Object[]
    public method toString(): java.lang.String
    public static method toString-impl(p0: java.util.List): java.lang.String
    public synthetic final method unbox-impl(): java.util.List
}

@kotlin.Metadata
public final class InlineMap {
    // source: 'inlineClassImplementingCollection.kt'
    private final @org.jetbrains.annotations.NotNull field map: java.util.Map
    private synthetic method <init>(p0: java.util.Map): void
    public synthetic final static method box-impl(p0: java.util.Map): InlineMap
    public method clear(): void
    public static @org.jetbrains.annotations.NotNull method constructor-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map): java.util.Map
    public method containsKey(p0: java.lang.Object): boolean
    public static method containsKey-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map, p1: java.lang.Object): boolean
    public method containsValue(p0: java.lang.Object): boolean
    public static method containsValue-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map, p1: java.lang.Object): boolean
    public synthetic bridge method entrySet(): java.util.Set
    public method equals(p0: java.lang.Object): boolean
    public static method equals-impl(p0: java.util.Map, p1: java.lang.Object): boolean
    public final static method equals-impl0(p0: java.util.Map, p1: java.util.Map): boolean
    public @org.jetbrains.annotations.Nullable method get(p0: java.lang.Object): java.lang.Object
    public static @org.jetbrains.annotations.Nullable method get-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map, p1: java.lang.Object): java.lang.Object
    public @org.jetbrains.annotations.NotNull method getEntries(): java.util.Set
    public static @org.jetbrains.annotations.NotNull method getEntries-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map): java.util.Set
    public @org.jetbrains.annotations.NotNull method getKeys(): java.util.Set
    public static @org.jetbrains.annotations.NotNull method getKeys-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map): java.util.Set
    public method getSize(): int
    public static method getSize-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map): int
    public @org.jetbrains.annotations.NotNull method getValues(): java.util.Collection
    public static @org.jetbrains.annotations.NotNull method getValues-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map): java.util.Collection
    public method hashCode(): int
    public static method hashCode-impl(p0: java.util.Map): int
    public method isEmpty(): boolean
    public static method isEmpty-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map): boolean
    public synthetic bridge method keySet(): java.util.Set
    public method put(p0: java.lang.Object, p1: java.lang.Object): java.lang.Object
    public method putAll(p0: java.util.Map): void
    public method remove(p0: java.lang.Object): java.lang.Object
    public synthetic bridge method size(): int
    public method toString(): java.lang.String
    public static method toString-impl(p0: java.util.Map): java.lang.String
    public synthetic final method unbox-impl(): java.util.Map
    public synthetic bridge method values(): java.util.Collection
}

@kotlin.Metadata
public final class InlineMapEntry {
    // source: 'inlineClassImplementingCollection.kt'
    private final @org.jetbrains.annotations.NotNull field e: java.util.Map$Entry
    private synthetic method <init>(p0: java.util.Map$Entry): void
    public synthetic final static method box-impl(p0: java.util.Map$Entry): InlineMapEntry
    public static @org.jetbrains.annotations.NotNull method constructor-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map$Entry): java.util.Map$Entry
    public method equals(p0: java.lang.Object): boolean
    public static method equals-impl(p0: java.util.Map$Entry, p1: java.lang.Object): boolean
    public final static method equals-impl0(p0: java.util.Map$Entry, p1: java.util.Map$Entry): boolean
    public method getKey(): java.lang.Object
    public static method getKey-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map$Entry): java.lang.Object
    public method getValue(): java.lang.Object
    public static method getValue-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map$Entry): java.lang.Object
    public method hashCode(): int
    public static method hashCode-impl(p0: java.util.Map$Entry): int
    public method setValue(p0: java.lang.Object): java.lang.Object
    public method toString(): java.lang.String
    public static method toString-impl(p0: java.util.Map$Entry): java.lang.String
    public synthetic final method unbox-impl(): java.util.Map$Entry
}

@kotlin.Metadata
public final class InlineMutableCollection {
    // source: 'inlineClassImplementingCollection.kt'
    private final @org.jetbrains.annotations.NotNull field mc: java.util.Collection
    private synthetic method <init>(p0: java.util.Collection): void
    public method add(p0: java.lang.Object): boolean
    public static method add-impl(@org.jetbrains.annotations.NotNull p0: java.util.Collection, p1: java.lang.Object): boolean
    public method addAll(@org.jetbrains.annotations.NotNull p0: java.util.Collection): boolean
    public static method addAll-impl(@org.jetbrains.annotations.NotNull p0: InlineMutableCollection, @org.jetbrains.annotations.NotNull p1: java.util.Collection): boolean
    public synthetic final static method box-impl(p0: java.util.Collection): InlineMutableCollection
    public method clear(): void
    public static method clear-impl(@org.jetbrains.annotations.NotNull p0: java.util.Collection): void
    public static @org.jetbrains.annotations.NotNull method constructor-impl(@org.jetbrains.annotations.NotNull p0: java.util.Collection): java.util.Collection
    public method contains(p0: java.lang.Object): boolean
    public static method contains-impl(@org.jetbrains.annotations.NotNull p0: java.util.Collection, p1: java.lang.Object): boolean
    public method containsAll(@org.jetbrains.annotations.NotNull p0: java.util.Collection): boolean
    public static method containsAll-impl(@org.jetbrains.annotations.NotNull p0: java.util.Collection, @org.jetbrains.annotations.NotNull p1: java.util.Collection): boolean
    public method equals(p0: java.lang.Object): boolean
    public static method equals-impl(p0: java.util.Collection, p1: java.lang.Object): boolean
    public final static method equals-impl0(p0: java.util.Collection, p1: java.util.Collection): boolean
    public method getSize(): int
    public static method getSize-impl(@org.jetbrains.annotations.NotNull p0: java.util.Collection): int
    public method hashCode(): int
    public static method hashCode-impl(p0: java.util.Collection): int
    public method isEmpty(): boolean
    public static method isEmpty-impl(@org.jetbrains.annotations.NotNull p0: java.util.Collection): boolean
    public @org.jetbrains.annotations.NotNull method iterator(): java.util.Iterator
    public static @org.jetbrains.annotations.NotNull method iterator-impl(@org.jetbrains.annotations.NotNull p0: java.util.Collection): java.util.Iterator
    public method remove(p0: java.lang.Object): boolean
    public static method remove-impl(@org.jetbrains.annotations.NotNull p0: java.util.Collection, p1: java.lang.Object): boolean
    public method removeAll(@org.jetbrains.annotations.NotNull p0: java.util.Collection): boolean
    public static method removeAll-impl(@org.jetbrains.annotations.NotNull p0: java.util.Collection, @org.jetbrains.annotations.NotNull p1: java.util.Collection): boolean
    public method retainAll(@org.jetbrains.annotations.NotNull p0: java.util.Collection): boolean
    public static method retainAll-impl(@org.jetbrains.annotations.NotNull p0: java.util.Collection, @org.jetbrains.annotations.NotNull p1: java.util.Collection): boolean
    public synthetic bridge method size(): int
    public method toArray(): java.lang.Object[]
    public method toArray(p0: java.lang.Object[]): java.lang.Object[]
    public method toString(): java.lang.String
    public static method toString-impl(p0: java.util.Collection): java.lang.String
    public synthetic final method unbox-impl(): java.util.Collection
}

@kotlin.Metadata
public final class InlineMutableIterable {
    // source: 'inlineClassImplementingCollection.kt'
    private final @org.jetbrains.annotations.NotNull field it: java.lang.Iterable
    private synthetic method <init>(p0: java.lang.Iterable): void
    public synthetic final static method box-impl(p0: java.lang.Iterable): InlineMutableIterable
    public static @org.jetbrains.annotations.NotNull method constructor-impl(@org.jetbrains.annotations.NotNull p0: java.lang.Iterable): java.lang.Iterable
    public method equals(p0: java.lang.Object): boolean
    public static method equals-impl(p0: java.lang.Iterable, p1: java.lang.Object): boolean
    public final static method equals-impl0(p0: java.lang.Iterable, p1: java.lang.Iterable): boolean
    public method hashCode(): int
    public static method hashCode-impl(p0: java.lang.Iterable): int
    public @org.jetbrains.annotations.NotNull method iterator(): java.util.Iterator
    public static @org.jetbrains.annotations.NotNull method iterator-impl(@org.jetbrains.annotations.NotNull p0: java.lang.Iterable): java.util.Iterator
    public method toString(): java.lang.String
    public static method toString-impl(p0: java.lang.Iterable): java.lang.String
    public synthetic final method unbox-impl(): java.lang.Iterable
}

@kotlin.Metadata
public final class InlineMutableIterator {
    // source: 'inlineClassImplementingCollection.kt'
    private final @org.jetbrains.annotations.NotNull field it: java.util.Iterator
    private synthetic method <init>(p0: java.util.Iterator): void
    public synthetic final static method box-impl(p0: java.util.Iterator): InlineMutableIterator
    public static @org.jetbrains.annotations.NotNull method constructor-impl(@org.jetbrains.annotations.NotNull p0: java.util.Iterator): java.util.Iterator
    public method equals(p0: java.lang.Object): boolean
    public static method equals-impl(p0: java.util.Iterator, p1: java.lang.Object): boolean
    public final static method equals-impl0(p0: java.util.Iterator, p1: java.util.Iterator): boolean
    public method hasNext(): boolean
    public static method hasNext-impl(@org.jetbrains.annotations.NotNull p0: java.util.Iterator): boolean
    public method hashCode(): int
    public static method hashCode-impl(p0: java.util.Iterator): int
    public method next(): java.lang.Object
    public static method next-impl(@org.jetbrains.annotations.NotNull p0: java.util.Iterator): java.lang.Object
    public method remove(): void
    public static method remove-impl(@org.jetbrains.annotations.NotNull p0: java.util.Iterator): void
    public method toString(): java.lang.String
    public static method toString-impl(p0: java.util.Iterator): java.lang.String
    public synthetic final method unbox-impl(): java.util.Iterator
}

@kotlin.Metadata
public final class InlineMutableList {
    // source: 'inlineClassImplementingCollection.kt'
    private final @org.jetbrains.annotations.NotNull field mlist: java.util.List
    private synthetic method <init>(p0: java.util.List): void
    public method add(p0: int, p1: java.lang.Object): void
    public method add(p0: java.lang.Object): boolean
    public static method add-impl(@org.jetbrains.annotations.NotNull p0: java.util.List, p1: int, p2: java.lang.Object): void
    public static method add-impl(@org.jetbrains.annotations.NotNull p0: java.util.List, p1: java.lang.Object): boolean
    public method addAll(@org.jetbrains.annotations.NotNull p0: java.util.Collection): boolean
    public method addAll(p0: int, @org.jetbrains.annotations.NotNull p1: java.util.Collection): boolean
    public static method addAll-impl(@org.jetbrains.annotations.NotNull p0: InlineMutableList, @org.jetbrains.annotations.NotNull p1: java.util.Collection): boolean
    public static method addAll-impl(@org.jetbrains.annotations.NotNull p0: InlineMutableList, p1: int, @org.jetbrains.annotations.NotNull p2: java.util.Collection): boolean
    public synthetic final static method box-impl(p0: java.util.List): InlineMutableList
    public method clear(): void
    public static method clear-impl(@org.jetbrains.annotations.NotNull p0: java.util.List): void
    public static @org.jetbrains.annotations.NotNull method constructor-impl(@org.jetbrains.annotations.NotNull p0: java.util.List): java.util.List
    public method contains(p0: java.lang.Object): boolean
    public static method contains-impl(@org.jetbrains.annotations.NotNull p0: java.util.List, p1: java.lang.Object): boolean
    public method containsAll(@org.jetbrains.annotations.NotNull p0: java.util.Collection): boolean
    public static method containsAll-impl(@org.jetbrains.annotations.NotNull p0: java.util.List, @org.jetbrains.annotations.NotNull p1: java.util.Collection): boolean
    public method equals(p0: java.lang.Object): boolean
    public static method equals-impl(p0: java.util.List, p1: java.lang.Object): boolean
    public final static method equals-impl0(p0: java.util.List, p1: java.util.List): boolean
    public method get(p0: int): java.lang.Object
    public static method get-impl(@org.jetbrains.annotations.NotNull p0: java.util.List, p1: int): java.lang.Object
    public method getSize(): int
    public static method getSize-impl(@org.jetbrains.annotations.NotNull p0: java.util.List): int
    public method hashCode(): int
    public static method hashCode-impl(p0: java.util.List): int
    public method indexOf(p0: java.lang.Object): int
    public static method indexOf-impl(@org.jetbrains.annotations.NotNull p0: java.util.List, p1: java.lang.Object): int
    public method isEmpty(): boolean
    public static method isEmpty-impl(@org.jetbrains.annotations.NotNull p0: java.util.List): boolean
    public @org.jetbrains.annotations.NotNull method iterator(): java.util.Iterator
    public static @org.jetbrains.annotations.NotNull method iterator-impl(@org.jetbrains.annotations.NotNull p0: java.util.List): java.util.Iterator
    public method lastIndexOf(p0: java.lang.Object): int
    public static method lastIndexOf-impl(@org.jetbrains.annotations.NotNull p0: java.util.List, p1: java.lang.Object): int
    public @org.jetbrains.annotations.NotNull method listIterator(): java.util.ListIterator
    public @org.jetbrains.annotations.NotNull method listIterator(p0: int): java.util.ListIterator
    public static @org.jetbrains.annotations.NotNull method listIterator-impl(@org.jetbrains.annotations.NotNull p0: java.util.List): java.util.ListIterator
    public static @org.jetbrains.annotations.NotNull method listIterator-impl(@org.jetbrains.annotations.NotNull p0: java.util.List, p1: int): java.util.ListIterator
    public bridge final method remove(p0: int): java.lang.Object
    public method remove(p0: java.lang.Object): boolean
    public static method remove-impl(@org.jetbrains.annotations.NotNull p0: java.util.List, p1: java.lang.Object): boolean
    public method removeAll(@org.jetbrains.annotations.NotNull p0: java.util.Collection): boolean
    public static method removeAll-impl(@org.jetbrains.annotations.NotNull p0: java.util.List, @org.jetbrains.annotations.NotNull p1: java.util.Collection): boolean
    public method removeAt(p0: int): java.lang.Object
    public static method removeAt-impl(@org.jetbrains.annotations.NotNull p0: java.util.List, p1: int): java.lang.Object
    public method retainAll(@org.jetbrains.annotations.NotNull p0: java.util.Collection): boolean
    public static method retainAll-impl(@org.jetbrains.annotations.NotNull p0: java.util.List, @org.jetbrains.annotations.NotNull p1: java.util.Collection): boolean
    public method set(p0: int, p1: java.lang.Object): java.lang.Object
    public static method set-impl(@org.jetbrains.annotations.NotNull p0: java.util.List, p1: int, p2: java.lang.Object): java.lang.Object
    public synthetic bridge method size(): int
    public @org.jetbrains.annotations.NotNull method subList(p0: int, p1: int): java.util.List
    public static @org.jetbrains.annotations.NotNull method subList-impl(@org.jetbrains.annotations.NotNull p0: java.util.List, p1: int, p2: int): java.util.List
    public method toArray(): java.lang.Object[]
    public method toArray(p0: java.lang.Object[]): java.lang.Object[]
    public method toString(): java.lang.String
    public static method toString-impl(p0: java.util.List): java.lang.String
    public synthetic final method unbox-impl(): java.util.List
}

@kotlin.Metadata
public final class InlineMutableMap {
    // source: 'inlineClassImplementingCollection.kt'
    private final @org.jetbrains.annotations.NotNull field mmap: java.util.Map
    private synthetic method <init>(p0: java.util.Map): void
    public synthetic final static method box-impl(p0: java.util.Map): InlineMutableMap
    public method clear(): void
    public static method clear-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map): void
    public static @org.jetbrains.annotations.NotNull method constructor-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map): java.util.Map
    public method containsKey(p0: java.lang.Object): boolean
    public static method containsKey-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map, p1: java.lang.Object): boolean
    public method containsValue(p0: java.lang.Object): boolean
    public static method containsValue-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map, p1: java.lang.Object): boolean
    public synthetic bridge method entrySet(): java.util.Set
    public method equals(p0: java.lang.Object): boolean
    public static method equals-impl(p0: java.util.Map, p1: java.lang.Object): boolean
    public final static method equals-impl0(p0: java.util.Map, p1: java.util.Map): boolean
    public @org.jetbrains.annotations.Nullable method get(p0: java.lang.Object): java.lang.Object
    public static @org.jetbrains.annotations.Nullable method get-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map, p1: java.lang.Object): java.lang.Object
    public @org.jetbrains.annotations.NotNull method getEntries(): java.util.Set
    public static @org.jetbrains.annotations.NotNull method getEntries-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map): java.util.Set
    public @org.jetbrains.annotations.NotNull method getKeys(): java.util.Set
    public static @org.jetbrains.annotations.NotNull method getKeys-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map): java.util.Set
    public method getSize(): int
    public static method getSize-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map): int
    public @org.jetbrains.annotations.NotNull method getValues(): java.util.Collection
    public static @org.jetbrains.annotations.NotNull method getValues-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map): java.util.Collection
    public method hashCode(): int
    public static method hashCode-impl(p0: java.util.Map): int
    public method isEmpty(): boolean
    public static method isEmpty-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map): boolean
    public synthetic bridge method keySet(): java.util.Set
    public @org.jetbrains.annotations.Nullable method put(p0: java.lang.Object, p1: java.lang.Object): java.lang.Object
    public static @org.jetbrains.annotations.Nullable method put-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map, p1: java.lang.Object, p2: java.lang.Object): java.lang.Object
    public method putAll(@org.jetbrains.annotations.NotNull p0: java.util.Map): void
    public static method putAll-impl(@org.jetbrains.annotations.NotNull p0: InlineMutableMap, @org.jetbrains.annotations.NotNull p1: java.util.Map): void
    public @org.jetbrains.annotations.Nullable method remove(p0: java.lang.Object): java.lang.Object
    public static @org.jetbrains.annotations.Nullable method remove-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map, p1: java.lang.Object): java.lang.Object
    public synthetic bridge method size(): int
    public method toString(): java.lang.String
    public static method toString-impl(p0: java.util.Map): java.lang.String
    public synthetic final method unbox-impl(): java.util.Map
    public synthetic bridge method values(): java.util.Collection
}

@kotlin.Metadata
public final class InlineMutableMapEntry {
    // source: 'inlineClassImplementingCollection.kt'
    private final @org.jetbrains.annotations.NotNull field e: java.util.Map$Entry
    private synthetic method <init>(p0: java.util.Map$Entry): void
    public synthetic final static method box-impl(p0: java.util.Map$Entry): InlineMutableMapEntry
    public static @org.jetbrains.annotations.NotNull method constructor-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map$Entry): java.util.Map$Entry
    public method equals(p0: java.lang.Object): boolean
    public static method equals-impl(p0: java.util.Map$Entry, p1: java.lang.Object): boolean
    public final static method equals-impl0(p0: java.util.Map$Entry, p1: java.util.Map$Entry): boolean
    public method getKey(): java.lang.Object
    public static method getKey-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map$Entry): java.lang.Object
    public method getValue(): java.lang.Object
    public static method getValue-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map$Entry): java.lang.Object
    public method hashCode(): int
    public static method hashCode-impl(p0: java.util.Map$Entry): int
    public method setValue(p0: java.lang.Object): java.lang.Object
    public static method setValue-impl(@org.jetbrains.annotations.NotNull p0: java.util.Map$Entry, p1: java.lang.Object): java.lang.Object
    public method toString(): java.lang.String
    public static method toString-impl(p0: java.util.Map$Entry): java.lang.String
    public synthetic final method unbox-impl(): java.util.Map$Entry
}

@kotlin.Metadata
public final class InlineMutableSet {
    // source: 'inlineClassImplementingCollection.kt'
    private final @org.jetbrains.annotations.NotNull field ms: java.util.Set
    private synthetic method <init>(p0: java.util.Set): void
    public method add(p0: java.lang.Object): boolean
    public static method add-impl(@org.jetbrains.annotations.NotNull p0: java.util.Set, p1: java.lang.Object): boolean
    public method addAll(@org.jetbrains.annotations.NotNull p0: java.util.Collection): boolean
    public static method addAll-impl(@org.jetbrains.annotations.NotNull p0: InlineMutableSet, @org.jetbrains.annotations.NotNull p1: java.util.Collection): boolean
    public synthetic final static method box-impl(p0: java.util.Set): InlineMutableSet
    public method clear(): void
    public static method clear-impl(@org.jetbrains.annotations.NotNull p0: java.util.Set): void
    public static @org.jetbrains.annotations.NotNull method constructor-impl(@org.jetbrains.annotations.NotNull p0: java.util.Set): java.util.Set
    public method contains(p0: java.lang.Object): boolean
    public static method contains-impl(@org.jetbrains.annotations.NotNull p0: java.util.Set, p1: java.lang.Object): boolean
    public method containsAll(@org.jetbrains.annotations.NotNull p0: java.util.Collection): boolean
    public static method containsAll-impl(@org.jetbrains.annotations.NotNull p0: java.util.Set, @org.jetbrains.annotations.NotNull p1: java.util.Collection): boolean
    public method equals(p0: java.lang.Object): boolean
    public static method equals-impl(p0: java.util.Set, p1: java.lang.Object): boolean
    public final static method equals-impl0(p0: java.util.Set, p1: java.util.Set): boolean
    public method getSize(): int
    public static method getSize-impl(@org.jetbrains.annotations.NotNull p0: java.util.Set): int
    public method hashCode(): int
    public static method hashCode-impl(p0: java.util.Set): int
    public method isEmpty(): boolean
    public static method isEmpty-impl(@org.jetbrains.annotations.NotNull p0: java.util.Set): boolean
    public @org.jetbrains.annotations.NotNull method iterator(): java.util.Iterator
    public static @org.jetbrains.annotations.NotNull method iterator-impl(@org.jetbrains.annotations.NotNull p0: java.util.Set): java.util.Iterator
    public method remove(p0: java.lang.Object): boolean
    public static method remove-impl(@org.jetbrains.annotations.NotNull p0: java.util.Set, p1: java.lang.Object): boolean
    public method removeAll(@org.jetbrains.annotations.NotNull p0: java.util.Collection): boolean
    public static method removeAll-impl(@org.jetbrains.annotations.NotNull p0: java.util.Set, @org.jetbrains.annotations.NotNull p1: java.util.Collection): boolean
    public method retainAll(@org.jetbrains.annotations.NotNull p0: java.util.Collection): boolean
    public static method retainAll-impl(@org.jetbrains.annotations.NotNull p0: java.util.Set, @org.jetbrains.annotations.NotNull p1: java.util.Collection): boolean
    public synthetic bridge method size(): int
    public method toArray(): java.lang.Object[]
    public method toArray(p0: java.lang.Object[]): java.lang.Object[]
    public method toString(): java.lang.String
    public static method toString-impl(p0: java.util.Set): java.lang.String
    public synthetic final method unbox-impl(): java.util.Set
}

@kotlin.Metadata
public final class InlineSet {
    // source: 'inlineClassImplementingCollection.kt'
    private final @org.jetbrains.annotations.NotNull field s: java.util.Set
    private synthetic method <init>(p0: java.util.Set): void
    public method add(p0: java.lang.Object): boolean
    public method addAll(p0: java.util.Collection): boolean
    public synthetic final static method box-impl(p0: java.util.Set): InlineSet
    public method clear(): void
    public static @org.jetbrains.annotations.NotNull method constructor-impl(@org.jetbrains.annotations.NotNull p0: java.util.Set): java.util.Set
    public method contains(p0: java.lang.Object): boolean
    public static method contains-impl(@org.jetbrains.annotations.NotNull p0: java.util.Set, p1: java.lang.Object): boolean
    public method containsAll(@org.jetbrains.annotations.NotNull p0: java.util.Collection): boolean
    public static method containsAll-impl(@org.jetbrains.annotations.NotNull p0: java.util.Set, @org.jetbrains.annotations.NotNull p1: java.util.Collection): boolean
    public method equals(p0: java.lang.Object): boolean
    public static method equals-impl(p0: java.util.Set, p1: java.lang.Object): boolean
    public final static method equals-impl0(p0: java.util.Set, p1: java.util.Set): boolean
    public method getSize(): int
    public static method getSize-impl(@org.jetbrains.annotations.NotNull p0: java.util.Set): int
    public method hashCode(): int
    public static method hashCode-impl(p0: java.util.Set): int
    public method isEmpty(): boolean
    public static method isEmpty-impl(@org.jetbrains.annotations.NotNull p0: java.util.Set): boolean
    public @org.jetbrains.annotations.NotNull method iterator(): java.util.Iterator
    public static @org.jetbrains.annotations.NotNull method iterator-impl(@org.jetbrains.annotations.NotNull p0: java.util.Set): java.util.Iterator
    public method remove(p0: java.lang.Object): boolean
    public method removeAll(p0: java.util.Collection): boolean
    public method retainAll(p0: java.util.Collection): boolean
    public synthetic bridge method size(): int
    public method toArray(): java.lang.Object[]
    public method toArray(p0: java.lang.Object[]): java.lang.Object[]
    public method toString(): java.lang.String
    public static method toString-impl(p0: java.util.Set): java.lang.String
    public synthetic final method unbox-impl(): java.util.Set
}
