namespace <root>

internal final class Foo : WithPC0 {
    public final /*constructor*/ fun <init>(): Foo
}
internal open class NoC : jet.Any {
    public final /*constructor*/ fun <init>(): NoC
}
internal final class NoC1 : NoC {
    public final /*constructor*/ fun <init>(): NoC1
}
internal final class NoC2 : WithC1 {
    public final /*constructor*/ fun <init>(): NoC2
}
internal final class NoC3 : WithC1 {
    public final /*constructor*/ fun <init>(): NoC3
}
internal final class NoCPI : jet.Any {
    public final /*constructor*/ fun <init>(): NoCPI
    internal final val a: jet.Int
    internal final var ab: jet.Int
}
internal final class WithC0 : NoC {
    public final /*constructor*/ fun <init>(): WithC0
}
internal open class WithC1 : NoC {
    public final /*constructor*/ fun <init>(): WithC1
}
internal final class WithC2 : WithC1 {
    public final /*constructor*/ fun <init>(): WithC2
}
internal final class WithCPI : jet.Any {
    public final /*constructor*/ fun <init>(/*0*/ x: jet.Int): WithCPI
    internal final val a: jet.Int
    internal final val b: jet.Int
    internal final val xy: jet.Int
}
internal final class WithCPI_Dup : jet.Any {
    public final /*constructor*/ fun <init>(/*0*/ x: jet.Int): WithCPI_Dup
    internal final var x: jet.Int
}
internal final class WithPC0 : jet.Any {
    public final /*constructor*/ fun <init>(): WithPC0
}
internal final class WithPC1 : jet.Any {
    public final /*constructor*/ fun <init>(/*0*/ a: jet.Int): WithPC1
}
