FILE fqName:<root> fileName:/LockFreeStackTest.kt
  CLASS CLASS name:LockFreeStack modality:FINAL visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.LockFreeStack<T of <root>.LockFreeStack>
    TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
    PROPERTY ATOMICFU_GENERATED_PROPERTY name:top$volatile visibility:private modality:FINAL [var]
      FIELD ATOMICFU_GENERATED_FIELD name:top$volatile type:kotlin.Any? visibility:private
        annotations:
          Volatile
        EXPRESSION_BODY
          CONST Null type=kotlin.Nothing? value=null
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-top$volatile> visibility:private modality:FINAL returnType:kotlin.Any?
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeStack<T of <root>.LockFreeStack>
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:top$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-top$volatile> (): kotlin.Any? declared in <root>.LockFreeStack'
            GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:top$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeStack' type=kotlin.Any? origin=null
              receiver: GET_VAR '<this>: <root>.LockFreeStack<T of <root>.LockFreeStack> declared in <root>.LockFreeStack.<get-top$volatile>' type=<root>.LockFreeStack<T of <root>.LockFreeStack> origin=null
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<set-top$volatile> visibility:private modality:FINAL returnType:kotlin.Unit
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeStack<T of <root>.LockFreeStack>
        VALUE_PARAMETER kind:Regular name:value index:1 type:kotlin.Any?
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:top$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Unit from='private final fun <set-top$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LockFreeStack'
            SET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:top$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeStack' type=kotlin.Unit origin=null
              receiver: GET_VAR '<this>: <root>.LockFreeStack<T of <root>.LockFreeStack> declared in <root>.LockFreeStack.<set-top$volatile>' type=<root>.LockFreeStack<T of <root>.LockFreeStack> origin=null
              value: GET_VAR 'value: kotlin.Any? declared in <root>.LockFreeStack.<set-top$volatile>' type=kotlin.Any? origin=null
    CLASS CLASS name:Node modality:FINAL visibility:private superTypes:[kotlin.Any]
      thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.LockFreeStack.Node<T of <root>.LockFreeStack.Node>
      TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
      PROPERTY name:value visibility:public modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.LockFreeStack.Node visibility:private [final]
          EXPRESSION_BODY
            GET_VAR 'value: T of <root>.LockFreeStack.Node declared in <root>.LockFreeStack.Node.<init>' type=T of <root>.LockFreeStack.Node origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-value> visibility:public modality:FINAL returnType:T of <root>.LockFreeStack.Node
          VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeStack.Node<T of <root>.LockFreeStack.Node>
          correspondingProperty: PROPERTY name:value visibility:public modality:FINAL [val]
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-value> (): T of <root>.LockFreeStack.Node declared in <root>.LockFreeStack.Node'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:T of <root>.LockFreeStack.Node visibility:private [final]' type=T of <root>.LockFreeStack.Node origin=null
                receiver: GET_VAR '<this>: <root>.LockFreeStack.Node<T of <root>.LockFreeStack.Node> declared in <root>.LockFreeStack.Node.<get-value>' type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack.Node> origin=null
      PROPERTY name:next visibility:public modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:next type:<root>.LockFreeStack.Node<T of <root>.LockFreeStack.Node>? visibility:private [final]
          EXPRESSION_BODY
            GET_VAR 'next: <root>.LockFreeStack.Node<T of <root>.LockFreeStack.Node>? declared in <root>.LockFreeStack.Node.<init>' type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack.Node>? origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-next> visibility:public modality:FINAL returnType:<root>.LockFreeStack.Node<T of <root>.LockFreeStack.Node>?
          VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeStack.Node<T of <root>.LockFreeStack.Node>
          correspondingProperty: PROPERTY name:next visibility:public modality:FINAL [val]
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-next> (): <root>.LockFreeStack.Node<T of <root>.LockFreeStack.Node>? declared in <root>.LockFreeStack.Node'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:next type:<root>.LockFreeStack.Node<T of <root>.LockFreeStack.Node>? visibility:private [final]' type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack.Node>? origin=null
                receiver: GET_VAR '<this>: <root>.LockFreeStack.Node<T of <root>.LockFreeStack.Node> declared in <root>.LockFreeStack.Node.<get-next>' type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack.Node> origin=null
      CONSTRUCTOR visibility:public returnType:<root>.LockFreeStack.Node<T of <root>.LockFreeStack.Node> [primary]
        VALUE_PARAMETER kind:Regular name:value index:0 type:T of <root>.LockFreeStack.Node
        VALUE_PARAMETER kind:Regular name:next index:1 type:<root>.LockFreeStack.Node<T of <root>.LockFreeStack.Node>?
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Node modality:FINAL visibility:private superTypes:[kotlin.Any]' type=kotlin.Unit
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        overridden:
          public open fun hashCode (): kotlin.Int declared in kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        overridden:
          public open fun toString (): kotlin.String declared in kotlin.Any
    CONSTRUCTOR visibility:public returnType:<root>.LockFreeStack<T of <root>.LockFreeStack> [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:LockFreeStack modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN ATOMICFU_GENERATED_FUNCTION name:getAndUpdate$atomicfu$NATIVE_PROPERTY_REF$Any visibility:private modality:FINAL returnType:kotlin.Any? [inline]
      VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeStack<T of <root>.LockFreeStack>
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> [crossinline]
      VALUE_PARAMETER kind:Regular name:action$atomicfu index:2 type:kotlin.Function1<kotlin.Any?, kotlin.Any?>
      BLOCK_BODY
        WHILE label=null origin=null
          condition: CONST Boolean type=kotlin.Boolean value=true
          body: BLOCK type=kotlin.Unit origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:T of kotlin.concurrent.atomicGetField [val]
              CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                TYPE_ARG T: kotlin.Any?
                ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                  ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> declared in <root>.LockFreeStack.getAndUpdate$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp_1 type:R of kotlin.Function1 [val]
              CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=R of kotlin.Function1 origin=null
                ARG <this>: GET_VAR 'action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Any?> declared in <root>.LockFreeStack.getAndUpdate$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function1<kotlin.Any?, kotlin.Any?> origin=null
                ARG p1: GET_VAR 'val tmp_0: T of kotlin.concurrent.atomicGetField declared in <root>.LockFreeStack.getAndUpdate$atomicfu$NATIVE_PROPERTY_REF$Any' type=T of kotlin.concurrent.atomicGetField origin=null
            WHEN type=kotlin.Unit origin=null
              BRANCH
                if: CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                  TYPE_ARG T: kotlin.Any?
                  ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                    ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> declared in <root>.LockFreeStack.getAndUpdate$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> origin=null
                  ARG expectedValue: GET_VAR 'val tmp_0: T of kotlin.concurrent.atomicGetField declared in <root>.LockFreeStack.getAndUpdate$atomicfu$NATIVE_PROPERTY_REF$Any' type=T of kotlin.concurrent.atomicGetField origin=null
                  ARG newValue: GET_VAR 'val tmp_1: R of kotlin.Function1 declared in <root>.LockFreeStack.getAndUpdate$atomicfu$NATIVE_PROPERTY_REF$Any' type=R of kotlin.Function1 origin=null
                then: RETURN type=kotlin.Nothing from='private final fun getAndUpdate$atomicfu$NATIVE_PROPERTY_REF$Any (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>>, action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Any?>): kotlin.Any? declared in <root>.LockFreeStack'
                  GET_VAR 'val tmp_0: T of kotlin.concurrent.atomicGetField declared in <root>.LockFreeStack.getAndUpdate$atomicfu$NATIVE_PROPERTY_REF$Any' type=T of kotlin.concurrent.atomicGetField origin=null
    FUN ATOMICFU_GENERATED_FUNCTION name:loop$atomicfu$NATIVE_PROPERTY_REF$Any visibility:private modality:FINAL returnType:kotlin.Unit [inline]
      VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeStack<T of <root>.LockFreeStack>
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> [crossinline]
      VALUE_PARAMETER kind:Regular name:action$atomicfu index:2 type:kotlin.Function1<kotlin.Any?, kotlin.Unit>
      BLOCK_BODY
        WHILE label=null origin=null
          condition: CONST Boolean type=kotlin.Boolean value=true
          body: BLOCK type=R of kotlin.Function1 origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp_2 type:T of kotlin.concurrent.atomicGetField [val]
              CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                TYPE_ARG T: kotlin.Any?
                ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                  ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> declared in <root>.LockFreeStack.loop$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> origin=null
            CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=R of kotlin.Function1 origin=null
              ARG <this>: GET_VAR 'action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Unit> declared in <root>.LockFreeStack.loop$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function1<kotlin.Any?, kotlin.Unit> origin=null
              ARG p1: GET_VAR 'val tmp_2: T of kotlin.concurrent.atomicGetField declared in <root>.LockFreeStack.loop$atomicfu$NATIVE_PROPERTY_REF$Any' type=T of kotlin.concurrent.atomicGetField origin=null
    FUN ATOMICFU_GENERATED_FUNCTION name:update$atomicfu$NATIVE_PROPERTY_REF$Any visibility:private modality:FINAL returnType:kotlin.Unit [inline]
      VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeStack<T of <root>.LockFreeStack>
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> [crossinline]
      VALUE_PARAMETER kind:Regular name:action$atomicfu index:2 type:kotlin.Function1<kotlin.Any?, kotlin.Any?>
      BLOCK_BODY
        WHILE label=null origin=null
          condition: CONST Boolean type=kotlin.Boolean value=true
          body: BLOCK type=kotlin.Unit origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp_3 type:T of kotlin.concurrent.atomicGetField [val]
              CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                TYPE_ARG T: kotlin.Any?
                ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                  ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> declared in <root>.LockFreeStack.update$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp_4 type:R of kotlin.Function1 [val]
              CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=R of kotlin.Function1 origin=null
                ARG <this>: GET_VAR 'action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Any?> declared in <root>.LockFreeStack.update$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function1<kotlin.Any?, kotlin.Any?> origin=null
                ARG p1: GET_VAR 'val tmp_3: T of kotlin.concurrent.atomicGetField declared in <root>.LockFreeStack.update$atomicfu$NATIVE_PROPERTY_REF$Any' type=T of kotlin.concurrent.atomicGetField origin=null
            WHEN type=kotlin.Unit origin=null
              BRANCH
                if: CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                  TYPE_ARG T: kotlin.Any?
                  ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                    ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> declared in <root>.LockFreeStack.update$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> origin=null
                  ARG expectedValue: GET_VAR 'val tmp_3: T of kotlin.concurrent.atomicGetField declared in <root>.LockFreeStack.update$atomicfu$NATIVE_PROPERTY_REF$Any' type=T of kotlin.concurrent.atomicGetField origin=null
                  ARG newValue: GET_VAR 'val tmp_4: R of kotlin.Function1 declared in <root>.LockFreeStack.update$atomicfu$NATIVE_PROPERTY_REF$Any' type=R of kotlin.Function1 origin=null
                then: RETURN type=kotlin.Nothing from='private final fun update$atomicfu$NATIVE_PROPERTY_REF$Any (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>>, action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Any?>): kotlin.Unit declared in <root>.LockFreeStack'
                  GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Unit modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    FUN name:clear visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeStack<T of <root>.LockFreeStack>
      BLOCK_BODY
        CALL 'internal final fun atomicSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicSetField>, newValue: T of kotlin.concurrent.atomicSetField): kotlin.Unit declared in kotlin.concurrent' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Any?
          ARG <this>: PROPERTY_REFERENCE 'private final top$volatile: kotlin.Any? declared in <root>.LockFreeStack' field='FIELD ATOMICFU_GENERATED_FIELD name:top$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeStack' getter='private final fun <get-top$volatile> (): kotlin.Any? declared in <root>.LockFreeStack' setter='private final fun <set-top$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LockFreeStack' type=kotlin.Any? origin=null
            ARG 1: GET_VAR '<this>: <root>.LockFreeStack<T of <root>.LockFreeStack> declared in <root>.LockFreeStack.clear' type=<root>.LockFreeStack<T of <root>.LockFreeStack> origin=IMPLICIT_ARGUMENT
          ARG newValue: CONST Null type=kotlin.Nothing? value=null
    FUN name:isEmpty visibility:public modality:FINAL returnType:kotlin.Boolean
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeStack<T of <root>.LockFreeStack>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun isEmpty (): kotlin.Boolean declared in <root>.LockFreeStack'
          CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
            ARG arg0: TYPE_OP type=kotlin.Any? origin=CAST typeOperand=kotlin.Any?
              CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                TYPE_ARG T: kotlin.Any?
                ARG <this>: PROPERTY_REFERENCE 'private final top$volatile: kotlin.Any? declared in <root>.LockFreeStack' field='FIELD ATOMICFU_GENERATED_FIELD name:top$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeStack' getter='private final fun <get-top$volatile> (): kotlin.Any? declared in <root>.LockFreeStack' setter='private final fun <set-top$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LockFreeStack' type=kotlin.Any? origin=null
                  ARG 1: GET_VAR '<this>: <root>.LockFreeStack<T of <root>.LockFreeStack> declared in <root>.LockFreeStack.isEmpty' type=<root>.LockFreeStack<T of <root>.LockFreeStack> origin=IMPLICIT_ARGUMENT
            ARG arg1: CONST Null type=kotlin.Nothing? value=null
    FUN name:popLoop visibility:public modality:FINAL returnType:T of <root>.LockFreeStack?
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeStack<T of <root>.LockFreeStack>
      BLOCK_BODY
        CALL 'private final fun loop$atomicfu$NATIVE_PROPERTY_REF$Any (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>>, action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Unit>): kotlin.Unit declared in <root>.LockFreeStack' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR '<this>: <root>.LockFreeStack<T of <root>.LockFreeStack> declared in <root>.LockFreeStack.popLoop' type=<root>.LockFreeStack<T of <root>.LockFreeStack> origin=null
          ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.Any?> origin=LAMBDA
            FUN ATOMICFU_GENERATED_FUNCTION name:<top$volatile-getter> visibility:local modality:FINAL returnType:kotlin.Any? [inline]
              BLOCK_BODY
                RETURN type=kotlin.Nothing from='local final fun <top$volatile-getter> (): kotlin.Any? declared in <root>.LockFreeStack.popLoop'
                  PROPERTY_REFERENCE 'private final top$volatile: kotlin.Any? declared in <root>.LockFreeStack' field='FIELD ATOMICFU_GENERATED_FIELD name:top$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeStack' getter='private final fun <get-top$volatile> (): kotlin.Any? declared in <root>.LockFreeStack' setter='private final fun <set-top$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LockFreeStack' type=kotlin.Any? origin=null
                    ARG 1: GET_VAR '<this>: <root>.LockFreeStack<T of <root>.LockFreeStack> declared in <root>.LockFreeStack.popLoop' type=<root>.LockFreeStack<T of <root>.LockFreeStack> origin=IMPLICIT_ARGUMENT
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<<root>.LockFreeStack.Node<T of <root>.LockFreeStack>?, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:<root>.LockFreeStack.Node<T of <root>.LockFreeStack>?
              BLOCK_BODY
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                      ARG arg0: GET_VAR 'cur: <root>.LockFreeStack.Node<T of <root>.LockFreeStack>? declared in <root>.LockFreeStack.popLoop.<anonymous>' type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack>? origin=null
                      ARG arg1: CONST Null type=kotlin.Nothing? value=null
                    then: RETURN type=kotlin.Nothing from='public final fun popLoop (): T of <root>.LockFreeStack? declared in <root>.LockFreeStack'
                      CONST Null type=kotlin.Nothing? value=null
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                      TYPE_ARG T: kotlin.Any?
                      ARG <this>: PROPERTY_REFERENCE 'private final top$volatile: kotlin.Any? declared in <root>.LockFreeStack' field='FIELD ATOMICFU_GENERATED_FIELD name:top$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeStack' getter='private final fun <get-top$volatile> (): kotlin.Any? declared in <root>.LockFreeStack' setter='private final fun <set-top$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LockFreeStack' type=kotlin.Any? origin=null
                        ARG 1: GET_VAR '<this>: <root>.LockFreeStack<T of <root>.LockFreeStack> declared in <root>.LockFreeStack.popLoop' type=<root>.LockFreeStack<T of <root>.LockFreeStack> origin=IMPLICIT_ARGUMENT
                      ARG expectedValue: GET_VAR 'cur: <root>.LockFreeStack.Node<T of <root>.LockFreeStack>? declared in <root>.LockFreeStack.popLoop.<anonymous>' type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack>? origin=null
                      ARG newValue: CALL 'public final fun <get-next> (): <root>.LockFreeStack.Node<T of <root>.LockFreeStack.Node>? declared in <root>.LockFreeStack.Node' type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack>? origin=GET_PROPERTY
                        ARG <this>: GET_VAR 'cur: <root>.LockFreeStack.Node<T of <root>.LockFreeStack>? declared in <root>.LockFreeStack.popLoop.<anonymous>' type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack>? origin=null
                    then: RETURN type=kotlin.Nothing from='public final fun popLoop (): T of <root>.LockFreeStack? declared in <root>.LockFreeStack'
                      CALL 'public final fun <get-value> (): T of <root>.LockFreeStack.Node declared in <root>.LockFreeStack.Node' type=T of <root>.LockFreeStack origin=GET_PROPERTY
                        ARG <this>: GET_VAR 'cur: <root>.LockFreeStack.Node<T of <root>.LockFreeStack>? declared in <root>.LockFreeStack.popLoop.<anonymous>' type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack>? origin=null
    FUN name:popUpdate visibility:public modality:FINAL returnType:T of <root>.LockFreeStack?
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeStack<T of <root>.LockFreeStack>
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun popUpdate (): T of <root>.LockFreeStack? declared in <root>.LockFreeStack'
          BLOCK type=T of <root>.LockFreeStack? origin=SAFE_CALL
            VAR IR_TEMPORARY_VARIABLE name:tmp_5 type:<root>.LockFreeStack.Node<T of <root>.LockFreeStack>? [val]
              CALL 'private final fun getAndUpdate$atomicfu$NATIVE_PROPERTY_REF$Any (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>>, action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Any?>): kotlin.Any? declared in <root>.LockFreeStack' type=kotlin.Any? origin=null
                ARG <this>: GET_VAR '<this>: <root>.LockFreeStack<T of <root>.LockFreeStack> declared in <root>.LockFreeStack.popUpdate' type=<root>.LockFreeStack<T of <root>.LockFreeStack> origin=null
                ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.Any?> origin=LAMBDA
                  FUN ATOMICFU_GENERATED_FUNCTION name:<top$volatile-getter> visibility:local modality:FINAL returnType:kotlin.Any? [inline]
                    BLOCK_BODY
                      RETURN type=kotlin.Nothing from='local final fun <top$volatile-getter> (): kotlin.Any? declared in <root>.LockFreeStack.popUpdate'
                        PROPERTY_REFERENCE 'private final top$volatile: kotlin.Any? declared in <root>.LockFreeStack' field='FIELD ATOMICFU_GENERATED_FIELD name:top$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeStack' getter='private final fun <get-top$volatile> (): kotlin.Any? declared in <root>.LockFreeStack' setter='private final fun <set-top$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LockFreeStack' type=kotlin.Any? origin=null
                          ARG 1: GET_VAR '<this>: <root>.LockFreeStack<T of <root>.LockFreeStack> declared in <root>.LockFreeStack.popUpdate' type=<root>.LockFreeStack<T of <root>.LockFreeStack> origin=IMPLICIT_ARGUMENT
                ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<<root>.LockFreeStack.Node<T of <root>.LockFreeStack>?, <root>.LockFreeStack.Node<T of <root>.LockFreeStack>?> origin=LAMBDA
                  FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:<root>.LockFreeStack.Node<T of <root>.LockFreeStack>?
                    VALUE_PARAMETER kind:Regular name:cur index:0 type:<root>.LockFreeStack.Node<T of <root>.LockFreeStack>?
                    BLOCK_BODY
                      RETURN type=kotlin.Nothing from='local final fun <anonymous> (cur: <root>.LockFreeStack.Node<T of <root>.LockFreeStack>?): <root>.LockFreeStack.Node<T of <root>.LockFreeStack>? declared in <root>.LockFreeStack.popUpdate'
                        BLOCK type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack>? origin=SAFE_CALL
                          VAR IR_TEMPORARY_VARIABLE name:tmp_6 type:<root>.LockFreeStack.Node<T of <root>.LockFreeStack>? [val]
                            GET_VAR 'cur: <root>.LockFreeStack.Node<T of <root>.LockFreeStack>? declared in <root>.LockFreeStack.popUpdate.<anonymous>' type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack>? origin=null
                          WHEN type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack>? origin=null
                            BRANCH
                              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                                ARG arg0: GET_VAR 'val tmp_6: <root>.LockFreeStack.Node<T of <root>.LockFreeStack>? declared in <root>.LockFreeStack.popUpdate.<anonymous>' type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack>? origin=null
                                ARG arg1: CONST Null type=kotlin.Nothing? value=null
                              then: CONST Null type=kotlin.Nothing? value=null
                            BRANCH
                              if: CONST Boolean type=kotlin.Boolean value=true
                              then: CALL 'public final fun <get-next> (): <root>.LockFreeStack.Node<T of <root>.LockFreeStack.Node>? declared in <root>.LockFreeStack.Node' type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack>? origin=GET_PROPERTY
                                ARG <this>: GET_VAR 'val tmp_6: <root>.LockFreeStack.Node<T of <root>.LockFreeStack>? declared in <root>.LockFreeStack.popUpdate.<anonymous>' type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack>? origin=null
            WHEN type=T of <root>.LockFreeStack? origin=null
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                  ARG arg0: GET_VAR 'val tmp_5: <root>.LockFreeStack.Node<T of <root>.LockFreeStack>? declared in <root>.LockFreeStack.popUpdate' type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack>? origin=null
                  ARG arg1: CONST Null type=kotlin.Nothing? value=null
                then: CONST Null type=kotlin.Nothing? value=null
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: CALL 'public final fun <get-value> (): T of <root>.LockFreeStack.Node declared in <root>.LockFreeStack.Node' type=T of <root>.LockFreeStack origin=GET_PROPERTY
                  ARG <this>: GET_VAR 'val tmp_5: <root>.LockFreeStack.Node<T of <root>.LockFreeStack>? declared in <root>.LockFreeStack.popUpdate' type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack>? origin=null
    FUN name:pushLoop visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeStack<T of <root>.LockFreeStack>
      VALUE_PARAMETER kind:Regular name:value index:1 type:T of <root>.LockFreeStack
      BLOCK_BODY
        CALL 'private final fun loop$atomicfu$NATIVE_PROPERTY_REF$Any (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>>, action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Unit>): kotlin.Unit declared in <root>.LockFreeStack' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR '<this>: <root>.LockFreeStack<T of <root>.LockFreeStack> declared in <root>.LockFreeStack.pushLoop' type=<root>.LockFreeStack<T of <root>.LockFreeStack> origin=null
          ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.Any?> origin=LAMBDA
            FUN ATOMICFU_GENERATED_FUNCTION name:<top$volatile-getter> visibility:local modality:FINAL returnType:kotlin.Any? [inline]
              BLOCK_BODY
                RETURN type=kotlin.Nothing from='local final fun <top$volatile-getter> (): kotlin.Any? declared in <root>.LockFreeStack.pushLoop'
                  PROPERTY_REFERENCE 'private final top$volatile: kotlin.Any? declared in <root>.LockFreeStack' field='FIELD ATOMICFU_GENERATED_FIELD name:top$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeStack' getter='private final fun <get-top$volatile> (): kotlin.Any? declared in <root>.LockFreeStack' setter='private final fun <set-top$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LockFreeStack' type=kotlin.Any? origin=null
                    ARG 1: GET_VAR '<this>: <root>.LockFreeStack<T of <root>.LockFreeStack> declared in <root>.LockFreeStack.pushLoop' type=<root>.LockFreeStack<T of <root>.LockFreeStack> origin=IMPLICIT_ARGUMENT
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<<root>.LockFreeStack.Node<T of <root>.LockFreeStack>?, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:cur index:0 type:<root>.LockFreeStack.Node<T of <root>.LockFreeStack>?
              BLOCK_BODY
                VAR name:upd type:<root>.LockFreeStack.Node<T of <root>.LockFreeStack> [val]
                  CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.LockFreeStack.Node, next: <root>.LockFreeStack.Node<T of <root>.LockFreeStack.Node>?) declared in <root>.LockFreeStack.Node' type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack> origin=null
                    TYPE_ARG (of class) T: T of <root>.LockFreeStack
                    ARG value: GET_VAR 'value: T of <root>.LockFreeStack declared in <root>.LockFreeStack.pushLoop' type=T of <root>.LockFreeStack origin=null
                    ARG next: GET_VAR 'cur: <root>.LockFreeStack.Node<T of <root>.LockFreeStack>? declared in <root>.LockFreeStack.pushLoop.<anonymous>' type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack>? origin=null
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                      TYPE_ARG T: kotlin.Any?
                      ARG <this>: PROPERTY_REFERENCE 'private final top$volatile: kotlin.Any? declared in <root>.LockFreeStack' field='FIELD ATOMICFU_GENERATED_FIELD name:top$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeStack' getter='private final fun <get-top$volatile> (): kotlin.Any? declared in <root>.LockFreeStack' setter='private final fun <set-top$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LockFreeStack' type=kotlin.Any? origin=null
                        ARG 1: GET_VAR '<this>: <root>.LockFreeStack<T of <root>.LockFreeStack> declared in <root>.LockFreeStack.pushLoop' type=<root>.LockFreeStack<T of <root>.LockFreeStack> origin=IMPLICIT_ARGUMENT
                      ARG expectedValue: GET_VAR 'cur: <root>.LockFreeStack.Node<T of <root>.LockFreeStack>? declared in <root>.LockFreeStack.pushLoop.<anonymous>' type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack>? origin=null
                      ARG newValue: GET_VAR 'val upd: <root>.LockFreeStack.Node<T of <root>.LockFreeStack> declared in <root>.LockFreeStack.pushLoop.<anonymous>' type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack> origin=null
                    then: RETURN type=kotlin.Nothing from='public final fun pushLoop (value: T of <root>.LockFreeStack): kotlin.Unit declared in <root>.LockFreeStack'
                      GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Unit modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN name:pushUpdate visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeStack<T of <root>.LockFreeStack>
      VALUE_PARAMETER kind:Regular name:value index:1 type:T of <root>.LockFreeStack
      BLOCK_BODY
        CALL 'private final fun update$atomicfu$NATIVE_PROPERTY_REF$Any (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>>, action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Any?>): kotlin.Unit declared in <root>.LockFreeStack' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR '<this>: <root>.LockFreeStack<T of <root>.LockFreeStack> declared in <root>.LockFreeStack.pushUpdate' type=<root>.LockFreeStack<T of <root>.LockFreeStack> origin=null
          ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.Any?> origin=LAMBDA
            FUN ATOMICFU_GENERATED_FUNCTION name:<top$volatile-getter> visibility:local modality:FINAL returnType:kotlin.Any? [inline]
              BLOCK_BODY
                RETURN type=kotlin.Nothing from='local final fun <top$volatile-getter> (): kotlin.Any? declared in <root>.LockFreeStack.pushUpdate'
                  PROPERTY_REFERENCE 'private final top$volatile: kotlin.Any? declared in <root>.LockFreeStack' field='FIELD ATOMICFU_GENERATED_FIELD name:top$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeStack' getter='private final fun <get-top$volatile> (): kotlin.Any? declared in <root>.LockFreeStack' setter='private final fun <set-top$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LockFreeStack' type=kotlin.Any? origin=null
                    ARG 1: GET_VAR '<this>: <root>.LockFreeStack<T of <root>.LockFreeStack> declared in <root>.LockFreeStack.pushUpdate' type=<root>.LockFreeStack<T of <root>.LockFreeStack> origin=IMPLICIT_ARGUMENT
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<<root>.LockFreeStack.Node<T of <root>.LockFreeStack>?, <root>.LockFreeStack.Node<T of <root>.LockFreeStack>?> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:<root>.LockFreeStack.Node<T of <root>.LockFreeStack>?
              VALUE_PARAMETER kind:Regular name:cur index:0 type:<root>.LockFreeStack.Node<T of <root>.LockFreeStack>?
              BLOCK_BODY
                RETURN type=kotlin.Nothing from='local final fun <anonymous> (cur: <root>.LockFreeStack.Node<T of <root>.LockFreeStack>?): <root>.LockFreeStack.Node<T of <root>.LockFreeStack>? declared in <root>.LockFreeStack.pushUpdate'
                  CONSTRUCTOR_CALL 'public constructor <init> (value: T of <root>.LockFreeStack.Node, next: <root>.LockFreeStack.Node<T of <root>.LockFreeStack.Node>?) declared in <root>.LockFreeStack.Node' type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack> origin=null
                    TYPE_ARG (of class) T: T of <root>.LockFreeStack
                    ARG value: GET_VAR 'value: T of <root>.LockFreeStack declared in <root>.LockFreeStack.pushUpdate' type=T of <root>.LockFreeStack origin=null
                    ARG next: GET_VAR 'cur: <root>.LockFreeStack.Node<T of <root>.LockFreeStack>? declared in <root>.LockFreeStack.pushUpdate.<anonymous>' type=<root>.LockFreeStack.Node<T of <root>.LockFreeStack>? origin=null
  CLASS CLASS name:LockFreeStackTest modality:FINAL visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.LockFreeStackTest
    CONSTRUCTOR visibility:public returnType:<root>.LockFreeStackTest [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:LockFreeStackTest modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    FUN name:testClear visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeStackTest
      BLOCK_BODY
        VAR name:s type:<root>.LockFreeStack<kotlin.String> [val]
          CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.LockFreeStack' type=<root>.LockFreeStack<kotlin.String> origin=null
            TYPE_ARG (of class) T: kotlin.String
        CALL 'public final fun assertTrue (actual: kotlin.Boolean, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          ARG actual: CALL 'public final fun isEmpty (): kotlin.Boolean declared in <root>.LockFreeStack' type=kotlin.Boolean origin=null
            ARG <this>: GET_VAR 'val s: <root>.LockFreeStack<kotlin.String> declared in <root>.LockFreeStackTest.testClear' type=<root>.LockFreeStack<kotlin.String> origin=null
        CALL 'public final fun pushLoop (value: T of <root>.LockFreeStack): kotlin.Unit declared in <root>.LockFreeStack' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR 'val s: <root>.LockFreeStack<kotlin.String> declared in <root>.LockFreeStackTest.testClear' type=<root>.LockFreeStack<kotlin.String> origin=null
          ARG value: CONST String type=kotlin.String value="A"
        CALL 'public final fun assertTrue (actual: kotlin.Boolean, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          ARG actual: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=null
            ARG <this>: CALL 'public final fun isEmpty (): kotlin.Boolean declared in <root>.LockFreeStack' type=kotlin.Boolean origin=null
              ARG <this>: GET_VAR 'val s: <root>.LockFreeStack<kotlin.String> declared in <root>.LockFreeStackTest.testClear' type=<root>.LockFreeStack<kotlin.String> origin=null
        CALL 'public final fun clear (): kotlin.Unit declared in <root>.LockFreeStack' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR 'val s: <root>.LockFreeStack<kotlin.String> declared in <root>.LockFreeStackTest.testClear' type=<root>.LockFreeStack<kotlin.String> origin=null
        CALL 'public final fun assertTrue (actual: kotlin.Boolean, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          ARG actual: CALL 'public final fun isEmpty (): kotlin.Boolean declared in <root>.LockFreeStack' type=kotlin.Boolean origin=null
            ARG <this>: GET_VAR 'val s: <root>.LockFreeStack<kotlin.String> declared in <root>.LockFreeStackTest.testClear' type=<root>.LockFreeStack<kotlin.String> origin=null
    FUN name:testPushPopLoop visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeStackTest
      BLOCK_BODY
        VAR name:s type:<root>.LockFreeStack<kotlin.String> [val]
          CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.LockFreeStack' type=<root>.LockFreeStack<kotlin.String> origin=null
            TYPE_ARG (of class) T: kotlin.String
        CALL 'public final fun assertTrue (actual: kotlin.Boolean, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          ARG actual: CALL 'public final fun isEmpty (): kotlin.Boolean declared in <root>.LockFreeStack' type=kotlin.Boolean origin=null
            ARG <this>: GET_VAR 'val s: <root>.LockFreeStack<kotlin.String> declared in <root>.LockFreeStackTest.testPushPopLoop' type=<root>.LockFreeStack<kotlin.String> origin=null
        CALL 'public final fun pushLoop (value: T of <root>.LockFreeStack): kotlin.Unit declared in <root>.LockFreeStack' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR 'val s: <root>.LockFreeStack<kotlin.String> declared in <root>.LockFreeStackTest.testPushPopLoop' type=<root>.LockFreeStack<kotlin.String> origin=null
          ARG value: CONST String type=kotlin.String value="A"
        CALL 'public final fun assertTrue (actual: kotlin.Boolean, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          ARG actual: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=null
            ARG <this>: CALL 'public final fun isEmpty (): kotlin.Boolean declared in <root>.LockFreeStack' type=kotlin.Boolean origin=null
              ARG <this>: GET_VAR 'val s: <root>.LockFreeStack<kotlin.String> declared in <root>.LockFreeStackTest.testPushPopLoop' type=<root>.LockFreeStack<kotlin.String> origin=null
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.String?
          ARG expected: CONST String type=kotlin.String value="A"
          ARG actual: CALL 'public final fun popLoop (): T of <root>.LockFreeStack? declared in <root>.LockFreeStack' type=kotlin.String? origin=null
            ARG <this>: GET_VAR 'val s: <root>.LockFreeStack<kotlin.String> declared in <root>.LockFreeStackTest.testPushPopLoop' type=<root>.LockFreeStack<kotlin.String> origin=null
        CALL 'public final fun assertTrue (actual: kotlin.Boolean, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          ARG actual: CALL 'public final fun isEmpty (): kotlin.Boolean declared in <root>.LockFreeStack' type=kotlin.Boolean origin=null
            ARG <this>: GET_VAR 'val s: <root>.LockFreeStack<kotlin.String> declared in <root>.LockFreeStackTest.testPushPopLoop' type=<root>.LockFreeStack<kotlin.String> origin=null
    FUN name:testPushPopUpdate visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeStackTest
      BLOCK_BODY
        VAR name:s type:<root>.LockFreeStack<kotlin.String> [val]
          CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.LockFreeStack' type=<root>.LockFreeStack<kotlin.String> origin=null
            TYPE_ARG (of class) T: kotlin.String
        CALL 'public final fun assertTrue (actual: kotlin.Boolean, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          ARG actual: CALL 'public final fun isEmpty (): kotlin.Boolean declared in <root>.LockFreeStack' type=kotlin.Boolean origin=null
            ARG <this>: GET_VAR 'val s: <root>.LockFreeStack<kotlin.String> declared in <root>.LockFreeStackTest.testPushPopUpdate' type=<root>.LockFreeStack<kotlin.String> origin=null
        CALL 'public final fun pushUpdate (value: T of <root>.LockFreeStack): kotlin.Unit declared in <root>.LockFreeStack' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR 'val s: <root>.LockFreeStack<kotlin.String> declared in <root>.LockFreeStackTest.testPushPopUpdate' type=<root>.LockFreeStack<kotlin.String> origin=null
          ARG value: CONST String type=kotlin.String value="A"
        CALL 'public final fun assertTrue (actual: kotlin.Boolean, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          ARG actual: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=null
            ARG <this>: CALL 'public final fun isEmpty (): kotlin.Boolean declared in <root>.LockFreeStack' type=kotlin.Boolean origin=null
              ARG <this>: GET_VAR 'val s: <root>.LockFreeStack<kotlin.String> declared in <root>.LockFreeStackTest.testPushPopUpdate' type=<root>.LockFreeStack<kotlin.String> origin=null
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.String?
          ARG expected: CONST String type=kotlin.String value="A"
          ARG actual: CALL 'public final fun popUpdate (): T of <root>.LockFreeStack? declared in <root>.LockFreeStack' type=kotlin.String? origin=null
            ARG <this>: GET_VAR 'val s: <root>.LockFreeStack<kotlin.String> declared in <root>.LockFreeStackTest.testPushPopUpdate' type=<root>.LockFreeStack<kotlin.String> origin=null
        CALL 'public final fun assertTrue (actual: kotlin.Boolean, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          ARG actual: CALL 'public final fun isEmpty (): kotlin.Boolean declared in <root>.LockFreeStack' type=kotlin.Boolean origin=null
            ARG <this>: GET_VAR 'val s: <root>.LockFreeStack<kotlin.String> declared in <root>.LockFreeStackTest.testPushPopUpdate' type=<root>.LockFreeStack<kotlin.String> origin=null
  FUN name:box visibility:public modality:FINAL returnType:kotlin.String
    BLOCK_BODY
      VAR name:testClass type:<root>.LockFreeStackTest [val]
        CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.LockFreeStackTest' type=<root>.LockFreeStackTest origin=null
      CALL 'public final fun testClear (): kotlin.Unit declared in <root>.LockFreeStackTest' type=kotlin.Unit origin=null
        ARG <this>: GET_VAR 'val testClass: <root>.LockFreeStackTest declared in <root>.box' type=<root>.LockFreeStackTest origin=null
      CALL 'public final fun testPushPopLoop (): kotlin.Unit declared in <root>.LockFreeStackTest' type=kotlin.Unit origin=null
        ARG <this>: GET_VAR 'val testClass: <root>.LockFreeStackTest declared in <root>.box' type=<root>.LockFreeStackTest origin=null
      CALL 'public final fun testPushPopUpdate (): kotlin.Unit declared in <root>.LockFreeStackTest' type=kotlin.Unit origin=null
        ARG <this>: GET_VAR 'val testClass: <root>.LockFreeStackTest declared in <root>.box' type=<root>.LockFreeStackTest origin=null
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        CONST String type=kotlin.String value="OK"
