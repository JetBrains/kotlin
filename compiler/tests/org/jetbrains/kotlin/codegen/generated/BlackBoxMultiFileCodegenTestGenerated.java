/*
 * Copyright 2010-2016 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jetbrains.kotlin.codegen.generated;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("compiler/testData/codegen/boxMultiFile")
@TestDataPath("$PROJECT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public class BlackBoxMultiFileCodegenTestGenerated extends AbstractBlackBoxCodegenTest {
    @TestMetadata("accessorForProtected")
    public void testAccessorForProtected() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/accessorForProtected/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("accessorForProtectedInvokeVirtual")
    public void testAccessorForProtectedInvokeVirtual() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/accessorForProtectedInvokeVirtual/");
        doTestMultiFile(fileName);
    }

    public void testAllFilesPresentInBoxMultiFile() throws Exception {
        KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("compiler/testData/codegen/boxMultiFile"), Pattern.compile("^([^\\.]+)$"), false);
    }

    @TestMetadata("callMultifileClassMemberFromOtherPackage")
    public void testCallMultifileClassMemberFromOtherPackage() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/callMultifileClassMemberFromOtherPackage/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("inlineMultifileClassMemberFromOtherPackage")
    public void testInlineMultifileClassMemberFromOtherPackage() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/inlineMultifileClassMemberFromOtherPackage/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("internalVisibility")
    public void testInternalVisibility() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/internalVisibility/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("kt10047")
    public void testKt10047() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/kt10047/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("kt1515")
    public void testKt1515() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/kt1515/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("kt1528")
    public void testKt1528() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/kt1528/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("kt1845")
    public void testKt1845() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/kt1845/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("kt2060")
    public void testKt2060() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/kt2060/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("kt5445")
    public void testKt5445() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/kt5445/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("kt5445_2")
    public void testKt5445_2() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/kt5445_2/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("kt9717")
    public void testKt9717() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/kt9717/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("kt9717DifferentPackages")
    public void testKt9717DifferentPackages() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/kt9717DifferentPackages/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("kt9958")
    public void testKt9958() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/kt9958/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("kt9958Interface")
    public void testKt9958Interface() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/kt9958Interface/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("mainInFiles")
    public void testMainInFiles() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/mainInFiles/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("multifileClassPartsInitialization")
    public void testMultifileClassPartsInitialization() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/multifileClassPartsInitialization/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("packageLocalClassNotImportedWithDefaultImport")
    public void testPackageLocalClassNotImportedWithDefaultImport() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/packageLocalClassNotImportedWithDefaultImport/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("protectedFromLambda")
    public void testProtectedFromLambda() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/protectedFromLambda/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("samWrappersDifferentFiles")
    public void testSamWrappersDifferentFiles() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/samWrappersDifferentFiles/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("sameFileName")
    public void testSameFileName() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/sameFileName/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("samePartNameDifferentFacades")
    public void testSamePartNameDifferentFacades() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/samePartNameDifferentFacades/");
        doTestMultiFile(fileName);
    }

    @TestMetadata("simple")
    public void testSimple() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("compiler/testData/codegen/boxMultiFile/simple/");
        doTestMultiFile(fileName);
    }
}
