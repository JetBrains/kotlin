8 <bold>val x</bold> = foo(1, 2) { { it } } (in test())
8 	val x = <bold>foo(1, 2) { { it } }</bold> (in test())
3 		<bold>fun foo(a: Int, b: Int, f: (Int) -> (Int) -> Int): Int</bold> {
4 			return <bold>f(a)(b)</bold> (in foo(Int, Int,…))
4 				[LAMBDA IN] return <bold>f(a)</bold>(b) (in foo(Int, Int,…))
4 					[LAMBDA IN] [LAMBDA IN] return <bold>f</bold>(a)(b) (in foo(Int, Int,…))
3 						[LAMBDA IN] [LAMBDA IN] fun foo(a: Int, b: Int, <bold>f: (Int) -> (Int) -> Int</bold>): Int { (in foo(Int, Int,…))
8 							[LAMBDA IN] [LAMBDA IN] val x = foo(1, 2) <bold>{ { it } }</bold> (in test())
8 								[LAMBDA IN] val x = foo(1, 2) <bold>{ { it } }</bold> (in test())
8 									[LAMBDA IN] val x = foo(1, 2) { <bold>{ it }</bold> } (in test())
8 										val x = foo(1, 2) { <bold>{ it }</bold> } (in test())
8 											val x = foo(1, 2) { { <bold>it</bold> } } (in test())
8 												[LAMBDA CALLS ARGUMENT #0] val x = foo(1, 2) { <bold>{ it }</bold> } (in test())
8 													[LAMBDA CALLS ARGUMENT #0] val x = foo(1, 2) <bold>{ { it } }</bold> (in test())
8 														[LAMBDA CALLS] [LAMBDA CALLS ARGUMENT #0] val x = foo(1, 2) <bold>{ { it } }</bold> (in test())
3 															[LAMBDA CALLS] [LAMBDA CALLS ARGUMENT #0] fun foo(a: Int, b: Int, <bold>f: (Int) -> (Int) -> Int</bold>): Int { (in foo(Int, Int,…))
4 																[LAMBDA CALLS ARGUMENT #0] return <bold>f(a)</bold>(b) (in foo(Int, Int,…))
4 																	return f(a)(<bold>b</bold>) (in foo(Int, Int,…))
3 																		fun foo(a: Int, <bold>b: Int</bold>, f: (Int) -> (Int) -> Int): Int { (in foo(Int, Int,…))
8 																			val x = foo(1, <bold>2</bold>) { { it } } (in test())
