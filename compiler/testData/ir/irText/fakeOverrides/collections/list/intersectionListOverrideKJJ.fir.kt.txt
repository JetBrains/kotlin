abstract class A : LinkedList<Int>, List<Int> {
  constructor() /* primary */ {
    super/*LinkedList*/<Int>()
    /* <init>() */

  }

  override fun replaceAll(operator: UnaryOperator<Int>) {
  }

  override fun sort(c: Comparator<in Int>?) {
  }

  override fun spliterator(): Spliterator<Int> {
    return CHECK_NOT_NULL<Nothing>(arg0 = null)
  }

}

fun test(a: A) {
  a.<get-size>() /*~> Unit */
  a.add(p0 = 1) /*~> Unit */
  a.get(p0 = 1) /*~> Unit */
  a.remove() /*~> Unit */
  a.removeAt(p0 = 1) /*~> Unit */
  a.remove(p0 = 1) /*~> Unit */
}
