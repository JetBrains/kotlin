/setters.kt:(103,127): info: Generated Viper text for testPrimitiveFieldSetter:
field public$backing_field_a: Ref

method global$fun_testPrimitiveFieldSetter$fun_take$T_class_global$class_PrimitiveField$return$T_Unit(local$pf: Ref)
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
{
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$pf), dom$RuntimeType$T_class_global$class_PrimitiveField())
  inhale acc(T_class_global$class_PrimitiveField(local$pf), wildcard)
  ret$0 := dom$RuntimeType$unitValue()
  inhale acc(local$pf.public$backing_field_a, write)
  local$pf.public$backing_field_a := dom$RuntimeType$intToRef(0)
  exhale acc(local$pf.public$backing_field_a, write)
  label label$ret$0
}

/setters.kt:(170,194): info: Generated Viper text for testReferenceFieldSetter:
field public$backing_field_a: Ref

field public$backing_field_pf: Ref

method class_PrimitiveField$constructor$fun_take$T_Int$return$T_class_global$class_PrimitiveField(local$a: Ref)
  returns (ret: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$T_class_global$class_PrimitiveField())
  ensures acc(T_class_global$class_PrimitiveField(ret), wildcard)


method global$fun_testReferenceFieldSetter$fun_take$T_class_global$class_ReferenceField$return$T_Unit(local$rf: Ref)
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
{
  var anonymous$0: Ref
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$rf), dom$RuntimeType$T_class_global$class_ReferenceField())
  inhale acc(T_class_global$class_ReferenceField(local$rf), wildcard)
  ret$0 := dom$RuntimeType$unitValue()
  anonymous$0 := class_PrimitiveField$constructor$fun_take$T_Int$return$T_class_global$class_PrimitiveField(dom$RuntimeType$intToRef(0))
  inhale acc(local$rf.public$backing_field_pf, write)
  local$rf.public$backing_field_pf := anonymous$0
  exhale acc(local$rf.public$backing_field_pf, write)
  label label$ret$0
}

/setters.kt:(427,454): info: Generated Viper text for testPrimitivePropertySetter:
method global$fun_testPrimitivePropertySetter$fun_take$T_class_global$class_PrimitiveProperty$return$T_Unit(local$pp: Ref)
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
{
  var anonymous$0: Ref
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$pp), dom$RuntimeType$T_class_global$class_PrimitiveProperty())
  inhale acc(T_class_global$class_PrimitiveProperty(local$pp), wildcard)
  ret$0 := dom$RuntimeType$unitValue()
  anonymous$0 := public$property_setter_aProp(local$pp, dom$RuntimeType$intToRef(0))
  label label$ret$0
}

method public$property_getter_aProp(this: Ref) returns (ret: Ref)


method public$property_setter_aProp(this: Ref, value: Ref)
  returns (ret: Ref)


/setters.kt:(504,531): info: Generated Viper text for testReferencePropertySetter:
method class_PrimitiveProperty$constructor$fun_take$$return$T_class_global$class_PrimitiveProperty()
  returns (ret: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$T_class_global$class_PrimitiveProperty())
  ensures acc(T_class_global$class_PrimitiveProperty(ret), wildcard)


method global$fun_testReferencePropertySetter$fun_take$T_class_global$class_ReferenceProperty$return$T_Unit(local$rp: Ref)
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
{
  var anonymous$0: Ref
  var anonymous$1: Ref
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$rp), dom$RuntimeType$T_class_global$class_ReferenceProperty())
  inhale acc(T_class_global$class_ReferenceProperty(local$rp), wildcard)
  ret$0 := dom$RuntimeType$unitValue()
  anonymous$1 := class_PrimitiveProperty$constructor$fun_take$$return$T_class_global$class_PrimitiveProperty()
  anonymous$0 := public$property_setter_ppProp(local$rp, anonymous$1)
  label label$ret$0
}

method public$property_getter_aProp(this: Ref) returns (ret: Ref)


method public$property_getter_ppProp(this: Ref) returns (ret: Ref)


method public$property_setter_aProp(this: Ref, value: Ref)
  returns (ret: Ref)


method public$property_setter_ppProp(this: Ref, value: Ref)
  returns (ret: Ref)

