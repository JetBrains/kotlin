FILE: and.kt
    public final infix fun R|kotlin/Boolean|.trueIn(target: R|kotlin/Any|): R|kotlin/Unit|
    public final inline fun <R> ifAnd(cond1: R|kotlin/Boolean|, cond2: R|kotlin/Boolean|, block: R|() -> R|): R|R?|
        [R|Contract description]
         <
            cond1 && cond2 trueIn block
            CallsInPlace(block, AT_MOST_ONCE)
        >
     {
        [StubStatement]
        ^ifAnd when () {
            R|<local>/cond1| && R|<local>/cond2| ->  {
                R|<local>/block|.R|FakeOverride<kotlin/Function0.invoke: R|R|>|()
            }
            else ->  {
                Null(null)
            }
        }

    }
    public final fun test1(a: R|kotlin/String?|, b: R|kotlin/String?|, c: R|kotlin/String?|): R|kotlin/Unit| {
        R|/ifAnd|<R|kotlin/Int|>(!=(R|<local>/a|, Null(null)) && !=(R|<local>/b|, Null(null)), !=(R|<local>/c|, Null(null)), <L> = ifAnd@fun <anonymous>(): R|kotlin/Int| <kind=AT_MOST_ONCE>  {
            R|<local>/a|.R|kotlin/String.length|
            R|<local>/b|.R|kotlin/String.length|
            ^ R|<local>/c|.R|kotlin/String.length|
        }
        )
    }
