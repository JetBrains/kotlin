/*
 * Copyright 2010-2022 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.container.assignment;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Nested;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link GenerateNewCompilerTests.kt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("plugins/value-container-assignment/testData/diagnostics")
@TestDataPath("$PROJECT_ROOT")
public class FirValueContainerAssignmentTestGenerated extends AbstractFirValueContainerAssignmentTest {
    @Test
    public void testAllFilesPresentInDiagnostics() throws Exception {
        KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("plugins/value-container-assignment/testData/diagnostics"), Pattern.compile("^(.+)\\.fir\\.kts?$"), null, true);
    }

    @Test
    @TestMetadata("incorrectUsageTest.fir.kt")
    public void testIncorrectUsageTest() throws Exception {
        runTest("plugins/value-container-assignment/testData/diagnostics/incorrectUsageTest.fir.kt");
    }

    @Test
    @TestMetadata("localVariablesTest.fir.kt")
    public void testLocalVariablesTest() throws Exception {
        runTest("plugins/value-container-assignment/testData/diagnostics/localVariablesTest.fir.kt");
    }

    @Test
    @TestMetadata("methodDeclarationTest.fir.kt")
    public void testMethodDeclarationTest() throws Exception {
        runTest("plugins/value-container-assignment/testData/diagnostics/methodDeclarationTest.fir.kt");
    }

    @Test
    @TestMetadata("noAnnotationTest.fir.kt")
    public void testNoAnnotationTest() throws Exception {
        runTest("plugins/value-container-assignment/testData/diagnostics/noAnnotationTest.fir.kt");
    }
}
