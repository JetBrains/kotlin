FILE: kt39000.kt
    public abstract interface A : R|kotlin/Any| {
    }
    public final class B : R|A| {
        public constructor(): R|B| {
            super<R|kotlin/Any|>()
        }

    }
    public final val X: R|B| = R|/B.B|()
        public get(): R|B|
    public final fun foo(b: R|B|): R|kotlin/Unit| {
    }
    public final fun main(a: R|A|): R|kotlin/Unit| {
        when () {
            ===(R|<local>/a|, R|/X|) ->  {
                R|/foo|(R|<local>/a|)
            }
        }

    }
