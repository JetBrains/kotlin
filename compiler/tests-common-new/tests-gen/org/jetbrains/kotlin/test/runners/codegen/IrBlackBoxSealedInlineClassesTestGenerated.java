/*
 * Copyright 2010-2022 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.test.runners.codegen;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TargetBackend;
import org.jetbrains.kotlin.test.utils.TransformersFunctions;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Nested;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.test.generators.GenerateCompilerTestsKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("compiler/testData/codegen/box/sealedInlineClasses")
@TestDataPath("$PROJECT_ROOT")
public class IrBlackBoxSealedInlineClassesTestGenerated extends AbstractIrBlackBoxCodegenTest {
    @Test
    public void testAllFilesPresentInSealedInlineClasses() throws Exception {
        KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
    }

    @Test
    @TestMetadata("is.kt")
    public void testIs() throws Exception {
        runTest("compiler/testData/codegen/box/sealedInlineClasses/is.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
    }

    @Test
    @TestMetadata("returnFromFunction.kt")
    public void testReturnFromFunction() throws Exception {
        runTest("compiler/testData/codegen/box/sealedInlineClasses/returnFromFunction.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
    }

    @Nested
    @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/casts")
    @TestDataPath("$PROJECT_ROOT")
    public class Casts {
        @Test
        public void testAllFilesPresentInCasts() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/casts"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
        }

        @Test
        @TestMetadata("class.kt")
        public void testClass() throws Exception {
            runTest("compiler/testData/codegen/box/sealedInlineClasses/casts/class.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
        }

        @Test
        @TestMetadata("inlineClass.kt")
        public void testInlineClass() throws Exception {
            runTest("compiler/testData/codegen/box/sealedInlineClasses/casts/inlineClass.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
        }

        @Test
        @TestMetadata("inlineClassNullable.kt")
        public void testInlineClassNullable() throws Exception {
            runTest("compiler/testData/codegen/box/sealedInlineClasses/casts/inlineClassNullable.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
        }

        @Test
        @TestMetadata("inlineClassPrimitive.kt")
        public void testInlineClassPrimitive() throws Exception {
            runTest("compiler/testData/codegen/box/sealedInlineClasses/casts/inlineClassPrimitive.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
        }

        @Test
        @TestMetadata("insideSealedInlineClass.kt")
        public void testInsideSealedInlineClass() throws Exception {
            runTest("compiler/testData/codegen/box/sealedInlineClasses/casts/insideSealedInlineClass.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
        }

        @Test
        @TestMetadata("interface.kt")
        public void testInterface() throws Exception {
            runTest("compiler/testData/codegen/box/sealedInlineClasses/casts/interface.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
        }

        @Test
        @TestMetadata("object.kt")
        public void testObject() throws Exception {
            runTest("compiler/testData/codegen/box/sealedInlineClasses/casts/object.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
        }

        @Nested
        @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/casts/param")
        @TestDataPath("$PROJECT_ROOT")
        public class Param {
            @Test
            public void testAllFilesPresentInParam() throws Exception {
                KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/casts/param"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
            }

            @Test
            @TestMetadata("class.kt")
            public void testClass() throws Exception {
                runTest("compiler/testData/codegen/box/sealedInlineClasses/casts/param/class.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
            }

            @Test
            @TestMetadata("inlineClass.kt")
            public void testInlineClass() throws Exception {
                runTest("compiler/testData/codegen/box/sealedInlineClasses/casts/param/inlineClass.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
            }

            @Test
            @TestMetadata("inlineClassNullable.kt")
            public void testInlineClassNullable() throws Exception {
                runTest("compiler/testData/codegen/box/sealedInlineClasses/casts/param/inlineClassNullable.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
            }

            @Test
            @TestMetadata("inlineClassPrimitive.kt")
            public void testInlineClassPrimitive() throws Exception {
                runTest("compiler/testData/codegen/box/sealedInlineClasses/casts/param/inlineClassPrimitive.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
            }

            @Test
            @TestMetadata("object.kt")
            public void testObject() throws Exception {
                runTest("compiler/testData/codegen/box/sealedInlineClasses/casts/param/object.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
            }
        }

        @Nested
        @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/casts/returnType")
        @TestDataPath("$PROJECT_ROOT")
        public class ReturnType {
            @Test
            public void testAllFilesPresentInReturnType() throws Exception {
                KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/casts/returnType"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
            }

            @Test
            @TestMetadata("class.kt")
            public void testClass() throws Exception {
                runTest("compiler/testData/codegen/box/sealedInlineClasses/casts/returnType/class.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
            }

            @Test
            @TestMetadata("inlineClass.kt")
            public void testInlineClass() throws Exception {
                runTest("compiler/testData/codegen/box/sealedInlineClasses/casts/returnType/inlineClass.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
            }

            @Test
            @TestMetadata("inlineClassNullable.kt")
            public void testInlineClassNullable() throws Exception {
                runTest("compiler/testData/codegen/box/sealedInlineClasses/casts/returnType/inlineClassNullable.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
            }

            @Test
            @TestMetadata("inlineClassPrimitive.kt")
            public void testInlineClassPrimitive() throws Exception {
                runTest("compiler/testData/codegen/box/sealedInlineClasses/casts/returnType/inlineClassPrimitive.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
            }

            @Test
            @TestMetadata("object.kt")
            public void testObject() throws Exception {
                runTest("compiler/testData/codegen/box/sealedInlineClasses/casts/returnType/object.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
            }
        }
    }

    @Nested
    @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/constructor")
    @TestDataPath("$PROJECT_ROOT")
    public class Constructor {
        @Test
        public void testAllFilesPresentInConstructor() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/constructor"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
        }

        @Test
        @TestMetadata("initBlocks.kt")
        public void testInitBlocks() throws Exception {
            runTest("compiler/testData/codegen/box/sealedInlineClasses/constructor/initBlocks.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
        }

        @Test
        @TestMetadata("object.kt")
        public void testObject() throws Exception {
            runTest("compiler/testData/codegen/box/sealedInlineClasses/constructor/object.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
        }

        @Test
        @TestMetadata("result.kt")
        public void testResult() throws Exception {
            runTest("compiler/testData/codegen/box/sealedInlineClasses/constructor/result.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
        }
    }

    @Nested
    @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods")
    @TestDataPath("$PROJECT_ROOT")
    public class Methods {
        @Test
        public void testAllFilesPresentInMethods() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
        }

        @Test
        @TestMetadata("equals.kt")
        public void testEquals() throws Exception {
            runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/equals.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
        }

        @Nested
        @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/any")
        @TestDataPath("$PROJECT_ROOT")
        public class Any {
            @Test
            public void testAllFilesPresentInAny() throws Exception {
                KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/any"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/any/abstractMethod")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractMethod {
                @Test
                public void testAllFilesPresentInAbstractMethod() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/any/abstractMethod"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyAbstractMethod_I1_I2_O1.kt")
                public void testAnyAbstractMethod_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/abstractMethod/anyAbstractMethod_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyAbstractMethod_I1_I2_O1_I3.kt")
                public void testAnyAbstractMethod_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/abstractMethod/anyAbstractMethod_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyAbstractMethod_I1_I2_O1_I3_O2.kt")
                public void testAnyAbstractMethod_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/abstractMethod/anyAbstractMethod_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyAbstractMethod_I1_I2_O1_O2.kt")
                public void testAnyAbstractMethod_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/abstractMethod/anyAbstractMethod_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyAbstractMethod_I1_O1_I3_O2.kt")
                public void testAnyAbstractMethod_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/abstractMethod/anyAbstractMethod_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/any/abstractMethodMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractMethodMiddle {
                @Test
                public void testAllFilesPresentInAbstractMethodMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/any/abstractMethodMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyAbstractMethodMiddle_I2_I3_O2.kt")
                public void testAnyAbstractMethodMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/abstractMethodMiddle/anyAbstractMethodMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/any/abstractVal")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractVal {
                @Test
                public void testAllFilesPresentInAbstractVal() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/any/abstractVal"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyAbstractVal_I1_I2_O1.kt")
                public void testAnyAbstractVal_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/abstractVal/anyAbstractVal_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyAbstractVal_I1_I2_O1_I3.kt")
                public void testAnyAbstractVal_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/abstractVal/anyAbstractVal_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyAbstractVal_I1_I2_O1_I3_O2.kt")
                public void testAnyAbstractVal_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/abstractVal/anyAbstractVal_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyAbstractVal_I1_I2_O1_O2.kt")
                public void testAnyAbstractVal_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/abstractVal/anyAbstractVal_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyAbstractVal_I1_O1_I3_O2.kt")
                public void testAnyAbstractVal_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/abstractVal/anyAbstractVal_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/any/abstractValMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractValMiddle {
                @Test
                public void testAllFilesPresentInAbstractValMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/any/abstractValMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyAbstractValMiddle_I2_I3_O2.kt")
                public void testAnyAbstractValMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/abstractValMiddle/anyAbstractValMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode")
            @TestDataPath("$PROJECT_ROOT")
            public class HashCode {
                @Test
                public void testAllFilesPresentInHashCode() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyHashCodeN.kt")
                public void testAnyHashCodeN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCodeN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I1.kt")
                public void testAnyHashCode_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I1_I2.kt")
                public void testAnyHashCode_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I1_I2_I3.kt")
                public void testAnyHashCode_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I1_I2_I3_O2.kt")
                public void testAnyHashCode_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I1_I2_O1.kt")
                public void testAnyHashCode_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I1_I2_O1_I3.kt")
                public void testAnyHashCode_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I1_I2_O1_I3_O2.kt")
                public void testAnyHashCode_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I1_I2_O1_O2.kt")
                public void testAnyHashCode_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I1_I2_O2.kt")
                public void testAnyHashCode_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I1_I3.kt")
                public void testAnyHashCode_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I1_I3_O2.kt")
                public void testAnyHashCode_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I1_O1.kt")
                public void testAnyHashCode_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I1_O1_I3.kt")
                public void testAnyHashCode_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I1_O1_I3_O2.kt")
                public void testAnyHashCode_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I1_O1_O2.kt")
                public void testAnyHashCode_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I1_O2.kt")
                public void testAnyHashCode_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I2.kt")
                public void testAnyHashCode_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I2_I3.kt")
                public void testAnyHashCode_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I2_I3_O2.kt")
                public void testAnyHashCode_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I2_O1.kt")
                public void testAnyHashCode_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I2_O1_I3.kt")
                public void testAnyHashCode_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I2_O1_I3_O2.kt")
                public void testAnyHashCode_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I2_O1_O2.kt")
                public void testAnyHashCode_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I2_O2.kt")
                public void testAnyHashCode_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I3.kt")
                public void testAnyHashCode_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_I3_O2.kt")
                public void testAnyHashCode_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_O1.kt")
                public void testAnyHashCode_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_O1_I3.kt")
                public void testAnyHashCode_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_O1_I3_O2.kt")
                public void testAnyHashCode_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_O1_O2.kt")
                public void testAnyHashCode_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyHashCode_O2.kt")
                public void testAnyHashCode_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/hashCode/anyHashCode_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceMethodAbstract {
                @Test
                public void testAllFilesPresentInInterfaceMethodAbstract() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyInterfaceMethodAbstract_I1.kt")
                public void testAnyInterfaceMethodAbstract_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract/anyInterfaceMethodAbstract_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodAbstract_I1_I2.kt")
                public void testAnyInterfaceMethodAbstract_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract/anyInterfaceMethodAbstract_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodAbstract_I1_I2_I3.kt")
                public void testAnyInterfaceMethodAbstract_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract/anyInterfaceMethodAbstract_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodAbstract_I1_I2_I3_O2.kt")
                public void testAnyInterfaceMethodAbstract_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract/anyInterfaceMethodAbstract_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodAbstract_I1_I2_O1.kt")
                public void testAnyInterfaceMethodAbstract_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract/anyInterfaceMethodAbstract_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodAbstract_I1_I2_O1_I3.kt")
                public void testAnyInterfaceMethodAbstract_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract/anyInterfaceMethodAbstract_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodAbstract_I1_I2_O1_I3_O2.kt")
                public void testAnyInterfaceMethodAbstract_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract/anyInterfaceMethodAbstract_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodAbstract_I1_I2_O1_O2.kt")
                public void testAnyInterfaceMethodAbstract_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract/anyInterfaceMethodAbstract_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodAbstract_I1_I2_O2.kt")
                public void testAnyInterfaceMethodAbstract_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract/anyInterfaceMethodAbstract_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodAbstract_I1_I3.kt")
                public void testAnyInterfaceMethodAbstract_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract/anyInterfaceMethodAbstract_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodAbstract_I1_I3_O2.kt")
                public void testAnyInterfaceMethodAbstract_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract/anyInterfaceMethodAbstract_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodAbstract_I1_O1.kt")
                public void testAnyInterfaceMethodAbstract_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract/anyInterfaceMethodAbstract_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodAbstract_I1_O1_I3.kt")
                public void testAnyInterfaceMethodAbstract_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract/anyInterfaceMethodAbstract_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodAbstract_I1_O1_I3_O2.kt")
                public void testAnyInterfaceMethodAbstract_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract/anyInterfaceMethodAbstract_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodAbstract_I1_O1_O2.kt")
                public void testAnyInterfaceMethodAbstract_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract/anyInterfaceMethodAbstract_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodAbstract_I1_O2.kt")
                public void testAnyInterfaceMethodAbstract_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract/anyInterfaceMethodAbstract_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodAbstract_I2_O1.kt")
                public void testAnyInterfaceMethodAbstract_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract/anyInterfaceMethodAbstract_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodAbstract_I2_O1_I3.kt")
                public void testAnyInterfaceMethodAbstract_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract/anyInterfaceMethodAbstract_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodAbstract_I2_O1_I3_O2.kt")
                public void testAnyInterfaceMethodAbstract_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract/anyInterfaceMethodAbstract_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodAbstract_I2_O1_O2.kt")
                public void testAnyInterfaceMethodAbstract_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract/anyInterfaceMethodAbstract_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodAbstract_O1_I3_O2.kt")
                public void testAnyInterfaceMethodAbstract_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodAbstract/anyInterfaceMethodAbstract_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceMethodDefaultAll {
                @Test
                public void testAllFilesPresentInInterfaceMethodDefaultAll() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAllN.kt")
                public void testAnyInterfaceMethodDefaultAllN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAllN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I1.kt")
                public void testAnyInterfaceMethodDefaultAll_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I1_I2.kt")
                public void testAnyInterfaceMethodDefaultAll_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I1_I2_I3.kt")
                public void testAnyInterfaceMethodDefaultAll_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I1_I2_I3_O2.kt")
                public void testAnyInterfaceMethodDefaultAll_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I1_I2_O1.kt")
                public void testAnyInterfaceMethodDefaultAll_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I1_I2_O1_I3.kt")
                public void testAnyInterfaceMethodDefaultAll_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I1_I2_O1_I3_O2.kt")
                public void testAnyInterfaceMethodDefaultAll_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I1_I2_O1_O2.kt")
                public void testAnyInterfaceMethodDefaultAll_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I1_I2_O2.kt")
                public void testAnyInterfaceMethodDefaultAll_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I1_I3.kt")
                public void testAnyInterfaceMethodDefaultAll_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I1_I3_O2.kt")
                public void testAnyInterfaceMethodDefaultAll_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I1_O1.kt")
                public void testAnyInterfaceMethodDefaultAll_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I1_O1_I3.kt")
                public void testAnyInterfaceMethodDefaultAll_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I1_O1_I3_O2.kt")
                public void testAnyInterfaceMethodDefaultAll_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I1_O1_O2.kt")
                public void testAnyInterfaceMethodDefaultAll_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I1_O2.kt")
                public void testAnyInterfaceMethodDefaultAll_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I2.kt")
                public void testAnyInterfaceMethodDefaultAll_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I2_I3.kt")
                public void testAnyInterfaceMethodDefaultAll_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I2_I3_O2.kt")
                public void testAnyInterfaceMethodDefaultAll_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I2_O1.kt")
                public void testAnyInterfaceMethodDefaultAll_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I2_O1_I3.kt")
                public void testAnyInterfaceMethodDefaultAll_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I2_O1_I3_O2.kt")
                public void testAnyInterfaceMethodDefaultAll_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I2_O1_O2.kt")
                public void testAnyInterfaceMethodDefaultAll_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I2_O2.kt")
                public void testAnyInterfaceMethodDefaultAll_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I3.kt")
                public void testAnyInterfaceMethodDefaultAll_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_I3_O2.kt")
                public void testAnyInterfaceMethodDefaultAll_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_O1.kt")
                public void testAnyInterfaceMethodDefaultAll_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_O1_I3.kt")
                public void testAnyInterfaceMethodDefaultAll_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_O1_I3_O2.kt")
                public void testAnyInterfaceMethodDefaultAll_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_O1_O2.kt")
                public void testAnyInterfaceMethodDefaultAll_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultAll_O2.kt")
                public void testAnyInterfaceMethodDefaultAll_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultAll/anyInterfaceMethodDefaultAll_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceMethodDefaultDefault {
                @Test
                public void testAllFilesPresentInInterfaceMethodDefaultDefault() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefaultN.kt")
                public void testAnyInterfaceMethodDefaultDefaultN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefaultN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I1.kt")
                public void testAnyInterfaceMethodDefaultDefault_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I1_I2.kt")
                public void testAnyInterfaceMethodDefaultDefault_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I1_I2_I3.kt")
                public void testAnyInterfaceMethodDefaultDefault_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I1_I2_I3_O2.kt")
                public void testAnyInterfaceMethodDefaultDefault_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I1_I2_O1.kt")
                public void testAnyInterfaceMethodDefaultDefault_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I1_I2_O1_I3.kt")
                public void testAnyInterfaceMethodDefaultDefault_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I1_I2_O1_I3_O2.kt")
                public void testAnyInterfaceMethodDefaultDefault_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I1_I2_O1_O2.kt")
                public void testAnyInterfaceMethodDefaultDefault_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I1_I2_O2.kt")
                public void testAnyInterfaceMethodDefaultDefault_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I1_I3.kt")
                public void testAnyInterfaceMethodDefaultDefault_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I1_I3_O2.kt")
                public void testAnyInterfaceMethodDefaultDefault_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I1_O1.kt")
                public void testAnyInterfaceMethodDefaultDefault_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I1_O1_I3.kt")
                public void testAnyInterfaceMethodDefaultDefault_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I1_O1_I3_O2.kt")
                public void testAnyInterfaceMethodDefaultDefault_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I1_O1_O2.kt")
                public void testAnyInterfaceMethodDefaultDefault_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I1_O2.kt")
                public void testAnyInterfaceMethodDefaultDefault_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I2.kt")
                public void testAnyInterfaceMethodDefaultDefault_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I2_I3.kt")
                public void testAnyInterfaceMethodDefaultDefault_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I2_I3_O2.kt")
                public void testAnyInterfaceMethodDefaultDefault_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I2_O1.kt")
                public void testAnyInterfaceMethodDefaultDefault_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I2_O1_I3.kt")
                public void testAnyInterfaceMethodDefaultDefault_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I2_O1_I3_O2.kt")
                public void testAnyInterfaceMethodDefaultDefault_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I2_O1_O2.kt")
                public void testAnyInterfaceMethodDefaultDefault_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I2_O2.kt")
                public void testAnyInterfaceMethodDefaultDefault_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I3.kt")
                public void testAnyInterfaceMethodDefaultDefault_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_I3_O2.kt")
                public void testAnyInterfaceMethodDefaultDefault_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_O1.kt")
                public void testAnyInterfaceMethodDefaultDefault_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_O1_I3.kt")
                public void testAnyInterfaceMethodDefaultDefault_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_O1_I3_O2.kt")
                public void testAnyInterfaceMethodDefaultDefault_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_O1_O2.kt")
                public void testAnyInterfaceMethodDefaultDefault_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceMethodDefaultDefault_O2.kt")
                public void testAnyInterfaceMethodDefaultDefault_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceMethodDefaultDefault/anyInterfaceMethodDefaultDefault_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceValAbstract {
                @Test
                public void testAllFilesPresentInInterfaceValAbstract() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyInterfaceValAbstract_I1.kt")
                public void testAnyInterfaceValAbstract_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract/anyInterfaceValAbstract_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValAbstract_I1_I2.kt")
                public void testAnyInterfaceValAbstract_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract/anyInterfaceValAbstract_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValAbstract_I1_I2_I3.kt")
                public void testAnyInterfaceValAbstract_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract/anyInterfaceValAbstract_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValAbstract_I1_I2_I3_O2.kt")
                public void testAnyInterfaceValAbstract_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract/anyInterfaceValAbstract_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValAbstract_I1_I2_O1.kt")
                public void testAnyInterfaceValAbstract_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract/anyInterfaceValAbstract_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValAbstract_I1_I2_O1_I3.kt")
                public void testAnyInterfaceValAbstract_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract/anyInterfaceValAbstract_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValAbstract_I1_I2_O1_I3_O2.kt")
                public void testAnyInterfaceValAbstract_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract/anyInterfaceValAbstract_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValAbstract_I1_I2_O1_O2.kt")
                public void testAnyInterfaceValAbstract_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract/anyInterfaceValAbstract_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValAbstract_I1_I2_O2.kt")
                public void testAnyInterfaceValAbstract_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract/anyInterfaceValAbstract_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValAbstract_I1_I3.kt")
                public void testAnyInterfaceValAbstract_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract/anyInterfaceValAbstract_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValAbstract_I1_I3_O2.kt")
                public void testAnyInterfaceValAbstract_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract/anyInterfaceValAbstract_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValAbstract_I1_O1.kt")
                public void testAnyInterfaceValAbstract_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract/anyInterfaceValAbstract_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValAbstract_I1_O1_I3.kt")
                public void testAnyInterfaceValAbstract_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract/anyInterfaceValAbstract_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValAbstract_I1_O1_I3_O2.kt")
                public void testAnyInterfaceValAbstract_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract/anyInterfaceValAbstract_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValAbstract_I1_O1_O2.kt")
                public void testAnyInterfaceValAbstract_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract/anyInterfaceValAbstract_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValAbstract_I1_O2.kt")
                public void testAnyInterfaceValAbstract_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract/anyInterfaceValAbstract_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValAbstract_I2_O1.kt")
                public void testAnyInterfaceValAbstract_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract/anyInterfaceValAbstract_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValAbstract_I2_O1_I3.kt")
                public void testAnyInterfaceValAbstract_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract/anyInterfaceValAbstract_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValAbstract_I2_O1_I3_O2.kt")
                public void testAnyInterfaceValAbstract_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract/anyInterfaceValAbstract_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValAbstract_I2_O1_O2.kt")
                public void testAnyInterfaceValAbstract_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract/anyInterfaceValAbstract_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValAbstract_O1_I3_O2.kt")
                public void testAnyInterfaceValAbstract_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValAbstract/anyInterfaceValAbstract_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceValDefaultAll {
                @Test
                public void testAllFilesPresentInInterfaceValDefaultAll() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAllN.kt")
                public void testAnyInterfaceValDefaultAllN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAllN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I1.kt")
                public void testAnyInterfaceValDefaultAll_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I1_I2.kt")
                public void testAnyInterfaceValDefaultAll_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I1_I2_I3.kt")
                public void testAnyInterfaceValDefaultAll_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I1_I2_I3_O2.kt")
                public void testAnyInterfaceValDefaultAll_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I1_I2_O1.kt")
                public void testAnyInterfaceValDefaultAll_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I1_I2_O1_I3.kt")
                public void testAnyInterfaceValDefaultAll_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I1_I2_O1_I3_O2.kt")
                public void testAnyInterfaceValDefaultAll_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I1_I2_O1_O2.kt")
                public void testAnyInterfaceValDefaultAll_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I1_I2_O2.kt")
                public void testAnyInterfaceValDefaultAll_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I1_I3.kt")
                public void testAnyInterfaceValDefaultAll_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I1_I3_O2.kt")
                public void testAnyInterfaceValDefaultAll_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I1_O1.kt")
                public void testAnyInterfaceValDefaultAll_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I1_O1_I3.kt")
                public void testAnyInterfaceValDefaultAll_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I1_O1_I3_O2.kt")
                public void testAnyInterfaceValDefaultAll_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I1_O1_O2.kt")
                public void testAnyInterfaceValDefaultAll_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I1_O2.kt")
                public void testAnyInterfaceValDefaultAll_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I2.kt")
                public void testAnyInterfaceValDefaultAll_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I2_I3.kt")
                public void testAnyInterfaceValDefaultAll_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I2_I3_O2.kt")
                public void testAnyInterfaceValDefaultAll_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I2_O1.kt")
                public void testAnyInterfaceValDefaultAll_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I2_O1_I3.kt")
                public void testAnyInterfaceValDefaultAll_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I2_O1_I3_O2.kt")
                public void testAnyInterfaceValDefaultAll_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I2_O1_O2.kt")
                public void testAnyInterfaceValDefaultAll_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I2_O2.kt")
                public void testAnyInterfaceValDefaultAll_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I3.kt")
                public void testAnyInterfaceValDefaultAll_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_I3_O2.kt")
                public void testAnyInterfaceValDefaultAll_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_O1.kt")
                public void testAnyInterfaceValDefaultAll_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_O1_I3.kt")
                public void testAnyInterfaceValDefaultAll_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_O1_I3_O2.kt")
                public void testAnyInterfaceValDefaultAll_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_O1_O2.kt")
                public void testAnyInterfaceValDefaultAll_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultAll_O2.kt")
                public void testAnyInterfaceValDefaultAll_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultAll/anyInterfaceValDefaultAll_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceValDefaultDefault {
                @Test
                public void testAllFilesPresentInInterfaceValDefaultDefault() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefaultN.kt")
                public void testAnyInterfaceValDefaultDefaultN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefaultN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I1.kt")
                public void testAnyInterfaceValDefaultDefault_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I1_I2.kt")
                public void testAnyInterfaceValDefaultDefault_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I1_I2_I3.kt")
                public void testAnyInterfaceValDefaultDefault_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I1_I2_I3_O2.kt")
                public void testAnyInterfaceValDefaultDefault_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I1_I2_O1.kt")
                public void testAnyInterfaceValDefaultDefault_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I1_I2_O1_I3.kt")
                public void testAnyInterfaceValDefaultDefault_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I1_I2_O1_I3_O2.kt")
                public void testAnyInterfaceValDefaultDefault_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I1_I2_O1_O2.kt")
                public void testAnyInterfaceValDefaultDefault_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I1_I2_O2.kt")
                public void testAnyInterfaceValDefaultDefault_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I1_I3.kt")
                public void testAnyInterfaceValDefaultDefault_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I1_I3_O2.kt")
                public void testAnyInterfaceValDefaultDefault_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I1_O1.kt")
                public void testAnyInterfaceValDefaultDefault_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I1_O1_I3.kt")
                public void testAnyInterfaceValDefaultDefault_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I1_O1_I3_O2.kt")
                public void testAnyInterfaceValDefaultDefault_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I1_O1_O2.kt")
                public void testAnyInterfaceValDefaultDefault_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I1_O2.kt")
                public void testAnyInterfaceValDefaultDefault_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I2.kt")
                public void testAnyInterfaceValDefaultDefault_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I2_I3.kt")
                public void testAnyInterfaceValDefaultDefault_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I2_I3_O2.kt")
                public void testAnyInterfaceValDefaultDefault_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I2_O1.kt")
                public void testAnyInterfaceValDefaultDefault_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I2_O1_I3.kt")
                public void testAnyInterfaceValDefaultDefault_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I2_O1_I3_O2.kt")
                public void testAnyInterfaceValDefaultDefault_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I2_O1_O2.kt")
                public void testAnyInterfaceValDefaultDefault_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I2_O2.kt")
                public void testAnyInterfaceValDefaultDefault_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I3.kt")
                public void testAnyInterfaceValDefaultDefault_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_I3_O2.kt")
                public void testAnyInterfaceValDefaultDefault_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_O1.kt")
                public void testAnyInterfaceValDefaultDefault_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_O1_I3.kt")
                public void testAnyInterfaceValDefaultDefault_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_O1_I3_O2.kt")
                public void testAnyInterfaceValDefaultDefault_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_O1_O2.kt")
                public void testAnyInterfaceValDefaultDefault_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyInterfaceValDefaultDefault_O2.kt")
                public void testAnyInterfaceValDefaultDefault_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/interfaceValDefaultDefault/anyInterfaceValDefaultDefault_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/any/methodBottom")
            @TestDataPath("$PROJECT_ROOT")
            public class MethodBottom {
                @Test
                public void testAllFilesPresentInMethodBottom() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/any/methodBottom"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyMethodBottom_I3_O2.kt")
                public void testAnyMethodBottom_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/methodBottom/anyMethodBottom_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyMethodBottom_O1.kt")
                public void testAnyMethodBottom_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/methodBottom/anyMethodBottom_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyMethodBottom_O1_I3.kt")
                public void testAnyMethodBottom_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/methodBottom/anyMethodBottom_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyMethodBottom_O1_I3_O2.kt")
                public void testAnyMethodBottom_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/methodBottom/anyMethodBottom_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyMethodBottom_O1_O2.kt")
                public void testAnyMethodBottom_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/methodBottom/anyMethodBottom_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethod")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenMethod {
                @Test
                public void testAllFilesPresentInOpenMethod() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethod"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyOpenMethod_I1.kt")
                public void testAnyOpenMethod_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethod/anyOpenMethod_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenMethod_I1_I2.kt")
                public void testAnyOpenMethod_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethod/anyOpenMethod_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenMethod_I1_I2_I3.kt")
                public void testAnyOpenMethod_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethod/anyOpenMethod_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenMethod_I1_I2_I3_O2.kt")
                public void testAnyOpenMethod_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethod/anyOpenMethod_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenMethod_I1_I2_O1.kt")
                public void testAnyOpenMethod_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethod/anyOpenMethod_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenMethod_I1_I2_O1_I3.kt")
                public void testAnyOpenMethod_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethod/anyOpenMethod_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenMethod_I1_I2_O1_I3_O2.kt")
                public void testAnyOpenMethod_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethod/anyOpenMethod_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenMethod_I1_I2_O1_O2.kt")
                public void testAnyOpenMethod_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethod/anyOpenMethod_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenMethod_I1_I2_O2.kt")
                public void testAnyOpenMethod_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethod/anyOpenMethod_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenMethod_I1_I3.kt")
                public void testAnyOpenMethod_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethod/anyOpenMethod_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenMethod_I1_I3_O2.kt")
                public void testAnyOpenMethod_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethod/anyOpenMethod_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenMethod_I1_O1.kt")
                public void testAnyOpenMethod_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethod/anyOpenMethod_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenMethod_I1_O1_I3.kt")
                public void testAnyOpenMethod_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethod/anyOpenMethod_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenMethod_I1_O1_I3_O2.kt")
                public void testAnyOpenMethod_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethod/anyOpenMethod_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenMethod_I1_O1_O2.kt")
                public void testAnyOpenMethod_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethod/anyOpenMethod_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenMethod_I1_O2.kt")
                public void testAnyOpenMethod_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethod/anyOpenMethod_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethodMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenMethodMiddle {
                @Test
                public void testAllFilesPresentInOpenMethodMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethodMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyOpenMethodMiddle_I2.kt")
                public void testAnyOpenMethodMiddle_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethodMiddle/anyOpenMethodMiddle_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenMethodMiddle_I2_I3.kt")
                public void testAnyOpenMethodMiddle_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethodMiddle/anyOpenMethodMiddle_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenMethodMiddle_I2_I3_O2.kt")
                public void testAnyOpenMethodMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethodMiddle/anyOpenMethodMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenMethodMiddle_I2_O2.kt")
                public void testAnyOpenMethodMiddle_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openMethodMiddle/anyOpenMethodMiddle_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openVal")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenVal {
                @Test
                public void testAllFilesPresentInOpenVal() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openVal"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyOpenVal_I1.kt")
                public void testAnyOpenVal_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openVal/anyOpenVal_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenVal_I1_I2.kt")
                public void testAnyOpenVal_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openVal/anyOpenVal_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenVal_I1_I2_I3.kt")
                public void testAnyOpenVal_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openVal/anyOpenVal_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenVal_I1_I2_I3_O2.kt")
                public void testAnyOpenVal_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openVal/anyOpenVal_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenVal_I1_I2_O1.kt")
                public void testAnyOpenVal_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openVal/anyOpenVal_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenVal_I1_I2_O1_I3.kt")
                public void testAnyOpenVal_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openVal/anyOpenVal_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenVal_I1_I2_O1_I3_O2.kt")
                public void testAnyOpenVal_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openVal/anyOpenVal_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenVal_I1_I2_O1_O2.kt")
                public void testAnyOpenVal_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openVal/anyOpenVal_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenVal_I1_I2_O2.kt")
                public void testAnyOpenVal_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openVal/anyOpenVal_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenVal_I1_I3.kt")
                public void testAnyOpenVal_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openVal/anyOpenVal_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenVal_I1_I3_O2.kt")
                public void testAnyOpenVal_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openVal/anyOpenVal_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenVal_I1_O1.kt")
                public void testAnyOpenVal_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openVal/anyOpenVal_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenVal_I1_O1_I3.kt")
                public void testAnyOpenVal_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openVal/anyOpenVal_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenVal_I1_O1_I3_O2.kt")
                public void testAnyOpenVal_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openVal/anyOpenVal_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenVal_I1_O1_O2.kt")
                public void testAnyOpenVal_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openVal/anyOpenVal_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenVal_I1_O2.kt")
                public void testAnyOpenVal_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openVal/anyOpenVal_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openValMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenValMiddle {
                @Test
                public void testAllFilesPresentInOpenValMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openValMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyOpenValMiddle_I2.kt")
                public void testAnyOpenValMiddle_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openValMiddle/anyOpenValMiddle_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenValMiddle_I2_I3.kt")
                public void testAnyOpenValMiddle_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openValMiddle/anyOpenValMiddle_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenValMiddle_I2_I3_O2.kt")
                public void testAnyOpenValMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openValMiddle/anyOpenValMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyOpenValMiddle_I2_O2.kt")
                public void testAnyOpenValMiddle_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/openValMiddle/anyOpenValMiddle_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString")
            @TestDataPath("$PROJECT_ROOT")
            public class ToString {
                @Test
                public void testAllFilesPresentInToString() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyToStringN.kt")
                public void testAnyToStringN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToStringN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I1.kt")
                public void testAnyToString_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I1_I2.kt")
                public void testAnyToString_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I1_I2_I3.kt")
                public void testAnyToString_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I1_I2_I3_O2.kt")
                public void testAnyToString_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I1_I2_O1.kt")
                public void testAnyToString_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I1_I2_O1_I3.kt")
                public void testAnyToString_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I1_I2_O1_I3_O2.kt")
                public void testAnyToString_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I1_I2_O1_O2.kt")
                public void testAnyToString_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I1_I2_O2.kt")
                public void testAnyToString_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I1_I3.kt")
                public void testAnyToString_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I1_I3_O2.kt")
                public void testAnyToString_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I1_O1.kt")
                public void testAnyToString_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I1_O1_I3.kt")
                public void testAnyToString_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I1_O1_I3_O2.kt")
                public void testAnyToString_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I1_O1_O2.kt")
                public void testAnyToString_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I1_O2.kt")
                public void testAnyToString_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I2.kt")
                public void testAnyToString_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I2_I3.kt")
                public void testAnyToString_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I2_I3_O2.kt")
                public void testAnyToString_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I2_O1.kt")
                public void testAnyToString_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I2_O1_I3.kt")
                public void testAnyToString_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I2_O1_I3_O2.kt")
                public void testAnyToString_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I2_O1_O2.kt")
                public void testAnyToString_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I2_O2.kt")
                public void testAnyToString_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I3.kt")
                public void testAnyToString_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_I3_O2.kt")
                public void testAnyToString_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_O1.kt")
                public void testAnyToString_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_O1_I3.kt")
                public void testAnyToString_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_O1_I3_O2.kt")
                public void testAnyToString_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_O1_O2.kt")
                public void testAnyToString_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyToString_O2.kt")
                public void testAnyToString_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/toString/anyToString_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/any/valBottom")
            @TestDataPath("$PROJECT_ROOT")
            public class ValBottom {
                @Test
                public void testAllFilesPresentInValBottom() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/any/valBottom"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyValBottom_I3_O2.kt")
                public void testAnyValBottom_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/valBottom/anyValBottom_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyValBottom_O1.kt")
                public void testAnyValBottom_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/valBottom/anyValBottom_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyValBottom_O1_I3.kt")
                public void testAnyValBottom_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/valBottom/anyValBottom_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyValBottom_O1_I3_O2.kt")
                public void testAnyValBottom_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/valBottom/anyValBottom_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyValBottom_O1_O2.kt")
                public void testAnyValBottom_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/any/valBottom/anyValBottom_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }
        }

        @Nested
        @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN")
        @TestDataPath("$PROJECT_ROOT")
        public class AnyN {
            @Test
            public void testAllFilesPresentInAnyN() throws Exception {
                KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/abstractMethod")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractMethod {
                @Test
                public void testAllFilesPresentInAbstractMethod() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/abstractMethod"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyNAbstractMethod_I1_I2_O1.kt")
                public void testAnyNAbstractMethod_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/abstractMethod/anyNAbstractMethod_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNAbstractMethod_I1_I2_O1_I3.kt")
                public void testAnyNAbstractMethod_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/abstractMethod/anyNAbstractMethod_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNAbstractMethod_I1_I2_O1_I3_O2.kt")
                public void testAnyNAbstractMethod_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/abstractMethod/anyNAbstractMethod_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNAbstractMethod_I1_I2_O1_O2.kt")
                public void testAnyNAbstractMethod_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/abstractMethod/anyNAbstractMethod_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNAbstractMethod_I1_O1_I3_O2.kt")
                public void testAnyNAbstractMethod_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/abstractMethod/anyNAbstractMethod_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/abstractMethodMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractMethodMiddle {
                @Test
                public void testAllFilesPresentInAbstractMethodMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/abstractMethodMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyNAbstractMethodMiddle_I2_I3_O2.kt")
                public void testAnyNAbstractMethodMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/abstractMethodMiddle/anyNAbstractMethodMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/abstractVal")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractVal {
                @Test
                public void testAllFilesPresentInAbstractVal() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/abstractVal"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyNAbstractVal_I1_I2_O1.kt")
                public void testAnyNAbstractVal_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/abstractVal/anyNAbstractVal_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNAbstractVal_I1_I2_O1_I3.kt")
                public void testAnyNAbstractVal_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/abstractVal/anyNAbstractVal_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNAbstractVal_I1_I2_O1_I3_O2.kt")
                public void testAnyNAbstractVal_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/abstractVal/anyNAbstractVal_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNAbstractVal_I1_I2_O1_O2.kt")
                public void testAnyNAbstractVal_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/abstractVal/anyNAbstractVal_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNAbstractVal_I1_O1_I3_O2.kt")
                public void testAnyNAbstractVal_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/abstractVal/anyNAbstractVal_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/abstractValMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractValMiddle {
                @Test
                public void testAllFilesPresentInAbstractValMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/abstractValMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyNAbstractValMiddle_I2_I3_O2.kt")
                public void testAnyNAbstractValMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/abstractValMiddle/anyNAbstractValMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode")
            @TestDataPath("$PROJECT_ROOT")
            public class HashCode {
                @Test
                public void testAllFilesPresentInHashCode() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyNHashCodeN.kt")
                public void testAnyNHashCodeN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCodeN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I1.kt")
                public void testAnyNHashCode_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I1_I2.kt")
                public void testAnyNHashCode_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I1_I2_I3.kt")
                public void testAnyNHashCode_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I1_I2_I3_O2.kt")
                public void testAnyNHashCode_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I1_I2_O1.kt")
                public void testAnyNHashCode_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I1_I2_O1_I3.kt")
                public void testAnyNHashCode_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I1_I2_O1_I3_O2.kt")
                public void testAnyNHashCode_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I1_I2_O1_O2.kt")
                public void testAnyNHashCode_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I1_I2_O2.kt")
                public void testAnyNHashCode_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I1_I3.kt")
                public void testAnyNHashCode_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I1_I3_O2.kt")
                public void testAnyNHashCode_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I1_O1.kt")
                public void testAnyNHashCode_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I1_O1_I3.kt")
                public void testAnyNHashCode_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I1_O1_I3_O2.kt")
                public void testAnyNHashCode_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I1_O1_O2.kt")
                public void testAnyNHashCode_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I1_O2.kt")
                public void testAnyNHashCode_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I2.kt")
                public void testAnyNHashCode_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I2_I3.kt")
                public void testAnyNHashCode_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I2_I3_O2.kt")
                public void testAnyNHashCode_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I2_O1.kt")
                public void testAnyNHashCode_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I2_O1_I3.kt")
                public void testAnyNHashCode_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I2_O1_I3_O2.kt")
                public void testAnyNHashCode_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I2_O1_O2.kt")
                public void testAnyNHashCode_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I2_O2.kt")
                public void testAnyNHashCode_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I3.kt")
                public void testAnyNHashCode_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_I3_O2.kt")
                public void testAnyNHashCode_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_O1.kt")
                public void testAnyNHashCode_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_O1_I3.kt")
                public void testAnyNHashCode_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_O1_I3_O2.kt")
                public void testAnyNHashCode_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_O1_O2.kt")
                public void testAnyNHashCode_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNHashCode_O2.kt")
                public void testAnyNHashCode_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/hashCode/anyNHashCode_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceMethodAbstract {
                @Test
                public void testAllFilesPresentInInterfaceMethodAbstract() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyNInterfaceMethodAbstract_I1.kt")
                public void testAnyNInterfaceMethodAbstract_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract/anyNInterfaceMethodAbstract_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodAbstract_I1_I2.kt")
                public void testAnyNInterfaceMethodAbstract_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract/anyNInterfaceMethodAbstract_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodAbstract_I1_I2_I3.kt")
                public void testAnyNInterfaceMethodAbstract_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract/anyNInterfaceMethodAbstract_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodAbstract_I1_I2_I3_O2.kt")
                public void testAnyNInterfaceMethodAbstract_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract/anyNInterfaceMethodAbstract_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodAbstract_I1_I2_O1.kt")
                public void testAnyNInterfaceMethodAbstract_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract/anyNInterfaceMethodAbstract_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodAbstract_I1_I2_O1_I3.kt")
                public void testAnyNInterfaceMethodAbstract_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract/anyNInterfaceMethodAbstract_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodAbstract_I1_I2_O1_I3_O2.kt")
                public void testAnyNInterfaceMethodAbstract_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract/anyNInterfaceMethodAbstract_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodAbstract_I1_I2_O1_O2.kt")
                public void testAnyNInterfaceMethodAbstract_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract/anyNInterfaceMethodAbstract_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodAbstract_I1_I2_O2.kt")
                public void testAnyNInterfaceMethodAbstract_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract/anyNInterfaceMethodAbstract_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodAbstract_I1_I3.kt")
                public void testAnyNInterfaceMethodAbstract_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract/anyNInterfaceMethodAbstract_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodAbstract_I1_I3_O2.kt")
                public void testAnyNInterfaceMethodAbstract_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract/anyNInterfaceMethodAbstract_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodAbstract_I1_O1.kt")
                public void testAnyNInterfaceMethodAbstract_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract/anyNInterfaceMethodAbstract_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodAbstract_I1_O1_I3.kt")
                public void testAnyNInterfaceMethodAbstract_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract/anyNInterfaceMethodAbstract_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodAbstract_I1_O1_I3_O2.kt")
                public void testAnyNInterfaceMethodAbstract_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract/anyNInterfaceMethodAbstract_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodAbstract_I1_O1_O2.kt")
                public void testAnyNInterfaceMethodAbstract_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract/anyNInterfaceMethodAbstract_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodAbstract_I1_O2.kt")
                public void testAnyNInterfaceMethodAbstract_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract/anyNInterfaceMethodAbstract_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodAbstract_I2_O1.kt")
                public void testAnyNInterfaceMethodAbstract_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract/anyNInterfaceMethodAbstract_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodAbstract_I2_O1_I3.kt")
                public void testAnyNInterfaceMethodAbstract_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract/anyNInterfaceMethodAbstract_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodAbstract_I2_O1_I3_O2.kt")
                public void testAnyNInterfaceMethodAbstract_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract/anyNInterfaceMethodAbstract_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodAbstract_I2_O1_O2.kt")
                public void testAnyNInterfaceMethodAbstract_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract/anyNInterfaceMethodAbstract_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodAbstract_O1_I3_O2.kt")
                public void testAnyNInterfaceMethodAbstract_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodAbstract/anyNInterfaceMethodAbstract_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceMethodDefaultAll {
                @Test
                public void testAllFilesPresentInInterfaceMethodDefaultAll() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAllN.kt")
                public void testAnyNInterfaceMethodDefaultAllN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAllN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I1.kt")
                public void testAnyNInterfaceMethodDefaultAll_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I1_I2.kt")
                public void testAnyNInterfaceMethodDefaultAll_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I1_I2_I3.kt")
                public void testAnyNInterfaceMethodDefaultAll_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I1_I2_I3_O2.kt")
                public void testAnyNInterfaceMethodDefaultAll_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I1_I2_O1.kt")
                public void testAnyNInterfaceMethodDefaultAll_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I1_I2_O1_I3.kt")
                public void testAnyNInterfaceMethodDefaultAll_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I1_I2_O1_I3_O2.kt")
                public void testAnyNInterfaceMethodDefaultAll_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I1_I2_O1_O2.kt")
                public void testAnyNInterfaceMethodDefaultAll_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I1_I2_O2.kt")
                public void testAnyNInterfaceMethodDefaultAll_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I1_I3.kt")
                public void testAnyNInterfaceMethodDefaultAll_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I1_I3_O2.kt")
                public void testAnyNInterfaceMethodDefaultAll_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I1_O1.kt")
                public void testAnyNInterfaceMethodDefaultAll_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I1_O1_I3.kt")
                public void testAnyNInterfaceMethodDefaultAll_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I1_O1_I3_O2.kt")
                public void testAnyNInterfaceMethodDefaultAll_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I1_O1_O2.kt")
                public void testAnyNInterfaceMethodDefaultAll_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I1_O2.kt")
                public void testAnyNInterfaceMethodDefaultAll_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I2.kt")
                public void testAnyNInterfaceMethodDefaultAll_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I2_I3.kt")
                public void testAnyNInterfaceMethodDefaultAll_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I2_I3_O2.kt")
                public void testAnyNInterfaceMethodDefaultAll_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I2_O1.kt")
                public void testAnyNInterfaceMethodDefaultAll_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I2_O1_I3.kt")
                public void testAnyNInterfaceMethodDefaultAll_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I2_O1_I3_O2.kt")
                public void testAnyNInterfaceMethodDefaultAll_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I2_O1_O2.kt")
                public void testAnyNInterfaceMethodDefaultAll_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I2_O2.kt")
                public void testAnyNInterfaceMethodDefaultAll_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I3.kt")
                public void testAnyNInterfaceMethodDefaultAll_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_I3_O2.kt")
                public void testAnyNInterfaceMethodDefaultAll_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_O1.kt")
                public void testAnyNInterfaceMethodDefaultAll_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_O1_I3.kt")
                public void testAnyNInterfaceMethodDefaultAll_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_O1_I3_O2.kt")
                public void testAnyNInterfaceMethodDefaultAll_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_O1_O2.kt")
                public void testAnyNInterfaceMethodDefaultAll_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultAll_O2.kt")
                public void testAnyNInterfaceMethodDefaultAll_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultAll/anyNInterfaceMethodDefaultAll_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceMethodDefaultDefault {
                @Test
                public void testAllFilesPresentInInterfaceMethodDefaultDefault() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefaultN.kt")
                public void testAnyNInterfaceMethodDefaultDefaultN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefaultN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I1.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I1_I2.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I1_I2_I3.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I1_I2_I3_O2.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I1_I2_O1.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I1_I2_O1_I3.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I1_I2_O1_I3_O2.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I1_I2_O1_O2.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I1_I2_O2.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I1_I3.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I1_I3_O2.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I1_O1.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I1_O1_I3.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I1_O1_I3_O2.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I1_O1_O2.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I1_O2.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I2.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I2_I3.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I2_I3_O2.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I2_O1.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I2_O1_I3.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I2_O1_I3_O2.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I2_O1_O2.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I2_O2.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I3.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_I3_O2.kt")
                public void testAnyNInterfaceMethodDefaultDefault_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_O1.kt")
                public void testAnyNInterfaceMethodDefaultDefault_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_O1_I3.kt")
                public void testAnyNInterfaceMethodDefaultDefault_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_O1_I3_O2.kt")
                public void testAnyNInterfaceMethodDefaultDefault_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_O1_O2.kt")
                public void testAnyNInterfaceMethodDefaultDefault_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceMethodDefaultDefault_O2.kt")
                public void testAnyNInterfaceMethodDefaultDefault_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceMethodDefaultDefault/anyNInterfaceMethodDefaultDefault_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceValAbstract {
                @Test
                public void testAllFilesPresentInInterfaceValAbstract() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyNInterfaceValAbstract_I1.kt")
                public void testAnyNInterfaceValAbstract_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract/anyNInterfaceValAbstract_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValAbstract_I1_I2.kt")
                public void testAnyNInterfaceValAbstract_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract/anyNInterfaceValAbstract_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValAbstract_I1_I2_I3.kt")
                public void testAnyNInterfaceValAbstract_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract/anyNInterfaceValAbstract_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValAbstract_I1_I2_I3_O2.kt")
                public void testAnyNInterfaceValAbstract_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract/anyNInterfaceValAbstract_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValAbstract_I1_I2_O1.kt")
                public void testAnyNInterfaceValAbstract_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract/anyNInterfaceValAbstract_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValAbstract_I1_I2_O1_I3.kt")
                public void testAnyNInterfaceValAbstract_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract/anyNInterfaceValAbstract_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValAbstract_I1_I2_O1_I3_O2.kt")
                public void testAnyNInterfaceValAbstract_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract/anyNInterfaceValAbstract_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValAbstract_I1_I2_O1_O2.kt")
                public void testAnyNInterfaceValAbstract_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract/anyNInterfaceValAbstract_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValAbstract_I1_I2_O2.kt")
                public void testAnyNInterfaceValAbstract_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract/anyNInterfaceValAbstract_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValAbstract_I1_I3.kt")
                public void testAnyNInterfaceValAbstract_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract/anyNInterfaceValAbstract_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValAbstract_I1_I3_O2.kt")
                public void testAnyNInterfaceValAbstract_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract/anyNInterfaceValAbstract_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValAbstract_I1_O1.kt")
                public void testAnyNInterfaceValAbstract_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract/anyNInterfaceValAbstract_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValAbstract_I1_O1_I3.kt")
                public void testAnyNInterfaceValAbstract_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract/anyNInterfaceValAbstract_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValAbstract_I1_O1_I3_O2.kt")
                public void testAnyNInterfaceValAbstract_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract/anyNInterfaceValAbstract_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValAbstract_I1_O1_O2.kt")
                public void testAnyNInterfaceValAbstract_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract/anyNInterfaceValAbstract_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValAbstract_I1_O2.kt")
                public void testAnyNInterfaceValAbstract_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract/anyNInterfaceValAbstract_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValAbstract_I2_O1.kt")
                public void testAnyNInterfaceValAbstract_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract/anyNInterfaceValAbstract_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValAbstract_I2_O1_I3.kt")
                public void testAnyNInterfaceValAbstract_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract/anyNInterfaceValAbstract_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValAbstract_I2_O1_I3_O2.kt")
                public void testAnyNInterfaceValAbstract_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract/anyNInterfaceValAbstract_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValAbstract_I2_O1_O2.kt")
                public void testAnyNInterfaceValAbstract_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract/anyNInterfaceValAbstract_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValAbstract_O1_I3_O2.kt")
                public void testAnyNInterfaceValAbstract_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValAbstract/anyNInterfaceValAbstract_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceValDefaultAll {
                @Test
                public void testAllFilesPresentInInterfaceValDefaultAll() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAllN.kt")
                public void testAnyNInterfaceValDefaultAllN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAllN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I1.kt")
                public void testAnyNInterfaceValDefaultAll_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I1_I2.kt")
                public void testAnyNInterfaceValDefaultAll_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I1_I2_I3.kt")
                public void testAnyNInterfaceValDefaultAll_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I1_I2_I3_O2.kt")
                public void testAnyNInterfaceValDefaultAll_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I1_I2_O1.kt")
                public void testAnyNInterfaceValDefaultAll_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I1_I2_O1_I3.kt")
                public void testAnyNInterfaceValDefaultAll_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I1_I2_O1_I3_O2.kt")
                public void testAnyNInterfaceValDefaultAll_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I1_I2_O1_O2.kt")
                public void testAnyNInterfaceValDefaultAll_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I1_I2_O2.kt")
                public void testAnyNInterfaceValDefaultAll_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I1_I3.kt")
                public void testAnyNInterfaceValDefaultAll_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I1_I3_O2.kt")
                public void testAnyNInterfaceValDefaultAll_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I1_O1.kt")
                public void testAnyNInterfaceValDefaultAll_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I1_O1_I3.kt")
                public void testAnyNInterfaceValDefaultAll_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I1_O1_I3_O2.kt")
                public void testAnyNInterfaceValDefaultAll_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I1_O1_O2.kt")
                public void testAnyNInterfaceValDefaultAll_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I1_O2.kt")
                public void testAnyNInterfaceValDefaultAll_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I2.kt")
                public void testAnyNInterfaceValDefaultAll_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I2_I3.kt")
                public void testAnyNInterfaceValDefaultAll_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I2_I3_O2.kt")
                public void testAnyNInterfaceValDefaultAll_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I2_O1.kt")
                public void testAnyNInterfaceValDefaultAll_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I2_O1_I3.kt")
                public void testAnyNInterfaceValDefaultAll_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I2_O1_I3_O2.kt")
                public void testAnyNInterfaceValDefaultAll_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I2_O1_O2.kt")
                public void testAnyNInterfaceValDefaultAll_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I2_O2.kt")
                public void testAnyNInterfaceValDefaultAll_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I3.kt")
                public void testAnyNInterfaceValDefaultAll_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_I3_O2.kt")
                public void testAnyNInterfaceValDefaultAll_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_O1.kt")
                public void testAnyNInterfaceValDefaultAll_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_O1_I3.kt")
                public void testAnyNInterfaceValDefaultAll_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_O1_I3_O2.kt")
                public void testAnyNInterfaceValDefaultAll_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_O1_O2.kt")
                public void testAnyNInterfaceValDefaultAll_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultAll_O2.kt")
                public void testAnyNInterfaceValDefaultAll_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultAll/anyNInterfaceValDefaultAll_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceValDefaultDefault {
                @Test
                public void testAllFilesPresentInInterfaceValDefaultDefault() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefaultN.kt")
                public void testAnyNInterfaceValDefaultDefaultN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefaultN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I1.kt")
                public void testAnyNInterfaceValDefaultDefault_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I1_I2.kt")
                public void testAnyNInterfaceValDefaultDefault_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I1_I2_I3.kt")
                public void testAnyNInterfaceValDefaultDefault_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I1_I2_I3_O2.kt")
                public void testAnyNInterfaceValDefaultDefault_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I1_I2_O1.kt")
                public void testAnyNInterfaceValDefaultDefault_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I1_I2_O1_I3.kt")
                public void testAnyNInterfaceValDefaultDefault_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I1_I2_O1_I3_O2.kt")
                public void testAnyNInterfaceValDefaultDefault_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I1_I2_O1_O2.kt")
                public void testAnyNInterfaceValDefaultDefault_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I1_I2_O2.kt")
                public void testAnyNInterfaceValDefaultDefault_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I1_I3.kt")
                public void testAnyNInterfaceValDefaultDefault_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I1_I3_O2.kt")
                public void testAnyNInterfaceValDefaultDefault_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I1_O1.kt")
                public void testAnyNInterfaceValDefaultDefault_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I1_O1_I3.kt")
                public void testAnyNInterfaceValDefaultDefault_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I1_O1_I3_O2.kt")
                public void testAnyNInterfaceValDefaultDefault_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I1_O1_O2.kt")
                public void testAnyNInterfaceValDefaultDefault_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I1_O2.kt")
                public void testAnyNInterfaceValDefaultDefault_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I2.kt")
                public void testAnyNInterfaceValDefaultDefault_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I2_I3.kt")
                public void testAnyNInterfaceValDefaultDefault_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I2_I3_O2.kt")
                public void testAnyNInterfaceValDefaultDefault_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I2_O1.kt")
                public void testAnyNInterfaceValDefaultDefault_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I2_O1_I3.kt")
                public void testAnyNInterfaceValDefaultDefault_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I2_O1_I3_O2.kt")
                public void testAnyNInterfaceValDefaultDefault_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I2_O1_O2.kt")
                public void testAnyNInterfaceValDefaultDefault_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I2_O2.kt")
                public void testAnyNInterfaceValDefaultDefault_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I3.kt")
                public void testAnyNInterfaceValDefaultDefault_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_I3_O2.kt")
                public void testAnyNInterfaceValDefaultDefault_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_O1.kt")
                public void testAnyNInterfaceValDefaultDefault_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_O1_I3.kt")
                public void testAnyNInterfaceValDefaultDefault_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_O1_I3_O2.kt")
                public void testAnyNInterfaceValDefaultDefault_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_O1_O2.kt")
                public void testAnyNInterfaceValDefaultDefault_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNInterfaceValDefaultDefault_O2.kt")
                public void testAnyNInterfaceValDefaultDefault_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/interfaceValDefaultDefault/anyNInterfaceValDefaultDefault_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/methodBottom")
            @TestDataPath("$PROJECT_ROOT")
            public class MethodBottom {
                @Test
                public void testAllFilesPresentInMethodBottom() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/methodBottom"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyNMethodBottom_I3_O2.kt")
                public void testAnyNMethodBottom_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/methodBottom/anyNMethodBottom_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNMethodBottom_O1.kt")
                public void testAnyNMethodBottom_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/methodBottom/anyNMethodBottom_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNMethodBottom_O1_I3.kt")
                public void testAnyNMethodBottom_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/methodBottom/anyNMethodBottom_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNMethodBottom_O1_I3_O2.kt")
                public void testAnyNMethodBottom_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/methodBottom/anyNMethodBottom_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNMethodBottom_O1_O2.kt")
                public void testAnyNMethodBottom_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/methodBottom/anyNMethodBottom_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethod")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenMethod {
                @Test
                public void testAllFilesPresentInOpenMethod() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethod"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyNOpenMethod_I1.kt")
                public void testAnyNOpenMethod_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethod/anyNOpenMethod_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenMethod_I1_I2.kt")
                public void testAnyNOpenMethod_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethod/anyNOpenMethod_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenMethod_I1_I2_I3.kt")
                public void testAnyNOpenMethod_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethod/anyNOpenMethod_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenMethod_I1_I2_I3_O2.kt")
                public void testAnyNOpenMethod_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethod/anyNOpenMethod_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenMethod_I1_I2_O1.kt")
                public void testAnyNOpenMethod_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethod/anyNOpenMethod_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenMethod_I1_I2_O1_I3.kt")
                public void testAnyNOpenMethod_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethod/anyNOpenMethod_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenMethod_I1_I2_O1_I3_O2.kt")
                public void testAnyNOpenMethod_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethod/anyNOpenMethod_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenMethod_I1_I2_O1_O2.kt")
                public void testAnyNOpenMethod_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethod/anyNOpenMethod_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenMethod_I1_I2_O2.kt")
                public void testAnyNOpenMethod_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethod/anyNOpenMethod_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenMethod_I1_I3.kt")
                public void testAnyNOpenMethod_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethod/anyNOpenMethod_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenMethod_I1_I3_O2.kt")
                public void testAnyNOpenMethod_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethod/anyNOpenMethod_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenMethod_I1_O1.kt")
                public void testAnyNOpenMethod_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethod/anyNOpenMethod_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenMethod_I1_O1_I3.kt")
                public void testAnyNOpenMethod_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethod/anyNOpenMethod_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenMethod_I1_O1_I3_O2.kt")
                public void testAnyNOpenMethod_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethod/anyNOpenMethod_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenMethod_I1_O1_O2.kt")
                public void testAnyNOpenMethod_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethod/anyNOpenMethod_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenMethod_I1_O2.kt")
                public void testAnyNOpenMethod_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethod/anyNOpenMethod_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethodMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenMethodMiddle {
                @Test
                public void testAllFilesPresentInOpenMethodMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethodMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyNOpenMethodMiddle_I2.kt")
                public void testAnyNOpenMethodMiddle_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethodMiddle/anyNOpenMethodMiddle_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenMethodMiddle_I2_I3.kt")
                public void testAnyNOpenMethodMiddle_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethodMiddle/anyNOpenMethodMiddle_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenMethodMiddle_I2_I3_O2.kt")
                public void testAnyNOpenMethodMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethodMiddle/anyNOpenMethodMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenMethodMiddle_I2_O2.kt")
                public void testAnyNOpenMethodMiddle_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openMethodMiddle/anyNOpenMethodMiddle_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openVal")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenVal {
                @Test
                public void testAllFilesPresentInOpenVal() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openVal"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyNOpenVal_I1.kt")
                public void testAnyNOpenVal_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openVal/anyNOpenVal_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenVal_I1_I2.kt")
                public void testAnyNOpenVal_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openVal/anyNOpenVal_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenVal_I1_I2_I3.kt")
                public void testAnyNOpenVal_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openVal/anyNOpenVal_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenVal_I1_I2_I3_O2.kt")
                public void testAnyNOpenVal_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openVal/anyNOpenVal_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenVal_I1_I2_O1.kt")
                public void testAnyNOpenVal_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openVal/anyNOpenVal_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenVal_I1_I2_O1_I3.kt")
                public void testAnyNOpenVal_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openVal/anyNOpenVal_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenVal_I1_I2_O1_I3_O2.kt")
                public void testAnyNOpenVal_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openVal/anyNOpenVal_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenVal_I1_I2_O1_O2.kt")
                public void testAnyNOpenVal_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openVal/anyNOpenVal_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenVal_I1_I2_O2.kt")
                public void testAnyNOpenVal_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openVal/anyNOpenVal_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenVal_I1_I3.kt")
                public void testAnyNOpenVal_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openVal/anyNOpenVal_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenVal_I1_I3_O2.kt")
                public void testAnyNOpenVal_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openVal/anyNOpenVal_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenVal_I1_O1.kt")
                public void testAnyNOpenVal_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openVal/anyNOpenVal_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenVal_I1_O1_I3.kt")
                public void testAnyNOpenVal_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openVal/anyNOpenVal_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenVal_I1_O1_I3_O2.kt")
                public void testAnyNOpenVal_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openVal/anyNOpenVal_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenVal_I1_O1_O2.kt")
                public void testAnyNOpenVal_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openVal/anyNOpenVal_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenVal_I1_O2.kt")
                public void testAnyNOpenVal_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openVal/anyNOpenVal_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openValMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenValMiddle {
                @Test
                public void testAllFilesPresentInOpenValMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openValMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyNOpenValMiddle_I2.kt")
                public void testAnyNOpenValMiddle_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openValMiddle/anyNOpenValMiddle_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenValMiddle_I2_I3.kt")
                public void testAnyNOpenValMiddle_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openValMiddle/anyNOpenValMiddle_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenValMiddle_I2_I3_O2.kt")
                public void testAnyNOpenValMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openValMiddle/anyNOpenValMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNOpenValMiddle_I2_O2.kt")
                public void testAnyNOpenValMiddle_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/openValMiddle/anyNOpenValMiddle_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString")
            @TestDataPath("$PROJECT_ROOT")
            public class ToString {
                @Test
                public void testAllFilesPresentInToString() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyNToStringN.kt")
                public void testAnyNToStringN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToStringN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I1.kt")
                public void testAnyNToString_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I1_I2.kt")
                public void testAnyNToString_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I1_I2_I3.kt")
                public void testAnyNToString_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I1_I2_I3_O2.kt")
                public void testAnyNToString_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I1_I2_O1.kt")
                public void testAnyNToString_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I1_I2_O1_I3.kt")
                public void testAnyNToString_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I1_I2_O1_I3_O2.kt")
                public void testAnyNToString_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I1_I2_O1_O2.kt")
                public void testAnyNToString_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I1_I2_O2.kt")
                public void testAnyNToString_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I1_I3.kt")
                public void testAnyNToString_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I1_I3_O2.kt")
                public void testAnyNToString_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I1_O1.kt")
                public void testAnyNToString_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I1_O1_I3.kt")
                public void testAnyNToString_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I1_O1_I3_O2.kt")
                public void testAnyNToString_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I1_O1_O2.kt")
                public void testAnyNToString_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I1_O2.kt")
                public void testAnyNToString_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I2.kt")
                public void testAnyNToString_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I2_I3.kt")
                public void testAnyNToString_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I2_I3_O2.kt")
                public void testAnyNToString_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I2_O1.kt")
                public void testAnyNToString_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I2_O1_I3.kt")
                public void testAnyNToString_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I2_O1_I3_O2.kt")
                public void testAnyNToString_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I2_O1_O2.kt")
                public void testAnyNToString_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I2_O2.kt")
                public void testAnyNToString_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I3.kt")
                public void testAnyNToString_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_I3_O2.kt")
                public void testAnyNToString_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_O1.kt")
                public void testAnyNToString_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_O1_I3.kt")
                public void testAnyNToString_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_O1_I3_O2.kt")
                public void testAnyNToString_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_O1_O2.kt")
                public void testAnyNToString_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNToString_O2.kt")
                public void testAnyNToString_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/toString/anyNToString_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/valBottom")
            @TestDataPath("$PROJECT_ROOT")
            public class ValBottom {
                @Test
                public void testAllFilesPresentInValBottom() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/valBottom"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("anyNValBottom_I3_O2.kt")
                public void testAnyNValBottom_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/valBottom/anyNValBottom_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNValBottom_O1.kt")
                public void testAnyNValBottom_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/valBottom/anyNValBottom_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNValBottom_O1_I3.kt")
                public void testAnyNValBottom_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/valBottom/anyNValBottom_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNValBottom_O1_I3_O2.kt")
                public void testAnyNValBottom_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/valBottom/anyNValBottom_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("anyNValBottom_O1_O2.kt")
                public void testAnyNValBottom_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/anyN/valBottom/anyNValBottom_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }
        }

        @Nested
        @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/int")
        @TestDataPath("$PROJECT_ROOT")
        public class Int {
            @Test
            public void testAllFilesPresentInInt() throws Exception {
                KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/int"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/int/abstractMethod")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractMethod {
                @Test
                public void testAllFilesPresentInAbstractMethod() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/int/abstractMethod"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intAbstractMethod_I1_I2_O1.kt")
                public void testIntAbstractMethod_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/abstractMethod/intAbstractMethod_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intAbstractMethod_I1_I2_O1_I3.kt")
                public void testIntAbstractMethod_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/abstractMethod/intAbstractMethod_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intAbstractMethod_I1_I2_O1_I3_O2.kt")
                public void testIntAbstractMethod_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/abstractMethod/intAbstractMethod_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intAbstractMethod_I1_I2_O1_O2.kt")
                public void testIntAbstractMethod_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/abstractMethod/intAbstractMethod_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intAbstractMethod_I1_O1_I3_O2.kt")
                public void testIntAbstractMethod_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/abstractMethod/intAbstractMethod_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/int/abstractMethodMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractMethodMiddle {
                @Test
                public void testAllFilesPresentInAbstractMethodMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/int/abstractMethodMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intAbstractMethodMiddle_I2_I3_O2.kt")
                public void testIntAbstractMethodMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/abstractMethodMiddle/intAbstractMethodMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/int/abstractVal")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractVal {
                @Test
                public void testAllFilesPresentInAbstractVal() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/int/abstractVal"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intAbstractVal_I1_I2_O1.kt")
                public void testIntAbstractVal_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/abstractVal/intAbstractVal_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intAbstractVal_I1_I2_O1_I3.kt")
                public void testIntAbstractVal_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/abstractVal/intAbstractVal_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intAbstractVal_I1_I2_O1_I3_O2.kt")
                public void testIntAbstractVal_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/abstractVal/intAbstractVal_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intAbstractVal_I1_I2_O1_O2.kt")
                public void testIntAbstractVal_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/abstractVal/intAbstractVal_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intAbstractVal_I1_O1_I3_O2.kt")
                public void testIntAbstractVal_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/abstractVal/intAbstractVal_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/int/abstractValMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractValMiddle {
                @Test
                public void testAllFilesPresentInAbstractValMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/int/abstractValMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intAbstractValMiddle_I2_I3_O2.kt")
                public void testIntAbstractValMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/abstractValMiddle/intAbstractValMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode")
            @TestDataPath("$PROJECT_ROOT")
            public class HashCode {
                @Test
                public void testAllFilesPresentInHashCode() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intHashCodeN.kt")
                public void testIntHashCodeN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCodeN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I1.kt")
                public void testIntHashCode_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I1_I2.kt")
                public void testIntHashCode_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I1_I2_I3.kt")
                public void testIntHashCode_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I1_I2_I3_O2.kt")
                public void testIntHashCode_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I1_I2_O1.kt")
                public void testIntHashCode_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I1_I2_O1_I3.kt")
                public void testIntHashCode_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I1_I2_O1_I3_O2.kt")
                public void testIntHashCode_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I1_I2_O1_O2.kt")
                public void testIntHashCode_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I1_I2_O2.kt")
                public void testIntHashCode_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I1_I3.kt")
                public void testIntHashCode_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I1_I3_O2.kt")
                public void testIntHashCode_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I1_O1.kt")
                public void testIntHashCode_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I1_O1_I3.kt")
                public void testIntHashCode_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I1_O1_I3_O2.kt")
                public void testIntHashCode_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I1_O1_O2.kt")
                public void testIntHashCode_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I1_O2.kt")
                public void testIntHashCode_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I2.kt")
                public void testIntHashCode_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I2_I3.kt")
                public void testIntHashCode_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I2_I3_O2.kt")
                public void testIntHashCode_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I2_O1.kt")
                public void testIntHashCode_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I2_O1_I3.kt")
                public void testIntHashCode_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I2_O1_I3_O2.kt")
                public void testIntHashCode_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I2_O1_O2.kt")
                public void testIntHashCode_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I2_O2.kt")
                public void testIntHashCode_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I3.kt")
                public void testIntHashCode_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_I3_O2.kt")
                public void testIntHashCode_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_O1.kt")
                public void testIntHashCode_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_O1_I3.kt")
                public void testIntHashCode_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_O1_I3_O2.kt")
                public void testIntHashCode_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_O1_O2.kt")
                public void testIntHashCode_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intHashCode_O2.kt")
                public void testIntHashCode_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/hashCode/intHashCode_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceMethodAbstract {
                @Test
                public void testAllFilesPresentInInterfaceMethodAbstract() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intInterfaceMethodAbstract_I1.kt")
                public void testIntInterfaceMethodAbstract_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract/intInterfaceMethodAbstract_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodAbstract_I1_I2.kt")
                public void testIntInterfaceMethodAbstract_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract/intInterfaceMethodAbstract_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodAbstract_I1_I2_I3.kt")
                public void testIntInterfaceMethodAbstract_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract/intInterfaceMethodAbstract_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodAbstract_I1_I2_I3_O2.kt")
                public void testIntInterfaceMethodAbstract_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract/intInterfaceMethodAbstract_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodAbstract_I1_I2_O1.kt")
                public void testIntInterfaceMethodAbstract_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract/intInterfaceMethodAbstract_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodAbstract_I1_I2_O1_I3.kt")
                public void testIntInterfaceMethodAbstract_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract/intInterfaceMethodAbstract_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodAbstract_I1_I2_O1_I3_O2.kt")
                public void testIntInterfaceMethodAbstract_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract/intInterfaceMethodAbstract_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodAbstract_I1_I2_O1_O2.kt")
                public void testIntInterfaceMethodAbstract_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract/intInterfaceMethodAbstract_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodAbstract_I1_I2_O2.kt")
                public void testIntInterfaceMethodAbstract_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract/intInterfaceMethodAbstract_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodAbstract_I1_I3.kt")
                public void testIntInterfaceMethodAbstract_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract/intInterfaceMethodAbstract_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodAbstract_I1_I3_O2.kt")
                public void testIntInterfaceMethodAbstract_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract/intInterfaceMethodAbstract_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodAbstract_I1_O1.kt")
                public void testIntInterfaceMethodAbstract_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract/intInterfaceMethodAbstract_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodAbstract_I1_O1_I3.kt")
                public void testIntInterfaceMethodAbstract_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract/intInterfaceMethodAbstract_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodAbstract_I1_O1_I3_O2.kt")
                public void testIntInterfaceMethodAbstract_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract/intInterfaceMethodAbstract_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodAbstract_I1_O1_O2.kt")
                public void testIntInterfaceMethodAbstract_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract/intInterfaceMethodAbstract_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodAbstract_I1_O2.kt")
                public void testIntInterfaceMethodAbstract_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract/intInterfaceMethodAbstract_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodAbstract_I2_O1.kt")
                public void testIntInterfaceMethodAbstract_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract/intInterfaceMethodAbstract_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodAbstract_I2_O1_I3.kt")
                public void testIntInterfaceMethodAbstract_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract/intInterfaceMethodAbstract_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodAbstract_I2_O1_I3_O2.kt")
                public void testIntInterfaceMethodAbstract_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract/intInterfaceMethodAbstract_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodAbstract_I2_O1_O2.kt")
                public void testIntInterfaceMethodAbstract_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract/intInterfaceMethodAbstract_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodAbstract_O1_I3_O2.kt")
                public void testIntInterfaceMethodAbstract_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodAbstract/intInterfaceMethodAbstract_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceMethodDefaultAll {
                @Test
                public void testAllFilesPresentInInterfaceMethodDefaultAll() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAllN.kt")
                public void testIntInterfaceMethodDefaultAllN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAllN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I1.kt")
                public void testIntInterfaceMethodDefaultAll_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I1_I2.kt")
                public void testIntInterfaceMethodDefaultAll_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I1_I2_I3.kt")
                public void testIntInterfaceMethodDefaultAll_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I1_I2_I3_O2.kt")
                public void testIntInterfaceMethodDefaultAll_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I1_I2_O1.kt")
                public void testIntInterfaceMethodDefaultAll_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I1_I2_O1_I3.kt")
                public void testIntInterfaceMethodDefaultAll_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I1_I2_O1_I3_O2.kt")
                public void testIntInterfaceMethodDefaultAll_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I1_I2_O1_O2.kt")
                public void testIntInterfaceMethodDefaultAll_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I1_I2_O2.kt")
                public void testIntInterfaceMethodDefaultAll_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I1_I3.kt")
                public void testIntInterfaceMethodDefaultAll_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I1_I3_O2.kt")
                public void testIntInterfaceMethodDefaultAll_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I1_O1.kt")
                public void testIntInterfaceMethodDefaultAll_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I1_O1_I3.kt")
                public void testIntInterfaceMethodDefaultAll_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I1_O1_I3_O2.kt")
                public void testIntInterfaceMethodDefaultAll_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I1_O1_O2.kt")
                public void testIntInterfaceMethodDefaultAll_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I1_O2.kt")
                public void testIntInterfaceMethodDefaultAll_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I2.kt")
                public void testIntInterfaceMethodDefaultAll_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I2_I3.kt")
                public void testIntInterfaceMethodDefaultAll_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I2_I3_O2.kt")
                public void testIntInterfaceMethodDefaultAll_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I2_O1.kt")
                public void testIntInterfaceMethodDefaultAll_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I2_O1_I3.kt")
                public void testIntInterfaceMethodDefaultAll_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I2_O1_I3_O2.kt")
                public void testIntInterfaceMethodDefaultAll_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I2_O1_O2.kt")
                public void testIntInterfaceMethodDefaultAll_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I2_O2.kt")
                public void testIntInterfaceMethodDefaultAll_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I3.kt")
                public void testIntInterfaceMethodDefaultAll_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_I3_O2.kt")
                public void testIntInterfaceMethodDefaultAll_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_O1.kt")
                public void testIntInterfaceMethodDefaultAll_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_O1_I3.kt")
                public void testIntInterfaceMethodDefaultAll_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_O1_I3_O2.kt")
                public void testIntInterfaceMethodDefaultAll_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_O1_O2.kt")
                public void testIntInterfaceMethodDefaultAll_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultAll_O2.kt")
                public void testIntInterfaceMethodDefaultAll_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultAll/intInterfaceMethodDefaultAll_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceMethodDefaultDefault {
                @Test
                public void testAllFilesPresentInInterfaceMethodDefaultDefault() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefaultN.kt")
                public void testIntInterfaceMethodDefaultDefaultN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefaultN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I1.kt")
                public void testIntInterfaceMethodDefaultDefault_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I1_I2.kt")
                public void testIntInterfaceMethodDefaultDefault_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I1_I2_I3.kt")
                public void testIntInterfaceMethodDefaultDefault_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I1_I2_I3_O2.kt")
                public void testIntInterfaceMethodDefaultDefault_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I1_I2_O1.kt")
                public void testIntInterfaceMethodDefaultDefault_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I1_I2_O1_I3.kt")
                public void testIntInterfaceMethodDefaultDefault_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I1_I2_O1_I3_O2.kt")
                public void testIntInterfaceMethodDefaultDefault_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I1_I2_O1_O2.kt")
                public void testIntInterfaceMethodDefaultDefault_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I1_I2_O2.kt")
                public void testIntInterfaceMethodDefaultDefault_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I1_I3.kt")
                public void testIntInterfaceMethodDefaultDefault_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I1_I3_O2.kt")
                public void testIntInterfaceMethodDefaultDefault_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I1_O1.kt")
                public void testIntInterfaceMethodDefaultDefault_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I1_O1_I3.kt")
                public void testIntInterfaceMethodDefaultDefault_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I1_O1_I3_O2.kt")
                public void testIntInterfaceMethodDefaultDefault_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I1_O1_O2.kt")
                public void testIntInterfaceMethodDefaultDefault_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I1_O2.kt")
                public void testIntInterfaceMethodDefaultDefault_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I2.kt")
                public void testIntInterfaceMethodDefaultDefault_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I2_I3.kt")
                public void testIntInterfaceMethodDefaultDefault_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I2_I3_O2.kt")
                public void testIntInterfaceMethodDefaultDefault_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I2_O1.kt")
                public void testIntInterfaceMethodDefaultDefault_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I2_O1_I3.kt")
                public void testIntInterfaceMethodDefaultDefault_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I2_O1_I3_O2.kt")
                public void testIntInterfaceMethodDefaultDefault_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I2_O1_O2.kt")
                public void testIntInterfaceMethodDefaultDefault_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I2_O2.kt")
                public void testIntInterfaceMethodDefaultDefault_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I3.kt")
                public void testIntInterfaceMethodDefaultDefault_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_I3_O2.kt")
                public void testIntInterfaceMethodDefaultDefault_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_O1.kt")
                public void testIntInterfaceMethodDefaultDefault_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_O1_I3.kt")
                public void testIntInterfaceMethodDefaultDefault_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_O1_I3_O2.kt")
                public void testIntInterfaceMethodDefaultDefault_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_O1_O2.kt")
                public void testIntInterfaceMethodDefaultDefault_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceMethodDefaultDefault_O2.kt")
                public void testIntInterfaceMethodDefaultDefault_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceMethodDefaultDefault/intInterfaceMethodDefaultDefault_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceValAbstract {
                @Test
                public void testAllFilesPresentInInterfaceValAbstract() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intInterfaceValAbstract_I1.kt")
                public void testIntInterfaceValAbstract_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract/intInterfaceValAbstract_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValAbstract_I1_I2.kt")
                public void testIntInterfaceValAbstract_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract/intInterfaceValAbstract_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValAbstract_I1_I2_I3.kt")
                public void testIntInterfaceValAbstract_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract/intInterfaceValAbstract_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValAbstract_I1_I2_I3_O2.kt")
                public void testIntInterfaceValAbstract_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract/intInterfaceValAbstract_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValAbstract_I1_I2_O1.kt")
                public void testIntInterfaceValAbstract_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract/intInterfaceValAbstract_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValAbstract_I1_I2_O1_I3.kt")
                public void testIntInterfaceValAbstract_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract/intInterfaceValAbstract_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValAbstract_I1_I2_O1_I3_O2.kt")
                public void testIntInterfaceValAbstract_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract/intInterfaceValAbstract_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValAbstract_I1_I2_O1_O2.kt")
                public void testIntInterfaceValAbstract_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract/intInterfaceValAbstract_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValAbstract_I1_I2_O2.kt")
                public void testIntInterfaceValAbstract_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract/intInterfaceValAbstract_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValAbstract_I1_I3.kt")
                public void testIntInterfaceValAbstract_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract/intInterfaceValAbstract_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValAbstract_I1_I3_O2.kt")
                public void testIntInterfaceValAbstract_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract/intInterfaceValAbstract_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValAbstract_I1_O1.kt")
                public void testIntInterfaceValAbstract_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract/intInterfaceValAbstract_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValAbstract_I1_O1_I3.kt")
                public void testIntInterfaceValAbstract_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract/intInterfaceValAbstract_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValAbstract_I1_O1_I3_O2.kt")
                public void testIntInterfaceValAbstract_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract/intInterfaceValAbstract_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValAbstract_I1_O1_O2.kt")
                public void testIntInterfaceValAbstract_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract/intInterfaceValAbstract_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValAbstract_I1_O2.kt")
                public void testIntInterfaceValAbstract_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract/intInterfaceValAbstract_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValAbstract_I2_O1.kt")
                public void testIntInterfaceValAbstract_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract/intInterfaceValAbstract_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValAbstract_I2_O1_I3.kt")
                public void testIntInterfaceValAbstract_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract/intInterfaceValAbstract_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValAbstract_I2_O1_I3_O2.kt")
                public void testIntInterfaceValAbstract_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract/intInterfaceValAbstract_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValAbstract_I2_O1_O2.kt")
                public void testIntInterfaceValAbstract_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract/intInterfaceValAbstract_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValAbstract_O1_I3_O2.kt")
                public void testIntInterfaceValAbstract_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValAbstract/intInterfaceValAbstract_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceValDefaultAll {
                @Test
                public void testAllFilesPresentInInterfaceValDefaultAll() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAllN.kt")
                public void testIntInterfaceValDefaultAllN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAllN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I1.kt")
                public void testIntInterfaceValDefaultAll_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I1_I2.kt")
                public void testIntInterfaceValDefaultAll_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I1_I2_I3.kt")
                public void testIntInterfaceValDefaultAll_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I1_I2_I3_O2.kt")
                public void testIntInterfaceValDefaultAll_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I1_I2_O1.kt")
                public void testIntInterfaceValDefaultAll_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I1_I2_O1_I3.kt")
                public void testIntInterfaceValDefaultAll_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I1_I2_O1_I3_O2.kt")
                public void testIntInterfaceValDefaultAll_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I1_I2_O1_O2.kt")
                public void testIntInterfaceValDefaultAll_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I1_I2_O2.kt")
                public void testIntInterfaceValDefaultAll_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I1_I3.kt")
                public void testIntInterfaceValDefaultAll_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I1_I3_O2.kt")
                public void testIntInterfaceValDefaultAll_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I1_O1.kt")
                public void testIntInterfaceValDefaultAll_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I1_O1_I3.kt")
                public void testIntInterfaceValDefaultAll_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I1_O1_I3_O2.kt")
                public void testIntInterfaceValDefaultAll_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I1_O1_O2.kt")
                public void testIntInterfaceValDefaultAll_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I1_O2.kt")
                public void testIntInterfaceValDefaultAll_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I2.kt")
                public void testIntInterfaceValDefaultAll_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I2_I3.kt")
                public void testIntInterfaceValDefaultAll_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I2_I3_O2.kt")
                public void testIntInterfaceValDefaultAll_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I2_O1.kt")
                public void testIntInterfaceValDefaultAll_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I2_O1_I3.kt")
                public void testIntInterfaceValDefaultAll_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I2_O1_I3_O2.kt")
                public void testIntInterfaceValDefaultAll_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I2_O1_O2.kt")
                public void testIntInterfaceValDefaultAll_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I2_O2.kt")
                public void testIntInterfaceValDefaultAll_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I3.kt")
                public void testIntInterfaceValDefaultAll_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_I3_O2.kt")
                public void testIntInterfaceValDefaultAll_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_O1.kt")
                public void testIntInterfaceValDefaultAll_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_O1_I3.kt")
                public void testIntInterfaceValDefaultAll_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_O1_I3_O2.kt")
                public void testIntInterfaceValDefaultAll_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_O1_O2.kt")
                public void testIntInterfaceValDefaultAll_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultAll_O2.kt")
                public void testIntInterfaceValDefaultAll_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultAll/intInterfaceValDefaultAll_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceValDefaultDefault {
                @Test
                public void testAllFilesPresentInInterfaceValDefaultDefault() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefaultN.kt")
                public void testIntInterfaceValDefaultDefaultN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefaultN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I1.kt")
                public void testIntInterfaceValDefaultDefault_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I1_I2.kt")
                public void testIntInterfaceValDefaultDefault_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I1_I2_I3.kt")
                public void testIntInterfaceValDefaultDefault_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I1_I2_I3_O2.kt")
                public void testIntInterfaceValDefaultDefault_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I1_I2_O1.kt")
                public void testIntInterfaceValDefaultDefault_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I1_I2_O1_I3.kt")
                public void testIntInterfaceValDefaultDefault_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I1_I2_O1_I3_O2.kt")
                public void testIntInterfaceValDefaultDefault_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I1_I2_O1_O2.kt")
                public void testIntInterfaceValDefaultDefault_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I1_I2_O2.kt")
                public void testIntInterfaceValDefaultDefault_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I1_I3.kt")
                public void testIntInterfaceValDefaultDefault_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I1_I3_O2.kt")
                public void testIntInterfaceValDefaultDefault_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I1_O1.kt")
                public void testIntInterfaceValDefaultDefault_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I1_O1_I3.kt")
                public void testIntInterfaceValDefaultDefault_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I1_O1_I3_O2.kt")
                public void testIntInterfaceValDefaultDefault_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I1_O1_O2.kt")
                public void testIntInterfaceValDefaultDefault_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I1_O2.kt")
                public void testIntInterfaceValDefaultDefault_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I2.kt")
                public void testIntInterfaceValDefaultDefault_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I2_I3.kt")
                public void testIntInterfaceValDefaultDefault_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I2_I3_O2.kt")
                public void testIntInterfaceValDefaultDefault_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I2_O1.kt")
                public void testIntInterfaceValDefaultDefault_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I2_O1_I3.kt")
                public void testIntInterfaceValDefaultDefault_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I2_O1_I3_O2.kt")
                public void testIntInterfaceValDefaultDefault_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I2_O1_O2.kt")
                public void testIntInterfaceValDefaultDefault_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I2_O2.kt")
                public void testIntInterfaceValDefaultDefault_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I3.kt")
                public void testIntInterfaceValDefaultDefault_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_I3_O2.kt")
                public void testIntInterfaceValDefaultDefault_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_O1.kt")
                public void testIntInterfaceValDefaultDefault_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_O1_I3.kt")
                public void testIntInterfaceValDefaultDefault_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_O1_I3_O2.kt")
                public void testIntInterfaceValDefaultDefault_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_O1_O2.kt")
                public void testIntInterfaceValDefaultDefault_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intInterfaceValDefaultDefault_O2.kt")
                public void testIntInterfaceValDefaultDefault_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/interfaceValDefaultDefault/intInterfaceValDefaultDefault_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/int/methodBottom")
            @TestDataPath("$PROJECT_ROOT")
            public class MethodBottom {
                @Test
                public void testAllFilesPresentInMethodBottom() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/int/methodBottom"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intMethodBottom_I3_O2.kt")
                public void testIntMethodBottom_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/methodBottom/intMethodBottom_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intMethodBottom_O1.kt")
                public void testIntMethodBottom_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/methodBottom/intMethodBottom_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intMethodBottom_O1_I3.kt")
                public void testIntMethodBottom_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/methodBottom/intMethodBottom_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intMethodBottom_O1_I3_O2.kt")
                public void testIntMethodBottom_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/methodBottom/intMethodBottom_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intMethodBottom_O1_O2.kt")
                public void testIntMethodBottom_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/methodBottom/intMethodBottom_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethod")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenMethod {
                @Test
                public void testAllFilesPresentInOpenMethod() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethod"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intOpenMethod_I1.kt")
                public void testIntOpenMethod_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethod/intOpenMethod_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenMethod_I1_I2.kt")
                public void testIntOpenMethod_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethod/intOpenMethod_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenMethod_I1_I2_I3.kt")
                public void testIntOpenMethod_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethod/intOpenMethod_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenMethod_I1_I2_I3_O2.kt")
                public void testIntOpenMethod_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethod/intOpenMethod_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenMethod_I1_I2_O1.kt")
                public void testIntOpenMethod_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethod/intOpenMethod_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenMethod_I1_I2_O1_I3.kt")
                public void testIntOpenMethod_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethod/intOpenMethod_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenMethod_I1_I2_O1_I3_O2.kt")
                public void testIntOpenMethod_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethod/intOpenMethod_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenMethod_I1_I2_O1_O2.kt")
                public void testIntOpenMethod_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethod/intOpenMethod_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenMethod_I1_I2_O2.kt")
                public void testIntOpenMethod_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethod/intOpenMethod_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenMethod_I1_I3.kt")
                public void testIntOpenMethod_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethod/intOpenMethod_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenMethod_I1_I3_O2.kt")
                public void testIntOpenMethod_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethod/intOpenMethod_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenMethod_I1_O1.kt")
                public void testIntOpenMethod_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethod/intOpenMethod_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenMethod_I1_O1_I3.kt")
                public void testIntOpenMethod_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethod/intOpenMethod_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenMethod_I1_O1_I3_O2.kt")
                public void testIntOpenMethod_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethod/intOpenMethod_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenMethod_I1_O1_O2.kt")
                public void testIntOpenMethod_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethod/intOpenMethod_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenMethod_I1_O2.kt")
                public void testIntOpenMethod_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethod/intOpenMethod_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethodMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenMethodMiddle {
                @Test
                public void testAllFilesPresentInOpenMethodMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethodMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intOpenMethodMiddle_I2.kt")
                public void testIntOpenMethodMiddle_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethodMiddle/intOpenMethodMiddle_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenMethodMiddle_I2_I3.kt")
                public void testIntOpenMethodMiddle_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethodMiddle/intOpenMethodMiddle_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenMethodMiddle_I2_I3_O2.kt")
                public void testIntOpenMethodMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethodMiddle/intOpenMethodMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenMethodMiddle_I2_O2.kt")
                public void testIntOpenMethodMiddle_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openMethodMiddle/intOpenMethodMiddle_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openVal")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenVal {
                @Test
                public void testAllFilesPresentInOpenVal() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openVal"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intOpenVal_I1.kt")
                public void testIntOpenVal_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openVal/intOpenVal_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenVal_I1_I2.kt")
                public void testIntOpenVal_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openVal/intOpenVal_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenVal_I1_I2_I3.kt")
                public void testIntOpenVal_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openVal/intOpenVal_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenVal_I1_I2_I3_O2.kt")
                public void testIntOpenVal_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openVal/intOpenVal_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenVal_I1_I2_O1.kt")
                public void testIntOpenVal_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openVal/intOpenVal_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenVal_I1_I2_O1_I3.kt")
                public void testIntOpenVal_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openVal/intOpenVal_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenVal_I1_I2_O1_I3_O2.kt")
                public void testIntOpenVal_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openVal/intOpenVal_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenVal_I1_I2_O1_O2.kt")
                public void testIntOpenVal_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openVal/intOpenVal_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenVal_I1_I2_O2.kt")
                public void testIntOpenVal_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openVal/intOpenVal_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenVal_I1_I3.kt")
                public void testIntOpenVal_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openVal/intOpenVal_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenVal_I1_I3_O2.kt")
                public void testIntOpenVal_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openVal/intOpenVal_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenVal_I1_O1.kt")
                public void testIntOpenVal_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openVal/intOpenVal_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenVal_I1_O1_I3.kt")
                public void testIntOpenVal_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openVal/intOpenVal_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenVal_I1_O1_I3_O2.kt")
                public void testIntOpenVal_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openVal/intOpenVal_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenVal_I1_O1_O2.kt")
                public void testIntOpenVal_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openVal/intOpenVal_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenVal_I1_O2.kt")
                public void testIntOpenVal_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openVal/intOpenVal_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openValMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenValMiddle {
                @Test
                public void testAllFilesPresentInOpenValMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openValMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intOpenValMiddle_I2.kt")
                public void testIntOpenValMiddle_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openValMiddle/intOpenValMiddle_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenValMiddle_I2_I3.kt")
                public void testIntOpenValMiddle_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openValMiddle/intOpenValMiddle_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenValMiddle_I2_I3_O2.kt")
                public void testIntOpenValMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openValMiddle/intOpenValMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intOpenValMiddle_I2_O2.kt")
                public void testIntOpenValMiddle_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/openValMiddle/intOpenValMiddle_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString")
            @TestDataPath("$PROJECT_ROOT")
            public class ToString {
                @Test
                public void testAllFilesPresentInToString() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intToStringN.kt")
                public void testIntToStringN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToStringN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I1.kt")
                public void testIntToString_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I1_I2.kt")
                public void testIntToString_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I1_I2_I3.kt")
                public void testIntToString_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I1_I2_I3_O2.kt")
                public void testIntToString_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I1_I2_O1.kt")
                public void testIntToString_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I1_I2_O1_I3.kt")
                public void testIntToString_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I1_I2_O1_I3_O2.kt")
                public void testIntToString_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I1_I2_O1_O2.kt")
                public void testIntToString_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I1_I2_O2.kt")
                public void testIntToString_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I1_I3.kt")
                public void testIntToString_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I1_I3_O2.kt")
                public void testIntToString_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I1_O1.kt")
                public void testIntToString_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I1_O1_I3.kt")
                public void testIntToString_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I1_O1_I3_O2.kt")
                public void testIntToString_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I1_O1_O2.kt")
                public void testIntToString_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I1_O2.kt")
                public void testIntToString_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I2.kt")
                public void testIntToString_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I2_I3.kt")
                public void testIntToString_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I2_I3_O2.kt")
                public void testIntToString_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I2_O1.kt")
                public void testIntToString_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I2_O1_I3.kt")
                public void testIntToString_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I2_O1_I3_O2.kt")
                public void testIntToString_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I2_O1_O2.kt")
                public void testIntToString_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I2_O2.kt")
                public void testIntToString_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I3.kt")
                public void testIntToString_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_I3_O2.kt")
                public void testIntToString_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_O1.kt")
                public void testIntToString_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_O1_I3.kt")
                public void testIntToString_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_O1_I3_O2.kt")
                public void testIntToString_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_O1_O2.kt")
                public void testIntToString_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intToString_O2.kt")
                public void testIntToString_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/toString/intToString_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/int/valBottom")
            @TestDataPath("$PROJECT_ROOT")
            public class ValBottom {
                @Test
                public void testAllFilesPresentInValBottom() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/int/valBottom"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intValBottom_I3_O2.kt")
                public void testIntValBottom_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/valBottom/intValBottom_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intValBottom_O1.kt")
                public void testIntValBottom_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/valBottom/intValBottom_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intValBottom_O1_I3.kt")
                public void testIntValBottom_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/valBottom/intValBottom_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intValBottom_O1_I3_O2.kt")
                public void testIntValBottom_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/valBottom/intValBottom_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intValBottom_O1_O2.kt")
                public void testIntValBottom_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/int/valBottom/intValBottom_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }
        }

        @Nested
        @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/intN")
        @TestDataPath("$PROJECT_ROOT")
        public class IntN {
            @Test
            public void testAllFilesPresentInIntN() throws Exception {
                KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/intN"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/abstractMethod")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractMethod {
                @Test
                public void testAllFilesPresentInAbstractMethod() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/abstractMethod"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intNAbstractMethod_I1_I2_O1.kt")
                public void testIntNAbstractMethod_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/abstractMethod/intNAbstractMethod_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNAbstractMethod_I1_I2_O1_I3.kt")
                public void testIntNAbstractMethod_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/abstractMethod/intNAbstractMethod_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNAbstractMethod_I1_I2_O1_I3_O2.kt")
                public void testIntNAbstractMethod_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/abstractMethod/intNAbstractMethod_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNAbstractMethod_I1_I2_O1_O2.kt")
                public void testIntNAbstractMethod_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/abstractMethod/intNAbstractMethod_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNAbstractMethod_I1_O1_I3_O2.kt")
                public void testIntNAbstractMethod_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/abstractMethod/intNAbstractMethod_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/abstractMethodMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractMethodMiddle {
                @Test
                public void testAllFilesPresentInAbstractMethodMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/abstractMethodMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intNAbstractMethodMiddle_I2_I3_O2.kt")
                public void testIntNAbstractMethodMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/abstractMethodMiddle/intNAbstractMethodMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/abstractVal")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractVal {
                @Test
                public void testAllFilesPresentInAbstractVal() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/abstractVal"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intNAbstractVal_I1_I2_O1.kt")
                public void testIntNAbstractVal_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/abstractVal/intNAbstractVal_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNAbstractVal_I1_I2_O1_I3.kt")
                public void testIntNAbstractVal_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/abstractVal/intNAbstractVal_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNAbstractVal_I1_I2_O1_I3_O2.kt")
                public void testIntNAbstractVal_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/abstractVal/intNAbstractVal_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNAbstractVal_I1_I2_O1_O2.kt")
                public void testIntNAbstractVal_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/abstractVal/intNAbstractVal_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNAbstractVal_I1_O1_I3_O2.kt")
                public void testIntNAbstractVal_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/abstractVal/intNAbstractVal_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/abstractValMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractValMiddle {
                @Test
                public void testAllFilesPresentInAbstractValMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/abstractValMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intNAbstractValMiddle_I2_I3_O2.kt")
                public void testIntNAbstractValMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/abstractValMiddle/intNAbstractValMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode")
            @TestDataPath("$PROJECT_ROOT")
            public class HashCode {
                @Test
                public void testAllFilesPresentInHashCode() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intNHashCodeN.kt")
                public void testIntNHashCodeN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCodeN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I1.kt")
                public void testIntNHashCode_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I1_I2.kt")
                public void testIntNHashCode_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I1_I2_I3.kt")
                public void testIntNHashCode_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I1_I2_I3_O2.kt")
                public void testIntNHashCode_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I1_I2_O1.kt")
                public void testIntNHashCode_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I1_I2_O1_I3.kt")
                public void testIntNHashCode_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I1_I2_O1_I3_O2.kt")
                public void testIntNHashCode_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I1_I2_O1_O2.kt")
                public void testIntNHashCode_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I1_I2_O2.kt")
                public void testIntNHashCode_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I1_I3.kt")
                public void testIntNHashCode_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I1_I3_O2.kt")
                public void testIntNHashCode_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I1_O1.kt")
                public void testIntNHashCode_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I1_O1_I3.kt")
                public void testIntNHashCode_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I1_O1_I3_O2.kt")
                public void testIntNHashCode_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I1_O1_O2.kt")
                public void testIntNHashCode_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I1_O2.kt")
                public void testIntNHashCode_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I2.kt")
                public void testIntNHashCode_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I2_I3.kt")
                public void testIntNHashCode_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I2_I3_O2.kt")
                public void testIntNHashCode_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I2_O1.kt")
                public void testIntNHashCode_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I2_O1_I3.kt")
                public void testIntNHashCode_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I2_O1_I3_O2.kt")
                public void testIntNHashCode_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I2_O1_O2.kt")
                public void testIntNHashCode_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I2_O2.kt")
                public void testIntNHashCode_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I3.kt")
                public void testIntNHashCode_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_I3_O2.kt")
                public void testIntNHashCode_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_O1.kt")
                public void testIntNHashCode_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_O1_I3.kt")
                public void testIntNHashCode_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_O1_I3_O2.kt")
                public void testIntNHashCode_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_O1_O2.kt")
                public void testIntNHashCode_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNHashCode_O2.kt")
                public void testIntNHashCode_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/hashCode/intNHashCode_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceMethodAbstract {
                @Test
                public void testAllFilesPresentInInterfaceMethodAbstract() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intNInterfaceMethodAbstract_I1.kt")
                public void testIntNInterfaceMethodAbstract_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract/intNInterfaceMethodAbstract_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodAbstract_I1_I2.kt")
                public void testIntNInterfaceMethodAbstract_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract/intNInterfaceMethodAbstract_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodAbstract_I1_I2_I3.kt")
                public void testIntNInterfaceMethodAbstract_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract/intNInterfaceMethodAbstract_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodAbstract_I1_I2_I3_O2.kt")
                public void testIntNInterfaceMethodAbstract_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract/intNInterfaceMethodAbstract_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodAbstract_I1_I2_O1.kt")
                public void testIntNInterfaceMethodAbstract_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract/intNInterfaceMethodAbstract_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodAbstract_I1_I2_O1_I3.kt")
                public void testIntNInterfaceMethodAbstract_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract/intNInterfaceMethodAbstract_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodAbstract_I1_I2_O1_I3_O2.kt")
                public void testIntNInterfaceMethodAbstract_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract/intNInterfaceMethodAbstract_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodAbstract_I1_I2_O1_O2.kt")
                public void testIntNInterfaceMethodAbstract_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract/intNInterfaceMethodAbstract_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodAbstract_I1_I2_O2.kt")
                public void testIntNInterfaceMethodAbstract_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract/intNInterfaceMethodAbstract_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodAbstract_I1_I3.kt")
                public void testIntNInterfaceMethodAbstract_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract/intNInterfaceMethodAbstract_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodAbstract_I1_I3_O2.kt")
                public void testIntNInterfaceMethodAbstract_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract/intNInterfaceMethodAbstract_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodAbstract_I1_O1.kt")
                public void testIntNInterfaceMethodAbstract_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract/intNInterfaceMethodAbstract_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodAbstract_I1_O1_I3.kt")
                public void testIntNInterfaceMethodAbstract_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract/intNInterfaceMethodAbstract_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodAbstract_I1_O1_I3_O2.kt")
                public void testIntNInterfaceMethodAbstract_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract/intNInterfaceMethodAbstract_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodAbstract_I1_O1_O2.kt")
                public void testIntNInterfaceMethodAbstract_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract/intNInterfaceMethodAbstract_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodAbstract_I1_O2.kt")
                public void testIntNInterfaceMethodAbstract_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract/intNInterfaceMethodAbstract_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodAbstract_I2_O1.kt")
                public void testIntNInterfaceMethodAbstract_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract/intNInterfaceMethodAbstract_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodAbstract_I2_O1_I3.kt")
                public void testIntNInterfaceMethodAbstract_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract/intNInterfaceMethodAbstract_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodAbstract_I2_O1_I3_O2.kt")
                public void testIntNInterfaceMethodAbstract_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract/intNInterfaceMethodAbstract_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodAbstract_I2_O1_O2.kt")
                public void testIntNInterfaceMethodAbstract_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract/intNInterfaceMethodAbstract_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodAbstract_O1_I3_O2.kt")
                public void testIntNInterfaceMethodAbstract_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodAbstract/intNInterfaceMethodAbstract_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceMethodDefaultAll {
                @Test
                public void testAllFilesPresentInInterfaceMethodDefaultAll() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAllN.kt")
                public void testIntNInterfaceMethodDefaultAllN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAllN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I1.kt")
                public void testIntNInterfaceMethodDefaultAll_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I1_I2.kt")
                public void testIntNInterfaceMethodDefaultAll_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I1_I2_I3.kt")
                public void testIntNInterfaceMethodDefaultAll_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I1_I2_I3_O2.kt")
                public void testIntNInterfaceMethodDefaultAll_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I1_I2_O1.kt")
                public void testIntNInterfaceMethodDefaultAll_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I1_I2_O1_I3.kt")
                public void testIntNInterfaceMethodDefaultAll_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I1_I2_O1_I3_O2.kt")
                public void testIntNInterfaceMethodDefaultAll_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I1_I2_O1_O2.kt")
                public void testIntNInterfaceMethodDefaultAll_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I1_I2_O2.kt")
                public void testIntNInterfaceMethodDefaultAll_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I1_I3.kt")
                public void testIntNInterfaceMethodDefaultAll_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I1_I3_O2.kt")
                public void testIntNInterfaceMethodDefaultAll_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I1_O1.kt")
                public void testIntNInterfaceMethodDefaultAll_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I1_O1_I3.kt")
                public void testIntNInterfaceMethodDefaultAll_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I1_O1_I3_O2.kt")
                public void testIntNInterfaceMethodDefaultAll_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I1_O1_O2.kt")
                public void testIntNInterfaceMethodDefaultAll_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I1_O2.kt")
                public void testIntNInterfaceMethodDefaultAll_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I2.kt")
                public void testIntNInterfaceMethodDefaultAll_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I2_I3.kt")
                public void testIntNInterfaceMethodDefaultAll_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I2_I3_O2.kt")
                public void testIntNInterfaceMethodDefaultAll_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I2_O1.kt")
                public void testIntNInterfaceMethodDefaultAll_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I2_O1_I3.kt")
                public void testIntNInterfaceMethodDefaultAll_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I2_O1_I3_O2.kt")
                public void testIntNInterfaceMethodDefaultAll_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I2_O1_O2.kt")
                public void testIntNInterfaceMethodDefaultAll_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I2_O2.kt")
                public void testIntNInterfaceMethodDefaultAll_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I3.kt")
                public void testIntNInterfaceMethodDefaultAll_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_I3_O2.kt")
                public void testIntNInterfaceMethodDefaultAll_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_O1.kt")
                public void testIntNInterfaceMethodDefaultAll_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_O1_I3.kt")
                public void testIntNInterfaceMethodDefaultAll_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_O1_I3_O2.kt")
                public void testIntNInterfaceMethodDefaultAll_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_O1_O2.kt")
                public void testIntNInterfaceMethodDefaultAll_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultAll_O2.kt")
                public void testIntNInterfaceMethodDefaultAll_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultAll/intNInterfaceMethodDefaultAll_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceMethodDefaultDefault {
                @Test
                public void testAllFilesPresentInInterfaceMethodDefaultDefault() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefaultN.kt")
                public void testIntNInterfaceMethodDefaultDefaultN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefaultN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I1.kt")
                public void testIntNInterfaceMethodDefaultDefault_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I1_I2.kt")
                public void testIntNInterfaceMethodDefaultDefault_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I1_I2_I3.kt")
                public void testIntNInterfaceMethodDefaultDefault_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I1_I2_I3_O2.kt")
                public void testIntNInterfaceMethodDefaultDefault_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I1_I2_O1.kt")
                public void testIntNInterfaceMethodDefaultDefault_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I1_I2_O1_I3.kt")
                public void testIntNInterfaceMethodDefaultDefault_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I1_I2_O1_I3_O2.kt")
                public void testIntNInterfaceMethodDefaultDefault_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I1_I2_O1_O2.kt")
                public void testIntNInterfaceMethodDefaultDefault_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I1_I2_O2.kt")
                public void testIntNInterfaceMethodDefaultDefault_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I1_I3.kt")
                public void testIntNInterfaceMethodDefaultDefault_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I1_I3_O2.kt")
                public void testIntNInterfaceMethodDefaultDefault_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I1_O1.kt")
                public void testIntNInterfaceMethodDefaultDefault_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I1_O1_I3.kt")
                public void testIntNInterfaceMethodDefaultDefault_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I1_O1_I3_O2.kt")
                public void testIntNInterfaceMethodDefaultDefault_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I1_O1_O2.kt")
                public void testIntNInterfaceMethodDefaultDefault_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I1_O2.kt")
                public void testIntNInterfaceMethodDefaultDefault_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I2.kt")
                public void testIntNInterfaceMethodDefaultDefault_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I2_I3.kt")
                public void testIntNInterfaceMethodDefaultDefault_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I2_I3_O2.kt")
                public void testIntNInterfaceMethodDefaultDefault_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I2_O1.kt")
                public void testIntNInterfaceMethodDefaultDefault_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I2_O1_I3.kt")
                public void testIntNInterfaceMethodDefaultDefault_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I2_O1_I3_O2.kt")
                public void testIntNInterfaceMethodDefaultDefault_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I2_O1_O2.kt")
                public void testIntNInterfaceMethodDefaultDefault_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I2_O2.kt")
                public void testIntNInterfaceMethodDefaultDefault_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I3.kt")
                public void testIntNInterfaceMethodDefaultDefault_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_I3_O2.kt")
                public void testIntNInterfaceMethodDefaultDefault_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_O1.kt")
                public void testIntNInterfaceMethodDefaultDefault_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_O1_I3.kt")
                public void testIntNInterfaceMethodDefaultDefault_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_O1_I3_O2.kt")
                public void testIntNInterfaceMethodDefaultDefault_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_O1_O2.kt")
                public void testIntNInterfaceMethodDefaultDefault_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceMethodDefaultDefault_O2.kt")
                public void testIntNInterfaceMethodDefaultDefault_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceMethodDefaultDefault/intNInterfaceMethodDefaultDefault_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceValAbstract {
                @Test
                public void testAllFilesPresentInInterfaceValAbstract() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intNInterfaceValAbstract_I1.kt")
                public void testIntNInterfaceValAbstract_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract/intNInterfaceValAbstract_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValAbstract_I1_I2.kt")
                public void testIntNInterfaceValAbstract_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract/intNInterfaceValAbstract_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValAbstract_I1_I2_I3.kt")
                public void testIntNInterfaceValAbstract_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract/intNInterfaceValAbstract_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValAbstract_I1_I2_I3_O2.kt")
                public void testIntNInterfaceValAbstract_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract/intNInterfaceValAbstract_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValAbstract_I1_I2_O1.kt")
                public void testIntNInterfaceValAbstract_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract/intNInterfaceValAbstract_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValAbstract_I1_I2_O1_I3.kt")
                public void testIntNInterfaceValAbstract_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract/intNInterfaceValAbstract_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValAbstract_I1_I2_O1_I3_O2.kt")
                public void testIntNInterfaceValAbstract_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract/intNInterfaceValAbstract_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValAbstract_I1_I2_O1_O2.kt")
                public void testIntNInterfaceValAbstract_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract/intNInterfaceValAbstract_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValAbstract_I1_I2_O2.kt")
                public void testIntNInterfaceValAbstract_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract/intNInterfaceValAbstract_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValAbstract_I1_I3.kt")
                public void testIntNInterfaceValAbstract_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract/intNInterfaceValAbstract_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValAbstract_I1_I3_O2.kt")
                public void testIntNInterfaceValAbstract_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract/intNInterfaceValAbstract_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValAbstract_I1_O1.kt")
                public void testIntNInterfaceValAbstract_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract/intNInterfaceValAbstract_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValAbstract_I1_O1_I3.kt")
                public void testIntNInterfaceValAbstract_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract/intNInterfaceValAbstract_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValAbstract_I1_O1_I3_O2.kt")
                public void testIntNInterfaceValAbstract_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract/intNInterfaceValAbstract_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValAbstract_I1_O1_O2.kt")
                public void testIntNInterfaceValAbstract_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract/intNInterfaceValAbstract_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValAbstract_I1_O2.kt")
                public void testIntNInterfaceValAbstract_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract/intNInterfaceValAbstract_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValAbstract_I2_O1.kt")
                public void testIntNInterfaceValAbstract_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract/intNInterfaceValAbstract_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValAbstract_I2_O1_I3.kt")
                public void testIntNInterfaceValAbstract_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract/intNInterfaceValAbstract_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValAbstract_I2_O1_I3_O2.kt")
                public void testIntNInterfaceValAbstract_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract/intNInterfaceValAbstract_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValAbstract_I2_O1_O2.kt")
                public void testIntNInterfaceValAbstract_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract/intNInterfaceValAbstract_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValAbstract_O1_I3_O2.kt")
                public void testIntNInterfaceValAbstract_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValAbstract/intNInterfaceValAbstract_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceValDefaultAll {
                @Test
                public void testAllFilesPresentInInterfaceValDefaultAll() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAllN.kt")
                public void testIntNInterfaceValDefaultAllN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAllN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I1.kt")
                public void testIntNInterfaceValDefaultAll_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I1_I2.kt")
                public void testIntNInterfaceValDefaultAll_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I1_I2_I3.kt")
                public void testIntNInterfaceValDefaultAll_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I1_I2_I3_O2.kt")
                public void testIntNInterfaceValDefaultAll_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I1_I2_O1.kt")
                public void testIntNInterfaceValDefaultAll_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I1_I2_O1_I3.kt")
                public void testIntNInterfaceValDefaultAll_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I1_I2_O1_I3_O2.kt")
                public void testIntNInterfaceValDefaultAll_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I1_I2_O1_O2.kt")
                public void testIntNInterfaceValDefaultAll_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I1_I2_O2.kt")
                public void testIntNInterfaceValDefaultAll_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I1_I3.kt")
                public void testIntNInterfaceValDefaultAll_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I1_I3_O2.kt")
                public void testIntNInterfaceValDefaultAll_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I1_O1.kt")
                public void testIntNInterfaceValDefaultAll_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I1_O1_I3.kt")
                public void testIntNInterfaceValDefaultAll_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I1_O1_I3_O2.kt")
                public void testIntNInterfaceValDefaultAll_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I1_O1_O2.kt")
                public void testIntNInterfaceValDefaultAll_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I1_O2.kt")
                public void testIntNInterfaceValDefaultAll_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I2.kt")
                public void testIntNInterfaceValDefaultAll_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I2_I3.kt")
                public void testIntNInterfaceValDefaultAll_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I2_I3_O2.kt")
                public void testIntNInterfaceValDefaultAll_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I2_O1.kt")
                public void testIntNInterfaceValDefaultAll_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I2_O1_I3.kt")
                public void testIntNInterfaceValDefaultAll_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I2_O1_I3_O2.kt")
                public void testIntNInterfaceValDefaultAll_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I2_O1_O2.kt")
                public void testIntNInterfaceValDefaultAll_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I2_O2.kt")
                public void testIntNInterfaceValDefaultAll_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I3.kt")
                public void testIntNInterfaceValDefaultAll_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_I3_O2.kt")
                public void testIntNInterfaceValDefaultAll_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_O1.kt")
                public void testIntNInterfaceValDefaultAll_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_O1_I3.kt")
                public void testIntNInterfaceValDefaultAll_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_O1_I3_O2.kt")
                public void testIntNInterfaceValDefaultAll_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_O1_O2.kt")
                public void testIntNInterfaceValDefaultAll_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultAll_O2.kt")
                public void testIntNInterfaceValDefaultAll_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultAll/intNInterfaceValDefaultAll_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceValDefaultDefault {
                @Test
                public void testAllFilesPresentInInterfaceValDefaultDefault() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefaultN.kt")
                public void testIntNInterfaceValDefaultDefaultN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefaultN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I1.kt")
                public void testIntNInterfaceValDefaultDefault_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I1_I2.kt")
                public void testIntNInterfaceValDefaultDefault_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I1_I2_I3.kt")
                public void testIntNInterfaceValDefaultDefault_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I1_I2_I3_O2.kt")
                public void testIntNInterfaceValDefaultDefault_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I1_I2_O1.kt")
                public void testIntNInterfaceValDefaultDefault_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I1_I2_O1_I3.kt")
                public void testIntNInterfaceValDefaultDefault_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I1_I2_O1_I3_O2.kt")
                public void testIntNInterfaceValDefaultDefault_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I1_I2_O1_O2.kt")
                public void testIntNInterfaceValDefaultDefault_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I1_I2_O2.kt")
                public void testIntNInterfaceValDefaultDefault_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I1_I3.kt")
                public void testIntNInterfaceValDefaultDefault_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I1_I3_O2.kt")
                public void testIntNInterfaceValDefaultDefault_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I1_O1.kt")
                public void testIntNInterfaceValDefaultDefault_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I1_O1_I3.kt")
                public void testIntNInterfaceValDefaultDefault_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I1_O1_I3_O2.kt")
                public void testIntNInterfaceValDefaultDefault_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I1_O1_O2.kt")
                public void testIntNInterfaceValDefaultDefault_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I1_O2.kt")
                public void testIntNInterfaceValDefaultDefault_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I2.kt")
                public void testIntNInterfaceValDefaultDefault_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I2_I3.kt")
                public void testIntNInterfaceValDefaultDefault_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I2_I3_O2.kt")
                public void testIntNInterfaceValDefaultDefault_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I2_O1.kt")
                public void testIntNInterfaceValDefaultDefault_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I2_O1_I3.kt")
                public void testIntNInterfaceValDefaultDefault_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I2_O1_I3_O2.kt")
                public void testIntNInterfaceValDefaultDefault_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I2_O1_O2.kt")
                public void testIntNInterfaceValDefaultDefault_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I2_O2.kt")
                public void testIntNInterfaceValDefaultDefault_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I3.kt")
                public void testIntNInterfaceValDefaultDefault_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_I3_O2.kt")
                public void testIntNInterfaceValDefaultDefault_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_O1.kt")
                public void testIntNInterfaceValDefaultDefault_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_O1_I3.kt")
                public void testIntNInterfaceValDefaultDefault_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_O1_I3_O2.kt")
                public void testIntNInterfaceValDefaultDefault_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_O1_O2.kt")
                public void testIntNInterfaceValDefaultDefault_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNInterfaceValDefaultDefault_O2.kt")
                public void testIntNInterfaceValDefaultDefault_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/interfaceValDefaultDefault/intNInterfaceValDefaultDefault_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/methodBottom")
            @TestDataPath("$PROJECT_ROOT")
            public class MethodBottom {
                @Test
                public void testAllFilesPresentInMethodBottom() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/methodBottom"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intNMethodBottom_I3_O2.kt")
                public void testIntNMethodBottom_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/methodBottom/intNMethodBottom_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNMethodBottom_O1.kt")
                public void testIntNMethodBottom_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/methodBottom/intNMethodBottom_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNMethodBottom_O1_I3.kt")
                public void testIntNMethodBottom_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/methodBottom/intNMethodBottom_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNMethodBottom_O1_I3_O2.kt")
                public void testIntNMethodBottom_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/methodBottom/intNMethodBottom_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNMethodBottom_O1_O2.kt")
                public void testIntNMethodBottom_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/methodBottom/intNMethodBottom_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethod")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenMethod {
                @Test
                public void testAllFilesPresentInOpenMethod() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethod"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intNOpenMethod_I1.kt")
                public void testIntNOpenMethod_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethod/intNOpenMethod_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenMethod_I1_I2.kt")
                public void testIntNOpenMethod_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethod/intNOpenMethod_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenMethod_I1_I2_I3.kt")
                public void testIntNOpenMethod_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethod/intNOpenMethod_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenMethod_I1_I2_I3_O2.kt")
                public void testIntNOpenMethod_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethod/intNOpenMethod_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenMethod_I1_I2_O1.kt")
                public void testIntNOpenMethod_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethod/intNOpenMethod_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenMethod_I1_I2_O1_I3.kt")
                public void testIntNOpenMethod_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethod/intNOpenMethod_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenMethod_I1_I2_O1_I3_O2.kt")
                public void testIntNOpenMethod_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethod/intNOpenMethod_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenMethod_I1_I2_O1_O2.kt")
                public void testIntNOpenMethod_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethod/intNOpenMethod_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenMethod_I1_I2_O2.kt")
                public void testIntNOpenMethod_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethod/intNOpenMethod_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenMethod_I1_I3.kt")
                public void testIntNOpenMethod_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethod/intNOpenMethod_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenMethod_I1_I3_O2.kt")
                public void testIntNOpenMethod_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethod/intNOpenMethod_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenMethod_I1_O1.kt")
                public void testIntNOpenMethod_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethod/intNOpenMethod_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenMethod_I1_O1_I3.kt")
                public void testIntNOpenMethod_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethod/intNOpenMethod_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenMethod_I1_O1_I3_O2.kt")
                public void testIntNOpenMethod_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethod/intNOpenMethod_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenMethod_I1_O1_O2.kt")
                public void testIntNOpenMethod_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethod/intNOpenMethod_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenMethod_I1_O2.kt")
                public void testIntNOpenMethod_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethod/intNOpenMethod_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethodMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenMethodMiddle {
                @Test
                public void testAllFilesPresentInOpenMethodMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethodMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intNOpenMethodMiddle_I2.kt")
                public void testIntNOpenMethodMiddle_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethodMiddle/intNOpenMethodMiddle_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenMethodMiddle_I2_I3.kt")
                public void testIntNOpenMethodMiddle_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethodMiddle/intNOpenMethodMiddle_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenMethodMiddle_I2_I3_O2.kt")
                public void testIntNOpenMethodMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethodMiddle/intNOpenMethodMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenMethodMiddle_I2_O2.kt")
                public void testIntNOpenMethodMiddle_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openMethodMiddle/intNOpenMethodMiddle_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openVal")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenVal {
                @Test
                public void testAllFilesPresentInOpenVal() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openVal"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intNOpenVal_I1.kt")
                public void testIntNOpenVal_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openVal/intNOpenVal_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenVal_I1_I2.kt")
                public void testIntNOpenVal_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openVal/intNOpenVal_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenVal_I1_I2_I3.kt")
                public void testIntNOpenVal_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openVal/intNOpenVal_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenVal_I1_I2_I3_O2.kt")
                public void testIntNOpenVal_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openVal/intNOpenVal_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenVal_I1_I2_O1.kt")
                public void testIntNOpenVal_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openVal/intNOpenVal_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenVal_I1_I2_O1_I3.kt")
                public void testIntNOpenVal_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openVal/intNOpenVal_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenVal_I1_I2_O1_I3_O2.kt")
                public void testIntNOpenVal_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openVal/intNOpenVal_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenVal_I1_I2_O1_O2.kt")
                public void testIntNOpenVal_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openVal/intNOpenVal_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenVal_I1_I2_O2.kt")
                public void testIntNOpenVal_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openVal/intNOpenVal_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenVal_I1_I3.kt")
                public void testIntNOpenVal_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openVal/intNOpenVal_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenVal_I1_I3_O2.kt")
                public void testIntNOpenVal_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openVal/intNOpenVal_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenVal_I1_O1.kt")
                public void testIntNOpenVal_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openVal/intNOpenVal_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenVal_I1_O1_I3.kt")
                public void testIntNOpenVal_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openVal/intNOpenVal_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenVal_I1_O1_I3_O2.kt")
                public void testIntNOpenVal_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openVal/intNOpenVal_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenVal_I1_O1_O2.kt")
                public void testIntNOpenVal_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openVal/intNOpenVal_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenVal_I1_O2.kt")
                public void testIntNOpenVal_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openVal/intNOpenVal_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openValMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenValMiddle {
                @Test
                public void testAllFilesPresentInOpenValMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openValMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intNOpenValMiddle_I2.kt")
                public void testIntNOpenValMiddle_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openValMiddle/intNOpenValMiddle_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenValMiddle_I2_I3.kt")
                public void testIntNOpenValMiddle_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openValMiddle/intNOpenValMiddle_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenValMiddle_I2_I3_O2.kt")
                public void testIntNOpenValMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openValMiddle/intNOpenValMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNOpenValMiddle_I2_O2.kt")
                public void testIntNOpenValMiddle_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/openValMiddle/intNOpenValMiddle_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString")
            @TestDataPath("$PROJECT_ROOT")
            public class ToString {
                @Test
                public void testAllFilesPresentInToString() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intNToStringN.kt")
                public void testIntNToStringN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToStringN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I1.kt")
                public void testIntNToString_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I1_I2.kt")
                public void testIntNToString_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I1_I2_I3.kt")
                public void testIntNToString_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I1_I2_I3_O2.kt")
                public void testIntNToString_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I1_I2_O1.kt")
                public void testIntNToString_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I1_I2_O1_I3.kt")
                public void testIntNToString_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I1_I2_O1_I3_O2.kt")
                public void testIntNToString_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I1_I2_O1_O2.kt")
                public void testIntNToString_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I1_I2_O2.kt")
                public void testIntNToString_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I1_I3.kt")
                public void testIntNToString_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I1_I3_O2.kt")
                public void testIntNToString_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I1_O1.kt")
                public void testIntNToString_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I1_O1_I3.kt")
                public void testIntNToString_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I1_O1_I3_O2.kt")
                public void testIntNToString_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I1_O1_O2.kt")
                public void testIntNToString_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I1_O2.kt")
                public void testIntNToString_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I2.kt")
                public void testIntNToString_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I2_I3.kt")
                public void testIntNToString_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I2_I3_O2.kt")
                public void testIntNToString_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I2_O1.kt")
                public void testIntNToString_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I2_O1_I3.kt")
                public void testIntNToString_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I2_O1_I3_O2.kt")
                public void testIntNToString_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I2_O1_O2.kt")
                public void testIntNToString_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I2_O2.kt")
                public void testIntNToString_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I3.kt")
                public void testIntNToString_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_I3_O2.kt")
                public void testIntNToString_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_O1.kt")
                public void testIntNToString_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_O1_I3.kt")
                public void testIntNToString_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_O1_I3_O2.kt")
                public void testIntNToString_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_O1_O2.kt")
                public void testIntNToString_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNToString_O2.kt")
                public void testIntNToString_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/toString/intNToString_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/valBottom")
            @TestDataPath("$PROJECT_ROOT")
            public class ValBottom {
                @Test
                public void testAllFilesPresentInValBottom() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/valBottom"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("intNValBottom_I3_O2.kt")
                public void testIntNValBottom_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/valBottom/intNValBottom_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNValBottom_O1.kt")
                public void testIntNValBottom_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/valBottom/intNValBottom_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNValBottom_O1_I3.kt")
                public void testIntNValBottom_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/valBottom/intNValBottom_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNValBottom_O1_I3_O2.kt")
                public void testIntNValBottom_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/valBottom/intNValBottom_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("intNValBottom_O1_O2.kt")
                public void testIntNValBottom_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/intN/valBottom/intNValBottom_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }
        }

        @Nested
        @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN")
        @TestDataPath("$PROJECT_ROOT")
        public class StringN {
            @Test
            public void testAllFilesPresentInStringN() throws Exception {
                KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/abstractMethod")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractMethod {
                @Test
                public void testAllFilesPresentInAbstractMethod() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/abstractMethod"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringNAbstractMethod_I1_I2_O1.kt")
                public void testStringNAbstractMethod_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/abstractMethod/stringNAbstractMethod_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNAbstractMethod_I1_I2_O1_I3.kt")
                public void testStringNAbstractMethod_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/abstractMethod/stringNAbstractMethod_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNAbstractMethod_I1_I2_O1_I3_O2.kt")
                public void testStringNAbstractMethod_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/abstractMethod/stringNAbstractMethod_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNAbstractMethod_I1_I2_O1_O2.kt")
                public void testStringNAbstractMethod_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/abstractMethod/stringNAbstractMethod_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNAbstractMethod_I1_O1_I3_O2.kt")
                public void testStringNAbstractMethod_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/abstractMethod/stringNAbstractMethod_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/abstractMethodMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractMethodMiddle {
                @Test
                public void testAllFilesPresentInAbstractMethodMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/abstractMethodMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringNAbstractMethodMiddle_I2_I3_O2.kt")
                public void testStringNAbstractMethodMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/abstractMethodMiddle/stringNAbstractMethodMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/abstractVal")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractVal {
                @Test
                public void testAllFilesPresentInAbstractVal() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/abstractVal"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringNAbstractVal_I1_I2_O1.kt")
                public void testStringNAbstractVal_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/abstractVal/stringNAbstractVal_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNAbstractVal_I1_I2_O1_I3.kt")
                public void testStringNAbstractVal_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/abstractVal/stringNAbstractVal_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNAbstractVal_I1_I2_O1_I3_O2.kt")
                public void testStringNAbstractVal_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/abstractVal/stringNAbstractVal_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNAbstractVal_I1_I2_O1_O2.kt")
                public void testStringNAbstractVal_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/abstractVal/stringNAbstractVal_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNAbstractVal_I1_O1_I3_O2.kt")
                public void testStringNAbstractVal_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/abstractVal/stringNAbstractVal_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/abstractValMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractValMiddle {
                @Test
                public void testAllFilesPresentInAbstractValMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/abstractValMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringNAbstractValMiddle_I2_I3_O2.kt")
                public void testStringNAbstractValMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/abstractValMiddle/stringNAbstractValMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode")
            @TestDataPath("$PROJECT_ROOT")
            public class HashCode {
                @Test
                public void testAllFilesPresentInHashCode() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringNHashCodeN.kt")
                public void testStringNHashCodeN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCodeN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I1.kt")
                public void testStringNHashCode_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I1_I2.kt")
                public void testStringNHashCode_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I1_I2_I3.kt")
                public void testStringNHashCode_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I1_I2_I3_O2.kt")
                public void testStringNHashCode_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I1_I2_O1.kt")
                public void testStringNHashCode_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I1_I2_O1_I3.kt")
                public void testStringNHashCode_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I1_I2_O1_I3_O2.kt")
                public void testStringNHashCode_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I1_I2_O1_O2.kt")
                public void testStringNHashCode_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I1_I2_O2.kt")
                public void testStringNHashCode_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I1_I3.kt")
                public void testStringNHashCode_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I1_I3_O2.kt")
                public void testStringNHashCode_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I1_O1.kt")
                public void testStringNHashCode_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I1_O1_I3.kt")
                public void testStringNHashCode_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I1_O1_I3_O2.kt")
                public void testStringNHashCode_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I1_O1_O2.kt")
                public void testStringNHashCode_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I1_O2.kt")
                public void testStringNHashCode_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I2.kt")
                public void testStringNHashCode_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I2_I3.kt")
                public void testStringNHashCode_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I2_I3_O2.kt")
                public void testStringNHashCode_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I2_O1.kt")
                public void testStringNHashCode_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I2_O1_I3.kt")
                public void testStringNHashCode_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I2_O1_I3_O2.kt")
                public void testStringNHashCode_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I2_O1_O2.kt")
                public void testStringNHashCode_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I2_O2.kt")
                public void testStringNHashCode_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I3.kt")
                public void testStringNHashCode_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_I3_O2.kt")
                public void testStringNHashCode_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_O1.kt")
                public void testStringNHashCode_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_O1_I3.kt")
                public void testStringNHashCode_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_O1_I3_O2.kt")
                public void testStringNHashCode_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_O1_O2.kt")
                public void testStringNHashCode_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNHashCode_O2.kt")
                public void testStringNHashCode_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/hashCode/stringNHashCode_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceMethodAbstract {
                @Test
                public void testAllFilesPresentInInterfaceMethodAbstract() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringNInterfaceMethodAbstract_I1.kt")
                public void testStringNInterfaceMethodAbstract_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract/stringNInterfaceMethodAbstract_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodAbstract_I1_I2.kt")
                public void testStringNInterfaceMethodAbstract_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract/stringNInterfaceMethodAbstract_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodAbstract_I1_I2_I3.kt")
                public void testStringNInterfaceMethodAbstract_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract/stringNInterfaceMethodAbstract_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodAbstract_I1_I2_I3_O2.kt")
                public void testStringNInterfaceMethodAbstract_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract/stringNInterfaceMethodAbstract_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodAbstract_I1_I2_O1.kt")
                public void testStringNInterfaceMethodAbstract_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract/stringNInterfaceMethodAbstract_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodAbstract_I1_I2_O1_I3.kt")
                public void testStringNInterfaceMethodAbstract_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract/stringNInterfaceMethodAbstract_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodAbstract_I1_I2_O1_I3_O2.kt")
                public void testStringNInterfaceMethodAbstract_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract/stringNInterfaceMethodAbstract_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodAbstract_I1_I2_O1_O2.kt")
                public void testStringNInterfaceMethodAbstract_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract/stringNInterfaceMethodAbstract_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodAbstract_I1_I2_O2.kt")
                public void testStringNInterfaceMethodAbstract_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract/stringNInterfaceMethodAbstract_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodAbstract_I1_I3.kt")
                public void testStringNInterfaceMethodAbstract_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract/stringNInterfaceMethodAbstract_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodAbstract_I1_I3_O2.kt")
                public void testStringNInterfaceMethodAbstract_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract/stringNInterfaceMethodAbstract_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodAbstract_I1_O1.kt")
                public void testStringNInterfaceMethodAbstract_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract/stringNInterfaceMethodAbstract_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodAbstract_I1_O1_I3.kt")
                public void testStringNInterfaceMethodAbstract_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract/stringNInterfaceMethodAbstract_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodAbstract_I1_O1_I3_O2.kt")
                public void testStringNInterfaceMethodAbstract_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract/stringNInterfaceMethodAbstract_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodAbstract_I1_O1_O2.kt")
                public void testStringNInterfaceMethodAbstract_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract/stringNInterfaceMethodAbstract_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodAbstract_I1_O2.kt")
                public void testStringNInterfaceMethodAbstract_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract/stringNInterfaceMethodAbstract_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodAbstract_I2_O1.kt")
                public void testStringNInterfaceMethodAbstract_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract/stringNInterfaceMethodAbstract_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodAbstract_I2_O1_I3.kt")
                public void testStringNInterfaceMethodAbstract_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract/stringNInterfaceMethodAbstract_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodAbstract_I2_O1_I3_O2.kt")
                public void testStringNInterfaceMethodAbstract_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract/stringNInterfaceMethodAbstract_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodAbstract_I2_O1_O2.kt")
                public void testStringNInterfaceMethodAbstract_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract/stringNInterfaceMethodAbstract_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodAbstract_O1_I3_O2.kt")
                public void testStringNInterfaceMethodAbstract_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodAbstract/stringNInterfaceMethodAbstract_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceMethodDefaultAll {
                @Test
                public void testAllFilesPresentInInterfaceMethodDefaultAll() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAllN.kt")
                public void testStringNInterfaceMethodDefaultAllN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAllN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I1.kt")
                public void testStringNInterfaceMethodDefaultAll_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I1_I2.kt")
                public void testStringNInterfaceMethodDefaultAll_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I1_I2_I3.kt")
                public void testStringNInterfaceMethodDefaultAll_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I1_I2_I3_O2.kt")
                public void testStringNInterfaceMethodDefaultAll_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I1_I2_O1.kt")
                public void testStringNInterfaceMethodDefaultAll_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I1_I2_O1_I3.kt")
                public void testStringNInterfaceMethodDefaultAll_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I1_I2_O1_I3_O2.kt")
                public void testStringNInterfaceMethodDefaultAll_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I1_I2_O1_O2.kt")
                public void testStringNInterfaceMethodDefaultAll_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I1_I2_O2.kt")
                public void testStringNInterfaceMethodDefaultAll_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I1_I3.kt")
                public void testStringNInterfaceMethodDefaultAll_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I1_I3_O2.kt")
                public void testStringNInterfaceMethodDefaultAll_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I1_O1.kt")
                public void testStringNInterfaceMethodDefaultAll_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I1_O1_I3.kt")
                public void testStringNInterfaceMethodDefaultAll_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I1_O1_I3_O2.kt")
                public void testStringNInterfaceMethodDefaultAll_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I1_O1_O2.kt")
                public void testStringNInterfaceMethodDefaultAll_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I1_O2.kt")
                public void testStringNInterfaceMethodDefaultAll_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I2.kt")
                public void testStringNInterfaceMethodDefaultAll_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I2_I3.kt")
                public void testStringNInterfaceMethodDefaultAll_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I2_I3_O2.kt")
                public void testStringNInterfaceMethodDefaultAll_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I2_O1.kt")
                public void testStringNInterfaceMethodDefaultAll_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I2_O1_I3.kt")
                public void testStringNInterfaceMethodDefaultAll_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I2_O1_I3_O2.kt")
                public void testStringNInterfaceMethodDefaultAll_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I2_O1_O2.kt")
                public void testStringNInterfaceMethodDefaultAll_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I2_O2.kt")
                public void testStringNInterfaceMethodDefaultAll_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I3.kt")
                public void testStringNInterfaceMethodDefaultAll_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_I3_O2.kt")
                public void testStringNInterfaceMethodDefaultAll_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_O1.kt")
                public void testStringNInterfaceMethodDefaultAll_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_O1_I3.kt")
                public void testStringNInterfaceMethodDefaultAll_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_O1_I3_O2.kt")
                public void testStringNInterfaceMethodDefaultAll_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_O1_O2.kt")
                public void testStringNInterfaceMethodDefaultAll_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultAll_O2.kt")
                public void testStringNInterfaceMethodDefaultAll_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultAll/stringNInterfaceMethodDefaultAll_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceMethodDefaultDefault {
                @Test
                public void testAllFilesPresentInInterfaceMethodDefaultDefault() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefaultN.kt")
                public void testStringNInterfaceMethodDefaultDefaultN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefaultN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I1.kt")
                public void testStringNInterfaceMethodDefaultDefault_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I1_I2.kt")
                public void testStringNInterfaceMethodDefaultDefault_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I1_I2_I3.kt")
                public void testStringNInterfaceMethodDefaultDefault_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I1_I2_I3_O2.kt")
                public void testStringNInterfaceMethodDefaultDefault_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I1_I2_O1.kt")
                public void testStringNInterfaceMethodDefaultDefault_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I1_I2_O1_I3.kt")
                public void testStringNInterfaceMethodDefaultDefault_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I1_I2_O1_I3_O2.kt")
                public void testStringNInterfaceMethodDefaultDefault_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I1_I2_O1_O2.kt")
                public void testStringNInterfaceMethodDefaultDefault_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I1_I2_O2.kt")
                public void testStringNInterfaceMethodDefaultDefault_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I1_I3.kt")
                public void testStringNInterfaceMethodDefaultDefault_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I1_I3_O2.kt")
                public void testStringNInterfaceMethodDefaultDefault_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I1_O1.kt")
                public void testStringNInterfaceMethodDefaultDefault_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I1_O1_I3.kt")
                public void testStringNInterfaceMethodDefaultDefault_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I1_O1_I3_O2.kt")
                public void testStringNInterfaceMethodDefaultDefault_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I1_O1_O2.kt")
                public void testStringNInterfaceMethodDefaultDefault_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I1_O2.kt")
                public void testStringNInterfaceMethodDefaultDefault_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I2.kt")
                public void testStringNInterfaceMethodDefaultDefault_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I2_I3.kt")
                public void testStringNInterfaceMethodDefaultDefault_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I2_I3_O2.kt")
                public void testStringNInterfaceMethodDefaultDefault_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I2_O1.kt")
                public void testStringNInterfaceMethodDefaultDefault_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I2_O1_I3.kt")
                public void testStringNInterfaceMethodDefaultDefault_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I2_O1_I3_O2.kt")
                public void testStringNInterfaceMethodDefaultDefault_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I2_O1_O2.kt")
                public void testStringNInterfaceMethodDefaultDefault_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I2_O2.kt")
                public void testStringNInterfaceMethodDefaultDefault_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I3.kt")
                public void testStringNInterfaceMethodDefaultDefault_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_I3_O2.kt")
                public void testStringNInterfaceMethodDefaultDefault_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_O1.kt")
                public void testStringNInterfaceMethodDefaultDefault_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_O1_I3.kt")
                public void testStringNInterfaceMethodDefaultDefault_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_O1_I3_O2.kt")
                public void testStringNInterfaceMethodDefaultDefault_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_O1_O2.kt")
                public void testStringNInterfaceMethodDefaultDefault_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceMethodDefaultDefault_O2.kt")
                public void testStringNInterfaceMethodDefaultDefault_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceMethodDefaultDefault/stringNInterfaceMethodDefaultDefault_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceValAbstract {
                @Test
                public void testAllFilesPresentInInterfaceValAbstract() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringNInterfaceValAbstract_I1.kt")
                public void testStringNInterfaceValAbstract_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract/stringNInterfaceValAbstract_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValAbstract_I1_I2.kt")
                public void testStringNInterfaceValAbstract_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract/stringNInterfaceValAbstract_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValAbstract_I1_I2_I3.kt")
                public void testStringNInterfaceValAbstract_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract/stringNInterfaceValAbstract_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValAbstract_I1_I2_I3_O2.kt")
                public void testStringNInterfaceValAbstract_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract/stringNInterfaceValAbstract_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValAbstract_I1_I2_O1.kt")
                public void testStringNInterfaceValAbstract_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract/stringNInterfaceValAbstract_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValAbstract_I1_I2_O1_I3.kt")
                public void testStringNInterfaceValAbstract_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract/stringNInterfaceValAbstract_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValAbstract_I1_I2_O1_I3_O2.kt")
                public void testStringNInterfaceValAbstract_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract/stringNInterfaceValAbstract_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValAbstract_I1_I2_O1_O2.kt")
                public void testStringNInterfaceValAbstract_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract/stringNInterfaceValAbstract_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValAbstract_I1_I2_O2.kt")
                public void testStringNInterfaceValAbstract_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract/stringNInterfaceValAbstract_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValAbstract_I1_I3.kt")
                public void testStringNInterfaceValAbstract_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract/stringNInterfaceValAbstract_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValAbstract_I1_I3_O2.kt")
                public void testStringNInterfaceValAbstract_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract/stringNInterfaceValAbstract_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValAbstract_I1_O1.kt")
                public void testStringNInterfaceValAbstract_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract/stringNInterfaceValAbstract_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValAbstract_I1_O1_I3.kt")
                public void testStringNInterfaceValAbstract_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract/stringNInterfaceValAbstract_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValAbstract_I1_O1_I3_O2.kt")
                public void testStringNInterfaceValAbstract_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract/stringNInterfaceValAbstract_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValAbstract_I1_O1_O2.kt")
                public void testStringNInterfaceValAbstract_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract/stringNInterfaceValAbstract_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValAbstract_I1_O2.kt")
                public void testStringNInterfaceValAbstract_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract/stringNInterfaceValAbstract_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValAbstract_I2_O1.kt")
                public void testStringNInterfaceValAbstract_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract/stringNInterfaceValAbstract_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValAbstract_I2_O1_I3.kt")
                public void testStringNInterfaceValAbstract_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract/stringNInterfaceValAbstract_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValAbstract_I2_O1_I3_O2.kt")
                public void testStringNInterfaceValAbstract_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract/stringNInterfaceValAbstract_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValAbstract_I2_O1_O2.kt")
                public void testStringNInterfaceValAbstract_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract/stringNInterfaceValAbstract_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValAbstract_O1_I3_O2.kt")
                public void testStringNInterfaceValAbstract_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValAbstract/stringNInterfaceValAbstract_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceValDefaultAll {
                @Test
                public void testAllFilesPresentInInterfaceValDefaultAll() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAllN.kt")
                public void testStringNInterfaceValDefaultAllN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAllN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I1.kt")
                public void testStringNInterfaceValDefaultAll_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I1_I2.kt")
                public void testStringNInterfaceValDefaultAll_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I1_I2_I3.kt")
                public void testStringNInterfaceValDefaultAll_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I1_I2_I3_O2.kt")
                public void testStringNInterfaceValDefaultAll_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I1_I2_O1.kt")
                public void testStringNInterfaceValDefaultAll_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I1_I2_O1_I3.kt")
                public void testStringNInterfaceValDefaultAll_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I1_I2_O1_I3_O2.kt")
                public void testStringNInterfaceValDefaultAll_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I1_I2_O1_O2.kt")
                public void testStringNInterfaceValDefaultAll_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I1_I2_O2.kt")
                public void testStringNInterfaceValDefaultAll_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I1_I3.kt")
                public void testStringNInterfaceValDefaultAll_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I1_I3_O2.kt")
                public void testStringNInterfaceValDefaultAll_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I1_O1.kt")
                public void testStringNInterfaceValDefaultAll_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I1_O1_I3.kt")
                public void testStringNInterfaceValDefaultAll_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I1_O1_I3_O2.kt")
                public void testStringNInterfaceValDefaultAll_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I1_O1_O2.kt")
                public void testStringNInterfaceValDefaultAll_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I1_O2.kt")
                public void testStringNInterfaceValDefaultAll_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I2.kt")
                public void testStringNInterfaceValDefaultAll_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I2_I3.kt")
                public void testStringNInterfaceValDefaultAll_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I2_I3_O2.kt")
                public void testStringNInterfaceValDefaultAll_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I2_O1.kt")
                public void testStringNInterfaceValDefaultAll_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I2_O1_I3.kt")
                public void testStringNInterfaceValDefaultAll_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I2_O1_I3_O2.kt")
                public void testStringNInterfaceValDefaultAll_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I2_O1_O2.kt")
                public void testStringNInterfaceValDefaultAll_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I2_O2.kt")
                public void testStringNInterfaceValDefaultAll_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I3.kt")
                public void testStringNInterfaceValDefaultAll_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_I3_O2.kt")
                public void testStringNInterfaceValDefaultAll_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_O1.kt")
                public void testStringNInterfaceValDefaultAll_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_O1_I3.kt")
                public void testStringNInterfaceValDefaultAll_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_O1_I3_O2.kt")
                public void testStringNInterfaceValDefaultAll_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_O1_O2.kt")
                public void testStringNInterfaceValDefaultAll_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultAll_O2.kt")
                public void testStringNInterfaceValDefaultAll_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultAll/stringNInterfaceValDefaultAll_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceValDefaultDefault {
                @Test
                public void testAllFilesPresentInInterfaceValDefaultDefault() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefaultN.kt")
                public void testStringNInterfaceValDefaultDefaultN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefaultN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I1.kt")
                public void testStringNInterfaceValDefaultDefault_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I1_I2.kt")
                public void testStringNInterfaceValDefaultDefault_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I1_I2_I3.kt")
                public void testStringNInterfaceValDefaultDefault_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I1_I2_I3_O2.kt")
                public void testStringNInterfaceValDefaultDefault_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I1_I2_O1.kt")
                public void testStringNInterfaceValDefaultDefault_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I1_I2_O1_I3.kt")
                public void testStringNInterfaceValDefaultDefault_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I1_I2_O1_I3_O2.kt")
                public void testStringNInterfaceValDefaultDefault_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I1_I2_O1_O2.kt")
                public void testStringNInterfaceValDefaultDefault_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I1_I2_O2.kt")
                public void testStringNInterfaceValDefaultDefault_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I1_I3.kt")
                public void testStringNInterfaceValDefaultDefault_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I1_I3_O2.kt")
                public void testStringNInterfaceValDefaultDefault_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I1_O1.kt")
                public void testStringNInterfaceValDefaultDefault_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I1_O1_I3.kt")
                public void testStringNInterfaceValDefaultDefault_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I1_O1_I3_O2.kt")
                public void testStringNInterfaceValDefaultDefault_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I1_O1_O2.kt")
                public void testStringNInterfaceValDefaultDefault_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I1_O2.kt")
                public void testStringNInterfaceValDefaultDefault_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I2.kt")
                public void testStringNInterfaceValDefaultDefault_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I2_I3.kt")
                public void testStringNInterfaceValDefaultDefault_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I2_I3_O2.kt")
                public void testStringNInterfaceValDefaultDefault_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I2_O1.kt")
                public void testStringNInterfaceValDefaultDefault_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I2_O1_I3.kt")
                public void testStringNInterfaceValDefaultDefault_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I2_O1_I3_O2.kt")
                public void testStringNInterfaceValDefaultDefault_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I2_O1_O2.kt")
                public void testStringNInterfaceValDefaultDefault_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I2_O2.kt")
                public void testStringNInterfaceValDefaultDefault_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I3.kt")
                public void testStringNInterfaceValDefaultDefault_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_I3_O2.kt")
                public void testStringNInterfaceValDefaultDefault_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_O1.kt")
                public void testStringNInterfaceValDefaultDefault_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_O1_I3.kt")
                public void testStringNInterfaceValDefaultDefault_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_O1_I3_O2.kt")
                public void testStringNInterfaceValDefaultDefault_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_O1_O2.kt")
                public void testStringNInterfaceValDefaultDefault_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNInterfaceValDefaultDefault_O2.kt")
                public void testStringNInterfaceValDefaultDefault_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/interfaceValDefaultDefault/stringNInterfaceValDefaultDefault_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/methodBottom")
            @TestDataPath("$PROJECT_ROOT")
            public class MethodBottom {
                @Test
                public void testAllFilesPresentInMethodBottom() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/methodBottom"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringNMethodBottom_I3_O2.kt")
                public void testStringNMethodBottom_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/methodBottom/stringNMethodBottom_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNMethodBottom_O1.kt")
                public void testStringNMethodBottom_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/methodBottom/stringNMethodBottom_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNMethodBottom_O1_I3.kt")
                public void testStringNMethodBottom_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/methodBottom/stringNMethodBottom_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNMethodBottom_O1_I3_O2.kt")
                public void testStringNMethodBottom_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/methodBottom/stringNMethodBottom_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNMethodBottom_O1_O2.kt")
                public void testStringNMethodBottom_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/methodBottom/stringNMethodBottom_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethod")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenMethod {
                @Test
                public void testAllFilesPresentInOpenMethod() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethod"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringNOpenMethod_I1.kt")
                public void testStringNOpenMethod_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethod/stringNOpenMethod_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenMethod_I1_I2.kt")
                public void testStringNOpenMethod_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethod/stringNOpenMethod_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenMethod_I1_I2_I3.kt")
                public void testStringNOpenMethod_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethod/stringNOpenMethod_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenMethod_I1_I2_I3_O2.kt")
                public void testStringNOpenMethod_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethod/stringNOpenMethod_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenMethod_I1_I2_O1.kt")
                public void testStringNOpenMethod_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethod/stringNOpenMethod_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenMethod_I1_I2_O1_I3.kt")
                public void testStringNOpenMethod_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethod/stringNOpenMethod_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenMethod_I1_I2_O1_I3_O2.kt")
                public void testStringNOpenMethod_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethod/stringNOpenMethod_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenMethod_I1_I2_O1_O2.kt")
                public void testStringNOpenMethod_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethod/stringNOpenMethod_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenMethod_I1_I2_O2.kt")
                public void testStringNOpenMethod_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethod/stringNOpenMethod_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenMethod_I1_I3.kt")
                public void testStringNOpenMethod_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethod/stringNOpenMethod_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenMethod_I1_I3_O2.kt")
                public void testStringNOpenMethod_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethod/stringNOpenMethod_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenMethod_I1_O1.kt")
                public void testStringNOpenMethod_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethod/stringNOpenMethod_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenMethod_I1_O1_I3.kt")
                public void testStringNOpenMethod_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethod/stringNOpenMethod_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenMethod_I1_O1_I3_O2.kt")
                public void testStringNOpenMethod_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethod/stringNOpenMethod_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenMethod_I1_O1_O2.kt")
                public void testStringNOpenMethod_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethod/stringNOpenMethod_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenMethod_I1_O2.kt")
                public void testStringNOpenMethod_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethod/stringNOpenMethod_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethodMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenMethodMiddle {
                @Test
                public void testAllFilesPresentInOpenMethodMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethodMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringNOpenMethodMiddle_I2.kt")
                public void testStringNOpenMethodMiddle_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethodMiddle/stringNOpenMethodMiddle_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenMethodMiddle_I2_I3.kt")
                public void testStringNOpenMethodMiddle_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethodMiddle/stringNOpenMethodMiddle_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenMethodMiddle_I2_I3_O2.kt")
                public void testStringNOpenMethodMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethodMiddle/stringNOpenMethodMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenMethodMiddle_I2_O2.kt")
                public void testStringNOpenMethodMiddle_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openMethodMiddle/stringNOpenMethodMiddle_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openVal")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenVal {
                @Test
                public void testAllFilesPresentInOpenVal() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openVal"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringNOpenVal_I1.kt")
                public void testStringNOpenVal_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openVal/stringNOpenVal_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenVal_I1_I2.kt")
                public void testStringNOpenVal_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openVal/stringNOpenVal_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenVal_I1_I2_I3.kt")
                public void testStringNOpenVal_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openVal/stringNOpenVal_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenVal_I1_I2_I3_O2.kt")
                public void testStringNOpenVal_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openVal/stringNOpenVal_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenVal_I1_I2_O1.kt")
                public void testStringNOpenVal_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openVal/stringNOpenVal_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenVal_I1_I2_O1_I3.kt")
                public void testStringNOpenVal_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openVal/stringNOpenVal_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenVal_I1_I2_O1_I3_O2.kt")
                public void testStringNOpenVal_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openVal/stringNOpenVal_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenVal_I1_I2_O1_O2.kt")
                public void testStringNOpenVal_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openVal/stringNOpenVal_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenVal_I1_I2_O2.kt")
                public void testStringNOpenVal_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openVal/stringNOpenVal_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenVal_I1_I3.kt")
                public void testStringNOpenVal_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openVal/stringNOpenVal_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenVal_I1_I3_O2.kt")
                public void testStringNOpenVal_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openVal/stringNOpenVal_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenVal_I1_O1.kt")
                public void testStringNOpenVal_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openVal/stringNOpenVal_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenVal_I1_O1_I3.kt")
                public void testStringNOpenVal_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openVal/stringNOpenVal_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenVal_I1_O1_I3_O2.kt")
                public void testStringNOpenVal_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openVal/stringNOpenVal_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenVal_I1_O1_O2.kt")
                public void testStringNOpenVal_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openVal/stringNOpenVal_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenVal_I1_O2.kt")
                public void testStringNOpenVal_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openVal/stringNOpenVal_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openValMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenValMiddle {
                @Test
                public void testAllFilesPresentInOpenValMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openValMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringNOpenValMiddle_I2.kt")
                public void testStringNOpenValMiddle_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openValMiddle/stringNOpenValMiddle_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenValMiddle_I2_I3.kt")
                public void testStringNOpenValMiddle_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openValMiddle/stringNOpenValMiddle_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenValMiddle_I2_I3_O2.kt")
                public void testStringNOpenValMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openValMiddle/stringNOpenValMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNOpenValMiddle_I2_O2.kt")
                public void testStringNOpenValMiddle_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/openValMiddle/stringNOpenValMiddle_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString")
            @TestDataPath("$PROJECT_ROOT")
            public class ToString {
                @Test
                public void testAllFilesPresentInToString() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringNToStringN.kt")
                public void testStringNToStringN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToStringN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I1.kt")
                public void testStringNToString_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I1_I2.kt")
                public void testStringNToString_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I1_I2_I3.kt")
                public void testStringNToString_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I1_I2_I3_O2.kt")
                public void testStringNToString_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I1_I2_O1.kt")
                public void testStringNToString_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I1_I2_O1_I3.kt")
                public void testStringNToString_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I1_I2_O1_I3_O2.kt")
                public void testStringNToString_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I1_I2_O1_O2.kt")
                public void testStringNToString_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I1_I2_O2.kt")
                public void testStringNToString_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I1_I3.kt")
                public void testStringNToString_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I1_I3_O2.kt")
                public void testStringNToString_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I1_O1.kt")
                public void testStringNToString_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I1_O1_I3.kt")
                public void testStringNToString_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I1_O1_I3_O2.kt")
                public void testStringNToString_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I1_O1_O2.kt")
                public void testStringNToString_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I1_O2.kt")
                public void testStringNToString_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I2.kt")
                public void testStringNToString_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I2_I3.kt")
                public void testStringNToString_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I2_I3_O2.kt")
                public void testStringNToString_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I2_O1.kt")
                public void testStringNToString_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I2_O1_I3.kt")
                public void testStringNToString_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I2_O1_I3_O2.kt")
                public void testStringNToString_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I2_O1_O2.kt")
                public void testStringNToString_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I2_O2.kt")
                public void testStringNToString_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I3.kt")
                public void testStringNToString_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_I3_O2.kt")
                public void testStringNToString_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_O1.kt")
                public void testStringNToString_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_O1_I3.kt")
                public void testStringNToString_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_O1_I3_O2.kt")
                public void testStringNToString_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_O1_O2.kt")
                public void testStringNToString_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNToString_O2.kt")
                public void testStringNToString_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/toString/stringNToString_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/valBottom")
            @TestDataPath("$PROJECT_ROOT")
            public class ValBottom {
                @Test
                public void testAllFilesPresentInValBottom() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/valBottom"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringNValBottom_I3_O2.kt")
                public void testStringNValBottom_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/valBottom/stringNValBottom_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNValBottom_O1.kt")
                public void testStringNValBottom_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/valBottom/stringNValBottom_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNValBottom_O1_I3.kt")
                public void testStringNValBottom_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/valBottom/stringNValBottom_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNValBottom_O1_I3_O2.kt")
                public void testStringNValBottom_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/valBottom/stringNValBottom_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringNValBottom_O1_O2.kt")
                public void testStringNValBottom_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/stringN/valBottom/stringNValBottom_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }
        }

        @Nested
        @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/_string")
        @TestDataPath("$PROJECT_ROOT")
        public class _string {
            @Test
            public void testAllFilesPresentIn_string() throws Exception {
                KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/_string"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/abstractMethod")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractMethod {
                @Test
                public void testAllFilesPresentInAbstractMethod() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/abstractMethod"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringAbstractMethod_I1_I2_O1.kt")
                public void testStringAbstractMethod_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/abstractMethod/stringAbstractMethod_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringAbstractMethod_I1_I2_O1_I3.kt")
                public void testStringAbstractMethod_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/abstractMethod/stringAbstractMethod_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringAbstractMethod_I1_I2_O1_I3_O2.kt")
                public void testStringAbstractMethod_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/abstractMethod/stringAbstractMethod_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringAbstractMethod_I1_I2_O1_O2.kt")
                public void testStringAbstractMethod_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/abstractMethod/stringAbstractMethod_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringAbstractMethod_I1_O1_I3_O2.kt")
                public void testStringAbstractMethod_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/abstractMethod/stringAbstractMethod_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/abstractMethodMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractMethodMiddle {
                @Test
                public void testAllFilesPresentInAbstractMethodMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/abstractMethodMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringAbstractMethodMiddle_I2_I3_O2.kt")
                public void testStringAbstractMethodMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/abstractMethodMiddle/stringAbstractMethodMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/abstractVal")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractVal {
                @Test
                public void testAllFilesPresentInAbstractVal() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/abstractVal"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringAbstractVal_I1_I2_O1.kt")
                public void testStringAbstractVal_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/abstractVal/stringAbstractVal_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringAbstractVal_I1_I2_O1_I3.kt")
                public void testStringAbstractVal_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/abstractVal/stringAbstractVal_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringAbstractVal_I1_I2_O1_I3_O2.kt")
                public void testStringAbstractVal_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/abstractVal/stringAbstractVal_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringAbstractVal_I1_I2_O1_O2.kt")
                public void testStringAbstractVal_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/abstractVal/stringAbstractVal_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringAbstractVal_I1_O1_I3_O2.kt")
                public void testStringAbstractVal_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/abstractVal/stringAbstractVal_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/abstractValMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class AbstractValMiddle {
                @Test
                public void testAllFilesPresentInAbstractValMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/abstractValMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringAbstractValMiddle_I2_I3_O2.kt")
                public void testStringAbstractValMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/abstractValMiddle/stringAbstractValMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode")
            @TestDataPath("$PROJECT_ROOT")
            public class HashCode {
                @Test
                public void testAllFilesPresentInHashCode() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringHashCodeN.kt")
                public void testStringHashCodeN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCodeN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I1.kt")
                public void testStringHashCode_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I1_I2.kt")
                public void testStringHashCode_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I1_I2_I3.kt")
                public void testStringHashCode_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I1_I2_I3_O2.kt")
                public void testStringHashCode_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I1_I2_O1.kt")
                public void testStringHashCode_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I1_I2_O1_I3.kt")
                public void testStringHashCode_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I1_I2_O1_I3_O2.kt")
                public void testStringHashCode_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I1_I2_O1_O2.kt")
                public void testStringHashCode_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I1_I2_O2.kt")
                public void testStringHashCode_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I1_I3.kt")
                public void testStringHashCode_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I1_I3_O2.kt")
                public void testStringHashCode_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I1_O1.kt")
                public void testStringHashCode_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I1_O1_I3.kt")
                public void testStringHashCode_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I1_O1_I3_O2.kt")
                public void testStringHashCode_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I1_O1_O2.kt")
                public void testStringHashCode_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I1_O2.kt")
                public void testStringHashCode_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I2.kt")
                public void testStringHashCode_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I2_I3.kt")
                public void testStringHashCode_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I2_I3_O2.kt")
                public void testStringHashCode_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I2_O1.kt")
                public void testStringHashCode_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I2_O1_I3.kt")
                public void testStringHashCode_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I2_O1_I3_O2.kt")
                public void testStringHashCode_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I2_O1_O2.kt")
                public void testStringHashCode_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I2_O2.kt")
                public void testStringHashCode_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I3.kt")
                public void testStringHashCode_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_I3_O2.kt")
                public void testStringHashCode_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_O1.kt")
                public void testStringHashCode_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_O1_I3.kt")
                public void testStringHashCode_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_O1_I3_O2.kt")
                public void testStringHashCode_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_O1_O2.kt")
                public void testStringHashCode_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringHashCode_O2.kt")
                public void testStringHashCode_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/hashCode/stringHashCode_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceMethodAbstract {
                @Test
                public void testAllFilesPresentInInterfaceMethodAbstract() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringInterfaceMethodAbstract_I1.kt")
                public void testStringInterfaceMethodAbstract_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract/stringInterfaceMethodAbstract_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodAbstract_I1_I2.kt")
                public void testStringInterfaceMethodAbstract_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract/stringInterfaceMethodAbstract_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodAbstract_I1_I2_I3.kt")
                public void testStringInterfaceMethodAbstract_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract/stringInterfaceMethodAbstract_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodAbstract_I1_I2_I3_O2.kt")
                public void testStringInterfaceMethodAbstract_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract/stringInterfaceMethodAbstract_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodAbstract_I1_I2_O1.kt")
                public void testStringInterfaceMethodAbstract_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract/stringInterfaceMethodAbstract_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodAbstract_I1_I2_O1_I3.kt")
                public void testStringInterfaceMethodAbstract_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract/stringInterfaceMethodAbstract_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodAbstract_I1_I2_O1_I3_O2.kt")
                public void testStringInterfaceMethodAbstract_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract/stringInterfaceMethodAbstract_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodAbstract_I1_I2_O1_O2.kt")
                public void testStringInterfaceMethodAbstract_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract/stringInterfaceMethodAbstract_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodAbstract_I1_I2_O2.kt")
                public void testStringInterfaceMethodAbstract_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract/stringInterfaceMethodAbstract_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodAbstract_I1_I3.kt")
                public void testStringInterfaceMethodAbstract_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract/stringInterfaceMethodAbstract_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodAbstract_I1_I3_O2.kt")
                public void testStringInterfaceMethodAbstract_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract/stringInterfaceMethodAbstract_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodAbstract_I1_O1.kt")
                public void testStringInterfaceMethodAbstract_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract/stringInterfaceMethodAbstract_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodAbstract_I1_O1_I3.kt")
                public void testStringInterfaceMethodAbstract_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract/stringInterfaceMethodAbstract_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodAbstract_I1_O1_I3_O2.kt")
                public void testStringInterfaceMethodAbstract_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract/stringInterfaceMethodAbstract_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodAbstract_I1_O1_O2.kt")
                public void testStringInterfaceMethodAbstract_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract/stringInterfaceMethodAbstract_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodAbstract_I1_O2.kt")
                public void testStringInterfaceMethodAbstract_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract/stringInterfaceMethodAbstract_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodAbstract_I2_O1.kt")
                public void testStringInterfaceMethodAbstract_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract/stringInterfaceMethodAbstract_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodAbstract_I2_O1_I3.kt")
                public void testStringInterfaceMethodAbstract_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract/stringInterfaceMethodAbstract_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodAbstract_I2_O1_I3_O2.kt")
                public void testStringInterfaceMethodAbstract_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract/stringInterfaceMethodAbstract_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodAbstract_I2_O1_O2.kt")
                public void testStringInterfaceMethodAbstract_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract/stringInterfaceMethodAbstract_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodAbstract_O1_I3_O2.kt")
                public void testStringInterfaceMethodAbstract_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodAbstract/stringInterfaceMethodAbstract_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceMethodDefaultAll {
                @Test
                public void testAllFilesPresentInInterfaceMethodDefaultAll() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAllN.kt")
                public void testStringInterfaceMethodDefaultAllN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAllN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I1.kt")
                public void testStringInterfaceMethodDefaultAll_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I1_I2.kt")
                public void testStringInterfaceMethodDefaultAll_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I1_I2_I3.kt")
                public void testStringInterfaceMethodDefaultAll_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I1_I2_I3_O2.kt")
                public void testStringInterfaceMethodDefaultAll_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I1_I2_O1.kt")
                public void testStringInterfaceMethodDefaultAll_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I1_I2_O1_I3.kt")
                public void testStringInterfaceMethodDefaultAll_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I1_I2_O1_I3_O2.kt")
                public void testStringInterfaceMethodDefaultAll_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I1_I2_O1_O2.kt")
                public void testStringInterfaceMethodDefaultAll_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I1_I2_O2.kt")
                public void testStringInterfaceMethodDefaultAll_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I1_I3.kt")
                public void testStringInterfaceMethodDefaultAll_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I1_I3_O2.kt")
                public void testStringInterfaceMethodDefaultAll_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I1_O1.kt")
                public void testStringInterfaceMethodDefaultAll_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I1_O1_I3.kt")
                public void testStringInterfaceMethodDefaultAll_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I1_O1_I3_O2.kt")
                public void testStringInterfaceMethodDefaultAll_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I1_O1_O2.kt")
                public void testStringInterfaceMethodDefaultAll_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I1_O2.kt")
                public void testStringInterfaceMethodDefaultAll_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I2.kt")
                public void testStringInterfaceMethodDefaultAll_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I2_I3.kt")
                public void testStringInterfaceMethodDefaultAll_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I2_I3_O2.kt")
                public void testStringInterfaceMethodDefaultAll_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I2_O1.kt")
                public void testStringInterfaceMethodDefaultAll_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I2_O1_I3.kt")
                public void testStringInterfaceMethodDefaultAll_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I2_O1_I3_O2.kt")
                public void testStringInterfaceMethodDefaultAll_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I2_O1_O2.kt")
                public void testStringInterfaceMethodDefaultAll_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I2_O2.kt")
                public void testStringInterfaceMethodDefaultAll_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I3.kt")
                public void testStringInterfaceMethodDefaultAll_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_I3_O2.kt")
                public void testStringInterfaceMethodDefaultAll_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_O1.kt")
                public void testStringInterfaceMethodDefaultAll_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_O1_I3.kt")
                public void testStringInterfaceMethodDefaultAll_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_O1_I3_O2.kt")
                public void testStringInterfaceMethodDefaultAll_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_O1_O2.kt")
                public void testStringInterfaceMethodDefaultAll_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultAll_O2.kt")
                public void testStringInterfaceMethodDefaultAll_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultAll/stringInterfaceMethodDefaultAll_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceMethodDefaultDefault {
                @Test
                public void testAllFilesPresentInInterfaceMethodDefaultDefault() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefaultN.kt")
                public void testStringInterfaceMethodDefaultDefaultN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefaultN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I1.kt")
                public void testStringInterfaceMethodDefaultDefault_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I1_I2.kt")
                public void testStringInterfaceMethodDefaultDefault_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I1_I2_I3.kt")
                public void testStringInterfaceMethodDefaultDefault_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I1_I2_I3_O2.kt")
                public void testStringInterfaceMethodDefaultDefault_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I1_I2_O1.kt")
                public void testStringInterfaceMethodDefaultDefault_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I1_I2_O1_I3.kt")
                public void testStringInterfaceMethodDefaultDefault_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I1_I2_O1_I3_O2.kt")
                public void testStringInterfaceMethodDefaultDefault_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I1_I2_O1_O2.kt")
                public void testStringInterfaceMethodDefaultDefault_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I1_I2_O2.kt")
                public void testStringInterfaceMethodDefaultDefault_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I1_I3.kt")
                public void testStringInterfaceMethodDefaultDefault_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I1_I3_O2.kt")
                public void testStringInterfaceMethodDefaultDefault_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I1_O1.kt")
                public void testStringInterfaceMethodDefaultDefault_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I1_O1_I3.kt")
                public void testStringInterfaceMethodDefaultDefault_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I1_O1_I3_O2.kt")
                public void testStringInterfaceMethodDefaultDefault_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I1_O1_O2.kt")
                public void testStringInterfaceMethodDefaultDefault_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I1_O2.kt")
                public void testStringInterfaceMethodDefaultDefault_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I2.kt")
                public void testStringInterfaceMethodDefaultDefault_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I2_I3.kt")
                public void testStringInterfaceMethodDefaultDefault_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I2_I3_O2.kt")
                public void testStringInterfaceMethodDefaultDefault_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I2_O1.kt")
                public void testStringInterfaceMethodDefaultDefault_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I2_O1_I3.kt")
                public void testStringInterfaceMethodDefaultDefault_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I2_O1_I3_O2.kt")
                public void testStringInterfaceMethodDefaultDefault_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I2_O1_O2.kt")
                public void testStringInterfaceMethodDefaultDefault_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I2_O2.kt")
                public void testStringInterfaceMethodDefaultDefault_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I3.kt")
                public void testStringInterfaceMethodDefaultDefault_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_I3_O2.kt")
                public void testStringInterfaceMethodDefaultDefault_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_O1.kt")
                public void testStringInterfaceMethodDefaultDefault_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_O1_I3.kt")
                public void testStringInterfaceMethodDefaultDefault_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_O1_I3_O2.kt")
                public void testStringInterfaceMethodDefaultDefault_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_O1_O2.kt")
                public void testStringInterfaceMethodDefaultDefault_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceMethodDefaultDefault_O2.kt")
                public void testStringInterfaceMethodDefaultDefault_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceMethodDefaultDefault/stringInterfaceMethodDefaultDefault_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceValAbstract {
                @Test
                public void testAllFilesPresentInInterfaceValAbstract() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringInterfaceValAbstract_I1.kt")
                public void testStringInterfaceValAbstract_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract/stringInterfaceValAbstract_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValAbstract_I1_I2.kt")
                public void testStringInterfaceValAbstract_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract/stringInterfaceValAbstract_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValAbstract_I1_I2_I3.kt")
                public void testStringInterfaceValAbstract_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract/stringInterfaceValAbstract_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValAbstract_I1_I2_I3_O2.kt")
                public void testStringInterfaceValAbstract_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract/stringInterfaceValAbstract_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValAbstract_I1_I2_O1.kt")
                public void testStringInterfaceValAbstract_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract/stringInterfaceValAbstract_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValAbstract_I1_I2_O1_I3.kt")
                public void testStringInterfaceValAbstract_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract/stringInterfaceValAbstract_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValAbstract_I1_I2_O1_I3_O2.kt")
                public void testStringInterfaceValAbstract_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract/stringInterfaceValAbstract_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValAbstract_I1_I2_O1_O2.kt")
                public void testStringInterfaceValAbstract_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract/stringInterfaceValAbstract_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValAbstract_I1_I2_O2.kt")
                public void testStringInterfaceValAbstract_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract/stringInterfaceValAbstract_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValAbstract_I1_I3.kt")
                public void testStringInterfaceValAbstract_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract/stringInterfaceValAbstract_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValAbstract_I1_I3_O2.kt")
                public void testStringInterfaceValAbstract_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract/stringInterfaceValAbstract_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValAbstract_I1_O1.kt")
                public void testStringInterfaceValAbstract_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract/stringInterfaceValAbstract_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValAbstract_I1_O1_I3.kt")
                public void testStringInterfaceValAbstract_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract/stringInterfaceValAbstract_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValAbstract_I1_O1_I3_O2.kt")
                public void testStringInterfaceValAbstract_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract/stringInterfaceValAbstract_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValAbstract_I1_O1_O2.kt")
                public void testStringInterfaceValAbstract_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract/stringInterfaceValAbstract_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValAbstract_I1_O2.kt")
                public void testStringInterfaceValAbstract_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract/stringInterfaceValAbstract_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValAbstract_I2_O1.kt")
                public void testStringInterfaceValAbstract_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract/stringInterfaceValAbstract_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValAbstract_I2_O1_I3.kt")
                public void testStringInterfaceValAbstract_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract/stringInterfaceValAbstract_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValAbstract_I2_O1_I3_O2.kt")
                public void testStringInterfaceValAbstract_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract/stringInterfaceValAbstract_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValAbstract_I2_O1_O2.kt")
                public void testStringInterfaceValAbstract_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract/stringInterfaceValAbstract_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValAbstract_O1_I3_O2.kt")
                public void testStringInterfaceValAbstract_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValAbstract/stringInterfaceValAbstract_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceValDefaultAll {
                @Test
                public void testAllFilesPresentInInterfaceValDefaultAll() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAllN.kt")
                public void testStringInterfaceValDefaultAllN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAllN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I1.kt")
                public void testStringInterfaceValDefaultAll_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I1_I2.kt")
                public void testStringInterfaceValDefaultAll_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I1_I2_I3.kt")
                public void testStringInterfaceValDefaultAll_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I1_I2_I3_O2.kt")
                public void testStringInterfaceValDefaultAll_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I1_I2_O1.kt")
                public void testStringInterfaceValDefaultAll_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I1_I2_O1_I3.kt")
                public void testStringInterfaceValDefaultAll_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I1_I2_O1_I3_O2.kt")
                public void testStringInterfaceValDefaultAll_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I1_I2_O1_O2.kt")
                public void testStringInterfaceValDefaultAll_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I1_I2_O2.kt")
                public void testStringInterfaceValDefaultAll_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I1_I3.kt")
                public void testStringInterfaceValDefaultAll_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I1_I3_O2.kt")
                public void testStringInterfaceValDefaultAll_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I1_O1.kt")
                public void testStringInterfaceValDefaultAll_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I1_O1_I3.kt")
                public void testStringInterfaceValDefaultAll_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I1_O1_I3_O2.kt")
                public void testStringInterfaceValDefaultAll_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I1_O1_O2.kt")
                public void testStringInterfaceValDefaultAll_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I1_O2.kt")
                public void testStringInterfaceValDefaultAll_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I2.kt")
                public void testStringInterfaceValDefaultAll_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I2_I3.kt")
                public void testStringInterfaceValDefaultAll_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I2_I3_O2.kt")
                public void testStringInterfaceValDefaultAll_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I2_O1.kt")
                public void testStringInterfaceValDefaultAll_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I2_O1_I3.kt")
                public void testStringInterfaceValDefaultAll_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I2_O1_I3_O2.kt")
                public void testStringInterfaceValDefaultAll_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I2_O1_O2.kt")
                public void testStringInterfaceValDefaultAll_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I2_O2.kt")
                public void testStringInterfaceValDefaultAll_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I3.kt")
                public void testStringInterfaceValDefaultAll_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_I3_O2.kt")
                public void testStringInterfaceValDefaultAll_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_O1.kt")
                public void testStringInterfaceValDefaultAll_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_O1_I3.kt")
                public void testStringInterfaceValDefaultAll_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_O1_I3_O2.kt")
                public void testStringInterfaceValDefaultAll_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_O1_O2.kt")
                public void testStringInterfaceValDefaultAll_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultAll_O2.kt")
                public void testStringInterfaceValDefaultAll_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultAll/stringInterfaceValDefaultAll_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault")
            @TestDataPath("$PROJECT_ROOT")
            public class InterfaceValDefaultDefault {
                @Test
                public void testAllFilesPresentInInterfaceValDefaultDefault() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefaultN.kt")
                public void testStringInterfaceValDefaultDefaultN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefaultN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I1.kt")
                public void testStringInterfaceValDefaultDefault_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I1_I2.kt")
                public void testStringInterfaceValDefaultDefault_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I1_I2_I3.kt")
                public void testStringInterfaceValDefaultDefault_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I1_I2_I3_O2.kt")
                public void testStringInterfaceValDefaultDefault_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I1_I2_O1.kt")
                public void testStringInterfaceValDefaultDefault_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I1_I2_O1_I3.kt")
                public void testStringInterfaceValDefaultDefault_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I1_I2_O1_I3_O2.kt")
                public void testStringInterfaceValDefaultDefault_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I1_I2_O1_O2.kt")
                public void testStringInterfaceValDefaultDefault_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I1_I2_O2.kt")
                public void testStringInterfaceValDefaultDefault_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I1_I3.kt")
                public void testStringInterfaceValDefaultDefault_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I1_I3_O2.kt")
                public void testStringInterfaceValDefaultDefault_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I1_O1.kt")
                public void testStringInterfaceValDefaultDefault_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I1_O1_I3.kt")
                public void testStringInterfaceValDefaultDefault_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I1_O1_I3_O2.kt")
                public void testStringInterfaceValDefaultDefault_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I1_O1_O2.kt")
                public void testStringInterfaceValDefaultDefault_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I1_O2.kt")
                public void testStringInterfaceValDefaultDefault_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I2.kt")
                public void testStringInterfaceValDefaultDefault_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I2_I3.kt")
                public void testStringInterfaceValDefaultDefault_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I2_I3_O2.kt")
                public void testStringInterfaceValDefaultDefault_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I2_O1.kt")
                public void testStringInterfaceValDefaultDefault_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I2_O1_I3.kt")
                public void testStringInterfaceValDefaultDefault_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I2_O1_I3_O2.kt")
                public void testStringInterfaceValDefaultDefault_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I2_O1_O2.kt")
                public void testStringInterfaceValDefaultDefault_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I2_O2.kt")
                public void testStringInterfaceValDefaultDefault_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I3.kt")
                public void testStringInterfaceValDefaultDefault_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_I3_O2.kt")
                public void testStringInterfaceValDefaultDefault_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_O1.kt")
                public void testStringInterfaceValDefaultDefault_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_O1_I3.kt")
                public void testStringInterfaceValDefaultDefault_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_O1_I3_O2.kt")
                public void testStringInterfaceValDefaultDefault_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_O1_O2.kt")
                public void testStringInterfaceValDefaultDefault_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringInterfaceValDefaultDefault_O2.kt")
                public void testStringInterfaceValDefaultDefault_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/interfaceValDefaultDefault/stringInterfaceValDefaultDefault_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/methodBottom")
            @TestDataPath("$PROJECT_ROOT")
            public class MethodBottom {
                @Test
                public void testAllFilesPresentInMethodBottom() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/methodBottom"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringMethodBottom_I3_O2.kt")
                public void testStringMethodBottom_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/methodBottom/stringMethodBottom_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringMethodBottom_O1.kt")
                public void testStringMethodBottom_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/methodBottom/stringMethodBottom_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringMethodBottom_O1_I3.kt")
                public void testStringMethodBottom_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/methodBottom/stringMethodBottom_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringMethodBottom_O1_I3_O2.kt")
                public void testStringMethodBottom_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/methodBottom/stringMethodBottom_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringMethodBottom_O1_O2.kt")
                public void testStringMethodBottom_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/methodBottom/stringMethodBottom_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethod")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenMethod {
                @Test
                public void testAllFilesPresentInOpenMethod() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethod"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringOpenMethod_I1.kt")
                public void testStringOpenMethod_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethod/stringOpenMethod_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenMethod_I1_I2.kt")
                public void testStringOpenMethod_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethod/stringOpenMethod_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenMethod_I1_I2_I3.kt")
                public void testStringOpenMethod_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethod/stringOpenMethod_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenMethod_I1_I2_I3_O2.kt")
                public void testStringOpenMethod_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethod/stringOpenMethod_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenMethod_I1_I2_O1.kt")
                public void testStringOpenMethod_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethod/stringOpenMethod_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenMethod_I1_I2_O1_I3.kt")
                public void testStringOpenMethod_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethod/stringOpenMethod_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenMethod_I1_I2_O1_I3_O2.kt")
                public void testStringOpenMethod_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethod/stringOpenMethod_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenMethod_I1_I2_O1_O2.kt")
                public void testStringOpenMethod_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethod/stringOpenMethod_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenMethod_I1_I2_O2.kt")
                public void testStringOpenMethod_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethod/stringOpenMethod_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenMethod_I1_I3.kt")
                public void testStringOpenMethod_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethod/stringOpenMethod_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenMethod_I1_I3_O2.kt")
                public void testStringOpenMethod_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethod/stringOpenMethod_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenMethod_I1_O1.kt")
                public void testStringOpenMethod_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethod/stringOpenMethod_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenMethod_I1_O1_I3.kt")
                public void testStringOpenMethod_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethod/stringOpenMethod_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenMethod_I1_O1_I3_O2.kt")
                public void testStringOpenMethod_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethod/stringOpenMethod_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenMethod_I1_O1_O2.kt")
                public void testStringOpenMethod_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethod/stringOpenMethod_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenMethod_I1_O2.kt")
                public void testStringOpenMethod_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethod/stringOpenMethod_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethodMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenMethodMiddle {
                @Test
                public void testAllFilesPresentInOpenMethodMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethodMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringOpenMethodMiddle_I2.kt")
                public void testStringOpenMethodMiddle_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethodMiddle/stringOpenMethodMiddle_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenMethodMiddle_I2_I3.kt")
                public void testStringOpenMethodMiddle_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethodMiddle/stringOpenMethodMiddle_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenMethodMiddle_I2_I3_O2.kt")
                public void testStringOpenMethodMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethodMiddle/stringOpenMethodMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenMethodMiddle_I2_O2.kt")
                public void testStringOpenMethodMiddle_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openMethodMiddle/stringOpenMethodMiddle_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openVal")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenVal {
                @Test
                public void testAllFilesPresentInOpenVal() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openVal"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringOpenVal_I1.kt")
                public void testStringOpenVal_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openVal/stringOpenVal_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenVal_I1_I2.kt")
                public void testStringOpenVal_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openVal/stringOpenVal_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenVal_I1_I2_I3.kt")
                public void testStringOpenVal_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openVal/stringOpenVal_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenVal_I1_I2_I3_O2.kt")
                public void testStringOpenVal_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openVal/stringOpenVal_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenVal_I1_I2_O1.kt")
                public void testStringOpenVal_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openVal/stringOpenVal_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenVal_I1_I2_O1_I3.kt")
                public void testStringOpenVal_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openVal/stringOpenVal_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenVal_I1_I2_O1_I3_O2.kt")
                public void testStringOpenVal_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openVal/stringOpenVal_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenVal_I1_I2_O1_O2.kt")
                public void testStringOpenVal_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openVal/stringOpenVal_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenVal_I1_I2_O2.kt")
                public void testStringOpenVal_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openVal/stringOpenVal_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenVal_I1_I3.kt")
                public void testStringOpenVal_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openVal/stringOpenVal_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenVal_I1_I3_O2.kt")
                public void testStringOpenVal_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openVal/stringOpenVal_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenVal_I1_O1.kt")
                public void testStringOpenVal_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openVal/stringOpenVal_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenVal_I1_O1_I3.kt")
                public void testStringOpenVal_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openVal/stringOpenVal_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenVal_I1_O1_I3_O2.kt")
                public void testStringOpenVal_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openVal/stringOpenVal_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenVal_I1_O1_O2.kt")
                public void testStringOpenVal_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openVal/stringOpenVal_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenVal_I1_O2.kt")
                public void testStringOpenVal_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openVal/stringOpenVal_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openValMiddle")
            @TestDataPath("$PROJECT_ROOT")
            public class OpenValMiddle {
                @Test
                public void testAllFilesPresentInOpenValMiddle() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openValMiddle"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringOpenValMiddle_I2.kt")
                public void testStringOpenValMiddle_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openValMiddle/stringOpenValMiddle_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenValMiddle_I2_I3.kt")
                public void testStringOpenValMiddle_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openValMiddle/stringOpenValMiddle_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenValMiddle_I2_I3_O2.kt")
                public void testStringOpenValMiddle_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openValMiddle/stringOpenValMiddle_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringOpenValMiddle_I2_O2.kt")
                public void testStringOpenValMiddle_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/openValMiddle/stringOpenValMiddle_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString")
            @TestDataPath("$PROJECT_ROOT")
            public class ToString {
                @Test
                public void testAllFilesPresentInToString() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringToStringN.kt")
                public void testStringToStringN() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToStringN.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I1.kt")
                public void testStringToString_I1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I1_I2.kt")
                public void testStringToString_I1_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I1_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I1_I2_I3.kt")
                public void testStringToString_I1_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I1_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I1_I2_I3_O2.kt")
                public void testStringToString_I1_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I1_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I1_I2_O1.kt")
                public void testStringToString_I1_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I1_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I1_I2_O1_I3.kt")
                public void testStringToString_I1_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I1_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I1_I2_O1_I3_O2.kt")
                public void testStringToString_I1_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I1_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I1_I2_O1_O2.kt")
                public void testStringToString_I1_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I1_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I1_I2_O2.kt")
                public void testStringToString_I1_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I1_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I1_I3.kt")
                public void testStringToString_I1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I1_I3_O2.kt")
                public void testStringToString_I1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I1_O1.kt")
                public void testStringToString_I1_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I1_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I1_O1_I3.kt")
                public void testStringToString_I1_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I1_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I1_O1_I3_O2.kt")
                public void testStringToString_I1_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I1_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I1_O1_O2.kt")
                public void testStringToString_I1_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I1_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I1_O2.kt")
                public void testStringToString_I1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I2.kt")
                public void testStringToString_I2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I2_I3.kt")
                public void testStringToString_I2_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I2_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I2_I3_O2.kt")
                public void testStringToString_I2_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I2_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I2_O1.kt")
                public void testStringToString_I2_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I2_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I2_O1_I3.kt")
                public void testStringToString_I2_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I2_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I2_O1_I3_O2.kt")
                public void testStringToString_I2_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I2_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I2_O1_O2.kt")
                public void testStringToString_I2_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I2_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I2_O2.kt")
                public void testStringToString_I2_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I2_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I3.kt")
                public void testStringToString_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_I3_O2.kt")
                public void testStringToString_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_O1.kt")
                public void testStringToString_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_O1_I3.kt")
                public void testStringToString_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_O1_I3_O2.kt")
                public void testStringToString_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_O1_O2.kt")
                public void testStringToString_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringToString_O2.kt")
                public void testStringToString_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/toString/stringToString_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }

            @Nested
            @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/valBottom")
            @TestDataPath("$PROJECT_ROOT")
            public class ValBottom {
                @Test
                public void testAllFilesPresentInValBottom() throws Exception {
                    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/valBottom"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
                }

                @Test
                @TestMetadata("stringValBottom_I3_O2.kt")
                public void testStringValBottom_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/valBottom/stringValBottom_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringValBottom_O1.kt")
                public void testStringValBottom_O1() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/valBottom/stringValBottom_O1.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringValBottom_O1_I3.kt")
                public void testStringValBottom_O1_I3() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/valBottom/stringValBottom_O1_I3.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringValBottom_O1_I3_O2.kt")
                public void testStringValBottom_O1_I3_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/valBottom/stringValBottom_O1_I3_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }

                @Test
                @TestMetadata("stringValBottom_O1_O2.kt")
                public void testStringValBottom_O1_O2() throws Exception {
                    runTest("compiler/testData/codegen/box/sealedInlineClasses/methods/_string/valBottom/stringValBottom_O1_O2.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
                }
            }
        }
    }

    @Nested
    @TestMetadata("compiler/testData/codegen/box/sealedInlineClasses/returnType")
    @TestDataPath("$PROJECT_ROOT")
    public class ReturnType {
        @Test
        public void testAllFilesPresentInReturnType() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/box/sealedInlineClasses/returnType"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
        }

        @Test
        @TestMetadata("nullableParentWithClass.kt")
        public void testNullableParentWithClass() throws Exception {
            runTest("compiler/testData/codegen/box/sealedInlineClasses/returnType/nullableParentWithClass.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
        }

        @Test
        @TestMetadata("nullableParentWithObject.kt")
        public void testNullableParentWithObject() throws Exception {
            runTest("compiler/testData/codegen/box/sealedInlineClasses/returnType/nullableParentWithObject.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
        }

        @Test
        @TestMetadata("parentWithClass.kt")
        public void testParentWithClass() throws Exception {
            runTest("compiler/testData/codegen/box/sealedInlineClasses/returnType/parentWithClass.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
        }

        @Test
        @TestMetadata("parentWithObject.kt")
        public void testParentWithObject() throws Exception {
            runTest("compiler/testData/codegen/box/sealedInlineClasses/returnType/parentWithObject.kt", TransformersFunctions.getReplaceOptionalJvmInlineAnnotationWithReal());
        }
    }
}
