A -> UClass (name = A)
foo -> UMethod (name = foo)
inlineFoo -> UMethod (name = inlineFoo)
bar -> UMethod (name = bar)
    A -> UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0))
    foo -> UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0))
    A -> UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0))
    inlineFoo -> UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0))
    listOf -> UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1))
    A -> UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0))
    forEach -> UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1))
        println -> UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1))
        it -> USimpleNameReferenceExpression (identifier = it)
    listOf -> UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1))
    joinToString -> UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0))
    listOf -> UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1))
    size -> USimpleNameReferenceExpression (identifier = size)
    listOf -> UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1))
    indices -> USimpleNameReferenceExpression (identifier = indices)
    date -> ULocalVariable (name = date)
    java -> USimpleNameReferenceExpression (identifier = java)
    util -> USimpleNameReferenceExpression (identifier = util)
    Date -> USimpleNameReferenceExpression (identifier = Date)
    java -> USimpleNameReferenceExpression (identifier = java)
    util -> USimpleNameReferenceExpression (identifier = util)
    Date -> UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0))
    date -> USimpleNameReferenceExpression (identifier = date)
    time -> USimpleNameReferenceExpression (identifier = time)
    = -> USimpleNameReferenceExpression (identifier = =)
    listOf -> UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1))
    last -> UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0))
    mutableMapOf -> UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1))
    to -> USimpleNameReferenceExpression (identifier = to)
    entries -> USimpleNameReferenceExpression (identifier = entries)
    first -> UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0))
    setValue -> UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1))
    intRange -> ULocalVariable (name = intRange)
    .. -> USimpleNameReferenceExpression (identifier = ..)
    intRange -> USimpleNameReferenceExpression (identifier = intRange)
    contains -> UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1))
    as -> USimpleNameReferenceExpression (identifier = as)
    Int -> USimpleNameReferenceExpression (identifier = Int)
    IntRange -> UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 2))
T -> [!] UnknownKotlinExpression (TYPE_PARAMETER)
A -> USimpleNameReferenceExpression (identifier = A)
barT -> UMethod (name = barT)
t -> UParameter (name = t)
T -> USimpleNameReferenceExpression (identifier = T)
    t -> USimpleNameReferenceExpression (identifier = t)
    foo -> UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0))
T -> [!] UnknownKotlinExpression (TYPE_PARAMETER)
List -> USimpleNameReferenceExpression (identifier = List)
A -> USimpleNameReferenceExpression (identifier = A)
barTL -> UMethod (name = barTL)
listT -> UParameter (name = listT)
T -> USimpleNameReferenceExpression (identifier = T)
    listT -> USimpleNameReferenceExpression (identifier = listT)
    isEmpty -> UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0))
    a -> [!] UnknownKotlinExpression (VALUE_PARAMETER)
    listT -> USimpleNameReferenceExpression (identifier = listT)
        a -> USimpleNameReferenceExpression (identifier = a)
        foo -> UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0))
