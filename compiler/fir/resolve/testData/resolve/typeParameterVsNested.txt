FILE: typeParameterVsNested.kt
    public abstract interface Some : R|kotlin/Any| {
    }
    public abstract class My<T : R|test/Some|> : R|kotlin/Any| {
        public constructor<T : R|test/My.Some|>(): R|test/My<T>| {
            super<R|kotlin/Any|>()
        }

        public final inner class T : R|kotlin/Any| {
            public constructor(): R|test/My.T| {
                super<R|kotlin/Any|>()
            }

        }

        public abstract val x: R|T|
            public get(): R|T|

        public abstract fun foo(arg: R|T|): R|kotlin/Unit|

        public abstract val y: R|test/My.T|
            public get(): R|test/My.T|

        public abstract val z: R|test/My.T|
            public get(): R|test/My.T|

        public final class Some : R|test/My.T| {
            public constructor(): R|test/My.Some| {
                super<R|T|>()
            }

        }

    }
