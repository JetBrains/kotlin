// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: compiler/ir/serialization.common/src/KotlinIr.proto
// Protobuf Java Version: 4.29.3

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg}
 */
public  final class IrVararg extends
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite<
        IrVararg, IrVararg.Builder> implements
    // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg)
    IrVarargOrBuilder {
  private IrVararg() {
    element_ = emptyProtobufList();
  }
  private int bitField0_;
  public static final int ELEMENT_TYPE_FIELD_NUMBER = 1;
  private int elementType_;
  /**
   * <code>int32 element_type = 1 [features = { ... }</code>
   * @return Whether the elementType field is set.
   */
  @java.lang.Override
  public boolean hasElementType() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>int32 element_type = 1 [features = { ... }</code>
   * @return The elementType.
   */
  @java.lang.Override
  public int getElementType() {
    return elementType_;
  }
  /**
   * <code>int32 element_type = 1 [features = { ... }</code>
   * @param value The elementType to set.
   */
  private void setElementType(int value) {
    bitField0_ |= 0x00000001;
    elementType_ = value;
  }
  /**
   * <code>int32 element_type = 1 [features = { ... }</code>
   */
  private void clearElementType() {
    bitField0_ = (bitField0_ & ~0x00000001);
    elementType_ = 0;
  }

  public static final int ELEMENT_FIELD_NUMBER = 2;
  private org.jetbrains.kotlin.protobuf.Internal.ProtobufList<org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement> element_;
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
   */
  @java.lang.Override
  public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement> getElementList() {
    return element_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
   */
  public java.util.List<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElementOrBuilder> 
      getElementOrBuilderList() {
    return element_;
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
   */
  @java.lang.Override
  public int getElementCount() {
    return element_.size();
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement getElement(int index) {
    return element_.get(index);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
   */
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElementOrBuilder getElementOrBuilder(
      int index) {
    return element_.get(index);
  }
  private void ensureElementIsMutable() {
    org.jetbrains.kotlin.protobuf.Internal.ProtobufList<org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement> tmp = element_;
    if (!tmp.isModifiable()) {
      element_ =
          org.jetbrains.kotlin.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setElement(
      int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement value) {
    value.getClass();  // minimal bytecode null check
    ensureElementIsMutable();
    element_.set(index, value);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void addElement(org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement value) {
    value.getClass();  // minimal bytecode null check
    ensureElementIsMutable();
    element_.add(value);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void addElement(
      int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement value) {
    value.getClass();  // minimal bytecode null check
    ensureElementIsMutable();
    element_.add(index, value);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
   */
  private void addAllElement(
      java.lang.Iterable<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement> values) {
    ensureElementIsMutable();
    org.jetbrains.kotlin.protobuf.AbstractMessageLite.addAll(
        values, element_);
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
   */
  private void clearElement() {
    element_ = emptyProtobufList();
  }
  /**
   * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
   */
  private void removeElement(int index) {
    ensureElementIsMutable();
    element_.remove(index);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg parseFrom(
      java.nio.ByteBuffer data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg parseFrom(
      java.nio.ByteBuffer data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg parseFrom(byte[] data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg parseFrom(
      byte[] data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg parseFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg parseDelimitedFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg}
   */
  public static final class Builder extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg, Builder> implements
      // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg)
      org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargOrBuilder {
    // Construct using org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>int32 element_type = 1 [features = { ... }</code>
     * @return Whether the elementType field is set.
     */
    @java.lang.Override
    public boolean hasElementType() {
      return instance.hasElementType();
    }
    /**
     * <code>int32 element_type = 1 [features = { ... }</code>
     * @return The elementType.
     */
    @java.lang.Override
    public int getElementType() {
      return instance.getElementType();
    }
    /**
     * <code>int32 element_type = 1 [features = { ... }</code>
     * @param value The elementType to set.
     * @return This builder for chaining.
     */
    public Builder setElementType(int value) {
      copyOnWrite();
      instance.setElementType(value);
      return this;
    }
    /**
     * <code>int32 element_type = 1 [features = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearElementType() {
      copyOnWrite();
      instance.clearElementType();
      return this;
    }

    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
     */
    @java.lang.Override
    public java.util.List<org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement> getElementList() {
      return java.util.Collections.unmodifiableList(
          instance.getElementList());
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
     */
    @java.lang.Override
    public int getElementCount() {
      return instance.getElementCount();
    }/**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement getElement(int index) {
      return instance.getElement(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
     */
    public Builder setElement(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement value) {
      copyOnWrite();
      instance.setElement(index, value);
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
     */
    public Builder setElement(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement.Builder builderForValue) {
      copyOnWrite();
      instance.setElement(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
     */
    public Builder addElement(org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement value) {
      copyOnWrite();
      instance.addElement(value);
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
     */
    public Builder addElement(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement value) {
      copyOnWrite();
      instance.addElement(index, value);
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
     */
    public Builder addElement(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement.Builder builderForValue) {
      copyOnWrite();
      instance.addElement(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
     */
    public Builder addElement(
        int index, org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement.Builder builderForValue) {
      copyOnWrite();
      instance.addElement(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
     */
    public Builder addAllElement(
        java.lang.Iterable<? extends org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement> values) {
      copyOnWrite();
      instance.addAllElement(values);
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
     */
    public Builder clearElement() {
      copyOnWrite();
      instance.clearElement();
      return this;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement element = 2;</code>
     */
    public Builder removeElement(int index) {
      copyOnWrite();
      instance.removeElement(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg)
  }
  private byte memoizedIsInitialized = 2;
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "elementType_",
            "element_",
            org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement.class,
          };
          java.lang.String info =
              "\u0004\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0001\u0002\u0001\u1504\u0000\u0002" +
              "\u041b";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        org.jetbrains.kotlin.protobuf.Parser<org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg> parser = PARSER;
        if (parser == null) {
          synchronized (org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return memoizedIsInitialized;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg)
  private static final org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg DEFAULT_INSTANCE;
  static {
    IrVararg defaultInstance = new IrVararg();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.registerDefaultInstance(
      IrVararg.class, defaultInstance);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVararg getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile org.jetbrains.kotlin.protobuf.Parser<IrVararg> PARSER;

  public static org.jetbrains.kotlin.protobuf.Parser<IrVararg> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
