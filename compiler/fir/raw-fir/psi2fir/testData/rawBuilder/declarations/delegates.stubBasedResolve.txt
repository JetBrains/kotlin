FILE: [ResolvedTo(ANNOTATION_ARGUMENTS)] delegates.kt
    public final [ResolvedTo(ANNOTATION_ARGUMENTS)] val x: R|kotlin/Int|by LAZY_EXPRESSION
        public [ResolvedTo(ANNOTATION_ARGUMENTS)] get(): R|kotlin/Int| { LAZY_BLOCK }
    public final [ResolvedTo(CONTRACTS)] val delegate: <implicit> = LAZY_EXPRESSION
        public [ResolvedTo(CONTRACTS)] get(): <implicit>
    public final [ResolvedTo(CONTRACTS)] val value: <implicit>by LAZY_EXPRESSION
        public [ResolvedTo(CONTRACTS)] get(): <implicit> { LAZY_BLOCK }
    public final [ResolvedTo(CONTRACTS)] var variable: <implicit>by LAZY_EXPRESSION
        public [ResolvedTo(CONTRACTS)] get(): <implicit> { LAZY_BLOCK }
        public [ResolvedTo(CONTRACTS)] set([ResolvedTo(CONTRACTS)] <set-?>: <implicit>): R|kotlin/Unit| { LAZY_BLOCK }
    public abstract [ResolvedTo(BODY_RESOLVE)] interface Base : R|kotlin/Any| {
    }
    public final [ResolvedTo(ANNOTATION_ARGUMENTS)] [DelegateFieldsMapKey={0=FirFieldSymbol /Derived.$$delegate_0}] class Derived : R|Base| {
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Derived] constructor([ResolvedTo(BODY_RESOLVE)] b: R|Base|): R|Derived| {
            super<R|kotlin/Any|>()
        }

        private final [ResolvedTo(ANNOTATION_ARGUMENTS)] field $$delegate_0: R|Base| = LAZY_EXPRESSION

    }
