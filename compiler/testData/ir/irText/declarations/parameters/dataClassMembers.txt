FILE fqName:<root> fileName:/dataClassMembers.kt
  CLASS CLASS name:Test modality:FINAL visibility:public flags:data
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:Test<T> flags:
    superClasses:
      CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:Any modality:OPEN visibility:public flags:
    TYPE_PARAMETER name:T index:0 variance: upperBounds:[kotlin.Any?]
      superClassifiers:
        CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:Any modality:OPEN visibility:public flags:
    CONSTRUCTOR visibility:public <> (x:T, y:kotlin.String) returnType:Test<T> flags:primary
      VALUE_PARAMETER name:x index:0 type:T flags:
      VALUE_PARAMETER name:y index:1 type:kotlin.String flags:
        EXPRESSION_BODY
          CONST String type=kotlin.String value=
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
        INSTANCE_INITIALIZER_CALL classDescriptor='Test'
    PROPERTY name:x type:T visibility:public modality:FINAL flags:val
      FIELD PROPERTY_BACKING_FIELD name:x type:T visibility:public flags:final
        EXPRESSION_BODY
          GET_VAR 'value-parameter x: T' type=T origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-x> visibility:public modality:FINAL <> ($this:Test<T>) returnType:T flags:
        $this: VALUE_PARAMETER name:<this> type:Test<T> flags:
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='<get-x>(): T'
            GET_FIELD 'x: T' type=T origin=null
              receiver: GET_VAR 'this@Test: Test<T>' type=Test<T> origin=null
    PROPERTY name:y type:kotlin.String visibility:public modality:FINAL flags:val
      FIELD PROPERTY_BACKING_FIELD name:y type:kotlin.String visibility:public flags:final
        EXPRESSION_BODY
          GET_VAR 'value-parameter y: String = ...' type=kotlin.String origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-y> visibility:public modality:FINAL <> ($this:Test<T>) returnType:String flags:
        $this: VALUE_PARAMETER name:<this> type:Test<T> flags:
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='<get-y>(): String'
            GET_FIELD 'y: String' type=kotlin.String origin=null
              receiver: GET_VAR 'this@Test: Test<T>' type=Test<T> origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:component1 visibility:public modality:FINAL <> ($this:Test<T>) returnType:T flags:
      $this: VALUE_PARAMETER name:<this> type:Test<T> flags:
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='component1(): T'
          CALL '<get-x>(): T' type=T origin=GET_PROPERTY
            $this: GET_VAR 'this@Test: Test<T>' type=Test<T> origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:component2 visibility:public modality:FINAL <> ($this:Test<T>) returnType:String flags:
      $this: VALUE_PARAMETER name:<this> type:Test<T> flags:
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='component2(): String'
          CALL '<get-y>(): String' type=kotlin.String origin=GET_PROPERTY
            $this: GET_VAR 'this@Test: Test<T>' type=Test<T> origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:copy visibility:public modality:FINAL <> ($this:Test<T>, x:T, y:kotlin.String) returnType:Test<T> flags:
      $this: VALUE_PARAMETER name:<this> type:Test<T> flags:
      VALUE_PARAMETER name:x index:0 type:T flags:
        EXPRESSION_BODY
          CALL '<get-x>(): T' type=T origin=GET_PROPERTY
            $this: GET_VAR 'this@Test: Test<T>' type=Test<T> origin=null
      VALUE_PARAMETER name:y index:1 type:kotlin.String flags:
        EXPRESSION_BODY
          CALL '<get-y>(): String' type=kotlin.String origin=GET_PROPERTY
            $this: GET_VAR 'this@Test: Test<T>' type=Test<T> origin=null
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='copy(T = ..., String = ...): Test<T>'
          CALL 'constructor Test(T, String = ...)' type=Test<T> origin=null
            <T>: T
            x: GET_VAR 'value-parameter x: T = ...' type=T origin=null
            y: GET_VAR 'value-parameter y: String = ...' type=kotlin.String origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:toString visibility:public modality:OPEN <> ($this:Test<T>) returnType:String flags:
      overridden:
        FUN IR_EXTERNAL_DECLARATION_STUB name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:String flags:
      $this: VALUE_PARAMETER name:<this> type:Test<T> flags:
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='toString(): String'
          STRING_CONCATENATION type=kotlin.String
            CONST String type=kotlin.String value=Test(
            CONST String type=kotlin.String value=x=
            CALL '<get-x>(): T' type=T origin=GET_PROPERTY
              $this: GET_VAR 'this@Test: Test<T>' type=Test<T> origin=null
            CONST String type=kotlin.String value=, 
            CONST String type=kotlin.String value=y=
            CALL '<get-y>(): String' type=kotlin.String origin=GET_PROPERTY
              $this: GET_VAR 'this@Test: Test<T>' type=Test<T> origin=null
            CONST String type=kotlin.String value=)
    FUN GENERATED_DATA_CLASS_MEMBER name:hashCode visibility:public modality:OPEN <> ($this:Test<T>) returnType:Int flags:
      overridden:
        FUN IR_EXTERNAL_DECLARATION_STUB name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:Int flags:
      $this: VALUE_PARAMETER name:<this> type:Test<T> flags:
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE name:tmp0_result type:kotlin.Int flags:var
          CONST Int type=kotlin.Int value=0
        SET_VAR 'tmp0_result: Int' type=kotlin.Unit origin=EQ
          BLOCK type=kotlin.Int origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp1 type:T flags:val
              CALL '<get-x>(): T' type=T origin=GET_PROPERTY
                $this: GET_VAR 'this@Test: Test<T>' type=Test<T> origin=null
            WHEN type=kotlin.Int origin=null
              BRANCH
                if: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean origin=EQEQ
                  arg0: GET_VAR 'tmp1: T' type=T origin=null
                  arg1: CONST Null type=kotlin.Nothing? value=null
                then: CONST Int type=kotlin.Int value=0
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: CALL 'hashCode(): Int' type=kotlin.Int origin=null
                  $this: TYPE_OP type=kotlin.Any origin=IMPLICIT_CAST typeOperand=kotlin.Any
                    typeOperand: CLASS IR_EXTERNAL_DECLARATION_STUB CLASS name:Any modality:OPEN visibility:public flags:
                    GET_VAR 'tmp1: T' type=T origin=null
        SET_VAR 'tmp0_result: Int' type=kotlin.Unit origin=EQ
          CALL 'plus(Int): Int' type=kotlin.Int origin=null
            $this: CALL 'times(Int): Int' type=kotlin.Int origin=null
              $this: GET_VAR 'tmp0_result: Int' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value=31
            other: CALL 'hashCode(): Int' type=kotlin.Int origin=null
              $this: CALL '<get-y>(): String' type=kotlin.String origin=GET_PROPERTY
                $this: GET_VAR 'this@Test: Test<T>' type=Test<T> origin=null
        RETURN type=kotlin.Nothing from='hashCode(): Int'
          GET_VAR 'tmp0_result: Int' type=kotlin.Int origin=null
    FUN GENERATED_DATA_CLASS_MEMBER name:equals visibility:public modality:OPEN <> ($this:Test<T>, other:kotlin.Any?) returnType:Boolean flags:
      overridden:
        FUN IR_EXTERNAL_DECLARATION_STUB name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:Boolean flags:
      $this: VALUE_PARAMETER name:<this> type:Test<T> flags:
      VALUE_PARAMETER name:other index:0 type:kotlin.Any? flags:
      BLOCK_BODY
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'EQEQEQ(Any?, Any?): Boolean' type=kotlin.Boolean origin=EQEQEQ
              arg0: GET_VAR 'this@Test: Test<T>' type=Test<T> origin=null
              arg1: GET_VAR 'value-parameter other: Any?' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='equals(Any?): Boolean'
              CONST Boolean type=kotlin.Boolean value=true
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: TYPE_OP type=kotlin.Boolean origin=NOT_INSTANCEOF typeOperand=Test<T>
              typeOperand: CLASS CLASS name:Test modality:FINAL visibility:public flags:data
              GET_VAR 'value-parameter other: Any?' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='equals(Any?): Boolean'
              CONST Boolean type=kotlin.Boolean value=false
        VAR IR_TEMPORARY_VARIABLE name:tmp0_other_with_cast type:Test<T> flags:val
          TYPE_OP type=Test<T> origin=CAST typeOperand=Test<T>
            typeOperand: CLASS CLASS name:Test modality:FINAL visibility:public flags:data
            GET_VAR 'value-parameter other: Any?' type=kotlin.Any? origin=null
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean origin=EXCLEQ
              arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean origin=EXCLEQ
                arg0: CALL '<get-x>(): T' type=T origin=GET_PROPERTY
                  $this: GET_VAR 'this@Test: Test<T>' type=Test<T> origin=null
                arg1: CALL '<get-x>(): T' type=T origin=GET_PROPERTY
                  $this: GET_VAR 'tmp0_other_with_cast: Test<T>' type=Test<T> origin=null
            then: RETURN type=kotlin.Nothing from='equals(Any?): Boolean'
              CONST Boolean type=kotlin.Boolean value=false
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean origin=EXCLEQ
              arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean origin=EXCLEQ
                arg0: CALL '<get-y>(): String' type=kotlin.String origin=GET_PROPERTY
                  $this: GET_VAR 'this@Test: Test<T>' type=Test<T> origin=null
                arg1: CALL '<get-y>(): String' type=kotlin.String origin=GET_PROPERTY
                  $this: GET_VAR 'tmp0_other_with_cast: Test<T>' type=Test<T> origin=null
            then: RETURN type=kotlin.Nothing from='equals(Any?): Boolean'
              CONST Boolean type=kotlin.Boolean value=false
        RETURN type=kotlin.Nothing from='equals(Any?): Boolean'
          CONST Boolean type=kotlin.Boolean value=true

