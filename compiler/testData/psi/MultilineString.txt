JetFile: MultilineString.jet
  NAMESPACE_HEADER
    <empty list>
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('wrap')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('x')
        PsiElement(COLON)(':')
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('String')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      RETURN
        PsiElement(return)('return')
        PsiWhiteSpace(' ')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('x')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('demo')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n\n  ')
      PROPERTY
        PsiElement(val)('val')
        PsiWhiteSpace(' ')
        PsiElement(IDENTIFIER)('foo')
        PsiWhiteSpace(' ')
        PsiElement(EQ)('=')
        PsiWhiteSpace(' ')
        STRING_TEMPLATE
          PsiElement(OPEN_QUOTE)('"')
          LITERAL_STRING_TEMPLATE_ENTRY
            PsiElement(REGULAR_STRING_PART)('Hiram')
          PsiElement(CLOSING_QUOTE)('"')
      PsiWhiteSpace('\n  ')
      PsiComment(EOL_COMMENT)('// Multi line strings')
      PsiWhiteSpace('\n  ')
      STRING_TEMPLATE
        PsiElement(OPEN_QUOTE)('#"\n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('  ')
        ESCAPE_STRING_TEMPLATE_ENTRY
          PsiElement(ESCAPE_SEQUENCE)('\n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('  \n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('  ')
        ESCAPE_STRING_TEMPLATE_ENTRY
          PsiElement(ESCAPE_SEQUENCE)('\t')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)(' ')
        LONG_STRING_TEMPLATE_ENTRY
          PsiElement(LONG_TEMPLATE_ENTRY_START)('${')
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('foo')
          PsiElement(LONG_TEMPLATE_ENTRY_END)('}')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('\n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('  ')
        PsiElement(CLOSING_QUOTE)('"')
      PsiWhiteSpace('\n\n  ')
      STRING_TEMPLATE
        PsiElement(OPEN_QUOTE)('#"""\n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('  ')
        ESCAPE_STRING_TEMPLATE_ENTRY
          PsiElement(ESCAPE_SEQUENCE)('\n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('  \n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('  ')
        ESCAPE_STRING_TEMPLATE_ENTRY
          PsiElement(ESCAPE_SEQUENCE)('\t')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)(' ')
        LONG_STRING_TEMPLATE_ENTRY
          PsiElement(LONG_TEMPLATE_ENTRY_START)('${')
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('foo')
          PsiElement(LONG_TEMPLATE_ENTRY_END)('}')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('\n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('  ')
        PsiElement(CLOSING_QUOTE)('"""')
      PsiWhiteSpace('\n\n  ')
      STRING_TEMPLATE
        PsiElement(OPEN_QUOTE)('#"EOS\n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('  ')
        ESCAPE_STRING_TEMPLATE_ENTRY
          PsiElement(ESCAPE_SEQUENCE)('\n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('  \n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('  ')
        ESCAPE_STRING_TEMPLATE_ENTRY
          PsiElement(ESCAPE_SEQUENCE)('\t')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)(' ')
        LONG_STRING_TEMPLATE_ENTRY
          PsiElement(LONG_TEMPLATE_ENTRY_START)('${')
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('foo')
          PsiElement(LONG_TEMPLATE_ENTRY_END)('}')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('\n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('  ')
        PsiElement(CLOSING_QUOTE)('"EOS')
      PsiWhiteSpace('\n\n  ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('wrap')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            STRING_TEMPLATE
              PsiElement(OPEN_QUOTE)('#"\n')
              LITERAL_STRING_TEMPLATE_ENTRY
                PsiElement(REGULAR_STRING_PART)('  ')
              ESCAPE_STRING_TEMPLATE_ENTRY
                PsiElement(ESCAPE_SEQUENCE)('\n')
              LITERAL_STRING_TEMPLATE_ENTRY
                PsiElement(REGULAR_STRING_PART)('  \n')
              LITERAL_STRING_TEMPLATE_ENTRY
                PsiElement(REGULAR_STRING_PART)('  ')
              ESCAPE_STRING_TEMPLATE_ENTRY
                PsiElement(ESCAPE_SEQUENCE)('\t')
              LITERAL_STRING_TEMPLATE_ENTRY
                PsiElement(REGULAR_STRING_PART)(' ')
              LONG_STRING_TEMPLATE_ENTRY
                PsiElement(LONG_TEMPLATE_ENTRY_START)('${')
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('foo')
                PsiElement(LONG_TEMPLATE_ENTRY_END)('}')
              LITERAL_STRING_TEMPLATE_ENTRY
                PsiElement(REGULAR_STRING_PART)('\n')
              LITERAL_STRING_TEMPLATE_ENTRY
                PsiElement(REGULAR_STRING_PART)('  ')
              PsiElement(CLOSING_QUOTE)('"')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n  ')
      PsiComment(EOL_COMMENT)('// Multi line raw strings')
      PsiWhiteSpace('\n  ')
      STRING_TEMPLATE
        PsiElement(OPEN_QUOTE)('#\' \n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('\n \r \n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('\x ${foo}\n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('  ')
        PsiElement(CLOSING_QUOTE)(''')
      PsiWhiteSpace('\n  ')
      STRING_TEMPLATE
        PsiElement(OPEN_QUOTE)('#\''' \n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('\n \r \n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('\x ${foo}\n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('  ')
        PsiElement(CLOSING_QUOTE)(''''')
      PsiWhiteSpace('\n  ')
      STRING_TEMPLATE
        PsiElement(OPEN_QUOTE)('#\'EOS \n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('\n \r \n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('\x ${foo}\n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('  ')
        PsiElement(CLOSING_QUOTE)(''EOS')
      PsiWhiteSpace('\n  \n  ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('wrap')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            STRING_TEMPLATE
              PsiElement(OPEN_QUOTE)('#\' \n')
              LITERAL_STRING_TEMPLATE_ENTRY
                PsiElement(REGULAR_STRING_PART)('\n \r \n')
              LITERAL_STRING_TEMPLATE_ENTRY
                PsiElement(REGULAR_STRING_PART)('\x ${foo}\n')
              LITERAL_STRING_TEMPLATE_ENTRY
                PsiElement(REGULAR_STRING_PART)('  ')
              PsiElement(CLOSING_QUOTE)(''')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n  ')
      STRING_TEMPLATE
        PsiElement(OPEN_QUOTE)('#\" \n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('\n \r \n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('\x ${foo}\n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('  ')
        PsiElement(CLOSING_QUOTE)('"')
      PsiWhiteSpace('\n  ')
      STRING_TEMPLATE
        PsiElement(OPEN_QUOTE)('#\""" \n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('\n \r \n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('\x ${foo}\n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('  ')
        PsiElement(CLOSING_QUOTE)('"""')
      PsiWhiteSpace('\n  ')
      STRING_TEMPLATE
        PsiElement(OPEN_QUOTE)('#\"EOS \n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('\n \r \n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('\x ${foo}\n')
        LITERAL_STRING_TEMPLATE_ENTRY
          PsiElement(REGULAR_STRING_PART)('  ')
        PsiElement(CLOSING_QUOTE)('"EOS')
      PsiWhiteSpace('\n  \n  ')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('wrap')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            STRING_TEMPLATE
              PsiElement(OPEN_QUOTE)('#\" \n')
              LITERAL_STRING_TEMPLATE_ENTRY
                PsiElement(REGULAR_STRING_PART)('\n \r \n')
              LITERAL_STRING_TEMPLATE_ENTRY
                PsiElement(REGULAR_STRING_PART)('\x ${foo}\n')
              LITERAL_STRING_TEMPLATE_ENTRY
                PsiElement(REGULAR_STRING_PART)('  ')
              PsiElement(CLOSING_QUOTE)('"')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\n')
      PsiElement(RBRACE)('}')