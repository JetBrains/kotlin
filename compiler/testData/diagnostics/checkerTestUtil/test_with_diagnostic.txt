package

internal fun bas(/*0*/ u: Pa<kotlin.Int, kotlin.String>): kotlin.Int
internal fun foo(/*0*/ u: kotlin.Unit): kotlin.Int
internal fun foo1(): kotlin.Unit
internal fun test(): kotlin.Int

internal final class A {
    public constructor A()
    internal final val x: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

internal interface Pa</*0*/ X, /*1*/ Y> {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
