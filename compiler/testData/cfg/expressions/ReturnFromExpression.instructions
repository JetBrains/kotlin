== blockAndAndMismatch ==
fun blockAndAndMismatch() : Boolean {
  false || (return false)
}
---------------------
L0:
  1 <START>
  2 mark({ false || (return false) })
    r(false) -> <v0>
    jt(L2|<v0>)                                               NEXT:[mark((return false)), magic[OR](false || (return false)|<v0>, !<v2>) -> <v3>]
    mark((return false))
    r(false) -> <v1>
    ret(*|<v1>) L1                                            NEXT:[<END>]
L2 [result of boolean operation]:
    magic[OR](false || (return false)|<v0>, !<v2>) -> <v3>    PREV:[jt(L2|<v0>)]
L1:
  1 <END>                                                     NEXT:[<SINK>]                                                                          PREV:[ret(*|<v1>) L1, magic[OR](false || (return false)|<v0>, !<v2>) -> <v3>]
error:
-   <ERROR>                                                   PREV:[]
sink:
    <SINK>                                                    PREV:[<END>]
=====================
