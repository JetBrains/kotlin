namespace <root>

// <namespace name="i">
namespace i

internal abstract trait i.Entry</*0*/ B : jet.Any?> : jet.Any {
    internal abstract fun getValue(): B
}
internal abstract trait i.NotMap</*0*/ B : jet.Any?> : jet.Any {
}
internal final fun </*0*/ B : jet.Any?, /*1*/ C : jet.Any?>i.NotMap<B>.mapValuesOnly(/*0*/ f: jet.Function1<B, C>): i.NotMap<C>
internal final fun </*0*/ V : jet.Any?, /*1*/ R : jet.Any?>i.NotMap<V>.mapValuesOriginal(/*0*/ ff: jet.Function1<i.Entry<V>, R>): i.NotMap<R>
// </namespace name="i">
