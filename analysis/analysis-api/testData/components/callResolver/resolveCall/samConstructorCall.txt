KtSuccessCallInfo:
  call = KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = java.util.Comparator<kotlin.Int!>
        symbol = kotlin/Comparator(function: kotlin.Function2<T!, T!, kotlin.Int>): java.util.Comparator<T>
        valueParameters = [
          KtVariableLikeSignature:
            name = function
            receiverType = null
            returnType = kotlin.Function2<kotlin.Int!, kotlin.Int!, kotlin.Int>
            symbol = function: kotlin.Function2<T!, T!, kotlin.Int>
            callableIdIfNonLocal = null
        ]
        callableIdIfNonLocal = kotlin/Comparator
    typeArgumentsMapping = {
      T -> (kotlin.Int!)
    }
    argumentMapping = {
      {x: Int, y: Int -> 1} -> (KtVariableLikeSignature:
        name = function
        receiverType = null
        returnType = kotlin.Function2<kotlin.Int!, kotlin.Int!, kotlin.Int>
        symbol = function: kotlin.Function2<T!, T!, kotlin.Int>
        callableIdIfNonLocal = null)
    }
