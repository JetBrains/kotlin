KtFile: nestedAnnotation.kt
  PACKAGE_DIRECTIVE
    <empty list>
  IMPORT_LIST
    <empty list>
  CLASS
    PsiComment(EOL_COMMENT)('// FILE: Outer.kt')
    PsiWhiteSpace('\n')
    MODIFIER_LIST
      PsiElement(annotation)('annotation')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('Outer')
    PRIMARY_CONSTRUCTOR
      VALUE_PARAMETER_LIST
        PsiElement(LPAR)('(')
        PsiWhiteSpace('\n    ')
        VALUE_PARAMETER
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          PsiElement(IDENTIFIER)('some')
          PsiElement(COLON)(':')
          PsiWhiteSpace(' ')
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('String')
        PsiElement(COMMA)(',')
        PsiWhiteSpace('\n    ')
        VALUE_PARAMETER
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          PsiElement(IDENTIFIER)('nested')
          PsiElement(COLON)(':')
          PsiWhiteSpace(' ')
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('foo')
              PsiElement(DOT)('.')
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('Nested')
        PsiElement(COMMA)(',')
        PsiWhiteSpace('\n')
        PsiElement(RPAR)(')')
  PsiWhiteSpace('\n\n')
  PsiComment(EOL_COMMENT)('// FILE: Nested.kt')
  PsiWhiteSpace('\n')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(package)('package')
  PsiWhiteSpace(' ')
  PsiErrorElement:Expecting a top level declaration
    PsiElement(IDENTIFIER)('foo')
  PsiWhiteSpace('\n\n')
  CLASS
    MODIFIER_LIST
      PsiElement(annotation)('annotation')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('Nested')
    PRIMARY_CONSTRUCTOR
      VALUE_PARAMETER_LIST
        PsiElement(LPAR)('(')
        PsiWhiteSpace('\n    ')
        VALUE_PARAMETER
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          PsiElement(IDENTIFIER)('i')
          PsiElement(COLON)(':')
          PsiWhiteSpace(' ')
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('Int')
        PsiElement(COMMA)(',')
        PsiWhiteSpace('\n    ')
        VALUE_PARAMETER
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          PsiElement(IDENTIFIER)('s')
          PsiElement(COLON)(':')
          PsiWhiteSpace(' ')
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('String')
        PsiElement(COMMA)(',')
        PsiWhiteSpace('\n')
        PsiElement(RPAR)(')')
  PsiErrorElement:imports are only allowed in the beginning of file
    <empty list>
  PsiWhiteSpace('\n\n')
  PsiComment(EOL_COMMENT)('// FILE: WithNested.kt')
  PsiWhiteSpace('\n')
  IMPORT_LIST
    IMPORT_DIRECTIVE
      PsiElement(import)('import')
      PsiWhiteSpace(' ')
      DOT_QUALIFIED_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('foo')
        PsiElement(DOT)('.')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('Nested')
  PsiWhiteSpace('\n')
  CLASS
    MODIFIER_LIST
      ANNOTATION_ENTRY
        PsiElement(AT)('@')
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('Outer')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            STRING_TEMPLATE
              PsiElement(OPEN_QUOTE)('"')
              LITERAL_STRING_TEMPLATE_ENTRY
                PsiElement(REGULAR_STRING_PART)('value')
              PsiElement(CLOSING_QUOTE)('"')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          VALUE_ARGUMENT
            VALUE_ARGUMENT_NAME
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('nested')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            CALL_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('Nested')
              VALUE_ARGUMENT_LIST
                PsiElement(LPAR)('(')
                VALUE_ARGUMENT
                  INTEGER_CONSTANT
                    PsiElement(INTEGER_LITERAL)('0')
                PsiElement(COMMA)(',')
                PsiWhiteSpace(' ')
                VALUE_ARGUMENT
                  STRING_TEMPLATE
                    PsiElement(OPEN_QUOTE)('"')
                    LITERAL_STRING_TEMPLATE_ENTRY
                      PsiElement(REGULAR_STRING_PART)('nested value')
                    PsiElement(CLOSING_QUOTE)('"')
                PsiElement(RPAR)(')')
          PsiElement(RPAR)(')')
    PsiWhiteSpace('\n')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('WithNested')
  PsiWhiteSpace('\n\n')
  CLASS
    PsiComment(EOL_COMMENT)('// FILE: WithQualifiedNested.kt')
    PsiWhiteSpace('\n')
    MODIFIER_LIST
      ANNOTATION_ENTRY
        PsiElement(AT)('@')
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('Outer')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            STRING_TEMPLATE
              PsiElement(OPEN_QUOTE)('"')
              LITERAL_STRING_TEMPLATE_ENTRY
                PsiElement(REGULAR_STRING_PART)('value')
              PsiElement(CLOSING_QUOTE)('"')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          VALUE_ARGUMENT
            DOT_QUALIFIED_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('foo')
              PsiElement(DOT)('.')
              CALL_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('Nested')
                VALUE_ARGUMENT_LIST
                  PsiElement(LPAR)('(')
                  VALUE_ARGUMENT
                    INTEGER_CONSTANT
                      PsiElement(INTEGER_LITERAL)('1')
                  PsiElement(COMMA)(',')
                  PsiWhiteSpace(' ')
                  VALUE_ARGUMENT
                    STRING_TEMPLATE
                      PsiElement(OPEN_QUOTE)('"')
                      LITERAL_STRING_TEMPLATE_ENTRY
                        PsiElement(REGULAR_STRING_PART)('nested value')
                      PsiElement(CLOSING_QUOTE)('"')
                  PsiElement(RPAR)(')')
          PsiElement(RPAR)(')')
    PsiWhiteSpace('\n')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('WithQualifiedNested')