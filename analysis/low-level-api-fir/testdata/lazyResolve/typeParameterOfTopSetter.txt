
RAW_FIR:
FILE: typeParameterOfTopSetter.kt
    public? final? [RAW_FIR] var x: Int = LAZY_EXPRESSION
        public? [RAW_FIR] get(): Int
        public? [RAW_FIR] set([RAW_FIR] resolveMe: Int): R|kotlin/Unit| { LAZY_BLOCK }

IMPORTS:
FILE: typeParameterOfTopSetter.kt
    public? final? [RAW_FIR] var x: Int = LAZY_EXPRESSION
        public? [RAW_FIR] get(): Int
        public? [RAW_FIR] set([RAW_FIR] resolveMe: Int): R|kotlin/Unit| { LAZY_BLOCK }

COMPILER_REQUIRED_ANNOTATIONS:
FILE: typeParameterOfTopSetter.kt
    public? final? [COMPILER_REQUIRED_ANNOTATIONS] var x: Int = LAZY_EXPRESSION
        public? [COMPILER_REQUIRED_ANNOTATIONS] get(): Int
        public? [COMPILER_REQUIRED_ANNOTATIONS] set([COMPILER_REQUIRED_ANNOTATIONS] resolveMe: Int): R|kotlin/Unit| { LAZY_BLOCK }

COMPANION_GENERATION:
FILE: typeParameterOfTopSetter.kt
    public? final? [COMPANION_GENERATION] var x: Int = LAZY_EXPRESSION
        public? [COMPANION_GENERATION] get(): Int
        public? [COMPANION_GENERATION] set([COMPANION_GENERATION] resolveMe: Int): R|kotlin/Unit| { LAZY_BLOCK }

SUPER_TYPES:
FILE: typeParameterOfTopSetter.kt
    public? final? [SUPER_TYPES] var x: Int = LAZY_EXPRESSION
        public? [SUPER_TYPES] get(): Int
        public? [SUPER_TYPES] set([SUPER_TYPES] resolveMe: Int): R|kotlin/Unit| { LAZY_BLOCK }

TYPES:
FILE: typeParameterOfTopSetter.kt
    public? final? [TYPES] var x: R|kotlin/Int| = LAZY_EXPRESSION
        public? [TYPES] get(): R|kotlin/Int|
        public? [TYPES] set([TYPES] resolveMe: R|kotlin/Int|): R|kotlin/Unit| { LAZY_BLOCK }

STATUS:
FILE: typeParameterOfTopSetter.kt
    public final [STATUS] var x: R|kotlin/Int| = LAZY_EXPRESSION
        public [STATUS] get(): R|kotlin/Int|
        public [STATUS] set([STATUS] resolveMe: R|kotlin/Int|): R|kotlin/Unit| { LAZY_BLOCK }

ARGUMENTS_OF_ANNOTATIONS:
FILE: typeParameterOfTopSetter.kt
    public final [ARGUMENTS_OF_ANNOTATIONS] var x: R|kotlin/Int| = LAZY_EXPRESSION
        public [ARGUMENTS_OF_ANNOTATIONS] get(): R|kotlin/Int|
        public [ARGUMENTS_OF_ANNOTATIONS] set([ARGUMENTS_OF_ANNOTATIONS] resolveMe: R|kotlin/Int|): R|kotlin/Unit| { LAZY_BLOCK }

CONTRACTS:
FILE: typeParameterOfTopSetter.kt
    public final [CONTRACTS] var x: R|kotlin/Int| = IntegerLiteral(2)
        public [CONTRACTS] get(): R|kotlin/Int|
        public [CONTRACTS] set([CONTRACTS] resolveMe: R|kotlin/Int|): R|kotlin/Unit| {
            ^ Unit#
        }

IMPLICIT_TYPES_BODY_RESOLVE:
FILE: typeParameterOfTopSetter.kt
    public final [IMPLICIT_TYPES_BODY_RESOLVE] var x: R|kotlin/Int| = IntegerLiteral(2)
        public [IMPLICIT_TYPES_BODY_RESOLVE] get(): R|kotlin/Int|
        public [IMPLICIT_TYPES_BODY_RESOLVE] set([IMPLICIT_TYPES_BODY_RESOLVE] resolveMe: R|kotlin/Int|): R|kotlin/Unit| {
            ^ Unit#
        }

EXPECT_ACTUAL_MATCHING:
FILE: typeParameterOfTopSetter.kt
    public final [EXPECT_ACTUAL_MATCHING] var x: R|kotlin/Int| = IntegerLiteral(2)
        public [EXPECT_ACTUAL_MATCHING] get(): R|kotlin/Int|
        public [EXPECT_ACTUAL_MATCHING] set([EXPECT_ACTUAL_MATCHING] resolveMe: R|kotlin/Int|): R|kotlin/Unit| {
            ^ Unit#
        }

BODY_RESOLVE:
FILE: typeParameterOfTopSetter.kt
    public final [BODY_RESOLVE] var x: R|kotlin/Int| = Int(2)
        public [BODY_RESOLVE] get(): R|kotlin/Int|
        public [BODY_RESOLVE] set([BODY_RESOLVE] resolveMe: R|kotlin/Int|): R|kotlin/Unit| {
            ^ Q|kotlin/Unit|
        }

FILE RAW TO BODY:
FILE: typeParameterOfTopSetter.kt
    public final [BODY_RESOLVE] var x: R|kotlin/Int| = Int(2)
        public [BODY_RESOLVE] get(): R|kotlin/Int|
        public [BODY_RESOLVE] set([BODY_RESOLVE] resolveMe: R|kotlin/Int|): R|kotlin/Unit| {
            ^ Q|kotlin/Unit|
        }
