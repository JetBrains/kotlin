/loop_invariants.kt:(4,19): info: Generated Viper text for returns_boolean:
method pkg$$global$returns_boolean$() returns (ret: Bool)
{
  ret := false
  goto label$ret
  label label$ret
}

/loop_invariants.kt:(57,81): info: Generated Viper text for dynamic_lambda_invariant:
method pkg$$global$dynamic_lambda_invariant$Tkotlin_Function0__kotlin_Int__(local$f: Ref)
  returns (ret: dom$Unit)
  requires acc(local$f.special$function_object_call_counter, write)
  requires special$duplicable(local$f)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
{
  var anonymous$1: Bool
  var anonymous$2: Bool
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$f): dom$Type), dom$Type$Function())
  label label$continue$1
  anonymous$2 := pkg$$global$returns_boolean$()
  anonymous$1 := anonymous$2
  while (anonymous$1)
    invariant acc(local$f.special$function_object_call_counter, write)
    invariant old(local$f.special$function_object_call_counter) <=
      local$f.special$function_object_call_counter
  {
    var anonymous$3: Int
    var anonymous$4: Bool
    special$invoke_function_object(local$f)
    anonymous$4 := pkg$$global$returns_boolean$()
    anonymous$1 := anonymous$4
  }
  label label$break$1
  label label$ret
}

method pkg$$global$returns_boolean$() returns (ret: Bool)


/loop_invariants.kt:(155,174): info: Generated Viper text for function_assignment:
method pkg$$global$function_assignment$Tkotlin_Function0__kotlin_Int__(local$f: Ref)
  returns (ret: dom$Unit)
  requires acc(local$f.special$function_object_call_counter, write)
  requires special$duplicable(local$f)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
{
  var local$1$g: Ref
  var anonymous$1: Bool
  var anonymous$2: Bool
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$f): dom$Type), dom$Type$Function())
  local$1$g := local$f
  label label$continue$1
  anonymous$2 := pkg$$global$returns_boolean$()
  anonymous$1 := anonymous$2
  while (anonymous$1)
    invariant acc(local$f.special$function_object_call_counter, write)
    invariant old(local$f.special$function_object_call_counter) <=
      local$f.special$function_object_call_counter
  {
    var anonymous$3: Int
    var anonymous$4: Bool
    special$invoke_function_object(local$1$g)
    anonymous$4 := pkg$$global$returns_boolean$()
    anonymous$1 := anonymous$4
  }
  label label$break$1
  label label$ret
}

method pkg$$global$returns_boolean$() returns (ret: Bool)


/loop_invariants.kt:(262,293): info: Generated Viper text for conditional_function_assignment:
method pkg$$global$conditional_function_assignment$Tkotlin_Boolean$Tkotlin_Function0__kotlin_Int__$Tkotlin_Function0__kotlin_Int__(local$b: Bool,
  local$f: Ref, local$h: Ref)
  returns (ret: dom$Unit)
  requires acc(local$f.special$function_object_call_counter, write)
  requires acc(local$h.special$function_object_call_counter, write)
  requires special$duplicable(local$f)
  requires special$duplicable(local$h)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures acc(local$h.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
  ensures old(local$h.special$function_object_call_counter) <=
    local$h.special$function_object_call_counter
{
  var local$1$g: Ref
  var anonymous$1: Ref
  var anonymous$2: Bool
  var anonymous$3: Bool
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$f): dom$Type), dom$Type$Function())
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$h): dom$Type), dom$Type$Function())
  if (local$b) {
    anonymous$1 := local$f
  } else {
    anonymous$1 := local$h}
  local$1$g := anonymous$1
  label label$continue$1
  anonymous$3 := pkg$$global$returns_boolean$()
  anonymous$2 := anonymous$3
  while (anonymous$2)
    invariant acc(local$f.special$function_object_call_counter, write)
    invariant acc(local$h.special$function_object_call_counter, write)
    invariant old(local$f.special$function_object_call_counter) <=
      local$f.special$function_object_call_counter
    invariant old(local$h.special$function_object_call_counter) <=
      local$h.special$function_object_call_counter
  {
    var anonymous$4: Int
    var anonymous$5: Bool
    special$invoke_function_object(local$1$g)
    anonymous$5 := pkg$$global$returns_boolean$()
    anonymous$2 := anonymous$5
  }
  label label$break$1
  label label$ret
}

method pkg$$global$returns_boolean$() returns (ret: Bool)

