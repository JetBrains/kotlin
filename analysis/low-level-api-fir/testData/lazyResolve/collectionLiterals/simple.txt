BODY_RESOLVE:
FILE: [ResolvedTo(IMPORTS)] simple.kt
    public final [ResolvedTo(BODY_RESOLVE)] fun test(): R|kotlin/Unit| {
        [ResolvedTo(BODY_RESOLVE)] lval a: R|MyCollection| = Q|MyCollection.Companion|.R|/MyCollection.Companion.of|(vararg(Int(1), Int(2), Int(3)))
    }
    public abstract [ResolvedTo(STATUS)] interface MyCollection : R|kotlin/Any| {
        public final companion [ResolvedTo(STATUS)] object Companion : R|kotlin/Any| {
            private [ResolvedTo(STATUS)] [ContainingClassKey=Companion] constructor(): R|MyCollection.Companion| {
                LAZY_super<R|kotlin/Any|>
            }

            public final operator [ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] fun of([ResolvedTo(IMPLICIT_TYPES_BODY_RESOLVE)] vararg x: R|kotlin/IntArray|): R|MyCollection| {
                ^of object : R|MyCollection| {
                    private [ResolvedTo(RAW_FIR)] [ContainingClassKey=<anonymous>] constructor(): R|<anonymous>| {
                        super<R|kotlin/Any|>()
                    }

                }

            }

        }

    }

FILE RAW TO BODY:
FILE: [ResolvedTo(BODY_RESOLVE)] simple.kt
    public final [ResolvedTo(BODY_RESOLVE)] fun test(): R|kotlin/Unit| {
        [ResolvedTo(BODY_RESOLVE)] lval a: R|MyCollection| = Q|MyCollection.Companion|.R|/MyCollection.Companion.of|(vararg(Int(1), Int(2), Int(3)))
    }
    public abstract [ResolvedTo(BODY_RESOLVE)] interface MyCollection : R|kotlin/Any| {
        public final companion [ResolvedTo(BODY_RESOLVE)] object Companion : R|kotlin/Any| {
            private [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Companion] constructor(): R|MyCollection.Companion| {
                super<R|kotlin/Any|>()
            }

            public final operator [ResolvedTo(BODY_RESOLVE)] fun of([ResolvedTo(BODY_RESOLVE)] vararg x: R|kotlin/IntArray|): R|MyCollection| {
                ^of object : R|MyCollection| {
                    private [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=<anonymous>] constructor(): R|<anonymous>| {
                        super<R|kotlin/Any|>()
                    }

                }

            }

        }

    }
