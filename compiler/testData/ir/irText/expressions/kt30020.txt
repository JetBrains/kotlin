FILE fqName:<root> fileName:/kt30020.kt
  CLASS INTERFACE name:X modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.X 
    PROPERTY name:xs visibility:public modality:ABSTRACT [val] 
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-xs> visibility:public modality:ABSTRACT <> ($this:<root>.X) returnType:kotlin.collections.MutableList<kotlin.Any> 
        correspondingProperty: PROPERTY name:xs visibility:public modality:ABSTRACT [val] 
        $this: VALUE_PARAMETER name:<this> type:<root>.X 
    FUN name:f visibility:public modality:ABSTRACT <> ($this:<root>.X) returnType:kotlin.collections.MutableList<kotlin.Any> 
      $this: VALUE_PARAMETER name:<this> type:<root>.X 
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean 
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any 
      VALUE_PARAMETER name:other index:0 type:kotlin.Any? 
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int 
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any 
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String 
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any 
  FUN name:test visibility:public modality:FINAL <> (x:<root>.X, nx:<root>.X?) returnType:kotlin.Unit 
    VALUE_PARAMETER name:x index:0 type:<root>.X 
    VALUE_PARAMETER name:nx index:1 type:<root>.X? 
    BLOCK_BODY
      BLOCK type=kotlin.Unit origin=PLUSEQ
        VAR IR_TEMPORARY_VARIABLE name:tmp0_this type:<root>.X [val] 
          GET_VAR 'x: <root>.X declared in <root>.test' type=<root>.X origin=null
        CALL 'public final fun plusAssign <T> (element: T of kotlin.collections.plusAssign): kotlin.Unit [inline] declared in kotlin.collections' type=kotlin.Unit origin=PLUSEQ
          <T>: kotlin.Int
          $receiver: CALL 'public abstract fun <get-xs> (): kotlin.collections.MutableList<kotlin.Any> declared in <root>.X' type=kotlin.collections.MutableList<kotlin.Any> origin=PLUSEQ
            $this: GET_VAR 'val tmp0_this: <root>.X [val] declared in <root>.test' type=<root>.X origin=null
          element: CONST Int type=kotlin.Int value=1
      CALL 'public final fun plusAssign <T> (element: T of kotlin.collections.plusAssign): kotlin.Unit [inline] declared in kotlin.collections' type=kotlin.Unit origin=PLUSEQ
        <T>: kotlin.Int
        $receiver: CALL 'public abstract fun f (): kotlin.collections.MutableList<kotlin.Any> declared in <root>.X' type=kotlin.collections.MutableList<kotlin.Any> origin=null
          $this: GET_VAR 'x: <root>.X declared in <root>.test' type=<root>.X origin=null
        element: CONST Int type=kotlin.Int value=2
      CALL 'public final fun plusAssign <T> (element: T of kotlin.collections.plusAssign): kotlin.Unit [inline] declared in kotlin.collections' type=kotlin.Unit origin=PLUSEQ
        <T>: kotlin.Int
        $receiver: TYPE_OP type=kotlin.collections.MutableList<kotlin.Int> origin=CAST typeOperand=kotlin.collections.MutableList<kotlin.Int>
          CALL 'public abstract fun <get-xs> (): kotlin.collections.MutableList<kotlin.Any> declared in <root>.X' type=kotlin.collections.MutableList<kotlin.Any> origin=GET_PROPERTY
            $this: GET_VAR 'x: <root>.X declared in <root>.test' type=<root>.X origin=null
        element: CONST Int type=kotlin.Int value=3
      CALL 'public final fun plusAssign <T> (element: T of kotlin.collections.plusAssign): kotlin.Unit [inline] declared in kotlin.collections' type=kotlin.Unit origin=PLUSEQ
        <T>: kotlin.Int
        $receiver: TYPE_OP type=kotlin.collections.MutableList<kotlin.Int> origin=CAST typeOperand=kotlin.collections.MutableList<kotlin.Int>
          CALL 'public abstract fun f (): kotlin.collections.MutableList<kotlin.Any> declared in <root>.X' type=kotlin.collections.MutableList<kotlin.Any> origin=null
            $this: GET_VAR 'x: <root>.X declared in <root>.test' type=<root>.X origin=null
        element: CONST Int type=kotlin.Int value=4
      CALL 'public final fun plusAssign <T> (element: T of kotlin.collections.plusAssign): kotlin.Unit [inline] declared in kotlin.collections' type=kotlin.Unit origin=PLUSEQ
        <T>: kotlin.Int
        $receiver: BLOCK type=kotlin.collections.MutableList<kotlin.Any> origin=EXCLEXCL
          VAR IR_TEMPORARY_VARIABLE name:tmp2_notnull type:kotlin.collections.MutableList<kotlin.Any>? [val] 
            BLOCK type=kotlin.collections.MutableList<kotlin.Any>? origin=SAFE_CALL
              VAR IR_TEMPORARY_VARIABLE name:tmp1_safe_receiver type:<root>.X? [val] 
                GET_VAR 'nx: <root>.X? declared in <root>.test' type=<root>.X? origin=null
              WHEN type=kotlin.collections.MutableList<kotlin.Any>? origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                    arg0: GET_VAR 'val tmp1_safe_receiver: <root>.X? [val] declared in <root>.test' type=<root>.X? origin=null
                    arg1: CONST Null type=kotlin.Nothing? value=null
                  then: CONST Null type=kotlin.Nothing? value=null
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: CALL 'public abstract fun <get-xs> (): kotlin.collections.MutableList<kotlin.Any> declared in <root>.X' type=kotlin.collections.MutableList<kotlin.Any> origin=GET_PROPERTY
                    $this: GET_VAR 'val tmp1_safe_receiver: <root>.X? [val] declared in <root>.test' type=<root>.X? origin=null
          WHEN type=kotlin.collections.MutableList<kotlin.Any> origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'val tmp2_notnull: kotlin.collections.MutableList<kotlin.Any>? [val] declared in <root>.test' type=kotlin.collections.MutableList<kotlin.Any>? origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: CALL 'public final fun THROW_NPE (): kotlin.Nothing declared in kotlin.internal.ir' type=kotlin.Nothing origin=EXCLEXCL
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: GET_VAR 'val tmp2_notnull: kotlin.collections.MutableList<kotlin.Any>? [val] declared in <root>.test' type=kotlin.collections.MutableList<kotlin.Any>? origin=null
        element: CONST Int type=kotlin.Int value=5
      CALL 'public final fun plusAssign <T> (element: T of kotlin.collections.plusAssign): kotlin.Unit [inline] declared in kotlin.collections' type=kotlin.Unit origin=PLUSEQ
        <T>: kotlin.Int
        $receiver: BLOCK type=kotlin.collections.MutableList<kotlin.Any> origin=EXCLEXCL
          VAR IR_TEMPORARY_VARIABLE name:tmp4_notnull type:kotlin.collections.MutableList<kotlin.Any>? [val] 
            BLOCK type=kotlin.collections.MutableList<kotlin.Any>? origin=SAFE_CALL
              VAR IR_TEMPORARY_VARIABLE name:tmp3_safe_receiver type:<root>.X? [val] 
                GET_VAR 'nx: <root>.X? declared in <root>.test' type=<root>.X? origin=null
              WHEN type=kotlin.collections.MutableList<kotlin.Any>? origin=null
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                    arg0: GET_VAR 'val tmp3_safe_receiver: <root>.X? [val] declared in <root>.test' type=<root>.X? origin=null
                    arg1: CONST Null type=kotlin.Nothing? value=null
                  then: CONST Null type=kotlin.Nothing? value=null
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: CALL 'public abstract fun f (): kotlin.collections.MutableList<kotlin.Any> declared in <root>.X' type=kotlin.collections.MutableList<kotlin.Any> origin=null
                    $this: GET_VAR 'val tmp3_safe_receiver: <root>.X? [val] declared in <root>.test' type=<root>.X? origin=null
          WHEN type=kotlin.collections.MutableList<kotlin.Any> origin=null
            BRANCH
              if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                arg0: GET_VAR 'val tmp4_notnull: kotlin.collections.MutableList<kotlin.Any>? [val] declared in <root>.test' type=kotlin.collections.MutableList<kotlin.Any>? origin=null
                arg1: CONST Null type=kotlin.Nothing? value=null
              then: CALL 'public final fun THROW_NPE (): kotlin.Nothing declared in kotlin.internal.ir' type=kotlin.Nothing origin=EXCLEXCL
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: GET_VAR 'val tmp4_notnull: kotlin.collections.MutableList<kotlin.Any>? [val] declared in <root>.test' type=kotlin.collections.MutableList<kotlin.Any>? origin=null
        element: CONST Int type=kotlin.Int value=6
  FUN name:testExtensionReceiver visibility:public modality:FINAL <> ($receiver:kotlin.collections.MutableList<kotlin.Any>) returnType:kotlin.Unit 
    $receiver: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<kotlin.Any> 
    BLOCK_BODY
      CALL 'public final fun plusAssign <T> (element: T of kotlin.collections.plusAssign): kotlin.Unit [inline] declared in kotlin.collections' type=kotlin.Unit origin=PLUSEQ
        <T>: kotlin.Int
        $receiver: GET_VAR '<this>: kotlin.collections.MutableList<kotlin.Any> declared in <root>.testExtensionReceiver' type=kotlin.collections.MutableList<kotlin.Any> origin=PLUSEQ
        element: CONST Int type=kotlin.Int value=100
  CLASS CLASS name:AML modality:ABSTRACT visibility:public superTypes:[kotlin.collections.MutableList<kotlin.Int>]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.AML 
    CONSTRUCTOR visibility:public <> () returnType:<root>.AML [primary] 
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:AML modality:ABSTRACT visibility:public superTypes:[kotlin.collections.MutableList<kotlin.Int>]'
    FUN name:testExplicitThis visibility:public modality:FINAL <> ($this:<root>.AML) returnType:kotlin.Unit 
      $this: VALUE_PARAMETER name:<this> type:<root>.AML 
      BLOCK_BODY
        CALL 'public final fun plusAssign <T> (element: T of kotlin.collections.plusAssign): kotlin.Unit [inline] declared in kotlin.collections' type=kotlin.Unit origin=PLUSEQ
          <T>: kotlin.Int
          $receiver: GET_VAR '<this>: <root>.AML declared in <root>.AML.testExplicitThis' type=<root>.AML origin=PLUSEQ
          element: CONST Int type=kotlin.Int value=200
    CLASS CLASS name:Inner modality:FINAL visibility:public [inner] superTypes:[kotlin.Any]
      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.AML.Inner 
      CONSTRUCTOR visibility:public <> ($this:<root>.AML) returnType:<root>.AML.Inner [primary] 
        $outer: VALUE_PARAMETER name:<this> type:<root>.AML 
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Inner modality:FINAL visibility:public [inner] superTypes:[kotlin.Any]'
      FUN name:testOuterThis visibility:public modality:FINAL <> ($this:<root>.AML.Inner) returnType:kotlin.Unit 
        $this: VALUE_PARAMETER name:<this> type:<root>.AML.Inner 
        BLOCK_BODY
          CALL 'public final fun plusAssign <T> (element: T of kotlin.collections.plusAssign): kotlin.Unit [inline] declared in kotlin.collections' type=kotlin.Unit origin=PLUSEQ
            <T>: kotlin.Int
            $receiver: GET_VAR '<this>: <root>.AML declared in <root>.AML' type=<root>.AML origin=PLUSEQ
            element: CONST Int type=kotlin.Int value=300
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean 
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any 
        VALUE_PARAMETER name:other index:0 type:kotlin.Any? 
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int 
        overridden:
          public open fun hashCode (): kotlin.Int declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any 
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String 
        overridden:
          public open fun toString (): kotlin.String declared in kotlin.Any
        $this: VALUE_PARAMETER name:<this> type:kotlin.Any 
    FUN FAKE_OVERRIDE name:add visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<kotlin.Int>, element:kotlin.Int) returnType:kotlin.Boolean 
      overridden:
        public abstract fun add (element: E of kotlin.collections.MutableList): kotlin.Boolean declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<kotlin.Int> 
      VALUE_PARAMETER name:element index:0 type:kotlin.Int 
    FUN FAKE_OVERRIDE name:add visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<kotlin.Int>, index:kotlin.Int, element:kotlin.Int) returnType:kotlin.Unit 
      overridden:
        public abstract fun add (index: kotlin.Int, element: E of kotlin.collections.MutableList): kotlin.Unit declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<kotlin.Int> 
      VALUE_PARAMETER name:index index:0 type:kotlin.Int 
      VALUE_PARAMETER name:element index:1 type:kotlin.Int 
    FUN FAKE_OVERRIDE name:addAll visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<kotlin.Int>, elements:kotlin.collections.Collection<kotlin.Int>) returnType:kotlin.Boolean 
      overridden:
        public abstract fun addAll (elements: kotlin.collections.Collection<E of kotlin.collections.MutableList>): kotlin.Boolean declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<kotlin.Int> 
      VALUE_PARAMETER name:elements index:0 type:kotlin.collections.Collection<kotlin.Int> 
    FUN FAKE_OVERRIDE name:addAll visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<kotlin.Int>, index:kotlin.Int, elements:kotlin.collections.Collection<kotlin.Int>) returnType:kotlin.Boolean 
      overridden:
        public abstract fun addAll (index: kotlin.Int, elements: kotlin.collections.Collection<E of kotlin.collections.MutableList>): kotlin.Boolean declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<kotlin.Int> 
      VALUE_PARAMETER name:index index:0 type:kotlin.Int 
      VALUE_PARAMETER name:elements index:1 type:kotlin.collections.Collection<kotlin.Int> 
    FUN FAKE_OVERRIDE name:clear visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<kotlin.Int>) returnType:kotlin.Unit 
      overridden:
        public abstract fun clear (): kotlin.Unit declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<kotlin.Int> 
    FUN FAKE_OVERRIDE name:contains visibility:public modality:ABSTRACT <> ($this:kotlin.collections.List<kotlin.Int>, element:kotlin.Int) returnType:kotlin.Boolean 
      overridden:
        public abstract fun contains (element: E of kotlin.collections.MutableList): kotlin.Boolean declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.List<kotlin.Int> 
      VALUE_PARAMETER name:element index:0 type:kotlin.Int 
    FUN FAKE_OVERRIDE name:containsAll visibility:public modality:ABSTRACT <> ($this:kotlin.collections.List<kotlin.Int>, elements:kotlin.collections.Collection<kotlin.Int>) returnType:kotlin.Boolean 
      overridden:
        public abstract fun containsAll (elements: kotlin.collections.Collection<E of kotlin.collections.MutableList>): kotlin.Boolean declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.List<kotlin.Int> 
      VALUE_PARAMETER name:elements index:0 type:kotlin.collections.Collection<kotlin.Int> 
    FUN FAKE_OVERRIDE name:get visibility:public modality:ABSTRACT <> ($this:kotlin.collections.List<kotlin.Int>, index:kotlin.Int) returnType:kotlin.Int 
      overridden:
        public abstract fun get (index: kotlin.Int): E of kotlin.collections.MutableList declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.List<kotlin.Int> 
      VALUE_PARAMETER name:index index:0 type:kotlin.Int 
    FUN FAKE_OVERRIDE name:indexOf visibility:public modality:ABSTRACT <> ($this:kotlin.collections.List<kotlin.Int>, element:kotlin.Int) returnType:kotlin.Int 
      overridden:
        public abstract fun indexOf (element: E of kotlin.collections.MutableList): kotlin.Int declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.List<kotlin.Int> 
      VALUE_PARAMETER name:element index:0 type:kotlin.Int 
    FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:ABSTRACT <> ($this:kotlin.collections.List<kotlin.Int>) returnType:kotlin.Boolean 
      overridden:
        public abstract fun isEmpty (): kotlin.Boolean declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.List<kotlin.Int> 
    FUN FAKE_OVERRIDE name:iterator visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableCollection<kotlin.Int>) returnType:kotlin.collections.MutableIterator<kotlin.Int> 
      overridden:
        public abstract fun iterator (): kotlin.collections.MutableIterator<E of kotlin.collections.MutableList> declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableCollection<kotlin.Int> 
    FUN FAKE_OVERRIDE name:lastIndexOf visibility:public modality:ABSTRACT <> ($this:kotlin.collections.List<kotlin.Int>, element:kotlin.Int) returnType:kotlin.Int 
      overridden:
        public abstract fun lastIndexOf (element: E of kotlin.collections.MutableList): kotlin.Int declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.List<kotlin.Int> 
      VALUE_PARAMETER name:element index:0 type:kotlin.Int 
    FUN FAKE_OVERRIDE name:listIterator visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<kotlin.Int>) returnType:kotlin.collections.MutableListIterator<kotlin.Int> 
      overridden:
        public abstract fun listIterator (): kotlin.collections.MutableListIterator<E of kotlin.collections.MutableList> declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<kotlin.Int> 
    FUN FAKE_OVERRIDE name:listIterator visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<kotlin.Int>, index:kotlin.Int) returnType:kotlin.collections.MutableListIterator<kotlin.Int> 
      overridden:
        public abstract fun listIterator (index: kotlin.Int): kotlin.collections.MutableListIterator<E of kotlin.collections.MutableList> declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<kotlin.Int> 
      VALUE_PARAMETER name:index index:0 type:kotlin.Int 
    FUN FAKE_OVERRIDE name:remove visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<kotlin.Int>, element:kotlin.Int) returnType:kotlin.Boolean 
      overridden:
        public abstract fun remove (element: E of kotlin.collections.MutableList): kotlin.Boolean declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<kotlin.Int> 
      VALUE_PARAMETER name:element index:0 type:kotlin.Int 
    FUN FAKE_OVERRIDE name:removeAll visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<kotlin.Int>, elements:kotlin.collections.Collection<kotlin.Int>) returnType:kotlin.Boolean 
      overridden:
        public abstract fun removeAll (elements: kotlin.collections.Collection<E of kotlin.collections.MutableList>): kotlin.Boolean declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<kotlin.Int> 
      VALUE_PARAMETER name:elements index:0 type:kotlin.collections.Collection<kotlin.Int> 
    FUN FAKE_OVERRIDE name:removeAt visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<kotlin.Int>, index:kotlin.Int) returnType:kotlin.Int 
      overridden:
        public abstract fun removeAt (index: kotlin.Int): E of kotlin.collections.MutableList declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<kotlin.Int> 
      VALUE_PARAMETER name:index index:0 type:kotlin.Int 
    FUN FAKE_OVERRIDE name:retainAll visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<kotlin.Int>, elements:kotlin.collections.Collection<kotlin.Int>) returnType:kotlin.Boolean 
      overridden:
        public abstract fun retainAll (elements: kotlin.collections.Collection<E of kotlin.collections.MutableList>): kotlin.Boolean declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<kotlin.Int> 
      VALUE_PARAMETER name:elements index:0 type:kotlin.collections.Collection<kotlin.Int> 
    FUN FAKE_OVERRIDE name:set visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<kotlin.Int>, index:kotlin.Int, element:kotlin.Int) returnType:kotlin.Int 
      overridden:
        public abstract fun set (index: kotlin.Int, element: E of kotlin.collections.MutableList): E of kotlin.collections.MutableList declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<kotlin.Int> 
      VALUE_PARAMETER name:index index:0 type:kotlin.Int 
      VALUE_PARAMETER name:element index:1 type:kotlin.Int 
    FUN FAKE_OVERRIDE name:subList visibility:public modality:ABSTRACT <> ($this:kotlin.collections.MutableList<kotlin.Int>, fromIndex:kotlin.Int, toIndex:kotlin.Int) returnType:kotlin.collections.MutableList<kotlin.Int> 
      overridden:
        public abstract fun subList (fromIndex: kotlin.Int, toIndex: kotlin.Int): kotlin.collections.MutableList<E of kotlin.collections.MutableList> declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.collections.MutableList<kotlin.Int> 
      VALUE_PARAMETER name:fromIndex index:0 type:kotlin.Int 
      VALUE_PARAMETER name:toIndex index:1 type:kotlin.Int 
    PROPERTY FAKE_OVERRIDE name:size visibility:public modality:ABSTRACT [val] 
      FUN FAKE_OVERRIDE name:<get-size> visibility:public modality:ABSTRACT <> ($this:kotlin.collections.List<kotlin.Int>) returnType:kotlin.Int 
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:size visibility:public modality:ABSTRACT [val] 
        overridden:
          public abstract fun <get-size> (): kotlin.Int declared in kotlin.collections.MutableList
        $this: VALUE_PARAMETER name:<this> type:kotlin.collections.List<kotlin.Int> 
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean 
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any 
      VALUE_PARAMETER name:other index:0 type:kotlin.Any? 
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int 
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any 
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String 
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.collections.MutableList
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any 
