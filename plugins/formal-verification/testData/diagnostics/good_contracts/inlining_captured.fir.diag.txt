/inlining_captured.kt:(354,365): info: Generated Viper text for single_call:
method global$fun_single_call$fun_take$fun_take$T_Int$return$T_Int$return$T_Int(local$g: Ref)
  returns (ret$0: Int)
  requires acc(local$g.special$function_object_call_counter, write)
  ensures acc(local$g.special$function_object_call_counter, write)
  ensures old(local$g.special$function_object_call_counter) <=
    local$g.special$function_object_call_counter
  ensures local$g.special$function_object_call_counter ==
    old(local$g.special$function_object_call_counter) + 1
{
  var ret$1: Int
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$g): dom$Type), dom$Type$Function())
  if (true) {
    var ret$2: Int
    var anonymous$0: Int
    anonymous$0 := 0
    if (true) {
      var anonymous$1: Int
      special$invoke_function_object(local$g)
      ret$2 := anonymous$1
      goto label$ret$2
      label label$ret$2
    }
    ret$1 := ret$2
    goto label$ret$1
    label label$ret$1
  }
  ret$0 := ret$1
  goto label$ret$0
  label label$ret$0
}

/inlining_captured.kt:(582,593): info: Generated Viper text for double_call:
method global$fun_double_call$fun_take$fun_take$T_Int$return$T_Int$fun_take$T_Int$return$T_Int$return$T_Int(local$f: Ref,
  local$g: Ref)
  returns (ret$0: Int)
  requires acc(local$f.special$function_object_call_counter, write)
  requires acc(local$g.special$function_object_call_counter, write)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures acc(local$g.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
  ensures old(local$g.special$function_object_call_counter) <=
    local$g.special$function_object_call_counter
  ensures local$f.special$function_object_call_counter ==
    old(local$f.special$function_object_call_counter) + 1
  ensures local$g.special$function_object_call_counter ==
    old(local$g.special$function_object_call_counter) + 1
{
  var ret$1: Int
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$f): dom$Type), dom$Type$Function())
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$g): dom$Type), dom$Type$Function())
  if (true) {
    var ret$2: Int
    var anonymous$0: Int
    anonymous$0 := 0
    if (true) {
      var anonymous$1: Int
      var anonymous$2: Int
      special$invoke_function_object(local$g)
      special$invoke_function_object(local$f)
      ret$2 := anonymous$2
      goto label$ret$2
      label label$ret$2
    }
    ret$1 := ret$2
    goto label$ret$1
    label label$ret$1
  }
  ret$0 := ret$1
  goto label$ret$0
  label label$ret$0
}

/inlining_captured.kt:(872,883): info: Generated Viper text for nested_call:
method global$fun_nested_call$fun_take$fun_take$T_Int$return$T_Int$fun_take$T_Int$return$T_Int$return$T_Int(local$f: Ref,
  local$g: Ref)
  returns (ret$0: Int)
  requires acc(local$f.special$function_object_call_counter, write)
  requires acc(local$g.special$function_object_call_counter, write)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures acc(local$g.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
  ensures old(local$g.special$function_object_call_counter) <=
    local$g.special$function_object_call_counter
  ensures local$f.special$function_object_call_counter ==
    old(local$f.special$function_object_call_counter) + 1
  ensures local$g.special$function_object_call_counter ==
    old(local$g.special$function_object_call_counter) + 1
{
  var ret$1: Int
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$f): dom$Type), dom$Type$Function())
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$g): dom$Type), dom$Type$Function())
  if (true) {
    var ret$2: Int
    var anonymous$0: Int
    anonymous$0 := 0
    if (true) {
      var anonymous$1: Int
      var anonymous$2: Int
      special$invoke_function_object(local$g)
      special$invoke_function_object(local$f)
      ret$2 := anonymous$2
      goto label$ret$2
      label label$ret$2
    }
    ret$1 := ret$2
    goto label$ret$1
    label label$ret$1
  }
  ret$0 := ret$1
  goto label$ret$0
  label label$ret$0
}

/inlining_captured.kt:(1158,1174): info: Generated Viper text for non_local_return:
method global$fun_non_local_return$fun_take$fun_take$$return$T_Unit$return$T_Int(local$g: Ref)
  returns (ret$0: Int)
  requires acc(local$g.special$function_object_call_counter, write)
  ensures acc(local$g.special$function_object_call_counter, write)
  ensures old(local$g.special$function_object_call_counter) <=
    local$g.special$function_object_call_counter
  ensures local$g.special$function_object_call_counter ==
    old(local$g.special$function_object_call_counter) + 1
{
  var ret$1: Int
  inhale dom$Type$isSubtype((dom$TypeOf$typeOf(local$g): dom$Type), dom$Type$Function())
  if (true) {
    var ret$2: Int
    var anonymous$0: Int
    anonymous$0 := 0
    if (true) {
      var anonymous$1: dom$Unit
      var anonymous$2: dom$Unit
      special$invoke_function_object(local$g)
      ret$2 := 1
      goto label$ret$2
      special$invoke_function_object(local$g)
      ret$2 := anonymous$0
      goto label$ret$2
      label label$ret$2
    }
    ret$1 := ret$2
    goto label$ret$1
    label label$ret$1
  }
  ret$0 := ret$1
  goto label$ret$0
  label label$ret$0
}
