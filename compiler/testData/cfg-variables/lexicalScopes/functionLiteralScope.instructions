== foo ==
fun foo() {
    "before"
    val b = 1
    val f = { (x: Int) ->
        val a = x + b
    }
    "after"
}
---------------------
L0:
  1 <START>                                                                       INIT: in: {} out: {}                        USE: in: {} out: {}
  2 mark({ "before" val b = 1 val f = { (x: Int) -> val a = x + b } "after" })
    mark("before")
    r("before")
    v(val b = 1)                                                                  INIT: in: {} out: {b=D}
    r(1)                                                                          INIT: in: {b=D} out: {b=D}
    w(b)                                                                          INIT: in: {b=D} out: {b=ID}
    v(val f = { (x: Int) -> val a = x + b })                                      INIT: in: {b=ID} out: {b=ID, f=D}
    mark({ (x: Int) -> val a = x + b })                                           INIT: in: {b=ID, f=D} out: {b=ID, f=D}
    jmp?(L2)
    d({ (x: Int) -> val a = x + b })                                                                                          USE: in: {b=READ} out: {b=READ}
L2:
    r({ (x: Int) -> val a = x + b })
    w(f)                                                                          INIT: in: {b=ID, f=D} out: {b=ID, f=ID}
    mark("after")                                                                 INIT: in: {b=ID, f=ID} out: {b=ID, f=ID}
    r("after")
L1:
  1 <END>                                                                         INIT: in: {} out: {}
error:
    <ERROR>
sink:
    <SINK>                                                                                                                    USE: in: {} out: {}
=====================
== anonymous_0 ==
{ (x: Int) ->
        val a = x + b
    }
---------------------
L3:
  3 <START>                INIT: in: {} out: {}
    v(x: Int)              INIT: in: {} out: {x=D}
    w(x)                   INIT: in: {x=D} out: {x=ID}
  4 mark(val a = x + b)    INIT: in: {x=ID} out: {x=ID}
    v(val a = x + b)       INIT: in: {x=ID} out: {a=D, x=ID}
    mark(x + b)            INIT: in: {a=D, x=ID} out: {a=D, x=ID}     USE: in: {b=READ, x=READ} out: {b=READ, x=READ}
    r(x)                                                              USE: in: {b=READ} out: {b=READ, x=READ}
    r(b)                                                              USE: in: {} out: {b=READ}
    call(+, plus)
    w(a)                   INIT: in: {a=D, x=ID} out: {a=ID, x=ID}
L4:
  3 <END>                  INIT: in: {x=ID} out: {x=ID}
error:
    <ERROR>                INIT: in: {} out: {}
sink:
    <SINK>                 INIT: in: {x=ID} out: {x=ID}               USE: in: {} out: {}
=====================
