/**
 * public final annotation class Anno : kotlin/Annotation {
 *
 *   // signature: <init>()V
 *   public constructor()
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
@java.lang.annotation.Retention(value = java.lang.annotation.RetentionPolicy.RUNTIME)
public abstract @interface Anno {
}


////////////////////

/**
 * public final annotation class Anno2 : kotlin/Annotation {
 *
 *   // signature: <init>()V
 *   public constructor()
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
@kotlin.annotation.Target(allowedTargets = {kotlin.annotation.AnnotationTarget.PROPERTY, kotlin.annotation.AnnotationTarget.CLASS})
@java.lang.annotation.Target(value = {java.lang.annotation.ElementType.TYPE})
@java.lang.annotation.Retention(value = java.lang.annotation.RetentionPolicy.RUNTIME)
public abstract @interface Anno2 {
}


////////////////////

/**
 * public final class Test : kotlin/Any {
 *
 *   // signature: <init>()V
 *   public constructor()
 *
 *   // field: prop:Ljava/lang/String;
 *   // getter: getProp()Ljava/lang/String;
 *   // synthetic method for annotations: getProp$annotations()V
 *   public final val prop: kotlin/String (* = ... *)
 *     public final get
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
public final class Test {
    @org.jetbrains.annotations.NotNull()
    private final java.lang.String prop = "A";

    public Test() {
        super();
    }

    @org.jetbrains.annotations.NotNull()
    public final java.lang.String getProp() {
        return null;
    }

    @Anno()
    @Anno2()
    @java.lang.Deprecated()
    public static void getProp$annotations() {
    }
}
