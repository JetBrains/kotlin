KtWhenConditionInRange(177,190): '!in MyClass()'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        3 -> (KaVariableSignature:
          name = str
          receiverType = null
          returnType = kotlin.String
          symbol = str: kotlin.String
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = MyClass()
          isSafeNavigation = false
          type = MyClass
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = /MyClass.contains(<dispatch receiver>: MyClass, str: kotlin.String): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = str
              receiverType = null
              returnType = kotlin.String
              symbol = str: kotlin.String
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /MyClass.contains
      typeArgumentsMapping = {}
    diagnostic = ERROR<WRONG_NUMBER_OF_TYPE_ARGUMENTS: No type arguments expected for fun contains(str: String): Boolean.>
    isInBestCandidates = false

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        3 -> (KaVariableSignature:
          name = int
          receiverType = null
          returnType = kotlin.Int
          symbol = int: kotlin.Int
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = KaExplicitReceiverValue:
          expression = MyClass()
          isSafeNavigation = false
          type = MyClass
        signature = KaFunctionSignature:
          receiverType = MyClass
          returnType = kotlin.Boolean
          symbol = /contains(<extension receiver>: T, int: kotlin.Int): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = int
              receiverType = null
              returnType = kotlin.Int
              symbol = int: kotlin.Int
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /contains
      typeArgumentsMapping = {
        T -> (MyClass)
      }
    isInBestCandidates = true