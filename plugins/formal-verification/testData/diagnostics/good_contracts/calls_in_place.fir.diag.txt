/calls_in_place.kt:(162,169): info: Generated Viper text for unknown:
method global$fun_unknown$fun_take$fun_take$T_Int$return$T_Int$return$T_Int(local$f: Ref)
  returns (ret$0: Ref)
  requires acc(local$f.special$function_object_call_counter, write)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$intType())
  ensures true
{
  var anonymous$0: Ref
  var anonymous$1: Ref
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$f), dom$RuntimeType$functionType())
  special$invoke_function_object(local$f)
  anonymous$1 := anonymous$0
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(anonymous$1), dom$RuntimeType$intType())
  ret$0 := anonymous$1
  goto label$ret$0
  label label$ret$0
}

/calls_in_place.kt:(309,321): info: Generated Viper text for at_most_once:
method global$fun_at_most_once$fun_take$fun_take$T_Int$return$T_Int$return$T_Int(local$f: Ref)
  returns (ret$0: Ref)
  requires acc(local$f.special$function_object_call_counter, write)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$intType())
  ensures local$f.special$function_object_call_counter <=
    old(local$f.special$function_object_call_counter) + 1
{
  var anonymous$0: Ref
  var anonymous$1: Ref
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$f), dom$RuntimeType$functionType())
  special$invoke_function_object(local$f)
  anonymous$1 := anonymous$0
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(anonymous$1), dom$RuntimeType$intType())
  ret$0 := anonymous$1
  goto label$ret$0
  label label$ret$0
}

/calls_in_place.kt:(466,478): info: Generated Viper text for exactly_once:
method global$fun_exactly_once$fun_take$fun_take$T_Int$return$T_Int$return$T_Int(local$f: Ref)
  returns (ret$0: Ref)
  requires acc(local$f.special$function_object_call_counter, write)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$intType())
  ensures local$f.special$function_object_call_counter ==
    old(local$f.special$function_object_call_counter) + 1
{
  var anonymous$0: Ref
  var anonymous$1: Ref
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$f), dom$RuntimeType$functionType())
  special$invoke_function_object(local$f)
  anonymous$1 := anonymous$0
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(anonymous$1), dom$RuntimeType$intType())
  ret$0 := anonymous$1
  goto label$ret$0
  label label$ret$0
}

/calls_in_place.kt:(623,636): info: Generated Viper text for at_least_once:
method global$fun_at_least_once$fun_take$fun_take$T_Int$return$T_Int$return$T_Int(local$f: Ref)
  returns (ret$0: Ref)
  requires acc(local$f.special$function_object_call_counter, write)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$intType())
  ensures local$f.special$function_object_call_counter >
    old(local$f.special$function_object_call_counter)
{
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$f), dom$RuntimeType$functionType())
  ret$0 := global$fun_exactly_once$fun_take$fun_take$T_Int$return$T_Int$return$T_Int(local$f)
  goto label$ret$0
  label label$ret$0
}

method global$fun_exactly_once$fun_take$fun_take$T_Int$return$T_Int$return$T_Int(local$f: Ref)
  returns (ret: Ref)
  requires acc(local$f.special$function_object_call_counter, write)
  ensures acc(local$f.special$function_object_call_counter, write)
  ensures old(local$f.special$function_object_call_counter) <=
    local$f.special$function_object_call_counter
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$intType())
  ensures local$f.special$function_object_call_counter ==
    old(local$f.special$function_object_call_counter) + 1


/calls_in_place.kt:(800,809): info: Generated Viper text for loopWhile:
method global$fun_loopWhile$fun_take$fun_take$$return$T_Boolean$return$T_Unit(local$lambda: Ref)
  returns (ret$0: Ref)
  requires acc(local$lambda.special$function_object_call_counter, write)
  ensures acc(local$lambda.special$function_object_call_counter, write)
  ensures old(local$lambda.special$function_object_call_counter) <=
    local$lambda.special$function_object_call_counter
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
  ensures local$lambda.special$function_object_call_counter >
    old(local$lambda.special$function_object_call_counter)
{
  var anonymous$0: Ref
  var anonymous$1: Ref
  var anonymous$2: Ref
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$lambda), dom$RuntimeType$functionType())
  ret$0 := dom$RuntimeType$unitValue()
  label label$continue$0
  special$invoke_function_object(local$lambda)
  anonymous$2 := anonymous$1
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(anonymous$2), dom$RuntimeType$boolType())
  anonymous$0 := anonymous$2
  while (dom$RuntimeType$boolFromRef(anonymous$0))
    invariant acc(local$lambda.special$function_object_call_counter, write)
    invariant old(local$lambda.special$function_object_call_counter) <=
      local$lambda.special$function_object_call_counter
    invariant dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
    invariant local$lambda.special$function_object_call_counter >
      old(local$lambda.special$function_object_call_counter)
  {
    var anonymous$3: Ref
    var anonymous$4: Ref
    special$invoke_function_object(local$lambda)
    anonymous$4 := anonymous$3
    inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(anonymous$4), dom$RuntimeType$boolType())
    anonymous$0 := anonymous$4
  }
  label label$break$0
  label label$ret$0
}

/calls_in_place.kt:(990,999): info: Generated Viper text for loopUntil:
method global$fun_loopUntil$fun_take$fun_take$$return$T_Boolean$return$T_Unit(local$lambda: Ref)
  returns (ret$0: Ref)
  requires acc(local$lambda.special$function_object_call_counter, write)
  ensures acc(local$lambda.special$function_object_call_counter, write)
  ensures old(local$lambda.special$function_object_call_counter) <=
    local$lambda.special$function_object_call_counter
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
  ensures local$lambda.special$function_object_call_counter >
    old(local$lambda.special$function_object_call_counter)
{
  var anonymous$0: Ref
  var anonymous$1: Ref
  var anonymous$2: Ref
  var anonymous$3: Ref
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$lambda), dom$RuntimeType$functionType())
  ret$0 := dom$RuntimeType$unitValue()
  label label$continue$0
  special$invoke_function_object(local$lambda)
  anonymous$3 := anonymous$2
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(anonymous$3), dom$RuntimeType$boolType())
  anonymous$1 := anonymous$3
  anonymous$0 := special$notBool(anonymous$1)
  while (dom$RuntimeType$boolFromRef(anonymous$0))
    invariant acc(local$lambda.special$function_object_call_counter, write)
    invariant old(local$lambda.special$function_object_call_counter) <=
      local$lambda.special$function_object_call_counter
    invariant dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
    invariant local$lambda.special$function_object_call_counter >
      old(local$lambda.special$function_object_call_counter)
  {
    var anonymous$4: Ref
    var anonymous$5: Ref
    var anonymous$6: Ref
    special$invoke_function_object(local$lambda)
    anonymous$6 := anonymous$5
    inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(anonymous$6), dom$RuntimeType$boolType())
    anonymous$4 := anonymous$6
    anonymous$0 := special$notBool(anonymous$4)
  }
  label label$break$0
  label label$ret$0
}

/calls_in_place.kt:(1178,1181): info: Generated Viper text for run:
method global$fun_run$fun_take$fun_take$$return$NT_Any$return$NT_Any(local$block: Ref)
  returns (ret$0: Ref)
  requires acc(local$block.special$function_object_call_counter, write)
  ensures acc(local$block.special$function_object_call_counter, write)
  ensures old(local$block.special$function_object_call_counter) <=
    local$block.special$function_object_call_counter
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$nullable(dom$RuntimeType$anyType()))
  ensures local$block.special$function_object_call_counter ==
    old(local$block.special$function_object_call_counter) + 1
{
  var anonymous$0: Ref
  var anonymous$1: Ref
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$block), dom$RuntimeType$functionType())
  special$invoke_function_object(local$block)
  anonymous$1 := anonymous$0
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(anonymous$1), dom$RuntimeType$nullable(dom$RuntimeType$anyType()))
  ret$0 := anonymous$1
  goto label$ret$0
  label label$ret$0
}
