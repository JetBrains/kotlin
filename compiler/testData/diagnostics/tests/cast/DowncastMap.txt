package

internal fun p(/*0*/ p: Map<kotlin.String, kotlin.Int>): kotlin.Unit

internal interface Map</*0*/ K, /*1*/ out V> {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

internal interface MutableMap</*0*/ K, /*1*/ V> : Map<K, V> {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    internal abstract fun set(/*0*/ k: K, /*1*/ v: V): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
