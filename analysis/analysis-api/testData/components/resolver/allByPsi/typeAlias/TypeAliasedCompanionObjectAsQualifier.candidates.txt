KtFile: 'TypeAliasedCompanionObjectAsQualifier.kt'
  NO_CANDIDATES

KtPackageDirective(0,12): 'package test'
  NO_CANDIDATES

KtNameReferenceExpression(8,12): 'test'
  NO_CANDIDATES

KtImportList(12,12): ''
  NO_CANDIDATES

KtClass(14,118): 'class MyClass {'
  NO_CANDIDATES

KtClassBody(28,118): '{'
  NO_CANDIDATES

KtObjectDeclaration(34,116): 'companion object {'
  NO_CANDIDATES

KtDeclarationModifierList(34,43): 'companion'
  NO_CANDIDATES

KtClassBody(51,116): '{'
  NO_CANDIDATES

KtNamedFunction(61,78): 'fun function() {}'
  NO_CANDIDATES

KtParameterList(73,75): '()'
  NO_CANDIDATES

KtBlockExpression(76,78): '{}'
  NO_CANDIDATES

KtProperty(88,110): 'val property: Int = 10'
  NO_CANDIDATES

KtTypeReference(102,105): 'Int'
  NO_CANDIDATES

KtUserType(102,105): 'Int'
  NO_CANDIDATES

KtNameReferenceExpression(102,105): 'Int'
  NO_CANDIDATES

KtConstantExpression(108,110): '10'
  NO_CANDIDATES

KtTypeAlias(120,147): 'typealias MyAlias = MyClass'
  NO_CANDIDATES

KtTypeReference(140,147): 'MyClass'
  NO_CANDIDATES

KtUserType(140,147): 'MyClass'
  NO_CANDIDATES

KtNameReferenceExpression(140,147): 'MyClass'
  NO_CANDIDATES

KtNamedFunction(149,253): 'fun usage() {'
  NO_CANDIDATES

KtParameterList(158,160): '()'
  NO_CANDIDATES

KtBlockExpression(161,253): '{'
  NO_CANDIDATES

KtDotQualifiedExpression(167,185): 'MyAlias.function()'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = MyAlias
          isSafeNavigation = false
          type = test.MyClass.Companion
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = test/MyClass.Companion.function(<dispatch receiver>: test.MyClass.Companion): kotlin.Unit
          valueParameters = []
          contextParameters = []
          callableId = test/MyClass.Companion.function
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(167,174): 'MyAlias'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = test.MyClass
          symbol = <constructor>(): test.MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<OTHER_ERROR: Inapplicable candidate>
    isInBestCandidates = false

KtCallExpression(175,185): 'function()'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = MyAlias
          isSafeNavigation = false
          type = test.MyClass.Companion
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = test/MyClass.Companion.function(<dispatch receiver>: test.MyClass.Companion): kotlin.Unit
          valueParameters = []
          contextParameters = []
          callableId = test/MyClass.Companion.function
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(175,183): 'function'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = MyAlias
          isSafeNavigation = false
          type = test.MyClass.Companion
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = test/MyClass.Companion.function(<dispatch receiver>: test.MyClass.Companion): kotlin.Unit
          valueParameters = []
          contextParameters = []
          callableId = test/MyClass.Companion.function
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(183,185): '()'
  NO_CANDIDATES

KtDotQualifiedExpression(190,206): 'MyAlias.property'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = MyAlias
          isSafeNavigation = false
          type = test.MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = property
          receiverType = null
          returnType = kotlin.Int
          symbol = val property: kotlin.Int
          contextParameters = []
          callableId = test/MyClass.Companion.property
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(190,197): 'MyAlias'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = test.MyClass
          symbol = <constructor>(): test.MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<OTHER_ERROR: Inapplicable candidate>
    isInBestCandidates = false

KtNameReferenceExpression(198,206): 'property'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = MyAlias
          isSafeNavigation = false
          type = test.MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = property
          receiverType = null
          returnType = kotlin.Int
          symbol = val property: kotlin.Int
          contextParameters = []
          callableId = test/MyClass.Companion.property
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtCallableReferenceExpression(212,229): 'MyAlias::function'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = MyAlias
          isSafeNavigation = false
          type = test.MyClass.Companion
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = test/MyClass.Companion.function(<dispatch receiver>: test.MyClass.Companion): kotlin.Unit
          valueParameters = []
          contextParameters = []
          callableId = test/MyClass.Companion.function
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(212,219): 'MyAlias'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = test.MyClass
          symbol = <constructor>(): test.MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<OTHER_ERROR: Inapplicable candidate>
    isInBestCandidates = false

KtNameReferenceExpression(221,229): 'function'
  NO_CANDIDATES

KtCallableReferenceExpression(234,251): 'MyAlias::property'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = MyAlias
          isSafeNavigation = false
          type = test.MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = property
          receiverType = null
          returnType = kotlin.Int
          symbol = val property: kotlin.Int
          contextParameters = []
          callableId = test/MyClass.Companion.property
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(234,241): 'MyAlias'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = test.MyClass
          symbol = <constructor>(): test.MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<OTHER_ERROR: Inapplicable candidate>
    isInBestCandidates = false

KtNameReferenceExpression(243,251): 'property'
  NO_CANDIDATES