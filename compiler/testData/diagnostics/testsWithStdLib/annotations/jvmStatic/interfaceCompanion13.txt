package

public interface B {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    public companion object Companion {
        private constructor Companion()
        @kotlin.jvm.JvmStatic public final var foo: kotlin.Int
        @kotlin.jvm.JvmStatic public final var foo1: kotlin.Int
        @kotlin.jvm.JvmStatic public final var foo2: kotlin.Int
        @kotlin.jvm.JvmStatic private final var foo3: kotlin.Int
        @kotlin.jvm.JvmStatic protected final var foo4: kotlin.Int
        @kotlin.jvm.JvmStatic protected final var foo5: kotlin.Int
        @kotlin.jvm.JvmStatic public final fun a1(): kotlin.Unit
        @kotlin.jvm.JvmStatic internal final fun a4(): kotlin.Unit
        @kotlin.jvm.JvmStatic private final fun a4(): kotlin.Unit
        @kotlin.jvm.JvmStatic protected final fun a4(): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}
