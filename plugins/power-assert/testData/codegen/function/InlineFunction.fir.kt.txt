fun box(): String {
  return runAll(tests = [to<String, Function0<Unit>>(/* <this> = "test1", */ that = local fun <anonymous>() {
    test1()
  }
)])
}

suspend fun getFalse(): Boolean {
  return false
}

fun test1() {
  runBlocking<Unit>(block = local suspend fun <anonymous>() {
    { // BLOCK
      val tmp_0: Boolean = run<Boolean>(block = local fun <anonymous>(): Boolean {
        return getFalse()
      }
)
      assert(value = tmp_0, lazyMessage = local fun <anonymous>(): String {
        return "\nassert(run { getFalse() })" + "\n       |" + "\n       " + tmp_0 + "\n"
      }
)
    }
  }
)
}

