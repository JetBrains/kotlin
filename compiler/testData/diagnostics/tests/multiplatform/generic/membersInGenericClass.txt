// -- Module: <m1-common> --
package

public expect interface A</*0*/ T> {
    public expect abstract val x: T
    public expect abstract var y: kotlin.collections.List<T>
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public abstract expect fun f(/*0*/ p: kotlin.collections.Collection<T>): kotlin.collections.Map<T, A<T?>>
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}


// -- Module: <m2-jvm> --
package

public actual interface A</*0*/ T> {
    public actual abstract val x: T
    public actual abstract var y: kotlin.collections.List<T>
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public abstract actual fun f(/*0*/ p: kotlin.collections.Collection<T>): kotlin.collections.Map<T, A<T?>>
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
