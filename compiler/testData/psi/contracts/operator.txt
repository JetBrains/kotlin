KtFile: operator.kt
  PACKAGE_DIRECTIVE
    <empty list>
  PsiComment(EOL_COMMENT)('// Currently forbidden, see KT-77175')
  PsiWhiteSpace('\n')
  PsiComment(EOL_COMMENT)('// LANGUAGE: +AllowContractsOnSomeOperators')
  PsiWhiteSpace('\n\n')
  IMPORT_LIST
    IMPORT_DIRECTIVE
      PsiElement(import)('import')
      PsiWhiteSpace(' ')
      DOT_QUALIFIED_EXPRESSION
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('kotlin')
        PsiElement(DOT)('.')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('contracts')
      PsiElement(DOT)('.')
      PsiElement(MUL)('*')
  PsiWhiteSpace('\n\n')
  FUN
    MODIFIER_LIST
      ANNOTATION_ENTRY
        PsiElement(AT)('@')
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('OptIn')
        VALUE_ARGUMENT_LIST
          PsiElement(LPAR)('(')
          VALUE_ARGUMENT
            CLASS_LITERAL_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('ExperimentalContracts')
              PsiElement(COLONCOLON)('::')
              PsiElement(class)('class')
          PsiElement(RPAR)(')')
      PsiWhiteSpace('\n')
      PsiElement(operator)('operator')
    PsiWhiteSpace(' ')
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    TYPE_REFERENCE
      USER_TYPE
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('Boolean')
    PsiElement(DOT)('.')
    PsiElement(IDENTIFIER)('plus')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      VALUE_PARAMETER
        PsiElement(IDENTIFIER)('x')
        PsiElement(COLON)(':')
        PsiWhiteSpace(' ')
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('Boolean')
      PsiElement(RPAR)(')')
    PsiElement(COLON)(':')
    PsiWhiteSpace(' ')
    TYPE_REFERENCE
      USER_TYPE
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('Boolean')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      ANNOTATED_EXPRESSION
        ANNOTATION_ENTRY
          PsiElement(AT)('@')
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('Suppress')
          VALUE_ARGUMENT_LIST
            PsiElement(LPAR)('(')
            VALUE_ARGUMENT
              STRING_TEMPLATE
                PsiElement(OPEN_QUOTE)('"')
                LITERAL_STRING_TEMPLATE_ENTRY
                  PsiElement(REGULAR_STRING_PART)('CONTRACT_NOT_ALLOWED')
                PsiElement(CLOSING_QUOTE)('"')
            PsiElement(RPAR)(')')
        PsiWhiteSpace('\n    ')
        CALL_EXPRESSION
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('contract')
          PsiWhiteSpace(' ')
          LAMBDA_ARGUMENT
            LAMBDA_EXPRESSION
              FUNCTION_LITERAL
                PsiElement(LBRACE)('{')
                PsiWhiteSpace(' ')
                BLOCK
                  BINARY_EXPRESSION
                    CALL_EXPRESSION
                      REFERENCE_EXPRESSION
                        PsiElement(IDENTIFIER)('returns')
                      VALUE_ARGUMENT_LIST
                        PsiElement(LPAR)('(')
                        PsiElement(RPAR)(')')
                    PsiWhiteSpace(' ')
                    OPERATION_REFERENCE
                      PsiElement(IDENTIFIER)('implies')
                    PsiWhiteSpace(' ')
                    PARENTHESIZED
                      PsiElement(LPAR)('(')
                      REFERENCE_EXPRESSION
                        PsiElement(IDENTIFIER)('x')
                      PsiElement(RPAR)(')')
                PsiWhiteSpace(' ')
                PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      RETURN
        PsiElement(return)('return')
        PsiWhiteSpace(' ')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('x')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')