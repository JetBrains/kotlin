package

package a {
    public fun test(/*0*/ a: a.A): kotlin.Unit
    @kotlin.Suppress(names = {"INVISIBLE_MEMBER", "INVISIBLE_REFERENCE"}) @kotlin.internal.HidesMembers public fun a.A.forEach(): kotlin.String
    @kotlin.Suppress(names = {"INVISIBLE_MEMBER", "INVISIBLE_REFERENCE"}) @kotlin.internal.HidesMembers public fun a.A.forEach(/*0*/ s: kotlin.String): kotlin.Unit

    public final class A {
        public constructor A()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public final fun forEach(): a.A
        public final fun forEach(/*0*/ i: kotlin.Int): a.A
        public final fun forEach(/*0*/ i: kotlin.String): a.A
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}

package b {
    @kotlin.Suppress(names = {"INVISIBLE_MEMBER", "INVISIBLE_REFERENCE"}) @kotlin.internal.HidesMembers public fun a.A.forEach(/*0*/ i: kotlin.Int): kotlin.Int
    @kotlin.Suppress(names = {"INVISIBLE_MEMBER", "INVISIBLE_REFERENCE"}) @kotlin.internal.HidesMembers public fun a.A.forEach(/*0*/ s: kotlin.String): kotlin.Unit
}
