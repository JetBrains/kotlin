FILE: delegateWithAnonymousObject.kt
    public abstract class DelegateProvider<in Type> : R|kotlin/Any| {
        public constructor<in Type>(): R|DelegateProvider<Type>| {
            super<R|kotlin/Any|>()
        }

    }
    public final fun <Type : R|Base|, Base : R|DelegateProvider<Base>|, Target : R|kotlin/Any|> R|Type|.delegate(factory: R|() -> kotlin/properties/ReadWriteProperty<Type, Target>|): R|kotlin/properties/ReadWriteProperty<Type, Target>| {
        ^delegate Null(null)!!
    }
    public final class IssueListView : R|DelegateProvider<IssueListView>| {
        public constructor(): R|IssueListView| {
            super<R|DelegateProvider<IssueListView>|>()
        }

        public final fun updateFrom(any: R|kotlin/Any|): R|kotlin/Unit| {
        }

    }
    public final class IssuesListUserProfile : R|DelegateProvider<IssuesListUserProfile>| {
        public constructor(): R|IssuesListUserProfile| {
            super<R|DelegateProvider<IssuesListUserProfile>|>()
        }

        public final var issueListView: R|IssueListView|by this@R|/IssuesListUserProfile|.R|/delegate|<R|IssuesListUserProfile|, R|IssuesListUserProfile|, R|IssueListView|>(<L> = delegate@fun <anonymous>(): R|kotlin/properties/ReadWriteProperty<IssuesListUserProfile, IssueListView>| {
            ^ object : R|kotlin/properties/ReadWriteProperty<IssuesListUserProfile, IssueListView>| {
                private constructor(): R|anonymous| {
                    super<R|kotlin/Any|>()
                }

                public final override fun getValue(thisRef: R|IssuesListUserProfile|, property: R|kotlin/reflect/KProperty<*>|): R|IssueListView| {
                    ^getValue R|/IssueListView.IssueListView|()
                }

                public final override fun setValue(thisRef: R|IssuesListUserProfile|, property: R|kotlin/reflect/KProperty<*>|, value: R|IssueListView|): R|kotlin/Unit| {
                    ^setValue R|/IssueListView.IssueListView|().R|/IssueListView.updateFrom|(R|<local>/value|)
                }

            }

        }
        )
            public get(): R|IssueListView| {
                ^ this@R|/IssuesListUserProfile|.D|/IssuesListUserProfile.issueListView|.R|FakeOverride<kotlin/properties/ReadWriteProperty.getValue: R|IssueListView|>|(this@R|/IssuesListUserProfile|, ::R|/IssuesListUserProfile.issueListView|)
            }
            public set(<set-?>: R|IssueListView|): R|kotlin/Unit| {
                this@R|/IssuesListUserProfile|.D|/IssuesListUserProfile.issueListView|.R|FakeOverride<kotlin/properties/ReadWriteProperty.setValue: R|kotlin/Unit|>|(this@R|/IssuesListUserProfile|, ::R|/IssuesListUserProfile.issueListView|, R|<local>/issueListView|)
            }

    }
