Tower Data Context:
    Element 0
        Scope: FirDefaultStarImportingScope
    Element 1
        Scope: FirExplicitStarImportingScope
    Element 2
        Scope: FirDefaultSimpleImportingScope
    Element 3
        Scope: FirDefaultSimpleImportingScope
    Element 4
        Scope: FirPackageMemberScope
    Element 5
        Scope: FirExplicitSimpleImportingScope
    Element 6
        Implicit receiver:
            FirRegularClassSymbol public final class B : R|kotlin/Any|
                Type: one.B
    Element 7
        Scope: FirLocalScope
    Element 8
        Context receivers:
            FirValueParameterSymbol R|one/A|
                Type: one.A
                Label: A
            FirValueParameterSymbol R|kotlin/Int|
                Type: kotlin.Int
                Label: Int
    Element 9
        Implicit receiver:
            FirReceiverParameterSymbol <explicit receiver parameter>: R|kotlin/String|
                Type: kotlin.String
    Element 10
        Scope: FirLocalScope

FILE: [ResolvedTo(IMPORTS)] memberLevelPropertyContextReceiver.kt
    public final? [ResolvedTo(RAW_FIR)] class A : R|kotlin/Any| {
        public? [ResolvedTo(RAW_FIR)] constructor(): R|one/A| {
            LAZY_super<R|kotlin/Any|>
        }

    }
    public final [ResolvedTo(STATUS)] class B : R|kotlin/Any| {
        public [ResolvedTo(STATUS)] constructor(): R|one/B| {
            LAZY_super<R|kotlin/Any|>
        }

        context([ResolvedTo(BODY_RESOLVE)] R|one/A|, [ResolvedTo(BODY_RESOLVE)] R|kotlin/Int|)
        public final [ResolvedTo(BODY_RESOLVE)] val [ResolvedTo(BODY_RESOLVE)] R|kotlin/String|.foo: <ERROR TYPE REF: Cannot infer variable type without initializer / getter / delegate>
            public [ResolvedTo(BODY_RESOLVE)] get(): <ERROR TYPE REF: Cannot infer variable type without initializer / getter / delegate> {
                [ResolvedTo(BODY_RESOLVE)] lval x: R|kotlin/Int| = Int(1)
            }

    }
