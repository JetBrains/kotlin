FILE fqName:<root> fileName:/IndexArrayElementGetterTest.kt
  CLASS CLASS name:IndexArrayElementGetterTest modality:FINAL visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.IndexArrayElementGetterTest
    PROPERTY name:clazz visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:clazz type:<root>.IndexArrayElementGetterTest.AtomicArrayClass visibility:private [final]
        EXPRESSION_BODY
          CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.IndexArrayElementGetterTest.AtomicArrayClass' type=<root>.IndexArrayElementGetterTest.AtomicArrayClass origin=null
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-clazz> visibility:private modality:FINAL returnType:<root>.IndexArrayElementGetterTest.AtomicArrayClass
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.IndexArrayElementGetterTest
        correspondingProperty: PROPERTY name:clazz visibility:private modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-clazz> (): <root>.IndexArrayElementGetterTest.AtomicArrayClass declared in <root>.IndexArrayElementGetterTest'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:clazz type:<root>.IndexArrayElementGetterTest.AtomicArrayClass visibility:private [final]' type=<root>.IndexArrayElementGetterTest.AtomicArrayClass origin=null
              receiver: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.<get-clazz>' type=<root>.IndexArrayElementGetterTest origin=null
    CLASS CLASS name:AtomicArrayClass modality:FINAL visibility:private superTypes:[kotlin.Any]
      thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.IndexArrayElementGetterTest.AtomicArrayClass
      PROPERTY ATOMICFU_GENERATED_PROPERTY name:intArr visibility:public modality:FINAL [val]
        FIELD ATOMICFU_GENERATED_FIELD name:intArr type:kotlin.concurrent.AtomicIntArray visibility:private [final]
          EXPRESSION_BODY
            CONSTRUCTOR_CALL 'public constructor <init> (size: kotlin.Int) declared in kotlin.concurrent.AtomicIntArray' type=kotlin.concurrent.AtomicIntArray origin=null
              ARG size: CONST Int type=kotlin.Int value=10
        FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-intArr> visibility:public modality:FINAL returnType:kotlin.concurrent.AtomicIntArray
          VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.IndexArrayElementGetterTest.AtomicArrayClass
          correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:intArr visibility:public modality:FINAL [val]
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-intArr> (): kotlin.concurrent.AtomicIntArray declared in <root>.IndexArrayElementGetterTest.AtomicArrayClass'
              GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:intArr type:kotlin.concurrent.AtomicIntArray visibility:private [final] declared in <root>.IndexArrayElementGetterTest.AtomicArrayClass' type=kotlin.concurrent.AtomicIntArray origin=null
                receiver: GET_VAR '<this>: <root>.IndexArrayElementGetterTest.AtomicArrayClass declared in <root>.IndexArrayElementGetterTest.AtomicArrayClass.<get-intArr>' type=<root>.IndexArrayElementGetterTest.AtomicArrayClass origin=null
      PROPERTY ATOMICFU_GENERATED_PROPERTY name:longArr visibility:public modality:FINAL [val]
        FIELD ATOMICFU_GENERATED_FIELD name:longArr type:kotlin.concurrent.AtomicLongArray visibility:private [final]
          EXPRESSION_BODY
            CONSTRUCTOR_CALL 'public constructor <init> (size: kotlin.Int) declared in kotlin.concurrent.AtomicLongArray' type=kotlin.concurrent.AtomicLongArray origin=null
              ARG size: CONST Int type=kotlin.Int value=10
        FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-longArr> visibility:public modality:FINAL returnType:kotlin.concurrent.AtomicLongArray
          VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.IndexArrayElementGetterTest.AtomicArrayClass
          correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:longArr visibility:public modality:FINAL [val]
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-longArr> (): kotlin.concurrent.AtomicLongArray declared in <root>.IndexArrayElementGetterTest.AtomicArrayClass'
              GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:longArr type:kotlin.concurrent.AtomicLongArray visibility:private [final] declared in <root>.IndexArrayElementGetterTest.AtomicArrayClass' type=kotlin.concurrent.AtomicLongArray origin=null
                receiver: GET_VAR '<this>: <root>.IndexArrayElementGetterTest.AtomicArrayClass declared in <root>.IndexArrayElementGetterTest.AtomicArrayClass.<get-longArr>' type=<root>.IndexArrayElementGetterTest.AtomicArrayClass origin=null
      CONSTRUCTOR visibility:public returnType:<root>.IndexArrayElementGetterTest.AtomicArrayClass [primary]
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:AtomicArrayClass modality:FINAL visibility:private superTypes:[kotlin.Any]' type=kotlin.Unit
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        overridden:
          public open fun hashCode (): kotlin.Int declared in kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        overridden:
          public open fun toString (): kotlin.String declared in kotlin.Any
    CONSTRUCTOR visibility:public returnType:<root>.IndexArrayElementGetterTest [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:IndexArrayElementGetterTest modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    FUN name:fib visibility:public modality:FINAL returnType:kotlin.Int
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.IndexArrayElementGetterTest
      VALUE_PARAMETER kind:Regular name:a index:1 type:kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun fib (a: kotlin.Int): kotlin.Int declared in <root>.IndexArrayElementGetterTest'
          WHEN type=kotlin.Int origin=IF
            BRANCH
              if: WHEN type=kotlin.Boolean origin=OROR
                BRANCH
                  if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                    ARG arg0: GET_VAR 'a: kotlin.Int declared in <root>.IndexArrayElementGetterTest.fib' type=kotlin.Int origin=null
                    ARG arg1: CONST Int type=kotlin.Int value=0
                  then: CONST Boolean type=kotlin.Boolean value=true
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                    ARG arg0: GET_VAR 'a: kotlin.Int declared in <root>.IndexArrayElementGetterTest.fib' type=kotlin.Int origin=null
                    ARG arg1: CONST Int type=kotlin.Int value=1
              then: GET_VAR 'a: kotlin.Int declared in <root>.IndexArrayElementGetterTest.fib' type=kotlin.Int origin=null
            BRANCH
              if: CONST Boolean type=kotlin.Boolean value=true
              then: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
                ARG <this>: CALL 'public final fun fib (a: kotlin.Int): kotlin.Int declared in <root>.IndexArrayElementGetterTest' type=kotlin.Int origin=null
                  ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.fib' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
                  ARG a: CALL 'public final fun minus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=MINUS
                    ARG <this>: GET_VAR 'a: kotlin.Int declared in <root>.IndexArrayElementGetterTest.fib' type=kotlin.Int origin=null
                    ARG other: CONST Int type=kotlin.Int value=1
                ARG other: CALL 'public final fun fib (a: kotlin.Int): kotlin.Int declared in <root>.IndexArrayElementGetterTest' type=kotlin.Int origin=null
                  ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.fib' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
                  ARG a: CALL 'public final fun minus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=MINUS
                    ARG <this>: GET_VAR 'a: kotlin.Int declared in <root>.IndexArrayElementGetterTest.fib' type=kotlin.Int origin=null
                    ARG other: CONST Int type=kotlin.Int value=2
    FUN name:testIndexArrayElementGetting visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.IndexArrayElementGetterTest
      BLOCK_BODY
        CALL 'public final fun set (index: kotlin.Int, newValue: kotlin.Int): kotlin.Unit declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Unit origin=null
          ARG <this>: CALL 'public final fun <get-intArr> (): kotlin.concurrent.AtomicIntArray declared in <root>.IndexArrayElementGetterTest.AtomicArrayClass' type=kotlin.concurrent.AtomicIntArray origin=null
            ARG <this>: CALL 'private final fun <get-clazz> (): <root>.IndexArrayElementGetterTest.AtomicArrayClass declared in <root>.IndexArrayElementGetterTest' type=<root>.IndexArrayElementGetterTest.AtomicArrayClass origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
          ARG index: CONST Int type=kotlin.Int value=8
          ARG newValue: CONST Int type=kotlin.Int value=3
        VAR name:i type:kotlin.Int [val]
          CALL 'public final fun fib (a: kotlin.Int): kotlin.Int declared in <root>.IndexArrayElementGetterTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
            ARG a: CONST Int type=kotlin.Int value=4
        VAR name:j type:kotlin.Int [val]
          CALL 'public final fun fib (a: kotlin.Int): kotlin.Int declared in <root>.IndexArrayElementGetterTest' type=kotlin.Int origin=null
            ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
            ARG a: CONST Int type=kotlin.Int value=5
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=3
          ARG actual: TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
            CALL 'public final fun get (index: kotlin.Int): kotlin.Int declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Int origin=null
              ARG <this>: CALL 'public final fun <get-intArr> (): kotlin.concurrent.AtomicIntArray declared in <root>.IndexArrayElementGetterTest.AtomicArrayClass' type=kotlin.concurrent.AtomicIntArray origin=null
                ARG <this>: CALL 'private final fun <get-clazz> (): <root>.IndexArrayElementGetterTest.AtomicArrayClass declared in <root>.IndexArrayElementGetterTest' type=<root>.IndexArrayElementGetterTest.AtomicArrayClass origin=GET_PROPERTY
                  ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
              ARG index: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
                ARG <this>: GET_VAR 'val i: kotlin.Int declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=kotlin.Int origin=null
                ARG other: GET_VAR 'val j: kotlin.Int declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=kotlin.Int origin=null
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=3
          ARG actual: TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
            CALL 'public final fun get (index: kotlin.Int): kotlin.Int declared in kotlin.concurrent.AtomicIntArray' type=kotlin.Int origin=null
              ARG <this>: CALL 'public final fun <get-intArr> (): kotlin.concurrent.AtomicIntArray declared in <root>.IndexArrayElementGetterTest.AtomicArrayClass' type=kotlin.concurrent.AtomicIntArray origin=null
                ARG <this>: CALL 'private final fun <get-clazz> (): <root>.IndexArrayElementGetterTest.AtomicArrayClass declared in <root>.IndexArrayElementGetterTest' type=<root>.IndexArrayElementGetterTest.AtomicArrayClass origin=GET_PROPERTY
                  ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
              ARG index: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
                ARG <this>: CALL 'public final fun fib (a: kotlin.Int): kotlin.Int declared in <root>.IndexArrayElementGetterTest' type=kotlin.Int origin=null
                  ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
                  ARG a: CONST Int type=kotlin.Int value=4
                ARG other: CALL 'public final fun fib (a: kotlin.Int): kotlin.Int declared in <root>.IndexArrayElementGetterTest' type=kotlin.Int origin=null
                  ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
                  ARG a: CONST Int type=kotlin.Int value=5
        CALL 'public final fun set (index: kotlin.Int, newValue: kotlin.Long): kotlin.Unit declared in kotlin.concurrent.AtomicLongArray' type=kotlin.Unit origin=null
          ARG <this>: CALL 'public final fun <get-longArr> (): kotlin.concurrent.AtomicLongArray declared in <root>.IndexArrayElementGetterTest.AtomicArrayClass' type=kotlin.concurrent.AtomicLongArray origin=null
            ARG <this>: CALL 'private final fun <get-clazz> (): <root>.IndexArrayElementGetterTest.AtomicArrayClass declared in <root>.IndexArrayElementGetterTest' type=<root>.IndexArrayElementGetterTest.AtomicArrayClass origin=GET_PROPERTY
              ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
          ARG index: CONST Int type=kotlin.Int value=3
          ARG newValue: CONST Long type=kotlin.Long value=100
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Long
          ARG expected: CONST Long type=kotlin.Long value=100
          ARG actual: TYPE_OP type=kotlin.Long origin=CAST typeOperand=kotlin.Long
            CALL 'public final fun get (index: kotlin.Int): kotlin.Long declared in kotlin.concurrent.AtomicLongArray' type=kotlin.Long origin=null
              ARG <this>: CALL 'public final fun <get-longArr> (): kotlin.concurrent.AtomicLongArray declared in <root>.IndexArrayElementGetterTest.AtomicArrayClass' type=kotlin.concurrent.AtomicLongArray origin=null
                ARG <this>: CALL 'private final fun <get-clazz> (): <root>.IndexArrayElementGetterTest.AtomicArrayClass declared in <root>.IndexArrayElementGetterTest' type=<root>.IndexArrayElementGetterTest.AtomicArrayClass origin=GET_PROPERTY
                  ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
              ARG index: CALL 'public final fun minus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=MINUS
                ARG <this>: CALL 'public final fun fib (a: kotlin.Int): kotlin.Int declared in <root>.IndexArrayElementGetterTest' type=kotlin.Int origin=null
                  ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
                  ARG a: CONST Int type=kotlin.Int value=6
                ARG other: CALL 'public final fun fib (a: kotlin.Int): kotlin.Int declared in <root>.IndexArrayElementGetterTest' type=kotlin.Int origin=null
                  ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
                  ARG a: CONST Int type=kotlin.Int value=5
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Long
          ARG expected: CONST Long type=kotlin.Long value=100
          ARG actual: TYPE_OP type=kotlin.Long origin=CAST typeOperand=kotlin.Long
            CALL 'public final fun get (index: kotlin.Int): kotlin.Long declared in kotlin.concurrent.AtomicLongArray' type=kotlin.Long origin=null
              ARG <this>: CALL 'public final fun <get-longArr> (): kotlin.concurrent.AtomicLongArray declared in <root>.IndexArrayElementGetterTest.AtomicArrayClass' type=kotlin.concurrent.AtomicLongArray origin=null
                ARG <this>: CALL 'private final fun <get-clazz> (): <root>.IndexArrayElementGetterTest.AtomicArrayClass declared in <root>.IndexArrayElementGetterTest' type=<root>.IndexArrayElementGetterTest.AtomicArrayClass origin=GET_PROPERTY
                  ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
              ARG index: CALL 'public final fun rem (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PERC
                ARG <this>: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
                  ARG <this>: CALL 'public final fun fib (a: kotlin.Int): kotlin.Int declared in <root>.IndexArrayElementGetterTest' type=kotlin.Int origin=null
                    ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
                    ARG a: CONST Int type=kotlin.Int value=6
                  ARG other: CALL 'public final fun fib (a: kotlin.Int): kotlin.Int declared in <root>.IndexArrayElementGetterTest' type=kotlin.Int origin=null
                    ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
                    ARG a: CONST Int type=kotlin.Int value=4
                ARG other: CONST Int type=kotlin.Int value=8
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Long
          ARG expected: CONST Long type=kotlin.Long value=100
          ARG actual: TYPE_OP type=kotlin.Long origin=CAST typeOperand=kotlin.Long
            CALL 'public final fun get (index: kotlin.Int): kotlin.Long declared in kotlin.concurrent.AtomicLongArray' type=kotlin.Long origin=null
              ARG <this>: CALL 'public final fun <get-longArr> (): kotlin.concurrent.AtomicLongArray declared in <root>.IndexArrayElementGetterTest.AtomicArrayClass' type=kotlin.concurrent.AtomicLongArray origin=null
                ARG <this>: CALL 'private final fun <get-clazz> (): <root>.IndexArrayElementGetterTest.AtomicArrayClass declared in <root>.IndexArrayElementGetterTest' type=<root>.IndexArrayElementGetterTest.AtomicArrayClass origin=GET_PROPERTY
                  ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
              ARG index: CALL 'public final fun rem (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PERC
                ARG <this>: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
                  ARG <this>: CALL 'public final fun fib (a: kotlin.Int): kotlin.Int declared in <root>.IndexArrayElementGetterTest' type=kotlin.Int origin=null
                    ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
                    ARG a: CONST Int type=kotlin.Int value=6
                  ARG other: CALL 'public final fun fib (a: kotlin.Int): kotlin.Int declared in <root>.IndexArrayElementGetterTest' type=kotlin.Int origin=null
                    ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
                    ARG a: CONST Int type=kotlin.Int value=4
                ARG other: CONST Int type=kotlin.Int value=8
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Long
          ARG expected: CONST Long type=kotlin.Long value=100
          ARG actual: TYPE_OP type=kotlin.Long origin=CAST typeOperand=kotlin.Long
            CALL 'public final fun get (index: kotlin.Int): kotlin.Long declared in kotlin.concurrent.AtomicLongArray' type=kotlin.Long origin=null
              ARG <this>: CALL 'public final fun <get-longArr> (): kotlin.concurrent.AtomicLongArray declared in <root>.IndexArrayElementGetterTest.AtomicArrayClass' type=kotlin.concurrent.AtomicLongArray origin=null
                ARG <this>: CALL 'private final fun <get-clazz> (): <root>.IndexArrayElementGetterTest.AtomicArrayClass declared in <root>.IndexArrayElementGetterTest' type=<root>.IndexArrayElementGetterTest.AtomicArrayClass origin=GET_PROPERTY
                  ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
              ARG index: CALL 'public final fun rem (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PERC
                ARG <this>: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int declared in kotlin.Int' type=kotlin.Int origin=PLUS
                  ARG <this>: CALL 'public final fun fib (a: kotlin.Int): kotlin.Int declared in <root>.IndexArrayElementGetterTest' type=kotlin.Int origin=null
                    ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
                    ARG a: CONST Int type=kotlin.Int value=4
                  ARG other: CALL 'public final fun fib (a: kotlin.Int): kotlin.Int declared in <root>.IndexArrayElementGetterTest' type=kotlin.Int origin=null
                    ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
                    ARG a: CONST Int type=kotlin.Int value=5
                ARG other: CALL 'public final fun fib (a: kotlin.Int): kotlin.Int declared in <root>.IndexArrayElementGetterTest' type=kotlin.Int origin=null
                  ARG <this>: GET_VAR '<this>: <root>.IndexArrayElementGetterTest declared in <root>.IndexArrayElementGetterTest.testIndexArrayElementGetting' type=<root>.IndexArrayElementGetterTest origin=IMPLICIT_ARGUMENT
                  ARG a: CONST Int type=kotlin.Int value=5
  FUN name:box visibility:public modality:FINAL returnType:kotlin.String
    BLOCK_BODY
      VAR name:testClass type:<root>.IndexArrayElementGetterTest [val]
        CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.IndexArrayElementGetterTest' type=<root>.IndexArrayElementGetterTest origin=null
      CALL 'public final fun testIndexArrayElementGetting (): kotlin.Unit declared in <root>.IndexArrayElementGetterTest' type=kotlin.Unit origin=null
        ARG <this>: GET_VAR 'val testClass: <root>.IndexArrayElementGetterTest declared in <root>.box' type=<root>.IndexArrayElementGetterTest origin=null
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        CONST String type=kotlin.String value="OK"
