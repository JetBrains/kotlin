FILE fqName:<root> fileName:/augmentedAssignment1.kt
  PROPERTY name:p type:kotlin.Int visibility:public modality:FINAL flags:var
    FIELD PROPERTY_BACKING_FIELD name:p type:kotlin.Int visibility:public
      EXPRESSION_BODY
        CONST Int type=kotlin.Int value=0
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-p> visibility:public modality:FINAL <> () returnType:Int flags:
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='<get-p>(): Int'
          GET_FIELD 'p: Int' type=kotlin.Int origin=null
    FUN DEFAULT_PROPERTY_ACCESSOR name:<set-p> visibility:public modality:FINAL <> (<set-?>:kotlin.Int) returnType:Unit flags:
      VALUE_PARAMETER name:<set-?> index:0 type:kotlin.Int flags:
      BLOCK_BODY
        SET_FIELD 'p: Int' type=kotlin.Unit origin=null
          value: GET_VAR 'value-parameter <set-?>: Int' type=kotlin.Int origin=null
  FUN name:testVariable visibility:public modality:FINAL <> () returnType:Unit flags:
    BLOCK_BODY
      VAR name:x type:kotlin.Int flags:var
        CONST Int type=kotlin.Int value=0
      SET_VAR 'x: Int' type=kotlin.Unit origin=PLUSEQ
        CALL 'plus(Int): Int' type=kotlin.Int origin=PLUSEQ
          $this: GET_VAR 'x: Int' type=kotlin.Int origin=PLUSEQ
          other: CONST Int type=kotlin.Int value=1
      SET_VAR 'x: Int' type=kotlin.Unit origin=MINUSEQ
        CALL 'minus(Int): Int' type=kotlin.Int origin=MINUSEQ
          $this: GET_VAR 'x: Int' type=kotlin.Int origin=MINUSEQ
          other: CONST Int type=kotlin.Int value=2
      SET_VAR 'x: Int' type=kotlin.Unit origin=MULTEQ
        CALL 'times(Int): Int' type=kotlin.Int origin=MULTEQ
          $this: GET_VAR 'x: Int' type=kotlin.Int origin=MULTEQ
          other: CONST Int type=kotlin.Int value=3
      SET_VAR 'x: Int' type=kotlin.Unit origin=DIVEQ
        CALL 'div(Int): Int' type=kotlin.Int origin=DIVEQ
          $this: GET_VAR 'x: Int' type=kotlin.Int origin=DIVEQ
          other: CONST Int type=kotlin.Int value=4
      SET_VAR 'x: Int' type=kotlin.Unit origin=PERCEQ
        CALL 'rem(Int): Int' type=kotlin.Int origin=PERCEQ
          $this: GET_VAR 'x: Int' type=kotlin.Int origin=PERCEQ
          other: CONST Int type=kotlin.Int value=5
  FUN name:testProperty visibility:public modality:FINAL <> () returnType:Unit flags:
    BLOCK_BODY
      BLOCK type=kotlin.Unit origin=PLUSEQ
        CALL '<set-p>(Int): Unit' type=kotlin.Unit origin=PLUSEQ
          <set-?>: CALL 'plus(Int): Int' type=kotlin.Int origin=PLUSEQ
            $this: CALL '<get-p>(): Int' type=kotlin.Int origin=PLUSEQ
            other: CONST Int type=kotlin.Int value=1
      BLOCK type=kotlin.Unit origin=MINUSEQ
        CALL '<set-p>(Int): Unit' type=kotlin.Unit origin=MINUSEQ
          <set-?>: CALL 'minus(Int): Int' type=kotlin.Int origin=MINUSEQ
            $this: CALL '<get-p>(): Int' type=kotlin.Int origin=MINUSEQ
            other: CONST Int type=kotlin.Int value=2
      BLOCK type=kotlin.Unit origin=MULTEQ
        CALL '<set-p>(Int): Unit' type=kotlin.Unit origin=MULTEQ
          <set-?>: CALL 'times(Int): Int' type=kotlin.Int origin=MULTEQ
            $this: CALL '<get-p>(): Int' type=kotlin.Int origin=MULTEQ
            other: CONST Int type=kotlin.Int value=3
      BLOCK type=kotlin.Unit origin=DIVEQ
        CALL '<set-p>(Int): Unit' type=kotlin.Unit origin=DIVEQ
          <set-?>: CALL 'div(Int): Int' type=kotlin.Int origin=DIVEQ
            $this: CALL '<get-p>(): Int' type=kotlin.Int origin=DIVEQ
            other: CONST Int type=kotlin.Int value=4
      BLOCK type=kotlin.Unit origin=PERCEQ
        CALL '<set-p>(Int): Unit' type=kotlin.Unit origin=PERCEQ
          <set-?>: CALL 'rem(Int): Int' type=kotlin.Int origin=PERCEQ
            $this: CALL '<get-p>(): Int' type=kotlin.Int origin=PERCEQ
            other: CONST Int type=kotlin.Int value=5

