package test

public interface InheritedSameAdaptersWithSubstitution {

    public interface Sub : test.InheritedSameAdaptersWithSubstitution.Super1, test.InheritedSameAdaptersWithSubstitution.Super2Substituted {
        public abstract override /*2*/ /*fake_override*/ fun foo(/*0*/ p0: java.util.Comparator<kotlin.String!>!): kotlin.Unit
    }

    public interface Super1 {
        public abstract fun foo(/*0*/ p0: java.util.Comparator<kotlin.String!>!): kotlin.Unit
    }

    public interface Super2</*0*/ T : kotlin.Any!> {
        public abstract fun foo(/*0*/ p0: java.util.Comparator<T!>!): kotlin.Unit
    }

    public interface Super2Substituted : test.InheritedSameAdaptersWithSubstitution.Super2<kotlin.String!> {
        public abstract override /*1*/ /*fake_override*/ fun foo(/*0*/ p0: java.util.Comparator<kotlin.String!>!): kotlin.Unit
    }
}
