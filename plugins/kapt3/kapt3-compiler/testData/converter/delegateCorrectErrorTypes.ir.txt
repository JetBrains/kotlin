package test;

/**
 * public final class test/Bar : kotlin/Any {
 *
 *   // signature: <init>(Ltest/Delegate;)V
 *   public constructor(delegate: test/Delegate)
 *
 *   // field: unknown$delegate:Ltest/Delegate;
 *   // getter: getUnknown()Lerror/NonExistentClass;
 *   private final (* delegated *) val unknown: error/NonExistentClass
 *     private final (* non-default *) get
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
public final class Bar {
    @org.jetbrains.annotations.NotNull()
    private final test.Delegate unknown$delegate = null;

    public Bar(@org.jetbrains.annotations.NotNull()
    test.Delegate delegate) {
        super();
    }

    private final Unknown getUnknown() {
        return null;
    }
}

////////////////////

package test;

/**
 * public final class test/Delegate : kotlin/Any {
 *
 *   // signature: <init>()V
 *   public constructor()
 *
 *   // signature: getValue(Ljava/lang/Object;Lerror/NonExistentClass;)Ljava/lang/Object;
 *   public final operator fun getValue(thisRef: kotlin/Any, property: error/NonExistentClass): kotlin/Any
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
public final class Delegate {

    public Delegate() {
        super();
    }

    @org.jetbrains.annotations.NotNull()
    public final java.lang.Object getValue(@org.jetbrains.annotations.NotNull()
    java.lang.Object thisRef, @org.jetbrains.annotations.NotNull()
    KProperty<?> property) {
        return null;
    }
}
