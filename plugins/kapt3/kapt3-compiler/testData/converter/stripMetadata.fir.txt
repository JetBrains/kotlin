public abstract class BaseClass {

    public BaseClass(@org.jetbrains.annotations.NotNull() Context context, int num, boolean bool) {
        super();
    }

    @org.jetbrains.annotations.NotNull()
    public abstract Result doJob();
}


////////////////////

public abstract interface Context {
}


////////////////////

public final class Inheritor extends BaseClass {

    public Inheritor(@org.jetbrains.annotations.NotNull() Context context) {
        super(null, 0, false);
    }

    @org.jetbrains.annotations.NotNull()
    @java.lang.Override()
    public Result doJob() {
        return null;
    }
}


////////////////////

public enum Result {
    SUCCESS,
    ERROR;


    Result() {
    }

    @org.jetbrains.annotations.NotNull()
    public static kotlin.enums.EnumEntries<Result> getEntries() {
        return null;
    }
}
