KtFile: 'TypeAliasedObjectAsQualifier.kt'
  NO_CANDIDATES

KtPackageDirective(0,12): 'package test'
  NO_CANDIDATES

KtNameReferenceExpression(8,12): 'test'
  NO_CANDIDATES

KtImportList(12,12): ''
  NO_CANDIDATES

KtObjectDeclaration(14,83): 'object MyObject {'
  NO_CANDIDATES

KtClassBody(30,83): '{'
  NO_CANDIDATES

KtNamedFunction(36,53): 'fun function() {}'
  NO_CANDIDATES

KtParameterList(48,50): '()'
  NO_CANDIDATES

KtBlockExpression(51,53): '{}'
  NO_CANDIDATES

KtProperty(59,81): 'val property: Int = 10'
  NO_CANDIDATES

KtTypeReference(73,76): 'Int'
  NO_CANDIDATES

KtUserType(73,76): 'Int'
  NO_CANDIDATES

KtNameReferenceExpression(73,76): 'Int'
  NO_CANDIDATES

KtConstantExpression(79,81): '10'
  NO_CANDIDATES

KtTypeAlias(85,113): 'typealias MyAlias = MyObject'
  NO_CANDIDATES

KtTypeReference(105,113): 'MyObject'
  NO_CANDIDATES

KtUserType(105,113): 'MyObject'
  NO_CANDIDATES

KtNameReferenceExpression(105,113): 'MyObject'
  NO_CANDIDATES

KtNamedFunction(115,219): 'fun usage() {'
  NO_CANDIDATES

KtParameterList(124,126): '()'
  NO_CANDIDATES

KtBlockExpression(127,219): '{'
  NO_CANDIDATES

KtDotQualifiedExpression(133,151): 'MyAlias.function()'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = MyAlias
          isSafeNavigation = false
          type = test.MyObject
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = test/MyObject.function(<dispatch receiver>: test.MyObject): kotlin.Unit
          valueParameters = []
          contextParameters = []
          callableId = test/MyObject.function
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(133,140): 'MyAlias'
  NO_CANDIDATES

KtCallExpression(141,151): 'function()'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = MyAlias
          isSafeNavigation = false
          type = test.MyObject
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = test/MyObject.function(<dispatch receiver>: test.MyObject): kotlin.Unit
          valueParameters = []
          contextParameters = []
          callableId = test/MyObject.function
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(141,149): 'function'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = MyAlias
          isSafeNavigation = false
          type = test.MyObject
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = test/MyObject.function(<dispatch receiver>: test.MyObject): kotlin.Unit
          valueParameters = []
          contextParameters = []
          callableId = test/MyObject.function
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(149,151): '()'
  NO_CANDIDATES

KtDotQualifiedExpression(156,172): 'MyAlias.property'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = MyAlias
          isSafeNavigation = false
          type = test.MyObject
        extensionReceiver = null
        signature = KaVariableSignature:
          name = property
          receiverType = null
          returnType = kotlin.Int
          symbol = val property: kotlin.Int
          contextParameters = []
          callableId = test/MyObject.property
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(156,163): 'MyAlias'
  NO_CANDIDATES

KtNameReferenceExpression(164,172): 'property'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = MyAlias
          isSafeNavigation = false
          type = test.MyObject
        extensionReceiver = null
        signature = KaVariableSignature:
          name = property
          receiverType = null
          returnType = kotlin.Int
          symbol = val property: kotlin.Int
          contextParameters = []
          callableId = test/MyObject.property
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtCallableReferenceExpression(178,195): 'MyAlias::function'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = MyAlias
          isSafeNavigation = false
          type = test.MyObject
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = test/MyObject.function(<dispatch receiver>: test.MyObject): kotlin.Unit
          valueParameters = []
          contextParameters = []
          callableId = test/MyObject.function
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(178,185): 'MyAlias'
  NO_CANDIDATES

KtNameReferenceExpression(187,195): 'function'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = MyAlias
          isSafeNavigation = false
          type = test.MyObject
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = test/MyObject.function(<dispatch receiver>: test.MyObject): kotlin.Unit
          valueParameters = []
          contextParameters = []
          callableId = test/MyObject.function
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtCallableReferenceExpression(200,217): 'MyAlias::property'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = MyAlias
          isSafeNavigation = false
          type = test.MyObject
        extensionReceiver = null
        signature = KaVariableSignature:
          name = property
          receiverType = null
          returnType = kotlin.Int
          symbol = val property: kotlin.Int
          contextParameters = []
          callableId = test/MyObject.property
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(200,207): 'MyAlias'
  NO_CANDIDATES

KtNameReferenceExpression(209,217): 'property'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = MyAlias
          isSafeNavigation = false
          type = test.MyObject
        extensionReceiver = null
        signature = KaVariableSignature:
          name = property
          receiverType = null
          returnType = kotlin.Int
          symbol = val property: kotlin.Int
          contextParameters = []
          callableId = test/MyObject.property
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true