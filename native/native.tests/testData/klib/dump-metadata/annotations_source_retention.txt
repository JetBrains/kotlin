    @Retention(value = AnnotationRetention.SOURCE) annotation class AnnoBackingField constructor() : Annotation
    @Retention(value = AnnotationRetention.SOURCE) annotation class AnnoClass constructor() : Annotation
    @Retention(value = AnnotationRetention.SOURCE) annotation class AnnoConstructor constructor() : Annotation
    @Retention(value = AnnotationRetention.SOURCE) annotation class AnnoConstructorParameter constructor() : Annotation
    @Retention(value = AnnotationRetention.SOURCE) annotation class AnnoDelegatedField constructor() : Annotation
    @Retention(value = AnnotationRetention.SOURCE) annotation class AnnoFunction constructor() : Annotation
    @Retention(value = AnnotationRetention.SOURCE) annotation class AnnoFunctionExtensionReceiver constructor() : Annotation
    @Retention(value = AnnotationRetention.SOURCE) annotation class AnnoFunctionParam constructor() : Annotation
    @Retention(value = AnnotationRetention.SOURCE) annotation class AnnoGetter constructor() : Annotation
    @Retention(value = AnnotationRetention.SOURCE) annotation class AnnoProperty constructor() : Annotation
    @Retention(value = AnnotationRetention.SOURCE) annotation class AnnoPropertyExtensionReceiver constructor() : Annotation
    @Retention(value = AnnotationRetention.SOURCE) annotation class AnnoSetParam constructor() : Annotation
    @Retention(value = AnnotationRetention.SOURCE) annotation class AnnoSetParam2 constructor() : Annotation
    @Retention(value = AnnotationRetention.SOURCE) annotation class AnnoSetter constructor() : Annotation
    @Retention(value = AnnotationRetention.SOURCE) annotation class AnnoSetter2 constructor() : Annotation
    class Foo constructor(i: Int) {
        val immutableProp: Int
        var mutableProp: Int
        var prop: Int
    }
    val Foo.extProp: Int
    fun Foo.extfun(x: Int)
