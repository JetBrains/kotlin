FILE: dslMarkerOnContextType.kt
    context(ctx: R|T|)
    public final fun <T> implicit(): R|T| {
        ^implicit R|<local>/ctx|
    }
    @R|kotlin/DslMarker|() public final annotation class ExampleMarker : R|kotlin/Annotation| {
        public constructor(): R|ExampleMarker| {
            super<R|kotlin/Any|>()
        }

    }
    @R|ExampleMarker|() public abstract interface ExampleScope<A> : R|kotlin/Any| {
        public abstract fun exemplify(): R|A|

    }
    public final fun <A, T> withExampleReceiver(value: R|A|, block: R|ExampleScope<A>.() -> T|): R|T| {
        ^withExampleReceiver Null(null)!!
    }
    public final fun <A, T> withExampleContext(value: R|A|, block: R|@ContextFunctionTypeParams (ExampleScope<A>) -> T|): R|T| {
        ^withExampleContext Null(null)!!
    }
    context(a: R|ExampleScope<A>|)
    public final fun <A> similarExampleTo(other: R|A|): R|A| {
        ^similarExampleTo Null(null)!!
    }
    public final fun test1(): R|kotlin/Unit| {
        R|/withExampleReceiver|<R|kotlin/String|, R|kotlin/String|>(String(string), <L> = withExampleReceiver@fun R|ExampleScope<kotlin/String>|.<anonymous>(): R|kotlin/String| <inline=NoInline>  {
            ^ R|/withExampleContext|<R|kotlin/Boolean|, R|kotlin/String|>(Boolean(true), <L> = context(<unused var>: R|ExampleScope<kotlin/Boolean>|) withExampleContext@fun <anonymous>(): R|kotlin/String| <inline=NoInline>  {
                ^ this@R|special/anonymous|.R|SubstitutionOverride</ExampleScope.exemplify: R|kotlin/String|>|()
            }
            )
        }
        )
    }
    public final fun test2(): R|kotlin/Unit| {
        R|/withExampleReceiver|<R|kotlin/String|, R|kotlin/String|>(String(string), <L> = withExampleReceiver@fun R|ExampleScope<kotlin/String>|.<anonymous>(): R|kotlin/String| <inline=NoInline>  {
            ^ R|/withExampleContext|<R|kotlin/Boolean|, R|kotlin/String|>(Boolean(true), <L> = context(<unused var>: R|ExampleScope<kotlin/Boolean>|) withExampleContext@fun <anonymous>(): R|kotlin/String| <inline=NoInline>  {
                ^ this@R|special/anonymous|.R|SubstitutionOverride</ExampleScope.exemplify: R|kotlin/String|>|()
            }
            )
        }
        )
    }
    public final fun test3(): R|kotlin/Unit| {
        R|/withExampleContext|<R|kotlin/Int|, R|kotlin/Int|>(Int(3), <L> = context(<unused var>: R|ExampleScope<kotlin/Int>|) withExampleContext@fun <anonymous>(): R|kotlin/Int| <inline=NoInline>  {
            ^ R|/withExampleReceiver|<R|kotlin/String|, R|kotlin/Int|>(String(string), <L> = withExampleReceiver@fun R|ExampleScope<kotlin/String>|.<anonymous>(): R|kotlin/Int| <inline=NoInline>  {
                ^ R|/implicit<Inapplicable(RESOLVED_WITH_ERROR): /implicit>#|<R|ExampleScope<kotlin/Int>|>().R|SubstitutionOverride</ExampleScope.exemplify: R|kotlin/Int|>|()
            }
            )
        }
        )
    }
    public final fun test4(): R|kotlin/Unit| {
        R|/withExampleContext|<R|kotlin/Int|, R|kotlin/String|>(Int(3), <L> = context(<unused var>: R|ExampleScope<kotlin/Int>|) withExampleContext@fun <anonymous>(): R|kotlin/String| <inline=NoInline>  {
            ^ R|/withExampleReceiver|<R|kotlin/String|, R|kotlin/String|>(String(string), <L> = withExampleReceiver@fun R|ExampleScope<kotlin/String>|.<anonymous>(): R|kotlin/String| <inline=NoInline>  {
                R|/similarExampleTo|<R|kotlin/String|>(String(string))
                ^ R|/similarExampleTo<Inapplicable(INAPPLICABLE): /similarExampleTo>#|<R|kotlin/String|>(Int(1))
            }
            )
        }
        )
    }
    public final fun test5(): R|kotlin/Unit| {
        R|/withExampleReceiver|<R|kotlin/String|, R|kotlin/Boolean|>(String(string), <L> = withExampleReceiver@fun R|ExampleScope<kotlin/String>|.<anonymous>(): R|kotlin/Boolean| <inline=NoInline>  {
            ^ R|/withExampleContext|<R|kotlin/Boolean|, R|kotlin/Boolean|>(Boolean(true), <L> = context(<unused var>: R|ExampleScope<kotlin/Boolean>|) withExampleContext@fun <anonymous>(): R|kotlin/Boolean| <inline=NoInline>  {
                R|/similarExampleTo|<R|kotlin/Boolean|>(Boolean(true))
                ^ R|/similarExampleTo<Inapplicable(INAPPLICABLE): /similarExampleTo>#|<R|kotlin/Boolean|>(String(string))
            }
            )
        }
        )
    }
    public final fun test6(): R|kotlin/Unit| {
        R|/withExampleContext|<R|kotlin/String|, R|kotlin/Boolean|>(String(b), <L> = context(<unused var>: R|ExampleScope<kotlin/String>|) withExampleContext@fun <anonymous>(): R|kotlin/Boolean| <inline=NoInline>  {
            ^ R|/withExampleContext|<R|kotlin/Boolean|, R|kotlin/Boolean|>(Boolean(true), <L> = context(<unused var>: R|ExampleScope<kotlin/Boolean>|) withExampleContext@fun <anonymous>(): R|kotlin/Boolean| <inline=NoInline>  {
                R|/similarExampleTo<Inapplicable(INAPPLICABLE): /similarExampleTo>#|<R|kotlin/Boolean|>(String(a))
                ^ R|/similarExampleTo|<R|kotlin/Boolean|>(Boolean(true))
            }
            )
        }
        )
    }
