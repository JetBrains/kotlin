FILE fqName:<root> fileName:/smartCastAside2.kt
  CLASS CLASS name:Bar modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Bar<T of <root>.Bar>
    TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any] reified:false
    CONSTRUCTOR visibility:public <> () returnType:<root>.Bar<T of <root>.Bar> [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Bar modality:ABSTRACT visibility:public superTypes:[kotlin.Any]'
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN name:bar visibility:public modality:ABSTRACT <> ($this:<root>.Bar<T of <root>.Bar>) returnType:kotlin.Unit
      $this: VALUE_PARAMETER name:<this> type:<root>.Bar<T of <root>.Bar>
  CLASS INTERFACE name:Foo modality:ABSTRACT visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Foo<T of <root>.Foo>
    TYPE_PARAMETER name:T index:0 variance:out superTypes:[kotlin.Any?] reified:false
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN name:foo visibility:public modality:ABSTRACT <> ($this:<root>.Foo<T of <root>.Foo>) returnType:kotlin.Unit
      $this: VALUE_PARAMETER name:<this> type:<root>.Foo<T of <root>.Foo>
  FUN name:extBar visibility:public modality:FINAL <T> ($receiver:<root>.Bar<T of <root>.extBar>) returnType:kotlin.Unit
    TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any] reified:false
    $receiver: VALUE_PARAMETER name:<this> type:<root>.Bar<T of <root>.extBar>
    BLOCK_BODY
  FUN name:extFoo visibility:public modality:FINAL <T> ($receiver:<root>.Foo<T of <root>.extFoo>) returnType:kotlin.Unit
    TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
    $receiver: VALUE_PARAMETER name:<this> type:<root>.Foo<T of <root>.extFoo>
    BLOCK_BODY
  FUN name:materialize visibility:public modality:FINAL <K> () returnType:K of <root>.materialize
    TYPE_PARAMETER name:K index:0 variance: superTypes:[kotlin.Any?] reified:false
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun materialize <K> (): K of <root>.materialize declared in <root>'
        CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=kotlin.Nothing origin=EXCLEXCL
          <T0>: kotlin.Nothing
          arg0: CONST Null type=kotlin.Nothing? value=null
  FUN name:test_1 visibility:public modality:FINAL <> (x:kotlin.Any) returnType:kotlin.Unit
    VALUE_PARAMETER name:x index:0 type:kotlin.Any
    BLOCK_BODY
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        TYPE_OP type=<root>.Bar<kotlin.Any> origin=CAST typeOperand=<root>.Bar<kotlin.Any>
          GET_VAR 'x: kotlin.Any declared in <root>.test_1' type=kotlin.Any origin=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        TYPE_OP type=<root>.Foo<kotlin.Any> origin=CAST typeOperand=<root>.Foo<kotlin.Any>
          TYPE_OP type=<root>.Bar<kotlin.Any> origin=IMPLICIT_CAST typeOperand=<root>.Bar<kotlin.Any>
            GET_VAR 'x: kotlin.Any declared in <root>.test_1' type=kotlin.Any origin=null
      CALL 'public abstract fun foo (): kotlin.Unit declared in <root>.Foo' type=kotlin.Unit origin=null
        $this: TYPE_OP type=<root>.Foo<kotlin.Any> origin=IMPLICIT_CAST typeOperand=<root>.Foo<kotlin.Any>
          GET_VAR 'x: kotlin.Any declared in <root>.test_1' type=kotlin.Any origin=null
      CALL 'public abstract fun bar (): kotlin.Unit declared in <root>.Bar' type=kotlin.Unit origin=null
        $this: TYPE_OP type=<root>.Bar<kotlin.Any> origin=IMPLICIT_CAST typeOperand=<root>.Bar<kotlin.Any>
          GET_VAR 'x: kotlin.Any declared in <root>.test_1' type=kotlin.Any origin=null
      CALL 'public final fun extFoo <T> (): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
        <T>: kotlin.Any
        $receiver: TYPE_OP type=<root>.Foo<kotlin.Any> origin=IMPLICIT_CAST typeOperand=<root>.Foo<kotlin.Any>
          GET_VAR 'x: kotlin.Any declared in <root>.test_1' type=kotlin.Any origin=null
      CALL 'public final fun extBar <T> (): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
        <T>: kotlin.Any
        $receiver: TYPE_OP type=<root>.Bar<kotlin.Any> origin=IMPLICIT_CAST typeOperand=<root>.Bar<kotlin.Any>
          GET_VAR 'x: kotlin.Any declared in <root>.test_1' type=kotlin.Any origin=null
  FUN name:test_2 visibility:public modality:FINAL <> (x:kotlin.Any) returnType:kotlin.Unit
    VALUE_PARAMETER name:x index:0 type:kotlin.Any
    BLOCK_BODY
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        TYPE_OP type=<root>.Bar<kotlin.Any>? origin=CAST typeOperand=<root>.Bar<kotlin.Any>?
          GET_VAR 'x: kotlin.Any declared in <root>.test_2' type=kotlin.Any origin=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        TYPE_OP type=<root>.Foo<kotlin.Any>? origin=CAST typeOperand=<root>.Foo<kotlin.Any>?
          TYPE_OP type=<root>.Bar<kotlin.Any> origin=IMPLICIT_CAST typeOperand=<root>.Bar<kotlin.Any>
            GET_VAR 'x: kotlin.Any declared in <root>.test_2' type=kotlin.Any origin=null
      CALL 'public abstract fun foo (): kotlin.Unit declared in <root>.Foo' type=kotlin.Unit origin=null
        $this: TYPE_OP type=<root>.Foo<kotlin.Any> origin=IMPLICIT_CAST typeOperand=<root>.Foo<kotlin.Any>
          CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=kotlin.Any origin=EXCLEXCL
            <T0>: kotlin.Any
            arg0: GET_VAR 'x: kotlin.Any declared in <root>.test_2' type=kotlin.Any origin=null
      CALL 'public abstract fun bar (): kotlin.Unit declared in <root>.Bar' type=kotlin.Unit origin=null
        $this: TYPE_OP type=<root>.Bar<kotlin.Any> origin=IMPLICIT_CAST typeOperand=<root>.Bar<kotlin.Any>
          CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=kotlin.Any origin=EXCLEXCL
            <T0>: kotlin.Any
            arg0: GET_VAR 'x: kotlin.Any declared in <root>.test_2' type=kotlin.Any origin=null
      CALL 'public final fun extFoo <T> (): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
        <T>: kotlin.Any
        $receiver: TYPE_OP type=<root>.Foo<kotlin.Any> origin=IMPLICIT_CAST typeOperand=<root>.Foo<kotlin.Any>
          CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=kotlin.Any origin=EXCLEXCL
            <T0>: kotlin.Any
            arg0: GET_VAR 'x: kotlin.Any declared in <root>.test_2' type=kotlin.Any origin=null
      CALL 'public final fun extBar <T> (): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
        <T>: kotlin.Any
        $receiver: TYPE_OP type=<root>.Bar<kotlin.Any> origin=IMPLICIT_CAST typeOperand=<root>.Bar<kotlin.Any>
          CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=kotlin.Any origin=EXCLEXCL
            <T0>: kotlin.Any
            arg0: GET_VAR 'x: kotlin.Any declared in <root>.test_2' type=kotlin.Any origin=null
  FUN name:test_3 visibility:public modality:FINAL <> (x:kotlin.Any) returnType:kotlin.Unit
    VALUE_PARAMETER name:x index:0 type:kotlin.Any
    BLOCK_BODY
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        TYPE_OP type=<root>.Bar<kotlin.Any>? origin=CAST typeOperand=<root>.Bar<kotlin.Any>?
          GET_VAR 'x: kotlin.Any declared in <root>.test_3' type=kotlin.Any origin=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        TYPE_OP type=<root>.Foo<kotlin.Any>? origin=CAST typeOperand=<root>.Foo<kotlin.Any>?
          TYPE_OP type=<root>.Bar<kotlin.Any> origin=IMPLICIT_CAST typeOperand=<root>.Bar<kotlin.Any>
            GET_VAR 'x: kotlin.Any declared in <root>.test_3' type=kotlin.Any origin=null
      CALL 'public abstract fun foo (): kotlin.Unit declared in <root>.Foo' type=kotlin.Unit origin=null
        $this: TYPE_OP type=<root>.Foo<kotlin.Any> origin=IMPLICIT_CAST typeOperand=<root>.Foo<kotlin.Any>
          BLOCK type=kotlin.Any origin=ELVIS
            VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:kotlin.Any [val]
              GET_VAR 'x: kotlin.Any declared in <root>.test_3' type=kotlin.Any origin=null
            WHEN type=kotlin.Any origin=null
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                  arg0: GET_VAR 'val tmp_0: kotlin.Any declared in <root>.test_3' type=kotlin.Any origin=null
                  arg1: CONST Null type=kotlin.Nothing? value=null
                then: CALL 'public final fun materialize <K> (): K of <root>.materialize declared in <root>' type=kotlin.Any origin=null
                  <K>: kotlin.Any
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: GET_VAR 'val tmp_0: kotlin.Any declared in <root>.test_3' type=kotlin.Any origin=null
      CALL 'public abstract fun bar (): kotlin.Unit declared in <root>.Bar' type=kotlin.Unit origin=null
        $this: TYPE_OP type=<root>.Bar<kotlin.Any> origin=IMPLICIT_CAST typeOperand=<root>.Bar<kotlin.Any>
          BLOCK type=kotlin.Any origin=ELVIS
            VAR IR_TEMPORARY_VARIABLE name:tmp_1 type:kotlin.Any [val]
              GET_VAR 'x: kotlin.Any declared in <root>.test_3' type=kotlin.Any origin=null
            WHEN type=kotlin.Any origin=null
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                  arg0: GET_VAR 'val tmp_1: kotlin.Any declared in <root>.test_3' type=kotlin.Any origin=null
                  arg1: CONST Null type=kotlin.Nothing? value=null
                then: CALL 'public final fun materialize <K> (): K of <root>.materialize declared in <root>' type=kotlin.Any origin=null
                  <K>: kotlin.Any
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: GET_VAR 'val tmp_1: kotlin.Any declared in <root>.test_3' type=kotlin.Any origin=null
      CALL 'public final fun extFoo <T> (): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
        <T>: kotlin.Any
        $receiver: TYPE_OP type=<root>.Foo<kotlin.Any> origin=IMPLICIT_CAST typeOperand=<root>.Foo<kotlin.Any>
          BLOCK type=kotlin.Any origin=ELVIS
            VAR IR_TEMPORARY_VARIABLE name:tmp_2 type:kotlin.Any [val]
              GET_VAR 'x: kotlin.Any declared in <root>.test_3' type=kotlin.Any origin=null
            WHEN type=kotlin.Any origin=null
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                  arg0: GET_VAR 'val tmp_2: kotlin.Any declared in <root>.test_3' type=kotlin.Any origin=null
                  arg1: CONST Null type=kotlin.Nothing? value=null
                then: CALL 'public final fun materialize <K> (): K of <root>.materialize declared in <root>' type=kotlin.Any origin=null
                  <K>: kotlin.Any
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: GET_VAR 'val tmp_2: kotlin.Any declared in <root>.test_3' type=kotlin.Any origin=null
      CALL 'public final fun extBar <T> (): kotlin.Unit declared in <root>' type=kotlin.Unit origin=null
        <T>: kotlin.Any
        $receiver: TYPE_OP type=<root>.Bar<kotlin.Any> origin=IMPLICIT_CAST typeOperand=<root>.Bar<kotlin.Any>
          BLOCK type=kotlin.Any origin=ELVIS
            VAR IR_TEMPORARY_VARIABLE name:tmp_3 type:kotlin.Any [val]
              GET_VAR 'x: kotlin.Any declared in <root>.test_3' type=kotlin.Any origin=null
            WHEN type=kotlin.Any origin=null
              BRANCH
                if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                  arg0: GET_VAR 'val tmp_3: kotlin.Any declared in <root>.test_3' type=kotlin.Any origin=null
                  arg1: CONST Null type=kotlin.Nothing? value=null
                then: CALL 'public final fun materialize <K> (): K of <root>.materialize declared in <root>' type=kotlin.Any origin=null
                  <K>: kotlin.Any
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: GET_VAR 'val tmp_3: kotlin.Any declared in <root>.test_3' type=kotlin.Any origin=null
