open class X {
    override fun equals(other: Any?) = super.equals(other)
    override fun hashCode() = super.hashCode()
}

class A(val n: Int, val s: String) : X() {
    val f: Float = 1.0f

    fun foo() {

    }

    <caret>override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false
        if (!super.equals(other)) return false

        other as A

        if (n != other.n) return false
        if (s != other.s) return false
        if (f != other.f) return false

        return true
    }

    override fun hashCode(): Int {
        var result = super.hashCode()
        result = 31 * result + n
        result = 31 * result + s.hashCode()
        result = 31 * result + f.hashCode()
        return result
    }
}