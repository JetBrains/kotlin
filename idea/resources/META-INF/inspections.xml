<idea-plugin>
  <extensions defaultExtensionNs="com.intellij">
    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ImportMemberIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ImportAllMembersIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.SpecifyTypeExplicitlyIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.SpecifyTypeExplicitlyInDestructuringAssignmentIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.RemoveExplicitTypeIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertToBlockBodyIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.conventionNameCalls.ReplaceContainsIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.conventionNameCalls.ReplaceInvokeIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.conventionNameCalls.ReplaceCallWithUnaryOperatorIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.branchedTransformations.intentions.FoldIfToReturnAsymmetricallyIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.branchedTransformations.intentions.UnfoldAssignmentToIfIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.branchedTransformations.intentions.UnfoldPropertyToIfIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.branchedTransformations.intentions.UnfoldAssignmentToWhenIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.branchedTransformations.intentions.UnfoldPropertyToWhenIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.branchedTransformations.intentions.UnfoldReturnToIfIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.branchedTransformations.intentions.UnfoldReturnToWhenIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.branchedTransformations.intentions.DoubleBangToIfThenIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.branchedTransformations.intentions.ElvisToIfThenIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.branchedTransformations.intentions.SafeAccessToIfThenIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.branchedTransformations.intentions.IfToWhenIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.branchedTransformations.intentions.WhenToIfIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.branchedTransformations.intentions.FlattenWhenIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.branchedTransformations.intentions.EliminateWhenSubjectIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.RemoveUnnecessaryParenthesesIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.RemoveExplicitTypeArgumentsIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.RemoveExplicitSuperQualifierIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.InsertCurlyBracesToTemplateIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.MoveLambdaInsideParenthesesIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.InsertExplicitTypeArgumentsIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.declarations.SplitPropertyDeclarationIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.declarations.ConvertMemberToExtensionIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ReconstructTypeInCastOrIsIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.InfixCallToOrdinaryIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ToInfixCallIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ReplaceExplicitFunctionLiteralParamWithItIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ReplaceItWithExplicitFunctionLiteralParamIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.RemoveBracesIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.AddBracesIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertBinaryExpressionWithDemorgansLawIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.SimplifyBooleanWithConstantsIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.AddForLoopIndicesIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.RemoveForLoopIndicesIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.loopToCallChain.UseWithIndexIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.SwapBinaryExpressionIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.SwapStringEqualsIgnoreCaseIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.SplitIfIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ReplaceWithOrdinaryAssignmentIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.SpecifyExplicitLambdaSignatureIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.RemoveExplicitLambdaParameterTypesIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertForEachToForLoopIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertToForEachFunctionCallIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertToStringTemplateIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertToRawStringTemplateIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.OperatorToFunctionIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertToConcatenatedStringIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertFunctionToPropertyIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertPropertyToFunctionIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertReceiverToParameterIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertParameterToReceiverIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertPropertyInitializerToGetterIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.InvertIfConditionIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.refactoring.move.changePackage.ChangePackageIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.refactoring.move.moveDeclarations.ExtractDeclarationFromCurrentFileIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ChangeVisibilityModifierIntention$Public</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ChangeVisibilityModifierIntention$Private</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ChangeVisibilityModifierIntention$Protected</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ChangeVisibilityModifierIntention$Internal</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.AddNameToArgumentIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.AddNamesToFollowingArgumentsIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ReplaceUnderscoreWithParameterNameIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.AddJvmOverloadsIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.AddJvmStaticIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.RemoveArgumentNameIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.IterateExpressionIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.UsePropertyAccessSyntaxIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.quickfix.AddConstModifierIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.IntroduceBackingPropertyIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.JoinDeclarationAndAssignmentIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.testIntegration.KotlinCreateTestIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ObjectLiteralToLambdaIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.DestructureIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.AnonymousFunctionToLambdaIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ImplementAbstractMemberIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ImplementAbstractMemberAsConstructorParameterIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.AddValVarToConstructorParameterAction$Intention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.MoveMemberToCompanionObjectIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.MoveMemberOutOfCompanionObjectIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.CreateKotlinSubClassIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ToRawStringLiteralIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.TrailingCommaIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ToOrdinaryStringLiteralIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.IntroduceVariableIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.IntroduceImportAliasIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.RemoveSingleExpressionStringTemplateIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ReplaceUntilWithRangeToIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.RemoveEmptyParenthesesFromLambdaCallIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertCamelCaseTestFunctionToSpacedIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertSnakeCaseTestFunctionToSpacedIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.copyConcatenatedStringToClipboard.CopyConcatenatedStringToClipboardIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.RemoveConstructorKeywordIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertPrimaryConstructorToSecondaryIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertSecondaryConstructorToPrimaryIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ReplaceSizeCheckWithIsNotEmptyIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ReplaceSizeZeroCheckWithIsEmptyIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.RemoveEmptyClassBodyIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertEnumToSealedClassIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertSealedClassToEnumIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.RemoveRedundantCallsOfConversionMethodsIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.RemoveEmptyPrimaryConstructorIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.RemoveEmptySecondaryConstructorBodyIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertTryFinallyToUseCallIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.AddNamesToCallArgumentsIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertFunctionTypeParameterToReceiverIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertFunctionTypeReceiverToParameterIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertRangeCheckToTwoComparisonsIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.RenameFileToMatchClassIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertObjectLiteralToClassIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertVariableAssignmentToExpressionIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.MergeIfsIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.MergeElseIfIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.AddMissingDestructuringIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertToApplyIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertToAlsoIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertToWithIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertToRunIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.MovePropertyToClassBodyIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.MovePropertyToConstructorIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.AddOpenModifierIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ValToObjectIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ChopParameterListIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ChopArgumentListIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.NullableBooleanEqualityCheckToElvisIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ReplaceAddWithPlusAssignIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.AddPropertyAccessorsIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.AddPropertyGetterIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.AddPropertySetterIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.MoveMemberToTopLevelIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertUnsafeCastCallToUnsafeCastIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertUnsafeCastToUnsafeCastCallIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.RemoveLabeledReturnInLambdaIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.AddLabeledReturnInLambdaIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.AddAnnotationUseSiteTargetIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.JoinParameterListIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.JoinArgumentListIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertLineCommentToBlockCommentIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertBlockCommentToLineCommentIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.IndentRawStringIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertVarargParameterToArrayIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertArrayParameterToVarargIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.LambdaToAnonymousFunctionIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.AddWhenRemainingBranchesIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertPropertyGetterToInitializerIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.SamConversionToAnonymousObjectIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.AddThrowsAnnotationIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertNullablePropertyToLateinitIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertLateinitPropertyToNullableIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.AddUnderscoresToNumericLiteralIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ReplaceMapGetOrDefaultIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.RemoveUnderscoresFromNumericLiteralIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.RenameClassToContainingFileNameIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertCollectionConstructorToFunction</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertOrdinaryPropertyToLazyIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertLazyPropertyToOrdinaryIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertLambdaToMultiLineIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ConvertLambdaToSingleLineIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.AddMissingClassKeywordIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.ExpandBooleanExpressionIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <intentionAction>
      <className>org.jetbrains.kotlin.idea.intentions.EvaluateCompileTimeExpressionIntention</className>
      <category>Kotlin</category>
    </intentionAction>

    <lang.inspectionSuppressor language="kotlin" implementationClass="org.jetbrains.kotlin.idea.inspections.KotlinInspectionSuppressor"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.ObjectLiteralToLambdaInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.object.literal.to.lambda.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.SimplifyAssertNotNullInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.simplify.assert.not.null.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReformatInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="false"
                     level="WEAK WARNING"
                     language="kotlin"
                     runForWholeFile="true"
                     key="inspection.reformat.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReplaceCollectionCountWithSizeInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="false"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.collection.count.with.size.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.DeprecatedCallableAddReplaceWithInspection"
                     groupPath="Kotlin"
                     groupName="Other problems"
                     enabledByDefault="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.deprecated.callable.add.replace.with.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.ConvertToStringTemplateInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.convert.to.string.template.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.conventionNameCalls.ReplaceGetOrSetInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.replace.get.or.set.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReplaceManualRangeWithIndicesCallsInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.replace.manual.range.with.indices.calls.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.branchedTransformations.IfThenToElvisInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.if.then.to.elvis.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.branchedTransformations.IfThenToSafeAccessInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.if.then.to.safe.access.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.FoldInitializerAndIfToElvisInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.fold.initializer.and.if.to.elvis.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.RemoveExplicitTypeArgumentsInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.remove.explicit.type.arguments.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.RemoveExplicitSuperQualifierInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.remove.explicit.super.qualifier.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.SimplifyNegatedBinaryExpressionInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.simplify.negated.binary.expression.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReplaceWithOperatorAssignmentInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.with.operator.assignment.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.branchedTransformations.IntroduceWhenSubjectInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.introduce.when.subject.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RemoveCurlyBracesFromTemplateInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.remove.curly.braces.from.template.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.SimplifyBooleanWithConstantsInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.simplify.boolean.with.constants.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.UsePropertyAccessSyntaxInspection"
                     shortName="UsePropertyAccessSyntax"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     cleanupTool="true"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.use.property.access.syntax.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.UnusedSymbolInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     runForWholeFile="true"
                     language="kotlin"
                     suppressId="unused"
                     key="inspection.unused.symbol.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.UnusedReceiverParameterInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     suppressId="unused"
                     key="inspection.unused.receiver.parameter.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.KotlinUnusedImportInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     runForWholeFile="true"
                     language="kotlin"
                     suppressId="UnusedImport"
                     key="inspection.kotlin.unused.import.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantSamConstructorInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.redundant.sam.constructor.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.UnsafeCastFromDynamicInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.unsafe.cast.from.dynamic.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.OverridingDeprecatedMemberInspection"
                     shortName="OverridingDeprecatedMember"
                     groupPath="Kotlin"
                     groupName="Other problems"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.overriding.deprecated.member.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.kdoc.KDocUnresolvedReferenceInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.k.doc.unresolved.reference.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.kdoc.KDocMissingDocumentationInspection"
                     groupPath="Kotlin"
                     groupName="Other problems"
                     enabledByDefault="false"
                     level="WARNING"
                     language="kotlin"
                     runForWholeFile="true"
                     key="inspection.k.doc.missing.documentation.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.refactoring.move.changePackage.PackageDirectoryMismatchInspection"
                     groupPath="Kotlin"
                     groupName="Java interop issues"
                     enabledByDefault="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.package.directory.mismatch.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.KotlinCleanupInspection"
                     shortName="KotlinDeprecation"
                     groupPath="Kotlin"
                     groupName="Migration"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.kotlin.deprecation.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.RemoveForLoopIndicesInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.remove.for.loop.indices.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.loopToCallChain.LoopToCallChainInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     key="inspection.loop.to.call.chain.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.loopToCallChain.UseWithIndexInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFO"
                     key="inspection.use.with.index.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ConflictingExtensionPropertyInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.conflicting.extension.property.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.EqualsOrHashCodeInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.equals.or.hash.code.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantVisibilityModifierInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.redundant.visibility.modifier.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.DestructureInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="false"
                     cleanupTool="false"
                     level="INFO"
                     language="kotlin"
                     key="inspection.destructure.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.CanBeValInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.can.be.val.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ArrayInDataClassInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.array.in.data.class.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ProtectedInFinalInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.protected.in.final.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.AddVarianceModifierInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.add.variance.modifier.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.substring.ReplaceSubstringWithDropLastInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.replace.substring.with.drop.last.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.substring.ReplaceSubstringWithTakeInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.replace.substring.with.take.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.substring.ReplaceSubstringWithIndexingOperationInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.replace.substring.with.indexing.operation.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.substring.ReplaceSubstringWithSubstringAfterInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.replace.substring.with.substring.after.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.substring.ReplaceSubstringWithSubstringBeforeInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.replace.substring.with.substring.before.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.CanBeParameterInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.can.be.parameter.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantModalityModifierInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.redundant.modality.modifier.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantSemicolonInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.redundant.semicolon.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantUnitReturnTypeInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.redundant.unit.return.type.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantIfInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.redundant.if.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.LeakingThisInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.leaking.this.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.HasPlatformTypeInspection"
                     groupPath="Kotlin"
                     groupName="Java interop issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.has.platform.type.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.CanBePrimaryConstructorPropertyInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.can.be.primary.constructor.property.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.ConvertLambdaToReferenceInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.convert.lambda.to.reference.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.ConvertReferenceToLambdaInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.convert.reference.to.lambda.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RemoveSetterParameterTypeInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.remove.setter.parameter.type.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.conventionNameCalls.ReplaceCallWithBinaryOperatorInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.call.with.binary.operator.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.RemoveSingleExpressionStringTemplateInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.remove.single.expression.string.template.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RemoveToStringInStringTemplateInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.remove.to.string.in.string.template.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.RemoveEmptyParenthesesFromLambdaCallInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.remove.empty.parentheses.from.lambda.call.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReplaceArrayEqualityOpWithArraysEqualsInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.replace.array.equality.op.with.arrays.equals.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.SimpleRedundantLetInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.simple.redundant.let.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ComplexRedundantLetInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.complex.redundant.let.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.ConvertSecondaryConstructorToPrimaryInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.convert.secondary.constructor.to.primary.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.ReplaceSizeCheckWithIsNotEmptyInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.size.check.with.is.not.empty.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.ReplaceSizeZeroCheckWithIsEmptyInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.size.zero.check.with.is.empty.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.RemoveEmptyClassBodyInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.remove.empty.class.body.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.RemoveRedundantCallsOfConversionMethodsInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.remove.redundant.calls.of.conversion.methods.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.RemoveEmptyPrimaryConstructorInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.remove.empty.primary.constructor.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.RemoveEmptySecondaryConstructorBodyInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.remove.empty.secondary.constructor.body.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.JoinDeclarationAndAssignmentInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.join.declaration.and.assignment.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.intentions.ConvertTryFinallyToUseCallInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.convert.try.finally.to.use.call.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ConvertTwoComparisonsToRangeCheckInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.convert.two.comparisons.to.range.check.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ConvertNaNEqualityInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.convert.na.n.equality.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.UnusedEqualsInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.unused.equals.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReplaceWithEnumMapInspection"
                     groupPath="Kotlin"
                     groupName="Other problems"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.replace.with.enum.map.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.DataClassPrivateConstructorInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.data.class.private.constructor.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.DestructuringWrongNameInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.destructuring.wrong.name.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.UnusedLambdaExpressionBodyInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.unused.lambda.expression.body.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.KotlinInternalInJavaInspection"
                     groupPath="Kotlin"
                     groupName="Java interop issues"
                     enabledByDefault="true"
                     level="ERROR"
                     language="JAVA"
                     key="inspection.kotlin.internal.in.java.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.MoveSuspiciousCallableReferenceIntoParenthesesInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.move.suspicious.callable.reference.into.parentheses.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.CopyWithoutNamedArgumentsInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.copy.without.named.arguments.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReplaceArrayOfWithLiteralInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.array.of.with.literal.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RecursivePropertyAccessorInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.recursive.property.accessor.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReplaceRangeToWithUntilInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.range.to.with.until.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.MemberVisibilityCanBePrivateInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.member.visibility.can.be.private.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.NullableBooleanElvisInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.nullable.boolean.elvis.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.WrapUnaryOperatorInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.wrap.unary.operator.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.EmptyRangeInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.empty.range.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RemoveRedundantSpreadOperatorInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.remove.redundant.spread.operator.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.collections.UselessCallOnNotNullInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.useless.call.on.not.null.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantExplicitTypeInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.redundant.explicit.type.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.collections.UselessCallOnCollectionInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.useless.call.on.collection.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.collections.SimplifiableCallChainInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.simplifiable.call.chain.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.UseExpressionBodyInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.use.expression.body.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.LiftReturnOrAssignmentInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.lift.return.or.assignment.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.CascadeIfInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.cascade.if.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.NullChecksToSafeCallInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.null.checks.to.safe.call.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ConstantConditionIfInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.constant.condition.if.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.UnnecessaryVariableInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.unnecessary.variable.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.KotlinDoubleNegationInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     suppressId="DoubleNegation"
                     key="inspection.kotlin.double.negation.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.WhenWithOnlyElseInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="false"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.when.with.only.else.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantLambdaArrowInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.redundant.lambda.arrow.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ClassNameInspection"
                     language="kotlin"
                     groupPath="Kotlin"
                     groupName="Naming conventions"
                     enabledByDefault="true"
                     level="WEAK WARNING" key="inspection.class.name.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.EnumEntryNameInspection"
                     language="kotlin"
                     groupPath="Kotlin"
                     groupName="Naming conventions"
                     enabledByDefault="true"
                     level="WEAK WARNING" key="inspection.enum.entry.name.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.FunctionNameInspection"
                     language="kotlin"
                     groupPath="Kotlin"
                     groupName="Naming conventions"
                     enabledByDefault="true"
                     level="WEAK WARNING" key="inspection.function.name.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.TestFunctionNameInspection"
                     language="kotlin"
                     groupPath="Kotlin"
                     groupName="Naming conventions"
                     enabledByDefault="true"
                     level="WEAK WARNING" key="inspection.test.function.name.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.PropertyNameInspection"
                     language="kotlin"
                     groupPath="Kotlin"
                     groupName="Naming conventions"
                     enabledByDefault="true"
                     level="WEAK WARNING" key="inspection.property.name.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ObjectPropertyNameInspection"
                     language="kotlin"
                     groupPath="Kotlin"
                     groupName="Naming conventions"
                     enabledByDefault="true"
                     level="WEAK WARNING" key="inspection.object.property.name.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.PrivatePropertyNameInspection"
                     language="kotlin"
                     groupPath="Kotlin"
                     groupName="Naming conventions"
                     enabledByDefault="true"
                     level="WEAK WARNING" key="inspection.private.property.name.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ConstPropertyNameInspection"
                     language="kotlin"
                     groupPath="Kotlin"
                     groupName="Naming conventions"
                     enabledByDefault="true"
                     level="WEAK WARNING" key="inspection.const.property.name.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.LocalVariableNameInspection"
                     language="kotlin"
                     groupPath="Kotlin"
                     groupName="Naming conventions"
                     enabledByDefault="true"
                     level="WEAK WARNING" key="inspection.local.variable.name.display.name" bundle="messages.KotlinBundle"/>

    <globalInspection implementationClass="org.jetbrains.kotlin.idea.inspections.PackageNameInspection"
                      language="kotlin"
                      groupPath="Kotlin"
                      groupName="Naming conventions"
                      enabledByDefault="true"
                      level="WEAK WARNING" key="inspection.package.name.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.KotlinRedundantOverrideInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     suppressId="RedundantOverride"
                     key="inspection.kotlin.redundant.override.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.SuspiciousEqualsCombination"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.suspicious.equals.combination.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantGetterInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin" key="inspection.redundant.getter.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RemoveRedundantBackticksInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin" key="inspection.remove.redundant.backticks.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RemoveRedundantQualifierNameInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin" key="inspection.remove.redundant.qualifier.name.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantSetterInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.redundant.setter.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.MigrateDiagnosticSuppressionInspection"
                     groupPath="Kotlin"
                     groupName="Other problems"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.migrate.diagnostic.suppression.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ExplicitThisInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.explicit.this.display.name" bundle="messages.KotlinBundle"/>


    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ImplicitThisInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.implicit.this.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantUnitExpressionInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.redundant.unit.expression.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.SelfAssignmentInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.self.assignment.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ImplicitNullableNothingTypeInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.implicit.nullable.nothing.type.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.SimplifyWhenWithBooleanConstantConditionInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.simplify.when.with.boolean.constant.condition.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.JavaCollectionsStaticMethodInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.java.collections.static.method.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.JavaCollectionsStaticMethodOnImmutableListInspection"
                     groupPath="Kotlin"
                     groupName="Java interop issues"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.java.collections.static.method.on.immutable.list.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RecursiveEqualsCallInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.recursive.equals.call.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReplaceToWithInfixFormInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.to.with.infix.form.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReplacePutWithAssignmentInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.put.with.assignment.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantSuspendModifierInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.redundant.suspend.modifier.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.SortModifiersInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     cleanupTool="true"
                     key="inspection.sort.modifiers.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.MayBeConstantInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.may.be.constant.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.TrailingCommaInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.trailing.comma.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.FakeJvmFieldConstantInspection"
                     groupPath="Kotlin"
                     groupName="Java interop issues"
                     enabledByDefault="true"
                     level="WARNING"
                     language="JAVA"
                     key="inspection.fake.jvm.field.constant.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantObjectTypeCheckInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.redundant.object.type.check.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ScopeFunctionConversionInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.scope.function.conversion.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.PlatformExtensionReceiverOfInlineInspection"
                     groupPath="Kotlin"
                     groupName="Java interop issues"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.platform.extension.receiver.of.inline.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantNotNullExtensionReceiverOfInlineInspection"
                     groupPath="Kotlin"
                     groupName="Java interop issues"
                     enabledByDefault="false"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.redundant.not.null.extension.receiver.of.inline.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ConvertPairConstructorToToFunctionInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.convert.pair.constructor.to.to.function.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantCompanionReferenceInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.redundant.companion.reference.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.PublicApiImplicitTypeInspection"
                     groupPath="Kotlin"
                     groupName="Other problems"
                     enabledByDefault="false"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.public.api.implicit.type.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.CanSealedSubClassBeObjectInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.can.sealed.sub.class.be.object.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.MoveLambdaOutsideParenthesesInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.move.lambda.outside.parentheses.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.MoveVariableDeclarationIntoWhenInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.move.variable.declaration.into.when.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.MainFunctionReturnUnitInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.main.function.return.unit.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.coroutines.RedundantAsyncInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.redundant.async.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.coroutines.DeferredResultUnusedInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.deferred.result.unused.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReplaceStringFormatWithLiteralInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.replace.string.format.with.literal.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ForEachParameterNotUsedInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.for.each.parameter.not.used.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.NestedLambdaShadowedImplicitParameterInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.nested.lambda.shadowed.implicit.parameter.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReplaceToStringWithStringTemplateInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.replace.to.string.with.string.template.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.migration.FromClosedRangeMigrationInspection"
                     groupPath="Kotlin"
                     groupName="Migration"
                     enabledByDefault="false"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.from.closed.range.migration.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.migration.ProhibitTypeParametersForLocalVariablesMigrationInspection"
                     groupPath="Kotlin"
                     groupName="Migration"
                     enabledByDefault="false"
                     cleanupTool="true"
                     level="ERROR"
                     language="kotlin"
                     key="inspection.prohibit.type.parameters.for.local.variables.migration.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.migration.ProhibitJvmOverloadsOnConstructorsOfAnnotationClassesMigrationInspection"
                     groupPath="Kotlin"
                     groupName="Migration"
                     enabledByDefault="false"
                     cleanupTool="true"
                     level="ERROR"
                     language="kotlin"
                     key="inspection.prohibit.jvm.overloads.on.constructors.of.annotation.classes.migration.display.name"
                     bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.migration.RestrictReturnStatementTargetMigrationInspection"
                     groupPath="Kotlin"
                     groupName="Migration"
                     enabledByDefault="false"
                     cleanupTool="true"
                     level="ERROR"
                     language="kotlin"
                     key="inspection.restrict.return.statement.target.migration.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.migration.RedundantLabelMigrationInspection"
                     groupPath="Kotlin"
                     groupName="Migration"
                     enabledByDefault="false"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.redundant.label.migration.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.migration.ProhibitUseSiteTargetAnnotationsOnSuperTypesMigrationInspection"
                     groupPath="Kotlin"
                     groupName="Migration"
                     enabledByDefault="false"
                     cleanupTool="true"
                     level="ERROR"
                     language="kotlin"
                     key="inspection.prohibit.use.site.target.annotations.on.super.types.migration.display.name"
                     bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.migration.ProhibitRepeatedUseSiteTargetAnnotationsMigrationInspection"
                     groupPath="Kotlin"
                     groupName="Migration"
                     enabledByDefault="false"
                     cleanupTool="true"
                     level="ERROR"
                     language="kotlin"
                     key="inspection.prohibit.repeated.use.site.target.annotations.migration.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.migration.WarningOnMainUnusedParameterMigrationInspection"
                     groupPath="Kotlin"
                     groupName="Migration"
                     enabledByDefault="false"
                     cleanupTool="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.warning.on.main.unused.parameter.migration.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.migration.ObsoleteExperimentalCoroutinesInspection"
                     groupPath="Kotlin"
                     groupName="Migration"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="ERROR"
                     language="kotlin"
                     key="inspection.obsolete.experimental.coroutines.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.migration.ObsoleteKotlinJsPackagesInspection"
                     groupPath="Kotlin"
                     groupName="Migration"
                     enabledByDefault="true"
                     cleanupTool="true"
                     level="ERROR"
                     language="kotlin"
                     key="inspection.obsolete.kotlin.js.packages.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantWithInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.redundant.with.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.collections.ConvertCallChainIntoSequenceInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.convert.call.chain.into.sequence.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.SuspiciousAsDynamicInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.suspicious.as.dynamic.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReplaceAssertBooleanWithAssertEqualityInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.assert.boolean.with.assert.equality.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantReturnLabelInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.redundant.return.label.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.coroutines.DirectUseOfResultTypeInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="false"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.direct.use.of.result.type.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.coroutines.RedundantRunCatchingInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.redundant.run.catching.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.collections.SimplifiableCallInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.simplifiable.call.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.SafeCastWithReturnInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.safe.cast.with.return.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RemoveEmptyParenthesesFromAnnotationEntryInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.remove.empty.parentheses.from.annotation.entry.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.OptionalExpectationInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.optional.expectation.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.UnlabeledReturnInsideLambdaInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.unlabeled.return.inside.lambda.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.SetterBackingFieldAssignmentInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.setter.backing.field.assignment.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.SuspiciousVarPropertyInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.suspicious.var.property.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.UnusedMainParameterInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="false"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.unused.main.parameter.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.DelegationToVarPropertyInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.delegation.to.var.property.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.MapGetWithNotNullAssertionOperatorInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.map.get.with.not.null.assertion.operator.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.coroutines.DeferredIsResultInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.deferred.is.result.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantElseInIfInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.redundant.else.in.if.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.SuspiciousCollectionReassignmentInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.suspicious.collection.reassignment.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.BooleanLiteralArgumentInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.boolean.literal.argument.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.coroutines.SuspendFunctionOnCoroutineScopeInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.suspend.function.on.coroutine.scope.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.FunctionWithLambdaExpressionBodyInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.function.with.lambda.expression.body.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReplaceNegatedIsEmptyWithIsNotEmptyInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.negated.is.empty.with.is.not.empty.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantEnumConstructorInvocationInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.redundant.enum.constructor.invocation.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReplaceRangeStartEndInclusiveWithFirstLastInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.range.start.end.inclusive.with.first.last.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantRequireNotNullCallInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.redundant.require.not.null.call.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.KotlinThrowableNotThrownInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     suppressId="ThrowableNotThrown"
                     key="inspection.kotlin.throwable.not.thrown.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.JavaMapForEachInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.java.map.for.each.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReplaceAssociateFunctionInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.associate.function.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.KotlinCovariantEqualsInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     suppressId="CovariantEquals"
                     key="inspection.kotlin.covariant.equals.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReplaceNotNullAssertionWithElvisReturnInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="false"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.not.null.assertion.with.elvis.return.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.SelfReferenceConstructorParameterInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.self.reference.constructor.parameter.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.jdk2k.ReplaceJavaStaticMethodWithKotlinAnalogInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.java.static.method.with.kotlin.analog.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ControlFlowWithEmptyBodyInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.control.flow.with.empty.body.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.AddOperatorModifierInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.add.operator.modifier.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantEmptyInitializerBlockInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="INFO"
                     language="kotlin"
                     key="inspection.redundant.empty.initializer.block.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.KotlinEqualsBetweenInconvertibleTypesInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     suppressId="EqualsBetweenInconvertibleTypes"
                     key="inspection.kotlin.equals.between.inconvertible.types.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.LateinitVarOverridesLateinitVarInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.lateinit.var.overrides.lateinit.var.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReplaceGuardClauseWithFunctionCallInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="INFORMATION"
                     language="kotlin"
                     key="inspection.replace.guard.clause.with.function.call.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.UnusedUnaryOperatorInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.unused.unary.operator.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.IncompleteDestructuringInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="false"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.incomplete.destructuring.declaration.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantInnerClassModifierInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="false"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.redundant.inner.class.modifier.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantElvisReturnNullInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.redundant.elvis.return.null.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.logging.KotlinLoggerInitializedWithForeignClassInspection"
                     groupPath="Kotlin"
                     groupName="Logging"
                     enabledByDefault="false"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.logger.initialized.with.foreign.class.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.ReplaceWithIgnoreCaseEqualsInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.replace.with.ignore.case.equals.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.RedundantNullableReturnTypeInspection"
                     groupPath="Kotlin"
                     groupName="Redundant constructs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.redundant.nullable.return.type.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.SimplifyNestedEachInScopeFunctionInspection"
                     groupPath="Kotlin"
                     groupName="Style issues"
                     enabledByDefault="true"
                     level="WEAK WARNING"
                     language="kotlin"
                     key="inspection.simplifiable.scope.function.display.name" bundle="messages.KotlinBundle"/>

    <localInspection implementationClass="org.jetbrains.kotlin.idea.inspections.UnusedDataClassCopyResultInspection"
                     groupPath="Kotlin"
                     groupName="Probable bugs"
                     enabledByDefault="true"
                     level="WARNING"
                     language="kotlin"
                     key="inspection.unused.result.of.data.class.copy" bundle="messages.KotlinBundle"/>

  </extensions>

</idea-plugin>