package

@kotlin.internal.Returns public fun myAssert(/*0*/ @kotlin.internal.Equals(value = ConstantValue.TRUE) condition: kotlin.Boolean): kotlin.Unit
public fun testAssertInIf(/*0*/ x: kotlin.Any?): kotlin.Unit
public fun testAssertSmartcast(/*0*/ x: kotlin.Any?): kotlin.Unit
public fun testAtLeastOnceFlow(/*0*/ x: kotlin.Any?): kotlin.Unit
public fun testInvertedAssert(/*0*/ x: kotlin.Any?): kotlin.Unit
public fun testSpilling(/*0*/ x: kotlin.Any?): kotlin.Unit
public fun testTryCatch(/*0*/ x: kotlin.Any?): kotlin.Unit
public fun testUncertainFlow(/*0*/ x: kotlin.Any?): kotlin.Unit
