package test

public interface LoadIterableWithPropagation {

    public interface LoadIterable</*0*/ T : kotlin.Any!> {
        @kotlin.annotations.jvm.Mutable public abstract fun getIterable(): kotlin.collections.MutableIterable<T!>!
        @kotlin.annotations.jvm.ReadOnly public abstract fun getReadOnlyIterable(): kotlin.collections.Iterable<T!>!
        public abstract fun setIterable(/*0*/ @kotlin.annotations.jvm.Mutable p0: kotlin.collections.MutableIterable<T!>!): kotlin.Unit
        public abstract fun setReadOnlyIterable(/*0*/ @kotlin.annotations.jvm.ReadOnly p0: kotlin.collections.Iterable<T!>!): kotlin.Unit
    }

    public open class LoadIterableImpl</*0*/ T : kotlin.Any!> : test.LoadIterableWithPropagation.LoadIterable<T!> {
        public constructor LoadIterableImpl</*0*/ T : kotlin.Any!>()
        public open override /*1*/ fun getIterable(): kotlin.collections.MutableIterable<T!>!
        public open override /*1*/ fun getReadOnlyIterable(): kotlin.collections.Iterable<T!>!
        public open override /*1*/ fun setIterable(/*0*/ p0: kotlin.collections.MutableIterable<T!>!): kotlin.Unit
        public open override /*1*/ fun setReadOnlyIterable(/*0*/ p0: kotlin.collections.Iterable<T!>!): kotlin.Unit
    }
}
