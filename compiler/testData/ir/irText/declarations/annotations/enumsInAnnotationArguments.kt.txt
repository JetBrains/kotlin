open annotation class TestAnn : Annotation {
  val x: En
    field = x
    get

  constructor(x: En) /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

}

enum class En : Enum<En> {
  A = En()

  B = En()

  C = En()

  D = En()

  private constructor() /* primary */ {
    super/*Enum*/<En>()
    /* <init>() */

  }

  fun valueOf(value: String): En /* Synthetic body for ENUM_VALUEOF */

  fun values(): Array<En> /* Synthetic body for ENUM_VALUES */

  val entries: EnumEntries<En>
    get(): EnumEntries<En> /* Synthetic body for ENUM_ENTRIES */

}

@TestAnn(x = En.A)
fun test1() {
}

