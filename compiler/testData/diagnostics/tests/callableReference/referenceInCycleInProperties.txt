package

public abstract class Parser {
    public constructor Parser()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final fun parse(/*0*/ name: kotlin.String): kotlin.Int
    public final fun parse(/*0*/ name: kotlin.String, /*1*/ content: kotlin.String): kotlin.Int
    public open fun parseString(/*0*/ x: kotlin.String): kotlin.collections.List<kotlin.Int>
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class Some {
    public constructor Some(/*0*/ strings: kotlin.collections.List<kotlin.String>)
    private final val listOfInt: kotlin.collections.List<kotlin.Int>
    private final val listOfString: kotlin.collections.List<kotlin.String>
    public final val parser: Parser
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

