KT element: KtClass
KT element text:
public final class Foo public constructor() {
    public final fun test1(arg: kotlin.Any?): kotlin.Unit { contract { /* compiled contract */ }; /* compiled code */ }

    public final fun test2(s: kotlin.String?, block: () -> kotlin.Unit): kotlin.Unit { contract { /* compiled contract */ }; /* compiled code */ }

    public final fun test3(arg: kotlin.Any?): kotlin.Boolean { contract { /* compiled contract */ }; /* compiled code */ }
}
FIR element: FirRegularClassImpl
FIR source kind: KtRealSourceElementKind

FIR element rendered:
public final [ResolvedTo(BODY_RESOLVE)] class Foo : R|kotlin/Any| {
    public final [ResolvedTo(BODY_RESOLVE)] fun test1([ResolvedTo(BODY_RESOLVE)] arg: R|kotlin/Any?|): R|kotlin/Unit|
        [R|Contract description]
         <
            Returns(WILDCARD) -> arg != null
        >


    public final [ResolvedTo(BODY_RESOLVE)] fun test2([ResolvedTo(BODY_RESOLVE)] s: R|kotlin/String?|, [ResolvedTo(BODY_RESOLVE)] block: R|() -> kotlin/Unit|): R|kotlin/Unit|
        [R|Contract description]
         <
            Returns(WILDCARD) -> s != null
            CallsInPlace(block, EXACTLY_ONCE)
        >


    public final [ResolvedTo(BODY_RESOLVE)] fun test3([ResolvedTo(BODY_RESOLVE)] arg: R|kotlin/Any?|): R|kotlin/Boolean|
        [R|Contract description]
         <
            Returns(TRUE) -> arg != null
        >


    public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Foo] constructor(): R|Foo|

}
