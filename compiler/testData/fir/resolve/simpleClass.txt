FILE: simpleClass.kt
    public? abstract interface SomeInterface() {
        public? final? function foo(x: R/kotlin/Int/, y: R/kotlin/String/): R/kotlin/String/

        public? final? property bar(val): R/kotlin/Boolean/
            public? get(): R/kotlin/Boolean/

    }
    public? final class SomeClass() : R/SomeInterface/ {
        private final? property baz(val): R/error: Not supported: FirImplicitTypeImpl/ = STUB
            public? get(): R/error: Not supported: FirImplicitTypeImpl/

        public? open? override function foo(x: R/kotlin/Int/, y: R/kotlin/String/): R/kotlin/String/ {
        }

        public? open? override property bar(var): R/kotlin/Boolean/
            public? get(): R/error: Not supported: FirImplicitTypeImpl/ {
                STUB
            }
            public? set(value: R/kotlin/Boolean/): R/error: Not supported: FirImplicitTypeImpl/ {
            }

        public? final? property fau(var): R/kotlin/Double/
            public? get(): R/kotlin/Double/
            public? set(value: R/kotlin/Double/): R/kotlin/Unit/

    }
