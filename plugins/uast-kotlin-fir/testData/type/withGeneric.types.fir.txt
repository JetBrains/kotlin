UFile (package = ) [public final class WithGenericKt {...]
    UClass (name = WithGenericKt) [public final class WithGenericKt {...}]
        UMethod (name = test1) [public static final fun test1() : T {...}]
            UBlockExpression [{...}]
                UReturnExpression [return "not-yet-compile-time-constant" as T]
                    UBinaryExpressionWithType ["not-yet-compile-time-constant" as T] : PsiType:T
                        ULiteralExpression (value = "not-yet-compile-time-constant") ["not-yet-compile-time-constant"] : PsiType:Void
                        UTypeReferenceExpression (name = T) [T]
        UMethod (name = test2) [public static final fun test2() : T {...}]
            UBlockExpression [{...}] : PsiType:Void
                [!] UnknownKotlinExpression (PROPERTY) [[!] UnknownKotlinExpression (PROPERTY)]
                UReturnExpression [return [!] UnknownKotlinExpression (REFERENCE_EXPRESSION) as T] : PsiType:Void
                    UBinaryExpressionWithType [[!] UnknownKotlinExpression (REFERENCE_EXPRESSION) as T] : PsiType:T
                        [!] UnknownKotlinExpression (REFERENCE_EXPRESSION) [[!] UnknownKotlinExpression (REFERENCE_EXPRESSION)]
                        UTypeReferenceExpression (name = T) [T]
        UMethod (name = test3) [public static final fun test3() : T {...}]
            UBlockExpression [{...}]
                UReturnExpression [return "not-yet-compile-time-constant" as T]
                    UBinaryExpressionWithType ["not-yet-compile-time-constant" as T] : PsiType:T
                        ULiteralExpression (value = "not-yet-compile-time-constant") ["not-yet-compile-time-constant"] : PsiType:Void
                        UTypeReferenceExpression (name = T) [T]
        UMethod (name = castToString) [public static final fun castToString(t: T) : void {...}]
            UParameter (name = t) [var t: T]
            UBlockExpression [{...}] : PsiType:String
                UBinaryExpressionWithType [[!] UnknownKotlinExpression (REFERENCE_EXPRESSION) as java.lang.String] : PsiType:String
                    [!] UnknownKotlinExpression (REFERENCE_EXPRESSION) [[!] UnknownKotlinExpression (REFERENCE_EXPRESSION)]
                    UTypeReferenceExpression (name = java.lang.String) [java.lang.String]
        UMethod (name = box) [public static final fun box() : java.lang.String {...}]
            UBlockExpression [{...}] : PsiType:Void
                UIfExpression [if ([!] UnknownKotlinExpression (BINARY_EXPRESSION)) return "fail: test1"] : PsiType:Unit
                    [!] UnknownKotlinExpression (BINARY_EXPRESSION) [[!] UnknownKotlinExpression (BINARY_EXPRESSION)]
                    UReturnExpression [return "fail: test1"] : PsiType:Void
                        ULiteralExpression (value = "fail: test1") ["fail: test1"] : PsiType:String
                UIfExpression [if ([!] UnknownKotlinExpression (BINARY_EXPRESSION)) return "fail: test2"] : PsiType:Unit
                    [!] UnknownKotlinExpression (BINARY_EXPRESSION) [[!] UnknownKotlinExpression (BINARY_EXPRESSION)]
                    UReturnExpression [return "fail: test2"] : PsiType:Void
                        ULiteralExpression (value = "fail: test2") ["fail: test2"] : PsiType:String
                [!] UnknownKotlinExpression (PROPERTY) [[!] UnknownKotlinExpression (PROPERTY)]
                [!] UnknownKotlinExpression (TRY) [[!] UnknownKotlinExpression (TRY)]
                UIfExpression [if ([!] UnknownKotlinExpression (BINARY_EXPRESSION)) return "fail: test3"] : PsiType:Unit
                    [!] UnknownKotlinExpression (BINARY_EXPRESSION) [[!] UnknownKotlinExpression (BINARY_EXPRESSION)]
                    UReturnExpression [return "fail: test3"] : PsiType:Void
                        ULiteralExpression (value = "fail: test3") ["fail: test3"] : PsiType:String
                [!] UnknownKotlinExpression (TRY) [[!] UnknownKotlinExpression (TRY)]
                UReturnExpression [return "Fail"] : PsiType:Void
                    ULiteralExpression (value = "Fail") ["Fail"] : PsiType:String
