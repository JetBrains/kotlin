// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: compiler/ir/serialization.common/src/KotlinIr.proto
// Protobuf Java Version: 4.29.3

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn}
 */
public final class IrReturn extends
    org.jetbrains.kotlin.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn)
    IrReturnOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    org.jetbrains.kotlin.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      org.jetbrains.kotlin.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      IrReturn.class.getName());
  }
  // Use IrReturn.newBuilder() to construct.
  private IrReturn(org.jetbrains.kotlin.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private IrReturn() {
  }

  public static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.jetbrains.kotlin.backend.common.serialization.proto.KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrReturn_descriptor;
  }

  @java.lang.Override
  protected org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.jetbrains.kotlin.backend.common.serialization.proto.KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrReturn_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn.class, org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn.Builder.class);
  }

  private int bitField0_;
  public static final int RETURN_TARGET_FIELD_NUMBER = 1;
  private long returnTarget_ = 0L;
  /**
   * <code>int64 return_target = 1 [features = { ... }</code>
   * @return Whether the returnTarget field is set.
   */
  @java.lang.Override
  public boolean hasReturnTarget() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>int64 return_target = 1 [features = { ... }</code>
   * @return The returnTarget.
   */
  @java.lang.Override
  public long getReturnTarget() {
    return returnTarget_;
  }

  public static final int VALUE_FIELD_NUMBER = 2;
  private org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value_;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value = 2 [features = { ... }</code>
   * @return Whether the value field is set.
   */
  @java.lang.Override
  public boolean hasValue() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value = 2 [features = { ... }</code>
   * @return The value.
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression getValue() {
    return value_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression.getDefaultInstance() : value_;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value = 2 [features = { ... }</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrExpressionOrBuilder getValueOrBuilder() {
    return value_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression.getDefaultInstance() : value_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasReturnTarget()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasValue()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!getValue().isInitialized()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(org.jetbrains.kotlin.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeInt64(1, returnTarget_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getValue());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeInt64Size(1, returnTarget_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += org.jetbrains.kotlin.protobuf.CodedOutputStream
        .computeMessageSize(2, getValue());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn)) {
      return super.equals(obj);
    }
    org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn other = (org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn) obj;

    if (hasReturnTarget() != other.hasReturnTarget()) return false;
    if (hasReturnTarget()) {
      if (getReturnTarget()
          != other.getReturnTarget()) return false;
    }
    if (hasValue() != other.hasValue()) return false;
    if (hasValue()) {
      if (!getValue()
          .equals(other.getValue())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasReturnTarget()) {
      hash = (37 * hash) + RETURN_TARGET_FIELD_NUMBER;
      hash = (53 * hash) + org.jetbrains.kotlin.protobuf.Internal.hashLong(
          getReturnTarget());
    }
    if (hasValue()) {
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn parseFrom(
      java.nio.ByteBuffer data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn parseFrom(
      java.nio.ByteBuffer data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn parseFrom(byte[] data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn parseFrom(
      byte[] data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn parseFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn parseDelimitedFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      org.jetbrains.kotlin.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn}
   */
  public static final class Builder extends
      org.jetbrains.kotlin.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn)
      org.jetbrains.kotlin.backend.common.serialization.proto.IrReturnOrBuilder {
    public static final org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.jetbrains.kotlin.backend.common.serialization.proto.KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrReturn_descriptor;
    }

    @java.lang.Override
    protected org.jetbrains.kotlin.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.jetbrains.kotlin.backend.common.serialization.proto.KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrReturn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn.class, org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn.Builder.class);
    }

    // Construct using org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        org.jetbrains.kotlin.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (org.jetbrains.kotlin.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getValueFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      returnTarget_ = 0L;
      value_ = null;
      if (valueBuilder_ != null) {
        valueBuilder_.dispose();
        valueBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public org.jetbrains.kotlin.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.jetbrains.kotlin.backend.common.serialization.proto.KotlinIr.internal_static_org_jetbrains_kotlin_backend_common_serialization_proto_IrReturn_descriptor;
    }

    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn getDefaultInstanceForType() {
      return org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn.getDefaultInstance();
    }

    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn build() {
      org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn buildPartial() {
      org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn result = new org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.returnTarget_ = returnTarget_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.value_ = valueBuilder_ == null
            ? value_
            : valueBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(org.jetbrains.kotlin.protobuf.Message other) {
      if (other instanceof org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn) {
        return mergeFrom((org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn other) {
      if (other == org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn.getDefaultInstance()) return this;
      if (other.hasReturnTarget()) {
        setReturnTarget(other.getReturnTarget());
      }
      if (other.hasValue()) {
        mergeValue(other.getValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      if (!hasReturnTarget()) {
        return false;
      }
      if (!hasValue()) {
        return false;
      }
      if (!getValue().isInitialized()) {
        return false;
      }
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              returnTarget_ = input.readInt64();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              input.readMessage(
                  getValueFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private long returnTarget_ ;
    /**
     * <code>int64 return_target = 1 [features = { ... }</code>
     * @return Whether the returnTarget field is set.
     */
    @java.lang.Override
    public boolean hasReturnTarget() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>int64 return_target = 1 [features = { ... }</code>
     * @return The returnTarget.
     */
    @java.lang.Override
    public long getReturnTarget() {
      return returnTarget_;
    }
    /**
     * <code>int64 return_target = 1 [features = { ... }</code>
     * @param value The returnTarget to set.
     * @return This builder for chaining.
     */
    public Builder setReturnTarget(long value) {

      returnTarget_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>int64 return_target = 1 [features = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearReturnTarget() {
      bitField0_ = (bitField0_ & ~0x00000001);
      returnTarget_ = 0L;
      onChanged();
      return this;
    }

    private org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value_;
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression, org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrExpressionOrBuilder> valueBuilder_;
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value = 2 [features = { ... }</code>
     * @return Whether the value field is set.
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value = 2 [features = { ... }</code>
     * @return The value.
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression getValue() {
      if (valueBuilder_ == null) {
        return value_ == null ? org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression.getDefaultInstance() : value_;
      } else {
        return valueBuilder_.getMessage();
      }
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value = 2 [features = { ... }</code>
     */
    public Builder setValue(org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value) {
      if (valueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        value_ = value;
      } else {
        valueBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value = 2 [features = { ... }</code>
     */
    public Builder setValue(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression.Builder builderForValue) {
      if (valueBuilder_ == null) {
        value_ = builderForValue.build();
      } else {
        valueBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value = 2 [features = { ... }</code>
     */
    public Builder mergeValue(org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value) {
      if (valueBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          value_ != null &&
          value_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression.getDefaultInstance()) {
          getValueBuilder().mergeFrom(value);
        } else {
          value_ = value;
        }
      } else {
        valueBuilder_.mergeFrom(value);
      }
      if (value_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value = 2 [features = { ... }</code>
     */
    public Builder clearValue() {
      bitField0_ = (bitField0_ & ~0x00000002);
      value_ = null;
      if (valueBuilder_ != null) {
        valueBuilder_.dispose();
        valueBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value = 2 [features = { ... }</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression.Builder getValueBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getValueFieldBuilder().getBuilder();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value = 2 [features = { ... }</code>
     */
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrExpressionOrBuilder getValueOrBuilder() {
      if (valueBuilder_ != null) {
        return valueBuilder_.getMessageOrBuilder();
      } else {
        return value_ == null ?
            org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression.getDefaultInstance() : value_;
      }
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value = 2 [features = { ... }</code>
     */
    private org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression, org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrExpressionOrBuilder> 
        getValueFieldBuilder() {
      if (valueBuilder_ == null) {
        valueBuilder_ = new org.jetbrains.kotlin.protobuf.SingleFieldBuilder<
            org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression, org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression.Builder, org.jetbrains.kotlin.backend.common.serialization.proto.IrExpressionOrBuilder>(
                getValue(),
                getParentForChildren(),
                isClean());
        value_ = null;
      }
      return valueBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn)
  }

  // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn)
  private static final org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn();
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final org.jetbrains.kotlin.protobuf.Parser<IrReturn>
      PARSER = new org.jetbrains.kotlin.protobuf.AbstractParser<IrReturn>() {
    @java.lang.Override
    public IrReturn parsePartialFrom(
        org.jetbrains.kotlin.protobuf.CodedInputStream input,
        org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
        throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (org.jetbrains.kotlin.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static org.jetbrains.kotlin.protobuf.Parser<IrReturn> parser() {
    return PARSER;
  }

  @java.lang.Override
  public org.jetbrains.kotlin.protobuf.Parser<IrReturn> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrReturn getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}
