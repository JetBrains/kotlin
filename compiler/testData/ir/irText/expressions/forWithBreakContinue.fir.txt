FILE fqName:<root> fileName:/forWithBreakContinue.kt
  FUN name:testForBreak1 visibility:public modality:FINAL <> (ss:kotlin.collections.List<kotlin.String>) returnType:kotlin.Unit
    VALUE_PARAMETER name:ss index:0 type:kotlin.collections.List<kotlin.String>
    BLOCK_BODY
      VAR name:<range> type:kotlin.collections.List<kotlin.String> [val]
        GET_VAR 'ss: kotlin.collections.List<kotlin.String> declared in <root>.testForBreak1' type=kotlin.collections.List<kotlin.String> origin=null
      VAR name:<iterator> type:kotlin.collections.Iterator<E of <uninitialized parent>> [val]
        CALL 'public abstract fun iterator (): kotlin.collections.Iterator<E of <uninitialized parent>> declared in kotlin.collections.List' type=kotlin.collections.Iterator<E of <uninitialized parent>> origin=null
      WHILE label=null origin=FOR_LOOP_INNER_WHILE
        condition: CALL 'public abstract fun hasNext (): kotlin.Boolean declared in kotlin.collections.Iterator' type=kotlin.Boolean origin=null
        body: BLOCK type=IrErrorType origin=null
          VAR name:s type:T of <uninitialized parent> [val]
            CALL 'public abstract fun next (): T of <uninitialized parent> declared in kotlin.collections.Iterator' type=T of <uninitialized parent> origin=null
          BREAK label=null loop.label=null
  FUN name:testForBreak2 visibility:public modality:FINAL <> (ss:kotlin.collections.List<kotlin.String>) returnType:kotlin.Unit
    VALUE_PARAMETER name:ss index:0 type:kotlin.collections.List<kotlin.String>
    BLOCK_BODY
      VAR name:<range> type:kotlin.collections.List<kotlin.String> [val]
        GET_VAR 'ss: kotlin.collections.List<kotlin.String> declared in <root>.testForBreak2' type=kotlin.collections.List<kotlin.String> origin=null
      VAR name:<iterator> type:kotlin.collections.Iterator<E of <uninitialized parent>> [val]
        CALL 'public abstract fun iterator (): kotlin.collections.Iterator<E of <uninitialized parent>> declared in kotlin.collections.List' type=kotlin.collections.Iterator<E of <uninitialized parent>> origin=null
      WHILE label=OUTER origin=FOR_LOOP_INNER_WHILE
        condition: CALL 'public abstract fun hasNext (): kotlin.Boolean declared in kotlin.collections.Iterator' type=kotlin.Boolean origin=null
        body: BLOCK type=IrErrorType origin=null
          VAR name:s1 type:T of <uninitialized parent> [val]
            CALL 'public abstract fun next (): T of <uninitialized parent> declared in kotlin.collections.Iterator' type=T of <uninitialized parent> origin=null
          VAR name:<range> type:kotlin.collections.List<kotlin.String> [val]
            GET_VAR 'ss: kotlin.collections.List<kotlin.String> declared in <root>.testForBreak2' type=kotlin.collections.List<kotlin.String> origin=null
          VAR name:<iterator> type:kotlin.collections.Iterator<E of <uninitialized parent>> [val]
            CALL 'public abstract fun iterator (): kotlin.collections.Iterator<E of <uninitialized parent>> declared in kotlin.collections.List' type=kotlin.collections.Iterator<E of <uninitialized parent>> origin=null
          WHILE label=INNER origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'public abstract fun hasNext (): kotlin.Boolean declared in kotlin.collections.Iterator' type=kotlin.Boolean origin=null
            body: BLOCK type=IrErrorType origin=null
              VAR name:s2 type:T of <uninitialized parent> [val]
                CALL 'public abstract fun next (): T of <uninitialized parent> declared in kotlin.collections.Iterator' type=T of <uninitialized parent> origin=null
              BREAK label=OUTER loop.label=OUTER
              BREAK label=INNER loop.label=INNER
              BREAK label=null loop.label=INNER
          BREAK label=OUTER loop.label=OUTER
  FUN name:testForContinue1 visibility:public modality:FINAL <> (ss:kotlin.collections.List<kotlin.String>) returnType:kotlin.Unit
    VALUE_PARAMETER name:ss index:0 type:kotlin.collections.List<kotlin.String>
    BLOCK_BODY
      VAR name:<range> type:kotlin.collections.List<kotlin.String> [val]
        GET_VAR 'ss: kotlin.collections.List<kotlin.String> declared in <root>.testForContinue1' type=kotlin.collections.List<kotlin.String> origin=null
      VAR name:<iterator> type:kotlin.collections.Iterator<E of <uninitialized parent>> [val]
        CALL 'public abstract fun iterator (): kotlin.collections.Iterator<E of <uninitialized parent>> declared in kotlin.collections.List' type=kotlin.collections.Iterator<E of <uninitialized parent>> origin=null
      WHILE label=null origin=FOR_LOOP_INNER_WHILE
        condition: CALL 'public abstract fun hasNext (): kotlin.Boolean declared in kotlin.collections.Iterator' type=kotlin.Boolean origin=null
        body: BLOCK type=IrErrorType origin=null
          VAR name:s type:T of <uninitialized parent> [val]
            CALL 'public abstract fun next (): T of <uninitialized parent> declared in kotlin.collections.Iterator' type=T of <uninitialized parent> origin=null
          CONTINUE label=null loop.label=null
  FUN name:testForContinue2 visibility:public modality:FINAL <> (ss:kotlin.collections.List<kotlin.String>) returnType:kotlin.Unit
    VALUE_PARAMETER name:ss index:0 type:kotlin.collections.List<kotlin.String>
    BLOCK_BODY
      VAR name:<range> type:kotlin.collections.List<kotlin.String> [val]
        GET_VAR 'ss: kotlin.collections.List<kotlin.String> declared in <root>.testForContinue2' type=kotlin.collections.List<kotlin.String> origin=null
      VAR name:<iterator> type:kotlin.collections.Iterator<E of <uninitialized parent>> [val]
        CALL 'public abstract fun iterator (): kotlin.collections.Iterator<E of <uninitialized parent>> declared in kotlin.collections.List' type=kotlin.collections.Iterator<E of <uninitialized parent>> origin=null
      WHILE label=OUTER origin=FOR_LOOP_INNER_WHILE
        condition: CALL 'public abstract fun hasNext (): kotlin.Boolean declared in kotlin.collections.Iterator' type=kotlin.Boolean origin=null
        body: BLOCK type=IrErrorType origin=null
          VAR name:s1 type:T of <uninitialized parent> [val]
            CALL 'public abstract fun next (): T of <uninitialized parent> declared in kotlin.collections.Iterator' type=T of <uninitialized parent> origin=null
          VAR name:<range> type:kotlin.collections.List<kotlin.String> [val]
            GET_VAR 'ss: kotlin.collections.List<kotlin.String> declared in <root>.testForContinue2' type=kotlin.collections.List<kotlin.String> origin=null
          VAR name:<iterator> type:kotlin.collections.Iterator<E of <uninitialized parent>> [val]
            CALL 'public abstract fun iterator (): kotlin.collections.Iterator<E of <uninitialized parent>> declared in kotlin.collections.List' type=kotlin.collections.Iterator<E of <uninitialized parent>> origin=null
          WHILE label=INNER origin=FOR_LOOP_INNER_WHILE
            condition: CALL 'public abstract fun hasNext (): kotlin.Boolean declared in kotlin.collections.Iterator' type=kotlin.Boolean origin=null
            body: BLOCK type=IrErrorType origin=null
              VAR name:s2 type:T of <uninitialized parent> [val]
                CALL 'public abstract fun next (): T of <uninitialized parent> declared in kotlin.collections.Iterator' type=T of <uninitialized parent> origin=null
              CONTINUE label=OUTER loop.label=OUTER
              CONTINUE label=INNER loop.label=INNER
              CONTINUE label=null loop.label=INNER
          CONTINUE label=OUTER loop.label=OUTER
