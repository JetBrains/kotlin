public final class org/jetbrains/kotlin/gradle/dsl/ExplicitApiMode : java/lang/Enum {
	public static final field Disabled Lorg/jetbrains/kotlin/gradle/dsl/ExplicitApiMode;
	public static final field Strict Lorg/jetbrains/kotlin/gradle/dsl/ExplicitApiMode;
	public static final field Warning Lorg/jetbrains/kotlin/gradle/dsl/ExplicitApiMode;
	public final fun getCliOption ()Ljava/lang/String;
	public final fun toCompilerArg ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/ExplicitApiMode;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/dsl/ExplicitApiMode;
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/HasConfigurableKotlinCompilerOptions {
	public abstract fun compilerOptions (Lkotlin/jvm/functions/Function1;)V
	public abstract fun compilerOptions (Lorg/gradle/api/Action;)V
	public abstract fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions;
}

public final class org/jetbrains/kotlin/gradle/dsl/HasConfigurableKotlinCompilerOptions$DefaultImpls {
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/dsl/HasConfigurableKotlinCompilerOptions;Lkotlin/jvm/functions/Function1;)V
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/dsl/HasConfigurableKotlinCompilerOptions;Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/kotlin/gradle/dsl/JsDiagnosticMode : java/lang/Enum {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/dsl/JsDiagnosticMode$Companion;
	public static final field RUNTIME_DIAGNOSTIC_EXCEPTION Lorg/jetbrains/kotlin/gradle/dsl/JsDiagnosticMode;
	public static final field RUNTIME_DIAGNOSTIC_LOG Lorg/jetbrains/kotlin/gradle/dsl/JsDiagnosticMode;
	public static final fun fromMode (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/JsDiagnosticMode;
	public final fun getMode ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/JsDiagnosticMode;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/dsl/JsDiagnosticMode;
}

public final class org/jetbrains/kotlin/gradle/dsl/JsDiagnosticMode$Companion {
	public final fun fromMode (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/JsDiagnosticMode;
}

public final class org/jetbrains/kotlin/gradle/dsl/JsMainFunctionExecutionMode : java/lang/Enum {
	public static final field CALL Lorg/jetbrains/kotlin/gradle/dsl/JsMainFunctionExecutionMode;
	public static final field Companion Lorg/jetbrains/kotlin/gradle/dsl/JsMainFunctionExecutionMode$Companion;
	public static final field NO_CALL Lorg/jetbrains/kotlin/gradle/dsl/JsMainFunctionExecutionMode;
	public static final fun fromMode (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/JsMainFunctionExecutionMode;
	public final fun getMode ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/JsMainFunctionExecutionMode;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/dsl/JsMainFunctionExecutionMode;
}

public final class org/jetbrains/kotlin/gradle/dsl/JsMainFunctionExecutionMode$Companion {
	public final fun fromMode (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/JsMainFunctionExecutionMode;
}

public final class org/jetbrains/kotlin/gradle/dsl/JsModuleKind : java/lang/Enum {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/dsl/JsModuleKind$Companion;
	public static final field MODULE_AMD Lorg/jetbrains/kotlin/gradle/dsl/JsModuleKind;
	public static final field MODULE_COMMONJS Lorg/jetbrains/kotlin/gradle/dsl/JsModuleKind;
	public static final field MODULE_ES Lorg/jetbrains/kotlin/gradle/dsl/JsModuleKind;
	public static final field MODULE_PLAIN Lorg/jetbrains/kotlin/gradle/dsl/JsModuleKind;
	public static final field MODULE_UMD Lorg/jetbrains/kotlin/gradle/dsl/JsModuleKind;
	public static final fun fromKind (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/JsModuleKind;
	public final fun getKind ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/JsModuleKind;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/dsl/JsModuleKind;
}

public final class org/jetbrains/kotlin/gradle/dsl/JsModuleKind$Companion {
	public final fun fromKind (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/JsModuleKind;
}

public final class org/jetbrains/kotlin/gradle/dsl/JsSourceMapEmbedMode : java/lang/Enum {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/dsl/JsSourceMapEmbedMode$Companion;
	public static final field SOURCE_MAP_SOURCE_CONTENT_ALWAYS Lorg/jetbrains/kotlin/gradle/dsl/JsSourceMapEmbedMode;
	public static final field SOURCE_MAP_SOURCE_CONTENT_INLINING Lorg/jetbrains/kotlin/gradle/dsl/JsSourceMapEmbedMode;
	public static final field SOURCE_MAP_SOURCE_CONTENT_NEVER Lorg/jetbrains/kotlin/gradle/dsl/JsSourceMapEmbedMode;
	public static final fun fromMode (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/JsSourceMapEmbedMode;
	public final fun getMode ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/JsSourceMapEmbedMode;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/dsl/JsSourceMapEmbedMode;
}

public final class org/jetbrains/kotlin/gradle/dsl/JsSourceMapEmbedMode$Companion {
	public final fun fromMode (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/JsSourceMapEmbedMode;
}

public final class org/jetbrains/kotlin/gradle/dsl/JsSourceMapNamesPolicy : java/lang/Enum {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/dsl/JsSourceMapNamesPolicy$Companion;
	public static final field SOURCE_MAP_NAMES_POLICY_FQ_NAMES Lorg/jetbrains/kotlin/gradle/dsl/JsSourceMapNamesPolicy;
	public static final field SOURCE_MAP_NAMES_POLICY_NO Lorg/jetbrains/kotlin/gradle/dsl/JsSourceMapNamesPolicy;
	public static final field SOURCE_MAP_NAMES_POLICY_SIMPLE_NAMES Lorg/jetbrains/kotlin/gradle/dsl/JsSourceMapNamesPolicy;
	public static final fun fromPolicy (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/JsSourceMapNamesPolicy;
	public final fun getPolicy ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/JsSourceMapNamesPolicy;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/dsl/JsSourceMapNamesPolicy;
}

public final class org/jetbrains/kotlin/gradle/dsl/JsSourceMapNamesPolicy$Companion {
	public final fun fromPolicy (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/JsSourceMapNamesPolicy;
}

public final class org/jetbrains/kotlin/gradle/dsl/JvmTarget : java/lang/Enum {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget$Companion;
	public static final field JVM_10 Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
	public static final field JVM_11 Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
	public static final field JVM_12 Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
	public static final field JVM_13 Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
	public static final field JVM_14 Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
	public static final field JVM_15 Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
	public static final field JVM_16 Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
	public static final field JVM_17 Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
	public static final field JVM_18 Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
	public static final field JVM_19 Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
	public static final field JVM_1_8 Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
	public static final field JVM_20 Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
	public static final field JVM_21 Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
	public static final field JVM_22 Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
	public static final field JVM_23 Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
	public static final field JVM_9 Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
	public static final fun fromTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
	public static final fun getDEFAULT ()Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
	public final fun getTarget ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
}

public final class org/jetbrains/kotlin/gradle/dsl/JvmTarget$Companion {
	public final fun fromTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
	public final fun getDEFAULT ()Lorg/jetbrains/kotlin/gradle/dsl/JvmTarget;
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KaptArguments {
	public abstract fun arg (Ljava/lang/Object;[Ljava/lang/Object;)V
	public abstract fun arg (Ljava/lang/String;[Ljava/lang/String;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KaptExtensionConfig {
	public abstract fun annotationProcessor (Ljava/lang/String;)V
	public abstract fun annotationProcessors ([Ljava/lang/String;)V
	public abstract fun arguments (Lkotlin/jvm/functions/Function1;)V
	public abstract fun arguments (Lorg/gradle/api/Action;)V
	public abstract fun getCorrectErrorTypes ()Z
	public abstract fun getDetectMemoryLeaks ()Ljava/lang/String;
	public abstract fun getDumpDefaultParameterValues ()Z
	public abstract fun getIncludeCompileClasspath ()Ljava/lang/Boolean;
	public abstract fun getJavacOptions ()Ljava/util/Map;
	public abstract fun getKeepJavacAnnotationProcessors ()Z
	public abstract fun getMapDiagnosticLocations ()Z
	public abstract fun getShowProcessorStats ()Z
	public abstract fun getStrictMode ()Z
	public abstract fun getStripMetadata ()Z
	public abstract fun getUseBuildCache ()Z
	public abstract fun getUseLightAnalysis ()Z
	public abstract fun javacOptions (Lkotlin/jvm/functions/Function1;)V
	public abstract fun javacOptions (Lorg/gradle/api/Action;)V
	public abstract fun setCorrectErrorTypes (Z)V
	public abstract fun setDetectMemoryLeaks (Ljava/lang/String;)V
	public abstract fun setDumpDefaultParameterValues (Z)V
	public abstract fun setIncludeCompileClasspath (Ljava/lang/Boolean;)V
	public abstract fun setKeepJavacAnnotationProcessors (Z)V
	public abstract fun setMapDiagnosticLocations (Z)V
	public abstract fun setShowProcessorStats (Z)V
	public abstract fun setStrictMode (Z)V
	public abstract fun setStripMetadata (Z)V
	public abstract fun setUseBuildCache (Z)V
	public abstract fun setUseLightAnalysis (Z)V
}

public final class org/jetbrains/kotlin/gradle/dsl/KaptExtensionConfig$DefaultImpls {
	public static fun arguments (Lorg/jetbrains/kotlin/gradle/dsl/KaptExtensionConfig;Lorg/gradle/api/Action;)V
	public static fun javacOptions (Lorg/jetbrains/kotlin/gradle/dsl/KaptExtensionConfig;Lorg/gradle/api/Action;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KaptJavacOption {
	public abstract fun option (Ljava/lang/Object;)V
	public abstract fun option (Ljava/lang/Object;Ljava/lang/Object;)V
	public abstract fun option (Ljava/lang/String;)V
	public abstract fun option (Ljava/lang/String;Ljava/lang/String;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinAndroidExtension : org/jetbrains/kotlin/gradle/dsl/HasConfigurableKotlinCompilerOptions, org/jetbrains/kotlin/gradle/dsl/KotlinBaseExtension {
	public abstract fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
}

public final class org/jetbrains/kotlin/gradle/dsl/KotlinAndroidExtension$DefaultImpls {
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/dsl/KotlinAndroidExtension;Lkotlin/jvm/functions/Function1;)V
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/dsl/KotlinAndroidExtension;Lorg/gradle/api/Action;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinArtifact : org/gradle/api/Named, org/gradle/api/plugins/ExtensionAware {
	public abstract fun getArtifactName ()Ljava/lang/String;
	public abstract fun getModules ()Ljava/util/Set;
	public abstract fun getOutDir ()Ljava/lang/String;
	public abstract fun getTaskName ()Ljava/lang/String;
	public abstract fun registerAssembleTask (Lorg/gradle/api/Project;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinArtifactConfig {
	public abstract fun addModule (Ljava/lang/Object;)V
	public abstract fun createArtifact (Lorg/gradle/api/plugins/ExtensionAware;)Lorg/jetbrains/kotlin/gradle/dsl/KotlinArtifact;
	public abstract fun getArtifactName ()Ljava/lang/String;
	public abstract fun getModules ()Ljava/util/Set;
	public abstract fun setModules ([Ljava/lang/Object;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinArtifactsExtension {
	public abstract fun getArtifactConfigs ()Lorg/gradle/api/DomainObjectSet;
	public abstract fun getArtifacts ()Lorg/gradle/api/NamedDomainObjectSet;
	public abstract fun getNative ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinNativeArtifactDSL;
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinBaseExtension : org/jetbrains/kotlin/gradle/dsl/KotlinTopLevelExtension {
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions : org/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerToolOptions {
	public abstract fun getApiVersion ()Lorg/gradle/api/provider/Property;
	public abstract fun getLanguageVersion ()Lorg/gradle/api/provider/Property;
	public abstract fun getOptIn ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getProgressiveMode ()Lorg/gradle/api/provider/Property;
	public abstract fun getUseK2 ()Lorg/gradle/api/provider/Property;
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerToolOptions {
	public abstract fun getAllWarningsAsErrors ()Lorg/gradle/api/provider/Property;
	public abstract fun getExtraWarnings ()Lorg/gradle/api/provider/Property;
	public abstract fun getFreeCompilerArgs ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getSuppressWarnings ()Lorg/gradle/api/provider/Property;
	public abstract fun getVerbose ()Lorg/gradle/api/provider/Property;
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions : org/jetbrains/kotlin/gradle/dsl/KotlinCommonToolOptions {
	public abstract fun getApiVersion ()Ljava/lang/String;
	public abstract fun getLanguageVersion ()Ljava/lang/String;
	public abstract fun getOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions;
	public abstract fun getUseK2 ()Z
	public abstract fun setApiVersion (Ljava/lang/String;)V
	public abstract fun setLanguageVersion (Ljava/lang/String;)V
	public abstract fun setUseK2 (Z)V
}

public final class org/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions$DefaultImpls {
	public static fun getAllWarningsAsErrors (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions;)Z
	public static fun getApiVersion (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions;)Ljava/lang/String;
	public static fun getFreeCompilerArgs (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions;)Ljava/util/List;
	public static fun getLanguageVersion (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions;)Ljava/lang/String;
	public static fun getSuppressWarnings (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions;)Z
	public static fun getUseK2 (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions;)Z
	public static fun getVerbose (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions;)Z
	public static fun setAllWarningsAsErrors (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions;Z)V
	public static fun setApiVersion (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions;Ljava/lang/String;)V
	public static fun setFreeCompilerArgs (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions;Ljava/util/List;)V
	public static fun setLanguageVersion (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions;Ljava/lang/String;)V
	public static fun setSuppressWarnings (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions;Z)V
	public static fun setUseK2 (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions;Z)V
	public static fun setVerbose (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions;Z)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinCommonToolOptions {
	public abstract fun getAllWarningsAsErrors ()Z
	public abstract fun getFreeCompilerArgs ()Ljava/util/List;
	public abstract fun getOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerToolOptions;
	public abstract fun getSuppressWarnings ()Z
	public abstract fun getVerbose ()Z
	public abstract fun setAllWarningsAsErrors (Z)V
	public abstract fun setFreeCompilerArgs (Ljava/util/List;)V
	public abstract fun setSuppressWarnings (Z)V
	public abstract fun setVerbose (Z)V
}

public final class org/jetbrains/kotlin/gradle/dsl/KotlinCommonToolOptions$DefaultImpls {
	public static fun getAllWarningsAsErrors (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonToolOptions;)Z
	public static fun getFreeCompilerArgs (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonToolOptions;)Ljava/util/List;
	public static fun getSuppressWarnings (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonToolOptions;)Z
	public static fun getVerbose (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonToolOptions;)Z
	public static fun setAllWarningsAsErrors (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonToolOptions;Z)V
	public static fun setFreeCompilerArgs (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonToolOptions;Ljava/util/List;)V
	public static fun setSuppressWarnings (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonToolOptions;Z)V
	public static fun setVerbose (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonToolOptions;Z)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinCompile : org/gradle/api/Task {
	public abstract fun getKotlinOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions;
	public abstract fun kotlinOptions (Lkotlin/jvm/functions/Function1;)V
	public abstract fun kotlinOptions (Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/kotlin/gradle/dsl/KotlinCompile$DefaultImpls {
	public static fun kotlinOptions (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCompile;Lkotlin/jvm/functions/Function1;)V
	public static fun kotlinOptions (Lorg/jetbrains/kotlin/gradle/dsl/KotlinCompile;Lorg/gradle/api/Action;)V
}

public abstract interface annotation class org/jetbrains/kotlin/gradle/dsl/KotlinGradlePluginDsl : java/lang/annotation/Annotation {
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinHierarchyDsl {
	public abstract fun applyHierarchyTemplate (Lkotlin/jvm/functions/Function1;)V
	public abstract fun applyHierarchyTemplate (Lorg/jetbrains/kotlin/gradle/plugin/KotlinHierarchyTemplate;)V
	public abstract fun applyHierarchyTemplate (Lorg/jetbrains/kotlin/gradle/plugin/KotlinHierarchyTemplate;Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinJsCompilerOptions : org/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions {
	public abstract fun getFriendModulesDisabled ()Lorg/gradle/api/provider/Property;
	public abstract fun getMain ()Lorg/gradle/api/provider/Property;
	public abstract fun getMetaInfo ()Lorg/gradle/api/provider/Property;
	public abstract fun getModuleKind ()Lorg/gradle/api/provider/Property;
	public abstract fun getModuleName ()Lorg/gradle/api/provider/Property;
	public abstract fun getNoStdlib ()Lorg/gradle/api/provider/Property;
	public abstract fun getSourceMap ()Lorg/gradle/api/provider/Property;
	public abstract fun getSourceMapEmbedSources ()Lorg/gradle/api/provider/Property;
	public abstract fun getSourceMapNamesPolicy ()Lorg/gradle/api/provider/Property;
	public abstract fun getSourceMapPrefix ()Lorg/gradle/api/provider/Property;
	public abstract fun getTarget ()Lorg/gradle/api/provider/Property;
	public abstract fun getTypedArrays ()Lorg/gradle/api/provider/Property;
	public abstract fun getUseEsClasses ()Lorg/gradle/api/provider/Property;
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinJsDceCompilerToolOptions : org/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerToolOptions {
	public abstract fun getDevMode ()Lorg/gradle/api/provider/Property;
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinJsDceOptions : org/jetbrains/kotlin/gradle/dsl/KotlinCommonToolOptions {
	public abstract fun getDevMode ()Z
	public abstract fun getOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsDceCompilerToolOptions;
	public abstract fun setDevMode (Z)V
}

public final class org/jetbrains/kotlin/gradle/dsl/KotlinJsDceOptions$DefaultImpls {
	public static fun getAllWarningsAsErrors (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsDceOptions;)Z
	public static fun getDevMode (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsDceOptions;)Z
	public static fun getFreeCompilerArgs (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsDceOptions;)Ljava/util/List;
	public static fun getSuppressWarnings (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsDceOptions;)Z
	public static fun getVerbose (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsDceOptions;)Z
	public static fun setAllWarningsAsErrors (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsDceOptions;Z)V
	public static fun setDevMode (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsDceOptions;Z)V
	public static fun setFreeCompilerArgs (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsDceOptions;Ljava/util/List;)V
	public static fun setSuppressWarnings (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsDceOptions;Z)V
	public static fun setVerbose (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsDceOptions;Z)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinJsOptions : org/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions {
	public abstract fun getFriendModulesDisabled ()Z
	public abstract fun getMain ()Ljava/lang/String;
	public abstract fun getMetaInfo ()Z
	public abstract fun getModuleKind ()Ljava/lang/String;
	public abstract fun getModuleName ()Ljava/lang/String;
	public abstract fun getNoStdlib ()Z
	public abstract fun getOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsCompilerOptions;
	public abstract fun getSourceMap ()Z
	public abstract fun getSourceMapEmbedSources ()Ljava/lang/String;
	public abstract fun getSourceMapNamesPolicy ()Ljava/lang/String;
	public abstract fun getSourceMapPrefix ()Ljava/lang/String;
	public abstract fun getTarget ()Ljava/lang/String;
	public abstract fun getTypedArrays ()Z
	public abstract fun getUseEsClasses ()Ljava/lang/Boolean;
	public abstract fun setFriendModulesDisabled (Z)V
	public abstract fun setMain (Ljava/lang/String;)V
	public abstract fun setMetaInfo (Z)V
	public abstract fun setModuleKind (Ljava/lang/String;)V
	public abstract fun setModuleName (Ljava/lang/String;)V
	public abstract fun setNoStdlib (Z)V
	public abstract fun setSourceMap (Z)V
	public abstract fun setSourceMapEmbedSources (Ljava/lang/String;)V
	public abstract fun setSourceMapNamesPolicy (Ljava/lang/String;)V
	public abstract fun setSourceMapPrefix (Ljava/lang/String;)V
	public abstract fun setTarget (Ljava/lang/String;)V
	public abstract fun setTypedArrays (Z)V
	public abstract fun setUseEsClasses (Ljava/lang/Boolean;)V
}

public final class org/jetbrains/kotlin/gradle/dsl/KotlinJsOptions$DefaultImpls {
	public static fun getAllWarningsAsErrors (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;)Z
	public static fun getApiVersion (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;)Ljava/lang/String;
	public static fun getFreeCompilerArgs (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;)Ljava/util/List;
	public static fun getFriendModulesDisabled (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;)Z
	public static fun getLanguageVersion (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;)Ljava/lang/String;
	public static fun getMain (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;)Ljava/lang/String;
	public static fun getMetaInfo (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;)Z
	public static fun getModuleKind (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;)Ljava/lang/String;
	public static fun getModuleName (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;)Ljava/lang/String;
	public static fun getNoStdlib (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;)Z
	public static fun getSourceMap (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;)Z
	public static fun getSourceMapEmbedSources (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;)Ljava/lang/String;
	public static fun getSourceMapNamesPolicy (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;)Ljava/lang/String;
	public static fun getSourceMapPrefix (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;)Ljava/lang/String;
	public static fun getSuppressWarnings (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;)Z
	public static fun getTarget (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;)Ljava/lang/String;
	public static fun getTypedArrays (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;)Z
	public static fun getUseEsClasses (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;)Ljava/lang/Boolean;
	public static fun getUseK2 (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;)Z
	public static fun getVerbose (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;)Z
	public static fun setAllWarningsAsErrors (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;Z)V
	public static fun setApiVersion (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;Ljava/lang/String;)V
	public static fun setFreeCompilerArgs (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;Ljava/util/List;)V
	public static fun setFriendModulesDisabled (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;Z)V
	public static fun setLanguageVersion (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;Ljava/lang/String;)V
	public static fun setMain (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;Ljava/lang/String;)V
	public static fun setMetaInfo (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;Z)V
	public static fun setModuleKind (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;Ljava/lang/String;)V
	public static fun setModuleName (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;Ljava/lang/String;)V
	public static fun setNoStdlib (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;Z)V
	public static fun setSourceMap (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;Z)V
	public static fun setSourceMapEmbedSources (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;Ljava/lang/String;)V
	public static fun setSourceMapNamesPolicy (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;Ljava/lang/String;)V
	public static fun setSourceMapPrefix (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;Ljava/lang/String;)V
	public static fun setSuppressWarnings (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;Z)V
	public static fun setTarget (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;Ljava/lang/String;)V
	public static fun setTypedArrays (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;Z)V
	public static fun setUseEsClasses (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;Ljava/lang/Boolean;)V
	public static fun setUseK2 (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;Z)V
	public static fun setVerbose (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJsOptions;Z)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinJvmCompilerOptions : org/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions {
	public abstract fun getJavaParameters ()Lorg/gradle/api/provider/Property;
	public abstract fun getJvmTarget ()Lorg/gradle/api/provider/Property;
	public abstract fun getModuleName ()Lorg/gradle/api/provider/Property;
	public abstract fun getNoJdk ()Lorg/gradle/api/provider/Property;
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinJvmExtension : org/jetbrains/kotlin/gradle/dsl/HasConfigurableKotlinCompilerOptions, org/jetbrains/kotlin/gradle/dsl/KotlinBaseExtension {
	public abstract fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
}

public final class org/jetbrains/kotlin/gradle/dsl/KotlinJvmExtension$DefaultImpls {
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmExtension;Lkotlin/jvm/functions/Function1;)V
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmExtension;Lorg/gradle/api/Action;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions : org/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions {
	public abstract fun getJavaParameters ()Z
	public abstract fun getJvmTarget ()Ljava/lang/String;
	public abstract fun getModuleName ()Ljava/lang/String;
	public abstract fun getNoJdk ()Z
	public abstract fun getOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmCompilerOptions;
	public abstract fun setJavaParameters (Z)V
	public abstract fun setJvmTarget (Ljava/lang/String;)V
	public abstract fun setModuleName (Ljava/lang/String;)V
	public abstract fun setNoJdk (Z)V
}

public final class org/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions$DefaultImpls {
	public static fun getAllWarningsAsErrors (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;)Z
	public static fun getApiVersion (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;)Ljava/lang/String;
	public static fun getFreeCompilerArgs (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;)Ljava/util/List;
	public static fun getJavaParameters (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;)Z
	public static fun getJvmTarget (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;)Ljava/lang/String;
	public static fun getLanguageVersion (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;)Ljava/lang/String;
	public static fun getModuleName (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;)Ljava/lang/String;
	public static fun getNoJdk (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;)Z
	public static fun getSuppressWarnings (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;)Z
	public static fun getUseK2 (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;)Z
	public static fun getVerbose (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;)Z
	public static fun setAllWarningsAsErrors (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;Z)V
	public static fun setApiVersion (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;Ljava/lang/String;)V
	public static fun setFreeCompilerArgs (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;Ljava/util/List;)V
	public static fun setJavaParameters (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;Z)V
	public static fun setJvmTarget (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;Ljava/lang/String;)V
	public static fun setLanguageVersion (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;Ljava/lang/String;)V
	public static fun setModuleName (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;Ljava/lang/String;)V
	public static fun setNoJdk (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;Z)V
	public static fun setSuppressWarnings (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;Z)V
	public static fun setUseK2 (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;Z)V
	public static fun setVerbose (Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;Z)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformCommonCompilerOptions : org/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions {
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformCommonOptions : org/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions {
	public abstract fun getOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformCommonCompilerOptions;
}

public final class org/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformCommonOptions$DefaultImpls {
	public static fun getAllWarningsAsErrors (Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformCommonOptions;)Z
	public static fun getApiVersion (Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformCommonOptions;)Ljava/lang/String;
	public static fun getFreeCompilerArgs (Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformCommonOptions;)Ljava/util/List;
	public static fun getLanguageVersion (Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformCommonOptions;)Ljava/lang/String;
	public static fun getSuppressWarnings (Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformCommonOptions;)Z
	public static fun getUseK2 (Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformCommonOptions;)Z
	public static fun getVerbose (Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformCommonOptions;)Z
	public static fun setAllWarningsAsErrors (Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformCommonOptions;Z)V
	public static fun setApiVersion (Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformCommonOptions;Ljava/lang/String;)V
	public static fun setFreeCompilerArgs (Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformCommonOptions;Ljava/util/List;)V
	public static fun setLanguageVersion (Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformCommonOptions;Ljava/lang/String;)V
	public static fun setSuppressWarnings (Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformCommonOptions;Z)V
	public static fun setUseK2 (Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformCommonOptions;Z)V
	public static fun setVerbose (Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformCommonOptions;Z)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformSourceSetConventions {
	public abstract fun dependencies (Lorg/gradle/api/NamedDomainObjectProvider;Lkotlin/jvm/functions/Function1;)V
	public abstract fun getAndroidInstrumentedTest (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getAndroidMain (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getAndroidNativeArm32Main (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getAndroidNativeArm32Test (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getAndroidNativeArm64Main (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getAndroidNativeArm64Test (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getAndroidNativeMain (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getAndroidNativeTest (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getAndroidNativeX64Main (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getAndroidNativeX64Test (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getAndroidNativeX86Main (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getAndroidNativeX86Test (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getAndroidUnitTest (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getAppleMain (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getAppleTest (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getCommonMain (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getCommonTest (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getIosArm64Main (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getIosArm64Test (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getIosMain (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getIosSimulatorArm64Main (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getIosSimulatorArm64Test (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getIosTest (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getIosX64Main (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getIosX64Test (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getJsMain (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getJsTest (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getJvmMain (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getJvmTest (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getLinuxArm32HfpMain (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getLinuxArm32HfpTest (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getLinuxArm64Main (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getLinuxArm64Test (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getLinuxMain (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getLinuxTest (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getLinuxX64Main (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getLinuxX64Test (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getMacosArm64Main (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getMacosArm64Test (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getMacosMain (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getMacosTest (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getMacosX64Main (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getMacosX64Test (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getMingwMain (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getMingwTest (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getMingwX64Main (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getMingwX64Test (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getNativeMain (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getNativeTest (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getTvosArm64Main (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getTvosArm64Test (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getTvosMain (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getTvosSimulatorArm64Main (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getTvosSimulatorArm64Test (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getTvosTest (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getTvosX64Main (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getTvosX64Test (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getWasmJsMain (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getWasmJsTest (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getWasmWasiMain (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getWasmWasiTest (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getWatchosArm32Main (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getWatchosArm32Test (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getWatchosArm64Main (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getWatchosArm64Test (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getWatchosDeviceArm64Main (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getWatchosDeviceArm64Test (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getWatchosMain (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getWatchosSimulatorArm64Main (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getWatchosSimulatorArm64Test (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getWatchosTest (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getWatchosX64Main (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun getWatchosX64Test (Lorg/gradle/api/NamedDomainObjectContainer;)Lorg/gradle/api/NamedDomainObjectProvider;
	public abstract fun invoke (Lorg/gradle/api/NamedDomainObjectProvider;Lkotlin/jvm/functions/Function1;)V
	public abstract fun languageSettings (Lorg/gradle/api/NamedDomainObjectProvider;Lkotlin/jvm/functions/Function1;)V
}

public final class org/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformSourceSetConventions$DefaultImpls {
	public static fun dependencies (Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformSourceSetConventions;Lorg/gradle/api/NamedDomainObjectProvider;Lkotlin/jvm/functions/Function1;)V
	public static fun invoke (Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformSourceSetConventions;Lorg/gradle/api/NamedDomainObjectProvider;Lkotlin/jvm/functions/Function1;)V
	public static fun languageSettings (Lorg/jetbrains/kotlin/gradle/dsl/KotlinMultiplatformSourceSetConventions;Lorg/gradle/api/NamedDomainObjectProvider;Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinNativeArtifact : org/jetbrains/kotlin/gradle/dsl/KotlinArtifact {
	public abstract fun getBinaryOptions ()Ljava/util/Map;
	public abstract fun getKotlinOptionsFn ()Lkotlin/jvm/functions/Function1;
	public abstract fun getLinkerOptions ()Ljava/util/List;
	public abstract fun getModes ()Ljava/util/Set;
	public abstract fun getToolOptionsConfigure ()Lkotlin/jvm/functions/Function1;
	public abstract fun isStatic ()Z
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinNativeArtifactConfig : org/jetbrains/kotlin/gradle/dsl/KotlinArtifactConfig {
	public abstract fun binaryOption (Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun getLinkerOptions ()Ljava/util/List;
	public abstract fun getModes ()Ljava/util/Set;
	public abstract fun isStatic ()Z
	public abstract fun kotlinOptions (Lorg/gradle/api/Action;)V
	public abstract fun modes ([Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;)V
	public abstract fun setLinkerOptions (Ljava/util/List;)V
	public abstract fun setModes (Ljava/util/Set;)V
	public abstract fun setStatic (Z)V
	public abstract fun toolOptions (Lorg/gradle/api/Action;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinNativeArtifactDSL {
	public abstract fun FatFramework (Ljava/lang/String;Lorg/gradle/api/Action;)V
	public abstract fun FatFramework (Lorg/gradle/api/Action;)V
	public abstract fun Framework (Ljava/lang/String;Lorg/gradle/api/Action;)V
	public abstract fun Framework (Lorg/gradle/api/Action;)V
	public abstract fun Library (Ljava/lang/String;Lorg/gradle/api/Action;)V
	public abstract fun Library (Lorg/gradle/api/Action;)V
	public abstract fun XCFramework (Ljava/lang/String;Lorg/gradle/api/Action;)V
	public abstract fun XCFramework (Lorg/gradle/api/Action;)V
}

public abstract interface annotation class org/jetbrains/kotlin/gradle/dsl/KotlinNativeArtifactDSL$ExperimentalArtifactDsl : java/lang/annotation/Annotation {
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinNativeCompilerOptions : org/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions {
	public abstract fun getModuleName ()Lorg/gradle/api/provider/Property;
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinNativeFatFramework : org/jetbrains/kotlin/gradle/dsl/KotlinNativeArtifact {
	public abstract fun getEmbedBitcode ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
	public abstract fun getTargets ()Ljava/util/Set;
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinNativeFatFrameworkConfig : org/jetbrains/kotlin/gradle/dsl/KotlinNativeArtifactConfig {
	public abstract fun getEmbedBitcode ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
	public abstract fun getTargets ()Ljava/util/Set;
	public abstract fun setEmbedBitcode (Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;)V
	public abstract fun setTargets (Ljava/util/Set;)V
	public abstract fun targets ([Lorg/jetbrains/kotlin/konan/target/KonanTarget;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinNativeFramework : org/jetbrains/kotlin/gradle/dsl/KotlinNativeArtifact {
	public abstract fun getEmbedBitcode ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
	public abstract fun getTarget ()Lorg/jetbrains/kotlin/konan/target/KonanTarget;
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinNativeFrameworkConfig : org/jetbrains/kotlin/gradle/dsl/KotlinNativeArtifactConfig {
	public abstract fun getEmbedBitcode ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
	public abstract fun getTarget ()Lorg/jetbrains/kotlin/konan/target/KonanTarget;
	public abstract fun setEmbedBitcode (Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;)V
	public abstract fun setTarget (Lorg/jetbrains/kotlin/konan/target/KonanTarget;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinNativeLibrary : org/jetbrains/kotlin/gradle/dsl/KotlinNativeArtifact {
	public abstract fun getTarget ()Lorg/jetbrains/kotlin/konan/target/KonanTarget;
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinNativeLibraryConfig : org/jetbrains/kotlin/gradle/dsl/KotlinNativeArtifactConfig {
	public abstract fun getTarget ()Lorg/jetbrains/kotlin/konan/target/KonanTarget;
	public abstract fun setTarget (Lorg/jetbrains/kotlin/konan/target/KonanTarget;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinNativeXCFramework : org/jetbrains/kotlin/gradle/dsl/KotlinNativeArtifact {
	public abstract fun getEmbedBitcode ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
	public abstract fun getTargets ()Ljava/util/Set;
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinNativeXCFrameworkConfig : org/jetbrains/kotlin/gradle/dsl/KotlinNativeArtifactConfig {
	public abstract fun getEmbedBitcode ()Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
	public abstract fun getTargets ()Ljava/util/Set;
	public abstract fun setEmbedBitcode (Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;)V
	public abstract fun setTargets (Ljava/util/Set;)V
	public abstract fun targets ([Lorg/jetbrains/kotlin/konan/target/KonanTarget;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinTargetHierarchyDsl {
	public abstract fun apply (Lorg/jetbrains/kotlin/gradle/plugin/KotlinHierarchyTemplate;Lkotlin/jvm/functions/Function1;)V
	public abstract fun custom (Lkotlin/jvm/functions/Function1;)V
	public abstract fun default (Lkotlin/jvm/functions/Function1;)V
}

public final class org/jetbrains/kotlin/gradle/dsl/KotlinTargetHierarchyDsl$DefaultImpls {
	public static synthetic fun apply$default (Lorg/jetbrains/kotlin/gradle/dsl/KotlinTargetHierarchyDsl;Lorg/jetbrains/kotlin/gradle/plugin/KotlinHierarchyTemplate;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun default$default (Lorg/jetbrains/kotlin/gradle/dsl/KotlinTargetHierarchyDsl;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinTopLevelExtension : org/jetbrains/kotlin/gradle/dsl/KotlinTopLevelExtensionConfig, org/jetbrains/kotlin/gradle/plugin/KotlinSourceSetContainer {
	public abstract fun getCompilerVersion ()Lorg/gradle/api/provider/Property;
	public abstract synthetic fun getKotlinDaemonJvmArgs ()Ljava/util/List;
	public abstract fun invokeWhenCreated (Lorg/gradle/api/NamedDomainObjectContainer;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public abstract fun jvmToolchain (I)V
	public abstract fun jvmToolchain (Lorg/gradle/api/Action;)V
	public abstract fun setKotlinDaemonJvmArgs (Ljava/util/List;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/dsl/KotlinTopLevelExtensionConfig {
	public abstract fun explicitApi ()V
	public abstract fun explicitApiWarning ()V
	public abstract fun getCoreLibrariesVersion ()Ljava/lang/String;
	public abstract fun getExplicitApi ()Lorg/jetbrains/kotlin/gradle/dsl/ExplicitApiMode;
	public abstract fun setCoreLibrariesVersion (Ljava/lang/String;)V
	public abstract fun setExplicitApi (Lorg/jetbrains/kotlin/gradle/dsl/ExplicitApiMode;)V
}

public final class org/jetbrains/kotlin/gradle/dsl/KotlinVersion : java/lang/Enum {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/dsl/KotlinVersion$Companion;
	public static final field KOTLIN_1_0 Lorg/jetbrains/kotlin/gradle/dsl/KotlinVersion;
	public static final field KOTLIN_1_1 Lorg/jetbrains/kotlin/gradle/dsl/KotlinVersion;
	public static final field KOTLIN_1_2 Lorg/jetbrains/kotlin/gradle/dsl/KotlinVersion;
	public static final field KOTLIN_1_3 Lorg/jetbrains/kotlin/gradle/dsl/KotlinVersion;
	public static final field KOTLIN_1_4 Lorg/jetbrains/kotlin/gradle/dsl/KotlinVersion;
	public static final field KOTLIN_1_5 Lorg/jetbrains/kotlin/gradle/dsl/KotlinVersion;
	public static final field KOTLIN_1_6 Lorg/jetbrains/kotlin/gradle/dsl/KotlinVersion;
	public static final field KOTLIN_1_7 Lorg/jetbrains/kotlin/gradle/dsl/KotlinVersion;
	public static final field KOTLIN_1_8 Lorg/jetbrains/kotlin/gradle/dsl/KotlinVersion;
	public static final field KOTLIN_1_9 Lorg/jetbrains/kotlin/gradle/dsl/KotlinVersion;
	public static final field KOTLIN_2_0 Lorg/jetbrains/kotlin/gradle/dsl/KotlinVersion;
	public static final field KOTLIN_2_1 Lorg/jetbrains/kotlin/gradle/dsl/KotlinVersion;
	public static final field KOTLIN_2_2 Lorg/jetbrains/kotlin/gradle/dsl/KotlinVersion;
	public static final field KOTLIN_2_3 Lorg/jetbrains/kotlin/gradle/dsl/KotlinVersion;
	public static final fun fromVersion (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/KotlinVersion;
	public static final fun getDEFAULT ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinVersion;
	public final fun getVersion ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/KotlinVersion;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/dsl/KotlinVersion;
}

public final class org/jetbrains/kotlin/gradle/dsl/KotlinVersion$Companion {
	public final fun fromVersion (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/KotlinVersion;
	public final fun getDEFAULT ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinVersion;
}

public final class org/jetbrains/kotlin/gradle/dsl/jvm/JvmTargetValidationMode : java/lang/Enum {
	public static final field ERROR Lorg/jetbrains/kotlin/gradle/dsl/jvm/JvmTargetValidationMode;
	public static final field IGNORE Lorg/jetbrains/kotlin/gradle/dsl/jvm/JvmTargetValidationMode;
	public static final field WARNING Lorg/jetbrains/kotlin/gradle/dsl/jvm/JvmTargetValidationMode;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/dsl/jvm/JvmTargetValidationMode;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/dsl/jvm/JvmTargetValidationMode;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/CInteropSettings : org/gradle/api/Named {
	public abstract fun compilerOpts (Ljava/util/List;)V
	public abstract fun compilerOpts ([Ljava/lang/String;)V
	public abstract fun defFile (Ljava/lang/Object;)V
	public abstract fun extraOpts (Ljava/util/List;)V
	public abstract fun extraOpts ([Ljava/lang/Object;)V
	public abstract fun getDependencyFiles ()Lorg/gradle/api/file/FileCollection;
	public abstract fun header (Ljava/lang/Object;)V
	public abstract fun headers (Lorg/gradle/api/file/FileCollection;)V
	public abstract fun headers ([Ljava/lang/Object;)V
	public abstract fun includeDirs (Lkotlin/jvm/functions/Function1;)V
	public abstract fun includeDirs (Lorg/gradle/api/Action;)V
	public abstract fun includeDirs ([Ljava/lang/Object;)V
	public abstract fun linkerOpts (Ljava/util/List;)V
	public abstract fun linkerOpts ([Ljava/lang/String;)V
	public abstract fun packageName (Ljava/lang/String;)V
	public abstract fun setDependencyFiles (Lorg/gradle/api/file/FileCollection;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/CInteropSettings$DefaultImpls {
	public static fun header (Lorg/jetbrains/kotlin/gradle/plugin/CInteropSettings;Ljava/lang/Object;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/CInteropSettings$IncludeDirectories {
	public abstract fun allHeaders (Ljava/util/Collection;)V
	public abstract fun allHeaders ([Ljava/lang/Object;)V
	public abstract fun headerFilterOnly (Ljava/util/Collection;)V
	public abstract fun headerFilterOnly ([Ljava/lang/Object;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/ClasspathTestRunSourceSupport {
	public abstract fun setExecutionSourceFrom (Lorg/gradle/api/file/FileCollection;Lorg/gradle/api/file/FileCollection;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/CompilationExecutionSource : org/jetbrains/kotlin/gradle/plugin/KotlinExecution$ExecutionSource {
	public abstract fun getCompilation ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/CompilationExecutionSourceSupport {
	public abstract fun setExecutionSourceFrom (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationToRunnableFiles;)V
}

public class org/jetbrains/kotlin/gradle/plugin/CompilerPluginConfig {
	public fun <init> ()V
	public final fun addPluginArgument (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/SubpluginOption;)V
	public final fun allOptions ()Ljava/util/Map;
	public final fun getAsTaskInputArgs ()Ljava/util/Map;
	protected final fun getOptionsByPluginId ()Ljava/util/Map;
}

public final class org/jetbrains/kotlin/gradle/plugin/CompositeSubpluginOption : org/jetbrains/kotlin/gradle/plugin/SubpluginOption {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
	public fun <init> (Ljava/lang/String;Lkotlin/Lazy;Ljava/util/List;)V
	public final fun getOriginalOptions ()Ljava/util/List;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/ExecutionTaskHolder {
	public abstract fun getExecutionTask ()Lorg/gradle/api/tasks/TaskProvider;
}

public final class org/jetbrains/kotlin/gradle/plugin/FilesOptionKind : java/lang/Enum {
	public static final field INTERNAL Lorg/jetbrains/kotlin/gradle/plugin/FilesOptionKind;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/FilesOptionKind;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/plugin/FilesOptionKind;
}

public final class org/jetbrains/kotlin/gradle/plugin/FilesSubpluginOption : org/jetbrains/kotlin/gradle/plugin/SubpluginOption {
	public fun <init> (Ljava/lang/String;Ljava/lang/Iterable;Lorg/jetbrains/kotlin/gradle/plugin/FilesOptionKind;Lkotlin/Lazy;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Iterable;Lorg/jetbrains/kotlin/gradle/plugin/FilesOptionKind;Lkotlin/Lazy;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/util/List;Lorg/jetbrains/kotlin/gradle/plugin/FilesOptionKind;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/List;Lorg/jetbrains/kotlin/gradle/plugin/FilesOptionKind;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getFiles ()Ljava/lang/Iterable;
	public final fun getKind ()Lorg/jetbrains/kotlin/gradle/plugin/FilesOptionKind;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/HasCompilerOptions {
	public abstract fun configure (Lkotlin/jvm/functions/Function1;)V
	public abstract fun configure (Lorg/gradle/api/Action;)V
	public abstract fun getOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions;
}

public final class org/jetbrains/kotlin/gradle/plugin/HasCompilerOptions$DefaultImpls {
	public static fun configure (Lorg/jetbrains/kotlin/gradle/plugin/HasCompilerOptions;Lkotlin/jvm/functions/Function1;)V
	public static fun configure (Lorg/jetbrains/kotlin/gradle/plugin/HasCompilerOptions;Lorg/gradle/api/Action;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/HasKotlinDependencies {
	public abstract fun dependencies (Lkotlin/jvm/functions/Function1;)V
	public abstract fun dependencies (Lorg/gradle/api/Action;)V
	public abstract fun getApiConfigurationName ()Ljava/lang/String;
	public abstract fun getCompileOnlyConfigurationName ()Ljava/lang/String;
	public abstract fun getImplementationConfigurationName ()Ljava/lang/String;
	public abstract fun getRuntimeOnlyConfigurationName ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/HasKotlinDependenciesKt {
	public static final fun warnNpmGenerateExternals (Lorg/gradle/api/logging/Logger;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/HasProject {
	public abstract fun getProject ()Lorg/gradle/api/Project;
}

public class org/jetbrains/kotlin/gradle/plugin/InternalSubpluginOption : org/jetbrains/kotlin/gradle/plugin/SubpluginOption {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/JetBrainsSubpluginArtifact : org/jetbrains/kotlin/gradle/plugin/SubpluginArtifact {
	public fun <init> (Ljava/lang/String;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/JvmClasspathTestRunSource : org/jetbrains/kotlin/gradle/plugin/KotlinExecution$ExecutionSource {
	public abstract fun getClasspath ()Lorg/gradle/api/file/FileCollection;
	public abstract fun getTestClassesDirs ()Lorg/gradle/api/file/FileCollection;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinBasePlugin : org/gradle/api/Plugin {
	public abstract fun getPluginVersion ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinCompilation : org/gradle/api/Named, org/gradle/api/attributes/HasAttributes, org/jetbrains/kotlin/gradle/plugin/HasKotlinDependencies, org/jetbrains/kotlin/gradle/plugin/HasProject, org/jetbrains/kotlin/tooling/core/HasMutableExtras {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation$Companion;
	public static final field MAIN_COMPILATION_NAME Ljava/lang/String;
	public static final field TEST_COMPILATION_NAME Ljava/lang/String;
	public abstract fun associateWith (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;)V
	public abstract fun attributes (Lkotlin/jvm/functions/Function1;)V
	public abstract fun attributes (Lorg/gradle/api/Action;)V
	public abstract fun defaultSourceSet (Lkotlin/jvm/functions/Function1;)V
	public abstract fun defaultSourceSet (Lorg/gradle/api/Action;)V
	public abstract fun getAllAssociatedCompilations ()Ljava/util/Set;
	public abstract fun getAllKotlinSourceSets ()Ljava/util/Set;
	public abstract fun getAssociateWith ()Ljava/util/List;
	public abstract fun getAssociatedCompilations ()Ljava/util/Set;
	public abstract fun getCompilationName ()Ljava/lang/String;
	public abstract fun getCompileAllTaskName ()Ljava/lang/String;
	public abstract fun getCompileDependencyConfigurationName ()Ljava/lang/String;
	public abstract fun getCompileDependencyFiles ()Lorg/gradle/api/file/FileCollection;
	public abstract fun getCompileKotlinTask ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCompile;
	public abstract fun getCompileKotlinTaskName ()Ljava/lang/String;
	public abstract fun getCompileKotlinTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public abstract fun getCompileTaskProvider ()Lorg/gradle/api/tasks/TaskProvider;
	public abstract fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/plugin/HasCompilerOptions;
	public abstract fun getDefaultSourceSet ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet;
	public abstract fun getDefaultSourceSetName ()Ljava/lang/String;
	public abstract fun getDisambiguatedName ()Ljava/lang/String;
	public abstract fun getKotlinOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonOptions;
	public abstract fun getKotlinSourceSets ()Ljava/util/Set;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getOutput ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationOutput;
	public abstract fun getPlatformType ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;
	public abstract fun getRuntimeDependencyConfigurationName ()Ljava/lang/String;
	public abstract fun getRuntimeDependencyFiles ()Lorg/gradle/api/file/FileCollection;
	public abstract fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
	public abstract fun kotlinOptions (Lkotlin/jvm/functions/Function1;)V
	public abstract fun kotlinOptions (Lorg/gradle/api/Action;)V
	public abstract fun setCompileDependencyFiles (Lorg/gradle/api/file/FileCollection;)V
	public abstract fun source (Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinCompilation$Companion {
	public static final field MAIN_COMPILATION_NAME Ljava/lang/String;
	public static final field TEST_COMPILATION_NAME Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinCompilation$DefaultImpls {
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;Lkotlin/jvm/functions/Function1;)V
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;Lorg/gradle/api/Action;)V
	public static fun defaultSourceSet (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;Lorg/gradle/api/Action;)V
	public static fun getAssociateWith (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;)Ljava/util/List;
	public static fun getDefaultSourceSetName (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;)Ljava/lang/String;
	public static fun getDisambiguatedName (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;)Ljava/lang/String;
	public static fun getName (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;)Ljava/lang/String;
	public static fun getPlatformType (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;
	public static fun kotlinOptions (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;Lkotlin/jvm/functions/Function1;)V
	public static fun kotlinOptions (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinCompilationKt {
	public static final fun getRuntimeDependencyConfigurationName (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;)Ljava/lang/String;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinCompilationOutput {
	public abstract fun getAllOutputs ()Lorg/gradle/api/file/FileCollection;
	public abstract fun getClassesDirs ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getResourcesDir ()Ljava/io/File;
	public abstract fun getResourcesDirProvider ()Ljava/lang/Object;
	public abstract fun setResourcesDirProvider (Ljava/lang/Object;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinCompilationToRunnableFiles : org/jetbrains/kotlin/gradle/plugin/KotlinCompilation {
	public abstract fun getRuntimeDependencyConfigurationName ()Ljava/lang/String;
	public abstract fun getRuntimeDependencyFiles ()Lorg/gradle/api/file/FileCollection;
	public abstract fun setRuntimeDependencyFiles (Lorg/gradle/api/file/FileCollection;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinCompilationToRunnableFiles$DefaultImpls {
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationToRunnableFiles;Lkotlin/jvm/functions/Function1;)V
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationToRunnableFiles;Lorg/gradle/api/Action;)V
	public static fun defaultSourceSet (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationToRunnableFiles;Lorg/gradle/api/Action;)V
	public static fun getAssociateWith (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationToRunnableFiles;)Ljava/util/List;
	public static fun getDefaultSourceSetName (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationToRunnableFiles;)Ljava/lang/String;
	public static fun getDisambiguatedName (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationToRunnableFiles;)Ljava/lang/String;
	public static fun getName (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationToRunnableFiles;)Ljava/lang/String;
	public static fun getPlatformType (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationToRunnableFiles;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;
	public static fun kotlinOptions (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationToRunnableFiles;Lkotlin/jvm/functions/Function1;)V
	public static fun kotlinOptions (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationToRunnableFiles;Lorg/gradle/api/Action;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinCompilationWithResources : org/jetbrains/kotlin/gradle/plugin/KotlinCompilation {
	public abstract fun getProcessResourcesTaskName ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinCompilationWithResources$DefaultImpls {
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationWithResources;Lkotlin/jvm/functions/Function1;)V
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationWithResources;Lorg/gradle/api/Action;)V
	public static fun defaultSourceSet (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationWithResources;Lorg/gradle/api/Action;)V
	public static fun getAssociateWith (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationWithResources;)Ljava/util/List;
	public static fun getDefaultSourceSetName (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationWithResources;)Ljava/lang/String;
	public static fun getDisambiguatedName (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationWithResources;)Ljava/lang/String;
	public static fun getName (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationWithResources;)Ljava/lang/String;
	public static fun getPlatformType (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationWithResources;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;
	public static fun kotlinOptions (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationWithResources;Lkotlin/jvm/functions/Function1;)V
	public static fun kotlinOptions (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilationWithResources;Lorg/gradle/api/Action;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinCompilerPluginSupportPlugin : org/gradle/api/Plugin {
	public abstract fun apply (Lorg/gradle/api/Project;)V
	public abstract fun applyToCompilation (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;)Lorg/gradle/api/provider/Provider;
	public abstract fun getCompilerPluginId ()Ljava/lang/String;
	public abstract fun getPluginArtifact ()Lorg/jetbrains/kotlin/gradle/plugin/SubpluginArtifact;
	public abstract fun getPluginArtifactForNative ()Lorg/jetbrains/kotlin/gradle/plugin/SubpluginArtifact;
	public abstract fun isApplicable (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilation;)Z
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinCompilerPluginSupportPlugin$DefaultImpls {
	public static fun apply (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerPluginSupportPlugin;Lorg/gradle/api/Project;)V
	public static fun getPluginArtifactForNative (Lorg/jetbrains/kotlin/gradle/plugin/KotlinCompilerPluginSupportPlugin;)Lorg/jetbrains/kotlin/gradle/plugin/SubpluginArtifact;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler : org/jetbrains/kotlin/gradle/plugin/HasProject {
	public abstract fun api (Ljava/lang/Object;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun api (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/artifacts/ExternalModuleDependency;
	public abstract fun api (Ljava/lang/String;Lorg/gradle/api/Action;)Lorg/gradle/api/artifacts/ExternalModuleDependency;
	public abstract fun api (Lorg/gradle/api/artifacts/Dependency;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun api (Lorg/gradle/api/artifacts/Dependency;Lorg/gradle/api/Action;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun compileOnly (Ljava/lang/Object;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun compileOnly (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/artifacts/ExternalModuleDependency;
	public abstract fun compileOnly (Ljava/lang/String;Lorg/gradle/api/Action;)Lorg/gradle/api/artifacts/ExternalModuleDependency;
	public abstract fun compileOnly (Lorg/gradle/api/artifacts/Dependency;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun compileOnly (Lorg/gradle/api/artifacts/Dependency;Lorg/gradle/api/Action;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun devNpm (Ljava/io/File;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun devNpm (Ljava/lang/String;Ljava/io/File;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun devNpm (Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun enforcedPlatform (Ljava/lang/Object;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun enforcedPlatform (Ljava/lang/Object;Lorg/gradle/api/Action;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun implementation (Ljava/lang/Object;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun implementation (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/artifacts/ExternalModuleDependency;
	public abstract fun implementation (Ljava/lang/String;Lorg/gradle/api/Action;)Lorg/gradle/api/artifacts/ExternalModuleDependency;
	public abstract fun implementation (Lorg/gradle/api/artifacts/Dependency;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun implementation (Lorg/gradle/api/artifacts/Dependency;Lorg/gradle/api/Action;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun kotlin (Ljava/lang/String;)Lorg/gradle/api/artifacts/ExternalModuleDependency;
	public abstract fun kotlin (Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/artifacts/ExternalModuleDependency;
	public abstract fun npm (Ljava/io/File;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun npm (Ljava/io/File;Z)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun npm (Ljava/lang/String;Ljava/io/File;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun npm (Ljava/lang/String;Ljava/io/File;Z)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun npm (Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun npm (Ljava/lang/String;Ljava/lang/String;Z)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun optionalNpm (Ljava/io/File;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun optionalNpm (Ljava/io/File;Z)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun optionalNpm (Ljava/lang/String;Ljava/io/File;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun optionalNpm (Ljava/lang/String;Ljava/io/File;Z)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun optionalNpm (Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun optionalNpm (Ljava/lang/String;Ljava/lang/String;Z)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun peerNpm (Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun platform (Ljava/lang/Object;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun platform (Ljava/lang/Object;Lorg/gradle/api/Action;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun project (Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/artifacts/ProjectDependency;
	public abstract fun project (Ljava/util/Map;)Lorg/gradle/api/artifacts/ProjectDependency;
	public abstract fun runtimeOnly (Ljava/lang/Object;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun runtimeOnly (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/artifacts/ExternalModuleDependency;
	public abstract fun runtimeOnly (Ljava/lang/String;Lorg/gradle/api/Action;)Lorg/gradle/api/artifacts/ExternalModuleDependency;
	public abstract fun runtimeOnly (Lorg/gradle/api/artifacts/Dependency;Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/artifacts/Dependency;
	public abstract fun runtimeOnly (Lorg/gradle/api/artifacts/Dependency;Lorg/gradle/api/Action;)Lorg/gradle/api/artifacts/Dependency;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler$DefaultImpls {
	public static fun api (Lorg/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler;Ljava/lang/String;Lorg/gradle/api/Action;)Lorg/gradle/api/artifacts/ExternalModuleDependency;
	public static fun api (Lorg/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler;Lorg/gradle/api/artifacts/Dependency;Lorg/gradle/api/Action;)Lorg/gradle/api/artifacts/Dependency;
	public static fun compileOnly (Lorg/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler;Ljava/lang/String;Lorg/gradle/api/Action;)Lorg/gradle/api/artifacts/ExternalModuleDependency;
	public static fun compileOnly (Lorg/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler;Lorg/gradle/api/artifacts/Dependency;Lorg/gradle/api/Action;)Lorg/gradle/api/artifacts/Dependency;
	public static fun enforcedPlatform (Lorg/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler;Ljava/lang/Object;)Lorg/gradle/api/artifacts/Dependency;
	public static fun enforcedPlatform (Lorg/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler;Ljava/lang/Object;Lorg/gradle/api/Action;)Lorg/gradle/api/artifacts/Dependency;
	public static fun implementation (Lorg/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler;Ljava/lang/String;Lorg/gradle/api/Action;)Lorg/gradle/api/artifacts/ExternalModuleDependency;
	public static fun implementation (Lorg/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler;Lorg/gradle/api/artifacts/Dependency;Lorg/gradle/api/Action;)Lorg/gradle/api/artifacts/Dependency;
	public static fun kotlin (Lorg/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler;Ljava/lang/String;)Lorg/gradle/api/artifacts/ExternalModuleDependency;
	public static fun npm (Lorg/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler;Ljava/io/File;Z)Lorg/gradle/api/artifacts/Dependency;
	public static fun npm (Lorg/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler;Ljava/lang/String;Ljava/io/File;Z)Lorg/gradle/api/artifacts/Dependency;
	public static fun npm (Lorg/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler;Ljava/lang/String;Ljava/lang/String;Z)Lorg/gradle/api/artifacts/Dependency;
	public static fun optionalNpm (Lorg/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler;Ljava/io/File;Z)Lorg/gradle/api/artifacts/Dependency;
	public static fun optionalNpm (Lorg/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler;Ljava/lang/String;Ljava/io/File;Z)Lorg/gradle/api/artifacts/Dependency;
	public static fun optionalNpm (Lorg/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler;Ljava/lang/String;Ljava/lang/String;Z)Lorg/gradle/api/artifacts/Dependency;
	public static fun platform (Lorg/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler;Ljava/lang/Object;)Lorg/gradle/api/artifacts/Dependency;
	public static fun platform (Lorg/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler;Ljava/lang/Object;Lorg/gradle/api/Action;)Lorg/gradle/api/artifacts/Dependency;
	public static fun project (Lorg/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler;Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/artifacts/ProjectDependency;
	public static synthetic fun project$default (Lorg/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lorg/gradle/api/artifacts/ProjectDependency;
	public static fun runtimeOnly (Lorg/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler;Ljava/lang/String;Lorg/gradle/api/Action;)Lorg/gradle/api/artifacts/ExternalModuleDependency;
	public static fun runtimeOnly (Lorg/jetbrains/kotlin/gradle/plugin/KotlinDependencyHandler;Lorg/gradle/api/artifacts/Dependency;Lorg/gradle/api/Action;)Lorg/gradle/api/artifacts/Dependency;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinExecution : org/gradle/api/Named {
	public abstract fun getExecutionSource ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinExecution$ExecutionSource;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinExecution$ExecutionSource {
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinGradlePluginExtensionPoint {
	public abstract fun get (Lorg/gradle/api/Project;)Ljava/util/List;
	public abstract fun register (Lorg/gradle/api/Project;Ljava/lang/Object;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinGradleSubplugin {
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinHierarchyBuilder {
	public abstract fun common (Lkotlin/jvm/functions/Function1;)V
	public abstract fun excludeCompilations (Lkotlin/jvm/functions/Function1;)V
	public abstract fun filterCompilations (Lkotlin/jvm/functions/Function1;)V
	public abstract fun group (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public abstract fun withAndroid ()V
	public abstract fun withAndroidNative ()V
	public abstract fun withAndroidNativeArm32 ()V
	public abstract fun withAndroidNativeArm64 ()V
	public abstract fun withAndroidNativeX64 ()V
	public abstract fun withAndroidNativeX86 ()V
	public abstract fun withAndroidTarget ()V
	public abstract fun withApple ()V
	public abstract fun withCompilations (Lkotlin/jvm/functions/Function1;)V
	public abstract fun withIos ()V
	public abstract fun withIosArm32 ()V
	public abstract fun withIosArm64 ()V
	public abstract fun withIosSimulatorArm64 ()V
	public abstract fun withIosX64 ()V
	public abstract fun withJs ()V
	public abstract fun withJvm ()V
	public abstract fun withLinux ()V
	public abstract fun withLinuxArm32Hfp ()V
	public abstract fun withLinuxArm64 ()V
	public abstract fun withLinuxMips32 ()V
	public abstract fun withLinuxMipsel32 ()V
	public abstract fun withLinuxX64 ()V
	public abstract fun withMacos ()V
	public abstract fun withMacosArm64 ()V
	public abstract fun withMacosX64 ()V
	public abstract fun withMingw ()V
	public abstract fun withMingwX64 ()V
	public abstract fun withMingwX86 ()V
	public abstract fun withNative ()V
	public abstract fun withTvos ()V
	public abstract fun withTvosArm64 ()V
	public abstract fun withTvosSimulatorArm64 ()V
	public abstract fun withTvosX64 ()V
	public abstract fun withWasm ()V
	public abstract fun withWasm32 ()V
	public abstract fun withWasmJs ()V
	public abstract fun withWasmWasi ()V
	public abstract fun withWatchos ()V
	public abstract fun withWatchosArm32 ()V
	public abstract fun withWatchosArm64 ()V
	public abstract fun withWatchosDeviceArm64 ()V
	public abstract fun withWatchosSimulatorArm64 ()V
	public abstract fun withWatchosX64 ()V
	public abstract fun withWatchosX86 ()V
	public abstract fun withoutCompilations (Lkotlin/jvm/functions/Function1;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinHierarchyBuilder$DefaultImpls {
	public static fun common (Lorg/jetbrains/kotlin/gradle/plugin/KotlinHierarchyBuilder;Lkotlin/jvm/functions/Function1;)V
	public static fun filterCompilations (Lorg/jetbrains/kotlin/gradle/plugin/KotlinHierarchyBuilder;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun group$default (Lorg/jetbrains/kotlin/gradle/plugin/KotlinHierarchyBuilder;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static fun withoutCompilations (Lorg/jetbrains/kotlin/gradle/plugin/KotlinHierarchyBuilder;Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinHierarchyBuilder$Root : org/jetbrains/kotlin/gradle/plugin/KotlinHierarchyBuilder {
	public abstract fun excludeSourceSetTree ([Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSetTree;)V
	public abstract fun sourceSetTrees ([Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSetTree;)V
	public abstract fun withSourceSetTree ([Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSetTree;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinHierarchyBuilder$Root$DefaultImpls {
	public static fun common (Lorg/jetbrains/kotlin/gradle/plugin/KotlinHierarchyBuilder$Root;Lkotlin/jvm/functions/Function1;)V
	public static fun filterCompilations (Lorg/jetbrains/kotlin/gradle/plugin/KotlinHierarchyBuilder$Root;Lkotlin/jvm/functions/Function1;)V
	public static fun withoutCompilations (Lorg/jetbrains/kotlin/gradle/plugin/KotlinHierarchyBuilder$Root;Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinHierarchyTemplate {
	public static final field Templates Lorg/jetbrains/kotlin/gradle/plugin/KotlinHierarchyTemplate$Templates;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinHierarchyTemplate$Templates {
	public final fun getDefault ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinHierarchyTemplate;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinHierarchyTemplateKt {
	public static final fun KotlinHierarchyTemplate (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinHierarchyTemplate;
	public static final fun extend (Lorg/jetbrains/kotlin/gradle/plugin/KotlinHierarchyTemplate;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinHierarchyTemplate;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType : java/lang/Enum {
	public static final field BOTH Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType$Companion;
	public static final field IR Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;
	public static final field LEGACY Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;
	public static final field jsCompilerProperty Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType$Companion {
	public final fun byArgument (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;
	public final fun byArgumentOrNull (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerTypeHolder {
	public abstract synthetic fun getBOTH ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;
	public abstract fun getCompilerTypeFromProperties ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;
	public abstract fun getDefaultJsCompilerType ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;
	public abstract fun getIR ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;
	public abstract synthetic fun getLEGACY ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerTypeHolder$DefaultImpls {
	public static synthetic fun getBOTH (Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerTypeHolder;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;
	public static fun getDefaultJsCompilerType (Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerTypeHolder;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;
	public static fun getIR (Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerTypeHolder;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;
	public static synthetic fun getLEGACY (Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerTypeHolder;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerTypeKt {
	public static final fun getLowerName (Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;)Ljava/lang/String;
	public static final fun removeJsCompilerSuffix (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/plugin/KotlinJsCompilerType;)Ljava/lang/String;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinJvmFactory {
	public abstract fun addCompilerPluginDependency (Lorg/gradle/api/provider/Provider;)V
	public abstract fun createCompilerJvmOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmCompilerOptions;
	public abstract fun createKotlinAndroidExtension ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinAndroidExtension;
	public abstract fun createKotlinJvmExtension ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmExtension;
	public abstract fun createKotlinJvmOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmOptions;
	public abstract fun getCompilerPlugins ()Lorg/gradle/api/file/FileCollection;
	public abstract fun getKaptExtension ()Lorg/jetbrains/kotlin/gradle/dsl/KaptExtensionConfig;
	public abstract fun getKotlinExtension ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinTopLevelExtensionConfig;
	public abstract fun getProviderFactory ()Lorg/gradle/api/provider/ProviderFactory;
	public abstract fun registerKaptGenerateStubsTask (Ljava/lang/String;)Lorg/gradle/api/tasks/TaskProvider;
	public abstract fun registerKaptGenerateStubsTask (Ljava/lang/String;Lorg/gradle/api/tasks/TaskProvider;Lorg/jetbrains/kotlin/gradle/dsl/KaptExtensionConfig;Lorg/gradle/api/provider/Provider;)Lorg/gradle/api/tasks/TaskProvider;
	public abstract fun registerKaptTask (Ljava/lang/String;)Lorg/gradle/api/tasks/TaskProvider;
	public abstract fun registerKaptTask (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/dsl/KaptExtensionConfig;)Lorg/gradle/api/tasks/TaskProvider;
	public abstract fun registerKotlinJvmCompileTask (Ljava/lang/String;)Lorg/gradle/api/tasks/TaskProvider;
	public abstract fun registerKotlinJvmCompileTask (Ljava/lang/String;Ljava/lang/String;)Lorg/gradle/api/tasks/TaskProvider;
	public abstract fun registerKotlinJvmCompileTask (Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmCompilerOptions;Lorg/gradle/api/provider/Provider;)Lorg/gradle/api/tasks/TaskProvider;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinJvmFactory$DefaultImpls {
	public static synthetic fun registerKaptGenerateStubsTask$default (Lorg/jetbrains/kotlin/gradle/plugin/KotlinJvmFactory;Ljava/lang/String;Lorg/gradle/api/tasks/TaskProvider;Lorg/jetbrains/kotlin/gradle/dsl/KaptExtensionConfig;Lorg/gradle/api/provider/Provider;ILjava/lang/Object;)Lorg/gradle/api/tasks/TaskProvider;
	public static synthetic fun registerKotlinJvmCompileTask$default (Lorg/jetbrains/kotlin/gradle/plugin/KotlinJvmFactory;Ljava/lang/String;Lorg/jetbrains/kotlin/gradle/dsl/KotlinJvmCompilerOptions;Lorg/gradle/api/provider/Provider;ILjava/lang/Object;)Lorg/gradle/api/tasks/TaskProvider;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinPlatformType : java/lang/Enum, java/io/Serializable, org/gradle/api/Named {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType$Companion;
	public static final field androidJvm Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;
	public static final field common Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;
	public static final field js Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;
	public static final field jvm Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;
	public static final field native Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;
	public static final field wasm Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;
	public fun getName ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinPlatformType$Companion {
	public final fun getAttribute ()Lorg/gradle/api/attributes/Attribute;
	public final fun setupAttributesMatchingStrategy (Lorg/gradle/api/attributes/AttributesSchema;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinPlatformType$CompatibilityRule : org/gradle/api/attributes/AttributeCompatibilityRule {
	public fun <init> ()V
	public synthetic fun execute (Ljava/lang/Object;)V
	public fun execute (Lorg/gradle/api/attributes/CompatibilityCheckDetails;)V
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinPlatformType$DisambiguationRule : org/gradle/api/attributes/AttributeDisambiguationRule {
	public fun <init> ()V
	public synthetic fun execute (Ljava/lang/Object;)V
	public fun execute (Lorg/gradle/api/attributes/MultipleCandidatesDetails;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinSourceSet : org/gradle/api/Named, org/jetbrains/kotlin/gradle/plugin/HasKotlinDependencies, org/jetbrains/kotlin/gradle/plugin/HasProject, org/jetbrains/kotlin/tooling/core/HasMutableExtras {
	public static final field COMMON_MAIN_SOURCE_SET_NAME Ljava/lang/String;
	public static final field COMMON_TEST_SOURCE_SET_NAME Ljava/lang/String;
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet$Companion;
	public abstract fun addCustomSourceFilesExtensions (Ljava/util/List;)V
	public abstract fun dependsOn (Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet;)V
	public abstract fun getApiMetadataConfigurationName ()Ljava/lang/String;
	public abstract fun getCompileOnlyMetadataConfigurationName ()Ljava/lang/String;
	public abstract fun getCustomSourceFilesExtensions ()Ljava/lang/Iterable;
	public abstract fun getDependsOn ()Ljava/util/Set;
	public abstract fun getImplementationMetadataConfigurationName ()Ljava/lang/String;
	public abstract fun getKotlin ()Lorg/gradle/api/file/SourceDirectorySet;
	public abstract fun getLanguageSettings ()Lorg/jetbrains/kotlin/gradle/plugin/LanguageSettingsBuilder;
	public abstract fun getResources ()Lorg/gradle/api/file/SourceDirectorySet;
	public abstract fun getRuntimeOnlyMetadataConfigurationName ()Ljava/lang/String;
	public abstract fun kotlin (Lkotlin/jvm/functions/Function1;)Lorg/gradle/api/file/SourceDirectorySet;
	public abstract fun kotlin (Lorg/gradle/api/Action;)Lorg/gradle/api/file/SourceDirectorySet;
	public abstract fun languageSettings (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/gradle/plugin/LanguageSettingsBuilder;
	public abstract fun languageSettings (Lorg/gradle/api/Action;)Lorg/jetbrains/kotlin/gradle/plugin/LanguageSettingsBuilder;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinSourceSet$Companion {
	public static final field COMMON_MAIN_SOURCE_SET_NAME Ljava/lang/String;
	public static final field COMMON_TEST_SOURCE_SET_NAME Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinSourceSet$DefaultImpls {
	public static fun addCustomSourceFilesExtensions (Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSet;Ljava/util/List;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinSourceSetContainer {
	public abstract fun getSourceSets ()Lorg/gradle/api/NamedDomainObjectContainer;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinSourceSetTree {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSetTree$Companion;
	public fun <init> (Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinSourceSetTree$Companion {
	public final fun getInstrumentedTest ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSetTree;
	public final fun getIntegrationTest ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSetTree;
	public final fun getMain ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSetTree;
	public final fun getTest ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSetTree;
	public final fun getUnitTest ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinSourceSetTree;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinTarget : org/gradle/api/Named, org/gradle/api/attributes/HasAttributes, org/jetbrains/kotlin/gradle/plugin/HasProject, org/jetbrains/kotlin/tooling/core/HasMutableExtras {
	public abstract fun attributes (Lkotlin/jvm/functions/Function1;)V
	public abstract fun attributes (Lorg/gradle/api/Action;)V
	public abstract fun getApiElementsConfigurationName ()Ljava/lang/String;
	public abstract fun getArtifactsTaskName ()Ljava/lang/String;
	public abstract fun getCompilations ()Lorg/gradle/api/NamedDomainObjectContainer;
	public abstract fun getComponents ()Ljava/util/Set;
	public abstract fun getDisambiguationClassifier ()Ljava/lang/String;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getOverrideDisambiguationClassifierOnIdeImport ()Ljava/lang/String;
	public abstract fun getPlatformType ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinPlatformType;
	public abstract fun getPreset ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTargetPreset;
	public abstract fun getPublishable ()Z
	public abstract fun getRuntimeElementsConfigurationName ()Ljava/lang/String;
	public abstract fun getSourceSets ()Lorg/gradle/api/NamedDomainObjectContainer;
	public abstract fun getSourcesElementsConfigurationName ()Ljava/lang/String;
	public abstract fun getTargetName ()Ljava/lang/String;
	public abstract fun getUseDisambiguationClassifierAsSourceSetNamePrefix ()Z
	public abstract fun mavenPublication (Lkotlin/jvm/functions/Function1;)V
	public abstract fun mavenPublication (Lorg/gradle/api/Action;)V
	public abstract fun withSourcesJar (Z)V
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinTarget$DefaultImpls {
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;Lkotlin/jvm/functions/Function1;)V
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;Lorg/gradle/api/Action;)V
	public static fun getDisambiguationClassifier (Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;)Ljava/lang/String;
	public static fun getName (Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;)Ljava/lang/String;
	public static fun mavenPublication (Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun withSourcesJar$default (Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;ZILjava/lang/Object;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinTargetComponent : org/gradle/api/component/SoftwareComponent {
	public abstract fun getDefaultArtifactId ()Ljava/lang/String;
	public abstract fun getPublishable ()Z
	public abstract fun getPublishableOnCurrentHost ()Z
	public abstract fun getSourcesArtifacts ()Ljava/util/Set;
	public abstract fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinTargetExecution : org/jetbrains/kotlin/gradle/plugin/KotlinExecution {
	public abstract fun getTarget ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinTargetHierarchy {
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinTargetHierarchy$SourceSetTree {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/KotlinTargetHierarchy$SourceSetTree$Companion;
	public fun <init> (Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinTargetHierarchy$SourceSetTree$Companion {
	public final fun getInstrumentedTest ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTargetHierarchy$SourceSetTree;
	public final fun getIntegrationTest ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTargetHierarchy$SourceSetTree;
	public final fun getMain ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTargetHierarchy$SourceSetTree;
	public final fun getTest ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTargetHierarchy$SourceSetTree;
	public final fun getUnitTest ()Lorg/jetbrains/kotlin/gradle/plugin/KotlinTargetHierarchy$SourceSetTree;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinTargetPreset : org/gradle/api/Named {
	public abstract fun createTarget (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/KotlinTarget;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinTargetTestRun : org/jetbrains/kotlin/gradle/plugin/KotlinTargetExecution, org/jetbrains/kotlin/gradle/plugin/KotlinTestRun {
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinTargetWithTests : org/jetbrains/kotlin/gradle/plugin/KotlinTarget {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/KotlinTargetWithTests$Companion;
	public static final field DEFAULT_TEST_RUN_NAME Ljava/lang/String;
	public abstract fun getTestRuns ()Lorg/gradle/api/NamedDomainObjectContainer;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinTargetWithTests$Companion {
	public static final field DEFAULT_TEST_RUN_NAME Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/KotlinTargetWithTests$DefaultImpls {
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/plugin/KotlinTargetWithTests;Lkotlin/jvm/functions/Function1;)V
	public static fun attributes (Lorg/jetbrains/kotlin/gradle/plugin/KotlinTargetWithTests;Lorg/gradle/api/Action;)V
	public static fun getDisambiguationClassifier (Lorg/jetbrains/kotlin/gradle/plugin/KotlinTargetWithTests;)Ljava/lang/String;
	public static fun getName (Lorg/jetbrains/kotlin/gradle/plugin/KotlinTargetWithTests;)Ljava/lang/String;
	public static fun mavenPublication (Lorg/jetbrains/kotlin/gradle/plugin/KotlinTargetWithTests;Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinTargetsContainer {
	public abstract fun getTargets ()Lorg/gradle/api/NamedDomainObjectCollection;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinTargetsContainerWithPresets : org/jetbrains/kotlin/gradle/plugin/KotlinTargetsContainer {
	public abstract fun getPresets ()Lorg/gradle/api/NamedDomainObjectCollection;
}

public abstract interface annotation class org/jetbrains/kotlin/gradle/plugin/KotlinTargetsDsl : java/lang/annotation/Annotation {
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/KotlinTestRun : org/jetbrains/kotlin/gradle/plugin/KotlinExecution {
	public abstract fun filter (Lgroovy/lang/Closure;)V
	public abstract fun filter (Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/LanguageSettingsBuilder : org/jetbrains/kotlin/project/model/LanguageSettings {
	public abstract fun enableLanguageFeature (Ljava/lang/String;)V
	public abstract fun getApiVersion ()Ljava/lang/String;
	public abstract fun getEnabledLanguageFeatures ()Ljava/util/Set;
	public abstract fun getLanguageVersion ()Ljava/lang/String;
	public abstract fun getProgressiveMode ()Z
	public abstract fun optIn (Ljava/lang/String;)V
	public abstract fun setApiVersion (Ljava/lang/String;)V
	public abstract fun setLanguageVersion (Ljava/lang/String;)V
	public abstract fun setProgressiveMode (Z)V
}

public class org/jetbrains/kotlin/gradle/plugin/SubpluginArtifact {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getArtifactId ()Ljava/lang/String;
	public final fun getGroupId ()Ljava/lang/String;
	public final fun getVersion ()Ljava/lang/String;
}

public class org/jetbrains/kotlin/gradle/plugin/SubpluginOption {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Lkotlin/Lazy;)V
	public final fun getKey ()Ljava/lang/String;
	public final fun getValue ()Ljava/lang/String;
}

public abstract interface class org/jetbrains/kotlin/gradle/plugin/attributes/KlibPackaging : org/gradle/api/Named {
	public static final field ATTRIBUTE Lorg/gradle/api/attributes/Attribute;
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/attributes/KlibPackaging$Companion;
	public static final field NON_PACKED Ljava/lang/String;
	public static final field PACKED Ljava/lang/String;
}

public final class org/jetbrains/kotlin/gradle/plugin/attributes/KlibPackaging$Companion {
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode : java/lang/Enum {
	public static final field BITCODE Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
	public static final field DISABLE Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
	public static final field MARKER Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType : java/lang/Enum, org/gradle/api/Named {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType$Companion;
	public static final field DEBUG Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;
	public static final field RELEASE Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;
	public final fun embedBitcode (Lorg/jetbrains/kotlin/konan/target/KonanTarget;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/BitcodeEmbeddingMode;
	public final fun getDebuggable ()Z
	public fun getName ()Ljava/lang/String;
	public final fun getOptimized ()Z
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType;
}

public final class org/jetbrains/kotlin/gradle/plugin/mpp/NativeBuildType$Companion {
	public final fun getDEFAULT_BUILD_TYPES ()Ljava/util/Set;
}

public class org/jetbrains/kotlin/gradle/plugin/mpp/NativeOutputKind : java/lang/Enum {
	public static final field DYNAMIC Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeOutputKind;
	public static final field EXECUTABLE Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeOutputKind;
	public static final field FRAMEWORK Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeOutputKind;
	public static final field STATIC Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeOutputKind;
	public static final field TEST Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeOutputKind;
	public synthetic fun <init> (Ljava/lang/String;ILorg/jetbrains/kotlin/konan/target/CompilerOutputKind;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun availableFor (Lorg/jetbrains/kotlin/konan/target/KonanTarget;)Z
	public final fun getCompilerOutputKind ()Lorg/jetbrains/kotlin/konan/target/CompilerOutputKind;
	public final fun getDescription ()Ljava/lang/String;
	public final fun getTaskNameClassifier ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeOutputKind;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/plugin/mpp/NativeOutputKind;
}

public abstract interface class org/jetbrains/kotlin/gradle/tasks/BaseKapt : org/gradle/api/Task, org/jetbrains/kotlin/gradle/tasks/UsesKotlinJavaToolchain {
	public abstract fun getAnnotationProcessorOptionProviders ()Ljava/util/List;
	public abstract fun getClassesDir ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getClasspath ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getCompiledSources ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getDefaultJavaSourceCompatibility ()Lorg/gradle/api/provider/Property;
	public abstract fun getDestinationDir ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getIncAptCache ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getIncludeCompileClasspath ()Lorg/gradle/api/provider/Property;
	public abstract fun getKaptClasspath ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getKaptClasspathConfigurationNames ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getKaptExternalClasspath ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getKotlinSourcesDestinationDir ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getSource ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getSourceSetName ()Lorg/gradle/api/provider/Property;
	public abstract fun getStubsDir ()Lorg/gradle/api/file/DirectoryProperty;
}

public final class org/jetbrains/kotlin/gradle/tasks/BaseKapt$DefaultImpls {
	public static fun getKotlinJavaToolchain (Lorg/jetbrains/kotlin/gradle/tasks/BaseKapt;)Lorg/jetbrains/kotlin/gradle/tasks/KotlinJavaToolchain;
}

public abstract interface class org/jetbrains/kotlin/gradle/tasks/BaseKotlinCompile : org/jetbrains/kotlin/gradle/tasks/KotlinCompileTool {
	public abstract fun getFriendPaths ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getModuleName ()Lorg/gradle/api/provider/Property;
	public abstract fun getMultiPlatformEnabled ()Lorg/gradle/api/provider/Property;
	public abstract fun getPluginClasspath ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getPluginOptions ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getSourceSetName ()Lorg/gradle/api/provider/Property;
	public abstract fun getUseModuleDetection ()Lorg/gradle/api/provider/Property;
}

public abstract interface class org/jetbrains/kotlin/gradle/tasks/CompileUsingKotlinDaemon : org/gradle/api/Task {
	public abstract fun getCompilerExecutionStrategy ()Lorg/gradle/api/provider/Property;
	public abstract fun getKotlinDaemonJvmArguments ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getUseDaemonFallbackStrategy ()Lorg/gradle/api/provider/Property;
}

public abstract interface class org/jetbrains/kotlin/gradle/tasks/IncrementalSyncTask : org/gradle/api/Task {
	public abstract fun getDestinationDir ()Ljava/io/File;
	public abstract fun getDestinationDirectory ()Lorg/gradle/api/provider/Property;
	public abstract fun getDuplicatesStrategy ()Lorg/gradle/api/file/DuplicatesStrategy;
	public abstract fun getFrom ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun setDuplicatesStrategy (Lorg/gradle/api/file/DuplicatesStrategy;)V
}

public final class org/jetbrains/kotlin/gradle/tasks/IncrementalSyncTask$DefaultImpls {
	public static fun getDestinationDir (Lorg/jetbrains/kotlin/gradle/tasks/IncrementalSyncTask;)Ljava/io/File;
}

public abstract interface class org/jetbrains/kotlin/gradle/tasks/Kapt : org/jetbrains/kotlin/gradle/tasks/BaseKapt {
	public abstract fun getAddJdkClassesToClasspath ()Lorg/gradle/api/provider/Property;
	public abstract fun getKaptJars ()Lorg/gradle/api/file/ConfigurableFileCollection;
}

public final class org/jetbrains/kotlin/gradle/tasks/Kapt$DefaultImpls {
	public static fun getKotlinJavaToolchain (Lorg/jetbrains/kotlin/gradle/tasks/Kapt;)Lorg/jetbrains/kotlin/gradle/tasks/KotlinJavaToolchain;
}

public abstract interface class org/jetbrains/kotlin/gradle/tasks/KaptGenerateStubs : org/jetbrains/kotlin/gradle/tasks/KotlinJvmCompile {
	public abstract fun getKaptClasspath ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getModuleName ()Lorg/gradle/api/provider/Property;
	public abstract fun getStubsDir ()Lorg/gradle/api/file/DirectoryProperty;
}

public final class org/jetbrains/kotlin/gradle/tasks/KaptGenerateStubs$DefaultImpls {
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/tasks/KaptGenerateStubs;Lkotlin/jvm/functions/Function1;)V
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/tasks/KaptGenerateStubs;Lorg/gradle/api/Action;)V
	public static fun getKotlinJavaToolchain (Lorg/jetbrains/kotlin/gradle/tasks/KaptGenerateStubs;)Lorg/jetbrains/kotlin/gradle/tasks/KotlinJavaToolchain;
	public static fun kotlinOptions (Lorg/jetbrains/kotlin/gradle/tasks/KaptGenerateStubs;Lkotlin/jvm/functions/Function1;)V
	public static fun kotlinOptions (Lorg/jetbrains/kotlin/gradle/tasks/KaptGenerateStubs;Lorg/gradle/api/Action;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/tasks/KotlinCompilationTask : org/gradle/api/Task {
	public abstract fun compilerOptions (Lkotlin/jvm/functions/Function1;)V
	public abstract fun compilerOptions (Lorg/gradle/api/Action;)V
	public abstract fun getCompilerOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerOptions;
}

public final class org/jetbrains/kotlin/gradle/tasks/KotlinCompilationTask$DefaultImpls {
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/tasks/KotlinCompilationTask;Lkotlin/jvm/functions/Function1;)V
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/tasks/KotlinCompilationTask;Lorg/gradle/api/Action;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/tasks/KotlinCompileTool : org/gradle/api/Task, org/gradle/api/tasks/util/PatternFilterable {
	public abstract fun getDestinationDirectory ()Lorg/gradle/api/file/DirectoryProperty;
	public abstract fun getExcludes ()Ljava/util/Set;
	public abstract fun getIncludes ()Ljava/util/Set;
	public abstract fun getLibraries ()Lorg/gradle/api/file/ConfigurableFileCollection;
	public abstract fun getSources ()Lorg/gradle/api/file/FileCollection;
	public abstract fun setSource ([Ljava/lang/Object;)V
	public abstract fun source ([Ljava/lang/Object;)V
}

public final class org/jetbrains/kotlin/gradle/tasks/KotlinCompilerExecutionStrategy : java/lang/Enum {
	public static final field Companion Lorg/jetbrains/kotlin/gradle/tasks/KotlinCompilerExecutionStrategy$Companion;
	public static final field DAEMON Lorg/jetbrains/kotlin/gradle/tasks/KotlinCompilerExecutionStrategy;
	public static final field IN_PROCESS Lorg/jetbrains/kotlin/gradle/tasks/KotlinCompilerExecutionStrategy;
	public static final field OUT_OF_PROCESS Lorg/jetbrains/kotlin/gradle/tasks/KotlinCompilerExecutionStrategy;
	public final fun getPropertyValue ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/tasks/KotlinCompilerExecutionStrategy;
	public static fun values ()[Lorg/jetbrains/kotlin/gradle/tasks/KotlinCompilerExecutionStrategy;
}

public final class org/jetbrains/kotlin/gradle/tasks/KotlinCompilerExecutionStrategy$Companion {
	public final fun fromProperty (Ljava/lang/String;)Lorg/jetbrains/kotlin/gradle/tasks/KotlinCompilerExecutionStrategy;
}

public abstract interface class org/jetbrains/kotlin/gradle/tasks/KotlinJavaToolchain {
	public abstract fun getJavaVersion ()Lorg/gradle/api/provider/Provider;
	public abstract fun getJdk ()Lorg/jetbrains/kotlin/gradle/tasks/KotlinJavaToolchain$JdkSetter;
	public abstract fun getToolchain ()Lorg/jetbrains/kotlin/gradle/tasks/KotlinJavaToolchain$JavaToolchainSetter;
}

public abstract interface class org/jetbrains/kotlin/gradle/tasks/KotlinJavaToolchain$JavaToolchainSetter {
	public abstract fun use (Lorg/gradle/api/provider/Provider;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/tasks/KotlinJavaToolchain$JdkSetter {
	public abstract fun use (Ljava/io/File;Lorg/gradle/api/JavaVersion;)V
	public abstract fun use (Ljava/lang/String;Ljava/lang/Object;)V
}

public final class org/jetbrains/kotlin/gradle/tasks/KotlinJavaToolchain$JdkSetter$DefaultImpls {
	public static fun use (Lorg/jetbrains/kotlin/gradle/tasks/KotlinJavaToolchain$JdkSetter;Ljava/lang/String;Ljava/lang/Object;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/tasks/KotlinJvmCompile : org/jetbrains/kotlin/gradle/dsl/KotlinCompile, org/jetbrains/kotlin/gradle/tasks/BaseKotlinCompile, org/jetbrains/kotlin/gradle/tasks/KotlinCompilationTask, org/jetbrains/kotlin/gradle/tasks/UsesKotlinJavaToolchain {
	public abstract fun getJvmTargetValidationMode ()Lorg/gradle/api/provider/Property;
	public abstract fun getModuleName ()Lorg/gradle/api/provider/Property;
	public abstract fun getParentKotlinOptions ()Lorg/gradle/api/provider/Property;
}

public final class org/jetbrains/kotlin/gradle/tasks/KotlinJvmCompile$DefaultImpls {
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/tasks/KotlinJvmCompile;Lkotlin/jvm/functions/Function1;)V
	public static fun compilerOptions (Lorg/jetbrains/kotlin/gradle/tasks/KotlinJvmCompile;Lorg/gradle/api/Action;)V
	public static fun getKotlinJavaToolchain (Lorg/jetbrains/kotlin/gradle/tasks/KotlinJvmCompile;)Lorg/jetbrains/kotlin/gradle/tasks/KotlinJavaToolchain;
	public static fun kotlinOptions (Lorg/jetbrains/kotlin/gradle/tasks/KotlinJvmCompile;Lkotlin/jvm/functions/Function1;)V
	public static fun kotlinOptions (Lorg/jetbrains/kotlin/gradle/tasks/KotlinJvmCompile;Lorg/gradle/api/Action;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/tasks/KotlinToolTask : org/gradle/api/Task {
	public abstract fun getToolOptions ()Lorg/jetbrains/kotlin/gradle/dsl/KotlinCommonCompilerToolOptions;
	public abstract fun toolOptions (Lkotlin/jvm/functions/Function1;)V
	public abstract fun toolOptions (Lorg/gradle/api/Action;)V
}

public final class org/jetbrains/kotlin/gradle/tasks/KotlinToolTask$DefaultImpls {
	public static fun toolOptions (Lorg/jetbrains/kotlin/gradle/tasks/KotlinToolTask;Lkotlin/jvm/functions/Function1;)V
	public static fun toolOptions (Lorg/jetbrains/kotlin/gradle/tasks/KotlinToolTask;Lorg/gradle/api/Action;)V
}

public abstract interface class org/jetbrains/kotlin/gradle/tasks/UsesKotlinJavaToolchain : org/gradle/api/Task {
	public abstract fun getKotlinJavaToolchain ()Lorg/jetbrains/kotlin/gradle/tasks/KotlinJavaToolchain;
	public abstract fun getKotlinJavaToolchainProvider ()Lorg/gradle/api/provider/Provider;
}

public final class org/jetbrains/kotlin/gradle/tasks/UsesKotlinJavaToolchain$DefaultImpls {
	public static fun getKotlinJavaToolchain (Lorg/jetbrains/kotlin/gradle/tasks/UsesKotlinJavaToolchain;)Lorg/jetbrains/kotlin/gradle/tasks/KotlinJavaToolchain;
}

public abstract interface class org/jetbrains/kotlin/project/model/LanguageSettings {
	public abstract fun getApiVersion ()Ljava/lang/String;
	public abstract fun getEnabledLanguageFeatures ()Ljava/util/Set;
	public abstract fun getLanguageVersion ()Ljava/lang/String;
	public abstract fun getOptInAnnotationsInUse ()Ljava/util/Set;
	public abstract fun getProgressiveMode ()Z
}

