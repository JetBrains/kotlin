package

package kotlin {

    package kotlin.jvm {

        public final inline class IC0 : kotlin.Cloneable {
            public constructor IC0(/*0*/ a: kotlin.Any)
            public final val a: kotlin.Any
            protected open override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
        }

        public final inline class IC1 : java.lang.Cloneable {
            public constructor IC1(/*0*/ a: kotlin.Any)
            public final val a: kotlin.Any
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
        }

        public final inline class IC2 : kotlin.jvm.MyCloneable1 {
            public constructor IC2(/*0*/ a: kotlin.Any)
            public final val a: kotlin.Any
            protected open override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
        }

        public final inline class IC3 : kotlin.jvm.MyCloneable2 {
            public constructor IC3(/*0*/ a: kotlin.Any)
            public final val a: kotlin.Any
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
        }

        public final annotation class JvmInline : kotlin.Annotation {
            public constructor JvmInline()
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }

        public interface MyCloneable1 : kotlin.Cloneable {
            protected open override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }

        public interface MyCloneable2 : java.lang.Cloneable {
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }

        @kotlin.jvm.JvmInline public final value class VC0 : kotlin.Cloneable {
            public constructor VC0(/*0*/ a: kotlin.Any)
            public final val a: kotlin.Any
            protected open override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
        }

        @kotlin.jvm.JvmInline public final value class VC1 : java.lang.Cloneable {
            public constructor VC1(/*0*/ a: kotlin.Any)
            public final val a: kotlin.Any
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
        }

        @kotlin.jvm.JvmInline public final value class VC2 : kotlin.jvm.MyCloneable1 {
            public constructor VC2(/*0*/ a: kotlin.Any)
            public final val a: kotlin.Any
            protected open override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
        }

        @kotlin.jvm.JvmInline public final value class VC3 : kotlin.jvm.MyCloneable2 {
            public constructor VC3(/*0*/ a: kotlin.Any)
            public final val a: kotlin.Any
            public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
        }
    }
}
