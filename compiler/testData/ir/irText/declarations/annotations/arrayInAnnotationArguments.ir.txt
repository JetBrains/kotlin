FILE fqName:<root> fileName:/arrayInAnnotationArguments.kt
  CLASS ANNOTATION_CLASS name:TestAnnWithIntArray modality:OPEN visibility:public superTypes:[kotlin.Annotation]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.TestAnnWithIntArray
    PROPERTY name:x visibility:public modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:x type:kotlin.IntArray visibility:private [final]
        EXPRESSION_BODY
          GET_VAR 'x: kotlin.IntArray declared in <root>.TestAnnWithIntArray.<init>' type=kotlin.IntArray origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-x> visibility:public modality:FINAL returnType:kotlin.IntArray
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.TestAnnWithIntArray
        correspondingProperty: PROPERTY name:x visibility:public modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-x> (): kotlin.IntArray declared in <root>.TestAnnWithIntArray'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:x type:kotlin.IntArray visibility:private [final]' type=kotlin.IntArray origin=null
              receiver: GET_VAR '<this>: <root>.TestAnnWithIntArray declared in <root>.TestAnnWithIntArray.<get-x>' type=<root>.TestAnnWithIntArray origin=null
    CONSTRUCTOR visibility:public returnType:<root>.TestAnnWithIntArray [primary]
      VALUE_PARAMETER kind:Regular name:x index:0 type:kotlin.IntArray
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS ANNOTATION_CLASS name:TestAnnWithIntArray modality:OPEN visibility:public superTypes:[kotlin.Annotation]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Annotation
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Annotation
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Annotation
  CLASS ANNOTATION_CLASS name:TestAnnWithStringArray modality:OPEN visibility:public superTypes:[kotlin.Annotation]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.TestAnnWithStringArray
    PROPERTY name:x visibility:public modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:x type:kotlin.Array<kotlin.String> visibility:private [final]
        EXPRESSION_BODY
          GET_VAR 'x: kotlin.Array<kotlin.String> declared in <root>.TestAnnWithStringArray.<init>' type=kotlin.Array<kotlin.String> origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-x> visibility:public modality:FINAL returnType:kotlin.Array<kotlin.String>
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.TestAnnWithStringArray
        correspondingProperty: PROPERTY name:x visibility:public modality:FINAL [val]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-x> (): kotlin.Array<kotlin.String> declared in <root>.TestAnnWithStringArray'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:x type:kotlin.Array<kotlin.String> visibility:private [final]' type=kotlin.Array<kotlin.String> origin=null
              receiver: GET_VAR '<this>: <root>.TestAnnWithStringArray declared in <root>.TestAnnWithStringArray.<get-x>' type=<root>.TestAnnWithStringArray origin=null
    CONSTRUCTOR visibility:public returnType:<root>.TestAnnWithStringArray [primary]
      VALUE_PARAMETER kind:Regular name:x index:0 type:kotlin.Array<kotlin.String>
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS ANNOTATION_CLASS name:TestAnnWithStringArray modality:OPEN visibility:public superTypes:[kotlin.Annotation]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Annotation
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Annotation
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Annotation
  FUN name:test1 visibility:public modality:FINAL returnType:kotlin.Unit
    annotations:
      TestAnnWithIntArray(x = [1, 2, 3] type=kotlin.IntArray varargElementType=kotlin.Int)
      TestAnnWithStringArray(x = ["a", "b", "c"] type=kotlin.Array<kotlin.String> varargElementType=kotlin.String)
    BLOCK_BODY
  FUN name:test2 visibility:public modality:FINAL returnType:kotlin.Unit
    annotations:
      TestAnnWithIntArray(x = [4, 5, 6] type=kotlin.IntArray varargElementType=kotlin.Int)
      TestAnnWithStringArray(x = ["d", "e", "f"] type=kotlin.Array<kotlin.String> varargElementType=kotlin.String)
    BLOCK_BODY
