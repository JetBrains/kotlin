KtFile: 'whenIfLastStatement.kt'
  NO_CANDIDATES

KtPackageDirective(0,0): ''
  NO_CANDIDATES

KtImportList(0,0): ''
  NO_CANDIDATES

KtClass(78,301): 'open class MyClass {'
  NO_CANDIDATES

KtDeclarationModifierList(78,82): 'open'
  NO_CANDIDATES

KtClassBody(97,301): '{'
  NO_CANDIDATES

KtObjectDeclaration(103,137): 'object NestedInheritor : MyClass()'
  NO_CANDIDATES

KtSuperTypeList(128,137): 'MyClass()'
  NO_CANDIDATES

KtSuperTypeCallEntry(128,137): 'MyClass()'
  KaApplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtConstructorCalleeExpression(128,135): 'MyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaDelegatedConstructorCall:
      argumentMapping = {}
      kind = SUPER_CALL
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtTypeReference(128,135): 'MyClass'
  NO_CANDIDATES

KtUserType(128,135): 'MyClass'
  NO_CANDIDATES

KtNameReferenceExpression(128,135): 'MyClass'
  NO_CANDIDATES

KtValueArgumentList(135,137): '()'
  NO_CANDIDATES

KtObjectDeclaration(143,299): 'companion object {'
  NO_CANDIDATES

KtDeclarationModifierList(143,152): 'companion'
  NO_CANDIDATES

KtClassBody(160,299): '{'
  NO_CANDIDATES

KtProperty(170,206): 'val myClassProp: MyClass = MyClass()'
  NO_CANDIDATES

KtTypeReference(187,194): 'MyClass'
  NO_CANDIDATES

KtUserType(187,194): 'MyClass'
  NO_CANDIDATES

KtNameReferenceExpression(187,194): 'MyClass'
  NO_CANDIDATES

KtCallExpression(197,206): 'MyClass()'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(197,204): 'MyClass'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(204,206): '()'
  NO_CANDIDATES

KtProperty(215,242): 'val stringProp: String = ""'
  NO_CANDIDATES

KtTypeReference(231,237): 'String'
  NO_CANDIDATES

KtUserType(231,237): 'String'
  NO_CANDIDATES

KtNameReferenceExpression(231,237): 'String'
  NO_CANDIDATES

KtStringTemplateExpression(240,242): '""'
  NO_CANDIDATES

KtNamedFunction(251,293): 'fun getNestedInheritor() = NestedInheritor'
  NO_CANDIDATES

KtParameterList(273,275): '()'
  NO_CANDIDATES

KtNameReferenceExpression(278,293): 'NestedInheritor'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass.NestedInheritor
          symbol = <constructor>(): MyClass.NestedInheritor
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<OTHER_ERROR: Inapplicable candidate>
    isInBestCandidates = false

KtProperty(303,349): 'val ClassMemberAlias = MyClass.NestedInheritor'
  NO_CANDIDATES

KtDotQualifiedExpression(326,349): 'MyClass.NestedInheritor'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass.NestedInheritor
          symbol = <constructor>(): MyClass.NestedInheritor
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<OTHER_ERROR: Inapplicable candidate>
    isInBestCandidates = false

KtNameReferenceExpression(326,333): 'MyClass'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = <constructor>(): MyClass
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<OTHER_ERROR: Inapplicable candidate>
    isInBestCandidates = false

KtNameReferenceExpression(334,349): 'NestedInheritor'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass.NestedInheritor
          symbol = <constructor>(): MyClass.NestedInheritor
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<OTHER_ERROR: Inapplicable candidate>
    isInBestCandidates = false

KtNamedFunction(351,374): 'fun <T>receive(e: T) {}'
  NO_CANDIDATES

KtTypeParameterList(355,358): '<T>'
  NO_CANDIDATES

KtTypeParameter(356,357): 'T'
  NO_CANDIDATES

KtParameterList(365,371): '(e: T)'
  NO_CANDIDATES

KtParameter(366,370): 'e: T'
  NO_CANDIDATES

KtTypeReference(369,370): 'T'
  NO_CANDIDATES

KtUserType(369,370): 'T'
  NO_CANDIDATES

KtNameReferenceExpression(369,370): 'T'
  NO_CANDIDATES

KtBlockExpression(372,374): '{}'
  NO_CANDIDATES

KtNamedFunction(375,407): 'fun <T> run(b: () -> T): T = b()'
  NO_CANDIDATES

KtTypeParameterList(379,382): '<T>'
  NO_CANDIDATES

KtTypeParameter(380,381): 'T'
  NO_CANDIDATES

KtParameterList(386,398): '(b: () -> T)'
  NO_CANDIDATES

KtParameter(387,397): 'b: () -> T'
  NO_CANDIDATES

KtTypeReference(390,397): '() -> T'
  NO_CANDIDATES

KtFunctionType(390,397): '() -> T'
  NO_CANDIDATES

KtParameterList(390,392): '()'
  NO_CANDIDATES

KtTypeReference(396,397): 'T'
  NO_CANDIDATES

KtUserType(396,397): 'T'
  NO_CANDIDATES

KtNameReferenceExpression(396,397): 'T'
  NO_CANDIDATES

KtTypeReference(400,401): 'T'
  NO_CANDIDATES

KtUserType(400,401): 'T'
  NO_CANDIDATES

KtNameReferenceExpression(400,401): 'T'
  NO_CANDIDATES

KtCallExpression(404,407): 'b()'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = b
          isSafeNavigation = false
          type = kotlin.Function0<T>
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = T
          symbol = kotlin/Function0.invoke(<dispatch receiver>: kotlin.Function0<R>): R
          valueParameters = []
          contextParameters = []
          callableId = kotlin/Function0.invoke
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(404,405): 'b'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = b
          receiverType = null
          returnType = kotlin.Function0<T>
          symbol = b: kotlin.Function0<T>
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtValueArgumentList(405,407): '()'
  NO_CANDIDATES

KtNamedFunction(409,1557): 'fun testIfElse(i: Int) {'
  NO_CANDIDATES

KtParameterList(423,431): '(i: Int)'
  NO_CANDIDATES

KtParameter(424,430): 'i: Int'
  NO_CANDIDATES

KtTypeReference(427,430): 'Int'
  NO_CANDIDATES

KtUserType(427,430): 'Int'
  NO_CANDIDATES

KtNameReferenceExpression(427,430): 'Int'
  NO_CANDIDATES

KtBlockExpression(432,1557): '{'
  NO_CANDIDATES

KtProperty(438,657): 'val s: MyClass ='
  NO_CANDIDATES

KtTypeReference(445,452): 'MyClass'
  NO_CANDIDATES

KtUserType(445,452): 'MyClass'
  NO_CANDIDATES

KtNameReferenceExpression(445,452): 'MyClass'
  NO_CANDIDATES

KtIfExpression(463,657): 'if (i == 0) {'
  NO_CANDIDATES

KtContainerNode(467,473): 'i == 0'
  NO_CANDIDATES

KtBinaryExpression(467,473): 'i == 0'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        0 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(467,468): 'i'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtOperationReferenceExpression(469,471): '=='
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        0 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtConstantExpression(472,473): '0'
  NO_CANDIDATES

KtContainerNodeForControlStructureBody(475,542): '{'
  NO_CANDIDATES

KtBlockExpression(475,542): '{'
  NO_CANDIDATES

KtNameReferenceExpression(489,504): 'NestedInheritor'
  NO_CANDIDATES

KtNameReferenceExpression(517,532): 'NestedInheritor'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass.NestedInheritor
          symbol = <constructor>(): MyClass.NestedInheritor
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    diagnostic = ERROR<OTHER_ERROR: Inapplicable candidate>
    isInBestCandidates = false

KtContainerNodeForControlStructureBody(556,657): 'if (i == 1) {'
  NO_CANDIDATES

KtIfExpression(556,657): 'if (i == 1) {'
  NO_CANDIDATES

KtContainerNode(560,566): 'i == 1'
  NO_CANDIDATES

KtBinaryExpression(560,566): 'i == 1'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        1 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(560,561): 'i'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtOperationReferenceExpression(562,564): '=='
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        1 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtConstantExpression(565,566): '1'
  NO_CANDIDATES

KtContainerNodeForControlStructureBody(568,627): '{'
  NO_CANDIDATES

KtBlockExpression(568,627): '{'
  NO_CANDIDATES

KtNameReferenceExpression(582,593): 'myClassProp'
  NO_CANDIDATES

KtNameReferenceExpression(606,617): 'myClassProp'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = myClassProp
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = myClassProp
          receiverType = null
          returnType = MyClass
          symbol = val myClassProp: MyClass
          contextParameters = []
          callableId = /MyClass.Companion.myClassProp
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtContainerNodeForControlStructureBody(641,657): 'ClassMemberAlias'
  NO_CANDIDATES

KtNameReferenceExpression(641,657): 'ClassMemberAlias'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = ClassMemberAlias
          receiverType = null
          returnType = MyClass.NestedInheritor
          symbol = val ClassMemberAlias: MyClass.NestedInheritor
          contextParameters = []
          callableId = /ClassMemberAlias
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtProperty(663,788): 'val s2: MyClass ='
  NO_CANDIDATES

KtTypeReference(671,678): 'MyClass'
  NO_CANDIDATES

KtUserType(671,678): 'MyClass'
  NO_CANDIDATES

KtNameReferenceExpression(671,678): 'MyClass'
  NO_CANDIDATES

KtIfExpression(689,788): 'if (i == 2) {'
  NO_CANDIDATES

KtContainerNode(693,699): 'i == 2'
  NO_CANDIDATES

KtBinaryExpression(693,699): 'i == 2'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        2 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(693,694): 'i'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtOperationReferenceExpression(695,697): '=='
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        2 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtConstantExpression(698,699): '2'
  NO_CANDIDATES

KtContainerNodeForControlStructureBody(701,758): '{'
  NO_CANDIDATES

KtBlockExpression(701,758): '{'
  NO_CANDIDATES

KtNameReferenceExpression(715,725): 'stringProp'
  NO_CANDIDATES

KtNameReferenceExpression(738,748): 'stringProp'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = stringProp
          isSafeNavigation = false
          type = MyClass.Companion
        extensionReceiver = null
        signature = KaVariableSignature:
          name = stringProp
          receiverType = null
          returnType = kotlin.String
          symbol = val stringProp: kotlin.String
          contextParameters = []
          callableId = /MyClass.Companion.stringProp
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtContainerNodeForControlStructureBody(772,788): 'ClassMemberAlias'
  NO_CANDIDATES

KtNameReferenceExpression(772,788): 'ClassMemberAlias'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = ClassMemberAlias
          receiverType = null
          returnType = MyClass.NestedInheritor
          symbol = val ClassMemberAlias: MyClass.NestedInheritor
          contextParameters = []
          callableId = /ClassMemberAlias
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtCallExpression(794,1278): 'receive<MyClass>('
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        if (i == 0) {
                    NestedInheritor
                    NestedInheritor
                    // KT-76400
                }
                else if (i == 1) {
                    myClassProp
                    myClassProp
                    // KT-76400
                }
                else if (i == 2) {
                    getNestedInheritor()
                    getNestedInheritor()
                }
                else if (i == 3) {
                    stringProp
                    stringProp
                    // KT-76400
                }
                else ClassMemberAlias -> (KaVariableSignature:
          name = e
          receiverType = null
          returnType = MyClass
          symbol = e: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receive(e: T): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = e
              receiverType = null
              returnType = MyClass
              symbol = e: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receive
      typeArgumentsMapping = {
        T -> (MyClass)
      }
    isInBestCandidates = true

KtNameReferenceExpression(794,801): 'receive'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        if (i == 0) {
                    NestedInheritor
                    NestedInheritor
                    // KT-76400
                }
                else if (i == 1) {
                    myClassProp
                    myClassProp
                    // KT-76400
                }
                else if (i == 2) {
                    getNestedInheritor()
                    getNestedInheritor()
                }
                else if (i == 3) {
                    stringProp
                    stringProp
                    // KT-76400
                }
                else ClassMemberAlias -> (KaVariableSignature:
          name = e
          receiverType = null
          returnType = MyClass
          symbol = e: T
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /receive(e: T): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = e
              receiverType = null
              returnType = MyClass
              symbol = e: T
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /receive
      typeArgumentsMapping = {
        T -> (MyClass)
      }
    isInBestCandidates = true

KtTypeArgumentList(801,810): '<MyClass>'
  NO_CANDIDATES

KtTypeProjection(802,809): 'MyClass'
  NO_CANDIDATES

KtTypeReference(802,809): 'MyClass'
  NO_CANDIDATES

KtUserType(802,809): 'MyClass'
  NO_CANDIDATES

KtNameReferenceExpression(802,809): 'MyClass'
  NO_CANDIDATES

KtValueArgumentList(810,1278): '('
  NO_CANDIDATES

KtValueArgument(820,1272): 'if (i == 0) {'
  NO_CANDIDATES

KtIfExpression(820,1272): 'if (i == 0) {'
  NO_CANDIDATES

KtContainerNode(824,830): 'i == 0'
  NO_CANDIDATES

KtBinaryExpression(824,830): 'i == 0'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        0 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(824,825): 'i'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtOperationReferenceExpression(826,828): '=='
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        0 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtConstantExpression(829,830): '0'
  NO_CANDIDATES

KtContainerNodeForControlStructureBody(832,923): '{'
  NO_CANDIDATES

KtBlockExpression(832,923): '{'
  NO_CANDIDATES

KtNameReferenceExpression(846,861): 'NestedInheritor'
  NO_CANDIDATES

KtNameReferenceExpression(874,889): 'NestedInheritor'
  NO_CANDIDATES

KtContainerNodeForControlStructureBody(937,1272): 'if (i == 1) {'
  NO_CANDIDATES

KtIfExpression(937,1272): 'if (i == 1) {'
  NO_CANDIDATES

KtContainerNode(941,947): 'i == 1'
  NO_CANDIDATES

KtBinaryExpression(941,947): 'i == 1'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        1 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(941,942): 'i'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtOperationReferenceExpression(943,945): '=='
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        1 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtConstantExpression(946,947): '1'
  NO_CANDIDATES

KtContainerNodeForControlStructureBody(949,1032): '{'
  NO_CANDIDATES

KtBlockExpression(949,1032): '{'
  NO_CANDIDATES

KtNameReferenceExpression(963,974): 'myClassProp'
  NO_CANDIDATES

KtNameReferenceExpression(987,998): 'myClassProp'
  NO_CANDIDATES

KtContainerNodeForControlStructureBody(1046,1272): 'if (i == 2) {'
  NO_CANDIDATES

KtIfExpression(1046,1272): 'if (i == 2) {'
  NO_CANDIDATES

KtContainerNode(1050,1056): 'i == 2'
  NO_CANDIDATES

KtBinaryExpression(1050,1056): 'i == 2'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        2 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(1050,1051): 'i'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtOperationReferenceExpression(1052,1054): '=='
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        2 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtConstantExpression(1055,1056): '2'
  NO_CANDIDATES

KtContainerNodeForControlStructureBody(1058,1135): '{'
  NO_CANDIDATES

KtBlockExpression(1058,1135): '{'
  NO_CANDIDATES

KtCallExpression(1072,1092): 'getNestedInheritor()'
  NO_CANDIDATES

KtNameReferenceExpression(1072,1090): 'getNestedInheritor'
  NO_CANDIDATES

KtValueArgumentList(1090,1092): '()'
  NO_CANDIDATES

KtCallExpression(1105,1125): 'getNestedInheritor()'
  NO_CANDIDATES

KtNameReferenceExpression(1105,1123): 'getNestedInheritor'
  NO_CANDIDATES

KtValueArgumentList(1123,1125): '()'
  NO_CANDIDATES

KtContainerNodeForControlStructureBody(1149,1272): 'if (i == 3) {'
  NO_CANDIDATES

KtIfExpression(1149,1272): 'if (i == 3) {'
  NO_CANDIDATES

KtContainerNode(1153,1159): 'i == 3'
  NO_CANDIDATES

KtBinaryExpression(1153,1159): 'i == 3'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        3 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(1153,1154): 'i'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtOperationReferenceExpression(1155,1157): '=='
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        3 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtConstantExpression(1158,1159): '3'
  NO_CANDIDATES

KtContainerNodeForControlStructureBody(1161,1242): '{'
  NO_CANDIDATES

KtBlockExpression(1161,1242): '{'
  NO_CANDIDATES

KtNameReferenceExpression(1175,1185): 'stringProp'
  NO_CANDIDATES

KtNameReferenceExpression(1198,1208): 'stringProp'
  NO_CANDIDATES

KtContainerNodeForControlStructureBody(1256,1272): 'ClassMemberAlias'
  NO_CANDIDATES

KtNameReferenceExpression(1256,1272): 'ClassMemberAlias'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = ClassMemberAlias
          receiverType = null
          returnType = MyClass.NestedInheritor
          symbol = val ClassMemberAlias: MyClass.NestedInheritor
          contextParameters = []
          callableId = /ClassMemberAlias
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtCallExpression(1284,1555): 'run<MyClass> {'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        {
                if (i == 0) {
                    NestedInheritor
                    NestedInheritor
                    // KT-76400
                }
                else if (i == 1) {
                    myClassProp
                    myClassProp
                    // KT-76400
                }
                else ClassMemberAlias
            } -> (KaVariableSignature:
          name = b
          receiverType = null
          returnType = kotlin.Function0<MyClass>
          symbol = b: kotlin.Function0<T>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = /run(b: kotlin.Function0<T>): T
          valueParameters = [
            KaVariableSignature:
              name = b
              receiverType = null
              returnType = kotlin.Function0<MyClass>
              symbol = b: kotlin.Function0<T>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /run
      typeArgumentsMapping = {
        T -> (MyClass)
      }
    isInBestCandidates = true

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        {
                if (i == 0) {
                    NestedInheritor
                    NestedInheritor
                    // KT-76400
                }
                else if (i == 1) {
                    myClassProp
                    myClassProp
                    // KT-76400
                }
                else ClassMemberAlias
            } -> (KaVariableSignature:
          name = block
          receiverType = null
          returnType = kotlin.Function0<MyClass>
          symbol = block: kotlin.Function0<R>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = kotlin/run(block: kotlin.Function0<R>): R
          valueParameters = [
            KaVariableSignature:
              name = block
              receiverType = null
              returnType = kotlin.Function0<MyClass>
              symbol = block: kotlin.Function0<R>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/run
      typeArgumentsMapping = {
        R -> (MyClass)
      }
    isInBestCandidates = false

KtNameReferenceExpression(1284,1287): 'run'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        {
                if (i == 0) {
                    NestedInheritor
                    NestedInheritor
                    // KT-76400
                }
                else if (i == 1) {
                    myClassProp
                    myClassProp
                    // KT-76400
                }
                else ClassMemberAlias
            } -> (KaVariableSignature:
          name = b
          receiverType = null
          returnType = kotlin.Function0<MyClass>
          symbol = b: kotlin.Function0<T>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = /run(b: kotlin.Function0<T>): T
          valueParameters = [
            KaVariableSignature:
              name = b
              receiverType = null
              returnType = kotlin.Function0<MyClass>
              symbol = b: kotlin.Function0<T>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /run
      typeArgumentsMapping = {
        T -> (MyClass)
      }
    isInBestCandidates = true

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        {
                if (i == 0) {
                    NestedInheritor
                    NestedInheritor
                    // KT-76400
                }
                else if (i == 1) {
                    myClassProp
                    myClassProp
                    // KT-76400
                }
                else ClassMemberAlias
            } -> (KaVariableSignature:
          name = block
          receiverType = null
          returnType = kotlin.Function0<MyClass>
          symbol = block: kotlin.Function0<R>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = MyClass
          symbol = kotlin/run(block: kotlin.Function0<R>): R
          valueParameters = [
            KaVariableSignature:
              name = block
              receiverType = null
              returnType = kotlin.Function0<MyClass>
              symbol = block: kotlin.Function0<R>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/run
      typeArgumentsMapping = {
        R -> (MyClass)
      }
    isInBestCandidates = false

KtTypeArgumentList(1287,1296): '<MyClass>'
  NO_CANDIDATES

KtTypeProjection(1288,1295): 'MyClass'
  NO_CANDIDATES

KtTypeReference(1288,1295): 'MyClass'
  NO_CANDIDATES

KtUserType(1288,1295): 'MyClass'
  NO_CANDIDATES

KtNameReferenceExpression(1288,1295): 'MyClass'
  NO_CANDIDATES

KtLambdaArgument(1297,1555): '{'
  NO_CANDIDATES

KtLambdaExpression(1297,1555): '{'
  NO_CANDIDATES

KtFunctionLiteral(1297,1555): '{'
  NO_CANDIDATES

KtBlockExpression(1307,1549): 'if (i == 0) {'
  NO_CANDIDATES

KtIfExpression(1307,1549): 'if (i == 0) {'
  NO_CANDIDATES

KtContainerNode(1311,1317): 'i == 0'
  NO_CANDIDATES

KtBinaryExpression(1311,1317): 'i == 0'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        0 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(1311,1312): 'i'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtOperationReferenceExpression(1313,1315): '=='
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        0 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtConstantExpression(1316,1317): '0'
  NO_CANDIDATES

KtContainerNodeForControlStructureBody(1319,1410): '{'
  NO_CANDIDATES

KtBlockExpression(1319,1410): '{'
  NO_CANDIDATES

KtNameReferenceExpression(1333,1348): 'NestedInheritor'
  NO_CANDIDATES

KtNameReferenceExpression(1361,1376): 'NestedInheritor'
  NO_CANDIDATES

KtContainerNodeForControlStructureBody(1424,1549): 'if (i == 1) {'
  NO_CANDIDATES

KtIfExpression(1424,1549): 'if (i == 1) {'
  NO_CANDIDATES

KtContainerNode(1428,1434): 'i == 1'
  NO_CANDIDATES

KtBinaryExpression(1428,1434): 'i == 1'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        1 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtNameReferenceExpression(1428,1429): 'i'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = i
          receiverType = null
          returnType = kotlin.Int
          symbol = i: kotlin.Int
          contextParameters = []
          callableId = null
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtOperationReferenceExpression(1430,1432): '=='
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        1 -> (KaVariableSignature:
          name = other
          receiverType = null
          returnType = kotlin.Any?
          symbol = other: kotlin.Any?
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = i
          isSafeNavigation = false
          type = kotlin.Int
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Boolean
          symbol = kotlin/Int.equals(<dispatch receiver>: kotlin.Int, other: kotlin.Any?): kotlin.Boolean
          valueParameters = [
            KaVariableSignature:
              name = other
              receiverType = null
              returnType = kotlin.Any?
              symbol = other: kotlin.Any?
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = kotlin/Int.equals
      typeArgumentsMapping = {}
    isInBestCandidates = true

KtConstantExpression(1433,1434): '1'
  NO_CANDIDATES

KtContainerNodeForControlStructureBody(1436,1519): '{'
  NO_CANDIDATES

KtBlockExpression(1436,1519): '{'
  NO_CANDIDATES

KtNameReferenceExpression(1450,1461): 'myClassProp'
  NO_CANDIDATES

KtNameReferenceExpression(1474,1485): 'myClassProp'
  NO_CANDIDATES

KtContainerNodeForControlStructureBody(1533,1549): 'ClassMemberAlias'
  NO_CANDIDATES

KtNameReferenceExpression(1533,1549): 'ClassMemberAlias'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaVariableSignature:
          name = ClassMemberAlias
          receiverType = null
          returnType = MyClass.NestedInheritor
          symbol = val ClassMemberAlias: MyClass.NestedInheritor
          contextParameters = []
          callableId = /ClassMemberAlias
      simpleAccess = Read
      typeArgumentsMapping = {}
    isInBestCandidates = true