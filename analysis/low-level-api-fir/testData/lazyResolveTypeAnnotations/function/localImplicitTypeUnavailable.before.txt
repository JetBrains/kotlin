@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/collections/List<@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/collections/Collection<@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/String>>?
  context -> FirNamedFunctionSymbol <local>/bar
  anchor -> [FirNamedFunctionSymbol <local>/foo]

@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/collections/Collection<@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/String>
  context -> FirNamedFunctionSymbol <local>/bar
  anchor -> [FirNamedFunctionSymbol <local>/foo]

@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/String
  context -> FirNamedFunctionSymbol <local>/bar
  anchor -> [FirNamedFunctionSymbol <local>/foo]

@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/collections/List<@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/collections/Collection<@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/String>>?
  context -> FirNamedFunctionSymbol <local>/foo
  anchor -> [FirNamedFunctionSymbol <local>/foo]

@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/collections/Collection<@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/String>
  context -> FirNamedFunctionSymbol <local>/foo
  anchor -> [FirNamedFunctionSymbol <local>/foo]

@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/String
  context -> FirNamedFunctionSymbol <local>/foo
  anchor -> [FirNamedFunctionSymbol <local>/foo]

@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/collections/List<@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/collections/Collection<@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/String>>?
  context -> FirPropertySymbol <local>/a
  anchor -> [FirNamedFunctionSymbol <local>/foo]

@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/collections/Collection<@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/String>
  context -> FirPropertySymbol <local>/a
  anchor -> [FirNamedFunctionSymbol <local>/foo]

@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/String
  context -> FirPropertySymbol <local>/a
  anchor -> [FirNamedFunctionSymbol <local>/foo]

@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/collections/List<@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/collections/Collection<@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/String>>?
  context -> FirBackingFieldSymbol <local>/field from FirPropertySymbol <local>/a
  anchor -> [FirNamedFunctionSymbol <local>/foo]

@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/collections/Collection<@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/String>
  context -> FirBackingFieldSymbol <local>/field from FirPropertySymbol <local>/a
  anchor -> [FirNamedFunctionSymbol <local>/foo]

@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/String
  context -> FirBackingFieldSymbol <local>/field from FirPropertySymbol <local>/a
  anchor -> [FirNamedFunctionSymbol <local>/foo]

FILE: [ResolvedTo(IMPORTS)] localImplicitTypeUnavailable.kt
    @R|kotlin/annotation/Target|[Types](Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.TYPE|) public final [ResolvedTo(STATUS)] annotation class Anno : R|kotlin/Annotation| {
        public [ResolvedTo(STATUS)] [ContainingClassKey=Anno] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=second/Anno.str] str: R|kotlin/reflect/KClass<*>|): R|second/Anno| {
            LAZY_super<R|kotlin/Any|>
        }

        public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val str: R|kotlin/reflect/KClass<*>| = R|<local>/str|
            public [ResolvedTo(STATUS)] [ContainingClassKey=Anno] get(): R|kotlin/reflect/KClass<*>|

    }
    public final [ResolvedTo(BODY_RESOLVE)] fun check(): R|kotlin/Unit| {
        local final [ResolvedTo(BODY_RESOLVE)] class A : R|kotlin/Any| {
            public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=A] constructor(): R|<local>/A| {
                super<R|kotlin/Any|>()
            }

            public final [ResolvedTo(BODY_RESOLVE)] fun bar(): R|@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/collections/List<@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/collections/Collection<@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/String>>?| {
                ^bar this@R|<local>/A|.R|<local>/A.B.B|().R|<local>/foo|()
            }

            local final inner [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=A] class B : R|kotlin/Any| {
                public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=B] <local>/A.constructor(): R|<local>/A.B| {
                    super<R|kotlin/Any|>()
                }

                public final [ResolvedTo(BODY_RESOLVE)] fun foo(): R|@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/collections/List<@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/collections/Collection<@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/String>>?| {
                    ^foo Null(null)
                }

                local final inner [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=B] class C : R|kotlin/Any| {
                    public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=C] <local>/A.B.constructor(): R|<local>/A.B.C| {
                        super<R|kotlin/Any|>()
                    }

                }

            }

        }

        [ResolvedTo(BODY_RESOLVE)] lval a: R|@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/collections/List<@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/collections/Collection<@R|second/Anno|(str = <getClass>(Q|<local>/A.B.C|))  kotlin/String>>?| = R|<local>/A.A|().R|<local>/bar|()
    }
