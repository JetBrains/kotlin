namespace <root>

// <namespace name="example">
namespace example

// <namespace name="ns">
namespace ns

internal final val y: jet.Any?
// </namespace name="ns">
internal final class example.AClass : jet.Any {
    public final /*constructor*/ fun <init>(): example.AClass
    internal final class object example.AClass.<no name provided> : jet.Any {
        internal final /*constructor*/ fun <init>(): example.AClass.<no name provided>
        internal final val y: jet.Any?
    }
}
internal open class example.C : jet.Any {
    public final /*constructor*/ fun <init>(): example.C
    internal final fun foo(): jet.Tuple0
}
internal abstract trait example.T : jet.Any {
}
internal final val Obj: example.Obj
internal final val x: jet.Any?
internal final fun jet.Any?.foo(): jet.Int
internal final fun jet.Any?.vars(/*0*/ a: jet.Any?): jet.Int
// </namespace name="example">
