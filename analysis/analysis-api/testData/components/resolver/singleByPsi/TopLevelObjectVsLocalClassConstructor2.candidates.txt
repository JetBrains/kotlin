KtNameReferenceExpression(104,112): 'Conflict'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = true
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaExplicitReceiverValue:
          expression = Conflict
          isSafeNavigation = false
          type = test.Conflict
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = test/Conflict.invoke(<dispatch receiver>: test.Conflict): kotlin.Unit
          valueParameters = []
          contextParameters = []
          callableId = test/Conflict.invoke
      typeArgumentsMapping = {}
    isInBestCandidates = false

  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {}
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = <local>.Conflict
          symbol = <constructor>(): <local>.Conflict
          valueParameters = []
          contextParameters = []
          callableId = null
      typeArgumentsMapping = {}
    isInBestCandidates = true