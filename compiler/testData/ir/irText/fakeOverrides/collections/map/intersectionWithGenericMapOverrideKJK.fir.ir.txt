FILE fqName:<root> fileName:/1.kt
  CLASS CLASS name:A modality:ABSTRACT visibility:public superTypes:[java.util.SortedMap<T of <root>.A, T of <root>.A>; kotlin.collections.Map<T of <root>.A, T of <root>.A>]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.A<T of <root>.A>
    TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
    CONSTRUCTOR visibility:public returnType:<root>.A<T of <root>.A> [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:A modality:ABSTRACT visibility:public superTypes:[java.util.SortedMap<T of <root>.A, T of <root>.A>; kotlin.collections.Map<T of <root>.A, T of <root>.A>]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:clear visibility:public modality:ABSTRACT returnType:kotlin.Unit [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      overridden:
        public abstract fun clear (): kotlin.Unit declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:comparator visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] java.util.Comparator<in @[FlexibleNullability] T of <root>.A?>? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<T of <root>.A, T of <root>.A>
      overridden:
        public abstract fun comparator (): @[FlexibleNullability] java.util.Comparator<in @[FlexibleNullability] K of java.util.SortedMap?>? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:compute visibility:public modality:OPEN returnType:@[EnhancedNullability] T of <root>.A? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.A?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] java.util.function.BiFunction<in @[FlexibleNullability] @[EnhancedNullability] T of <root>.A?, in @[EnhancedNullability] T of <root>.A?, out @[EnhancedNullability] T of <root>.A?>
      overridden:
        public open fun compute (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, in @[EnhancedNullability] V of java.util.SortedMap?, out @[EnhancedNullability] V of java.util.SortedMap?>): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:computeIfAbsent visibility:public modality:OPEN returnType:@[FlexibleNullability] @[EnhancedNullability] T of <root>.A? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.A?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] java.util.function.Function<in @[FlexibleNullability] @[EnhancedNullability] T of <root>.A?, out @[FlexibleNullability] @[EnhancedNullability] T of <root>.A?>
      overridden:
        public open fun computeIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, out @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?>): @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:computeIfPresent visibility:public modality:OPEN returnType:@[EnhancedNullability] T of <root>.A? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.A?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] java.util.function.BiFunction<in @[FlexibleNullability] @[EnhancedNullability] T of <root>.A?, in @[EnhancedNullability] {T of <root>.A & Any}, out @[EnhancedNullability] T of <root>.A?>
      overridden:
        public open fun computeIfPresent (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, in @[EnhancedNullability] {V of java.util.SortedMap & Any}, out @[EnhancedNullability] V of java.util.SortedMap?>): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:containsKey visibility:public modality:ABSTRACT returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] T of <root>.A?
      overridden:
        public abstract fun containsKey (key: @[FlexibleNullability] K of java.util.SortedMap?): kotlin.Boolean declared in java.util.SortedMap
        public abstract fun containsKey (key: K of kotlin.collections.Map): kotlin.Boolean declared in kotlin.collections.Map
    FUN FAKE_OVERRIDE name:containsValue visibility:public modality:ABSTRACT returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER kind:Regular name:value index:1 type:@[FlexibleNullability] T of <root>.A?
      overridden:
        public abstract fun containsValue (value: @[FlexibleNullability] V of java.util.SortedMap?): kotlin.Boolean declared in java.util.SortedMap
        public abstract fun containsValue (value: V of kotlin.collections.Map): kotlin.Boolean declared in kotlin.collections.Map
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in java.util.SortedMap
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.collections.Map
    FUN FAKE_OVERRIDE name:firstKey visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] T of <root>.A? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<T of <root>.A, T of <root>.A>
      overridden:
        public abstract fun firstKey (): @[FlexibleNullability] K of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:forEach visibility:public modality:OPEN returnType:kotlin.Unit [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] java.util.function.BiConsumer<in @[FlexibleNullability] @[EnhancedNullability] T of <root>.A?, in @[FlexibleNullability] @[EnhancedNullability] T of <root>.A?>
      overridden:
        public open fun forEach (p0: @[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, in @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?>): kotlin.Unit declared in java.util.SortedMap
        public open fun forEach (p0: @[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] K of kotlin.collections.Map, in @[EnhancedNullability] V of kotlin.collections.Map>): kotlin.Unit declared in kotlin.collections.Map
    FUN FAKE_OVERRIDE name:get visibility:public modality:ABSTRACT returnType:T of <root>.A? [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] T of <root>.A?
      overridden:
        public abstract fun get (key: @[FlexibleNullability] K of java.util.SortedMap?): V of java.util.SortedMap? declared in java.util.SortedMap
        public abstract fun get (key: K of kotlin.collections.Map): V of kotlin.collections.Map? declared in kotlin.collections.Map
    FUN FAKE_OVERRIDE name:getOrDefault visibility:public modality:OPEN returnType:T of <root>.A [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<T of <root>.A, T of <root>.A>
      VALUE_PARAMETER kind:Regular name:key index:1 type:T of <root>.A
      VALUE_PARAMETER kind:Regular name:defaultValue index:2 type:T of <root>.A
      annotations:
        SinceKotlin(version = "1.1")
        PlatformDependent
      overridden:
        public open fun getOrDefault (key: @[FlexibleNullability] K of java.util.SortedMap?, defaultValue: @[FlexibleNullability] V of java.util.SortedMap?): @[FlexibleNullability] V of java.util.SortedMap? declared in java.util.SortedMap
        public open fun getOrDefault (key: K of kotlin.collections.Map, defaultValue: V of kotlin.collections.Map): V of kotlin.collections.Map declared in kotlin.collections.Map
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in java.util.SortedMap
        public open fun hashCode (): kotlin.Int declared in kotlin.collections.Map
    FUN FAKE_OVERRIDE name:headMap visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<T of <root>.A, T of <root>.A>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] T of <root>.A?
      overridden:
        public abstract fun headMap (p0: @[FlexibleNullability] K of java.util.SortedMap?): @[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:ABSTRACT returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      overridden:
        public abstract fun isEmpty (): kotlin.Boolean declared in java.util.SortedMap
        public abstract fun isEmpty (): kotlin.Boolean declared in kotlin.collections.Map
    FUN FAKE_OVERRIDE name:lastKey visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] T of <root>.A? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<T of <root>.A, T of <root>.A>
      overridden:
        public abstract fun lastKey (): @[FlexibleNullability] K of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:merge visibility:public modality:OPEN returnType:@[EnhancedNullability] T of <root>.A? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.A?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] {T of <root>.A & Any}
      VALUE_PARAMETER kind:Regular name:p2 index:3 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] {T of <root>.A & Any}, in @[EnhancedNullability] {T of <root>.A & Any}, out @[EnhancedNullability] T of <root>.A?>
      overridden:
        public open fun merge (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] {V of java.util.SortedMap & Any}, p2: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] {V of java.util.SortedMap & Any}, in @[EnhancedNullability] {V of java.util.SortedMap & Any}, out @[EnhancedNullability] V of java.util.SortedMap?>): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:put visibility:public modality:ABSTRACT returnType:T of <root>.A? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] T of <root>.A?
      VALUE_PARAMETER kind:Regular name:value index:2 type:@[FlexibleNullability] T of <root>.A?
      overridden:
        public abstract fun put (key: @[FlexibleNullability] K of java.util.SortedMap?, value: @[FlexibleNullability] V of java.util.SortedMap?): V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:putAll visibility:public modality:ABSTRACT returnType:kotlin.Unit [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER kind:Regular name:from index:1 type:kotlin.collections.Map<out @[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      overridden:
        public abstract fun putAll (from: kotlin.collections.Map<out @[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>): kotlin.Unit declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:putIfAbsent visibility:public modality:OPEN returnType:@[EnhancedNullability] T of <root>.A? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.A?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.A?
      overridden:
        public open fun putIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:remove visibility:public modality:ABSTRACT returnType:T of <root>.A? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] T of <root>.A?
      overridden:
        public abstract fun remove (key: @[FlexibleNullability] K of java.util.SortedMap?): V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:remove visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] T of <root>.A?
      VALUE_PARAMETER kind:Regular name:value index:2 type:@[FlexibleNullability] T of <root>.A?
      annotations:
        SinceKotlin(version = "1.1")
        PlatformDependent
      overridden:
        public open fun remove (key: @[FlexibleNullability] K of java.util.SortedMap?, value: @[FlexibleNullability] V of java.util.SortedMap?): kotlin.Boolean declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN returnType:@[EnhancedNullability] T of <root>.A? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.A?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.A?
      overridden:
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.A?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.A?
      VALUE_PARAMETER kind:Regular name:p2 index:3 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.A?
      overridden:
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?, p2: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?): kotlin.Boolean declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:replaceAll visibility:public modality:OPEN returnType:kotlin.Unit [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] java.util.function.BiFunction<in @[FlexibleNullability] @[EnhancedNullability] T of <root>.A?, in @[FlexibleNullability] @[EnhancedNullability] T of <root>.A?, out @[FlexibleNullability] @[EnhancedNullability] T of <root>.A?>
      overridden:
        public open fun replaceAll (p0: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, in @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?, out @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?>): kotlin.Unit declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:subMap visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<T of <root>.A, T of <root>.A>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] T of <root>.A?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[FlexibleNullability] T of <root>.A?
      overridden:
        public abstract fun subMap (p0: @[FlexibleNullability] K of java.util.SortedMap?, p1: @[FlexibleNullability] K of java.util.SortedMap?): @[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:tailMap visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<T of <root>.A, T of <root>.A>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] T of <root>.A?
      overridden:
        public abstract fun tailMap (p0: @[FlexibleNullability] K of java.util.SortedMap?): @[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in java.util.SortedMap
        public open fun toString (): kotlin.String declared in kotlin.collections.Map
    PROPERTY FAKE_OVERRIDE name:entries visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract entries: @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>> declared in java.util.SortedMap
        public abstract entries: kotlin.collections.Set<kotlin.collections.Map.Entry<K of kotlin.collections.Map, V of kotlin.collections.Map>> declared in kotlin.collections.Map
      FUN FAKE_OVERRIDE name:<get-entries> visibility:public modality:ABSTRACT returnType:@[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] T of <root>.A?, @[FlexibleNullability] T of <root>.A?>> [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<T of <root>.A, T of <root>.A>
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:entries visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-entries> (): @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>> declared in java.util.SortedMap
          public abstract fun <get-entries> (): kotlin.collections.Set<kotlin.collections.Map.Entry<K of kotlin.collections.Map, V of kotlin.collections.Map>> declared in kotlin.collections.Map
    PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract keys: @[EnhancedNullability] kotlin.collections.MutableSet<@[FlexibleNullability] K of java.util.SortedMap?> declared in java.util.SortedMap
        public abstract keys: kotlin.collections.Set<K of kotlin.collections.Map> declared in kotlin.collections.Map
      FUN FAKE_OVERRIDE name:<get-keys> visibility:public modality:ABSTRACT returnType:@[EnhancedNullability] kotlin.collections.MutableSet<@[FlexibleNullability] T of <root>.A?> [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<T of <root>.A, T of <root>.A>
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-keys> (): @[EnhancedNullability] kotlin.collections.MutableSet<@[FlexibleNullability] K of java.util.SortedMap?> declared in java.util.SortedMap
          public abstract fun <get-keys> (): kotlin.collections.Set<K of kotlin.collections.Map> declared in kotlin.collections.Map
    PROPERTY FAKE_OVERRIDE name:size visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract size: kotlin.Int declared in java.util.SortedMap
        public abstract size: kotlin.Int declared in kotlin.collections.Map
      FUN FAKE_OVERRIDE name:<get-size> visibility:public modality:ABSTRACT returnType:kotlin.Int [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<T of <root>.A, T of <root>.A>
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:size visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-size> (): kotlin.Int declared in java.util.SortedMap
          public abstract fun <get-size> (): kotlin.Int declared in kotlin.collections.Map
    PROPERTY FAKE_OVERRIDE name:values visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract values: @[EnhancedNullability] kotlin.collections.MutableCollection<@[FlexibleNullability] V of java.util.SortedMap?> declared in java.util.SortedMap
        public abstract values: kotlin.collections.Collection<V of kotlin.collections.Map> declared in kotlin.collections.Map
      FUN FAKE_OVERRIDE name:<get-values> visibility:public modality:ABSTRACT returnType:@[EnhancedNullability] kotlin.collections.MutableCollection<@[FlexibleNullability] T of <root>.A?> [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<T of <root>.A, T of <root>.A>
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:values visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-values> (): @[EnhancedNullability] kotlin.collections.MutableCollection<@[FlexibleNullability] V of java.util.SortedMap?> declared in java.util.SortedMap
          public abstract fun <get-values> (): kotlin.collections.Collection<V of kotlin.collections.Map> declared in kotlin.collections.Map
  CLASS CLASS name:B modality:ABSTRACT visibility:public superTypes:[java.util.SortedMap<T of <root>.B, T of <root>.B>; kotlin.collections.Map<T of <root>.B, T of <root>.B>]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.B<T of <root>.B>
    TYPE_PARAMETER name:T index:0 variance: superTypes:[kotlin.Any?] reified:false
    CONSTRUCTOR visibility:public returnType:<root>.B<T of <root>.B> [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:B modality:ABSTRACT visibility:public superTypes:[java.util.SortedMap<T of <root>.B, T of <root>.B>; kotlin.collections.Map<T of <root>.B, T of <root>.B>]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:clear visibility:public modality:ABSTRACT returnType:kotlin.Unit [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      overridden:
        public abstract fun clear (): kotlin.Unit declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:comparator visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] java.util.Comparator<in @[FlexibleNullability] T of <root>.B?>? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<T of <root>.B, T of <root>.B>
      overridden:
        public abstract fun comparator (): @[FlexibleNullability] java.util.Comparator<in @[FlexibleNullability] K of java.util.SortedMap?>? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:compute visibility:public modality:OPEN returnType:@[EnhancedNullability] T of <root>.B? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.B?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] java.util.function.BiFunction<in @[FlexibleNullability] @[EnhancedNullability] T of <root>.B?, in @[EnhancedNullability] T of <root>.B?, out @[EnhancedNullability] T of <root>.B?>
      overridden:
        public open fun compute (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, in @[EnhancedNullability] V of java.util.SortedMap?, out @[EnhancedNullability] V of java.util.SortedMap?>): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:computeIfAbsent visibility:public modality:OPEN returnType:@[FlexibleNullability] @[EnhancedNullability] T of <root>.B? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.B?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] java.util.function.Function<in @[FlexibleNullability] @[EnhancedNullability] T of <root>.B?, out @[FlexibleNullability] @[EnhancedNullability] T of <root>.B?>
      overridden:
        public open fun computeIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] java.util.function.Function<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, out @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?>): @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:computeIfPresent visibility:public modality:OPEN returnType:@[EnhancedNullability] T of <root>.B? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.B?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] java.util.function.BiFunction<in @[FlexibleNullability] @[EnhancedNullability] T of <root>.B?, in @[EnhancedNullability] {T of <root>.B & Any}, out @[EnhancedNullability] T of <root>.B?>
      overridden:
        public open fun computeIfPresent (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, in @[EnhancedNullability] {V of java.util.SortedMap & Any}, out @[EnhancedNullability] V of java.util.SortedMap?>): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:containsKey visibility:public modality:ABSTRACT returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] T of <root>.B?
      overridden:
        public abstract fun containsKey (key: @[FlexibleNullability] K of java.util.SortedMap?): kotlin.Boolean declared in java.util.SortedMap
        public abstract fun containsKey (key: K of kotlin.collections.Map): kotlin.Boolean declared in kotlin.collections.Map
    FUN FAKE_OVERRIDE name:containsValue visibility:public modality:ABSTRACT returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER kind:Regular name:value index:1 type:@[FlexibleNullability] T of <root>.B?
      overridden:
        public abstract fun containsValue (value: @[FlexibleNullability] V of java.util.SortedMap?): kotlin.Boolean declared in java.util.SortedMap
        public abstract fun containsValue (value: V of kotlin.collections.Map): kotlin.Boolean declared in kotlin.collections.Map
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in java.util.SortedMap
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.collections.Map
    FUN FAKE_OVERRIDE name:firstKey visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] T of <root>.B? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<T of <root>.B, T of <root>.B>
      overridden:
        public abstract fun firstKey (): @[FlexibleNullability] K of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:forEach visibility:public modality:OPEN returnType:kotlin.Unit [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] java.util.function.BiConsumer<in @[FlexibleNullability] @[EnhancedNullability] T of <root>.B?, in @[FlexibleNullability] @[EnhancedNullability] T of <root>.B?>
      overridden:
        public open fun forEach (p0: @[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, in @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?>): kotlin.Unit declared in java.util.SortedMap
        public open fun forEach (p0: @[EnhancedNullability] java.util.function.BiConsumer<in @[EnhancedNullability] K of kotlin.collections.Map, in @[EnhancedNullability] V of kotlin.collections.Map>): kotlin.Unit declared in kotlin.collections.Map
    FUN FAKE_OVERRIDE name:get visibility:public modality:ABSTRACT returnType:T of <root>.B? [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] T of <root>.B?
      overridden:
        public abstract fun get (key: @[FlexibleNullability] K of java.util.SortedMap?): V of java.util.SortedMap? declared in java.util.SortedMap
        public abstract fun get (key: K of kotlin.collections.Map): V of kotlin.collections.Map? declared in kotlin.collections.Map
    FUN FAKE_OVERRIDE name:getOrDefault visibility:public modality:OPEN returnType:T of <root>.B [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<T of <root>.B, T of <root>.B>
      VALUE_PARAMETER kind:Regular name:key index:1 type:T of <root>.B
      VALUE_PARAMETER kind:Regular name:defaultValue index:2 type:T of <root>.B
      annotations:
        SinceKotlin(version = "1.1")
        PlatformDependent
      overridden:
        public open fun getOrDefault (key: @[FlexibleNullability] K of java.util.SortedMap?, defaultValue: @[FlexibleNullability] V of java.util.SortedMap?): @[FlexibleNullability] V of java.util.SortedMap? declared in java.util.SortedMap
        public open fun getOrDefault (key: K of kotlin.collections.Map, defaultValue: V of kotlin.collections.Map): V of kotlin.collections.Map declared in kotlin.collections.Map
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in java.util.SortedMap
        public open fun hashCode (): kotlin.Int declared in kotlin.collections.Map
    FUN FAKE_OVERRIDE name:headMap visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<T of <root>.B, T of <root>.B>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] T of <root>.B?
      overridden:
        public abstract fun headMap (p0: @[FlexibleNullability] K of java.util.SortedMap?): @[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:isEmpty visibility:public modality:ABSTRACT returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.Map<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      overridden:
        public abstract fun isEmpty (): kotlin.Boolean declared in java.util.SortedMap
        public abstract fun isEmpty (): kotlin.Boolean declared in kotlin.collections.Map
    FUN FAKE_OVERRIDE name:lastKey visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] T of <root>.B? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<T of <root>.B, T of <root>.B>
      overridden:
        public abstract fun lastKey (): @[FlexibleNullability] K of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:merge visibility:public modality:OPEN returnType:@[EnhancedNullability] T of <root>.B? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.B?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[EnhancedNullability] {T of <root>.B & Any}
      VALUE_PARAMETER kind:Regular name:p2 index:3 type:@[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] {T of <root>.B & Any}, in @[EnhancedNullability] {T of <root>.B & Any}, out @[EnhancedNullability] T of <root>.B?>
      overridden:
        public open fun merge (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] {V of java.util.SortedMap & Any}, p2: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] {V of java.util.SortedMap & Any}, in @[EnhancedNullability] {V of java.util.SortedMap & Any}, out @[EnhancedNullability] V of java.util.SortedMap?>): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:putAll visibility:public modality:ABSTRACT returnType:kotlin.Unit [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER kind:Regular name:from index:1 type:kotlin.collections.Map<out @[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      overridden:
        public abstract fun putAll (from: kotlin.collections.Map<out @[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>): kotlin.Unit declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:putIfAbsent visibility:public modality:OPEN returnType:@[EnhancedNullability] T of <root>.B? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.B?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.B?
      overridden:
        public open fun putIfAbsent (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:remove visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER kind:Regular name:key index:1 type:@[FlexibleNullability] T of <root>.B?
      VALUE_PARAMETER kind:Regular name:value index:2 type:@[FlexibleNullability] T of <root>.B?
      annotations:
        SinceKotlin(version = "1.1")
        PlatformDependent
      overridden:
        public open fun remove (key: @[FlexibleNullability] K of java.util.SortedMap?, value: @[FlexibleNullability] V of java.util.SortedMap?): kotlin.Boolean declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN returnType:@[EnhancedNullability] T of <root>.B? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.B?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.B?
      overridden:
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?): @[EnhancedNullability] V of java.util.SortedMap? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:replace visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.B?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.B?
      VALUE_PARAMETER kind:Regular name:p2 index:3 type:@[FlexibleNullability] @[EnhancedNullability] T of <root>.B?
      overridden:
        public open fun replace (p0: @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, p1: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?, p2: @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?): kotlin.Boolean declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:replaceAll visibility:public modality:OPEN returnType:kotlin.Unit [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.collections.MutableMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[EnhancedNullability] java.util.function.BiFunction<in @[FlexibleNullability] @[EnhancedNullability] T of <root>.B?, in @[FlexibleNullability] @[EnhancedNullability] T of <root>.B?, out @[FlexibleNullability] @[EnhancedNullability] T of <root>.B?>
      overridden:
        public open fun replaceAll (p0: @[EnhancedNullability] java.util.function.BiFunction<in @[EnhancedNullability] @[FlexibleNullability] K of java.util.SortedMap?, in @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?, out @[EnhancedNullability] @[FlexibleNullability] V of java.util.SortedMap?>): kotlin.Unit declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:subMap visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<T of <root>.B, T of <root>.B>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] T of <root>.B?
      VALUE_PARAMETER kind:Regular name:p1 index:2 type:@[FlexibleNullability] T of <root>.B?
      overridden:
        public abstract fun subMap (p0: @[FlexibleNullability] K of java.util.SortedMap?, p1: @[FlexibleNullability] K of java.util.SortedMap?): @[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:tailMap visibility:public modality:ABSTRACT returnType:@[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>? [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<T of <root>.B, T of <root>.B>
      VALUE_PARAMETER kind:Regular name:p0 index:1 type:@[FlexibleNullability] T of <root>.B?
      overridden:
        public abstract fun tailMap (p0: @[FlexibleNullability] K of java.util.SortedMap?): @[FlexibleNullability] java.util.SortedMap<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>? declared in java.util.SortedMap
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in java.util.SortedMap
        public open fun toString (): kotlin.String declared in kotlin.collections.Map
    FUN name:put visibility:public modality:OPEN returnType:T of <root>.B
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.B<T of <root>.B>
      VALUE_PARAMETER kind:Regular name:key index:1 type:T of <root>.B
      VALUE_PARAMETER kind:Regular name:value index:2 type:T of <root>.B
      overridden:
        public abstract fun put (key: @[FlexibleNullability] K of java.util.SortedMap?, value: @[FlexibleNullability] V of java.util.SortedMap?): V of java.util.SortedMap? declared in java.util.SortedMap
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun put (key: T of <root>.B, value: T of <root>.B): T of <root>.B declared in <root>.B'
          CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=kotlin.Nothing origin=EXCLEXCL
            TYPE_ARG T0: kotlin.Nothing
            ARG arg0: CONST Null type=kotlin.Nothing? value=null
    FUN name:remove visibility:public modality:OPEN returnType:T of <root>.B
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.B<T of <root>.B>
      VALUE_PARAMETER kind:Regular name:key index:1 type:T of <root>.B
      overridden:
        public abstract fun remove (key: @[FlexibleNullability] K of java.util.SortedMap?): V of java.util.SortedMap? declared in java.util.SortedMap
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public open fun remove (key: T of <root>.B): T of <root>.B declared in <root>.B'
          CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=kotlin.Nothing origin=EXCLEXCL
            TYPE_ARG T0: kotlin.Nothing
            ARG arg0: CONST Null type=kotlin.Nothing? value=null
    PROPERTY FAKE_OVERRIDE name:entries visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract entries: @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>> declared in java.util.SortedMap
        public abstract entries: kotlin.collections.Set<kotlin.collections.Map.Entry<K of kotlin.collections.Map, V of kotlin.collections.Map>> declared in kotlin.collections.Map
      FUN FAKE_OVERRIDE name:<get-entries> visibility:public modality:ABSTRACT returnType:@[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] T of <root>.B?, @[FlexibleNullability] T of <root>.B?>> [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<T of <root>.B, T of <root>.B>
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:entries visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-entries> (): @[EnhancedNullability] kotlin.collections.MutableSet<@[EnhancedNullability] kotlin.collections.MutableMap.MutableEntry<@[FlexibleNullability] K of java.util.SortedMap?, @[FlexibleNullability] V of java.util.SortedMap?>> declared in java.util.SortedMap
          public abstract fun <get-entries> (): kotlin.collections.Set<kotlin.collections.Map.Entry<K of kotlin.collections.Map, V of kotlin.collections.Map>> declared in kotlin.collections.Map
    PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract keys: @[EnhancedNullability] kotlin.collections.MutableSet<@[FlexibleNullability] K of java.util.SortedMap?> declared in java.util.SortedMap
        public abstract keys: kotlin.collections.Set<K of kotlin.collections.Map> declared in kotlin.collections.Map
      FUN FAKE_OVERRIDE name:<get-keys> visibility:public modality:ABSTRACT returnType:@[EnhancedNullability] kotlin.collections.MutableSet<@[FlexibleNullability] T of <root>.B?> [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<T of <root>.B, T of <root>.B>
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:keys visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-keys> (): @[EnhancedNullability] kotlin.collections.MutableSet<@[FlexibleNullability] K of java.util.SortedMap?> declared in java.util.SortedMap
          public abstract fun <get-keys> (): kotlin.collections.Set<K of kotlin.collections.Map> declared in kotlin.collections.Map
    PROPERTY FAKE_OVERRIDE name:size visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract size: kotlin.Int declared in java.util.SortedMap
        public abstract size: kotlin.Int declared in kotlin.collections.Map
      FUN FAKE_OVERRIDE name:<get-size> visibility:public modality:ABSTRACT returnType:kotlin.Int [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<T of <root>.B, T of <root>.B>
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:size visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-size> (): kotlin.Int declared in java.util.SortedMap
          public abstract fun <get-size> (): kotlin.Int declared in kotlin.collections.Map
    PROPERTY FAKE_OVERRIDE name:values visibility:public modality:ABSTRACT [fake_override,val]
      overridden:
        public abstract values: @[EnhancedNullability] kotlin.collections.MutableCollection<@[FlexibleNullability] V of java.util.SortedMap?> declared in java.util.SortedMap
        public abstract values: kotlin.collections.Collection<V of kotlin.collections.Map> declared in kotlin.collections.Map
      FUN FAKE_OVERRIDE name:<get-values> visibility:public modality:ABSTRACT returnType:@[EnhancedNullability] kotlin.collections.MutableCollection<@[FlexibleNullability] T of <root>.B?> [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:java.util.SortedMap<T of <root>.B, T of <root>.B>
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:values visibility:public modality:ABSTRACT [fake_override,val]
        overridden:
          public abstract fun <get-values> (): @[EnhancedNullability] kotlin.collections.MutableCollection<@[FlexibleNullability] V of java.util.SortedMap?> declared in java.util.SortedMap
          public abstract fun <get-values> (): kotlin.collections.Collection<V of kotlin.collections.Map> declared in kotlin.collections.Map
  FUN name:test visibility:public modality:FINAL returnType:kotlin.Unit
    VALUE_PARAMETER kind:Regular name:a index:0 type:<root>.A<kotlin.Boolean>
    VALUE_PARAMETER kind:Regular name:b index:1 type:<root>.B<kotlin.Boolean?>
    BLOCK_BODY
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun <get-size> (): kotlin.Int declared in <root>.A' type=kotlin.Int origin=GET_PROPERTY
          ARG <this>: GET_VAR 'a: <root>.A<kotlin.Boolean> declared in <root>.test' type=<root>.A<kotlin.Boolean> origin=null
      CALL 'public final fun set <K, V> (<this>: kotlin.collections.MutableMap<K of kotlin.collections.set, V of kotlin.collections.set>, key: K of kotlin.collections.set, value: V of kotlin.collections.set): kotlin.Unit declared in kotlin.collections' type=kotlin.Unit origin=EQ
        TYPE_ARG K: @[FlexibleNullability] kotlin.Boolean?
        TYPE_ARG V: @[FlexibleNullability] kotlin.Boolean?
        ARG <this>: GET_VAR 'a: <root>.A<kotlin.Boolean> declared in <root>.test' type=<root>.A<kotlin.Boolean> origin=null
        ARG key: CONST Boolean type=kotlin.Boolean value=true
        ARG value: CONST Boolean type=kotlin.Boolean value=true
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun put (key: @[FlexibleNullability] T of <root>.A?, value: @[FlexibleNullability] T of <root>.A?): T of <root>.A? declared in <root>.A' type=kotlin.Boolean? origin=null
          ARG <this>: GET_VAR 'a: <root>.A<kotlin.Boolean> declared in <root>.test' type=<root>.A<kotlin.Boolean> origin=null
          ARG key: CONST Null type=kotlin.Nothing? value=null
          ARG value: CONST Null type=kotlin.Nothing? value=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun get (key: @[FlexibleNullability] T of <root>.A?): T of <root>.A? declared in <root>.A' type=kotlin.Boolean? origin=null
          ARG <this>: GET_VAR 'a: <root>.A<kotlin.Boolean> declared in <root>.test' type=<root>.A<kotlin.Boolean> origin=null
          ARG key: CONST Boolean type=kotlin.Boolean value=true
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun get (key: @[FlexibleNullability] T of <root>.A?): T of <root>.A? declared in <root>.A' type=kotlin.Boolean? origin=null
          ARG <this>: GET_VAR 'a: <root>.A<kotlin.Boolean> declared in <root>.test' type=<root>.A<kotlin.Boolean> origin=null
          ARG key: CONST Null type=kotlin.Nothing? value=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun remove (key: @[FlexibleNullability] T of <root>.A?): T of <root>.A? declared in <root>.A' type=kotlin.Boolean? origin=null
          ARG <this>: GET_VAR 'a: <root>.A<kotlin.Boolean> declared in <root>.test' type=<root>.A<kotlin.Boolean> origin=null
          ARG key: CONST Null type=kotlin.Nothing? value=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun remove (key: @[FlexibleNullability] T of <root>.A?): T of <root>.A? declared in <root>.A' type=kotlin.Boolean? origin=null
          ARG <this>: GET_VAR 'a: <root>.A<kotlin.Boolean> declared in <root>.test' type=<root>.A<kotlin.Boolean> origin=null
          ARG key: CONST Boolean type=kotlin.Boolean value=true
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public abstract fun <get-size> (): kotlin.Int declared in <root>.B' type=kotlin.Int origin=GET_PROPERTY
          ARG <this>: GET_VAR 'b: <root>.B<kotlin.Boolean?> declared in <root>.test' type=<root>.B<kotlin.Boolean?> origin=null
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun put (key: T of <root>.B, value: T of <root>.B): T of <root>.B declared in <root>.B' type=kotlin.Boolean? origin=null
          ARG <this>: GET_VAR 'b: <root>.B<kotlin.Boolean?> declared in <root>.test' type=<root>.B<kotlin.Boolean?> origin=null
          ARG key: CONST Boolean type=kotlin.Boolean value=false
          ARG value: CONST Boolean type=kotlin.Boolean value=false
      CALL 'public final fun set <K, V> (<this>: kotlin.collections.MutableMap<K of kotlin.collections.set, V of kotlin.collections.set>, key: K of kotlin.collections.set, value: V of kotlin.collections.set): kotlin.Unit declared in kotlin.collections' type=kotlin.Unit origin=EQ
        TYPE_ARG K: kotlin.Boolean?
        TYPE_ARG V: kotlin.Boolean?
        ARG <this>: GET_VAR 'b: <root>.B<kotlin.Boolean?> declared in <root>.test' type=<root>.B<kotlin.Boolean?> origin=null
        ARG key: CONST Boolean type=kotlin.Boolean value=true
        ARG value: CONST Boolean type=kotlin.Boolean value=true
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public open fun remove (key: T of <root>.B): T of <root>.B declared in <root>.B' type=kotlin.Boolean? origin=null
          ARG <this>: GET_VAR 'b: <root>.B<kotlin.Boolean?> declared in <root>.test' type=<root>.B<kotlin.Boolean?> origin=null
          ARG key: CONST Null type=kotlin.Nothing? value=null
