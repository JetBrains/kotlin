FILE[kind=File[packageFqName=kotlin]]
  PACKAGE_DIRECTIVE
    REFERENCE_EXPRESSION[referencedName=kotlin]
  IMPORT_LIST
  FUN[fqName=kotlin.arrayOf, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=true, isExtension=false, isTopLevel=true, mayHaveContract=false, name=arrayOf]
    origin: Facade(className=kotlin/LibraryKt, jvmClassName=null)
    MODIFIER_LIST[public inline MustUseReturnValue]
    TYPE_PARAMETER_LIST
      TYPE_PARAMETER[fqName=null, name=T]
        MODIFIER_LIST[reified]
    VALUE_PARAMETER_LIST
      VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=elements]
        MODIFIER_LIST[vararg]
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=T]
    TYPE_REFERENCE
      USER_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=kotlin]
        REFERENCE_EXPRESSION[referencedName=Array]
        TYPE_ARGUMENT_LIST
          TYPE_PROJECTION[projectionKind=NONE]
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=T]
  FUN[fqName=kotlin.arrayOfNulls, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=true, isExtension=false, isTopLevel=true, mayHaveContract=false, name=arrayOfNulls]
    origin: Facade(className=kotlin/LibraryKt, jvmClassName=null)
    MODIFIER_LIST[public MustUseReturnValue]
    TYPE_PARAMETER_LIST
      TYPE_PARAMETER[fqName=null, name=T]
        MODIFIER_LIST[reified]
    VALUE_PARAMETER_LIST
      VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=size]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
    TYPE_REFERENCE
      USER_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=kotlin]
        REFERENCE_EXPRESSION[referencedName=Array]
        TYPE_ARGUMENT_LIST
          TYPE_PROJECTION[projectionKind=NONE]
            TYPE_REFERENCE
              NULLABLE_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=T]
  FUN[fqName=kotlin.booleanArrayOf, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=booleanArrayOf]
    origin: Facade(className=kotlin/LibraryKt, jvmClassName=null)
    MODIFIER_LIST[public MustUseReturnValue]
    VALUE_PARAMETER_LIST
      VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=elements]
        MODIFIER_LIST[vararg]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Boolean]
    TYPE_REFERENCE
      USER_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=kotlin]
        REFERENCE_EXPRESSION[referencedName=BooleanArray]
  FUN[fqName=kotlin.byteArrayOf, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=byteArrayOf]
    origin: Facade(className=kotlin/LibraryKt, jvmClassName=null)
    MODIFIER_LIST[public MustUseReturnValue]
    VALUE_PARAMETER_LIST
      VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=elements]
        MODIFIER_LIST[vararg]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Byte]
    TYPE_REFERENCE
      USER_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=kotlin]
        REFERENCE_EXPRESSION[referencedName=ByteArray]
  FUN[fqName=kotlin.charArrayOf, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=charArrayOf]
    origin: Facade(className=kotlin/LibraryKt, jvmClassName=null)
    MODIFIER_LIST[public MustUseReturnValue]
    VALUE_PARAMETER_LIST
      VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=elements]
        MODIFIER_LIST[vararg]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Char]
    TYPE_REFERENCE
      USER_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=kotlin]
        REFERENCE_EXPRESSION[referencedName=CharArray]
  FUN[fqName=kotlin.doubleArrayOf, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=doubleArrayOf]
    origin: Facade(className=kotlin/LibraryKt, jvmClassName=null)
    MODIFIER_LIST[public MustUseReturnValue]
    VALUE_PARAMETER_LIST
      VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=elements]
        MODIFIER_LIST[vararg]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
    TYPE_REFERENCE
      USER_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=kotlin]
        REFERENCE_EXPRESSION[referencedName=DoubleArray]
  FUN[fqName=kotlin.emptyArray, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=true, isExtension=false, isTopLevel=true, mayHaveContract=false, name=emptyArray]
    origin: Facade(className=kotlin/LibraryKt, jvmClassName=null)
    MODIFIER_LIST[public inline MustUseReturnValue]
    TYPE_PARAMETER_LIST
      TYPE_PARAMETER[fqName=null, name=T]
        MODIFIER_LIST[reified]
    VALUE_PARAMETER_LIST
    TYPE_REFERENCE
      USER_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=kotlin]
        REFERENCE_EXPRESSION[referencedName=Array]
        TYPE_ARGUMENT_LIST
          TYPE_PROJECTION[projectionKind=NONE]
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=T]
  FUN[fqName=kotlin.enumValueOf, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=true, isExtension=false, isTopLevel=true, mayHaveContract=false, name=enumValueOf]
    origin: Facade(className=kotlin/LibraryKt, jvmClassName=null)
    MODIFIER_LIST[public inline MustUseReturnValue]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
        valueArguments: [ version -> "1.1" ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=SinceKotlin]
    TYPE_PARAMETER_LIST
      TYPE_PARAMETER[fqName=null, name=T]
        MODIFIER_LIST[reified]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Enum]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=NONE]
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=T]
    VALUE_PARAMETER_LIST
      VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=name]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
    TYPE_REFERENCE
      USER_TYPE
        REFERENCE_EXPRESSION[referencedName=T]
  FUN[fqName=kotlin.enumValues, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=true, isExtension=false, isTopLevel=true, mayHaveContract=false, name=enumValues]
    origin: Facade(className=kotlin/LibraryKt, jvmClassName=null)
    MODIFIER_LIST[public inline MustUseReturnValue]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
        valueArguments: [ version -> "1.1" ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=SinceKotlin]
    TYPE_PARAMETER_LIST
      TYPE_PARAMETER[fqName=null, name=T]
        MODIFIER_LIST[reified]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Enum]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=NONE]
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=T]
    VALUE_PARAMETER_LIST
    TYPE_REFERENCE
      USER_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=kotlin]
        REFERENCE_EXPRESSION[referencedName=Array]
        TYPE_ARGUMENT_LIST
          TYPE_PROJECTION[projectionKind=NONE]
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=T]
  FUN[fqName=kotlin.floatArrayOf, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=floatArrayOf]
    origin: Facade(className=kotlin/LibraryKt, jvmClassName=null)
    MODIFIER_LIST[public MustUseReturnValue]
    VALUE_PARAMETER_LIST
      VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=elements]
        MODIFIER_LIST[vararg]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
    TYPE_REFERENCE
      USER_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=kotlin]
        REFERENCE_EXPRESSION[referencedName=FloatArray]
  FUN[fqName=kotlin.intArrayOf, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=intArrayOf]
    origin: Facade(className=kotlin/LibraryKt, jvmClassName=null)
    MODIFIER_LIST[public MustUseReturnValue]
    VALUE_PARAMETER_LIST
      VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=elements]
        MODIFIER_LIST[vararg]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
    TYPE_REFERENCE
      USER_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=kotlin]
        REFERENCE_EXPRESSION[referencedName=IntArray]
  FUN[fqName=kotlin.longArrayOf, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=longArrayOf]
    origin: Facade(className=kotlin/LibraryKt, jvmClassName=null)
    MODIFIER_LIST[public MustUseReturnValue]
    VALUE_PARAMETER_LIST
      VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=elements]
        MODIFIER_LIST[vararg]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
    TYPE_REFERENCE
      USER_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=kotlin]
        REFERENCE_EXPRESSION[referencedName=LongArray]
  FUN[fqName=kotlin.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=true, isTopLevel=true, mayHaveContract=false, name=plus]
    origin: Facade(className=kotlin/LibraryKt, jvmClassName=null)
    MODIFIER_LIST[public operator MustUseReturnValue]
    TYPE_REFERENCE
      NULLABLE_TYPE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=String]
    VALUE_PARAMETER_LIST
      VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
        TYPE_REFERENCE
          NULLABLE_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=Any]
    TYPE_REFERENCE
      USER_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=kotlin]
        REFERENCE_EXPRESSION[referencedName=String]
  FUN[fqName=kotlin.shortArrayOf, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=shortArrayOf]
    origin: Facade(className=kotlin/LibraryKt, jvmClassName=null)
    MODIFIER_LIST[public MustUseReturnValue]
    VALUE_PARAMETER_LIST
      VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=elements]
        MODIFIER_LIST[vararg]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Short]
    TYPE_REFERENCE
      USER_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=kotlin]
        REFERENCE_EXPRESSION[referencedName=ShortArray]
  FUN[fqName=kotlin.toString, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=true, isTopLevel=true, mayHaveContract=false, name=toString]
    origin: Facade(className=kotlin/LibraryKt, jvmClassName=null)
    MODIFIER_LIST[public MustUseReturnValue]
    TYPE_REFERENCE
      NULLABLE_TYPE
        USER_TYPE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=kotlin]
          REFERENCE_EXPRESSION[referencedName=Any]
    VALUE_PARAMETER_LIST
    TYPE_REFERENCE
      USER_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=kotlin]
        REFERENCE_EXPRESSION[referencedName=String]
  CLASS[classId=kotlin/Annotation, fqName=kotlin.Annotation, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=true, isLocal=false, isTopLevel=true, name=Annotation, superNames=[]]
    MODIFIER_LIST[public]
    CLASS_BODY
  CLASS[classId=kotlin/Any, fqName=kotlin.Any, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=Any, superNames=[]]
    MODIFIER_LIST[public open]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Any]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
    CLASS_BODY
      FUN[fqName=kotlin.Any.equals, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=equals]
        MODIFIER_LIST[public open operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              NULLABLE_TYPE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Any]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Boolean]
      FUN[fqName=kotlin.Any.hashCode, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=hashCode]
        MODIFIER_LIST[public open MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Any.toString, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toString]
        MODIFIER_LIST[public open MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
  CLASS[classId=kotlin/Array, fqName=kotlin.Array, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=Array, superNames=[]]
    MODIFIER_LIST[public final]
    TYPE_PARAMETER_LIST
      TYPE_PARAMETER[fqName=null, name=T]
    CLASS_BODY
      SECONDARY_CONSTRUCTOR[fqName=null, hasBody=true, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Array]
        MODIFIER_LIST[public MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=size]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=init]
            TYPE_REFERENCE
              FUNCTION_TYPE
                VALUE_PARAMETER_LIST
                  VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=null]
                    TYPE_REFERENCE
                      USER_TYPE
                        USER_TYPE
                          REFERENCE_EXPRESSION[referencedName=kotlin]
                        REFERENCE_EXPRESSION[referencedName=Int]
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=T]
      PROPERTY[fqName=kotlin.Array.size, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=size]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Array.get, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=get]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=index]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=T]
      FUN[fqName=kotlin.Array.set, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=set]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=index]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=value]
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=T]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Unit]
      FUN[fqName=kotlin.Array.iterator, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=iterator]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=collections]
            REFERENCE_EXPRESSION[referencedName=Iterator]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=NONE]
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=T]
  CLASS[classId=kotlin/Boolean, fqName=kotlin.Boolean, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=Boolean, superNames=[Comparable]]
    MODIFIER_LIST[public final]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Boolean]
      MODIFIER_LIST[private MustUseReturnValue]
      VALUE_PARAMETER_LIST
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Comparable]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=NONE]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=Boolean]
    CLASS_BODY
      OBJECT_DECLARATION[classId=kotlin/Boolean.Companion, fqName=kotlin.Boolean.Companion, isLocal=false, isObjectLiteral=false, isTopLevel=false, name=Companion, superNames=[]]
        MODIFIER_LIST[public companion]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.3" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
        CLASS_BODY
      FUN[fqName=kotlin.Boolean.not, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=not]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Boolean]
      FUN[fqName=kotlin.Boolean.and, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=and]
        MODIFIER_LIST[public final infix MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Boolean]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Boolean]
      FUN[fqName=kotlin.Boolean.or, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=or]
        MODIFIER_LIST[public final infix MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Boolean]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Boolean]
      FUN[fqName=kotlin.Boolean.xor, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=xor]
        MODIFIER_LIST[public final infix MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Boolean]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Boolean]
      FUN[fqName=kotlin.Boolean.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public open operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Boolean]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Boolean.toString, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toString]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
      FUN[fqName=kotlin.Boolean.equals, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=equals]
        MODIFIER_LIST[public open operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              NULLABLE_TYPE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Any]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Boolean]
      FUN[fqName=kotlin.Boolean.hashCode, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=hashCode]
        MODIFIER_LIST[public open MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
  CLASS[classId=kotlin/BooleanArray, fqName=kotlin.BooleanArray, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=BooleanArray, superNames=[]]
    MODIFIER_LIST[public final]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=BooleanArray]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=size]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=Int]
    CLASS_BODY
      SECONDARY_CONSTRUCTOR[fqName=null, hasBody=true, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=BooleanArray]
        MODIFIER_LIST[public MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=size]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=init]
            TYPE_REFERENCE
              FUNCTION_TYPE
                VALUE_PARAMETER_LIST
                  VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=null]
                    TYPE_REFERENCE
                      USER_TYPE
                        USER_TYPE
                          REFERENCE_EXPRESSION[referencedName=kotlin]
                        REFERENCE_EXPRESSION[referencedName=Int]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=Boolean]
      PROPERTY[fqName=kotlin.BooleanArray.size, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=size]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.BooleanArray.get, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=get]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=index]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Boolean]
      FUN[fqName=kotlin.BooleanArray.set, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=set]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=index]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=value]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Boolean]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Unit]
      FUN[fqName=kotlin.BooleanArray.iterator, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=iterator]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=collections]
            REFERENCE_EXPRESSION[referencedName=BooleanIterator]
  CLASS[classId=kotlin/Byte, fqName=kotlin.Byte, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=Byte, superNames=[Number, Comparable]]
    MODIFIER_LIST[public final]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Byte]
      MODIFIER_LIST[private MustUseReturnValue]
      VALUE_PARAMETER_LIST
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Number]
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Comparable]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=NONE]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=Byte]
    CLASS_BODY
      OBJECT_DECLARATION[classId=kotlin/Byte.Companion, fqName=kotlin.Byte.Companion, isLocal=false, isObjectLiteral=false, isTopLevel=false, name=Companion, superNames=[]]
        MODIFIER_LIST[public companion]
        CLASS_BODY
          PROPERTY[fqName=kotlin.Byte.Companion.MIN_VALUE, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=MIN_VALUE]
            constantInitializer: -128.toByte()
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Byte.Companion.MAX_VALUE, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=MAX_VALUE]
            constantInitializer: 127.toByte()
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Byte.Companion.SIZE_BYTES, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=SIZE_BYTES]
            constantInitializer: 1
            MODIFIER_LIST[public const MustUseReturnValue]
              ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
                valueArguments: [ version -> "1.3" ]
                CONSTRUCTOR_CALLEE
                  TYPE_REFERENCE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=SinceKotlin]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Byte.Companion.SIZE_BITS, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=SIZE_BITS]
            constantInitializer: 8
            MODIFIER_LIST[public const MustUseReturnValue]
              ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
                valueArguments: [ version -> "1.3" ]
                CONSTRUCTOR_CALLEE
                  TYPE_REFERENCE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=SinceKotlin]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
      FUN[fqName=kotlin.Byte.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public open operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Byte.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Byte.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Byte.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Byte.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Byte.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Byte.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Byte.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Byte.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Byte.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Byte.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Byte.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Byte.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Byte.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Byte.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Byte.inc, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=inc]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Byte]
      FUN[fqName=kotlin.Byte.dec, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=dec]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Byte]
      FUN[fqName=kotlin.Byte.unaryPlus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=unaryPlus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.unaryMinus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=unaryMinus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.rangeTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=IntRange]
      FUN[fqName=kotlin.Byte.rangeTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=IntRange]
      FUN[fqName=kotlin.Byte.rangeTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=IntRange]
      FUN[fqName=kotlin.Byte.rangeTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=LongRange]
      FUN[fqName=kotlin.Byte.rangeUntil, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeUntil]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.9" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=WasExperimental]
            valueArguments: [ markerClass -> [NormalClass(value=kotlin/ExperimentalStdlibApi)] ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=WasExperimental]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=IntRange]
      FUN[fqName=kotlin.Byte.rangeUntil, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeUntil]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.9" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=WasExperimental]
            valueArguments: [ markerClass -> [NormalClass(value=kotlin/ExperimentalStdlibApi)] ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=WasExperimental]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=IntRange]
      FUN[fqName=kotlin.Byte.rangeUntil, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeUntil]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.9" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=WasExperimental]
            valueArguments: [ markerClass -> [NormalClass(value=kotlin/ExperimentalStdlibApi)] ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=WasExperimental]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=IntRange]
      FUN[fqName=kotlin.Byte.rangeUntil, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeUntil]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.9" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=WasExperimental]
            valueArguments: [ markerClass -> [NormalClass(value=kotlin/ExperimentalStdlibApi)] ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=WasExperimental]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=LongRange]
      FUN[fqName=kotlin.Byte.toByte, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toByte]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Byte]
      FUN[fqName=kotlin.Byte.toChar, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toChar]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=Deprecated]
            valueArguments: [
              message -> "Direct conversion to Char is deprecated. Use toInt().toChar() or Char constructor instead."
              replaceWith -> Value(classId=kotlin/ReplaceWith, argumentsMapping={expression="this.toInt().toChar()", imports=[]})
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Deprecated]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=DeprecatedSinceKotlin]
            valueArguments: [
              warningSince -> "1.5"
              errorSince -> "2.3"
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=DeprecatedSinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Char]
      FUN[fqName=kotlin.Byte.toShort, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toShort]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Short]
      FUN[fqName=kotlin.Byte.toInt, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toInt]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Byte.toLong, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toLong]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Byte.toFloat, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toFloat]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Byte.toDouble, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toDouble]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Byte.toString, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toString]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
      FUN[fqName=kotlin.Byte.equals, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=equals]
        MODIFIER_LIST[public open operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              NULLABLE_TYPE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Any]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Boolean]
  CLASS[classId=kotlin/ByteArray, fqName=kotlin.ByteArray, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=ByteArray, superNames=[]]
    MODIFIER_LIST[public final]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=ByteArray]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=size]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=Int]
    CLASS_BODY
      SECONDARY_CONSTRUCTOR[fqName=null, hasBody=true, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=ByteArray]
        MODIFIER_LIST[public MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=size]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=init]
            TYPE_REFERENCE
              FUNCTION_TYPE
                VALUE_PARAMETER_LIST
                  VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=null]
                    TYPE_REFERENCE
                      USER_TYPE
                        USER_TYPE
                          REFERENCE_EXPRESSION[referencedName=kotlin]
                        REFERENCE_EXPRESSION[referencedName=Int]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=Byte]
      PROPERTY[fqName=kotlin.ByteArray.size, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=size]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.ByteArray.get, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=get]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=index]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Byte]
      FUN[fqName=kotlin.ByteArray.set, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=set]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=index]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=value]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Unit]
      FUN[fqName=kotlin.ByteArray.iterator, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=iterator]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=collections]
            REFERENCE_EXPRESSION[referencedName=ByteIterator]
  CLASS[classId=kotlin/Char, fqName=kotlin.Char, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=Char, superNames=[Comparable]]
    MODIFIER_LIST[public final]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Char]
      MODIFIER_LIST[private MustUseReturnValue]
      VALUE_PARAMETER_LIST
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Comparable]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=NONE]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=Char]
    CLASS_BODY
      OBJECT_DECLARATION[classId=kotlin/Char.Companion, fqName=kotlin.Char.Companion, isLocal=false, isObjectLiteral=false, isTopLevel=false, name=Companion, superNames=[]]
        MODIFIER_LIST[public companion]
        CLASS_BODY
          PROPERTY[fqName=kotlin.Char.Companion.MIN_VALUE, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=MIN_VALUE]
            constantInitializer: \u0000 ('?')
            MODIFIER_LIST[public const MustUseReturnValue]
              ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
                valueArguments: [ version -> "1.3" ]
                CONSTRUCTOR_CALLEE
                  TYPE_REFERENCE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=SinceKotlin]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Char]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Char.Companion.MAX_VALUE, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=MAX_VALUE]
            constantInitializer: \uFFFF ('?')
            MODIFIER_LIST[public const MustUseReturnValue]
              ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
                valueArguments: [ version -> "1.3" ]
                CONSTRUCTOR_CALLEE
                  TYPE_REFERENCE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=SinceKotlin]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Char]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Char.Companion.MIN_HIGH_SURROGATE, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=MIN_HIGH_SURROGATE]
            constantInitializer: \uD800 ('?')
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Char]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Char.Companion.MAX_HIGH_SURROGATE, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=MAX_HIGH_SURROGATE]
            constantInitializer: \uDBFF ('?')
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Char]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Char.Companion.MIN_LOW_SURROGATE, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=MIN_LOW_SURROGATE]
            constantInitializer: \uDC00 ('?')
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Char]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Char.Companion.MAX_LOW_SURROGATE, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=MAX_LOW_SURROGATE]
            constantInitializer: \uDFFF ('?')
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Char]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Char.Companion.MIN_SURROGATE, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=MIN_SURROGATE]
            constantInitializer: \uD800 ('?')
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Char]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Char.Companion.MAX_SURROGATE, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=MAX_SURROGATE]
            constantInitializer: \uDFFF ('?')
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Char]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Char.Companion.SIZE_BYTES, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=SIZE_BYTES]
            constantInitializer: 2
            MODIFIER_LIST[public const MustUseReturnValue]
              ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
                valueArguments: [ version -> "1.3" ]
                CONSTRUCTOR_CALLEE
                  TYPE_REFERENCE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=SinceKotlin]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Char.Companion.SIZE_BITS, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=SIZE_BITS]
            constantInitializer: 16
            MODIFIER_LIST[public const MustUseReturnValue]
              ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
                valueArguments: [ version -> "1.3" ]
                CONSTRUCTOR_CALLEE
                  TYPE_REFERENCE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=SinceKotlin]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
      FUN[fqName=kotlin.Char.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public open operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Char]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Char.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Char]
      FUN[fqName=kotlin.Char.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Char]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Char.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Char]
      FUN[fqName=kotlin.Char.inc, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=inc]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Char]
      FUN[fqName=kotlin.Char.dec, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=dec]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Char]
      FUN[fqName=kotlin.Char.rangeTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Char]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=CharRange]
      FUN[fqName=kotlin.Char.rangeUntil, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeUntil]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.9" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=WasExperimental]
            valueArguments: [ markerClass -> [NormalClass(value=kotlin/ExperimentalStdlibApi)] ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=WasExperimental]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Char]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=CharRange]
      FUN[fqName=kotlin.Char.toByte, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toByte]
        MODIFIER_LIST[public final MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=Deprecated]
            valueArguments: [
              message -> "Conversion of Char to Number is deprecated. Use Char.code property instead."
              replaceWith -> Value(classId=kotlin/ReplaceWith, argumentsMapping={expression="this.code.toByte()", imports=[]})
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Deprecated]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=DeprecatedSinceKotlin]
            valueArguments: [ warningSince -> "1.5" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=DeprecatedSinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Byte]
      FUN[fqName=kotlin.Char.toChar, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toChar]
        MODIFIER_LIST[public final MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Char]
      FUN[fqName=kotlin.Char.toShort, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toShort]
        MODIFIER_LIST[public final MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=Deprecated]
            valueArguments: [
              message -> "Conversion of Char to Number is deprecated. Use Char.code property instead."
              replaceWith -> Value(classId=kotlin/ReplaceWith, argumentsMapping={expression="this.code.toShort()", imports=[]})
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Deprecated]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=DeprecatedSinceKotlin]
            valueArguments: [ warningSince -> "1.5" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=DeprecatedSinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Short]
      FUN[fqName=kotlin.Char.toInt, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toInt]
        MODIFIER_LIST[public final MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=Deprecated]
            valueArguments: [
              message -> "Conversion of Char to Number is deprecated. Use Char.code property instead."
              replaceWith -> Value(classId=kotlin/ReplaceWith, argumentsMapping={expression="this.code", imports=[]})
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Deprecated]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=DeprecatedSinceKotlin]
            valueArguments: [ warningSince -> "1.5" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=DeprecatedSinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Char.toLong, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toLong]
        MODIFIER_LIST[public final MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=Deprecated]
            valueArguments: [
              message -> "Conversion of Char to Number is deprecated. Use Char.code property instead."
              replaceWith -> Value(classId=kotlin/ReplaceWith, argumentsMapping={expression="this.code.toLong()", imports=[]})
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Deprecated]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=DeprecatedSinceKotlin]
            valueArguments: [ warningSince -> "1.5" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=DeprecatedSinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Char.toFloat, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toFloat]
        MODIFIER_LIST[public final MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=Deprecated]
            valueArguments: [
              message -> "Conversion of Char to Number is deprecated. Use Char.code property instead."
              replaceWith -> Value(classId=kotlin/ReplaceWith, argumentsMapping={expression="this.code.toFloat()", imports=[]})
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Deprecated]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=DeprecatedSinceKotlin]
            valueArguments: [ warningSince -> "1.5" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=DeprecatedSinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Char.toDouble, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toDouble]
        MODIFIER_LIST[public final MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=Deprecated]
            valueArguments: [
              message -> "Conversion of Char to Number is deprecated. Use Char.code property instead."
              replaceWith -> Value(classId=kotlin/ReplaceWith, argumentsMapping={expression="this.code.toDouble()", imports=[]})
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Deprecated]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=DeprecatedSinceKotlin]
            valueArguments: [ warningSince -> "1.5" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=DeprecatedSinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Char.toString, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toString]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
      FUN[fqName=kotlin.Char.equals, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=equals]
        MODIFIER_LIST[public open operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              NULLABLE_TYPE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Any]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Boolean]
      FUN[fqName=kotlin.Char.hashCode, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=hashCode]
        MODIFIER_LIST[public open MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
  CLASS[classId=kotlin/CharArray, fqName=kotlin.CharArray, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=CharArray, superNames=[]]
    MODIFIER_LIST[public final]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=CharArray]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=size]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=Int]
    CLASS_BODY
      SECONDARY_CONSTRUCTOR[fqName=null, hasBody=true, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=CharArray]
        MODIFIER_LIST[public MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=size]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=init]
            TYPE_REFERENCE
              FUNCTION_TYPE
                VALUE_PARAMETER_LIST
                  VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=null]
                    TYPE_REFERENCE
                      USER_TYPE
                        USER_TYPE
                          REFERENCE_EXPRESSION[referencedName=kotlin]
                        REFERENCE_EXPRESSION[referencedName=Int]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=Char]
      PROPERTY[fqName=kotlin.CharArray.size, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=size]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.CharArray.get, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=get]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=index]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Char]
      FUN[fqName=kotlin.CharArray.set, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=set]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=index]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=value]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Char]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Unit]
      FUN[fqName=kotlin.CharArray.iterator, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=iterator]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=collections]
            REFERENCE_EXPRESSION[referencedName=CharIterator]
  CLASS[classId=kotlin/CharSequence, fqName=kotlin.CharSequence, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=true, isLocal=false, isTopLevel=true, name=CharSequence, superNames=[]]
    MODIFIER_LIST[public]
    CLASS_BODY
      PROPERTY[fqName=kotlin.CharSequence.length, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=length]
        MODIFIER_LIST[public abstract MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.CharSequence.get, hasBody=false, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=get]
        MODIFIER_LIST[public abstract operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=index]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Char]
      FUN[fqName=kotlin.CharSequence.subSequence, hasBody=false, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=subSequence]
        MODIFIER_LIST[public abstract MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=startIndex]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=endIndex]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=CharSequence]
  CLASS[classId=kotlin/Comparable, fqName=kotlin.Comparable, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=true, isLocal=false, isTopLevel=true, name=Comparable, superNames=[]]
    MODIFIER_LIST[public]
    TYPE_PARAMETER_LIST
      TYPE_PARAMETER[fqName=null, name=T]
        MODIFIER_LIST[in]
    CLASS_BODY
      FUN[fqName=kotlin.Comparable.compareTo, hasBody=false, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public abstract operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=T]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
  CLASS[classId=kotlin/ContextFunctionTypeParams, fqName=kotlin.ContextFunctionTypeParams, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=ContextFunctionTypeParams, superNames=[Annotation]]
    MODIFIER_LIST[public final annotation]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Target]
        valueArguments: [ allowedTargets -> [AnnotationTarget.TYPE] ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Target]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=MustBeDocumented]
        valueArguments: [ ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=MustBeDocumented]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
        valueArguments: [ version -> "1.7" ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=SinceKotlin]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=ContextFunctionTypeParams]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=count]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=Int]
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Annotation]
    CLASS_BODY
      PROPERTY[fqName=kotlin.ContextFunctionTypeParams.count, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=count]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
  CLASS[classId=kotlin/Deprecated, fqName=kotlin.Deprecated, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=Deprecated, superNames=[Annotation]]
    MODIFIER_LIST[public final annotation]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Target]
        valueArguments: [ allowedTargets -> [AnnotationTarget.CLASS, AnnotationTarget.FUNCTION, AnnotationTarget.PROPERTY, AnnotationTarget.ANNOTATION_CLASS, AnnotationTarget.CONSTRUCTOR, AnnotationTarget.PROPERTY_SETTER, AnnotationTarget.PROPERTY_GETTER, AnnotationTarget.TYPEALIAS] ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Target]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=MustBeDocumented]
        valueArguments: [ ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=MustBeDocumented]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Deprecated]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=message]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=String]
        VALUE_PARAMETER[fqName=null, hasDefaultValue=true, hasValOrVar=false, isMutable=false, name=replaceWith]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ReplaceWith]
          REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
        VALUE_PARAMETER[fqName=null, hasDefaultValue=true, hasValOrVar=false, isMutable=false, name=level]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=DeprecationLevel]
          REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Annotation]
    CLASS_BODY
      PROPERTY[fqName=kotlin.Deprecated.message, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=message]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
      PROPERTY[fqName=kotlin.Deprecated.replaceWith, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=replaceWith]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=ReplaceWith]
      PROPERTY[fqName=kotlin.Deprecated.level, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=level]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=DeprecationLevel]
  CLASS[classId=kotlin/DeprecatedSinceKotlin, fqName=kotlin.DeprecatedSinceKotlin, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=DeprecatedSinceKotlin, superNames=[Annotation]]
    MODIFIER_LIST[public final annotation]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Target]
        valueArguments: [ allowedTargets -> [AnnotationTarget.CLASS, AnnotationTarget.FUNCTION, AnnotationTarget.PROPERTY, AnnotationTarget.ANNOTATION_CLASS, AnnotationTarget.CONSTRUCTOR, AnnotationTarget.PROPERTY_SETTER, AnnotationTarget.PROPERTY_GETTER, AnnotationTarget.TYPEALIAS] ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Target]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=MustBeDocumented]
        valueArguments: [ ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=MustBeDocumented]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
        valueArguments: [ version -> "1.4" ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=SinceKotlin]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=DeprecatedSinceKotlin]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=true, hasValOrVar=false, isMutable=false, name=warningSince]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=String]
          REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
        VALUE_PARAMETER[fqName=null, hasDefaultValue=true, hasValOrVar=false, isMutable=false, name=errorSince]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=String]
          REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
        VALUE_PARAMETER[fqName=null, hasDefaultValue=true, hasValOrVar=false, isMutable=false, name=hiddenSince]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=String]
          REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Annotation]
    CLASS_BODY
      PROPERTY[fqName=kotlin.DeprecatedSinceKotlin.warningSince, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=warningSince]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
      PROPERTY[fqName=kotlin.DeprecatedSinceKotlin.errorSince, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=errorSince]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
      PROPERTY[fqName=kotlin.DeprecatedSinceKotlin.hiddenSince, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=hiddenSince]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
  CLASS[classId=kotlin/DeprecationLevel, fqName=kotlin.DeprecationLevel, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=DeprecationLevel, superNames=[Enum]]
    MODIFIER_LIST[public final enum]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=DeprecationLevel]
      MODIFIER_LIST[private MustUseReturnValue]
      VALUE_PARAMETER_LIST
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Enum]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=NONE]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=DeprecationLevel]
    CLASS_BODY
      ENUM_ENTRY[classId=null, fqName=kotlin.DeprecationLevel.WARNING, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=false, name=WARNING, superNames=[]]
      ENUM_ENTRY[classId=null, fqName=kotlin.DeprecationLevel.ERROR, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=false, name=ERROR, superNames=[]]
      ENUM_ENTRY[classId=null, fqName=kotlin.DeprecationLevel.HIDDEN, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=false, name=HIDDEN, superNames=[]]
  CLASS[classId=kotlin/Double, fqName=kotlin.Double, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=Double, superNames=[Number, Comparable]]
    MODIFIER_LIST[public final]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Double]
      MODIFIER_LIST[private MustUseReturnValue]
      VALUE_PARAMETER_LIST
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Number]
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Comparable]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=NONE]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=Double]
    CLASS_BODY
      OBJECT_DECLARATION[classId=kotlin/Double.Companion, fqName=kotlin.Double.Companion, isLocal=false, isObjectLiteral=false, isTopLevel=false, name=Companion, superNames=[]]
        MODIFIER_LIST[public companion]
        CLASS_BODY
          PROPERTY[fqName=kotlin.Double.Companion.MIN_VALUE, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=MIN_VALUE]
            constantInitializer: 4.9E-324.toDouble()
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Double.Companion.MAX_VALUE, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=MAX_VALUE]
            constantInitializer: 1.7976931348623157E308.toDouble()
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Double.Companion.POSITIVE_INFINITY, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=POSITIVE_INFINITY]
            constantInitializer: Infinity.toDouble()
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Double.Companion.NEGATIVE_INFINITY, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=NEGATIVE_INFINITY]
            constantInitializer: -Infinity.toDouble()
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Double.Companion.NaN, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=NaN]
            constantInitializer: NaN.toDouble()
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Double.Companion.SIZE_BYTES, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=SIZE_BYTES]
            constantInitializer: 8
            MODIFIER_LIST[public const MustUseReturnValue]
              ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
                valueArguments: [ version -> "1.4" ]
                CONSTRUCTOR_CALLEE
                  TYPE_REFERENCE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=SinceKotlin]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Double.Companion.SIZE_BITS, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=SIZE_BITS]
            constantInitializer: 64
            MODIFIER_LIST[public const MustUseReturnValue]
              ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
                valueArguments: [ version -> "1.4" ]
                CONSTRUCTOR_CALLEE
                  TYPE_REFERENCE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=SinceKotlin]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
      FUN[fqName=kotlin.Double.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Double.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Double.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Double.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Double.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Double.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public open operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Double.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.inc, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=inc]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.dec, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=dec]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.unaryPlus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=unaryPlus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.unaryMinus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=unaryMinus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.toByte, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toByte]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=Deprecated]
            valueArguments: [
              message -> "Unclear conversion. To achieve the same result convert to Int explicitly and then to Byte."
              replaceWith -> Value(classId=kotlin/ReplaceWith, argumentsMapping={expression="toInt().toByte()", imports=[]})
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Deprecated]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=DeprecatedSinceKotlin]
            valueArguments: [
              warningSince -> "1.3"
              errorSince -> "1.5"
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=DeprecatedSinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Byte]
      FUN[fqName=kotlin.Double.toChar, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toChar]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=Deprecated]
            valueArguments: [
              message -> "Direct conversion to Char is deprecated. Use toInt().toChar() or Char constructor instead."
              replaceWith -> Value(classId=kotlin/ReplaceWith, argumentsMapping={expression="this.toInt().toChar()", imports=[]})
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Deprecated]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=DeprecatedSinceKotlin]
            valueArguments: [
              warningSince -> "1.5"
              errorSince -> "2.3"
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=DeprecatedSinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Char]
      FUN[fqName=kotlin.Double.toShort, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toShort]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=Deprecated]
            valueArguments: [
              message -> "Unclear conversion. To achieve the same result convert to Int explicitly and then to Short."
              replaceWith -> Value(classId=kotlin/ReplaceWith, argumentsMapping={expression="toInt().toShort()", imports=[]})
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Deprecated]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=DeprecatedSinceKotlin]
            valueArguments: [
              warningSince -> "1.3"
              errorSince -> "1.5"
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=DeprecatedSinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Short]
      FUN[fqName=kotlin.Double.toInt, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toInt]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Double.toLong, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toLong]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Double.toFloat, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toFloat]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Double.toDouble, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toDouble]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Double.toString, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toString]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
      FUN[fqName=kotlin.Double.equals, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=equals]
        MODIFIER_LIST[public open operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              NULLABLE_TYPE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Any]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Boolean]
  CLASS[classId=kotlin/DoubleArray, fqName=kotlin.DoubleArray, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=DoubleArray, superNames=[]]
    MODIFIER_LIST[public final]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=DoubleArray]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=size]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=Int]
    CLASS_BODY
      SECONDARY_CONSTRUCTOR[fqName=null, hasBody=true, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=DoubleArray]
        MODIFIER_LIST[public MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=size]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=init]
            TYPE_REFERENCE
              FUNCTION_TYPE
                VALUE_PARAMETER_LIST
                  VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=null]
                    TYPE_REFERENCE
                      USER_TYPE
                        USER_TYPE
                          REFERENCE_EXPRESSION[referencedName=kotlin]
                        REFERENCE_EXPRESSION[referencedName=Int]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=Double]
      PROPERTY[fqName=kotlin.DoubleArray.size, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=size]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.DoubleArray.get, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=get]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=index]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.DoubleArray.set, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=set]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=index]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=value]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Unit]
      FUN[fqName=kotlin.DoubleArray.iterator, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=iterator]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=collections]
            REFERENCE_EXPRESSION[referencedName=DoubleIterator]
  CLASS[classId=kotlin/DslMarker, fqName=kotlin.DslMarker, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=DslMarker, superNames=[Annotation]]
    MODIFIER_LIST[public final annotation]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Target]
        valueArguments: [ allowedTargets -> [AnnotationTarget.ANNOTATION_CLASS] ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Target]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Retention]
        valueArguments: [ value -> AnnotationRetention.BINARY ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Retention]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=MustBeDocumented]
        valueArguments: [ ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=MustBeDocumented]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
        valueArguments: [ version -> "1.1" ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=SinceKotlin]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=DslMarker]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Annotation]
    CLASS_BODY
  CLASS[classId=kotlin/Enum, fqName=kotlin.Enum, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=Enum, superNames=[Comparable]]
    MODIFIER_LIST[public abstract]
    TYPE_PARAMETER_LIST
      TYPE_PARAMETER[fqName=null, name=E]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Enum]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=NONE]
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=E]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Enum]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=name]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=String]
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=ordinal]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=Int]
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Comparable]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=NONE]
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=E]
    CLASS_BODY
      OBJECT_DECLARATION[classId=kotlin/Enum.Companion, fqName=kotlin.Enum.Companion, isLocal=false, isObjectLiteral=false, isTopLevel=false, name=Companion, superNames=[]]
        MODIFIER_LIST[public companion]
        CLASS_BODY
      PROPERTY[fqName=kotlin.Enum.name, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=name]
        MODIFIER_LIST[public final MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
      PROPERTY[fqName=kotlin.Enum.ordinal, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=ordinal]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Enum.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=E]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Enum.clone, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=clone]
        MODIFIER_LIST[protected final MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Any]
      FUN[fqName=kotlin.Enum.equals, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=equals]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              NULLABLE_TYPE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Any]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Boolean]
      FUN[fqName=kotlin.Enum.hashCode, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=hashCode]
        MODIFIER_LIST[public final MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Enum.toString, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toString]
        MODIFIER_LIST[public open MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
  CLASS[classId=kotlin/ExperimentalStdlibApi, fqName=kotlin.ExperimentalStdlibApi, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=ExperimentalStdlibApi, superNames=[Annotation]]
    MODIFIER_LIST[public final annotation]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=RequiresOptIn]
        valueArguments: [ level -> Level.ERROR ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=RequiresOptIn]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Retention]
        valueArguments: [ value -> AnnotationRetention.BINARY ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Retention]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Target]
        valueArguments: [ allowedTargets -> [AnnotationTarget.CLASS, AnnotationTarget.ANNOTATION_CLASS, AnnotationTarget.PROPERTY, AnnotationTarget.FIELD, AnnotationTarget.LOCAL_VARIABLE, AnnotationTarget.VALUE_PARAMETER, AnnotationTarget.CONSTRUCTOR, AnnotationTarget.FUNCTION, AnnotationTarget.PROPERTY_GETTER, AnnotationTarget.PROPERTY_SETTER, AnnotationTarget.TYPEALIAS] ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Target]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=MustBeDocumented]
        valueArguments: [ ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=MustBeDocumented]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
        valueArguments: [ version -> "1.3" ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=SinceKotlin]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=ExperimentalStdlibApi]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Annotation]
    CLASS_BODY
  CLASS[classId=kotlin/ExperimentalSubclassOptIn, fqName=kotlin.ExperimentalSubclassOptIn, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=ExperimentalSubclassOptIn, superNames=[Annotation]]
    MODIFIER_LIST[public final annotation]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Target]
        valueArguments: [ allowedTargets -> [AnnotationTarget.CLASS] ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Target]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Retention]
        valueArguments: [ value -> AnnotationRetention.BINARY ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Retention]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
        valueArguments: [ version -> "1.8" ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=SinceKotlin]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=RequiresOptIn]
        valueArguments: [ ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=RequiresOptIn]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=ExperimentalSubclassOptIn]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Annotation]
    CLASS_BODY
  CLASS[classId=kotlin/ExtensionFunctionType, fqName=kotlin.ExtensionFunctionType, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=ExtensionFunctionType, superNames=[Annotation]]
    MODIFIER_LIST[public final annotation]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Target]
        valueArguments: [ allowedTargets -> [AnnotationTarget.TYPE] ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Target]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=MustBeDocumented]
        valueArguments: [ ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=MustBeDocumented]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=ExtensionFunctionType]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Annotation]
    CLASS_BODY
  CLASS[classId=kotlin/Float, fqName=kotlin.Float, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=Float, superNames=[Number, Comparable]]
    MODIFIER_LIST[public final]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Float]
      MODIFIER_LIST[private MustUseReturnValue]
      VALUE_PARAMETER_LIST
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Number]
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Comparable]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=NONE]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=Float]
    CLASS_BODY
      OBJECT_DECLARATION[classId=kotlin/Float.Companion, fqName=kotlin.Float.Companion, isLocal=false, isObjectLiteral=false, isTopLevel=false, name=Companion, superNames=[]]
        MODIFIER_LIST[public companion]
        CLASS_BODY
          PROPERTY[fqName=kotlin.Float.Companion.MIN_VALUE, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=MIN_VALUE]
            constantInitializer: 1.4E-45.toFloat()
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Float.Companion.MAX_VALUE, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=MAX_VALUE]
            constantInitializer: 3.4028235E38.toFloat()
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Float.Companion.POSITIVE_INFINITY, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=POSITIVE_INFINITY]
            constantInitializer: Infinity.toFloat()
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Float.Companion.NEGATIVE_INFINITY, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=NEGATIVE_INFINITY]
            constantInitializer: -Infinity.toFloat()
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Float.Companion.NaN, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=NaN]
            constantInitializer: NaN.toFloat()
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Float.Companion.SIZE_BYTES, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=SIZE_BYTES]
            constantInitializer: 4
            MODIFIER_LIST[public const MustUseReturnValue]
              ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
                valueArguments: [ version -> "1.4" ]
                CONSTRUCTOR_CALLEE
                  TYPE_REFERENCE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=SinceKotlin]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Float.Companion.SIZE_BITS, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=SIZE_BITS]
            constantInitializer: 32
            MODIFIER_LIST[public const MustUseReturnValue]
              ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
                valueArguments: [ version -> "1.4" ]
                CONSTRUCTOR_CALLEE
                  TYPE_REFERENCE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=SinceKotlin]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
      FUN[fqName=kotlin.Float.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Float.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Float.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Float.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Float.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public open operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Float.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Float.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Float.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Float.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Float.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Float.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Float.inc, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=inc]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.dec, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=dec]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.unaryPlus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=unaryPlus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.unaryMinus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=unaryMinus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.toByte, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toByte]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=Deprecated]
            valueArguments: [
              message -> "Unclear conversion. To achieve the same result convert to Int explicitly and then to Byte."
              replaceWith -> Value(classId=kotlin/ReplaceWith, argumentsMapping={expression="toInt().toByte()", imports=[]})
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Deprecated]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=DeprecatedSinceKotlin]
            valueArguments: [
              warningSince -> "1.3"
              errorSince -> "1.5"
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=DeprecatedSinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Byte]
      FUN[fqName=kotlin.Float.toChar, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toChar]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=Deprecated]
            valueArguments: [
              message -> "Direct conversion to Char is deprecated. Use toInt().toChar() or Char constructor instead."
              replaceWith -> Value(classId=kotlin/ReplaceWith, argumentsMapping={expression="this.toInt().toChar()", imports=[]})
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Deprecated]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=DeprecatedSinceKotlin]
            valueArguments: [
              warningSince -> "1.5"
              errorSince -> "2.3"
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=DeprecatedSinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Char]
      FUN[fqName=kotlin.Float.toShort, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toShort]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=Deprecated]
            valueArguments: [
              message -> "Unclear conversion. To achieve the same result convert to Int explicitly and then to Short."
              replaceWith -> Value(classId=kotlin/ReplaceWith, argumentsMapping={expression="toInt().toShort()", imports=[]})
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Deprecated]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=DeprecatedSinceKotlin]
            valueArguments: [
              warningSince -> "1.3"
              errorSince -> "1.5"
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=DeprecatedSinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Short]
      FUN[fqName=kotlin.Float.toInt, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toInt]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Float.toLong, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toLong]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Float.toFloat, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toFloat]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Float.toDouble, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toDouble]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Float.toString, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toString]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
      FUN[fqName=kotlin.Float.equals, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=equals]
        MODIFIER_LIST[public open operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              NULLABLE_TYPE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Any]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Boolean]
  CLASS[classId=kotlin/FloatArray, fqName=kotlin.FloatArray, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=FloatArray, superNames=[]]
    MODIFIER_LIST[public final]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=FloatArray]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=size]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=Int]
    CLASS_BODY
      SECONDARY_CONSTRUCTOR[fqName=null, hasBody=true, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=FloatArray]
        MODIFIER_LIST[public MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=size]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=init]
            TYPE_REFERENCE
              FUNCTION_TYPE
                VALUE_PARAMETER_LIST
                  VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=null]
                    TYPE_REFERENCE
                      USER_TYPE
                        USER_TYPE
                          REFERENCE_EXPRESSION[referencedName=kotlin]
                        REFERENCE_EXPRESSION[referencedName=Int]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=Float]
      PROPERTY[fqName=kotlin.FloatArray.size, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=size]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.FloatArray.get, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=get]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=index]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.FloatArray.set, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=set]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=index]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=value]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Unit]
      FUN[fqName=kotlin.FloatArray.iterator, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=iterator]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=collections]
            REFERENCE_EXPRESSION[referencedName=FloatIterator]
  CLASS[classId=kotlin/Function, fqName=kotlin.Function, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=true, isLocal=false, isTopLevel=true, name=Function, superNames=[]]
    MODIFIER_LIST[public]
    TYPE_PARAMETER_LIST
      TYPE_PARAMETER[fqName=null, name=R]
        MODIFIER_LIST[out]
    CLASS_BODY
  CLASS[classId=kotlin/IgnorableReturnValue, fqName=kotlin.IgnorableReturnValue, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=IgnorableReturnValue, superNames=[Annotation]]
    MODIFIER_LIST[public final annotation]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Target]
        valueArguments: [ allowedTargets -> [AnnotationTarget.FUNCTION] ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Target]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=MustBeDocumented]
        valueArguments: [ ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=MustBeDocumented]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
        valueArguments: [ version -> "2.2" ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=SinceKotlin]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=IgnorableReturnValue]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Annotation]
    CLASS_BODY
  CLASS[classId=kotlin/Int, fqName=kotlin.Int, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=Int, superNames=[Number, Comparable]]
    MODIFIER_LIST[public final]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Int]
      MODIFIER_LIST[private MustUseReturnValue]
      VALUE_PARAMETER_LIST
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Number]
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Comparable]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=NONE]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=Int]
    CLASS_BODY
      OBJECT_DECLARATION[classId=kotlin/Int.Companion, fqName=kotlin.Int.Companion, isLocal=false, isObjectLiteral=false, isTopLevel=false, name=Companion, superNames=[]]
        MODIFIER_LIST[public companion]
        CLASS_BODY
          PROPERTY[fqName=kotlin.Int.Companion.MIN_VALUE, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=MIN_VALUE]
            constantInitializer: -2147483648
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Int.Companion.MAX_VALUE, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=MAX_VALUE]
            constantInitializer: 2147483647
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Int.Companion.SIZE_BYTES, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=SIZE_BYTES]
            constantInitializer: 4
            MODIFIER_LIST[public const MustUseReturnValue]
              ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
                valueArguments: [ version -> "1.3" ]
                CONSTRUCTOR_CALLEE
                  TYPE_REFERENCE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=SinceKotlin]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Int.Companion.SIZE_BITS, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=SIZE_BITS]
            constantInitializer: 32
            MODIFIER_LIST[public const MustUseReturnValue]
              ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
                valueArguments: [ version -> "1.3" ]
                CONSTRUCTOR_CALLEE
                  TYPE_REFERENCE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=SinceKotlin]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
      FUN[fqName=kotlin.Int.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public open operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Int.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Int.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Int.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Int.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Int.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Int.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Int.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Int.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Int.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Int.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Int.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Int.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Int.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Int.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Int.inc, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=inc]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.dec, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=dec]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.unaryPlus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=unaryPlus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.unaryMinus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=unaryMinus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.rangeTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=IntRange]
      FUN[fqName=kotlin.Int.rangeTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=IntRange]
      FUN[fqName=kotlin.Int.rangeTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=IntRange]
      FUN[fqName=kotlin.Int.rangeTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=LongRange]
      FUN[fqName=kotlin.Int.rangeUntil, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeUntil]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.9" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=WasExperimental]
            valueArguments: [ markerClass -> [NormalClass(value=kotlin/ExperimentalStdlibApi)] ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=WasExperimental]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=IntRange]
      FUN[fqName=kotlin.Int.rangeUntil, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeUntil]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.9" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=WasExperimental]
            valueArguments: [ markerClass -> [NormalClass(value=kotlin/ExperimentalStdlibApi)] ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=WasExperimental]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=IntRange]
      FUN[fqName=kotlin.Int.rangeUntil, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeUntil]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.9" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=WasExperimental]
            valueArguments: [ markerClass -> [NormalClass(value=kotlin/ExperimentalStdlibApi)] ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=WasExperimental]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=IntRange]
      FUN[fqName=kotlin.Int.rangeUntil, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeUntil]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.9" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=WasExperimental]
            valueArguments: [ markerClass -> [NormalClass(value=kotlin/ExperimentalStdlibApi)] ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=WasExperimental]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=LongRange]
      FUN[fqName=kotlin.Int.shl, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=shl]
        MODIFIER_LIST[public final infix MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=bitCount]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.shr, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=shr]
        MODIFIER_LIST[public final infix MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=bitCount]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.ushr, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=ushr]
        MODIFIER_LIST[public final infix MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=bitCount]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.and, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=and]
        MODIFIER_LIST[public final infix MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.or, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=or]
        MODIFIER_LIST[public final infix MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.xor, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=xor]
        MODIFIER_LIST[public final infix MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.inv, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=inv]
        MODIFIER_LIST[public final MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.toByte, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toByte]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Byte]
      FUN[fqName=kotlin.Int.toChar, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toChar]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Char]
      FUN[fqName=kotlin.Int.toShort, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toShort]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Short]
      FUN[fqName=kotlin.Int.toInt, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toInt]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Int.toLong, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toLong]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Int.toFloat, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toFloat]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Int.toDouble, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toDouble]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Int.toString, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toString]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
      FUN[fqName=kotlin.Int.equals, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=equals]
        MODIFIER_LIST[public open operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              NULLABLE_TYPE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Any]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Boolean]
  CLASS[classId=kotlin/IntArray, fqName=kotlin.IntArray, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=IntArray, superNames=[]]
    MODIFIER_LIST[public final]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=IntArray]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=size]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=Int]
    CLASS_BODY
      SECONDARY_CONSTRUCTOR[fqName=null, hasBody=true, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=IntArray]
        MODIFIER_LIST[public MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=size]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=init]
            TYPE_REFERENCE
              FUNCTION_TYPE
                VALUE_PARAMETER_LIST
                  VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=null]
                    TYPE_REFERENCE
                      USER_TYPE
                        USER_TYPE
                          REFERENCE_EXPRESSION[referencedName=kotlin]
                        REFERENCE_EXPRESSION[referencedName=Int]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=Int]
      PROPERTY[fqName=kotlin.IntArray.size, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=size]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.IntArray.get, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=get]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=index]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.IntArray.set, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=set]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=index]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=value]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Unit]
      FUN[fqName=kotlin.IntArray.iterator, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=iterator]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=collections]
            REFERENCE_EXPRESSION[referencedName=IntIterator]
  CLASS[classId=kotlin/Long, fqName=kotlin.Long, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=Long, superNames=[Number, Comparable]]
    MODIFIER_LIST[public final]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Long]
      MODIFIER_LIST[private MustUseReturnValue]
      VALUE_PARAMETER_LIST
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Number]
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Comparable]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=NONE]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=Long]
    CLASS_BODY
      OBJECT_DECLARATION[classId=kotlin/Long.Companion, fqName=kotlin.Long.Companion, isLocal=false, isObjectLiteral=false, isTopLevel=false, name=Companion, superNames=[]]
        MODIFIER_LIST[public companion]
        CLASS_BODY
          PROPERTY[fqName=kotlin.Long.Companion.MIN_VALUE, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=MIN_VALUE]
            constantInitializer: -9223372036854775808.toLong()
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Long.Companion.MAX_VALUE, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=MAX_VALUE]
            constantInitializer: 9223372036854775807.toLong()
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Long.Companion.SIZE_BYTES, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=SIZE_BYTES]
            constantInitializer: 8
            MODIFIER_LIST[public const MustUseReturnValue]
              ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
                valueArguments: [ version -> "1.3" ]
                CONSTRUCTOR_CALLEE
                  TYPE_REFERENCE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=SinceKotlin]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Long.Companion.SIZE_BITS, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=SIZE_BITS]
            constantInitializer: 64
            MODIFIER_LIST[public const MustUseReturnValue]
              ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
                valueArguments: [ version -> "1.3" ]
                CONSTRUCTOR_CALLEE
                  TYPE_REFERENCE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=SinceKotlin]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
      FUN[fqName=kotlin.Long.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Long.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Long.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Long.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public open operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Long.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Long.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Long.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Long.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Long.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Long.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Long.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Long.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Long.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Long.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Long.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Long.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Long.inc, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=inc]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.dec, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=dec]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.unaryPlus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=unaryPlus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.unaryMinus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=unaryMinus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.rangeTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=LongRange]
      FUN[fqName=kotlin.Long.rangeTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=LongRange]
      FUN[fqName=kotlin.Long.rangeTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=LongRange]
      FUN[fqName=kotlin.Long.rangeTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=LongRange]
      FUN[fqName=kotlin.Long.rangeUntil, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeUntil]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.9" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=WasExperimental]
            valueArguments: [ markerClass -> [NormalClass(value=kotlin/ExperimentalStdlibApi)] ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=WasExperimental]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=LongRange]
      FUN[fqName=kotlin.Long.rangeUntil, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeUntil]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.9" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=WasExperimental]
            valueArguments: [ markerClass -> [NormalClass(value=kotlin/ExperimentalStdlibApi)] ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=WasExperimental]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=LongRange]
      FUN[fqName=kotlin.Long.rangeUntil, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeUntil]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.9" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=WasExperimental]
            valueArguments: [ markerClass -> [NormalClass(value=kotlin/ExperimentalStdlibApi)] ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=WasExperimental]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=LongRange]
      FUN[fqName=kotlin.Long.rangeUntil, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeUntil]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.9" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=WasExperimental]
            valueArguments: [ markerClass -> [NormalClass(value=kotlin/ExperimentalStdlibApi)] ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=WasExperimental]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=LongRange]
      FUN[fqName=kotlin.Long.shl, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=shl]
        MODIFIER_LIST[public final infix MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=bitCount]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.shr, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=shr]
        MODIFIER_LIST[public final infix MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=bitCount]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.ushr, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=ushr]
        MODIFIER_LIST[public final infix MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=bitCount]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.and, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=and]
        MODIFIER_LIST[public final infix MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.or, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=or]
        MODIFIER_LIST[public final infix MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.xor, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=xor]
        MODIFIER_LIST[public final infix MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.inv, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=inv]
        MODIFIER_LIST[public final MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.toByte, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toByte]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Byte]
      FUN[fqName=kotlin.Long.toChar, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toChar]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=Deprecated]
            valueArguments: [
              message -> "Direct conversion to Char is deprecated. Use toInt().toChar() or Char constructor instead."
              replaceWith -> Value(classId=kotlin/ReplaceWith, argumentsMapping={expression="this.toInt().toChar()", imports=[]})
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Deprecated]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=DeprecatedSinceKotlin]
            valueArguments: [
              warningSince -> "1.5"
              errorSince -> "2.3"
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=DeprecatedSinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Char]
      FUN[fqName=kotlin.Long.toShort, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toShort]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Short]
      FUN[fqName=kotlin.Long.toInt, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toInt]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Long.toLong, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toLong]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Long.toFloat, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toFloat]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Long.toDouble, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toDouble]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Long.toString, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toString]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
      FUN[fqName=kotlin.Long.equals, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=equals]
        MODIFIER_LIST[public open operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              NULLABLE_TYPE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Any]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Boolean]
  CLASS[classId=kotlin/LongArray, fqName=kotlin.LongArray, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=LongArray, superNames=[]]
    MODIFIER_LIST[public final]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=LongArray]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=size]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=Int]
    CLASS_BODY
      SECONDARY_CONSTRUCTOR[fqName=null, hasBody=true, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=LongArray]
        MODIFIER_LIST[public MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=size]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=init]
            TYPE_REFERENCE
              FUNCTION_TYPE
                VALUE_PARAMETER_LIST
                  VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=null]
                    TYPE_REFERENCE
                      USER_TYPE
                        USER_TYPE
                          REFERENCE_EXPRESSION[referencedName=kotlin]
                        REFERENCE_EXPRESSION[referencedName=Int]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=Long]
      PROPERTY[fqName=kotlin.LongArray.size, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=size]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.LongArray.get, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=get]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=index]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.LongArray.set, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=set]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=index]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=value]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Unit]
      FUN[fqName=kotlin.LongArray.iterator, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=iterator]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=collections]
            REFERENCE_EXPRESSION[referencedName=LongIterator]
  CLASS[classId=kotlin/MustUseReturnValues, fqName=kotlin.MustUseReturnValues, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=MustUseReturnValues, superNames=[Annotation]]
    MODIFIER_LIST[public final annotation]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Target]
        valueArguments: [ allowedTargets -> [AnnotationTarget.FILE, AnnotationTarget.CLASS] ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Target]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
        valueArguments: [ version -> "2.3" ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=SinceKotlin]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=MustUseReturnValues]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Annotation]
    CLASS_BODY
  CLASS[classId=kotlin/Nothing, fqName=kotlin.Nothing, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=Nothing, superNames=[]]
    MODIFIER_LIST[public final]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Nothing]
      MODIFIER_LIST[private MustUseReturnValue]
      VALUE_PARAMETER_LIST
    CLASS_BODY
  CLASS[classId=kotlin/Number, fqName=kotlin.Number, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=Number, superNames=[]]
    MODIFIER_LIST[public abstract]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Number]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
    CLASS_BODY
      FUN[fqName=kotlin.Number.toDouble, hasBody=false, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toDouble]
        MODIFIER_LIST[public abstract MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Number.toFloat, hasBody=false, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toFloat]
        MODIFIER_LIST[public abstract MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Number.toLong, hasBody=false, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toLong]
        MODIFIER_LIST[public abstract MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Number.toInt, hasBody=false, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toInt]
        MODIFIER_LIST[public abstract MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Number.toChar, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toChar]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=Deprecated]
            valueArguments: [
              message -> "Direct conversion to Char is deprecated. Use toInt().toChar() or Char constructor instead.
              If you override toChar() function in your Number inheritor, it's recommended to gradually deprecate the overriding function and then remove it.
              See https://youtrack.jetbrains.com/issue/KT-46465 for details about the migration"
              replaceWith -> Value(classId=kotlin/ReplaceWith, argumentsMapping={expression="this.toInt().toChar()", imports=[]})
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Deprecated]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=DeprecatedSinceKotlin]
            valueArguments: [
              warningSince -> "1.9"
              errorSince -> "2.3"
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=DeprecatedSinceKotlin]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Char]
      FUN[fqName=kotlin.Number.toShort, hasBody=false, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toShort]
        MODIFIER_LIST[public abstract MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Short]
      FUN[fqName=kotlin.Number.toByte, hasBody=false, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toByte]
        MODIFIER_LIST[public abstract MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Byte]
  CLASS[classId=kotlin/OptIn, fqName=kotlin.OptIn, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=OptIn, superNames=[Annotation]]
    MODIFIER_LIST[public final annotation]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Target]
        valueArguments: [ allowedTargets -> [AnnotationTarget.CLASS, AnnotationTarget.PROPERTY, AnnotationTarget.LOCAL_VARIABLE, AnnotationTarget.VALUE_PARAMETER, AnnotationTarget.CONSTRUCTOR, AnnotationTarget.FUNCTION, AnnotationTarget.PROPERTY_GETTER, AnnotationTarget.PROPERTY_SETTER, AnnotationTarget.EXPRESSION, AnnotationTarget.FILE, AnnotationTarget.TYPEALIAS] ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Target]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Retention]
        valueArguments: [ value -> AnnotationRetention.SOURCE ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Retention]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
        valueArguments: [ version -> "1.3" ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=SinceKotlin]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=OptIn]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=markerClass]
          MODIFIER_LIST[vararg]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=reflect]
              REFERENCE_EXPRESSION[referencedName=KClass]
              TYPE_ARGUMENT_LIST
                TYPE_PROJECTION[projectionKind=OUT]
                  MODIFIER_LIST[out]
                  TYPE_REFERENCE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=Annotation]
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Annotation]
    CLASS_BODY
      PROPERTY[fqName=kotlin.OptIn.markerClass, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=markerClass]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Array]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=OUT]
                MODIFIER_LIST[out]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=reflect]
                    REFERENCE_EXPRESSION[referencedName=KClass]
                    TYPE_ARGUMENT_LIST
                      TYPE_PROJECTION[projectionKind=OUT]
                        MODIFIER_LIST[out]
                        TYPE_REFERENCE
                          USER_TYPE
                            USER_TYPE
                              REFERENCE_EXPRESSION[referencedName=kotlin]
                            REFERENCE_EXPRESSION[referencedName=Annotation]
  CLASS[classId=kotlin/ParameterName, fqName=kotlin.ParameterName, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=ParameterName, superNames=[Annotation]]
    MODIFIER_LIST[public final annotation]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Target]
        valueArguments: [ allowedTargets -> [AnnotationTarget.TYPE] ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Target]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=MustBeDocumented]
        valueArguments: [ ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=MustBeDocumented]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
        valueArguments: [ version -> "1.1" ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=SinceKotlin]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=ParameterName]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=name]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=String]
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Annotation]
    CLASS_BODY
      PROPERTY[fqName=kotlin.ParameterName.name, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=name]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
  CLASS[classId=kotlin/PublishedApi, fqName=kotlin.PublishedApi, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=PublishedApi, superNames=[Annotation]]
    MODIFIER_LIST[public final annotation]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Target]
        valueArguments: [ allowedTargets -> [AnnotationTarget.CLASS, AnnotationTarget.CONSTRUCTOR, AnnotationTarget.FUNCTION, AnnotationTarget.PROPERTY] ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Target]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Retention]
        valueArguments: [ value -> AnnotationRetention.BINARY ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Retention]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=MustBeDocumented]
        valueArguments: [ ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=MustBeDocumented]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
        valueArguments: [ version -> "1.1" ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=SinceKotlin]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=PublishedApi]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Annotation]
    CLASS_BODY
  CLASS[classId=kotlin/ReplaceWith, fqName=kotlin.ReplaceWith, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=ReplaceWith, superNames=[Annotation]]
    MODIFIER_LIST[public final annotation]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Target]
        valueArguments: [ allowedTargets -> [] ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Target]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Retention]
        valueArguments: [ value -> AnnotationRetention.BINARY ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Retention]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=MustBeDocumented]
        valueArguments: [ ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=MustBeDocumented]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=ReplaceWith]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=expression]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=String]
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=imports]
          MODIFIER_LIST[vararg]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=String]
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Annotation]
    CLASS_BODY
      PROPERTY[fqName=kotlin.ReplaceWith.expression, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=expression]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
      PROPERTY[fqName=kotlin.ReplaceWith.imports, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=imports]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Array]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=OUT]
                MODIFIER_LIST[out]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=String]
  CLASS[classId=kotlin/RequiresOptIn, fqName=kotlin.RequiresOptIn, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=RequiresOptIn, superNames=[Annotation]]
    MODIFIER_LIST[public final annotation]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Target]
        valueArguments: [ allowedTargets -> [AnnotationTarget.ANNOTATION_CLASS] ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Target]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Retention]
        valueArguments: [ value -> AnnotationRetention.BINARY ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Retention]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
        valueArguments: [ version -> "1.3" ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=SinceKotlin]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=RequiresOptIn]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=true, hasValOrVar=false, isMutable=false, name=message]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=String]
          REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
        VALUE_PARAMETER[fqName=null, hasDefaultValue=true, hasValOrVar=false, isMutable=false, name=level]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=RequiresOptIn]
              REFERENCE_EXPRESSION[referencedName=Level]
          REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Annotation]
    CLASS_BODY
      PROPERTY[fqName=kotlin.RequiresOptIn.message, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=message]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
      PROPERTY[fqName=kotlin.RequiresOptIn.level, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=level]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=RequiresOptIn]
            REFERENCE_EXPRESSION[referencedName=Level]
      CLASS[classId=kotlin/RequiresOptIn.Level, fqName=kotlin.RequiresOptIn.Level, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=false, name=Level, superNames=[Enum]]
        MODIFIER_LIST[public final enum]
        PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Level]
          MODIFIER_LIST[private MustUseReturnValue]
          VALUE_PARAMETER_LIST
        SUPER_TYPE_LIST
          SUPER_TYPE_ENTRY
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Enum]
                TYPE_ARGUMENT_LIST
                  TYPE_PROJECTION[projectionKind=NONE]
                    TYPE_REFERENCE
                      USER_TYPE
                        USER_TYPE
                          USER_TYPE
                            REFERENCE_EXPRESSION[referencedName=kotlin]
                          REFERENCE_EXPRESSION[referencedName=RequiresOptIn]
                        REFERENCE_EXPRESSION[referencedName=Level]
        CLASS_BODY
          ENUM_ENTRY[classId=null, fqName=kotlin.RequiresOptIn.Level.WARNING, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=false, name=WARNING, superNames=[]]
          ENUM_ENTRY[classId=null, fqName=kotlin.RequiresOptIn.Level.ERROR, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=false, name=ERROR, superNames=[]]
  CLASS[classId=kotlin/Short, fqName=kotlin.Short, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=Short, superNames=[Number, Comparable]]
    MODIFIER_LIST[public final]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Short]
      MODIFIER_LIST[private MustUseReturnValue]
      VALUE_PARAMETER_LIST
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Number]
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Comparable]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=NONE]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=Short]
    CLASS_BODY
      OBJECT_DECLARATION[classId=kotlin/Short.Companion, fqName=kotlin.Short.Companion, isLocal=false, isObjectLiteral=false, isTopLevel=false, name=Companion, superNames=[]]
        MODIFIER_LIST[public companion]
        CLASS_BODY
          PROPERTY[fqName=kotlin.Short.Companion.MIN_VALUE, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=MIN_VALUE]
            constantInitializer: -32768.toShort()
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Short.Companion.MAX_VALUE, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=MAX_VALUE]
            constantInitializer: 32767.toShort()
            MODIFIER_LIST[public const MustUseReturnValue]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Short.Companion.SIZE_BYTES, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=SIZE_BYTES]
            constantInitializer: 2
            MODIFIER_LIST[public const MustUseReturnValue]
              ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
                valueArguments: [ version -> "1.3" ]
                CONSTRUCTOR_CALLEE
                  TYPE_REFERENCE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=SinceKotlin]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
          PROPERTY[fqName=kotlin.Short.Companion.SIZE_BITS, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=true, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=SIZE_BITS]
            constantInitializer: 16
            MODIFIER_LIST[public const MustUseReturnValue]
              ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
                valueArguments: [ version -> "1.3" ]
                CONSTRUCTOR_CALLEE
                  TYPE_REFERENCE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=SinceKotlin]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
            REFERENCE_EXPRESSION[referencedName=COMPILED_CODE]
      FUN[fqName=kotlin.Short.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public open operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Short.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Short.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Short.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Short.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Short.minus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=minus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Short.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Short.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Short.times, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=times]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Short.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Short.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Short.div, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=div]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Short.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Short.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Float]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Short.rem, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rem]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.1" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Double]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Short.inc, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=inc]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Short]
      FUN[fqName=kotlin.Short.dec, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=dec]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Short]
      FUN[fqName=kotlin.Short.unaryPlus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=unaryPlus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.unaryMinus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=unaryMinus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.rangeTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=IntRange]
      FUN[fqName=kotlin.Short.rangeTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=IntRange]
      FUN[fqName=kotlin.Short.rangeTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=IntRange]
      FUN[fqName=kotlin.Short.rangeTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeTo]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=LongRange]
      FUN[fqName=kotlin.Short.rangeUntil, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeUntil]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.9" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=WasExperimental]
            valueArguments: [ markerClass -> [NormalClass(value=kotlin/ExperimentalStdlibApi)] ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=WasExperimental]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Byte]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=IntRange]
      FUN[fqName=kotlin.Short.rangeUntil, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeUntil]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.9" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=WasExperimental]
            valueArguments: [ markerClass -> [NormalClass(value=kotlin/ExperimentalStdlibApi)] ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=WasExperimental]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=IntRange]
      FUN[fqName=kotlin.Short.rangeUntil, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeUntil]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.9" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=WasExperimental]
            valueArguments: [ markerClass -> [NormalClass(value=kotlin/ExperimentalStdlibApi)] ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=WasExperimental]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=IntRange]
      FUN[fqName=kotlin.Short.rangeUntil, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=rangeUntil]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
            valueArguments: [ version -> "1.9" ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=SinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=WasExperimental]
            valueArguments: [ markerClass -> [NormalClass(value=kotlin/ExperimentalStdlibApi)] ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=WasExperimental]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Long]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=ranges]
            REFERENCE_EXPRESSION[referencedName=LongRange]
      FUN[fqName=kotlin.Short.toByte, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toByte]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Byte]
      FUN[fqName=kotlin.Short.toChar, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toChar]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=Deprecated]
            valueArguments: [
              message -> "Direct conversion to Char is deprecated. Use toInt().toChar() or Char constructor instead."
              replaceWith -> Value(classId=kotlin/ReplaceWith, argumentsMapping={expression="this.toInt().toChar()", imports=[]})
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Deprecated]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=DeprecatedSinceKotlin]
            valueArguments: [
              warningSince -> "1.5"
              errorSince -> "2.3"
            ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=DeprecatedSinceKotlin]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Char]
      FUN[fqName=kotlin.Short.toShort, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toShort]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Short]
      FUN[fqName=kotlin.Short.toInt, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toInt]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.Short.toLong, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toLong]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Long]
      FUN[fqName=kotlin.Short.toFloat, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toFloat]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Float]
      FUN[fqName=kotlin.Short.toDouble, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toDouble]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Double]
      FUN[fqName=kotlin.Short.toString, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toString]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
      FUN[fqName=kotlin.Short.equals, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=equals]
        MODIFIER_LIST[public open operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              NULLABLE_TYPE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Any]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Boolean]
  CLASS[classId=kotlin/ShortArray, fqName=kotlin.ShortArray, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=ShortArray, superNames=[]]
    MODIFIER_LIST[public final]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=ShortArray]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=size]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=Int]
    CLASS_BODY
      SECONDARY_CONSTRUCTOR[fqName=null, hasBody=true, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=ShortArray]
        MODIFIER_LIST[public MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=size]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=init]
            TYPE_REFERENCE
              FUNCTION_TYPE
                VALUE_PARAMETER_LIST
                  VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=null]
                    TYPE_REFERENCE
                      USER_TYPE
                        USER_TYPE
                          REFERENCE_EXPRESSION[referencedName=kotlin]
                        REFERENCE_EXPRESSION[referencedName=Int]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=Short]
      PROPERTY[fqName=kotlin.ShortArray.size, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=size]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.ShortArray.get, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=get]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=index]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Short]
      FUN[fqName=kotlin.ShortArray.set, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=set]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=index]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=value]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Short]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Unit]
      FUN[fqName=kotlin.ShortArray.iterator, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=iterator]
        MODIFIER_LIST[public final operator MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=collections]
            REFERENCE_EXPRESSION[referencedName=ShortIterator]
  CLASS[classId=kotlin/SinceKotlin, fqName=kotlin.SinceKotlin, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=SinceKotlin, superNames=[Annotation]]
    MODIFIER_LIST[public final annotation]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Target]
        valueArguments: [ allowedTargets -> [AnnotationTarget.CLASS, AnnotationTarget.PROPERTY, AnnotationTarget.FIELD, AnnotationTarget.CONSTRUCTOR, AnnotationTarget.FUNCTION, AnnotationTarget.PROPERTY_GETTER, AnnotationTarget.PROPERTY_SETTER, AnnotationTarget.TYPEALIAS] ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Target]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Retention]
        valueArguments: [ value -> AnnotationRetention.BINARY ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Retention]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=MustBeDocumented]
        valueArguments: [ ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=MustBeDocumented]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=SinceKotlin]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=version]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=String]
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Annotation]
    CLASS_BODY
      PROPERTY[fqName=kotlin.SinceKotlin.version, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=version]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
  CLASS[classId=kotlin/String, fqName=kotlin.String, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=String, superNames=[Comparable, CharSequence]]
    MODIFIER_LIST[public final]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=String]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Comparable]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=NONE]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=String]
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=CharSequence]
    CLASS_BODY
      OBJECT_DECLARATION[classId=kotlin/String.Companion, fqName=kotlin.String.Companion, isLocal=false, isObjectLiteral=false, isTopLevel=false, name=Companion, superNames=[]]
        MODIFIER_LIST[public companion]
        CLASS_BODY
      PROPERTY[fqName=kotlin.String.length, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=length]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.String.plus, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=plus]
        MODIFIER_LIST[public final operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              NULLABLE_TYPE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Any]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
      FUN[fqName=kotlin.String.get, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=get]
        MODIFIER_LIST[public open operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=index]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Char]
      FUN[fqName=kotlin.String.subSequence, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=subSequence]
        MODIFIER_LIST[public open MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=startIndex]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=endIndex]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Int]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=CharSequence]
      FUN[fqName=kotlin.String.compareTo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=compareTo]
        MODIFIER_LIST[public open operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=String]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Int]
      FUN[fqName=kotlin.String.equals, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=equals]
        MODIFIER_LIST[public open operator MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=other]
            TYPE_REFERENCE
              NULLABLE_TYPE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Any]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Boolean]
      FUN[fqName=kotlin.String.toString, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toString]
        MODIFIER_LIST[public open MustUseReturnValue]
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=IntrinsicConstEvaluation]
            valueArguments: [ ]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=internal]
                  REFERENCE_EXPRESSION[referencedName=IntrinsicConstEvaluation]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
  CLASS[classId=kotlin/SubclassOptInRequired, fqName=kotlin.SubclassOptInRequired, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=SubclassOptInRequired, superNames=[Annotation]]
    MODIFIER_LIST[public final annotation]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Target]
        valueArguments: [ allowedTargets -> [AnnotationTarget.CLASS] ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Target]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Retention]
        valueArguments: [ value -> AnnotationRetention.BINARY ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Retention]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=SinceKotlin]
        valueArguments: [ version -> "2.1" ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=SinceKotlin]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=WasExperimental]
        valueArguments: [ markerClass -> [NormalClass(value=kotlin/ExperimentalSubclassOptIn)] ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=WasExperimental]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=SubclassOptInRequired]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=markerClass]
          MODIFIER_LIST[vararg]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=reflect]
              REFERENCE_EXPRESSION[referencedName=KClass]
              TYPE_ARGUMENT_LIST
                TYPE_PROJECTION[projectionKind=OUT]
                  MODIFIER_LIST[out]
                  TYPE_REFERENCE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=Annotation]
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Annotation]
    CLASS_BODY
      PROPERTY[fqName=kotlin.SubclassOptInRequired.markerClass, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=markerClass]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Array]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=OUT]
                MODIFIER_LIST[out]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=reflect]
                    REFERENCE_EXPRESSION[referencedName=KClass]
                    TYPE_ARGUMENT_LIST
                      TYPE_PROJECTION[projectionKind=OUT]
                        MODIFIER_LIST[out]
                        TYPE_REFERENCE
                          USER_TYPE
                            USER_TYPE
                              REFERENCE_EXPRESSION[referencedName=kotlin]
                            REFERENCE_EXPRESSION[referencedName=Annotation]
  CLASS[classId=kotlin/Suppress, fqName=kotlin.Suppress, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=Suppress, superNames=[Annotation]]
    MODIFIER_LIST[public final annotation]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Target]
        valueArguments: [ allowedTargets -> [AnnotationTarget.CLASS, AnnotationTarget.ANNOTATION_CLASS, AnnotationTarget.TYPE_PARAMETER, AnnotationTarget.PROPERTY, AnnotationTarget.FIELD, AnnotationTarget.LOCAL_VARIABLE, AnnotationTarget.VALUE_PARAMETER, AnnotationTarget.CONSTRUCTOR, AnnotationTarget.FUNCTION, AnnotationTarget.PROPERTY_GETTER, AnnotationTarget.PROPERTY_SETTER, AnnotationTarget.TYPE, AnnotationTarget.EXPRESSION, AnnotationTarget.FILE, AnnotationTarget.TYPEALIAS] ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Target]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Retention]
        valueArguments: [ value -> AnnotationRetention.SOURCE ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Retention]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Suppress]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=names]
          MODIFIER_LIST[vararg]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=String]
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Annotation]
    CLASS_BODY
      PROPERTY[fqName=kotlin.Suppress.names, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=names]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Array]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=OUT]
                MODIFIER_LIST[out]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=kotlin]
                    REFERENCE_EXPRESSION[referencedName=String]
  CLASS[classId=kotlin/Throwable, fqName=kotlin.Throwable, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=Throwable, superNames=[]]
    MODIFIER_LIST[public open]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Throwable]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=message]
          TYPE_REFERENCE
            NULLABLE_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=String]
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=cause]
          TYPE_REFERENCE
            NULLABLE_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=Throwable]
    CLASS_BODY
      SECONDARY_CONSTRUCTOR[fqName=null, hasBody=true, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Throwable]
        MODIFIER_LIST[public MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=message]
            TYPE_REFERENCE
              NULLABLE_TYPE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=String]
      SECONDARY_CONSTRUCTOR[fqName=null, hasBody=true, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Throwable]
        MODIFIER_LIST[public MustUseReturnValue]
        VALUE_PARAMETER_LIST
          VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=cause]
            TYPE_REFERENCE
              NULLABLE_TYPE
                USER_TYPE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=kotlin]
                  REFERENCE_EXPRESSION[referencedName=Throwable]
      SECONDARY_CONSTRUCTOR[fqName=null, hasBody=true, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=Throwable]
        MODIFIER_LIST[public MustUseReturnValue]
        VALUE_PARAMETER_LIST
      PROPERTY[fqName=kotlin.Throwable.message, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=message]
        MODIFIER_LIST[public open MustUseReturnValue]
        TYPE_REFERENCE
          NULLABLE_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=String]
      PROPERTY[fqName=kotlin.Throwable.cause, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=cause]
        MODIFIER_LIST[public open MustUseReturnValue]
        TYPE_REFERENCE
          NULLABLE_TYPE
            USER_TYPE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=kotlin]
              REFERENCE_EXPRESSION[referencedName=Throwable]
  OBJECT_DECLARATION[classId=kotlin/Unit, fqName=kotlin.Unit, isLocal=false, isObjectLiteral=false, isTopLevel=true, name=Unit, superNames=[]]
    MODIFIER_LIST[public]
    CLASS_BODY
      FUN[fqName=kotlin.Unit.toString, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=toString]
        MODIFIER_LIST[public open MustUseReturnValue]
        VALUE_PARAMETER_LIST
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=String]
  CLASS[classId=kotlin/UnsafeVariance, fqName=kotlin.UnsafeVariance, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=UnsafeVariance, superNames=[Annotation]]
    MODIFIER_LIST[public final annotation]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Target]
        valueArguments: [ allowedTargets -> [AnnotationTarget.TYPE] ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Target]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Retention]
        valueArguments: [ value -> AnnotationRetention.SOURCE ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Retention]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=MustBeDocumented]
        valueArguments: [ ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=MustBeDocumented]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=UnsafeVariance]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Annotation]
    CLASS_BODY
  CLASS[classId=kotlin/WasExperimental, fqName=kotlin.WasExperimental, isClsStubCompiledToJvmDefaultImplementation=false, isInterface=false, isLocal=false, isTopLevel=true, name=WasExperimental, superNames=[Annotation]]
    MODIFIER_LIST[internal final annotation]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Target]
        valueArguments: [ allowedTargets -> [AnnotationTarget.CLASS, AnnotationTarget.PROPERTY, AnnotationTarget.CONSTRUCTOR, AnnotationTarget.FUNCTION, AnnotationTarget.TYPEALIAS] ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Target]
      ANNOTATION_ENTRY[hasValueArguments=false, shortName=Retention]
        valueArguments: [ value -> AnnotationRetention.BINARY ]
        CONSTRUCTOR_CALLEE
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=annotation]
              REFERENCE_EXPRESSION[referencedName=Retention]
    PRIMARY_CONSTRUCTOR[fqName=null, hasBody=false, hasNoExpressionBody=true, isDelegatedCallToThis=false, isExplicitDelegationCall=false, isExtension=false, isTopLevel=false, mayHaveContract=false, name=WasExperimental]
      MODIFIER_LIST[public MustUseReturnValue]
      VALUE_PARAMETER_LIST
        VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=markerClass]
          MODIFIER_LIST[vararg]
          TYPE_REFERENCE
            USER_TYPE
              USER_TYPE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=kotlin]
                REFERENCE_EXPRESSION[referencedName=reflect]
              REFERENCE_EXPRESSION[referencedName=KClass]
              TYPE_ARGUMENT_LIST
                TYPE_PROJECTION[projectionKind=OUT]
                  MODIFIER_LIST[out]
                  TYPE_REFERENCE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=Annotation]
    SUPER_TYPE_LIST
      SUPER_TYPE_ENTRY
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Annotation]
    CLASS_BODY
      PROPERTY[fqName=kotlin.WasExperimental.markerClass, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=false, isVar=false, name=markerClass]
        MODIFIER_LIST[public final MustUseReturnValue]
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=kotlin]
            REFERENCE_EXPRESSION[referencedName=Array]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=OUT]
                MODIFIER_LIST[out]
                TYPE_REFERENCE
                  USER_TYPE
                    USER_TYPE
                      USER_TYPE
                        REFERENCE_EXPRESSION[referencedName=kotlin]
                      REFERENCE_EXPRESSION[referencedName=reflect]
                    REFERENCE_EXPRESSION[referencedName=KClass]
                    TYPE_ARGUMENT_LIST
                      TYPE_PROJECTION[projectionKind=OUT]
                        MODIFIER_LIST[out]
                        TYPE_REFERENCE
                          USER_TYPE
                            USER_TYPE
                              REFERENCE_EXPRESSION[referencedName=kotlin]
                            REFERENCE_EXPRESSION[referencedName=Annotation]
