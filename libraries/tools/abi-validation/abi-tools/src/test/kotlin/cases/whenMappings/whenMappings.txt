public final class cases/whenMappings/EnumWhenKt {
	public static final fun deacronimize (Lcases/whenMappings/SampleEnum;)Ljava/lang/String;
	public static final fun switch (Lcases/whenMappings/SampleEnum;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)V
}

public final class cases/whenMappings/SampleEnum : java/lang/Enum {
	public static final field A Lcases/whenMappings/SampleEnum;
	public static final field B Lcases/whenMappings/SampleEnum;
	public static final field C Lcases/whenMappings/SampleEnum;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcases/whenMappings/SampleEnum;
	public static fun values ()[Lcases/whenMappings/SampleEnum;
}

public abstract class cases/whenMappings/SampleSealed {
}

public final class cases/whenMappings/SampleSealed$A : cases/whenMappings/SampleSealed {
	public fun <init> ()V
}

public final class cases/whenMappings/SampleSealed$B : cases/whenMappings/SampleSealed {
	public fun <init> ()V
}

public final class cases/whenMappings/SampleSealed$C : cases/whenMappings/SampleSealed {
	public fun <init> ()V
}

public final class cases/whenMappings/SealedClassWhenKt {
	public static final fun deacronimize (Lcases/whenMappings/SampleSealed;)Ljava/lang/String;
	public static final fun switch (Lcases/whenMappings/SampleSealed;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)V
}

