FILE: [ResolvedTo(BODY_RESOLVE)] nestedClass.kt
    public abstract [ResolvedTo(BODY_RESOLVE)] class Base : R|kotlin/Any| {
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Base] constructor([ResolvedTo(BODY_RESOLVE)] [CorrespondingProperty=/Base.s] s: R|kotlin/String|): R|Base| {
            super<R|kotlin/Any|>()
        }

        public final [ResolvedTo(BODY_RESOLVE)] [IsFromPrimaryConstructor=true] val s: R|kotlin/String| = R|<local>/s|
            public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Base] get(): R|kotlin/String|

    }
    public final [ResolvedTo(BODY_RESOLVE)] class Outer : R|kotlin/Any| {
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=Outer] constructor(): R|Outer| {
            super<R|kotlin/Any|>()
        }

        public final [ResolvedTo(ANNOTATION_ARGUMENTS)] class Derived : R|Base| {
            public [ResolvedTo(ANNOTATION_ARGUMENTS)] [ContainingClassKey=Derived] constructor([ResolvedTo(ANNOTATION_ARGUMENTS)] s: R|kotlin/String|): R|Outer.Derived| {
                LAZY_super<R|Base|>
            }

        }

        public final [ResolvedTo(ANNOTATION_ARGUMENTS)] object Obj : R|Base| {
            private [ResolvedTo(ANNOTATION_ARGUMENTS)] [ContainingClassKey=Obj] constructor(): R|Outer.Obj| {
                LAZY_super<R|Base|>
            }

        }

    }
