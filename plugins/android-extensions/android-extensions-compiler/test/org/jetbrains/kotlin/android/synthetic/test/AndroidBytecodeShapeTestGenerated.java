/*
 * Copyright 2010-2024 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.android.synthetic.test;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.GenerateTestsKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape")
@TestDataPath("$PROJECT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public class AndroidBytecodeShapeTestGenerated extends AbstractAndroidBytecodeShapeTest {
  private void runTest(String testDataFilePath) {
    KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
  }

  @TestMetadata("activityWithEntityOptionsNoCache")
  public void testActivityWithEntityOptionsNoCache() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/activityWithEntityOptionsNoCache/");
  }

  public void testAllFilesPresentInBytecodeShape() {
    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape"), Pattern.compile("^([^\\.]+)$"), null, false);
  }

  @TestMetadata("baseClass")
  public void testBaseClass() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/baseClass/");
  }

  @TestMetadata("baseClassFragment")
  public void testBaseClassFragment() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/baseClassFragment/");
  }

  @TestMetadata("clearCache")
  public void testClearCache() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/clearCache/");
  }

  @TestMetadata("clearCacheBaseClass")
  public void testClearCacheBaseClass() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/clearCacheBaseClass/");
  }

  @TestMetadata("dialog")
  public void testDialog() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/dialog/");
  }

  @TestMetadata("extensionFunctions")
  public void testExtensionFunctions() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/extensionFunctions/");
  }

  @TestMetadata("extensionFunctionsFragment")
  public void testExtensionFunctionsFragment() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/extensionFunctionsFragment/");
  }

  @TestMetadata("extensionFunctionsView")
  public void testExtensionFunctionsView() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/extensionFunctionsView/");
  }

  @TestMetadata("fqNameInAttr")
  public void testFqNameInAttr() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/fqNameInAttr/");
  }

  @TestMetadata("fqNameInAttrFragment")
  public void testFqNameInAttrFragment() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/fqNameInAttrFragment/");
  }

  @TestMetadata("fqNameInTag")
  public void testFqNameInTag() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/fqNameInTag/");
  }

  @TestMetadata("fqNameInTagFragment")
  public void testFqNameInTagFragment() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/fqNameInTagFragment/");
  }

  @TestMetadata("fragmentWithEntityOptionsNoCache")
  public void testFragmentWithEntityOptionsNoCache() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/fragmentWithEntityOptionsNoCache/");
  }

  @TestMetadata("kt18545")
  public void testKt18545() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/kt18545/");
  }

  @TestMetadata("multiFile")
  public void testMultiFile() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/multiFile/");
  }

  @TestMetadata("multiFileFragment")
  public void testMultiFileFragment() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/multiFileFragment/");
  }

  @TestMetadata("onDestroyFragment")
  public void testOnDestroyFragment() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/onDestroyFragment/");
  }

  @TestMetadata("simple")
  public void testSimple() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/simple/");
  }

  @TestMetadata("simpleFragment")
  public void testSimpleFragment() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/simpleFragment/");
  }

  @TestMetadata("simpleFragmentProperty")
  public void testSimpleFragmentProperty() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/simpleFragmentProperty/");
  }

  @TestMetadata("simpleHashMapCacheImplementation")
  public void testSimpleHashMapCacheImplementation() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/simpleHashMapCacheImplementation/");
  }

  @TestMetadata("simpleView")
  public void testSimpleView() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/simpleView/");
  }

  @TestMetadata("supportExtensionFunctionsFragment")
  public void testSupportExtensionFunctionsFragment() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/supportExtensionFunctionsFragment/");
  }

  @TestMetadata("supportExtensionFunctionsFragmentAndroidx")
  public void testSupportExtensionFunctionsFragmentAndroidx() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/supportExtensionFunctionsFragmentAndroidx/");
  }

  @TestMetadata("supportSimpleFragment")
  public void testSupportSimpleFragment() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/supportSimpleFragment/");
  }

  @TestMetadata("supportSimpleFragmentAndroidx")
  public void testSupportSimpleFragmentAndroidx() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/supportSimpleFragmentAndroidx/");
  }

  @TestMetadata("supportSimpleFragmentProperty")
  public void testSupportSimpleFragmentProperty() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/supportSimpleFragmentProperty/");
  }

  @TestMetadata("supportSimpleFragmentPropertyAndroidx")
  public void testSupportSimpleFragmentPropertyAndroidx() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/supportSimpleFragmentPropertyAndroidx/");
  }

  @TestMetadata("viewStub")
  public void testViewStub() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/viewStub/");
  }

  @TestMetadata("viewWithCache")
  public void testViewWithCache() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/viewWithCache/");
  }

  @TestMetadata("viewWithDefaultNoCache")
  public void testViewWithDefaultNoCache() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/viewWithDefaultNoCache/");
  }

  @TestMetadata("viewWithEntityOptionsNoCache")
  public void testViewWithEntityOptionsNoCache() {
    runTest("plugins/android-extensions/android-extensions-compiler/testData/codegen/bytecodeShape/viewWithEntityOptionsNoCache/");
  }
}
