KtCallExpression(8,40): 'Comparator {x: Int, y: Int -> 1}'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        {x: Int, y: Int -> 1} -> (KaVariableSignature:
          name = function
          receiverType = null
          returnType = kotlin.Function2<kotlin.Int!, kotlin.Int!, kotlin.Int>
          symbol = function: kotlin.Function2<T!, T!, kotlin.Int>
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = {kotlin.Comparator<kotlin.Int!>=} java.util.Comparator<kotlin.Int!>
          symbol = kotlin/Comparator(function: kotlin.Function2<T!, T!, kotlin.Int>): {kotlin.Comparator<T>=} java.util.Comparator<T>
          valueParameters = [
            KaVariableSignature:
              name = function
              receiverType = null
              returnType = kotlin.Function2<kotlin.Int!, kotlin.Int!, kotlin.Int>
              symbol = function: kotlin.Function2<T!, T!, kotlin.Int>
              callableId = null
          ]
          callableId = kotlin/Comparator
      typeArgumentsMapping = {
        T -> (kotlin.Int!)
      }
    isInBestCandidates = true