== simpleLess ==
fun simpleLess() {
    var a = 1
    if(a < 2) {
        a = 3
    }
    else {
        val b = a
    }
    42
}
---------------------
L0:
  1 <START>                                                               in: INTS{}        BOOLS{} ARRS{}    out: INTS{}        BOOLS{} ARRS{}
  2 mark({ var a = 1 if(a < 2) { a = 3 } else { val b = a } 42 })         in: INTS{}        BOOLS{} ARRS{}    out: INTS{}        BOOLS{} ARRS{}
    v(var a = 1)                                                          in: INTS{}        BOOLS{} ARRS{}    out: INTS{a:-}     BOOLS{} ARRS{}
    r(1) -> <v0>                                                          in: INTS{a:-}     BOOLS{} ARRS{}    out: INTS{a:-}     BOOLS{} ARRS{}
    w(a|<v0>)                                                             in: INTS{a:-}     BOOLS{} ARRS{}    out: INTS{a:[1]}   BOOLS{} ARRS{}
    mark(if(a < 2) { a = 3 } else { val b = a })                          in: INTS{a:[1]}   BOOLS{} ARRS{}    out: INTS{a:[1]}   BOOLS{} ARRS{}
    r(a) -> <v1>                                                          in: INTS{a:[1]}   BOOLS{} ARRS{}    out: INTS{a:[1]}   BOOLS{} ARRS{}
    r(2) -> <v2>                                                          in: INTS{a:[1]}   BOOLS{} ARRS{}    out: INTS{a:[1]}   BOOLS{} ARRS{}
    mark(a < 2)                                                           in: INTS{a:[1]}   BOOLS{} ARRS{}    out: INTS{a:[1]}   BOOLS{} ARRS{}
    call(a < 2, compareTo|<v1>, <v2>) -> <v3>                             in: INTS{a:[1]}   BOOLS{} ARRS{}    out: INTS{a:[1]}   BOOLS{} ARRS{}
    jf(L2|<v3>)                                                           in: INTS{a:[1]}   BOOLS{} ARRS{}    out: INTS{a:[1]}   BOOLS{} ARRS{}
  3 mark({ a = 3 })                                                       in: INTS{a:[1]}   BOOLS{} ARRS{}    out: INTS{a:[1]}   BOOLS{} ARRS{}
    r(3) -> <v4>                                                          in: INTS{a:[1]}   BOOLS{} ARRS{}    out: INTS{a:[1]}   BOOLS{} ARRS{}
    w(a|<v4>)                                                             in: INTS{a:[1]}   BOOLS{} ARRS{}    out: INTS{a:[3]}   BOOLS{} ARRS{}
  2 jmp(L3)                                                               in: INTS{a:[3]}   BOOLS{} ARRS{}    out: INTS{a:[3]}   BOOLS{} ARRS{}
L2 [else branch]:
  3 mark({ val b = a })                                                   in: INTS{a:[1]}   BOOLS{} ARRS{}    out: INTS{a:[1]}   BOOLS{} ARRS{}
    v(val b = a)                                                          in: INTS{a:?}     BOOLS{} ARRS{}    out: INTS{a:?,b:-} BOOLS{} ARRS{}
    r(a) -> <v6>                                                          in: INTS{a:?,b:-} BOOLS{} ARRS{}    out: INTS{a:?,b:-} BOOLS{} ARRS{}
    w(b|<v6>)                                                             in: INTS{a:?,b:-} BOOLS{} ARRS{}    out: INTS{a:?,b:?} BOOLS{} ARRS{}
L3 ['if' expression result]:
  2 merge(if(a < 2) { a = 3 } else { val b = a }|!<v5>, !<v7>) -> <v8>    in: INTS{a:[3]}   BOOLS{} ARRS{}    out: INTS{a:[3]}   BOOLS{} ARRS{}
    r(42) -> <v9>                                                         in: INTS{a:[3]}   BOOLS{} ARRS{}    out: INTS{a:[3]}   BOOLS{} ARRS{}
L1:
  1 <END>                                                                 in: INTS{}        BOOLS{} ARRS{}    out: INTS{}        BOOLS{} ARRS{}
error:
    <ERROR>                                                               in: INTS{}        BOOLS{} ARRS{}    out: INTS{}        BOOLS{} ARRS{}
sink:
    <SINK>                                                                in: INTS{}        BOOLS{} ARRS{}    out: INTS{}        BOOLS{} ARRS{}
=====================
== unknownLess ==
fun unknownLess(a: Int, c: Int) {
    var b = 1
    if(b < a) {
        b = a
    }
    if(c < b) {
        b = c
    }
    42
}
---------------------
L0:
  1 <START>                                                           in: INTS{}              BOOLS{} ARRS{}    out: INTS{}              BOOLS{} ARRS{}
    v(a: Int)                                                         in: INTS{}              BOOLS{} ARRS{}    out: INTS{a:-}           BOOLS{} ARRS{}
    magic[FAKE_INITIALIZER](a: Int) -> <v0>                           in: INTS{a:-}           BOOLS{} ARRS{}    out: INTS{a:-}           BOOLS{} ARRS{}
    w(a|<v0>)                                                         in: INTS{a:-}           BOOLS{} ARRS{}    out: INTS{a:?}           BOOLS{} ARRS{}
    v(c: Int)                                                         in: INTS{a:?}           BOOLS{} ARRS{}    out: INTS{a:?,c:-}       BOOLS{} ARRS{}
    magic[FAKE_INITIALIZER](c: Int) -> <v1>                           in: INTS{a:?,c:-}       BOOLS{} ARRS{}    out: INTS{a:?,c:-}       BOOLS{} ARRS{}
    w(c|<v1>)                                                         in: INTS{a:?,c:-}       BOOLS{} ARRS{}    out: INTS{a:?,c:?}       BOOLS{} ARRS{}
  2 mark({ var b = 1 if(b < a) { b = a } if(c < b) { b = c } 42 })    in: INTS{a:?,c:?}       BOOLS{} ARRS{}    out: INTS{a:?,c:?}       BOOLS{} ARRS{}
    v(var b = 1)                                                      in: INTS{a:?,c:?}       BOOLS{} ARRS{}    out: INTS{a:?,b:-,c:?}   BOOLS{} ARRS{}
    r(1) -> <v2>                                                      in: INTS{a:?,b:-,c:?}   BOOLS{} ARRS{}    out: INTS{a:?,b:-,c:?}   BOOLS{} ARRS{}
    w(b|<v2>)                                                         in: INTS{a:?,b:-,c:?}   BOOLS{} ARRS{}    out: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}
    mark(if(b < a) { b = a })                                         in: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}    out: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}
    r(b) -> <v3>                                                      in: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}    out: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}
    r(a) -> <v4>                                                      in: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}    out: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}
    mark(b < a)                                                       in: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}    out: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}
    call(b < a, compareTo|<v3>, <v4>) -> <v5>                         in: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}    out: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}
    jf(L2|<v5>)                                                       in: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}    out: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}
  3 mark({ b = a })                                                   in: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}    out: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}
    r(a) -> <v6>                                                      in: INTS{a:?,b:?,c:?}   BOOLS{} ARRS{}    out: INTS{a:?,b:?,c:?}   BOOLS{} ARRS{}
    w(b|<v6>)                                                         in: INTS{a:?,b:?,c:?}   BOOLS{} ARRS{}    out: INTS{a:?,b:?,c:?}   BOOLS{} ARRS{}
  2 jmp(L3)                                                           in: INTS{a:?,b:?,c:?}   BOOLS{} ARRS{}    out: INTS{a:?,b:?,c:?}   BOOLS{} ARRS{}
L2 [else branch]:
    read (Unit)                                                       in: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}    out: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}
L3 ['if' expression result]:
    merge(if(b < a) { b = a }|!<v7>) -> <v8>                          in: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}    out: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}
    mark(if(c < b) { b = c })                                         in: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}    out: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}
    r(c) -> <v9>                                                      in: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}    out: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}
    r(b) -> <v10>                                                     in: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}    out: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}
    mark(c < b)                                                       in: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}    out: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}
    call(c < b, compareTo|<v9>, <v10>) -> <v11>                       in: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}    out: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}
    jf(L4|<v11>)                                                      in: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}    out: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}
  3 mark({ b = c })                                                   in: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}    out: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}
    r(c) -> <v12>                                                     in: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}    out: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}
    w(b|<v12>)                                                        in: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}    out: INTS{a:?,b:?,c:?}   BOOLS{} ARRS{}
  2 jmp(L5)                                                           in: INTS{a:?,b:?,c:?}   BOOLS{} ARRS{}    out: INTS{a:?,b:?,c:?}   BOOLS{} ARRS{}
L4 [else branch]:
    read (Unit)                                                       in: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}    out: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}
L5 ['if' expression result]:
    merge(if(c < b) { b = c }|!<v13>) -> <v14>                        in: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}    out: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}
    r(42) -> <v15>                                                    in: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}    out: INTS{a:?,b:[1],c:?} BOOLS{} ARRS{}
L1:
  1 <END>                                                             in: INTS{a:?,c:?}       BOOLS{} ARRS{}    out: INTS{a:?,c:?}       BOOLS{} ARRS{}
error:
    <ERROR>                                                           in: INTS{}              BOOLS{} ARRS{}    out: INTS{}              BOOLS{} ARRS{}
sink:
    <SINK>                                                            in: INTS{}              BOOLS{} ARRS{}    out: INTS{}              BOOLS{} ARRS{}
=====================
== complexLess ==
fun complexLess(cond1: Boolean, cond2: Boolean) {
    var a = 1
    if(cond1) {
        a = 3
    }
    else if(cond2) {
        a = 5
    }
    if(a < 4) {
        val b = a
    }
    else {
        a = 7
    }
}
---------------------
L0:
  1 <START>                                                                                                    in: INTS{}             BOOLS{}                                                                        ARRS{}    out: INTS{}                  BOOLS{}                                                                        ARRS{}
    v(cond1: Boolean)                                                                                          in: INTS{}             BOOLS{}                                                                        ARRS{}    out: INTS{}                  BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}]}                                     ARRS{}
    magic[FAKE_INITIALIZER](cond1: Boolean) -> <v0>                                                            in: INTS{}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}]}                                     ARRS{}    out: INTS{}                  BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}]}                                     ARRS{}
    w(cond1|<v0>)                                                                                              in: INTS{}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}]}                                     ARRS{}    out: INTS{}                  BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}]}                                     ARRS{}
    v(cond2: Boolean)                                                                                          in: INTS{}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}]}                                     ARRS{}    out: INTS{}                  BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    magic[FAKE_INITIALIZER](cond2: Boolean) -> <v1>                                                            in: INTS{}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{}                  BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    w(cond2|<v1>)                                                                                              in: INTS{}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{}                  BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
  2 mark({ var a = 1 if(cond1) { a = 3 } else if(cond2) { a = 5 } if(a < 4) { val b = a } else { a = 7 } })    in: INTS{}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{}                  BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    v(var a = 1)                                                                                               in: INTS{}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:-}               BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    r(1) -> <v2>                                                                                               in: INTS{a:-}          BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:-}               BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    w(a|<v2>)                                                                                                  in: INTS{a:-}          BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1]}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    mark(if(cond1) { a = 3 } else if(cond2) { a = 5 })                                                         in: INTS{a:[1]}        BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1]}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    r(cond1) -> <v3>                                                                                           in: INTS{a:[1]}        BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1]}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    jf(L2|<v3>)                                                                                                in: INTS{a:[1]}        BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1]}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
  3 mark({ a = 3 })                                                                                            in: INTS{a:[1]}        BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1]}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    r(3) -> <v4>                                                                                               in: INTS{a:[1]}        BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1]}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    w(a|<v4>)                                                                                                  in: INTS{a:[1]}        BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[3]}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
  2 jmp(L3)                                                                                                    in: INTS{a:[3]}        BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[3]}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
L2 [else branch]:
    mark(if(cond2) { a = 5 })                                                                                  in: INTS{a:[1]}        BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1]}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    r(cond2) -> <v6>                                                                                           in: INTS{a:[1]}        BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1]}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    jf(L4|<v6>)                                                                                                in: INTS{a:[1]}        BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1]}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
  3 mark({ a = 5 })                                                                                            in: INTS{a:[1]}        BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1]}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    r(5) -> <v7>                                                                                               in: INTS{a:[1]}        BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1]}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    w(a|<v7>)                                                                                                  in: INTS{a:[1]}        BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[5]}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
  2 jmp(L5)                                                                                                    in: INTS{a:[5]}        BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[5]}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
L4 [else branch]:
    read (Unit)                                                                                                in: INTS{a:[1]}        BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1]}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
L5 ['if' expression result]:
    merge(if(cond2) { a = 5 }|!<v8>) -> <v9>                                                                   in: INTS{a:[1, 5]}     BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1, 5]}          BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
L3 ['if' expression result]:
    merge(if(cond1) { a = 3 } else if(cond2) { a = 5 }|!<v5>, <v9>) -> <v10>                                   in: INTS{a:[1, 3, 5]}  BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1, 3, 5]}       BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    mark(if(a < 4) { val b = a } else { a = 7 })                                                               in: INTS{a:[1, 3, 5]}  BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1, 3, 5]}       BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    r(a) -> <v11>                                                                                              in: INTS{a:[1, 3, 5]}  BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1, 3, 5]}       BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    r(4) -> <v12>                                                                                              in: INTS{a:[1, 3, 5]}  BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1, 3, 5]}       BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    mark(a < 4)                                                                                                in: INTS{a:[1, 3, 5]}  BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1, 3, 5]}       BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    call(a < 4, compareTo|<v11>, <v12>) -> <v13>                                                               in: INTS{a:[1, 3, 5]}  BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1, 3, 5]}       BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    jf(L6|<v13>)                                                                                               in: INTS{a:[1, 3, 5]}  BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1, 3, 5]}       BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
  3 mark({ val b = a })                                                                                        in: INTS{a:[1, 3, 5]}  BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1, 3, 5]}       BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    v(val b = a)                                                                                               in: INTS{a:[1, 3]}     BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1, 3],b:-}      BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    r(a) -> <v14>                                                                                              in: INTS{a:[1, 3],b:-} BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1, 3],b:-}      BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    w(b|<v14>)                                                                                                 in: INTS{a:[1, 3],b:-} BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1, 3],b:[1, 3]} BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
  2 jmp(L7)                                                                                                    in: INTS{a:[1, 3]}     BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1, 3]}          BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
L6 [else branch]:
  3 mark({ a = 7 })                                                                                            in: INTS{a:[1, 3, 5]}  BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1, 3, 5]}       BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    r(7) -> <v15>                                                                                              in: INTS{a:[5]}        BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[5]}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
    w(a|<v15>)                                                                                                 in: INTS{a:[5]}        BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[7]}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
L7 ['if' expression result]:
  2 merge(if(a < 4) { val b = a } else { a = 7 }|!<v17>, !<v16>) -> <v18>                                      in: INTS{a:[1, 3, 7]}  BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{a:[1, 3, 7]}       BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
L1:
  1 <END>                                                                                                      in: INTS{}             BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}    out: INTS{}                  BOOLS{cond1:Undef:[onTrue:{}, onFalse:{}],cond2:Undef:[onTrue:{}, onFalse:{}]} ARRS{}
error:
    <ERROR>                                                                                                    in: INTS{}             BOOLS{}                                                                        ARRS{}    out: INTS{}                  BOOLS{}                                                                        ARRS{}
sink:
    <SINK>                                                                                                     in: INTS{}             BOOLS{}                                                                        ARRS{}    out: INTS{}                  BOOLS{}                                                                        ARRS{}
=====================
== falseAlarmOnAlwaysTrue ==
fun falseAlarmOnAlwaysTrue() {
    var a = 1
    if(a < 2) {
        a = 3
    }
    42
}
---------------------
L0:
  1 <START>                                       in: INTS{}         BOOLS{} ARRS{}    out: INTS{}         BOOLS{} ARRS{}
  2 mark({ var a = 1 if(a < 2) { a = 3 } 42 })    in: INTS{}         BOOLS{} ARRS{}    out: INTS{}         BOOLS{} ARRS{}
    v(var a = 1)                                  in: INTS{}         BOOLS{} ARRS{}    out: INTS{a:-}      BOOLS{} ARRS{}
    r(1) -> <v0>                                  in: INTS{a:-}      BOOLS{} ARRS{}    out: INTS{a:-}      BOOLS{} ARRS{}
    w(a|<v0>)                                     in: INTS{a:-}      BOOLS{} ARRS{}    out: INTS{a:[1]}    BOOLS{} ARRS{}
    mark(if(a < 2) { a = 3 })                     in: INTS{a:[1]}    BOOLS{} ARRS{}    out: INTS{a:[1]}    BOOLS{} ARRS{}
    r(a) -> <v1>                                  in: INTS{a:[1]}    BOOLS{} ARRS{}    out: INTS{a:[1]}    BOOLS{} ARRS{}
    r(2) -> <v2>                                  in: INTS{a:[1]}    BOOLS{} ARRS{}    out: INTS{a:[1]}    BOOLS{} ARRS{}
    mark(a < 2)                                   in: INTS{a:[1]}    BOOLS{} ARRS{}    out: INTS{a:[1]}    BOOLS{} ARRS{}
    call(a < 2, compareTo|<v1>, <v2>) -> <v3>     in: INTS{a:[1]}    BOOLS{} ARRS{}    out: INTS{a:[1]}    BOOLS{} ARRS{}
    jf(L2|<v3>)                                   in: INTS{a:[1]}    BOOLS{} ARRS{}    out: INTS{a:[1]}    BOOLS{} ARRS{}
  3 mark({ a = 3 })                               in: INTS{a:[1]}    BOOLS{} ARRS{}    out: INTS{a:[1]}    BOOLS{} ARRS{}
    r(3) -> <v4>                                  in: INTS{a:[1]}    BOOLS{} ARRS{}    out: INTS{a:[1]}    BOOLS{} ARRS{}
    w(a|<v4>)                                     in: INTS{a:[1]}    BOOLS{} ARRS{}    out: INTS{a:[3]}    BOOLS{} ARRS{}
  2 jmp(L3)                                       in: INTS{a:[3]}    BOOLS{} ARRS{}    out: INTS{a:[3]}    BOOLS{} ARRS{}
L2 [else branch]:
    read (Unit)                                   in: INTS{a:[1]}    BOOLS{} ARRS{}    out: INTS{a:[1]}    BOOLS{} ARRS{}
L3 ['if' expression result]:
    merge(if(a < 2) { a = 3 }|!<v5>) -> <v6>      in: INTS{a:[1, 3]} BOOLS{} ARRS{}    out: INTS{a:[1, 3]} BOOLS{} ARRS{}
    r(42) -> <v7>                                 in: INTS{a:[1, 3]} BOOLS{} ARRS{}    out: INTS{a:[1, 3]} BOOLS{} ARRS{}
L1:
  1 <END>                                         in: INTS{}         BOOLS{} ARRS{}    out: INTS{}         BOOLS{} ARRS{}
error:
    <ERROR>                                       in: INTS{}         BOOLS{} ARRS{}    out: INTS{}         BOOLS{} ARRS{}
sink:
    <SINK>                                        in: INTS{}         BOOLS{} ARRS{}    out: INTS{}         BOOLS{} ARRS{}
=====================