package

public val strList: kotlin.collections.List<kotlin.String>
public fun main(): kotlin.Unit

public/*package*/ open class A</*0*/ T : A<(raw) A<*, *, *>, (raw) A<*, *, *>, (raw) kotlin.collections.(Mutable)List<*>!>!, /*1*/ E : T!, /*2*/ F : (kotlin.collections.MutableList<out kotlin.Double!>..kotlin.collections.List<kotlin.Double!>?)> {
    public/*package*/ constructor A</*0*/ T : A<(raw) A<*, *, *>, (raw) A<*, *, *>, (raw) kotlin.collections.(Mutable)List<*>!>!, /*1*/ E : T!, /*2*/ F : (kotlin.collections.MutableList<out kotlin.Double!>..kotlin.collections.List<kotlin.Double!>?)>()
    public/*package*/ final var first: T!
    public/*package*/ final var listOfDoubles: F!
    public/*package*/ final var second: E!
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public/*package*/ open class Test {
    public/*package*/ constructor Test()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    public/*package*/ open class DerivedRawA : A<(raw) A<*, *, *>!, (raw) A<*, *, *>!, (raw) kotlin.collections.(Mutable)List<*>!> {
        public/*package*/ constructor DerivedRawA()
        public/*package*/ final override /*1*/ /*fake_override*/ var first: A<(raw) A<*, *, *>!, (raw) A<*, *, *>!, (raw) kotlin.collections.(Mutable)List<*>!>!
        public/*package*/ final override /*1*/ /*fake_override*/ var listOfDoubles: kotlin.collections.(Mutable)List<(raw) kotlin.Any?>!
        public/*package*/ final override /*1*/ /*fake_override*/ var second: A<(raw) A<*, *, *>!, (raw) A<*, *, *>!, (raw) kotlin.collections.(Mutable)List<*>!>!
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    // Static members
    public/*package*/ final var rawAField: A<(raw) A<*, *, *>!, (raw) A<*, *, *>!, (raw) kotlin.collections.(Mutable)List<*>!>!
}
