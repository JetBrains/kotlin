/*
 * Copyright 2010-2024 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.jps.build;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.jps.GenerateJpsPluginTestsKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("jps/jps-plugin/testData/incremental/lookupTracker/jvm")
@TestDataPath("$PROJECT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public class K1JvmLookupTrackerTestGenerated extends AbstractK1JvmLookupTrackerTest {
  private void runTest(String testDataFilePath) {
    KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
  }

  public void testAllFilesPresentInJvm() {
    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("jps/jps-plugin/testData/incremental/lookupTracker/jvm"), Pattern.compile("^([^\\.]+)$"), null, false);
  }

  @TestMetadata("classifierMembers")
  public void testClassifierMembers() {
    runTest("jps/jps-plugin/testData/incremental/lookupTracker/jvm/classifierMembers/");
  }

  @TestMetadata("companion")
  public void testCompanion() {
    runTest("jps/jps-plugin/testData/incremental/lookupTracker/jvm/companion/");
  }

  @TestMetadata("conventions")
  public void testConventions() {
    runTest("jps/jps-plugin/testData/incremental/lookupTracker/jvm/conventions/");
  }

  @TestMetadata("expressionType")
  public void testExpressionType() {
    runTest("jps/jps-plugin/testData/incremental/lookupTracker/jvm/expressionType/");
  }

  @TestMetadata("java")
  public void testJava() {
    runTest("jps/jps-plugin/testData/incremental/lookupTracker/jvm/java/");
  }

  @TestMetadata("javaStatics")
  public void testJavaStatics() {
    runTest("jps/jps-plugin/testData/incremental/lookupTracker/jvm/javaStatics/");
  }

  @TestMetadata("jvmNameChanged")
  public void testJvmNameChanged() {
    runTest("jps/jps-plugin/testData/incremental/lookupTracker/jvm/jvmNameChanged/");
  }

  @TestMetadata("localDeclarations")
  public void testLocalDeclarations() {
    runTest("jps/jps-plugin/testData/incremental/lookupTracker/jvm/localDeclarations/");
  }

  @TestMetadata("namedCompanion")
  public void testNamedCompanion() {
    runTest("jps/jps-plugin/testData/incremental/lookupTracker/jvm/namedCompanion/");
  }

  @TestMetadata("nested")
  public void testNested() {
    runTest("jps/jps-plugin/testData/incremental/lookupTracker/jvm/nested/");
  }

  @TestMetadata("packageDeclarations")
  public void testPackageDeclarations() {
    runTest("jps/jps-plugin/testData/incremental/lookupTracker/jvm/packageDeclarations/");
  }

  @TestMetadata("SAM")
  public void testSAM() {
    runTest("jps/jps-plugin/testData/incremental/lookupTracker/jvm/SAM/");
  }

  @TestMetadata("simple")
  public void testSimple() {
    runTest("jps/jps-plugin/testData/incremental/lookupTracker/jvm/simple/");
  }

  @TestMetadata("syntheticProperties")
  public void testSyntheticProperties() {
    runTest("jps/jps-plugin/testData/incremental/lookupTracker/jvm/syntheticProperties/");
  }

  @TestMetadata("typeAliasAndUsage")
  public void testTypeAliasAndUsage() {
    runTest("jps/jps-plugin/testData/incremental/lookupTracker/jvm/typeAliasAndUsage/");
  }
}
