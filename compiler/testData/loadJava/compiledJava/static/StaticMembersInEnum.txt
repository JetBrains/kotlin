package test

public final enum class StaticMembersInEnum : kotlin.Enum<test.StaticMembersInEnum!> {
    enum entry ENTRY

    private constructor StaticMembersInEnum()
    public final override /*1*/ /*fake_override*/ val name: kotlin.String
    public final override /*1*/ /*fake_override*/ val ordinal: kotlin.Int
    protected final override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
    public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: test.StaticMembersInEnum!): kotlin.Int
    protected/*protected and package*/ final override /*1*/ /*fake_override*/ /*isHiddenForResolutionEverywhereBesideSupercalls*/ fun finalize(): kotlin.Unit
    public final override /*1*/ /*fake_override*/ /*isHiddenForResolutionEverywhereBesideSupercalls*/ fun getDeclaringClass(): java.lang.Class<test.StaticMembersInEnum!>!

    // Static members
    public final val CONSTANT: test.StaticMembersInEnum!
    public final var STATIC_FIELD: kotlin.Int
    public open fun foo(): kotlin.Unit
    public open fun valueOf(/*0*/ p0: kotlin.Int): kotlin.Unit
    public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): test.StaticMembersInEnum
    public final /*synthesized*/ fun values(): kotlin.Array<test.StaticMembersInEnum>
    public open fun values(/*0*/ p0: kotlin.Int): kotlin.Unit
}
