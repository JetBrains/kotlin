// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: compiler/ir/serialization.common/src/KotlinIr.proto
// Protobuf Java Version: 4.29.3

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry}
 */
public  final class FileEntry extends
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite<
        FileEntry, FileEntry.Builder> implements
    // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry)
    FileEntryOrBuilder {
  private FileEntry() {
    name_ = "";
    lineStartOffset_ = emptyIntList();
  }
  private int bitField0_;
  public static final int NAME_FIELD_NUMBER = 1;
  private java.lang.String name_;
  /**
   * <code>string name = 1 [features = { ... }</code>
   * @return Whether the name field is set.
   */
  @java.lang.Override
  public boolean hasName() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>string name = 1 [features = { ... }</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    return name_;
  }
  /**
   * <code>string name = 1 [features = { ... }</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public org.jetbrains.kotlin.protobuf.ByteString
      getNameBytes() {
    return org.jetbrains.kotlin.protobuf.ByteString.copyFromUtf8(name_);
  }
  /**
   * <code>string name = 1 [features = { ... }</code>
   * @param value The name to set.
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setName(
      java.lang.String value) {
    value.getClass();  // minimal bytecode null check
    bitField0_ |= 0x00000001;
    name_ = value;
  }
  /**
   * <code>string name = 1 [features = { ... }</code>
   */
  private void clearName() {
    bitField0_ = (bitField0_ & ~0x00000001);
    name_ = getDefaultInstance().getName();
  }
  /**
   * <code>string name = 1 [features = { ... }</code>
   * @param value The bytes for name to set.
   */
  private void setNameBytes(
      org.jetbrains.kotlin.protobuf.ByteString value) {
    name_ = value.toStringUtf8();
    bitField0_ |= 0x00000001;
  }

  public static final int LINE_START_OFFSET_FIELD_NUMBER = 2;
  private org.jetbrains.kotlin.protobuf.Internal.IntList lineStartOffset_;
  /**
   * <code>repeated int32 line_start_offset = 2;</code>
   * @return A list containing the lineStartOffset.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getLineStartOffsetList() {
    return lineStartOffset_;
  }
  /**
   * <code>repeated int32 line_start_offset = 2;</code>
   * @return The count of lineStartOffset.
   */
  @java.lang.Override
  public int getLineStartOffsetCount() {
    return lineStartOffset_.size();
  }
  /**
   * <code>repeated int32 line_start_offset = 2;</code>
   * @param index The index of the element to return.
   * @return The lineStartOffset at the given index.
   */
  @java.lang.Override
  public int getLineStartOffset(int index) {
    return lineStartOffset_.getInt(index);
  }
  private int lineStartOffsetMemoizedSerializedSize = -1;
  private void ensureLineStartOffsetIsMutable() {
    org.jetbrains.kotlin.protobuf.Internal.IntList tmp = lineStartOffset_;
    if (!tmp.isModifiable()) {
      lineStartOffset_ =
          org.jetbrains.kotlin.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }
  /**
   * <code>repeated int32 line_start_offset = 2;</code>
   * @param index The index to set the value at.
   * @param value The lineStartOffset to set.
   */
  private void setLineStartOffset(
      int index, int value) {
    ensureLineStartOffsetIsMutable();
    lineStartOffset_.setInt(index, value);
  }
  /**
   * <code>repeated int32 line_start_offset = 2;</code>
   * @param value The lineStartOffset to add.
   */
  private void addLineStartOffset(int value) {
    ensureLineStartOffsetIsMutable();
    lineStartOffset_.addInt(value);
  }
  /**
   * <code>repeated int32 line_start_offset = 2;</code>
   * @param values The lineStartOffset to add.
   */
  private void addAllLineStartOffset(
      java.lang.Iterable<? extends java.lang.Integer> values) {
    ensureLineStartOffsetIsMutable();
    org.jetbrains.kotlin.protobuf.AbstractMessageLite.addAll(
        values, lineStartOffset_);
  }
  /**
   * <code>repeated int32 line_start_offset = 2;</code>
   */
  private void clearLineStartOffset() {
    lineStartOffset_ = emptyIntList();
  }

  public static final int FIRST_RELEVANT_LINE_INDEX_FIELD_NUMBER = 3;
  private int firstRelevantLineIndex_;
  /**
   * <code>int32 first_relevant_line_index = 3 [default = 0];</code>
   * @return Whether the firstRelevantLineIndex field is set.
   */
  @java.lang.Override
  public boolean hasFirstRelevantLineIndex() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>int32 first_relevant_line_index = 3 [default = 0];</code>
   * @return The firstRelevantLineIndex.
   */
  @java.lang.Override
  public int getFirstRelevantLineIndex() {
    return firstRelevantLineIndex_;
  }
  /**
   * <code>int32 first_relevant_line_index = 3 [default = 0];</code>
   * @param value The firstRelevantLineIndex to set.
   */
  private void setFirstRelevantLineIndex(int value) {
    bitField0_ |= 0x00000002;
    firstRelevantLineIndex_ = value;
  }
  /**
   * <code>int32 first_relevant_line_index = 3 [default = 0];</code>
   */
  private void clearFirstRelevantLineIndex() {
    bitField0_ = (bitField0_ & ~0x00000002);
    firstRelevantLineIndex_ = 0;
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry parseFrom(
      java.nio.ByteBuffer data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry parseFrom(
      java.nio.ByteBuffer data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry parseFrom(byte[] data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry parseFrom(
      byte[] data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry parseFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry parseDelimitedFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry}
   */
  public static final class Builder extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
        org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry, Builder> implements
      // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry)
      org.jetbrains.kotlin.backend.common.serialization.proto.FileEntryOrBuilder {
    // Construct using org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>string name = 1 [features = { ... }</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return instance.hasName();
    }
    /**
     * <code>string name = 1 [features = { ... }</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      return instance.getName();
    }
    /**
     * <code>string name = 1 [features = { ... }</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public org.jetbrains.kotlin.protobuf.ByteString
        getNameBytes() {
      return instance.getNameBytes();
    }
    /**
     * <code>string name = 1 [features = { ... }</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      copyOnWrite();
      instance.setName(value);
      return this;
    }
    /**
     * <code>string name = 1 [features = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      copyOnWrite();
      instance.clearName();
      return this;
    }
    /**
     * <code>string name = 1 [features = { ... }</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        org.jetbrains.kotlin.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNameBytes(value);
      return this;
    }

    /**
     * <code>repeated int32 line_start_offset = 2;</code>
     * @return A list containing the lineStartOffset.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getLineStartOffsetList() {
      return java.util.Collections.unmodifiableList(
          instance.getLineStartOffsetList());
    }
    /**
     * <code>repeated int32 line_start_offset = 2;</code>
     * @return The count of lineStartOffset.
     */
    @java.lang.Override
    public int getLineStartOffsetCount() {
      return instance.getLineStartOffsetCount();
    }
    /**
     * <code>repeated int32 line_start_offset = 2;</code>
     * @param index The index of the element to return.
     * @return The lineStartOffset at the given index.
     */
    @java.lang.Override
    public int getLineStartOffset(int index) {
      return instance.getLineStartOffset(index);
    }
    /**
     * <code>repeated int32 line_start_offset = 2;</code>
     * @param value The lineStartOffset to set.
     * @return This builder for chaining.
     */
    public Builder setLineStartOffset(
        int index, int value) {
      copyOnWrite();
      instance.setLineStartOffset(index, value);
      return this;
    }
    /**
     * <code>repeated int32 line_start_offset = 2;</code>
     * @param value The lineStartOffset to add.
     * @return This builder for chaining.
     */
    public Builder addLineStartOffset(int value) {
      copyOnWrite();
      instance.addLineStartOffset(value);
      return this;
    }
    /**
     * <code>repeated int32 line_start_offset = 2;</code>
     * @param values The lineStartOffset to add.
     * @return This builder for chaining.
     */
    public Builder addAllLineStartOffset(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      copyOnWrite();
      instance.addAllLineStartOffset(values);
      return this;
    }
    /**
     * <code>repeated int32 line_start_offset = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearLineStartOffset() {
      copyOnWrite();
      instance.clearLineStartOffset();
      return this;
    }

    /**
     * <code>int32 first_relevant_line_index = 3 [default = 0];</code>
     * @return Whether the firstRelevantLineIndex field is set.
     */
    @java.lang.Override
    public boolean hasFirstRelevantLineIndex() {
      return instance.hasFirstRelevantLineIndex();
    }
    /**
     * <code>int32 first_relevant_line_index = 3 [default = 0];</code>
     * @return The firstRelevantLineIndex.
     */
    @java.lang.Override
    public int getFirstRelevantLineIndex() {
      return instance.getFirstRelevantLineIndex();
    }
    /**
     * <code>int32 first_relevant_line_index = 3 [default = 0];</code>
     * @param value The firstRelevantLineIndex to set.
     * @return This builder for chaining.
     */
    public Builder setFirstRelevantLineIndex(int value) {
      copyOnWrite();
      instance.setFirstRelevantLineIndex(value);
      return this;
    }
    /**
     * <code>int32 first_relevant_line_index = 3 [default = 0];</code>
     * @return This builder for chaining.
     */
    public Builder clearFirstRelevantLineIndex() {
      copyOnWrite();
      instance.clearFirstRelevantLineIndex();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry)
  }
  private byte memoizedIsInitialized = 2;
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "name_",
            "lineStartOffset_",
            "firstRelevantLineIndex_",
          };
          java.lang.String info =
              "\u0004\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0001\u0001\u0001\u1508\u0000\u0002" +
              "\'\u0003\u1004\u0001";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        org.jetbrains.kotlin.protobuf.Parser<org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry> parser = PARSER;
        if (parser == null) {
          synchronized (org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return memoizedIsInitialized;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry)
  private static final org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry DEFAULT_INSTANCE;
  static {
    FileEntry defaultInstance = new FileEntry();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.registerDefaultInstance(
      FileEntry.class, defaultInstance);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.FileEntry getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile org.jetbrains.kotlin.protobuf.Parser<FileEntry> PARSER;

  public static org.jetbrains.kotlin.protobuf.Parser<FileEntry> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
