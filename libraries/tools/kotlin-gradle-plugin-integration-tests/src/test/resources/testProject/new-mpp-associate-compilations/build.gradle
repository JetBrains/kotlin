plugins {
    id("org.jetbrains.kotlin.multiplatform").version("<pluginMarkerVersion>")
}

repositories {
    mavenLocal()
    jcenter()
}

kotlin {
    sourceSets {
        getByName("commonMain") {
            dependencies {
                implementation(kotlin("stdlib-common"))
            }
        }

        getByName("commonTest") {
            dependencies {
                implementation(kotlin("test-common"))
                implementation(kotlin("test-annotations-common"))
            }
        }

        create("commonIntegrationTest")
    }

    jvm {
        compilations["main"].defaultSourceSet.dependencies {
            implementation(kotlin("stdlib"))
        }
        compilations["test"].defaultSourceSet.dependencies {
            implementation(kotlin("test-junit"))
        }
    }

    js {
        compilations["main"].defaultSourceSet.dependencies {
            implementation(kotlin("stdlib-js"))
        }
        compilations["test"].defaultSourceSet.dependencies {
            implementation(kotlin("test-js"))
        }
    }

    mingwX64("mingw64") {}
    linuxX64("linux64") {}
    macosX64("macos64") {}

    targets.matching { it.name != "metadata" }.all {
        compilations.create("integrationTest") {
            associateWith(compilations["test"])
            defaultSourceSet.dependsOn(sourceSets["commonIntegrationTest"])
        }
    }
}

kotlin {
    testableTargets.all {
        testRuns {
            getByName("test") {
                filter {
                    excludeTestsMatching("*.secondTest")
                }
            }
            create("integration") {
                filter {
                    includeTestsMatching("com.example.HelloIntegrationTest.test")
                }
            }
        }
    }

    jvm {
        testRuns {
            getByName("test").filter {
                excludeTestsMatching("com.example.HelloTest.secondTest")
            }

            getByName("integration") {
                setExecutionSourceFrom(compilations["integrationTest"])
            }
        }
    }

    targets.matching { it.name == "mingw64" || it.name == "linux64" || it.name == "macos64" }.all {
        testRuns {
            getByName("test").filter { excludeTestsMatching("*.secondTest") }

            getByName("integration") {
                binaries {
                    test("integration") {
                        compilation = compilations["integrationTest"]
                    }
                }
                setExecutionSourceFrom(binaries.getTest("integration", "DEBUG"))
            }
        }
    }
}