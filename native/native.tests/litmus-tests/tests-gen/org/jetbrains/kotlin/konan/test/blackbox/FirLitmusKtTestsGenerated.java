/*
 * Copyright 2010-2024 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.konan.test.blackbox;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.junit.jupiter.api.Tag;
import org.jetbrains.kotlin.konan.test.blackbox.support.group.UseStandardTestCaseGroupProvider;
import org.jetbrains.kotlin.konan.test.blackbox.support.EnforcedHostTarget;
import org.jetbrains.kotlin.konan.test.blackbox.support.group.FirPipeline;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.GenerateNativeTestsKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("native/native.tests/litmus-tests/testData/standalone")
@TestDataPath("$PROJECT_ROOT")
@Tag("litmuskt-native")
@UseStandardTestCaseGroupProvider()
@EnforcedHostTarget()
@Tag("frontend-fir")
@FirPipeline()
public class FirLitmusKtTestsGenerated extends AbstractNativeBlackBoxTest {
  @Test
  public void testAllFilesPresentInStandalone() {
    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("native/native.tests/litmus-tests/testData/standalone"), Pattern.compile("^(.+)\\.kt$"), null, true);
  }

  @Test
  @TestMetadata("ArrayVolatile.kt")
  public void testArrayVolatile() {
    runTest("native/native.tests/litmus-tests/testData/standalone/ArrayVolatile.kt");
  }

  @Test
  @TestMetadata("Atomicity.kt")
  public void testAtomicity() {
    runTest("native/native.tests/litmus-tests/testData/standalone/Atomicity.kt");
  }

  @Test
  @TestMetadata("Coherence.kt")
  public void testCoherence() {
    runTest("native/native.tests/litmus-tests/testData/standalone/Coherence.kt");
  }

  @Test
  @TestMetadata("IndependentReadsOfIndependentWrites.kt")
  public void testIndependentReadsOfIndependentWrites() {
    runTest("native/native.tests/litmus-tests/testData/standalone/IndependentReadsOfIndependentWrites.kt");
  }

  @Test
  @TestMetadata("LoadBuffering.kt")
  public void testLoadBuffering() {
    runTest("native/native.tests/litmus-tests/testData/standalone/LoadBuffering.kt");
  }

  @Test
  @TestMetadata("MessagePassing.kt")
  public void testMessagePassing() {
    runTest("native/native.tests/litmus-tests/testData/standalone/MessagePassing.kt");
  }

  @Test
  @TestMetadata("Sample.kt")
  public void testSample() {
    runTest("native/native.tests/litmus-tests/testData/standalone/Sample.kt");
  }

  @Test
  @TestMetadata("StoreBuffering.kt")
  public void testStoreBuffering() {
    runTest("native/native.tests/litmus-tests/testData/standalone/StoreBuffering.kt");
  }

  @Test
  @TestMetadata("UnsafePublication.kt")
  public void testUnsafePublication() {
    runTest("native/native.tests/litmus-tests/testData/standalone/UnsafePublication.kt");
  }

  @Test
  @TestMetadata("WordTearing.kt")
  public void testWordTearing() {
    runTest("native/native.tests/litmus-tests/testData/standalone/WordTearing.kt");
  }
}
