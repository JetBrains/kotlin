package test

public interface Sub : test.Super1, test.Super2 {
    internal abstract override /*2*/ /*fake_override*/ var x: kotlin.String
        internal abstract override /*2*/ /*fake_override*/ fun <get-x>(): kotlin.String
        internal abstract override /*1*/ /*fake_override*/ fun <set-x>(/*0*/ <set-?>: kotlin.String): kotlin.Unit
    internal abstract override /*2*/ /*fake_override*/ var y: kotlin.String
        internal abstract override /*2*/ /*fake_override*/ fun <get-y>(): kotlin.String
        internal abstract override /*1*/ /*fake_override*/ fun <set-y>(/*0*/ <set-?>: kotlin.String): kotlin.Unit
}

public interface Super1 {
    internal abstract val x: kotlin.String
        internal abstract fun <get-x>(): kotlin.String
    internal abstract var y: kotlin.String
        internal abstract fun <get-y>(): kotlin.String
        internal abstract fun <set-y>(/*0*/ <set-?>: kotlin.String): kotlin.Unit
}

public interface Super2 {
    internal abstract var x: kotlin.String
        internal abstract fun <get-x>(): kotlin.String
        internal abstract fun <set-x>(/*0*/ <set-?>: kotlin.String): kotlin.Unit
    internal abstract val y: kotlin.String
        internal abstract fun <get-y>(): kotlin.String
}
