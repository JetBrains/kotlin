//
// Source
// ------------------------------------------

import androidx.compose.runtime.*

@Composable
fun Test() {
    val factory = createFactory {
        10
    }
    factory()
}

//
// Transformed IR
// ------------------------------------------

@Composable
fun Test(%composer: Composer?, %changed: Int) {
  %composer = %composer.startRestartGroup(<>)
  sourceInformation(%composer, "C(Test)<factor...>:Test.kt")
  if (%changed != 0 || !%composer.skipping) {
    if (isTraceInProgress()) {
      traceEventStart(<>, %changed, -1, <>)
    }
    val factory = createFactory { %composer: Composer?, %changed: Int ->
      %composer.startReplaceGroup(<>)
      if (isTraceInProgress()) {
        traceEventStart(<>, %changed, -1, <>)
      }
      val tmp0 = 10
      if (isTraceInProgress()) {
        traceEventEnd()
      }
      %composer.endReplaceGroup()
      tmp0
    }
    factory(%composer, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    %composer.skipToGroupEnd()
  }
  %composer.endRestartGroup()?.updateScope { %composer: Composer?, %force: Int ->
    Test(%composer, updateChangedFlags(%changed or 0b0001))
  }
}
