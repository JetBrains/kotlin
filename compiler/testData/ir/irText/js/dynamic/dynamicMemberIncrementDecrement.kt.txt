fun testMemberIncrementDecrement(d: dynamic) {
  val t1: dynamic = ++d.prefixIncr
  val t2: dynamic = --d.prefixDecr
  val t3: dynamic = d.postfixIncr++
  val t4: dynamic = d.postfixDecr--
}

fun testSafeMemberIncrementDecrement(d: dynamic) {
  val t1: dynamic = { // BLOCK
    val tmp_0: dynamic = d
    when {
      EQEQ(arg0 = tmp_0, arg1 = null) -> null
      else -> ++tmp_0.prefixIncr
    }
  }
  val t2: dynamic = { // BLOCK
    val tmp_1: dynamic = d
    when {
      EQEQ(arg0 = tmp_1, arg1 = null) -> null
      else -> --tmp_1.prefixDecr
    }
  }
  val t3: dynamic = { // BLOCK
    val tmp_2: dynamic = d
    when {
      EQEQ(arg0 = tmp_2, arg1 = null) -> null
      else -> tmp_2.postfixIncr++
    }
  }
  val t4: dynamic = { // BLOCK
    val tmp_3: dynamic = d
    when {
      EQEQ(arg0 = tmp_3, arg1 = null) -> null
      else -> tmp_3.postfixDecr--
    }
  }
}

