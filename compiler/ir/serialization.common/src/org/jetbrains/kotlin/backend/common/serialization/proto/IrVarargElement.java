// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: compiler/ir/serialization.common/src/KotlinIr.proto
// Protobuf Java Version: 4.29.3

package org.jetbrains.kotlin.backend.common.serialization.proto;

/**
 * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement}
 */
public  final class IrVarargElement extends
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite<
        IrVarargElement, IrVarargElement.Builder> implements
    // @@protoc_insertion_point(message_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement)
    IrVarargElementOrBuilder {
  private IrVarargElement() {
  }
  private int varargElementCase_ = 0;
  private java.lang.Object varargElement_;
  public enum VarargElementCase {
    EXPRESSION(1),
    SPREAD_ELEMENT(2),
    VARARGELEMENT_NOT_SET(0);
    private final int value;
    private VarargElementCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static VarargElementCase valueOf(int value) {
      return forNumber(value);
    }

    public static VarargElementCase forNumber(int value) {
      switch (value) {
        case 1: return EXPRESSION;
        case 2: return SPREAD_ELEMENT;
        case 0: return VARARGELEMENT_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public VarargElementCase
  getVarargElementCase() {
    return VarargElementCase.forNumber(
        varargElementCase_);
  }

  private void clearVarargElement() {
    varargElementCase_ = 0;
    varargElement_ = null;
  }

  public static final int EXPRESSION_FIELD_NUMBER = 1;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression expression = 1;</code>
   */
  @java.lang.Override
  public boolean hasExpression() {
    return varargElementCase_ == 1;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression expression = 1;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression getExpression() {
    if (varargElementCase_ == 1) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression) varargElement_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression expression = 1;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setExpression(org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value) {
    value.getClass();  // minimal bytecode null check
    varargElement_ = value;
    varargElementCase_ = 1;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression expression = 1;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeExpression(org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value) {
    value.getClass();  // minimal bytecode null check
    if (varargElementCase_ == 1 &&
        varargElement_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression.getDefaultInstance()) {
      varargElement_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression) varargElement_)
          .mergeFrom(value).buildPartial();
    } else {
      varargElement_ = value;
    }
    varargElementCase_ = 1;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression expression = 1;</code>
   */
  private void clearExpression() {
    if (varargElementCase_ == 1) {
      varargElementCase_ = 0;
      varargElement_ = null;
    }
  }

  public static final int SPREAD_ELEMENT_FIELD_NUMBER = 2;
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement spread_element = 2;</code>
   */
  @java.lang.Override
  public boolean hasSpreadElement() {
    return varargElementCase_ == 2;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement spread_element = 2;</code>
   */
  @java.lang.Override
  public org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement getSpreadElement() {
    if (varargElementCase_ == 2) {
       return (org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement) varargElement_;
    }
    return org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement.getDefaultInstance();
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement spread_element = 2;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void setSpreadElement(org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement value) {
    value.getClass();  // minimal bytecode null check
    varargElement_ = value;
    varargElementCase_ = 2;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement spread_element = 2;</code>
   */
  @java.lang.SuppressWarnings("ReturnValueIgnored")
  private void mergeSpreadElement(org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement value) {
    value.getClass();  // minimal bytecode null check
    if (varargElementCase_ == 2 &&
        varargElement_ != org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement.getDefaultInstance()) {
      varargElement_ = org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement.newBuilder((org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement) varargElement_)
          .mergeFrom(value).buildPartial();
    } else {
      varargElement_ = value;
    }
    varargElementCase_ = 2;
  }
  /**
   * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement spread_element = 2;</code>
   */
  private void clearSpreadElement() {
    if (varargElementCase_ == 2) {
      varargElementCase_ = 0;
      varargElement_ = null;
    }
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement parseFrom(
      java.nio.ByteBuffer data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement parseFrom(
      java.nio.ByteBuffer data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement parseFrom(
      org.jetbrains.kotlin.protobuf.ByteString data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement parseFrom(byte[] data)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement parseFrom(
      byte[] data,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws org.jetbrains.kotlin.protobuf.InvalidProtocolBufferException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement parseFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement parseDelimitedFrom(
      java.io.InputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement parseFrom(
      org.jetbrains.kotlin.protobuf.CodedInputStream input,
      org.jetbrains.kotlin.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return org.jetbrains.kotlin.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement}
   */
  public static final class Builder extends
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.Builder<
        org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement, Builder> implements
      // @@protoc_insertion_point(builder_implements:org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement)
      org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElementOrBuilder {
    // Construct using org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public VarargElementCase
        getVarargElementCase() {
      return instance.getVarargElementCase();
    }

    public Builder clearVarargElement() {
      copyOnWrite();
      instance.clearVarargElement();
      return this;
    }


    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression expression = 1;</code>
     */
    @java.lang.Override
    public boolean hasExpression() {
      return instance.hasExpression();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression expression = 1;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression getExpression() {
      return instance.getExpression();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression expression = 1;</code>
     */
    public Builder setExpression(org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value) {
      copyOnWrite();
      instance.setExpression(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression expression = 1;</code>
     */
    public Builder setExpression(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression.Builder builderForValue) {
      copyOnWrite();
      instance.setExpression(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression expression = 1;</code>
     */
    public Builder mergeExpression(org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression value) {
      copyOnWrite();
      instance.mergeExpression(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression expression = 1;</code>
     */
    public Builder clearExpression() {
      copyOnWrite();
      instance.clearExpression();
      return this;
    }

    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement spread_element = 2;</code>
     */
    @java.lang.Override
    public boolean hasSpreadElement() {
      return instance.hasSpreadElement();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement spread_element = 2;</code>
     */
    @java.lang.Override
    public org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement getSpreadElement() {
      return instance.getSpreadElement();
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement spread_element = 2;</code>
     */
    public Builder setSpreadElement(org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement value) {
      copyOnWrite();
      instance.setSpreadElement(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement spread_element = 2;</code>
     */
    public Builder setSpreadElement(
        org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement.Builder builderForValue) {
      copyOnWrite();
      instance.setSpreadElement(builderForValue.build());
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement spread_element = 2;</code>
     */
    public Builder mergeSpreadElement(org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement value) {
      copyOnWrite();
      instance.mergeSpreadElement(value);
      return this;
    }
    /**
     * <code>.org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement spread_element = 2;</code>
     */
    public Builder clearSpreadElement() {
      copyOnWrite();
      instance.clearSpreadElement();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement)
  }
  private byte memoizedIsInitialized = 2;
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      org.jetbrains.kotlin.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "varargElement_",
            "varargElementCase_",
            org.jetbrains.kotlin.backend.common.serialization.proto.IrExpression.class,
            org.jetbrains.kotlin.backend.common.serialization.proto.IrSpreadElement.class,
          };
          java.lang.String info =
              "\u0004\u0002\u0001\u0000\u0001\u0002\u0002\u0000\u0000\u0002\u0001\u043c\u0000\u0002" +
              "\u043c\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        org.jetbrains.kotlin.protobuf.Parser<org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement> parser = PARSER;
        if (parser == null) {
          synchronized (org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return memoizedIsInitialized;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement)
  private static final org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement DEFAULT_INSTANCE;
  static {
    IrVarargElement defaultInstance = new IrVarargElement();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    org.jetbrains.kotlin.protobuf.GeneratedMessageLite.registerDefaultInstance(
      IrVarargElement.class, defaultInstance);
  }

  public static org.jetbrains.kotlin.backend.common.serialization.proto.IrVarargElement getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile org.jetbrains.kotlin.protobuf.Parser<IrVarargElement> PARSER;

  public static org.jetbrains.kotlin.protobuf.Parser<IrVarargElement> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}
