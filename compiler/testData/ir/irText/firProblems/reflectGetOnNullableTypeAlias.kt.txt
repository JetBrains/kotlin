class Foo {
  val bar: String
    field = "OK"
    get

  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

}

fun box(): String {
  val backRefProp: KProperty1<Foo, Any?>? = Foo::bar
  when {
    EQEQ(arg0 = backRefProp, arg1 = null).not() -> { // BLOCK
      return backRefProp.get(receiver = Foo()) as String
    }
  }
  return "FAIL"
}

private typealias PropAlias<T : Any?> = KProperty1<T, Any?>?
