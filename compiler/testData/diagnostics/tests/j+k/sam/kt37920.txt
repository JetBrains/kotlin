package

public fun getCollection(): kotlin.collections.Collection<kotlin.Int>
public fun main(): kotlin.Unit

public open class A {
    public constructor A()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    // Static members
    public open fun </*0*/ T : kotlin.Any!, /*1*/ E : kotlin.Throwable!> compute(/*0*/ action: ThrowableComputable<T!, E!>!): T!
}

public interface ThrowableComputable</*0*/ T : kotlin.Any!, /*1*/ E : kotlin.Throwable!> {
    public abstract fun compute(): T!
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
