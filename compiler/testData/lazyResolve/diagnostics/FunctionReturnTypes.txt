namespace <root>

internal final class A : jet.Any {
    public final /*constructor*/ fun <init>(): A
}
internal final class B : jet.Any {
    public final /*constructor*/ fun <init>(): B
    protected final fun f(): jet.String
}
internal final val a: jet.Nothing
internal final fun bbb(): jet.Tuple0
internal final fun blockAndAndMismatch(): jet.Int
internal final fun blockAndAndMismatch1(): jet.Int
internal final fun blockAndAndMismatch2(): jet.Int
internal final fun blockAndAndMismatch3(): jet.Int
internal final fun blockAndAndMismatch4(): jet.Int
internal final fun blockAndAndMismatch5(): jet.Int
internal final fun blockNoReturnIfEmptyIf(): jet.Int
internal final fun blockNoReturnIfUnitInOneBranch(): jet.Int
internal final fun blockNoReturnIfValDeclaration(): jet.Int
internal final fun blockReturnUnitMismatch(): jet.Int
internal final fun blockReturnValueTypeMatch(): jet.Int
internal final fun blockReturnValueTypeMatch1(): jet.Int
internal final fun blockReturnValueTypeMatch10(): jet.Int
internal final fun blockReturnValueTypeMatch11(): jet.Int
internal final fun blockReturnValueTypeMatch12(): jet.Int
internal final fun blockReturnValueTypeMatch2(): jet.Int
internal final fun blockReturnValueTypeMatch3(): jet.Int
internal final fun blockReturnValueTypeMatch4(): jet.Int
internal final fun blockReturnValueTypeMatch5(): jet.Int
internal final fun blockReturnValueTypeMatch6(): jet.Int
internal final fun blockReturnValueTypeMatch7(): jet.Int
internal final fun blockReturnValueTypeMatch8(): jet.Int
internal final fun blockReturnValueTypeMatch9(): jet.Int
internal final fun blockReturnValueTypeMismatch(): jet.Int
internal final fun blockReturnValueTypeMismatchUnit(): jet.Int
internal final fun f(): jet.Int
internal final fun f1(): jet.Int
public final fun f2(): jet.Int
internal final fun foo(/*0*/ expr: java.lang.StringBuilder): jet.Int
internal final fun illegalConstantBlock(): jet.String
internal final fun illegalConstantBody(): jet.Int
internal final fun illegalIfBlock(): jet.Boolean
internal final fun illegalIfBody(): jet.Int
internal final fun illegalReturnIf(): jet.Char
internal final fun intBlock(): jet.Int
internal final fun intBlock1(): jet.Int
internal final fun intEmpty(): jet.Int
internal final fun intFunctionLiteral(): jet.Int
internal final fun intShort(): jet.Int
internal final fun intShortInfer(): jet.Int
internal final fun intString(): jet.Int
internal final fun nonBlockNoReturnIfUnitInOneBranch(): jet.Int
internal final fun nonBlockReturnIfEmptyIf(): jet.Int
internal final fun none(): jet.Tuple0
internal final fun returnNothing(): jet.Nothing
internal final fun test1(): jet.Any
internal final fun test2(): jet.Any
internal final fun test3(): jet.Any
internal final fun test4(): jet.Function0<jet.Tuple0>
internal final fun test5(): jet.Any
internal final fun test6(): jet.Any
internal final fun testFunctionLiterals(): jet.Tuple0
internal final fun unitEmpty(): jet.Tuple0
internal final fun unitEmptyInfer(): jet.Tuple0
internal final fun unitEmptyReturn(): jet.Tuple0
internal final fun unitIntReturn(): jet.Tuple0
internal final fun unitShort(): jet.Tuple0
internal final fun unitShortConv(): jet.Tuple0
internal final fun unitShortNull(): jet.Tuple0
internal final fun unitUnitReturn(): jet.Tuple0
