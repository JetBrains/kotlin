namespace <root>

// <namespace name="MyNamespace">
namespace MyNamespace

internal final val a: jet.Int
internal final val a1: jet.Int
internal abstract val a2: jet.Int
internal abstract val a3: jet.Int
internal final var b: jet.Int private set
internal final var b1: jet.Int private set
internal abstract var b2: jet.Int private set
internal abstract var b3: jet.Int private set
internal final var c: jet.Int
internal final var c1: jet.Int
internal abstract var c2: jet.Int
internal abstract var c3: jet.Int
internal final val e: jet.Int
internal final val e1: jet.Int
internal abstract val e2: jet.Int
internal abstract val e3: jet.Int
internal final var i: jet.Int
internal final var i1: jet.Int
internal final var j: jet.Int
internal final var j1: jet.Int
internal final var k: jet.Int
internal final var k1: jet.Int
internal final var l: jet.Int
internal final var l1: jet.Int
internal final var n: jet.Int
internal final fun f(): jet.Tuple0
internal final fun g(): jet.Tuple0
internal abstract fun h(): jet.Tuple0
internal abstract fun j(): jet.Tuple0
// </namespace name="MyNamespace">
internal abstract class B1 : jet.Any {
    public final /*constructor*/ fun <init>(/*0*/ i: jet.Int, /*1*/ s: jet.String): B1
    internal final val i: jet.Int
    internal final val s: jet.String
}
internal final class B2 : B1 {
    public final /*constructor*/ fun <init>(): B2
    internal final override /*1*/ val i: jet.Int
    internal final override /*1*/ val s: jet.String
}
internal abstract class B3 : jet.Any {
    public final /*constructor*/ fun <init>(/*0*/ i: jet.Int): B3
}
internal final fun foo(/*0*/ c: B3): jet.Tuple0
