package

public fun </*0*/ T> lazy(/*0*/ f: () -> T): Lazy<T>

public final class A {
    public constructor A()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    private final inner class B {
        public constructor B()
        public final val o1: I1
        public final val o2: I1
        public final val o3: A.B.o3.`<no name provided>`
        public final val o4: A.B.o4.`<anonymous>`.`<no name provided>`
        private final val privateO1: A.B.privateO1.`<no name provided>`
        private final val privateO2: A.B.privateO2.`<anonymous>`.`<no name provided>`
        private final val privateO3: A.B.privateO3.`<no name provided>`
        private final val privateO4: A.B.privateO4.`<anonymous>`.`<no name provided>`
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}

public interface I1 {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public interface I2 {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public interface Lazy</*0*/ T> {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public abstract operator fun getValue(/*0*/ a1: kotlin.Any, /*1*/ a2: kotlin.Any): T
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
