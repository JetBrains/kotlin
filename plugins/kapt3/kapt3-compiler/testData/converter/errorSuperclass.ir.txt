package test;

@java.lang.annotation.Retention(value = java.lang.annotation.RetentionPolicy.RUNTIME)
/**
 * internal final annotation class test/Anno : kotlin/Annotation {
 *
 *   // signature: <init>()V
 *   public constructor()
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
public abstract @interface Anno {
}

////////////////////

package test;

@Anno()
/**
 * internal final class test/ClassWithParent : kotlin/CharSequence {
 *
 *   // signature: <init>()V
 *   public constructor()
 *
 *   // module name: main
 * }
 */
@kotlin.Metadata()
@kotlin.Suppress(names = {"UNRESOLVED_REFERENCE"})
public final class ClassWithParent implements java.lang.CharSequence {

    public ClassWithParent() {
        super();
    }

    @java.lang.Override()
    public abstract char get(int index);

    @java.lang.Override()
    public abstract int getLength();

    @java.lang.Override()
    public final char charAt(int index) {
        return '\u0000';
    }

    @java.lang.Override()
    public final int length() {
        return 0;
    }
}
