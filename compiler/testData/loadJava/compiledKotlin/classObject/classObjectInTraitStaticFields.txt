package test

public interface Test {

    public companion object Companion {
        /*primary*/ private constructor Companion()
        public const final val constProp8: kotlin.Int = 80
            public final fun <get-constProp8>(): kotlin.Int
        public final val prop1: kotlin.Int
            public final fun <get-prop1>(): kotlin.Int
        public final var prop2: kotlin.Int
            public final fun <get-prop2>(): kotlin.Int
            protected final fun <set-prop2>(/*0*/ <set-?>: kotlin.Int): kotlin.Unit
        public final val prop3: kotlin.Int
            public final fun <get-prop3>(): kotlin.Int
        public final var prop4: kotlin.Int
            public final fun <get-prop4>(): kotlin.Int
            public final fun <set-prop4>(/*0*/ <set-?>: kotlin.Int): kotlin.Unit
        public final var prop5: kotlin.Int
            public final fun <get-prop5>(): kotlin.Int
            public final fun <set-prop5>(/*0*/ <set-?>: kotlin.Int): kotlin.Unit
        public final var prop7: kotlin.Int
            public final fun <get-prop7>(): kotlin.Int
            public final fun <set-prop7>(/*0*/ i: kotlin.Int): kotlin.Unit
        public final fun incProp4(): kotlin.Unit
    }
}
