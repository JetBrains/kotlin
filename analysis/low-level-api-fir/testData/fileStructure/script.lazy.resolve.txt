FILE: [ResolvedTo(BODY_RESOLVE)] script.kts
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] <script-script.kts>
        [ResolvedTo(BODY_RESOLVE)] <script receiver parameter>: R|kotlin/script/templates/standard/ScriptTemplateWithArgs|
        [ResolvedTo(BODY_RESOLVE)] lval args: R|kotlin/Array<kotlin/String>|

        public final [ResolvedTo(BODY_RESOLVE)] class Builder : R|kotlin/Any| {
            public [ResolvedTo(BODY_RESOLVE)] constructor(): R|Builder| {
                super<R|kotlin/Any|>()
            }

            public final [ResolvedTo(BODY_RESOLVE)] var version: R|kotlin/String| = String()
                public [ResolvedTo(BODY_RESOLVE)] get(): R|kotlin/String|
                public [ResolvedTo(BODY_RESOLVE)] set([ResolvedTo(BODY_RESOLVE)] value: R|kotlin/String|): R|kotlin/Unit|

            public final [ResolvedTo(BODY_RESOLVE)] fun execute(): R|kotlin/Unit| {
                <Unresolved name: println>#(this@R|/Builder|.R|/Builder.version|)
            }

        }

        public final [ResolvedTo(BODY_RESOLVE)] fun build([ResolvedTo(BODY_RESOLVE)] action: R|Builder.() -> kotlin/Unit|): R|Builder| {
            ^build R|/Builder.Builder|().R|kotlin/apply|<R|Builder|>(R|<local>/action|)
        }

        public final [ResolvedTo(BODY_RESOLVE)] fun build2([ResolvedTo(BODY_RESOLVE)] action: R|Builder.() -> kotlin/Unit|): R|Builder| {
            ^build2 R|/Builder.Builder|().R|kotlin/apply|<R|Builder|>(R|<local>/action|)
        }

        [ResolvedTo(BODY_RESOLVE)] init {
            R|/build|(<L> = [ResolvedTo(BODY_RESOLVE)] build@fun [ResolvedTo(BODY_RESOLVE)] R|Builder|.<anonymous>(): R|kotlin/Unit| <inline=NoInline>  {
                this@R|special/anonymous|.R|/Builder.version| = String(123)
                local final [ResolvedTo(BODY_RESOLVE)] class A : R|kotlin/Any| {
                    public [ResolvedTo(BODY_RESOLVE)] constructor(): R|<local>/A| {
                        super<R|kotlin/Any|>()
                    }

                    public final [ResolvedTo(BODY_RESOLVE)] fun doo(): R|kotlin/Unit| {
                    }

                }

                this@R|special/anonymous|.R|/Builder.execute|()
            }
            )
        }

        public final [ResolvedTo(BODY_RESOLVE)] val builder: R|Builder| = R|/build|(<L> = [ResolvedTo(BODY_RESOLVE)] build@fun [ResolvedTo(BODY_RESOLVE)] R|Builder|.<anonymous>(): R|kotlin/Unit| <inline=NoInline>  {
            this@R|special/anonymous|.R|/Builder.version| = String(321)
        }
        )
            public [ResolvedTo(BODY_RESOLVE)] get(): R|Builder|

        public final [ResolvedTo(BODY_RESOLVE)] val $$result: R|kotlin/Unit| = R|/builder|.R|/Builder.execute|()
            public [ResolvedTo(BODY_RESOLVE)] get(): R|kotlin/Unit|

