//
// Source
// ------------------------------------------

import androidx.compose.runtime.*

@Composable
private fun Test(param: String?) {
    Dialog {
        if (false) Test(param)
    }
}

//
// Transformed IR
// ------------------------------------------

@Composable
private fun Test(param: String?, %composer: Composer?, %changed: Int) {
  %composer = %composer.startRestartGroup(<>)
  sourceInformation(%composer, "C(Test)<Dialog>:Test.kt")
  val %dirty = %changed
  if (%changed and 0b0110 == 0) {
    %dirty = %dirty or if (%composer.changed(param)) 0b0100 else 0b0010
  }
  if (%dirty and 0b0011 != 0b0010 || !%composer.skipping) {
    if (isTraceInProgress()) {
      traceEventStart(<>, %dirty, -1, <>)
    }
    Dialog({ %composer: Composer?, %changed: Int ->
      %composer.startReplaceGroup(<>)
      sourceInformation(%composer, "C:Test.kt")
      %composer.startReplaceGroup(<>)
      sourceInformation(%composer, "<Test(p...>")
      if (false) {
        Test(param, %composer, 0b1110 and %dirty)
      }
      %composer.endReplaceGroup()
      %composer.endReplaceGroup()
    }, %composer, 0)
    if (isTraceInProgress()) {
      traceEventEnd()
    }
  } else {
    %composer.skipToGroupEnd()
  }
  %composer.endRestartGroup()?.updateScope { %composer: Composer?, %force: Int ->
    Test(param, %composer, updateChangedFlags(%changed or 0b0001))
  }
}
