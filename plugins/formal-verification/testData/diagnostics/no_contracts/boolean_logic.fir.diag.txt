/boolean_logic.kt:(23,31): info: Generated Viper text for negation:
method global$fun_negation$fun_take$T_Boolean$return$T_Boolean(local$x: Ref)
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$boolType())
{
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$x), dom$RuntimeType$boolType())
  ret$0 := special$notBool(local$x)
  goto label$ret$0
  label label$ret$0
}

/boolean_logic.kt:(75,86): info: Generated Viper text for conjunction:
method global$fun_conjunction$fun_take$T_Boolean$T_Boolean$return$T_Boolean(local$x: Ref,
  local$y: Ref)
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$boolType())
{
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$x), dom$RuntimeType$boolType())
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$y), dom$RuntimeType$boolType())
  if (dom$RuntimeType$boolFromRef(local$x)) {
    ret$0 := local$y
  } else {
    ret$0 := dom$RuntimeType$boolToRef(false)}
  goto label$ret$0
  label label$ret$0
}

/boolean_logic.kt:(146,170): info: Generated Viper text for conjunction_side_effects:
method global$fun_conjunction_side_effects$fun_take$T_Boolean$T_Boolean$return$T_Boolean(local$x: Ref,
  local$y: Ref)
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$boolType())
{
  var anonymous$0: Ref
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$x), dom$RuntimeType$boolType())
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$y), dom$RuntimeType$boolType())
  anonymous$0 := global$fun_negation$fun_take$T_Boolean$return$T_Boolean(local$x)
  if (dom$RuntimeType$boolFromRef(anonymous$0)) {
    ret$0 := global$fun_negation$fun_take$T_Boolean$return$T_Boolean(local$y)
  } else {
    ret$0 := dom$RuntimeType$boolToRef(false)}
  goto label$ret$0
  label label$ret$0
}

method global$fun_negation$fun_take$T_Boolean$return$T_Boolean(local$x: Ref)
  returns (ret: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$boolType())


/boolean_logic.kt:(343,354): info: Generated Viper text for disjunction:
method global$fun_disjunction$fun_take$T_Boolean$T_Boolean$return$T_Boolean(local$x: Ref,
  local$y: Ref)
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$boolType())
{
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$x), dom$RuntimeType$boolType())
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$y), dom$RuntimeType$boolType())
  if (dom$RuntimeType$boolFromRef(local$x)) {
    ret$0 := dom$RuntimeType$boolToRef(true)
  } else {
    ret$0 := local$y}
  goto label$ret$0
  label label$ret$0
}
