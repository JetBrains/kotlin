//
// Source
// ------------------------------------------

import androidx.compose.runtime.Composable
import androidx.compose.runtime.ReadOnlyComposable
import androidx.compose.runtime.key
import androidx.compose.runtime.NonRestartableComposable


@NonRestartableComposable @Composable
fun Example() {
    // The for loop's subject expression is only executed once, so we don't need any
    // additional groups
    for (i in L()) {
        print(i)
    }
}

//
// Transformed IR
// ------------------------------------------

@NonRestartableComposable
@Composable
fun Example(%composer: Composer?, %changed: Int) {
  sourceInformationMarkerStart(%composer, <>, "C(Example)<L()>:Test.kt")
  if (isTraceInProgress()) {
    traceEventStart(<>, %changed, -1, <>)
  }
  val <iterator> = L(%composer, 0).iterator()
  while (<iterator>.hasNext()) {
    val i = <iterator>.next()
    print(i)
  }
  if (isTraceInProgress()) {
    traceEventEnd()
  }
  sourceInformationMarkerEnd(%composer)
}
