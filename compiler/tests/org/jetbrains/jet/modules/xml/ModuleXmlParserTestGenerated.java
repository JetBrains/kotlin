/*
 * Copyright 2010-2013 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jetbrains.jet.modules.xml;

import junit.framework.Assert;
import junit.framework.Test;
import junit.framework.TestSuite;

import java.io.File;
import java.util.regex.Pattern;
import org.jetbrains.jet.JetTestUtils;
import org.jetbrains.jet.test.InnerTestClasses;
import org.jetbrains.jet.test.TestMetadata;

import org.jetbrains.jet.modules.xml.AbstractModuleXmlParserTest;

/** This class is generated by {@link org.jetbrains.jet.generators.tests.GenerateTests}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("compiler/testData/modules.xml")
public class ModuleXmlParserTestGenerated extends AbstractModuleXmlParserTest {
    public void testAllFilesPresentInModules_xml() throws Exception {
        JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("compiler/testData/modules.xml"), Pattern.compile("^(.+)\\.xml$"), true);
    }
    
    @TestMetadata("allOnce.xml")
    public void testAllOnce() throws Exception {
        doTest("compiler/testData/modules.xml/allOnce.xml");
    }
    
    @TestMetadata("comments.xml")
    public void testComments() throws Exception {
        doTest("compiler/testData/modules.xml/comments.xml");
    }
    
    @TestMetadata("empty.xml")
    public void testEmpty() throws Exception {
        doTest("compiler/testData/modules.xml/empty.xml");
    }
    
    @TestMetadata("emptyModule.xml")
    public void testEmptyModule() throws Exception {
        doTest("compiler/testData/modules.xml/emptyModule.xml");
    }
    
    @TestMetadata("manyTimes.xml")
    public void testManyTimes() throws Exception {
        doTest("compiler/testData/modules.xml/manyTimes.xml");
    }
    
    @TestMetadata("onlySources.xml")
    public void testOnlySources() throws Exception {
        doTest("compiler/testData/modules.xml/onlySources.xml");
    }
    
    @TestMetadata("twoModules.xml")
    public void testTwoModules() throws Exception {
        doTest("compiler/testData/modules.xml/twoModules.xml");
    }
    
}
