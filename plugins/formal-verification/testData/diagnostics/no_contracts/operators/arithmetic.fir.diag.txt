/arithmetic.kt:(23,31): info: Generated Viper text for addition:
method f$addition$TF$T$Int(p$x: Ref) returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$unitType())
{
  var l0$y: Ref
  inhale df$rt$isSubtype(df$rt$typeOf(p$x), df$rt$intType())
  ret$0 := df$rt$unitValue()
  l0$y := sp$plusInts(p$x, p$x)
  label lbl$ret$0
}

/arithmetic.kt:(66,77): info: Generated Viper text for subtraction:
method f$subtraction$TF$T$Int(p$x: Ref) returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$unitType())
{
  var l0$y: Ref
  inhale df$rt$isSubtype(df$rt$typeOf(p$x), df$rt$intType())
  ret$0 := df$rt$unitValue()
  l0$y := sp$minusInts(p$x, p$x)
  label lbl$ret$0
}

/arithmetic.kt:(112,126): info: Generated Viper text for multiplication:
method f$multiplication$TF$T$Int(p$x: Ref) returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$unitType())
{
  var l0$y: Ref
  inhale df$rt$isSubtype(df$rt$typeOf(p$x), df$rt$intType())
  ret$0 := df$rt$unitValue()
  l0$y := sp$timesInts(p$x, p$x)
  label lbl$ret$0
}

/arithmetic.kt:(161,169): info: Generated Viper text for division:
method f$division$TF$T$Int(p$x: Ref) returns (ret$0: Ref)
  ensures df$rt$isSubtype(df$rt$typeOf(ret$0), df$rt$unitType())
{
  var l0$y: Ref
  inhale df$rt$isSubtype(df$rt$typeOf(p$x), df$rt$intType())
  ret$0 := df$rt$unitValue()
  inhale df$rt$intFromRef(p$x) != 0
  l0$y := sp$divInts(p$x, p$x)
  label lbl$ret$0
}
