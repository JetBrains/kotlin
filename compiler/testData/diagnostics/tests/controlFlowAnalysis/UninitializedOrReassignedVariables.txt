package

package uninitialized_reassigned_variables {
    public var x: kotlin.Int
    public val y: kotlin.Int = 10
    public val z: kotlin.Int = 10
    public fun doSmth(/*0*/ i: kotlin.Int): kotlin.Unit
    public fun doSmth(/*0*/ s: kotlin.String): kotlin.Unit
    public fun foo(): kotlin.Unit
    public fun func(): kotlin.Unit
    public fun reassignFunParams(/*0*/ a: kotlin.Int): kotlin.Unit
    public fun t1(): kotlin.Unit
    public fun t1(/*0*/ b: kotlin.Boolean): kotlin.Unit
    public fun t2(): kotlin.Unit
    public fun t3(): kotlin.Unit
    public fun t4(): kotlin.Unit
    public fun t4(/*0*/ a: uninitialized_reassigned_variables.A): kotlin.Unit
    public fun t5(): kotlin.Unit
    public fun test(/*0*/ m: uninitialized_reassigned_variables.M): kotlin.Unit
    public fun test1(/*0*/ m: uninitialized_reassigned_variables.M): kotlin.Unit

    public final class A {
        public constructor A()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final class AnonymousInitializers {
        public constructor AnonymousInitializers(/*0*/ a: kotlin.String, /*1*/ b: kotlin.String)
        public final var a: kotlin.String
        public final val b: kotlin.String
        public final val i: kotlin.Int
        public final val j: kotlin.Int
        public final val k: kotlin.String
        public final val l: kotlin.String
        public final var m: kotlin.Int
        public final val n: kotlin.Int
        public final val o: kotlin.String
        public final var p: kotlin.Int
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final class ClassObject {
        public constructor ClassObject()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

        public companion object Companion {
            private constructor Companion()
            public final val x: kotlin.Int
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public final fun foo(): kotlin.Unit
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }
    }

    public final class ForwardAccessToBackingField {
        public constructor ForwardAccessToBackingField()
        public final val a: [ERROR : Type for a]
        public final val b: kotlin.Int = 1
        public final val c: kotlin.Int = 1
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final class LocalValsVsProperties : uninitialized_reassigned_variables.Open {
        public constructor LocalValsVsProperties(/*0*/ a: kotlin.Int, /*1*/ w: kotlin.Int)
        public final val a: kotlin.Int
        public final val b: kotlin.Int
        public final val x: kotlin.Int
        public final var xx: kotlin.Int
        public final val y: kotlin.Int
        public final var yy: kotlin.Int
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public final fun foo(): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final class M {
        public constructor M()
        public final val x: kotlin.Int = 11
        public final var y: kotlin.Int
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public open class Open {
        public constructor Open(/*0*/ a: kotlin.Int, /*1*/ w: kotlin.Int)
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final class Outer {
        public constructor Outer()
        public final val a: kotlin.Int
        public final var b: kotlin.Int
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public final fun foo(): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

        public final inner class Inner {
            public constructor Inner()
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }
    }

    public final enum class ProtocolState : kotlin.Enum<uninitialized_reassigned_variables.ProtocolState> {
        enum entry WAITING

        enum entry TALKING

        private constructor ProtocolState()
        public final override /*1*/ /*fake_override*/ val name: kotlin.String
        public final override /*1*/ /*fake_override*/ val ordinal: kotlin.Int
        protected final override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
        public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: uninitialized_reassigned_variables.ProtocolState): kotlin.Int
        public final override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        protected/*protected and package*/ final override /*1*/ /*fake_override*/ /*isHiddenForResolutionEverywhereBesideSupercalls*/ fun finalize(): kotlin.Unit
        public final override /*1*/ /*fake_override*/ /*isHiddenForResolutionEverywhereBesideSupercalls*/ fun getDeclaringClass(): java.lang.Class<uninitialized_reassigned_variables.ProtocolState!>!
        public final override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public abstract fun signal(): uninitialized_reassigned_variables.ProtocolState
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

        // Static members
        public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): uninitialized_reassigned_variables.ProtocolState
        public final /*synthesized*/ fun values(): kotlin.Array<uninitialized_reassigned_variables.ProtocolState>
    }

    public object TestObjectDeclaration {
        private constructor TestObjectDeclaration()
        public final val x: kotlin.Int
        public final val y: kotlin.Int
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public final fun foo(): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final class TestObjectExpression {
        public constructor TestObjectExpression()
        public final val a: kotlin.Int
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public final fun foo(): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}
