KtFile: 'sealedWithNonSealedSubclass.kt'
  null

KtPackageDirective(0,0): ''
  null

KtImportList(0,0): ''
  null

KtClass(78,231): 'sealed interface MySealed {'
  null

KtDeclarationModifierList(78,84): 'sealed'
  null

KtClassBody(104,231): '{'
  null

KtClass(110,145): 'class Left(val x: String): MySealed'
  null

KtPrimaryConstructor(120,135): '(val x: String)'
  null

KtParameterList(120,135): '(val x: String)'
  null

KtParameter(121,134): 'val x: String'
  null

KtTypeReference(128,134): 'String'
  null

KtUserType(128,134): 'String'
  null

KtNameReferenceExpression(128,134): 'String'
  null

KtSuperTypeList(137,145): 'MySealed'
  null

KtSuperTypeEntry(137,145): 'MySealed'
  null

KtTypeReference(137,145): 'MySealed'
  null

KtUserType(137,145): 'MySealed'
  null

KtNameReferenceExpression(137,145): 'MySealed'
  null

KtClass(150,186): 'class Right(val y: String): MySealed'
  null

KtPrimaryConstructor(161,176): '(val y: String)'
  null

KtParameterList(161,176): '(val y: String)'
  null

KtParameter(162,175): 'val y: String'
  null

KtTypeReference(169,175): 'String'
  null

KtUserType(169,175): 'String'
  null

KtNameReferenceExpression(169,175): 'String'
  null

KtSuperTypeList(178,186): 'MySealed'
  null

KtSuperTypeEntry(178,186): 'MySealed'
  null

KtTypeReference(178,186): 'MySealed'
  null

KtUserType(178,186): 'MySealed'
  null

KtNameReferenceExpression(178,186): 'MySealed'
  null

KtClass(191,229): 'class NonSealedSubclass(val z: String)'
  null

KtPrimaryConstructor(214,229): '(val z: String)'
  null

KtParameterList(214,229): '(val z: String)'
  null

KtParameter(215,228): 'val z: String'
  null

KtTypeReference(222,228): 'String'
  null

KtUserType(222,228): 'String'
  null

KtNameReferenceExpression(222,228): 'String'
  null

KtNamedFunction(233,340): 'fun MySealed.getOrElse() = when (this) {'
  null

KtTypeReference(237,245): 'MySealed'
  null

KtUserType(237,245): 'MySealed'
  null

KtNameReferenceExpression(237,245): 'MySealed'
  null

KtParameterList(255,257): '()'
  null

KtWhenExpression(260,340): 'when (this) {'
  null

KtThisExpression(266,270): 'this'
  null

KtNameReferenceExpression(266,270): 'this'
  null

KtWhenEntry(278,290): 'is Left -> x'
  null

KtWhenConditionIsPattern(278,285): 'is Left'
  null

KtTypeReference(281,285): 'Left'
  null

KtUserType(281,285): 'Left'
  null

KtNameReferenceExpression(281,285): 'Left'
  null

KtNameReferenceExpression(289,290): 'x'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaSmartCastedReceiverValue:
          original = KaImplicitReceiverValue:
            symbol = KaReceiverParameterSymbol:
              annotations: []
              callableId: null
              compilerVisibility: Public
              contextReceivers: []
              isActual: false
              isExpect: false
              isExtension: false
              isVal: true
              location: LOCAL
              modality: FINAL
              name: <receiver>
              origin: SOURCE
              owningCallableSymbol: KaNamedFunctionSymbol(/getOrElse)
              receiverParameter: null
              returnType: KaUsualClassType:
                annotations: []
                typeArguments: []
                type: MySealed
              visibility: PUBLIC
            type = MySealed
          type = MySealed.Left
        extensionReceiver = null
        signature = KaVariableSignature:
          name = x
          receiverType = null
          returnType = kotlin.String
          symbol = val x: kotlin.String
          contextParameters = []
          callableId = /MySealed.Left.x
      simpleAccess = Read
      typeArgumentsMapping = {}

KtWhenEntry(295,308): 'is Right -> y'
  null

KtWhenConditionIsPattern(295,303): 'is Right'
  null

KtTypeReference(298,303): 'Right'
  null

KtUserType(298,303): 'Right'
  null

KtNameReferenceExpression(298,303): 'Right'
  null

KtNameReferenceExpression(307,308): 'y'
  KaSuccessCallInfo:
    call = KaSimpleVariableAccessCall:
      isContextSensitive = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = KaSmartCastedReceiverValue:
          original = KaImplicitReceiverValue:
            symbol = KaReceiverParameterSymbol:
              annotations: []
              callableId: null
              compilerVisibility: Public
              contextReceivers: []
              isActual: false
              isExpect: false
              isExtension: false
              isVal: true
              location: LOCAL
              modality: FINAL
              name: <receiver>
              origin: SOURCE
              owningCallableSymbol: KaNamedFunctionSymbol(/getOrElse)
              receiverParameter: null
              returnType: KaUsualClassType:
                annotations: []
                typeArguments: []
                type: MySealed
              visibility: PUBLIC
            type = MySealed
          type = MySealed.Right
        extensionReceiver = null
        signature = KaVariableSignature:
          name = y
          receiverType = null
          returnType = kotlin.String
          symbol = val y: kotlin.String
          contextParameters = []
          callableId = /MySealed.Right.y
      simpleAccess = Read
      typeArgumentsMapping = {}

KtWhenEntry(313,338): 'is NonSealedSubclass -> z'
  null

KtWhenConditionIsPattern(313,333): 'is NonSealedSubclass'
  null

KtTypeReference(316,333): 'NonSealedSubclass'
  null

KtUserType(316,333): 'NonSealedSubclass'
  null

KtNameReferenceExpression(316,333): 'NonSealedSubclass'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference 'NonSealedSubclass'.>

KtNameReferenceExpression(337,338): 'z'
  KaErrorCallInfo:
    candidateCalls = []
    diagnostic = ERROR<UNRESOLVED_REFERENCE: Unresolved reference 'z'.>