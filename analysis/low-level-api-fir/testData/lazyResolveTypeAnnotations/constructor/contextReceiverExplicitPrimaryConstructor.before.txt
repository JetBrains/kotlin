@R|Anno|(LAZY_EXPRESSION)  kotlin/Int
  context -> FirValueParameterSymbol <local>/List from FirConstructorSymbol /Foo.Foo
  anchor -> [FirValueParameterSymbol <local>/List from FirConstructorSymbol /Foo.Foo]

FILE: [ResolvedTo(IMPORTS)] contextReceiverExplicitPrimaryConstructor.kt
    @R|kotlin/annotation/Target|[CompilerRequiredAnnotations](Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.TYPE|) public final? [ResolvedTo(COMPILER_REQUIRED_ANNOTATIONS)] annotation class Anno : R|kotlin/Annotation| {
        public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] constructor([ResolvedTo(RAW_FIR)] [CorrespondingProperty=/Anno.position] position: String): R|Anno| {
            LAZY_super<R|kotlin/Any|>
        }

        public? final? [ResolvedTo(RAW_FIR)] [IsFromPrimaryConstructor=true] val position: String = R|<local>/position|
            public? [ResolvedTo(RAW_FIR)] [ContainingClassKey=Anno] get(): String

    }
    public? final? const [ResolvedTo(RAW_FIR)] val prop: <implicit> = LAZY_EXPRESSION
        public? [ResolvedTo(RAW_FIR)] get(): <implicit>
    context([ResolvedTo(TYPES)] R|kotlin/collections/List<@R|Anno|(LAZY_EXPRESSION)  kotlin/Int>|)
    public final? [ResolvedTo(TYPES)] class Foo : R|kotlin/Any| {
        public? [ResolvedTo(TYPES)] [ContainingClassKey=Foo] constructor(): R|Foo| {
            LAZY_super<R|kotlin/Any|>
        }

    }
