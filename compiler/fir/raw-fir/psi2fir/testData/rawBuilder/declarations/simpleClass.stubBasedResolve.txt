FILE: [ResolvedTo(BODY_RESOLVE)] simpleClass.kt
    public abstract [ResolvedTo(BODY_RESOLVE)] interface SomeInterface : R|kotlin/Any| {
        public abstract [ResolvedTo(BODY_RESOLVE)] fun foo([ResolvedTo(BODY_RESOLVE)] x: R|kotlin/Int|, [ResolvedTo(BODY_RESOLVE)] y: R|kotlin/String|): R|kotlin/String|

        public abstract [ResolvedTo(BODY_RESOLVE)] val bar: R|kotlin/Boolean|
            public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=SomeInterface] get(): R|kotlin/Boolean|

    }
    public final [ResolvedTo(ANNOTATION_ARGUMENTS)] class SomeClass : R|SomeInterface| {
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=SomeClass] constructor(): R|SomeClass| {
            super<R|kotlin/Any|>()
        }

        private final [ResolvedTo(CONTRACTS)] val baz: <implicit> = LAZY_EXPRESSION
            private [ResolvedTo(CONTRACTS)] [ContainingClassKey=SomeClass] get(): <implicit>

        public open override [ResolvedTo(ANNOTATION_ARGUMENTS)] fun foo([ResolvedTo(ANNOTATION_ARGUMENTS)] x: R|kotlin/Int|, [ResolvedTo(ANNOTATION_ARGUMENTS)] y: R|kotlin/String|): R|kotlin/String| { LAZY_BLOCK }

        public open override [ResolvedTo(ANNOTATION_ARGUMENTS)] var bar: R|kotlin/Boolean|
            public [ResolvedTo(ANNOTATION_ARGUMENTS)] [ContainingClassKey=SomeClass] get(): R|kotlin/Boolean| { LAZY_BLOCK }
            public [ResolvedTo(ANNOTATION_ARGUMENTS)] [ContainingClassKey=SomeClass] set([ResolvedTo(ANNOTATION_ARGUMENTS)] value: R|kotlin/Boolean|): R|kotlin/Unit| { LAZY_BLOCK }

        public final lateinit [ResolvedTo(BODY_RESOLVE)] var fau: R|kotlin/Double|
            public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=SomeClass] get(): R|kotlin/Double|
            public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=SomeClass] set([ResolvedTo(BODY_RESOLVE)] value: R|kotlin/Double|): R|kotlin/Unit|

    }
    public final inline [ResolvedTo(BODY_RESOLVE)] class InlineClass : R|kotlin/Any| {
        public [ResolvedTo(BODY_RESOLVE)] [ContainingClassKey=InlineClass] constructor(): R|InlineClass| {
            super<R|kotlin/Any|>()
        }

    }