== foo ==
fun foo() {
    return ?: null
}
---------------------
L0:
  1 <START>
  2 mark({ return ?: null })
    ret L1                                       NEXT:[<END>]
-   mark(return ?: null)                         PREV:[]
-   jt(L2)                                       NEXT:[r(null) -> <v0>, merge(return ?: null|!<v1>, <v0>) -> <v2>]    PREV:[]
-   r(null) -> <v0>                              PREV:[]
L2 [after elvis operator]:
-   merge(return ?: null|!<v1>, <v0>) -> <v2>    PREV:[]
L1:
  1 <END>                                        NEXT:[<SINK>]                                                        PREV:[ret L1]
error:
-   <ERROR>                                      PREV:[]
sink:
    <SINK>                                       PREV:[<END>]
=====================
