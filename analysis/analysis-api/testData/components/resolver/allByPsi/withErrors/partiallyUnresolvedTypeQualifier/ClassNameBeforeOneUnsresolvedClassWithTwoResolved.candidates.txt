KtFile: 'ClassNameBeforeOneUnsresolvedClassWithTwoResolved.kt'
  NO_CANDIDATES

KtPackageDirective(0,0): ''
  NO_CANDIDATES

KtImportList(0,0): ''
  NO_CANDIDATES

KtClass(1,28): 'class Foo {'
  NO_CANDIDATES

KtClassBody(11,28): '{'
  NO_CANDIDATES

KtClass(17,26): 'class Bar'
  NO_CANDIDATES

KtClass(30,67): 'class C {'
  NO_CANDIDATES

KtClassBody(38,67): '{'
  NO_CANDIDATES

KtProperty(44,65): 'val prop: Foo.Bar.Baz'
  NO_CANDIDATES

KtTypeReference(54,65): 'Foo.Bar.Baz'
  NO_CANDIDATES

KtUserType(54,65): 'Foo.Bar.Baz'
  NO_CANDIDATES

KtUserType(54,61): 'Foo.Bar'
  NO_CANDIDATES

KtUserType(54,57): 'Foo'
  NO_CANDIDATES

KtNameReferenceExpression(54,57): 'Foo'
  NO_CANDIDATES

KtNameReferenceExpression(58,61): 'Bar'
  NO_CANDIDATES

KtNameReferenceExpression(62,65): 'Baz'
  NO_CANDIDATES

KtNamedFunction(69,117): 'fun testFun() {'
  NO_CANDIDATES

KtParameterList(80,82): '()'
  NO_CANDIDATES

KtBlockExpression(83,117): '{'
  NO_CANDIDATES

KtProperty(89,115): 'val localProp: Foo.Bar.Baz'
  NO_CANDIDATES

KtTypeReference(104,115): 'Foo.Bar.Baz'
  NO_CANDIDATES

KtUserType(104,115): 'Foo.Bar.Baz'
  NO_CANDIDATES

KtUserType(104,111): 'Foo.Bar'
  NO_CANDIDATES

KtUserType(104,107): 'Foo'
  NO_CANDIDATES

KtNameReferenceExpression(104,107): 'Foo'
  NO_CANDIDATES

KtNameReferenceExpression(108,111): 'Bar'
  NO_CANDIDATES

KtNameReferenceExpression(112,115): 'Baz'
  NO_CANDIDATES

KtNamedFunction(119,155): 'fun <T> take(action: (T) -> Unit) {}'
  NO_CANDIDATES

KtTypeParameterList(123,126): '<T>'
  NO_CANDIDATES

KtTypeParameter(124,125): 'T'
  NO_CANDIDATES

KtParameterList(131,152): '(action: (T) -> Unit)'
  NO_CANDIDATES

KtParameter(132,151): 'action: (T) -> Unit'
  NO_CANDIDATES

KtTypeReference(140,151): '(T) -> Unit'
  NO_CANDIDATES

KtFunctionType(140,151): '(T) -> Unit'
  NO_CANDIDATES

KtParameterList(140,143): '(T)'
  NO_CANDIDATES

KtParameter(141,142): 'T'
  NO_CANDIDATES

KtTypeReference(141,142): 'T'
  NO_CANDIDATES

KtUserType(141,142): 'T'
  NO_CANDIDATES

KtNameReferenceExpression(141,142): 'T'
  NO_CANDIDATES

KtTypeReference(147,151): 'Unit'
  NO_CANDIDATES

KtUserType(147,151): 'Unit'
  NO_CANDIDATES

KtNameReferenceExpression(147,151): 'Unit'
  NO_CANDIDATES

KtBlockExpression(153,155): '{}'
  NO_CANDIDATES

KtProperty(157,208): 'val prop = take {'
  NO_CANDIDATES

KtCallExpression(168,208): 'take {'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        {
            lambdaParam: Foo.Bar.Baz ->
        } -> (KaVariableSignature:
          name = action
          receiverType = null
          returnType = kotlin.Function1<ERROR CLASS: Cannot infer argument for type parameter T, kotlin.Unit>
          symbol = action: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /take(action: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = action
              receiverType = null
              returnType = kotlin.Function1<ERROR CLASS: Cannot infer argument for type parameter T, kotlin.Unit>
              symbol = action: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /take
      typeArgumentsMapping = {
        T -> (ERROR CLASS: Cannot infer argument for type parameter T)
      }
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'Function1<ERROR CLASS: Symbol not found for Foo.Bar.Baz, Unit>', but 'Function1<uninferred T (of fun <T> take), Unit>' was expected.>
    isInBestCandidates = true

KtNameReferenceExpression(168,172): 'take'
  KaInapplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      argumentMapping = {
        {
            lambdaParam: Foo.Bar.Baz ->
        } -> (KaVariableSignature:
          name = action
          receiverType = null
          returnType = kotlin.Function1<ERROR CLASS: Cannot infer argument for type parameter T, kotlin.Unit>
          symbol = action: kotlin.Function1<T, kotlin.Unit>
          contextParameters = []
          callableId = null)
      }
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        contextArguments = []
        dispatchReceiver = null
        extensionReceiver = null
        signature = KaFunctionSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /take(action: kotlin.Function1<T, kotlin.Unit>): kotlin.Unit
          valueParameters = [
            KaVariableSignature:
              name = action
              receiverType = null
              returnType = kotlin.Function1<ERROR CLASS: Cannot infer argument for type parameter T, kotlin.Unit>
              symbol = action: kotlin.Function1<T, kotlin.Unit>
              contextParameters = []
              callableId = null
          ]
          contextParameters = []
          callableId = /take
      typeArgumentsMapping = {
        T -> (ERROR CLASS: Cannot infer argument for type parameter T)
      }
    diagnostic = ERROR<ARGUMENT_TYPE_MISMATCH: Argument type mismatch: actual type is 'Function1<ERROR CLASS: Symbol not found for Foo.Bar.Baz, Unit>', but 'Function1<uninferred T (of fun <T> take), Unit>' was expected.>
    isInBestCandidates = true

KtLambdaArgument(173,208): '{'
  NO_CANDIDATES

KtLambdaExpression(173,208): '{'
  NO_CANDIDATES

KtFunctionLiteral(173,208): '{'
  NO_CANDIDATES

KtParameterList(179,203): 'lambdaParam: Foo.Bar.Baz'
  NO_CANDIDATES

KtParameter(179,203): 'lambdaParam: Foo.Bar.Baz'
  NO_CANDIDATES

KtTypeReference(192,203): 'Foo.Bar.Baz'
  NO_CANDIDATES

KtUserType(192,203): 'Foo.Bar.Baz'
  NO_CANDIDATES

KtUserType(192,199): 'Foo.Bar'
  NO_CANDIDATES

KtUserType(192,195): 'Foo'
  NO_CANDIDATES

KtNameReferenceExpression(192,195): 'Foo'
  NO_CANDIDATES

KtNameReferenceExpression(196,199): 'Bar'
  NO_CANDIDATES

KtNameReferenceExpression(200,203): 'Baz'
  NO_CANDIDATES

KtBlockExpression(207,207): ''
  NO_CANDIDATES