public open class InnerClassesInGeneric<P : R|kotlin/Any!|, Q : R|kotlin/Any!|> : R|kotlin/Any| {
    public constructor<P : R|kotlin/Any!|, Q : R|kotlin/Any!|>(): R|test/InnerClassesInGeneric<P, Q>|

    public open inner class Inner<Outer(P) : R|kotlin/Any!|, Outer(Q) : R|kotlin/Any!|> : R|kotlin/Any| {
        public test/InnerClassesInGeneric<P, Q>.constructor(): R|test/InnerClassesInGeneric.Inner<P, Q>|

    }
    public open inner class Inner2<Outer(P) : R|kotlin/Any!|, Outer(Q) : R|kotlin/Any!|> : R|test/InnerClassesInGeneric.Inner<P!, Q!>| {
        public open operator fun iterator(): R|ft<kotlin/collections/MutableIterator<P!>, kotlin/collections/Iterator<P!>?>|

        public test/InnerClassesInGeneric<P, Q>.constructor(): R|test/InnerClassesInGeneric.Inner2<P, Q>|

    }
}
