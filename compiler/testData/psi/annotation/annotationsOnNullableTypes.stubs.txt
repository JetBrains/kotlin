FILE[kind=Facade[packageFqName=<root>, facadeFqName=AnnotationsOnNullableTypesKt]]
  PACKAGE_DIRECTIVE
  IMPORT_LIST
  FUN[fqName=foo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=foo]
    VALUE_PARAMETER_LIST
      VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=i]
        TYPE_REFERENCE
          MODIFIER_LIST[]
            ANNOTATION_ENTRY[hasValueArguments=false, shortName=a]
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=a]
          NULLABLE_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Int]
  FUN[fqName=foo, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=foo]
    VALUE_PARAMETER_LIST
      VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=l]
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=List]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=NONE]
                TYPE_REFERENCE
                  MODIFIER_LIST[]
                    ANNOTATION_ENTRY[hasValueArguments=false, shortName=a]
                      CONSTRUCTOR_CALLEE
                        TYPE_REFERENCE
                          USER_TYPE
                            REFERENCE_EXPRESSION[referencedName=a]
                  NULLABLE_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=Int]
  FUN[fqName=bar, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=true, isTopLevel=true, mayHaveContract=false, name=bar]
    TYPE_REFERENCE
      MODIFIER_LIST[]
        ANNOTATION_ENTRY[hasValueArguments=false, shortName=a]
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=a]
      NULLABLE_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=Int]
    VALUE_PARAMETER_LIST
  PROPERTY[fqName=baz, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=true, isVar=false, name=baz]
    TYPE_REFERENCE
      MODIFIER_LIST[]
        ANNOTATION_ENTRY[hasValueArguments=false, shortName=a]
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=a]
      NULLABLE_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=Int]
  FUN[fqName=foo1, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=foo1]
    VALUE_PARAMETER_LIST
      VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=i]
        TYPE_REFERENCE
          MODIFIER_LIST[]
            ANNOTATION_ENTRY[hasValueArguments=true, shortName=b]
              CONSTRUCTOR_CALLEE
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION[referencedName=b]
              VALUE_ARGUMENT_LIST
                VALUE_ARGUMENT[isSpread=false]
                  INTEGER_CONSTANT[kind=INTEGER_CONSTANT, value=1]
          NULLABLE_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Int]
  FUN[fqName=foo1, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=foo1]
    VALUE_PARAMETER_LIST
      VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=l]
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=List]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=NONE]
                TYPE_REFERENCE
                  MODIFIER_LIST[]
                    ANNOTATION_ENTRY[hasValueArguments=true, shortName=b]
                      CONSTRUCTOR_CALLEE
                        TYPE_REFERENCE
                          USER_TYPE
                            REFERENCE_EXPRESSION[referencedName=b]
                      VALUE_ARGUMENT_LIST
                        VALUE_ARGUMENT[isSpread=false]
                          INTEGER_CONSTANT[kind=INTEGER_CONSTANT, value=1]
                  NULLABLE_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=Int]
  FUN[fqName=bar1, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=true, isTopLevel=true, mayHaveContract=false, name=bar1]
    TYPE_REFERENCE
      MODIFIER_LIST[]
        ANNOTATION_ENTRY[hasValueArguments=true, shortName=b]
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=b]
          VALUE_ARGUMENT_LIST
            VALUE_ARGUMENT[isSpread=false]
              INTEGER_CONSTANT[kind=INTEGER_CONSTANT, value=1]
      NULLABLE_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=Int]
    VALUE_PARAMETER_LIST
  PROPERTY[fqName=baz1, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=true, isVar=false, name=baz1]
    TYPE_REFERENCE
      MODIFIER_LIST[]
        ANNOTATION_ENTRY[hasValueArguments=true, shortName=b]
          CONSTRUCTOR_CALLEE
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION[referencedName=b]
          VALUE_ARGUMENT_LIST
            VALUE_ARGUMENT[isSpread=false]
              INTEGER_CONSTANT[kind=INTEGER_CONSTANT, value=1]
      NULLABLE_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=Int]
  FUN[fqName=foo2, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=foo2]
    VALUE_PARAMETER_LIST
      VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=i]
        TYPE_REFERENCE
          MODIFIER_LIST[]
            ANNOTATION
              ANNOTATION_ENTRY[hasValueArguments=false, shortName=a]
                CONSTRUCTOR_CALLEE
                  TYPE_REFERENCE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=a]
              ANNOTATION_ENTRY[hasValueArguments=true, shortName=b]
                CONSTRUCTOR_CALLEE
                  TYPE_REFERENCE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=b]
                VALUE_ARGUMENT_LIST
                  VALUE_ARGUMENT[isSpread=false]
                    INTEGER_CONSTANT[kind=INTEGER_CONSTANT, value=1]
          NULLABLE_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION[referencedName=Int]
  FUN[fqName=foo2, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=false, isTopLevel=true, mayHaveContract=false, name=foo2]
    VALUE_PARAMETER_LIST
      VALUE_PARAMETER[fqName=null, hasDefaultValue=false, hasValOrVar=false, isMutable=false, name=l]
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION[referencedName=List]
            TYPE_ARGUMENT_LIST
              TYPE_PROJECTION[projectionKind=NONE]
                TYPE_REFERENCE
                  MODIFIER_LIST[]
                    ANNOTATION
                      ANNOTATION_ENTRY[hasValueArguments=false, shortName=a]
                        CONSTRUCTOR_CALLEE
                          TYPE_REFERENCE
                            USER_TYPE
                              REFERENCE_EXPRESSION[referencedName=a]
                      ANNOTATION_ENTRY[hasValueArguments=true, shortName=b]
                        CONSTRUCTOR_CALLEE
                          TYPE_REFERENCE
                            USER_TYPE
                              REFERENCE_EXPRESSION[referencedName=b]
                        VALUE_ARGUMENT_LIST
                          VALUE_ARGUMENT[isSpread=false]
                            INTEGER_CONSTANT[kind=INTEGER_CONSTANT, value=1]
                  NULLABLE_TYPE
                    USER_TYPE
                      REFERENCE_EXPRESSION[referencedName=Int]
  FUN[fqName=bar2, hasBody=true, hasNoExpressionBody=true, hasTypeParameterListBeforeFunctionName=false, isExtension=true, isTopLevel=true, mayHaveContract=false, name=bar2]
    TYPE_REFERENCE
      MODIFIER_LIST[]
        ANNOTATION
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=a]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=a]
          ANNOTATION_ENTRY[hasValueArguments=true, shortName=b]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=b]
            VALUE_ARGUMENT_LIST
              VALUE_ARGUMENT[isSpread=false]
                INTEGER_CONSTANT[kind=INTEGER_CONSTANT, value=1]
      NULLABLE_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=Int]
    VALUE_PARAMETER_LIST
  PROPERTY[fqName=baz2, hasBackingField=null, hasDelegate=false, hasDelegateExpression=false, hasInitializer=false, hasReturnTypeRef=true, isExtension=false, isTopLevel=true, isVar=false, name=baz2]
    TYPE_REFERENCE
      MODIFIER_LIST[]
        ANNOTATION
          ANNOTATION_ENTRY[hasValueArguments=false, shortName=a]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=a]
          ANNOTATION_ENTRY[hasValueArguments=true, shortName=b]
            CONSTRUCTOR_CALLEE
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION[referencedName=b]
            VALUE_ARGUMENT_LIST
              VALUE_ARGUMENT[isSpread=false]
                INTEGER_CONSTANT[kind=INTEGER_CONSTANT, value=1]
      NULLABLE_TYPE
        USER_TYPE
          REFERENCE_EXPRESSION[referencedName=Int]
