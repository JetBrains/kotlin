/exp_side_effects.kt:(185,189): info: Generated Viper text for test:
field public$backing_field_x: Ref

method global$fun_getFoo$fun_take$$return$T_class_global$class_Foo()
  returns (ret: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$T_class_global$class_Foo())
  ensures acc(T_class_global$class_Foo(ret), wildcard)


method global$fun_sideEffect$fun_take$$return$T_Int() returns (ret: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$intType())


method global$fun_test$fun_take$$return$T_Unit() returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
{
  var anonymous$0: Ref
  var anonymous$1: Ref
  var local0$y: Ref
  var anonymous$2: Ref
  var anonymous$3: Ref
  var anonymous$4: Ref
  ret$0 := dom$RuntimeType$unitValue()
  anonymous$0 := global$fun_getFoo$fun_take$$return$T_class_global$class_Foo()
  anonymous$1 := global$fun_sideEffect$fun_take$$return$T_Int()
  inhale acc(anonymous$0.public$backing_field_x, write)
  anonymous$0.public$backing_field_x := anonymous$1
  exhale acc(anonymous$0.public$backing_field_x, write)
  anonymous$3 := global$fun_getFoo$fun_take$$return$T_class_global$class_Foo()
  inhale acc(anonymous$3.public$backing_field_x, write)
  anonymous$2 := anonymous$3.public$backing_field_x
  exhale acc(anonymous$3.public$backing_field_x, write)
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(anonymous$2), dom$RuntimeType$intType())
  anonymous$4 := global$fun_sideEffect$fun_take$$return$T_Int()
  local0$y := special$plusInts(anonymous$2, anonymous$4)
  label label$ret$0
}
