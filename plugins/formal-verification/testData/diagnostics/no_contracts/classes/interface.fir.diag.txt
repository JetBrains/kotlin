/interface.kt:(84,98): info: Generated Viper text for testProperties:
method global$fun_testProperties$fun_take$T_class_global$class_Foo$return$T_Unit(local$foo: Ref)
  returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
{
  var anonymous$0: Ref
  var local0$x: Ref
  var anonymous$1: Ref
  var anonymous$2: Ref
  var anonymous$3: Ref
  var anonymous$4: Ref
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(local$foo), dom$RuntimeType$T_class_global$class_Foo())
  inhale acc(T_class_global$class_Foo(local$foo), wildcard)
  ret$0 := dom$RuntimeType$unitValue()
  anonymous$0 := public$property_setter_varProp(local$foo, dom$RuntimeType$intToRef(0))
  anonymous$2 := public$property_getter_varProp(local$foo)
  anonymous$1 := anonymous$2
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(anonymous$1), dom$RuntimeType$intType())
  anonymous$4 := public$property_getter_valProp(local$foo)
  anonymous$3 := anonymous$4
  inhale dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(anonymous$3), dom$RuntimeType$intType())
  local0$x := special$plusInts(anonymous$1, anonymous$3)
  label label$ret$0
}

method public$property_getter_valProp(this: Ref) returns (ret: Ref)


method public$property_getter_varProp(this: Ref) returns (ret: Ref)


method public$property_setter_varProp(this: Ref, value: Ref)
  returns (ret: Ref)


/interface.kt:(348,358): info: Generated Viper text for createImpl:
field public$backing_field_number: Ref

method class_Impl$constructor$fun_take$T_Int$return$T_class_global$class_Impl(local$number: Ref)
  returns (ret: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret), dom$RuntimeType$T_class_global$class_Impl())
  ensures acc(T_class_global$class_Impl(ret), wildcard)
  ensures (unfolding acc(T_class_global$class_Impl(ret), wildcard) in
      dom$RuntimeType$intFromRef(ret.public$backing_field_number) ==
      dom$RuntimeType$intFromRef(local$number))


method global$fun_createImpl$fun_take$$return$T_Unit() returns (ret$0: Ref)
  ensures dom$RuntimeType$isSubtype(dom$RuntimeType$typeOf(ret$0), dom$RuntimeType$unitType())
{
  var local0$impl: Ref
  var local0$implField: Ref
  ret$0 := dom$RuntimeType$unitValue()
  local0$impl := class_Impl$constructor$fun_take$T_Int$return$T_class_global$class_Impl(dom$RuntimeType$intToRef(-1))
  unfold acc(T_class_global$class_Impl(local0$impl), wildcard)
  local0$implField := local0$impl.public$backing_field_number
  label label$ret$0
}

method public$property_getter_number(this: Ref) returns (ret: Ref)
