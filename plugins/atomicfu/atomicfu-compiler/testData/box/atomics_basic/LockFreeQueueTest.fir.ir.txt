FILE fqName:<root> fileName:/LockFreeQueueTest.kt
  CLASS CLASS name:LockFreeQueue modality:FINAL visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.LockFreeQueue
    PROPERTY ATOMICFU_GENERATED_PROPERTY name:head$volatile visibility:private modality:FINAL [var]
      FIELD ATOMICFU_GENERATED_FIELD name:head$volatile type:kotlin.Any? visibility:private
        annotations:
          Volatile
        EXPRESSION_BODY
          CONSTRUCTOR_CALL 'public constructor <init> (value: kotlin.Int) declared in <root>.LockFreeQueue.Node' type=<root>.LockFreeQueue.Node origin=null
            ARG value: CONST Int type=kotlin.Int value=0
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-head$volatile> visibility:private modality:FINAL returnType:kotlin.Any?
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeQueue
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:head$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-head$volatile> (): kotlin.Any? declared in <root>.LockFreeQueue'
            GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:head$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeQueue' type=kotlin.Any? origin=null
              receiver: GET_VAR '<this>: <root>.LockFreeQueue declared in <root>.LockFreeQueue.<get-head$volatile>' type=<root>.LockFreeQueue origin=null
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<set-head$volatile> visibility:private modality:FINAL returnType:kotlin.Unit
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeQueue
        VALUE_PARAMETER kind:Regular name:value index:1 type:kotlin.Any?
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:head$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Unit from='private final fun <set-head$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LockFreeQueue'
            SET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:head$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeQueue' type=kotlin.Unit origin=null
              receiver: GET_VAR '<this>: <root>.LockFreeQueue declared in <root>.LockFreeQueue.<set-head$volatile>' type=<root>.LockFreeQueue origin=null
              value: GET_VAR 'value: kotlin.Any? declared in <root>.LockFreeQueue.<set-head$volatile>' type=kotlin.Any? origin=null
    PROPERTY ATOMICFU_GENERATED_PROPERTY name:tail$volatile visibility:private modality:FINAL [var]
      FIELD ATOMICFU_GENERATED_FIELD name:tail$volatile type:kotlin.Any? visibility:private
        annotations:
          Volatile
        EXPRESSION_BODY
          TYPE_OP type=kotlin.Any? origin=CAST typeOperand=kotlin.Any?
            CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
              TYPE_ARG T: kotlin.Any?
              ARG <this>: PROPERTY_REFERENCE 'private final head$volatile: kotlin.Any? declared in <root>.LockFreeQueue' field='FIELD ATOMICFU_GENERATED_FIELD name:head$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeQueue' getter='private final fun <get-head$volatile> (): kotlin.Any? declared in <root>.LockFreeQueue' setter='private final fun <set-head$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LockFreeQueue' type=kotlin.Any? origin=null
                ARG 1: GET_VAR '<this>: <root>.LockFreeQueue declared in <root>.LockFreeQueue' type=<root>.LockFreeQueue origin=IMPLICIT_ARGUMENT
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-tail$volatile> visibility:private modality:FINAL returnType:kotlin.Any?
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeQueue
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:tail$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-tail$volatile> (): kotlin.Any? declared in <root>.LockFreeQueue'
            GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:tail$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeQueue' type=kotlin.Any? origin=null
              receiver: GET_VAR '<this>: <root>.LockFreeQueue declared in <root>.LockFreeQueue.<get-tail$volatile>' type=<root>.LockFreeQueue origin=null
      FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<set-tail$volatile> visibility:private modality:FINAL returnType:kotlin.Unit
        VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeQueue
        VALUE_PARAMETER kind:Regular name:value index:1 type:kotlin.Any?
        correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:tail$volatile visibility:private modality:FINAL [var]
        BLOCK_BODY
          RETURN type=kotlin.Unit from='private final fun <set-tail$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LockFreeQueue'
            SET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:tail$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeQueue' type=kotlin.Unit origin=null
              receiver: GET_VAR '<this>: <root>.LockFreeQueue declared in <root>.LockFreeQueue.<set-tail$volatile>' type=<root>.LockFreeQueue origin=null
              value: GET_VAR 'value: kotlin.Any? declared in <root>.LockFreeQueue.<set-tail$volatile>' type=kotlin.Any? origin=null
    CLASS CLASS name:Node modality:FINAL visibility:private superTypes:[kotlin.Any]
      thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.LockFreeQueue.Node
      PROPERTY name:value visibility:public modality:FINAL [val]
        FIELD PROPERTY_BACKING_FIELD name:value type:kotlin.Int visibility:private [final]
          EXPRESSION_BODY
            GET_VAR 'value: kotlin.Int declared in <root>.LockFreeQueue.Node.<init>' type=kotlin.Int origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR name:<get-value> visibility:public modality:FINAL returnType:kotlin.Int
          VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeQueue.Node
          correspondingProperty: PROPERTY name:value visibility:public modality:FINAL [val]
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-value> (): kotlin.Int declared in <root>.LockFreeQueue.Node'
              GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:value type:kotlin.Int visibility:private [final]' type=kotlin.Int origin=null
                receiver: GET_VAR '<this>: <root>.LockFreeQueue.Node declared in <root>.LockFreeQueue.Node.<get-value>' type=<root>.LockFreeQueue.Node origin=null
      PROPERTY ATOMICFU_GENERATED_PROPERTY name:next$volatile visibility:public modality:FINAL [var]
        FIELD ATOMICFU_GENERATED_FIELD name:next$volatile type:kotlin.Any? visibility:private
          annotations:
            Volatile
          EXPRESSION_BODY
            CONST Null type=kotlin.Nothing? value=null
        FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<get-next$volatile> visibility:public modality:FINAL returnType:kotlin.Any?
          VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeQueue.Node
          correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:next$volatile visibility:public modality:FINAL [var]
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='public final fun <get-next$volatile> (): kotlin.Any? declared in <root>.LockFreeQueue.Node'
              GET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:next$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeQueue.Node' type=kotlin.Any? origin=null
                receiver: GET_VAR '<this>: <root>.LockFreeQueue.Node declared in <root>.LockFreeQueue.Node.<get-next$volatile>' type=<root>.LockFreeQueue.Node origin=null
        FUN ATOMICFU_GENERATED_PROPERTY_ACCESSOR name:<set-next$volatile> visibility:public modality:FINAL returnType:kotlin.Unit
          VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeQueue.Node
          VALUE_PARAMETER kind:Regular name:value index:1 type:kotlin.Any?
          correspondingProperty: PROPERTY ATOMICFU_GENERATED_PROPERTY name:next$volatile visibility:public modality:FINAL [var]
          BLOCK_BODY
            RETURN type=kotlin.Unit from='public final fun <set-next$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LockFreeQueue.Node'
              SET_FIELD 'FIELD ATOMICFU_GENERATED_FIELD name:next$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeQueue.Node' type=kotlin.Unit origin=null
                receiver: GET_VAR '<this>: <root>.LockFreeQueue.Node declared in <root>.LockFreeQueue.Node.<set-next$volatile>' type=<root>.LockFreeQueue.Node origin=null
                value: GET_VAR 'value: kotlin.Any? declared in <root>.LockFreeQueue.Node.<set-next$volatile>' type=kotlin.Any? origin=null
      CONSTRUCTOR visibility:public returnType:<root>.LockFreeQueue.Node [primary]
        VALUE_PARAMETER kind:Regular name:value index:0 type:kotlin.Int
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
          INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Node modality:FINAL visibility:private superTypes:[kotlin.Any]' type=kotlin.Unit
      FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
        overridden:
          public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        overridden:
          public open fun hashCode (): kotlin.Int declared in kotlin.Any
      FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
        VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
        overridden:
          public open fun toString (): kotlin.String declared in kotlin.Any
    CONSTRUCTOR visibility:public returnType:<root>.LockFreeQueue [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:LockFreeQueue modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN ATOMICFU_GENERATED_FUNCTION name:loop$atomicfu$NATIVE_PROPERTY_REF$Any visibility:private modality:FINAL returnType:kotlin.Unit [inline]
      VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeQueue
      VALUE_PARAMETER kind:Regular name:handler$atomicfu index:1 type:kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> [crossinline]
      VALUE_PARAMETER kind:Regular name:action$atomicfu index:2 type:kotlin.Function1<kotlin.Any?, kotlin.Unit>
      BLOCK_BODY
        WHILE label=null origin=null
          condition: CONST Boolean type=kotlin.Boolean value=true
          body: BLOCK type=R of kotlin.Function1 origin=null
            VAR IR_TEMPORARY_VARIABLE name:tmp_0 type:T of kotlin.concurrent.atomicGetField [val]
              CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                TYPE_ARG T: kotlin.Any?
                ARG <this>: CALL 'public abstract fun invoke (): R of kotlin.Function0 declared in kotlin.Function0' type=R of kotlin.Function0 origin=null
                  ARG <this>: GET_VAR 'handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> declared in <root>.LockFreeQueue.loop$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>> origin=null
            CALL 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 declared in kotlin.Function1' type=R of kotlin.Function1 origin=null
              ARG <this>: GET_VAR 'action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Unit> declared in <root>.LockFreeQueue.loop$atomicfu$NATIVE_PROPERTY_REF$Any' type=kotlin.Function1<kotlin.Any?, kotlin.Unit> origin=null
              ARG p1: GET_VAR 'val tmp_0: T of kotlin.concurrent.atomicGetField declared in <root>.LockFreeQueue.loop$atomicfu$NATIVE_PROPERTY_REF$Any' type=T of kotlin.concurrent.atomicGetField origin=null
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    FUN name:dequeue visibility:public modality:FINAL returnType:kotlin.Int
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeQueue
      BLOCK_BODY
        CALL 'private final fun loop$atomicfu$NATIVE_PROPERTY_REF$Any (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>>, action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Unit>): kotlin.Unit declared in <root>.LockFreeQueue' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR '<this>: <root>.LockFreeQueue declared in <root>.LockFreeQueue.dequeue' type=<root>.LockFreeQueue origin=null
          ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.Any?> origin=LAMBDA
            FUN ATOMICFU_GENERATED_FUNCTION name:<head$volatile-getter> visibility:local modality:FINAL returnType:kotlin.Any? [inline]
              BLOCK_BODY
                RETURN type=kotlin.Nothing from='local final fun <head$volatile-getter> (): kotlin.Any? declared in <root>.LockFreeQueue.dequeue'
                  PROPERTY_REFERENCE 'private final head$volatile: kotlin.Any? declared in <root>.LockFreeQueue' field='FIELD ATOMICFU_GENERATED_FIELD name:head$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeQueue' getter='private final fun <get-head$volatile> (): kotlin.Any? declared in <root>.LockFreeQueue' setter='private final fun <set-head$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LockFreeQueue' type=kotlin.Any? origin=null
                    ARG 1: GET_VAR '<this>: <root>.LockFreeQueue declared in <root>.LockFreeQueue.dequeue' type=<root>.LockFreeQueue origin=IMPLICIT_ARGUMENT
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<<root>.LockFreeQueue.Node, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:curHead index:0 type:<root>.LockFreeQueue.Node
              BLOCK_BODY
                VAR name:next type:<root>.LockFreeQueue.Node [val]
                  BLOCK type=<root>.LockFreeQueue.Node origin=ELVIS
                    VAR IR_TEMPORARY_VARIABLE name:tmp_1 type:<root>.LockFreeQueue.Node? [val]
                      TYPE_OP type=kotlin.Any? origin=CAST typeOperand=kotlin.Any?
                        CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                          TYPE_ARG T: kotlin.Any?
                          ARG <this>: PROPERTY_REFERENCE 'public final next$volatile: kotlin.Any? declared in <root>.LockFreeQueue.Node' field='FIELD ATOMICFU_GENERATED_FIELD name:next$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeQueue.Node' getter='public final fun <get-next$volatile> (): kotlin.Any? declared in <root>.LockFreeQueue.Node' setter='public final fun <set-next$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LockFreeQueue.Node' type=kotlin.Any? origin=null
                            ARG 1: GET_VAR 'curHead: <root>.LockFreeQueue.Node declared in <root>.LockFreeQueue.dequeue.<anonymous>' type=<root>.LockFreeQueue.Node origin=null
                    WHEN type=<root>.LockFreeQueue.Node origin=null
                      BRANCH
                        if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
                          ARG arg0: GET_VAR 'val tmp_1: <root>.LockFreeQueue.Node? declared in <root>.LockFreeQueue.dequeue.<anonymous>' type=<root>.LockFreeQueue.Node? origin=null
                          ARG arg1: CONST Null type=kotlin.Nothing? value=null
                        then: RETURN type=kotlin.Nothing from='public final fun dequeue (): kotlin.Int declared in <root>.LockFreeQueue'
                          CONST Int type=kotlin.Int value=-1
                      BRANCH
                        if: CONST Boolean type=kotlin.Boolean value=true
                        then: GET_VAR 'val tmp_1: <root>.LockFreeQueue.Node? declared in <root>.LockFreeQueue.dequeue.<anonymous>' type=<root>.LockFreeQueue.Node? origin=null
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                      TYPE_ARG T: kotlin.Any?
                      ARG <this>: PROPERTY_REFERENCE 'private final head$volatile: kotlin.Any? declared in <root>.LockFreeQueue' field='FIELD ATOMICFU_GENERATED_FIELD name:head$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeQueue' getter='private final fun <get-head$volatile> (): kotlin.Any? declared in <root>.LockFreeQueue' setter='private final fun <set-head$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LockFreeQueue' type=kotlin.Any? origin=null
                        ARG 1: GET_VAR '<this>: <root>.LockFreeQueue declared in <root>.LockFreeQueue.dequeue' type=<root>.LockFreeQueue origin=IMPLICIT_ARGUMENT
                      ARG expectedValue: GET_VAR 'curHead: <root>.LockFreeQueue.Node declared in <root>.LockFreeQueue.dequeue.<anonymous>' type=<root>.LockFreeQueue.Node origin=null
                      ARG newValue: GET_VAR 'val next: <root>.LockFreeQueue.Node declared in <root>.LockFreeQueue.dequeue.<anonymous>' type=<root>.LockFreeQueue.Node origin=null
                    then: RETURN type=kotlin.Nothing from='public final fun dequeue (): kotlin.Int declared in <root>.LockFreeQueue'
                      CALL 'public final fun <get-value> (): kotlin.Int declared in <root>.LockFreeQueue.Node' type=kotlin.Int origin=GET_PROPERTY
                        ARG <this>: GET_VAR 'val next: <root>.LockFreeQueue.Node declared in <root>.LockFreeQueue.dequeue.<anonymous>' type=<root>.LockFreeQueue.Node origin=null
    FUN name:enqueue visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeQueue
      VALUE_PARAMETER kind:Regular name:value index:1 type:kotlin.Int
      BLOCK_BODY
        VAR name:node type:<root>.LockFreeQueue.Node [val]
          CONSTRUCTOR_CALL 'public constructor <init> (value: kotlin.Int) declared in <root>.LockFreeQueue.Node' type=<root>.LockFreeQueue.Node origin=null
            ARG value: GET_VAR 'value: kotlin.Int declared in <root>.LockFreeQueue.enqueue' type=kotlin.Int origin=null
        CALL 'private final fun loop$atomicfu$NATIVE_PROPERTY_REF$Any (handler$atomicfu: kotlin.Function0<kotlin.reflect.KMutableProperty0<kotlin.Any?>>, action$atomicfu: kotlin.Function1<kotlin.Any?, kotlin.Unit>): kotlin.Unit declared in <root>.LockFreeQueue' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR '<this>: <root>.LockFreeQueue declared in <root>.LockFreeQueue.enqueue' type=<root>.LockFreeQueue origin=null
          ARG handler$atomicfu: FUN_EXPR type=kotlin.Function0<kotlin.Any?> origin=LAMBDA
            FUN ATOMICFU_GENERATED_FUNCTION name:<tail$volatile-getter> visibility:local modality:FINAL returnType:kotlin.Any? [inline]
              BLOCK_BODY
                RETURN type=kotlin.Nothing from='local final fun <tail$volatile-getter> (): kotlin.Any? declared in <root>.LockFreeQueue.enqueue'
                  PROPERTY_REFERENCE 'private final tail$volatile: kotlin.Any? declared in <root>.LockFreeQueue' field='FIELD ATOMICFU_GENERATED_FIELD name:tail$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeQueue' getter='private final fun <get-tail$volatile> (): kotlin.Any? declared in <root>.LockFreeQueue' setter='private final fun <set-tail$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LockFreeQueue' type=kotlin.Any? origin=null
                    ARG 1: GET_VAR '<this>: <root>.LockFreeQueue declared in <root>.LockFreeQueue.enqueue' type=<root>.LockFreeQueue origin=IMPLICIT_ARGUMENT
          ARG action$atomicfu: FUN_EXPR type=kotlin.Function1<<root>.LockFreeQueue.Node, kotlin.Unit> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL returnType:kotlin.Unit
              VALUE_PARAMETER kind:Regular name:curTail index:0 type:<root>.LockFreeQueue.Node
              BLOCK_BODY
                VAR name:curNext type:<root>.LockFreeQueue.Node? [val]
                  TYPE_OP type=kotlin.Any? origin=CAST typeOperand=kotlin.Any?
                    CALL 'internal final fun atomicGetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.atomicGetField>): T of kotlin.concurrent.atomicGetField declared in kotlin.concurrent' type=T of kotlin.concurrent.atomicGetField origin=null
                      TYPE_ARG T: kotlin.Any?
                      ARG <this>: PROPERTY_REFERENCE 'public final next$volatile: kotlin.Any? declared in <root>.LockFreeQueue.Node' field='FIELD ATOMICFU_GENERATED_FIELD name:next$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeQueue.Node' getter='public final fun <get-next$volatile> (): kotlin.Any? declared in <root>.LockFreeQueue.Node' setter='public final fun <set-next$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LockFreeQueue.Node' type=kotlin.Any? origin=null
                        ARG 1: GET_VAR 'curTail: <root>.LockFreeQueue.Node declared in <root>.LockFreeQueue.enqueue.<anonymous>' type=<root>.LockFreeQueue.Node origin=null
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'public final fun not (): kotlin.Boolean declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
                      ARG <this>: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
                        ARG arg0: GET_VAR 'val curNext: <root>.LockFreeQueue.Node? declared in <root>.LockFreeQueue.enqueue.<anonymous>' type=<root>.LockFreeQueue.Node? origin=null
                        ARG arg1: CONST Null type=kotlin.Nothing? value=null
                    then: BLOCK type=kotlin.Unit origin=null
                      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                        CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                          TYPE_ARG T: kotlin.Any?
                          ARG <this>: PROPERTY_REFERENCE 'private final tail$volatile: kotlin.Any? declared in <root>.LockFreeQueue' field='FIELD ATOMICFU_GENERATED_FIELD name:tail$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeQueue' getter='private final fun <get-tail$volatile> (): kotlin.Any? declared in <root>.LockFreeQueue' setter='private final fun <set-tail$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LockFreeQueue' type=kotlin.Any? origin=null
                            ARG 1: GET_VAR '<this>: <root>.LockFreeQueue declared in <root>.LockFreeQueue.enqueue' type=<root>.LockFreeQueue origin=IMPLICIT_ARGUMENT
                          ARG expectedValue: GET_VAR 'curTail: <root>.LockFreeQueue.Node declared in <root>.LockFreeQueue.enqueue.<anonymous>' type=<root>.LockFreeQueue.Node origin=null
                          ARG newValue: GET_VAR 'val curNext: <root>.LockFreeQueue.Node? declared in <root>.LockFreeQueue.enqueue.<anonymous>' type=<root>.LockFreeQueue.Node? origin=null
                      RETURN type=kotlin.Nothing from='local final fun <anonymous> (curTail: <root>.LockFreeQueue.Node): kotlin.Unit declared in <root>.LockFreeQueue.enqueue'
                        GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Unit modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
                WHEN type=kotlin.Unit origin=IF
                  BRANCH
                    if: CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                      TYPE_ARG T: kotlin.Any?
                      ARG <this>: PROPERTY_REFERENCE 'public final next$volatile: kotlin.Any? declared in <root>.LockFreeQueue.Node' field='FIELD ATOMICFU_GENERATED_FIELD name:next$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeQueue.Node' getter='public final fun <get-next$volatile> (): kotlin.Any? declared in <root>.LockFreeQueue.Node' setter='public final fun <set-next$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LockFreeQueue.Node' type=kotlin.Any? origin=null
                        ARG 1: GET_VAR 'curTail: <root>.LockFreeQueue.Node declared in <root>.LockFreeQueue.enqueue.<anonymous>' type=<root>.LockFreeQueue.Node origin=null
                      ARG expectedValue: CONST Null type=kotlin.Nothing? value=null
                      ARG newValue: GET_VAR 'val node: <root>.LockFreeQueue.Node declared in <root>.LockFreeQueue.enqueue' type=<root>.LockFreeQueue.Node origin=null
                    then: BLOCK type=kotlin.Unit origin=null
                      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
                        CALL 'internal final fun compareAndSetField <T> (<this>: kotlin.reflect.KMutableProperty0<T of kotlin.concurrent.compareAndSetField>, expectedValue: T of kotlin.concurrent.compareAndSetField, newValue: T of kotlin.concurrent.compareAndSetField): kotlin.Boolean declared in kotlin.concurrent' type=kotlin.Boolean origin=null
                          TYPE_ARG T: kotlin.Any?
                          ARG <this>: PROPERTY_REFERENCE 'private final tail$volatile: kotlin.Any? declared in <root>.LockFreeQueue' field='FIELD ATOMICFU_GENERATED_FIELD name:tail$volatile type:kotlin.Any? visibility:private declared in <root>.LockFreeQueue' getter='private final fun <get-tail$volatile> (): kotlin.Any? declared in <root>.LockFreeQueue' setter='private final fun <set-tail$volatile> (value: kotlin.Any?): kotlin.Unit declared in <root>.LockFreeQueue' type=kotlin.Any? origin=null
                            ARG 1: GET_VAR '<this>: <root>.LockFreeQueue declared in <root>.LockFreeQueue.enqueue' type=<root>.LockFreeQueue origin=IMPLICIT_ARGUMENT
                          ARG expectedValue: GET_VAR 'curTail: <root>.LockFreeQueue.Node declared in <root>.LockFreeQueue.enqueue.<anonymous>' type=<root>.LockFreeQueue.Node origin=null
                          ARG newValue: GET_VAR 'val node: <root>.LockFreeQueue.Node declared in <root>.LockFreeQueue.enqueue' type=<root>.LockFreeQueue.Node origin=null
                      RETURN type=kotlin.Nothing from='public final fun enqueue (value: kotlin.Int): kotlin.Unit declared in <root>.LockFreeQueue'
                        GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Unit modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
  CLASS CLASS name:LockFreeQueueTest modality:FINAL visibility:public superTypes:[kotlin.Any]
    thisReceiver: VALUE_PARAMETER INSTANCE_RECEIVER kind:DispatchReceiver name:<this> type:<root>.LockFreeQueueTest
    CONSTRUCTOR visibility:public returnType:<root>.LockFreeQueueTest [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:LockFreeQueueTest modality:FINAL visibility:public superTypes:[kotlin.Any]' type=kotlin.Unit
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN returnType:kotlin.Boolean [fake_override,operator]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      VALUE_PARAMETER kind:Regular name:other index:1 type:kotlin.Any?
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN returnType:kotlin.Int [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN returnType:kotlin.String [fake_override]
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:kotlin.Any
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
    FUN name:testBasic visibility:public modality:FINAL returnType:kotlin.Unit
      VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:<root>.LockFreeQueueTest
      BLOCK_BODY
        VAR name:q type:<root>.LockFreeQueue [val]
          CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.LockFreeQueue' type=<root>.LockFreeQueue origin=null
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=-1
          ARG actual: CALL 'public final fun dequeue (): kotlin.Int declared in <root>.LockFreeQueue' type=kotlin.Int origin=null
            ARG <this>: GET_VAR 'val q: <root>.LockFreeQueue declared in <root>.LockFreeQueueTest.testBasic' type=<root>.LockFreeQueue origin=null
        CALL 'public final fun enqueue (value: kotlin.Int): kotlin.Unit declared in <root>.LockFreeQueue' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR 'val q: <root>.LockFreeQueue declared in <root>.LockFreeQueueTest.testBasic' type=<root>.LockFreeQueue origin=null
          ARG value: CONST Int type=kotlin.Int value=42
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=42
          ARG actual: CALL 'public final fun dequeue (): kotlin.Int declared in <root>.LockFreeQueue' type=kotlin.Int origin=null
            ARG <this>: GET_VAR 'val q: <root>.LockFreeQueue declared in <root>.LockFreeQueueTest.testBasic' type=<root>.LockFreeQueue origin=null
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=-1
          ARG actual: CALL 'public final fun dequeue (): kotlin.Int declared in <root>.LockFreeQueue' type=kotlin.Int origin=null
            ARG <this>: GET_VAR 'val q: <root>.LockFreeQueue declared in <root>.LockFreeQueueTest.testBasic' type=<root>.LockFreeQueue origin=null
        CALL 'public final fun enqueue (value: kotlin.Int): kotlin.Unit declared in <root>.LockFreeQueue' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR 'val q: <root>.LockFreeQueue declared in <root>.LockFreeQueueTest.testBasic' type=<root>.LockFreeQueue origin=null
          ARG value: CONST Int type=kotlin.Int value=1
        CALL 'public final fun enqueue (value: kotlin.Int): kotlin.Unit declared in <root>.LockFreeQueue' type=kotlin.Unit origin=null
          ARG <this>: GET_VAR 'val q: <root>.LockFreeQueue declared in <root>.LockFreeQueueTest.testBasic' type=<root>.LockFreeQueue origin=null
          ARG value: CONST Int type=kotlin.Int value=2
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=1
          ARG actual: CALL 'public final fun dequeue (): kotlin.Int declared in <root>.LockFreeQueue' type=kotlin.Int origin=null
            ARG <this>: GET_VAR 'val q: <root>.LockFreeQueue declared in <root>.LockFreeQueueTest.testBasic' type=<root>.LockFreeQueue origin=null
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=2
          ARG actual: CALL 'public final fun dequeue (): kotlin.Int declared in <root>.LockFreeQueue' type=kotlin.Int origin=null
            ARG <this>: GET_VAR 'val q: <root>.LockFreeQueue declared in <root>.LockFreeQueueTest.testBasic' type=<root>.LockFreeQueue origin=null
        CALL 'public final fun assertEquals <T> (expected: T of kotlin.test.assertEquals, actual: T of kotlin.test.assertEquals, message: kotlin.String?): kotlin.Unit declared in kotlin.test' type=kotlin.Unit origin=null
          TYPE_ARG T: kotlin.Int
          ARG expected: CONST Int type=kotlin.Int value=-1
          ARG actual: CALL 'public final fun dequeue (): kotlin.Int declared in <root>.LockFreeQueue' type=kotlin.Int origin=null
            ARG <this>: GET_VAR 'val q: <root>.LockFreeQueue declared in <root>.LockFreeQueueTest.testBasic' type=<root>.LockFreeQueue origin=null
  FUN name:box visibility:public modality:FINAL returnType:kotlin.String
    BLOCK_BODY
      VAR name:testClass type:<root>.LockFreeQueueTest [val]
        CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.LockFreeQueueTest' type=<root>.LockFreeQueueTest origin=null
      CALL 'public final fun testBasic (): kotlin.Unit declared in <root>.LockFreeQueueTest' type=kotlin.Unit origin=null
        ARG <this>: GET_VAR 'val testClass: <root>.LockFreeQueueTest declared in <root>.box' type=<root>.LockFreeQueueTest origin=null
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        CONST String type=kotlin.String value="OK"
