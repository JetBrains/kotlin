package

public fun </*0*/ T> bar(/*0*/ f: (T) -> kotlin.Unit, /*1*/ e: T): kotlin.Unit
public fun </*0*/ T> baz(/*0*/ e: T, /*1*/ f: (T) -> kotlin.Unit): kotlin.Unit
public fun fooB(/*0*/ b: B): kotlin.Unit
public fun test(/*0*/ a: A, /*1*/ b: B): kotlin.Unit

public interface A {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public interface B {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
