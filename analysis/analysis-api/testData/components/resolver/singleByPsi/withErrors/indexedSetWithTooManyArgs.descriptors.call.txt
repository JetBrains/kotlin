KtArrayAccessExpression(93,110): 'c[1, "foo", 3.14]'
  KaErrorCallInfo:
    candidateCalls = [
      KaSimpleFunctionCall:
        argumentMapping = {
          1 -> (KaVariableSignature:
            name = a
            receiverType = null
            returnType = kotlin.Int
            symbol = a: kotlin.Int
            callableId = null),
          "foo" -> (KaVariableSignature:
            name = b
            receiverType = null
            returnType = kotlin.String
            symbol = b: kotlin.String
            callableId = null),
          3.14 -> (KaVariableSignature:
            name = value
            receiverType = null
            returnType = kotlin.Boolean
            symbol = value: kotlin.Boolean
            callableId = null)
        }
        isImplicitInvoke = false
        partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
          dispatchReceiver = KaExplicitReceiverValue:
            expression = c
            isSafeNavigation = false
            type = C
          extensionReceiver = null
          signature = KaFunctionSignature:
            receiverType = null
            returnType = kotlin.Unit
            symbol = /C.set(<dispatch receiver>: C, a: kotlin.Int, b: kotlin.String, value: kotlin.Boolean): kotlin.Unit
            valueParameters = [
              KaVariableSignature:
                name = a
                receiverType = null
                returnType = kotlin.Int
                symbol = a: kotlin.Int
                callableId = null,
              KaVariableSignature:
                name = b
                receiverType = null
                returnType = kotlin.String
                symbol = b: kotlin.String
                callableId = null,
              KaVariableSignature:
                name = value
                receiverType = null
                returnType = kotlin.Boolean
                symbol = value: kotlin.Boolean
                callableId = null
            ]
            callableId = /C.set
        typeArgumentsMapping = {}
    ]
    diagnostic = ERROR<CONSTANT_EXPECTED_TYPE_MISMATCH: The floating-point literal does not conform to the expected type Boolean>