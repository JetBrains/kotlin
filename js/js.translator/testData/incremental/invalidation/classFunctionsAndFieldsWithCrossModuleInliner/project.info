IGNORE_PER_FILE: true
// Mismatched rebuilt modules at step 1
// Expected :[lib1/l1]
// Actual   :[lib1/l1, main/m]

MODULES: lib1, main

STEP 0:
    language: +IrIntraModuleInlinerBeforeKlibSerialization, +IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, main
    dirty js modules: lib1, main
    dirty js files:   lib1/l1, main/m, main/m.export, main
STEP 1:
    language: +IrIntraModuleInlinerBeforeKlibSerialization, +IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, main
    dirty js modules: lib1, main
    dirty js files:   lib1/l1
STEP 2..3:
    language: +IrIntraModuleInlinerBeforeKlibSerialization, +IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, main
    dirty js modules: lib1, main
    dirty js files:   lib1/l1, main/m
STEP 4..6:
    language: +IrIntraModuleInlinerBeforeKlibSerialization, +IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, main
    dirty js modules: lib1
    dirty js files:   lib1/l1
STEP 7:
    language: +IrIntraModuleInlinerBeforeKlibSerialization, +IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, main
    dirty js modules: lib1, main
    dirty js files:   lib1/l1
STEP 8:
    language: +IrIntraModuleInlinerBeforeKlibSerialization, +IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, main
    dirty js modules: lib1, main
    dirty js files:   lib1/l1, main/m
STEP 9:
    language: +IrIntraModuleInlinerBeforeKlibSerialization, +IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, main
    dirty js modules: lib1, main
    dirty js files:   lib1/l1
STEP 10..11:
    language: +IrIntraModuleInlinerBeforeKlibSerialization, +IrCrossModuleInlinerBeforeKlibSerialization
    libs: lib1, main
    dirty js modules: lib1, main
    dirty js files:   lib1/l1, main/m
