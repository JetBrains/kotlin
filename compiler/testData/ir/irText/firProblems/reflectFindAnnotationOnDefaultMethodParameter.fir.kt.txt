open annotation class Ann : Annotation {
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

}

interface I {
  fun m(@Ann s: String) {
  }

}

fun box(): String {
  val impl: <no name provided> = { // BLOCK
    local class <no name provided> : I {
      constructor() /* primary */ {
        super/*Any*/()
        /* <init>() */

      }

    }

    <no name provided>()
  }
  val method: @FlexibleNullability Method? = <get-javaClass><<no name provided>>(/* <this> = impl */).getMethod(p0 = "m", p1 = [<get-java><String>(/* <this> = String::class */)])
  val parameter: @FlexibleNullability Parameter? = method /*!! Method */.getParameters() /*!! @FlexibleArrayElementVariance Array<out @FlexibleNullability Parameter?> */.get(index = 0)
  val size: Int = parameter /*!! Parameter */.getAnnotations() /*!! @FlexibleArrayElementVariance Array<out @FlexibleNullability Annotation?> */.<get-size>()
  when {
    EQEQ(arg0 = size, arg1 = 1) -> return "OK"
  }
  return "ERR: " + size
}

