/*
 * Copyright 2010-2024 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.analysis.api.standalone.fir.test.cases.generated.cases.components.scopeProvider;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.kotlin.analysis.api.standalone.fir.test.configurators.AnalysisApiFirStandaloneModeTestConfiguratorFactory;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisApiTestConfiguratorFactoryData;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisApiTestConfigurator;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.TestModuleKind;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.FrontendKind;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisSessionMode;
import org.jetbrains.kotlin.analysis.test.framework.test.configurators.AnalysisApiMode;
import org.jetbrains.kotlin.analysis.api.impl.base.test.cases.components.scopeProvider.AbstractScopeContextForPositionTest;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Nested;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.analysis.api.GenerateAnalysisApiTestsKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition")
@TestDataPath("$PROJECT_ROOT")
public class FirStandaloneNormalAnalysisSourceModuleScopeContextForPositionTestGenerated extends AbstractScopeContextForPositionTest {
  @NotNull
  @Override
  public AnalysisApiTestConfigurator getConfigurator() {
    return AnalysisApiFirStandaloneModeTestConfiguratorFactory.INSTANCE.createConfigurator(
      new AnalysisApiTestConfiguratorFactoryData(
        FrontendKind.Fir,
        TestModuleKind.Source,
        AnalysisSessionMode.Normal,
        AnalysisApiMode.Standalone
      )
    );
  }

  @Test
  public void testAllFilesPresentInScopeContextForPosition() {
    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition"), Pattern.compile("^(.+)\\.kt$"), null, true);
  }

  @Test
  @TestMetadata("annotationWithoutDeclaration.kt")
  public void testAnnotationWithoutDeclaration() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/annotationWithoutDeclaration.kt");
  }

  @Test
  @TestMetadata("classPropertyDelegate.kt")
  public void testClassPropertyDelegate() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/classPropertyDelegate.kt");
  }

  @Test
  @TestMetadata("classPropertyInitializer.kt")
  public void testClassPropertyInitializer() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/classPropertyInitializer.kt");
  }

  @Test
  @TestMetadata("classifiersCompanionObject.kt")
  public void testClassifiersCompanionObject() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/classifiersCompanionObject.kt");
  }

  @Test
  @TestMetadata("classifiersFromParentCompanionObject.kt")
  public void testClassifiersFromParentCompanionObject() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/classifiersFromParentCompanionObject.kt");
  }

  @Test
  @TestMetadata("contextReceiver.kt")
  public void testContextReceiver() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextReceiver.kt");
  }

  @Test
  @TestMetadata("contextReceiverWithoutDeclaration.kt")
  public void testContextReceiverWithoutDeclaration() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextReceiverWithoutDeclaration.kt");
  }

  @Test
  @TestMetadata("emptyContextForPositionInImportDirective.kt")
  public void testEmptyContextForPositionInImportDirective() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/emptyContextForPositionInImportDirective.kt");
  }

  @Test
  @TestMetadata("emptyContextForPositionInPackageDirective.kt")
  public void testEmptyContextForPositionInPackageDirective() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/emptyContextForPositionInPackageDirective.kt");
  }

  @Test
  @TestMetadata("enumEntry.kt")
  public void testEnumEntry() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/enumEntry.kt");
  }

  @Test
  @TestMetadata("errorType.kt")
  public void testErrorType() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/errorType.kt");
  }

  @Test
  @TestMetadata("forLoopVariable.kt")
  public void testForLoopVariable() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/forLoopVariable.kt");
  }

  @Test
  @TestMetadata("kDocOnClass.kt")
  public void testKDocOnClass() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/kDocOnClass.kt");
  }

  @Test
  @TestMetadata("kDocOnFunction.kt")
  public void testKDocOnFunction() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/kDocOnFunction.kt");
  }

  @Test
  @TestMetadata("kDocWithoutDeclaration.kt")
  public void testKDocWithoutDeclaration() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/kDocWithoutDeclaration.kt");
  }

  @Test
  @TestMetadata("localTypeScope.kt")
  public void testLocalTypeScope() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/localTypeScope.kt");
  }

  @Test
  @TestMetadata("notEnabledKotlinPackage.kt")
  public void testNotEnabledKotlinPackage() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/notEnabledKotlinPackage.kt");
  }

  @Test
  @TestMetadata("simpleScopeContextForPosition.kt")
  public void testSimpleScopeContextForPosition() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/simpleScopeContextForPosition.kt");
  }

  @Test
  @TestMetadata("smartCastInAnonymousFunction.kt")
  public void testSmartCastInAnonymousFunction() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/smartCastInAnonymousFunction.kt");
  }

  @Test
  @TestMetadata("smartCastInAnonymousFunctionInWhenEntry.kt")
  public void testSmartCastInAnonymousFunctionInWhenEntry() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/smartCastInAnonymousFunctionInWhenEntry.kt");
  }

  @Test
  @TestMetadata("smartCastInWhenEntryCondition.kt")
  public void testSmartCastInWhenEntryCondition() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/smartCastInWhenEntryCondition.kt");
  }

  @Test
  @TestMetadata("superTypeConstructor.kt")
  public void testSuperTypeConstructor() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/superTypeConstructor.kt");
  }

  @Test
  @TestMetadata("superTypeConstructor_lambda.kt")
  public void testSuperTypeConstructor_lambda() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/superTypeConstructor_lambda.kt");
  }

  @Test
  @TestMetadata("superTypeConstructor_nestedClasses.kt")
  public void testSuperTypeConstructor_nestedClasses() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/superTypeConstructor_nestedClasses.kt");
  }

  @Test
  @TestMetadata("superTypeConstructor_nestedClasses_typeArgument.kt")
  public void testSuperTypeConstructor_nestedClasses_typeArgument() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/superTypeConstructor_nestedClasses_typeArgument.kt");
  }

  @Test
  @TestMetadata("superTypeDelegate.kt")
  public void testSuperTypeDelegate() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/superTypeDelegate.kt");
  }

  @Test
  @TestMetadata("syntheticPropertiesScope.kt")
  public void testSyntheticPropertiesScope() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/syntheticPropertiesScope.kt");
  }

  @Test
  @TestMetadata("valueClassFromPackage.kt")
  public void testValueClassFromPackage() {
    runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/valueClassFromPackage.kt");
  }

  @Nested
  @TestMetadata("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters")
  @TestDataPath("$PROJECT_ROOT")
  public class ContextParameters {
    @Test
    @TestMetadata("afterContextReceiverSmartCast.kt")
    public void testAfterContextReceiverSmartCast() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/afterContextReceiverSmartCast.kt");
    }

    @Test
    @TestMetadata("afterSmartCastFunction.kt")
    public void testAfterSmartCastFunction() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/afterSmartCastFunction.kt");
    }

    @Test
    @TestMetadata("afterSmartCastProperty.kt")
    public void testAfterSmartCastProperty() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/afterSmartCastProperty.kt");
    }

    @Test
    public void testAllFilesPresentInContextParameters() {
      KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters"), Pattern.compile("^(.+)\\.kt$"), null, true);
    }

    @Test
    @TestMetadata("anonymousFunctionContextParameter.kt")
    public void testAnonymousFunctionContextParameter() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/anonymousFunctionContextParameter.kt");
    }

    @Test
    @TestMetadata("anonymousFunctionContextReceiver.kt")
    public void testAnonymousFunctionContextReceiver() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/anonymousFunctionContextReceiver.kt");
    }

    @Test
    @TestMetadata("anonymousFunctionContextReceiver2.kt")
    public void testAnonymousFunctionContextReceiver2() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/anonymousFunctionContextReceiver2.kt");
    }

    @Test
    @TestMetadata("anonymousFunctionContextReceiver3.kt")
    public void testAnonymousFunctionContextReceiver3() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/anonymousFunctionContextReceiver3.kt");
    }

    @Test
    @TestMetadata("anonymousFunctionContextReceiverExpression.kt")
    public void testAnonymousFunctionContextReceiverExpression() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/anonymousFunctionContextReceiverExpression.kt");
    }

    @Test
    @TestMetadata("anonymousFunctionReceiverParameterWithContextParameter.kt")
    public void testAnonymousFunctionReceiverParameterWithContextParameter() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/anonymousFunctionReceiverParameterWithContextParameter.kt");
    }

    @Test
    @TestMetadata("anonymousFunctionReceiverParameterWithContextReceiver.kt")
    public void testAnonymousFunctionReceiverParameterWithContextReceiver() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/anonymousFunctionReceiverParameterWithContextReceiver.kt");
    }

    @Test
    @TestMetadata("anonymousFunctionTypeParameterWithContextParameter.kt")
    public void testAnonymousFunctionTypeParameterWithContextParameter() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/anonymousFunctionTypeParameterWithContextParameter.kt");
    }

    @Test
    @TestMetadata("anonymousFunctionTypeParameterWithContextReceiver.kt")
    public void testAnonymousFunctionTypeParameterWithContextReceiver() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/anonymousFunctionTypeParameterWithContextReceiver.kt");
    }

    @Test
    @TestMetadata("anonymousFunctionValueParameterWithContextParameter.kt")
    public void testAnonymousFunctionValueParameterWithContextParameter() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/anonymousFunctionValueParameterWithContextParameter.kt");
    }

    @Test
    @TestMetadata("anonymousFunctionValueParameterWithContextParameterWithDefaultValue.kt")
    public void testAnonymousFunctionValueParameterWithContextParameterWithDefaultValue() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/anonymousFunctionValueParameterWithContextParameterWithDefaultValue.kt");
    }

    @Test
    @TestMetadata("anonymousFunctionValueParameterWithContextReceiver.kt")
    public void testAnonymousFunctionValueParameterWithContextReceiver() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/anonymousFunctionValueParameterWithContextReceiver.kt");
    }

    @Test
    @TestMetadata("anonymousFunctionValueParameterWithContextReceiverWithDefaultValue.kt")
    public void testAnonymousFunctionValueParameterWithContextReceiverWithDefaultValue() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/anonymousFunctionValueParameterWithContextReceiverWithDefaultValue.kt");
    }

    @Test
    @TestMetadata("contextParameterAnonymousFunction.kt")
    public void testContextParameterAnonymousFunction() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/contextParameterAnonymousFunction.kt");
    }

    @Test
    @TestMetadata("contextParameterFunction.kt")
    public void testContextParameterFunction() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/contextParameterFunction.kt");
    }

    @Test
    @TestMetadata("contextParameterProperty.kt")
    public void testContextParameterProperty() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/contextParameterProperty.kt");
    }

    @Test
    @TestMetadata("contextReceiverSmartCast.kt")
    public void testContextReceiverSmartCast() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/contextReceiverSmartCast.kt");
    }

    @Test
    @TestMetadata("functionContextParameter.kt")
    public void testFunctionContextParameter() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/functionContextParameter.kt");
    }

    @Test
    @TestMetadata("functionContextReceiver.kt")
    public void testFunctionContextReceiver() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/functionContextReceiver.kt");
    }

    @Test
    @TestMetadata("functionReceiverParameterWithContextParameter.kt")
    public void testFunctionReceiverParameterWithContextParameter() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/functionReceiverParameterWithContextParameter.kt");
    }

    @Test
    @TestMetadata("functionReceiverParameterWithContextReceiver.kt")
    public void testFunctionReceiverParameterWithContextReceiver() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/functionReceiverParameterWithContextReceiver.kt");
    }

    @Test
    @TestMetadata("functionTypeParameterWithContextParameter.kt")
    public void testFunctionTypeParameterWithContextParameter() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/functionTypeParameterWithContextParameter.kt");
    }

    @Test
    @TestMetadata("functionTypeParameterWithContextReceiver.kt")
    public void testFunctionTypeParameterWithContextReceiver() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/functionTypeParameterWithContextReceiver.kt");
    }

    @Test
    @TestMetadata("functionValueParameterWithContextParameter.kt")
    public void testFunctionValueParameterWithContextParameter() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/functionValueParameterWithContextParameter.kt");
    }

    @Test
    @TestMetadata("functionValueParameterWithContextParameterWithDefaultValue.kt")
    public void testFunctionValueParameterWithContextParameterWithDefaultValue() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/functionValueParameterWithContextParameterWithDefaultValue.kt");
    }

    @Test
    @TestMetadata("functionValueParameterWithContextReceiver.kt")
    public void testFunctionValueParameterWithContextReceiver() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/functionValueParameterWithContextReceiver.kt");
    }

    @Test
    @TestMetadata("functionValueParameterWithContextReceiverWithDefaultValue.kt")
    public void testFunctionValueParameterWithContextReceiverWithDefaultValue() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/functionValueParameterWithContextReceiverWithDefaultValue.kt");
    }

    @Test
    @TestMetadata("functionWithContextParameter.kt")
    public void testFunctionWithContextParameter() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/functionWithContextParameter.kt");
    }

    @Test
    @TestMetadata("functionWithContextReceiver.kt")
    public void testFunctionWithContextReceiver() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/functionWithContextReceiver.kt");
    }

    @Test
    @TestMetadata("memberLevelFunction.kt")
    public void testMemberLevelFunction() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/memberLevelFunction.kt");
    }

    @Test
    @TestMetadata("memberLevelFunction2.kt")
    public void testMemberLevelFunction2() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/memberLevelFunction2.kt");
    }

    @Test
    @TestMetadata("memberLevelFunctionContextReceiver.kt")
    public void testMemberLevelFunctionContextReceiver() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/memberLevelFunctionContextReceiver.kt");
    }

    @Test
    @TestMetadata("memberLevelProperty.kt")
    public void testMemberLevelProperty() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/memberLevelProperty.kt");
    }

    @Test
    @TestMetadata("memberLevelProperty2.kt")
    public void testMemberLevelProperty2() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/memberLevelProperty2.kt");
    }

    @Test
    @TestMetadata("memberLevelPropertyAccessor.kt")
    public void testMemberLevelPropertyAccessor() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/memberLevelPropertyAccessor.kt");
    }

    @Test
    @TestMetadata("memberLevelPropertyAccessorContextReceiver.kt")
    public void testMemberLevelPropertyAccessorContextReceiver() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/memberLevelPropertyAccessorContextReceiver.kt");
    }

    @Test
    @TestMetadata("memberLevelPropertyContextReceiver.kt")
    public void testMemberLevelPropertyContextReceiver() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/memberLevelPropertyContextReceiver.kt");
    }

    @Test
    @TestMetadata("namedAnonymousFunction.kt")
    public void testNamedAnonymousFunction() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/namedAnonymousFunction.kt");
    }

    @Test
    @TestMetadata("namedAnonymousFunction2.kt")
    public void testNamedAnonymousFunction2() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/namedAnonymousFunction2.kt");
    }

    @Test
    @TestMetadata("namedAnonymousFunction3.kt")
    public void testNamedAnonymousFunction3() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/namedAnonymousFunction3.kt");
    }

    @Test
    @TestMetadata("namedAnonymousFunctionExpression.kt")
    public void testNamedAnonymousFunctionExpression() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/namedAnonymousFunctionExpression.kt");
    }

    @Test
    @TestMetadata("namedFunctionContextParameter.kt")
    public void testNamedFunctionContextParameter() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/namedFunctionContextParameter.kt");
    }

    @Test
    @TestMetadata("namedPropertyContextParameter.kt")
    public void testNamedPropertyContextParameter() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/namedPropertyContextParameter.kt");
    }

    @Test
    @TestMetadata("nestedContextParameter.kt")
    public void testNestedContextParameter() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/nestedContextParameter.kt");
    }

    @Test
    @TestMetadata("nestedContextParameterAfter.kt")
    public void testNestedContextParameterAfter() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/nestedContextParameterAfter.kt");
    }

    @Test
    @TestMetadata("propertyContextParameter.kt")
    public void testPropertyContextParameter() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/propertyContextParameter.kt");
    }

    @Test
    @TestMetadata("propertyContextReceiver.kt")
    public void testPropertyContextReceiver() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/propertyContextReceiver.kt");
    }

    @Test
    @TestMetadata("propertyReceiverParameterWithContextParameter.kt")
    public void testPropertyReceiverParameterWithContextParameter() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/propertyReceiverParameterWithContextParameter.kt");
    }

    @Test
    @TestMetadata("propertyReceiverParameterWithContextReceiver.kt")
    public void testPropertyReceiverParameterWithContextReceiver() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/propertyReceiverParameterWithContextReceiver.kt");
    }

    @Test
    @TestMetadata("propertyTypeParameterWithContextParameter.kt")
    public void testPropertyTypeParameterWithContextParameter() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/propertyTypeParameterWithContextParameter.kt");
    }

    @Test
    @TestMetadata("propertyTypeParameterWithContextReceiver.kt")
    public void testPropertyTypeParameterWithContextReceiver() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/propertyTypeParameterWithContextReceiver.kt");
    }

    @Test
    @TestMetadata("propertyWithContextParameter.kt")
    public void testPropertyWithContextParameter() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/propertyWithContextParameter.kt");
    }

    @Test
    @TestMetadata("propertyWithContextReceiver.kt")
    public void testPropertyWithContextReceiver() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/propertyWithContextReceiver.kt");
    }

    @Test
    @TestMetadata("smartCastFunction.kt")
    public void testSmartCastFunction() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/smartCastFunction.kt");
    }

    @Test
    @TestMetadata("smartCastProperty.kt")
    public void testSmartCastProperty() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/smartCastProperty.kt");
    }

    @Test
    @TestMetadata("topLevelFunction.kt")
    public void testTopLevelFunction() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/topLevelFunction.kt");
    }

    @Test
    @TestMetadata("topLevelFunction2.kt")
    public void testTopLevelFunction2() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/topLevelFunction2.kt");
    }

    @Test
    @TestMetadata("topLevelFunctionContextReceiver.kt")
    public void testTopLevelFunctionContextReceiver() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/topLevelFunctionContextReceiver.kt");
    }

    @Test
    @TestMetadata("topLevelProperty.kt")
    public void testTopLevelProperty() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/topLevelProperty.kt");
    }

    @Test
    @TestMetadata("topLevelProperty2.kt")
    public void testTopLevelProperty2() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/topLevelProperty2.kt");
    }

    @Test
    @TestMetadata("topLevelPropertyContextReceiver.kt")
    public void testTopLevelPropertyContextReceiver() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/topLevelPropertyContextReceiver.kt");
    }

    @Test
    @TestMetadata("unnamedAnonymousFunction.kt")
    public void testUnnamedAnonymousFunction() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/unnamedAnonymousFunction.kt");
    }

    @Test
    @TestMetadata("unnamedAnonymousFunction2.kt")
    public void testUnnamedAnonymousFunction2() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/unnamedAnonymousFunction2.kt");
    }

    @Test
    @TestMetadata("unnamedAnonymousFunction3.kt")
    public void testUnnamedAnonymousFunction3() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/unnamedAnonymousFunction3.kt");
    }

    @Test
    @TestMetadata("unnamedAnonymousFunctionExpression.kt")
    public void testUnnamedAnonymousFunctionExpression() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/unnamedAnonymousFunctionExpression.kt");
    }

    @Test
    @TestMetadata("unnamedFunctionContextParameter.kt")
    public void testUnnamedFunctionContextParameter() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/unnamedFunctionContextParameter.kt");
    }

    @Test
    @TestMetadata("unnamedPropertyContextParameter.kt")
    public void testUnnamedPropertyContextParameter() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/contextParameters/unnamedPropertyContextParameter.kt");
    }
  }

  @Nested
  @TestMetadata("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/withTestCompilerPluginEnabled")
  @TestDataPath("$PROJECT_ROOT")
  public class WithTestCompilerPluginEnabled {
    @Test
    public void testAllFilesPresentInWithTestCompilerPluginEnabled() {
      KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/withTestCompilerPluginEnabled"), Pattern.compile("^(.+)\\.kt$"), null, true);
    }

    @Test
    @TestMetadata("callShapeBasedInjector_receiver.kt")
    public void testCallShapeBasedInjector_receiver() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/withTestCompilerPluginEnabled/callShapeBasedInjector_receiver.kt");
    }

    @Test
    @TestMetadata("callShapeBasedInjector_variable.kt")
    public void testCallShapeBasedInjector_variable() {
      runTest("analysis/analysis-api/testData/components/scopeProvider/scopeContextForPosition/withTestCompilerPluginEnabled/callShapeBasedInjector_variable.kt");
    }
  }
}
