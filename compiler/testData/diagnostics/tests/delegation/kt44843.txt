package

public val bar2: [ERROR : <ERROR FUNCTION RETURN TYPE>]

package lt {

    package lt.neworld {

        package lt.neworld.compiler {

            public final class Foo {
                public constructor Foo()
                public final val bar: [ERROR : <ERROR FUNCTION RETURN TYPE>]
                public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
                public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
                public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
            }

            package lt.neworld.compiler.bar {
                public fun </*0*/ T, /*1*/ V> bar(): lt.neworld.compiler.bar.Bar<T, V>

                public final class Bar</*0*/ T, /*1*/ V> : kotlin.properties.ReadOnlyProperty<T, V> {
                    public constructor Bar</*0*/ T, /*1*/ V>()
                    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
                    public open override /*1*/ fun getValue(/*0*/ thisRef: T, /*1*/ property: kotlin.reflect.KProperty<*>): V
                    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
                    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
                }
            }
        }
    }
}
